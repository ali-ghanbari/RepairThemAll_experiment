cd /tmp/Nopol_Defects4J_Closure_127;
export JAVA_TOOL_OPTIONS=-Dfile.encoding=UTF8;
TZ="America/New_York"; export TZ;
export PATH="/usr/lib/jvm/java-1.8.0-openjdk-amd64/bin/:$PATH";
export JAVA_HOME="/usr/lib/jvm/java-1.8.0-openjdk-amd64/bin/";
time java -Xmx4048m -cp /home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/bin//../lib/tools.jar fr.inria.lille.repair.Main \
	--mode repair \
	--type pre_then_cond \
	--oracle angelic \
	--synthesis smt \
	--flocal gzoltar \
	--json \
	--solver z3 \
	--solver-path /home/tdurieux/defects4j4repair/script/../libs/z3/build/z3 \
	--complianceLevel 6 \
	--source src/ \
	--classpath "build/classes/:build/test/:/tmp/Nopol_Defects4J_Closure_127/build/classes:/tmp/Nopol_Defects4J_Closure_127/build/test:/tmp/Nopol_Defects4J_Closure_127/build/lib/rhino.jar:/tmp/Nopol_Defects4J_Closure_127/lib/ant.jar:/tmp/Nopol_Defects4J_Closure_127/lib/ant-launcher.jar:/tmp/Nopol_Defects4J_Closure_127/lib/args4j.jar:/tmp/Nopol_Defects4J_Closure_127/lib/guava.jar:/tmp/Nopol_Defects4J_Closure_127/lib/jarjar.jar:/tmp/Nopol_Defects4J_Closure_127/lib/json.jar:/tmp/Nopol_Defects4J_Closure_127/lib/jsr305.jar:/tmp/Nopol_Defects4J_Closure_127/lib/junit.jar:/tmp/Nopol_Defects4J_Closure_127/lib/caja-r4314.jar:/tmp/Nopol_Defects4J_Closure_127/lib/protobuf-java.jar:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar";
	echo "\n\nNode: `hostname`\n";
	echo "\n\nDate: `date`\n";
Picked up JAVA_TOOL_OPTIONS: -Dfile.encoding=UTF8
19:25:20.152 [main] INFO  fr.inria.lille.repair.nopol.NoPol - Source files: [src]
19:25:20.161 [main] INFO  fr.inria.lille.repair.nopol.NoPol - Classpath: [file:/tmp/Nopol_Defects4J_Closure_127/build/classes/, file:/tmp/Nopol_Defects4J_Closure_127/build/test/, file:/tmp/Nopol_Defects4J_Closure_127/build/classes/, file:/tmp/Nopol_Defects4J_Closure_127/build/test/, file:/tmp/Nopol_Defects4J_Closure_127/build/lib/rhino.jar, file:/tmp/Nopol_Defects4J_Closure_127/lib/ant.jar, file:/tmp/Nopol_Defects4J_Closure_127/lib/ant-launcher.jar, file:/tmp/Nopol_Defects4J_Closure_127/lib/args4j.jar, file:/tmp/Nopol_Defects4J_Closure_127/lib/guava.jar, file:/tmp/Nopol_Defects4J_Closure_127/lib/jarjar.jar, file:/tmp/Nopol_Defects4J_Closure_127/lib/json.jar, file:/tmp/Nopol_Defects4J_Closure_127/lib/jsr305.jar, file:/tmp/Nopol_Defects4J_Closure_127/lib/junit.jar, file:/tmp/Nopol_Defects4J_Closure_127/lib/caja-r4314.jar, file:/tmp/Nopol_Defects4J_Closure_127/lib/protobuf-java.jar, file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar]
19:25:20.162 [main] INFO  fr.inria.lille.repair.nopol.NoPol - Statement type: PRE_THEN_COND
19:25:20.162 [main] INFO  fr.inria.lille.repair.nopol.NoPol - Args: [com.google.debugging.sourcemap.Base64Test, com.google.debugging.sourcemap.Base64Test, com.google.debugging.sourcemap.Base64VLQTest, com.google.debugging.sourcemap.Base64VLQTest, com.google.debugging.sourcemap.SourceMapConsumerV1Test, com.google.debugging.sourcemap.SourceMapConsumerV1Test, com.google.debugging.sourcemap.SourceMapConsumerV2Test, com.google.debugging.sourcemap.SourceMapConsumerV2Test, com.google.debugging.sourcemap.SourceMapGeneratorV1Test, com.google.debugging.sourcemap.SourceMapGeneratorV1Test, com.google.debugging.sourcemap.SourceMapGeneratorV2Test, com.google.debugging.sourcemap.SourceMapGeneratorV2Test, com.google.debugging.sourcemap.SourceMapGeneratorV3Test, com.google.debugging.sourcemap.SourceMapGeneratorV3Test, com.google.javascript.jscomp.AliasExternalsTest, com.google.javascript.jscomp.AliasExternalsTest, com.google.javascript.jscomp.AliasKeywordsTest, com.google.javascript.jscomp.AliasKeywordsTest, com.google.javascript.jscomp.AliasStringsTest, com.google.javascript.jscomp.AliasStringsTest, com.google.javascript.jscomp.AmbiguatePropertiesTest, com.google.javascript.jscomp.AmbiguatePropertiesTest, com.google.javascript.jscomp.AngularPassTest, com.google.javascript.jscomp.AngularPassTest, com.google.javascript.jscomp.AstParallelizerTest, com.google.javascript.jscomp.AstParallelizerTest, com.google.javascript.jscomp.AstValidatorTest, com.google.javascript.jscomp.AstValidatorTest, com.google.javascript.jscomp.BasicErrorManagerTest, com.google.javascript.jscomp.BasicErrorManagerTest, com.google.javascript.jscomp.CallGraphTest, com.google.javascript.jscomp.CallGraphTest, com.google.javascript.jscomp.ChainCallsTest, com.google.javascript.jscomp.ChainCallsTest, com.google.javascript.jscomp.CheckAccessControlsTest, com.google.javascript.jscomp.CheckAccessControlsTest, com.google.javascript.jscomp.CheckDebuggerStatementTest, com.google.javascript.jscomp.CheckDebuggerStatementTest, com.google.javascript.jscomp.CheckGlobalNamesTest, com.google.javascript.jscomp.CheckGlobalNamesTest, com.google.javascript.jscomp.CheckGlobalThisTest, com.google.javascript.jscomp.CheckGlobalThisTest, com.google.javascript.jscomp.CheckMissingGetCssNameTest, com.google.javascript.jscomp.CheckMissingGetCssNameTest, com.google.javascript.jscomp.CheckMissingReturnTest, com.google.javascript.jscomp.CheckMissingReturnTest, com.google.javascript.jscomp.CheckPathsBetweenNodesTest, com.google.javascript.jscomp.CheckPathsBetweenNodesTest, com.google.javascript.jscomp.CheckProvidesTest, com.google.javascript.jscomp.CheckProvidesTest, com.google.javascript.jscomp.CheckRegExpTest, com.google.javascript.jscomp.CheckRegExpTest, com.google.javascript.jscomp.CheckRequiresForConstructorsTest, com.google.javascript.jscomp.CheckRequiresForConstructorsTest, com.google.javascript.jscomp.CheckSideEffectsTest, com.google.javascript.jscomp.CheckSideEffectsTest, com.google.javascript.jscomp.CheckSuspiciousCodeTest, com.google.javascript.jscomp.CheckSuspiciousCodeTest, com.google.javascript.jscomp.CheckUnreachableCodeTest, com.google.javascript.jscomp.CheckUnreachableCodeTest, com.google.javascript.jscomp.CleanupPassesTest, com.google.javascript.jscomp.CleanupPassesTest, com.google.javascript.jscomp.ClosureCodeRemovalTest, com.google.javascript.jscomp.ClosureCodeRemovalTest, com.google.javascript.jscomp.ClosureCodingConventionTest, com.google.javascript.jscomp.ClosureCodingConventionTest, com.google.javascript.jscomp.ClosureOptimizePrimitivesTest, com.google.javascript.jscomp.ClosureOptimizePrimitivesTest, com.google.javascript.jscomp.ClosureReverseAbstractInterpreterTest, com.google.javascript.jscomp.ClosureReverseAbstractInterpreterTest, com.google.javascript.jscomp.ClosureRewriteClassTest, com.google.javascript.jscomp.ClosureRewriteClassTest, com.google.javascript.jscomp.CoalesceVariableNamesTest, com.google.javascript.jscomp.CoalesceVariableNamesTest, com.google.javascript.jscomp.CodePrinterTest, com.google.javascript.jscomp.CodePrinterTest, com.google.javascript.jscomp.CollapseAnonymousFunctionsTest, com.google.javascript.jscomp.CollapseAnonymousFunctionsTest, com.google.javascript.jscomp.CollapsePropertiesTest, com.google.javascript.jscomp.CollapsePropertiesTest, com.google.javascript.jscomp.CollapseVariableDeclarationsTest, com.google.javascript.jscomp.CollapseVariableDeclarationsTest, com.google.javascript.jscomp.CombinedCompilerPassTest, com.google.javascript.jscomp.CombinedCompilerPassTest, com.google.javascript.jscomp.CommandLineRunnerTest, com.google.javascript.jscomp.CommandLineRunnerTest, com.google.javascript.jscomp.CompilerOptionsTest, com.google.javascript.jscomp.CompilerOptionsTest, com.google.javascript.jscomp.CompilerTest, com.google.javascript.jscomp.CompilerTest, com.google.javascript.jscomp.ConcreteTypeTest, com.google.javascript.jscomp.ConcreteTypeTest, com.google.javascript.jscomp.ConstCheckTest, com.google.javascript.jscomp.ConstCheckTest, com.google.javascript.jscomp.ControlFlowAnalysisTest, com.google.javascript.jscomp.ControlFlowAnalysisTest, com.google.javascript.jscomp.ControlStructureCheckTest, com.google.javascript.jscomp.ControlStructureCheckTest, com.google.javascript.jscomp.ConvertToDottedPropertiesTest, com.google.javascript.jscomp.ConvertToDottedPropertiesTest, com.google.javascript.jscomp.CreateSyntheticBlocksTest, com.google.javascript.jscomp.CreateSyntheticBlocksTest, com.google.javascript.jscomp.CrossModuleCodeMotionTest, com.google.javascript.jscomp.CrossModuleCodeMotionTest, com.google.javascript.jscomp.CrossModuleMethodMotionTest, com.google.javascript.jscomp.CrossModuleMethodMotionTest, com.google.javascript.jscomp.DataFlowAnalysisTest, com.google.javascript.jscomp.DataFlowAnalysisTest, com.google.javascript.jscomp.DeadAssignmentsEliminationTest, com.google.javascript.jscomp.DeadAssignmentsEliminationTest, com.google.javascript.jscomp.DefaultCodingConventionTest, com.google.javascript.jscomp.DefaultCodingConventionTest, com.google.javascript.jscomp.DefinitionsRemoverTest, com.google.javascript.jscomp.DefinitionsRemoverTest, com.google.javascript.jscomp.DenormalizeTest, com.google.javascript.jscomp.DenormalizeTest, com.google.javascript.jscomp.DevirtualizePrototypeMethodsTest, com.google.javascript.jscomp.DevirtualizePrototypeMethodsTest, com.google.javascript.jscomp.DiagnosticGroupTest, com.google.javascript.jscomp.DiagnosticGroupTest, com.google.javascript.jscomp.DisambiguatePropertiesTest, com.google.javascript.jscomp.DisambiguatePropertiesTest, com.google.javascript.jscomp.DotFormatterTest, com.google.javascript.jscomp.DotFormatterTest, com.google.javascript.jscomp.ExpandJqueryAliasesTest, com.google.javascript.jscomp.ExpandJqueryAliasesTest, com.google.javascript.jscomp.ExploitAssignsTest, com.google.javascript.jscomp.ExploitAssignsTest, com.google.javascript.jscomp.ExportTestFunctionsTest, com.google.javascript.jscomp.ExportTestFunctionsTest, com.google.javascript.jscomp.ExpressionDecomposerTest, com.google.javascript.jscomp.ExpressionDecomposerTest, com.google.javascript.jscomp.ExternExportsPassTest, com.google.javascript.jscomp.ExternExportsPassTest, com.google.javascript.jscomp.ExtractPrototypeMemberDeclarationsTest, com.google.javascript.jscomp.ExtractPrototypeMemberDeclarationsTest, com.google.javascript.jscomp.FixedPointGraphTraversalTest, com.google.javascript.jscomp.FixedPointGraphTraversalTest, com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest, com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest, com.google.javascript.jscomp.FunctionArgumentInjectorTest, com.google.javascript.jscomp.FunctionArgumentInjectorTest, com.google.javascript.jscomp.FunctionInjectorTest, com.google.javascript.jscomp.FunctionInjectorTest, com.google.javascript.jscomp.FunctionNamesTest, com.google.javascript.jscomp.FunctionNamesTest, com.google.javascript.jscomp.FunctionRewriterTest, com.google.javascript.jscomp.FunctionRewriterTest, com.google.javascript.jscomp.FunctionToBlockMutatorTest, com.google.javascript.jscomp.FunctionToBlockMutatorTest, com.google.javascript.jscomp.FunctionTypeBuilderTest, com.google.javascript.jscomp.FunctionTypeBuilderTest, com.google.javascript.jscomp.GatherRawExportsTest, com.google.javascript.jscomp.GatherRawExportsTest, com.google.javascript.jscomp.GatherSideEffectSubexpressionsCallbackTest, com.google.javascript.jscomp.GatherSideEffectSubexpressionsCallbackTest, com.google.javascript.jscomp.GenerateExportsTest, com.google.javascript.jscomp.GenerateExportsTest, com.google.javascript.jscomp.GlobalNamespaceTest, com.google.javascript.jscomp.GlobalNamespaceTest, com.google.javascript.jscomp.GlobalVarReferenceMapTest, com.google.javascript.jscomp.GlobalVarReferenceMapTest, com.google.javascript.jscomp.GoogleCodingConventionTest, com.google.javascript.jscomp.GoogleCodingConventionTest, com.google.javascript.jscomp.GroupVariableDeclarationsTest, com.google.javascript.jscomp.GroupVariableDeclarationsTest, com.google.javascript.jscomp.IgnoreCajaPropertiesTest, com.google.javascript.jscomp.IgnoreCajaPropertiesTest, com.google.javascript.jscomp.InferJSDocInfoTest, com.google.javascript.jscomp.InferJSDocInfoTest, com.google.javascript.jscomp.InlineCostEstimatorTest, com.google.javascript.jscomp.InlineCostEstimatorTest, com.google.javascript.jscomp.InlineFunctionsTest, com.google.javascript.jscomp.InlineFunctionsTest, com.google.javascript.jscomp.InlineObjectLiteralsTest, com.google.javascript.jscomp.InlineObjectLiteralsTest, com.google.javascript.jscomp.InlinePropertiesTest, com.google.javascript.jscomp.InlinePropertiesTest, com.google.javascript.jscomp.InlineSimpleMethodsTest, com.google.javascript.jscomp.InlineSimpleMethodsTest, com.google.javascript.jscomp.InlineVariablesConstantsTest, com.google.javascript.jscomp.InlineVariablesConstantsTest, com.google.javascript.jscomp.InlineVariablesTest, com.google.javascript.jscomp.InlineVariablesTest, com.google.javascript.jscomp.InstrumentFunctionsTest, com.google.javascript.jscomp.InstrumentFunctionsTest, com.google.javascript.jscomp.InstrumentMemoryAllocPassTest, com.google.javascript.jscomp.InstrumentMemoryAllocPassTest, com.google.javascript.jscomp.IntegrationTest, com.google.javascript.jscomp.IntegrationTest, com.google.javascript.jscomp.JSCompilerSourceExcerptProviderTest, com.google.javascript.jscomp.JSCompilerSourceExcerptProviderTest, com.google.javascript.jscomp.JSModuleGraphTest, com.google.javascript.jscomp.JSModuleGraphTest, com.google.javascript.jscomp.JSModuleTest, com.google.javascript.jscomp.JSModuleTest, com.google.javascript.jscomp.JsMessageExtractorTest, com.google.javascript.jscomp.JsMessageExtractorTest, com.google.javascript.jscomp.JsMessageTest, com.google.javascript.jscomp.JsMessageTest, com.google.javascript.jscomp.JsMessageVisitorTest, com.google.javascript.jscomp.JsMessageVisitorTest, com.google.javascript.jscomp.LightweightMessageFormatterTest, com.google.javascript.jscomp.LightweightMessageFormatterTest, com.google.javascript.jscomp.LinkedFlowScopeTest, com.google.javascript.jscomp.LinkedFlowScopeTest, com.google.javascript.jscomp.LiveVariableAnalysisTest, com.google.javascript.jscomp.LiveVariableAnalysisTest, com.google.javascript.jscomp.LooseTypeCheckTest, com.google.javascript.jscomp.LooseTypeCheckTest, com.google.javascript.jscomp.MakeDeclaredNamesUniqueTest, com.google.javascript.jscomp.MakeDeclaredNamesUniqueTest, com.google.javascript.jscomp.MarkNoSideEffectCallsTest, com.google.javascript.jscomp.MarkNoSideEffectCallsTest, com.google.javascript.jscomp.MaybeReachingVariableUseTest, com.google.javascript.jscomp.MaybeReachingVariableUseTest, com.google.javascript.jscomp.MemoizedScopeCreatorTest, com.google.javascript.jscomp.MemoizedScopeCreatorTest, com.google.javascript.jscomp.MinimizeExitPointsTest, com.google.javascript.jscomp.MinimizeExitPointsTest, com.google.javascript.jscomp.MoveFunctionDeclarationsTest, com.google.javascript.jscomp.MoveFunctionDeclarationsTest, com.google.javascript.jscomp.MultiPassTest, com.google.javascript.jscomp.MultiPassTest, com.google.javascript.jscomp.MustBeReachingVariableDefTest, com.google.javascript.jscomp.MustBeReachingVariableDefTest, com.google.javascript.jscomp.NameAnalyzerTest, com.google.javascript.jscomp.NameAnalyzerTest, com.google.javascript.jscomp.NameAnonymousFunctionsMappedTest, com.google.javascript.jscomp.NameAnonymousFunctionsMappedTest, com.google.javascript.jscomp.NameAnonymousFunctionsTest, com.google.javascript.jscomp.NameAnonymousFunctionsTest, com.google.javascript.jscomp.NodeIteratorsTest, com.google.javascript.jscomp.NodeIteratorsTest, com.google.javascript.jscomp.NodeTraversalTest, com.google.javascript.jscomp.NodeTraversalTest, com.google.javascript.jscomp.NodeUtilTest, com.google.javascript.jscomp.NodeUtilTest, com.google.javascript.jscomp.NormalizeTest, com.google.javascript.jscomp.NormalizeTest, com.google.javascript.jscomp.ObjectPropertyStringPostprocessTest, com.google.javascript.jscomp.ObjectPropertyStringPostprocessTest, com.google.javascript.jscomp.ObjectPropertyStringPreprocessTest, com.google.javascript.jscomp.ObjectPropertyStringPreprocessTest, com.google.javascript.jscomp.OptimizeArgumentsArrayTest, com.google.javascript.jscomp.OptimizeArgumentsArrayTest, com.google.javascript.jscomp.OptimizeCallsTest, com.google.javascript.jscomp.OptimizeCallsTest, com.google.javascript.jscomp.OptimizeParametersTest, com.google.javascript.jscomp.OptimizeParametersTest, com.google.javascript.jscomp.OptimizeReturnsTest, com.google.javascript.jscomp.OptimizeReturnsTest, com.google.javascript.jscomp.PeepholeCollectPropertyAssignmentsTest, com.google.javascript.jscomp.PeepholeCollectPropertyAssignmentsTest, com.google.javascript.jscomp.PeepholeFoldConstantsTest, com.google.javascript.jscomp.PeepholeFoldConstantsTest, com.google.javascript.jscomp.PeepholeFoldWithTypesTest, com.google.javascript.jscomp.PeepholeFoldWithTypesTest, com.google.javascript.jscomp.PeepholeIntegrationTest, com.google.javascript.jscomp.PeepholeIntegrationTest, com.google.javascript.jscomp.PeepholeOptimizationsPassTest, com.google.javascript.jscomp.PeepholeOptimizationsPassTest, com.google.javascript.jscomp.PeepholeRemoveDeadCodeTest, com.google.javascript.jscomp.PeepholeRemoveDeadCodeTest, com.google.javascript.jscomp.PeepholeReplaceKnownMethodsTest, com.google.javascript.jscomp.PeepholeReplaceKnownMethodsTest, com.google.javascript.jscomp.PeepholeSimplifyRegExpTest, com.google.javascript.jscomp.PeepholeSimplifyRegExpTest, com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntaxTest, com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntaxTest, com.google.javascript.jscomp.PhaseOptimizerTest, com.google.javascript.jscomp.PhaseOptimizerTest, com.google.javascript.jscomp.PrepareAstTest, com.google.javascript.jscomp.PrepareAstTest, com.google.javascript.jscomp.ProcessClosurePrimitivesTest, com.google.javascript.jscomp.ProcessClosurePrimitivesTest, com.google.javascript.jscomp.ProcessCommonJSModulesTest, com.google.javascript.jscomp.ProcessCommonJSModulesTest, com.google.javascript.jscomp.ProcessDefinesTest, com.google.javascript.jscomp.ProcessDefinesTest, com.google.javascript.jscomp.ProcessTweaksTest, com.google.javascript.jscomp.ProcessTweaksTest, com.google.javascript.jscomp.PureFunctionIdentifierTest, com.google.javascript.jscomp.PureFunctionIdentifierTest, com.google.javascript.jscomp.RecordFunctionInformationTest, com.google.javascript.jscomp.RecordFunctionInformationTest, com.google.javascript.jscomp.RemoveTryCatchTest, com.google.javascript.jscomp.RemoveTryCatchTest, com.google.javascript.jscomp.RemoveUnusedClassPropertiesTest, com.google.javascript.jscomp.RemoveUnusedClassPropertiesTest, com.google.javascript.jscomp.RemoveUnusedNamesTest, com.google.javascript.jscomp.RemoveUnusedNamesTest, com.google.javascript.jscomp.RemoveUnusedPrototypePropertiesTest, com.google.javascript.jscomp.RemoveUnusedPrototypePropertiesTest, com.google.javascript.jscomp.RemoveUnusedVarsTest, com.google.javascript.jscomp.RemoveUnusedVarsTest, com.google.javascript.jscomp.RenameLabelsTest, com.google.javascript.jscomp.RenameLabelsTest, com.google.javascript.jscomp.RenameLocalVarsTest, com.google.javascript.jscomp.RenameLocalVarsTest, com.google.javascript.jscomp.RenamePropertiesTest, com.google.javascript.jscomp.RenamePropertiesTest, com.google.javascript.jscomp.RenamePrototypesTest, com.google.javascript.jscomp.RenamePrototypesTest, com.google.javascript.jscomp.RenameVarsTest, com.google.javascript.jscomp.RenameVarsTest, com.google.javascript.jscomp.ReorderConstantExpressionTest, com.google.javascript.jscomp.ReorderConstantExpressionTest, com.google.javascript.jscomp.ReplaceCssNamesTest, com.google.javascript.jscomp.ReplaceCssNamesTest, com.google.javascript.jscomp.ReplaceIdGeneratorsTest, com.google.javascript.jscomp.ReplaceIdGeneratorsTest, com.google.javascript.jscomp.ReplaceMessagesForChromeTest, com.google.javascript.jscomp.ReplaceMessagesForChromeTest, com.google.javascript.jscomp.ReplaceMessagesTest, com.google.javascript.jscomp.ReplaceMessagesTest, com.google.javascript.jscomp.ReplaceStringsTest, com.google.javascript.jscomp.ReplaceStringsTest, com.google.javascript.jscomp.RescopeGlobalSymbolsTest, com.google.javascript.jscomp.RescopeGlobalSymbolsTest, com.google.javascript.jscomp.RhinoErrorReporterTest, com.google.javascript.jscomp.RhinoErrorReporterTest, com.google.javascript.jscomp.RuntimeTypeCheckTest, com.google.javascript.jscomp.RuntimeTypeCheckTest, com.google.javascript.jscomp.SanityCheckTest, com.google.javascript.jscomp.SanityCheckTest, com.google.javascript.jscomp.ScopedAliasesTest, com.google.javascript.jscomp.ScopedAliasesTest, com.google.javascript.jscomp.SemanticReverseAbstractInterpreterTest, com.google.javascript.jscomp.SemanticReverseAbstractInterpreterTest, com.google.javascript.jscomp.ShadowVariablesTest, com.google.javascript.jscomp.ShadowVariablesTest, com.google.javascript.jscomp.SideEffectsAnalysisTest, com.google.javascript.jscomp.SideEffectsAnalysisTest, com.google.javascript.jscomp.SimpleDefinitionFinderTest, com.google.javascript.jscomp.SimpleDefinitionFinderTest, com.google.javascript.jscomp.SimpleFunctionAliasAnalysisTest, com.google.javascript.jscomp.SimpleFunctionAliasAnalysisTest, com.google.javascript.jscomp.SourceInformationAnnotatorTest, com.google.javascript.jscomp.SourceInformationAnnotatorTest, com.google.javascript.jscomp.SourceMapTest, com.google.javascript.jscomp.SourceMapTest, com.google.javascript.jscomp.SpecializeModuleTest, com.google.javascript.jscomp.SpecializeModuleTest, com.google.javascript.jscomp.StatementFusionTest, com.google.javascript.jscomp.StatementFusionTest, com.google.javascript.jscomp.StrictModeCheckTest, com.google.javascript.jscomp.StrictModeCheckTest, com.google.javascript.jscomp.StripCodeTest, com.google.javascript.jscomp.StripCodeTest, com.google.javascript.jscomp.SymbolTableTest, com.google.javascript.jscomp.SymbolTableTest, com.google.javascript.jscomp.SyntacticScopeCreatorTest, com.google.javascript.jscomp.SyntacticScopeCreatorTest, com.google.javascript.jscomp.TightenTypesTest, com.google.javascript.jscomp.TightenTypesTest, com.google.javascript.jscomp.TransformAMDToCJSModuleTest, com.google.javascript.jscomp.TransformAMDToCJSModuleTest, com.google.javascript.jscomp.TypeCheckFunctionCheckTest, com.google.javascript.jscomp.TypeCheckFunctionCheckTest, com.google.javascript.jscomp.TypeCheckTest, com.google.javascript.jscomp.TypeCheckTest, com.google.javascript.jscomp.TypeInferenceTest, com.google.javascript.jscomp.TypeInferenceTest, com.google.javascript.jscomp.TypeValidatorTest, com.google.javascript.jscomp.TypeValidatorTest, com.google.javascript.jscomp.TypedScopeCreatorTest, com.google.javascript.jscomp.TypedScopeCreatorTest, com.google.javascript.jscomp.UnreachableCodeEliminationTest, com.google.javascript.jscomp.UnreachableCodeEliminationTest, com.google.javascript.jscomp.VarCheckTest, com.google.javascript.jscomp.VarCheckTest, com.google.javascript.jscomp.VariableMapTest, com.google.javascript.jscomp.VariableMapTest, com.google.javascript.jscomp.VariableReferenceCheckTest, com.google.javascript.jscomp.VariableReferenceCheckTest, com.google.javascript.jscomp.VariableVisibilityAnalysisTest, com.google.javascript.jscomp.VariableVisibilityAnalysisTest, com.google.javascript.jscomp.XtbMessageBundleTest, com.google.javascript.jscomp.XtbMessageBundleTest, com.google.javascript.jscomp.deps.DepsFileParserTest, com.google.javascript.jscomp.deps.DepsFileParserTest, com.google.javascript.jscomp.deps.JsFileLineParserTest, com.google.javascript.jscomp.deps.JsFileLineParserTest, com.google.javascript.jscomp.deps.JsFileParserTest, com.google.javascript.jscomp.deps.JsFileParserTest, com.google.javascript.jscomp.deps.JsFunctionParserTest, com.google.javascript.jscomp.deps.JsFunctionParserTest, com.google.javascript.jscomp.deps.SortedDependenciesTest, com.google.javascript.jscomp.deps.SortedDependenciesTest, com.google.javascript.jscomp.graph.GraphColoringTest, com.google.javascript.jscomp.graph.GraphColoringTest, com.google.javascript.jscomp.graph.GraphPrunerTest, com.google.javascript.jscomp.graph.GraphPrunerTest, com.google.javascript.jscomp.graph.GraphReachabilityTest, com.google.javascript.jscomp.graph.GraphReachabilityTest, com.google.javascript.jscomp.graph.GraphTest, com.google.javascript.jscomp.graph.GraphTest, com.google.javascript.jscomp.graph.StandardUnionFindTest, com.google.javascript.jscomp.graph.StandardUnionFindTest, com.google.javascript.jscomp.jsonml.JsonMLConversionTest, com.google.javascript.jscomp.jsonml.JsonMLConversionTest, com.google.javascript.jscomp.jsonml.JsonMLValidationTest, com.google.javascript.jscomp.jsonml.JsonMLValidationTest, com.google.javascript.jscomp.jsonml.SecureCompilerTest, com.google.javascript.jscomp.jsonml.SecureCompilerTest, com.google.javascript.jscomp.parsing.IRFactoryTest, com.google.javascript.jscomp.parsing.IRFactoryTest, com.google.javascript.jscomp.parsing.JsDocInfoParserTest, com.google.javascript.jscomp.parsing.JsDocInfoParserTest, com.google.javascript.jscomp.parsing.JsDocTokenStreamTest, com.google.javascript.jscomp.parsing.JsDocTokenStreamTest, com.google.javascript.jscomp.parsing.ParserTest, com.google.javascript.jscomp.parsing.ParserTest, com.google.javascript.jscomp.regex.CharRangesTest, com.google.javascript.jscomp.regex.CharRangesTest, com.google.javascript.rhino.IRTest, com.google.javascript.rhino.IRTest, com.google.javascript.rhino.JSDocInfoTest, com.google.javascript.rhino.JSDocInfoTest, com.google.javascript.rhino.NodeTest, com.google.javascript.rhino.NodeTest, com.google.javascript.rhino.jstype.BooleanLiteralSetTest, com.google.javascript.rhino.jstype.BooleanLiteralSetTest, com.google.javascript.rhino.jstype.EnumElementTypeTest, com.google.javascript.rhino.jstype.EnumElementTypeTest, com.google.javascript.rhino.jstype.FunctionParamBuilderTest, com.google.javascript.rhino.jstype.FunctionParamBuilderTest, com.google.javascript.rhino.jstype.FunctionTypeTest, com.google.javascript.rhino.jstype.FunctionTypeTest, com.google.javascript.rhino.jstype.JSTypeRegistryTest, com.google.javascript.rhino.jstype.JSTypeRegistryTest, com.google.javascript.rhino.jstype.JSTypeTest, com.google.javascript.rhino.jstype.JSTypeTest, com.google.javascript.rhino.jstype.NamedTypeTest, com.google.javascript.rhino.jstype.NamedTypeTest, com.google.javascript.rhino.jstype.PrototypeObjectTypeTest, com.google.javascript.rhino.jstype.PrototypeObjectTypeTest, com.google.javascript.rhino.jstype.RecordTypeTest, com.google.javascript.rhino.jstype.RecordTypeTest, com.google.javascript.rhino.jstype.TemplatizedTypeTest, com.google.javascript.rhino.jstype.TemplatizedTypeTest, com.google.javascript.rhino.jstype.TernaryValueTest, com.google.javascript.rhino.jstype.TernaryValueTest, com.google.javascript.rhino.jstype.UnionTypeBuilderTest, com.google.javascript.rhino.jstype.UnionTypeBuilderTest, com.google.javascript.rhino.jstype.UnionTypeTest, com.google.javascript.rhino.jstype.UnionTypeTest]
19:25:20.165 [main] INFO  fr.inria.lille.repair.nopol.NoPol - Config: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=true, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=PRE_THEN_COND, synthesis=SMT, oracle=ANGELIC, solver=Z3, solverPath='/home/tdurieux/defects4j4repair/script/../libs/z3/build/z3', projectSources=[src], projectClasspath='[Ljava.net.URL;@66d33a', projectTests=[com.google.debugging.sourcemap.Base64Test, com.google.debugging.sourcemap.Base64Test, com.google.debugging.sourcemap.Base64VLQTest, com.google.debugging.sourcemap.Base64VLQTest, com.google.debugging.sourcemap.SourceMapConsumerV1Test, com.google.debugging.sourcemap.SourceMapConsumerV1Test, com.google.debugging.sourcemap.SourceMapConsumerV2Test, com.google.debugging.sourcemap.SourceMapConsumerV2Test, com.google.debugging.sourcemap.SourceMapGeneratorV1Test, com.google.debugging.sourcemap.SourceMapGeneratorV1Test, com.google.debugging.sourcemap.SourceMapGeneratorV2Test, com.google.debugging.sourcemap.SourceMapGeneratorV2Test, com.google.debugging.sourcemap.SourceMapGeneratorV3Test, com.google.debugging.sourcemap.SourceMapGeneratorV3Test, com.google.javascript.jscomp.AliasExternalsTest, com.google.javascript.jscomp.AliasExternalsTest, com.google.javascript.jscomp.AliasKeywordsTest, com.google.javascript.jscomp.AliasKeywordsTest, com.google.javascript.jscomp.AliasStringsTest, com.google.javascript.jscomp.AliasStringsTest, com.google.javascript.jscomp.AmbiguatePropertiesTest, com.google.javascript.jscomp.AmbiguatePropertiesTest, com.google.javascript.jscomp.AngularPassTest, com.google.javascript.jscomp.AngularPassTest, com.google.javascript.jscomp.AstParallelizerTest, com.google.javascript.jscomp.AstParallelizerTest, com.google.javascript.jscomp.AstValidatorTest, com.google.javascript.jscomp.AstValidatorTest, com.google.javascript.jscomp.BasicErrorManagerTest, com.google.javascript.jscomp.BasicErrorManagerTest, com.google.javascript.jscomp.CallGraphTest, com.google.javascript.jscomp.CallGraphTest, com.google.javascript.jscomp.ChainCallsTest, com.google.javascript.jscomp.ChainCallsTest, com.google.javascript.jscomp.CheckAccessControlsTest, com.google.javascript.jscomp.CheckAccessControlsTest, com.google.javascript.jscomp.CheckDebuggerStatementTest, com.google.javascript.jscomp.CheckDebuggerStatementTest, com.google.javascript.jscomp.CheckGlobalNamesTest, com.google.javascript.jscomp.CheckGlobalNamesTest, com.google.javascript.jscomp.CheckGlobalThisTest, com.google.javascript.jscomp.CheckGlobalThisTest, com.google.javascript.jscomp.CheckMissingGetCssNameTest, com.google.javascript.jscomp.CheckMissingGetCssNameTest, com.google.javascript.jscomp.CheckMissingReturnTest, com.google.javascript.jscomp.CheckMissingReturnTest, com.google.javascript.jscomp.CheckPathsBetweenNodesTest, com.google.javascript.jscomp.CheckPathsBetweenNodesTest, com.google.javascript.jscomp.CheckProvidesTest, com.google.javascript.jscomp.CheckProvidesTest, com.google.javascript.jscomp.CheckRegExpTest, com.google.javascript.jscomp.CheckRegExpTest, com.google.javascript.jscomp.CheckRequiresForConstructorsTest, com.google.javascript.jscomp.CheckRequiresForConstructorsTest, com.google.javascript.jscomp.CheckSideEffectsTest, com.google.javascript.jscomp.CheckSideEffectsTest, com.google.javascript.jscomp.CheckSuspiciousCodeTest, com.google.javascript.jscomp.CheckSuspiciousCodeTest, com.google.javascript.jscomp.CheckUnreachableCodeTest, com.google.javascript.jscomp.CheckUnreachableCodeTest, com.google.javascript.jscomp.CleanupPassesTest, com.google.javascript.jscomp.CleanupPassesTest, com.google.javascript.jscomp.ClosureCodeRemovalTest, com.google.javascript.jscomp.ClosureCodeRemovalTest, com.google.javascript.jscomp.ClosureCodingConventionTest, com.google.javascript.jscomp.ClosureCodingConventionTest, com.google.javascript.jscomp.ClosureOptimizePrimitivesTest, com.google.javascript.jscomp.ClosureOptimizePrimitivesTest, com.google.javascript.jscomp.ClosureReverseAbstractInterpreterTest, com.google.javascript.jscomp.ClosureReverseAbstractInterpreterTest, com.google.javascript.jscomp.ClosureRewriteClassTest, com.google.javascript.jscomp.ClosureRewriteClassTest, com.google.javascript.jscomp.CoalesceVariableNamesTest, com.google.javascript.jscomp.CoalesceVariableNamesTest, com.google.javascript.jscomp.CodePrinterTest, com.google.javascript.jscomp.CodePrinterTest, com.google.javascript.jscomp.CollapseAnonymousFunctionsTest, com.google.javascript.jscomp.CollapseAnonymousFunctionsTest, com.google.javascript.jscomp.CollapsePropertiesTest, com.google.javascript.jscomp.CollapsePropertiesTest, com.google.javascript.jscomp.CollapseVariableDeclarationsTest, com.google.javascript.jscomp.CollapseVariableDeclarationsTest, com.google.javascript.jscomp.CombinedCompilerPassTest, com.google.javascript.jscomp.CombinedCompilerPassTest, com.google.javascript.jscomp.CommandLineRunnerTest, com.google.javascript.jscomp.CommandLineRunnerTest, com.google.javascript.jscomp.CompilerOptionsTest, com.google.javascript.jscomp.CompilerOptionsTest, com.google.javascript.jscomp.CompilerTest, com.google.javascript.jscomp.CompilerTest, com.google.javascript.jscomp.ConcreteTypeTest, com.google.javascript.jscomp.ConcreteTypeTest, com.google.javascript.jscomp.ConstCheckTest, com.google.javascript.jscomp.ConstCheckTest, com.google.javascript.jscomp.ControlFlowAnalysisTest, com.google.javascript.jscomp.ControlFlowAnalysisTest, com.google.javascript.jscomp.ControlStructureCheckTest, com.google.javascript.jscomp.ControlStructureCheckTest, com.google.javascript.jscomp.ConvertToDottedPropertiesTest, com.google.javascript.jscomp.ConvertToDottedPropertiesTest, com.google.javascript.jscomp.CreateSyntheticBlocksTest, com.google.javascript.jscomp.CreateSyntheticBlocksTest, com.google.javascript.jscomp.CrossModuleCodeMotionTest, com.google.javascript.jscomp.CrossModuleCodeMotionTest, com.google.javascript.jscomp.CrossModuleMethodMotionTest, com.google.javascript.jscomp.CrossModuleMethodMotionTest, com.google.javascript.jscomp.DataFlowAnalysisTest, com.google.javascript.jscomp.DataFlowAnalysisTest, com.google.javascript.jscomp.DeadAssignmentsEliminationTest, com.google.javascript.jscomp.DeadAssignmentsEliminationTest, com.google.javascript.jscomp.DefaultCodingConventionTest, com.google.javascript.jscomp.DefaultCodingConventionTest, com.google.javascript.jscomp.DefinitionsRemoverTest, com.google.javascript.jscomp.DefinitionsRemoverTest, com.google.javascript.jscomp.DenormalizeTest, com.google.javascript.jscomp.DenormalizeTest, com.google.javascript.jscomp.DevirtualizePrototypeMethodsTest, com.google.javascript.jscomp.DevirtualizePrototypeMethodsTest, com.google.javascript.jscomp.DiagnosticGroupTest, com.google.javascript.jscomp.DiagnosticGroupTest, com.google.javascript.jscomp.DisambiguatePropertiesTest, com.google.javascript.jscomp.DisambiguatePropertiesTest, com.google.javascript.jscomp.DotFormatterTest, com.google.javascript.jscomp.DotFormatterTest, com.google.javascript.jscomp.ExpandJqueryAliasesTest, com.google.javascript.jscomp.ExpandJqueryAliasesTest, com.google.javascript.jscomp.ExploitAssignsTest, com.google.javascript.jscomp.ExploitAssignsTest, com.google.javascript.jscomp.ExportTestFunctionsTest, com.google.javascript.jscomp.ExportTestFunctionsTest, com.google.javascript.jscomp.ExpressionDecomposerTest, com.google.javascript.jscomp.ExpressionDecomposerTest, com.google.javascript.jscomp.ExternExportsPassTest, com.google.javascript.jscomp.ExternExportsPassTest, com.google.javascript.jscomp.ExtractPrototypeMemberDeclarationsTest, com.google.javascript.jscomp.ExtractPrototypeMemberDeclarationsTest, com.google.javascript.jscomp.FixedPointGraphTraversalTest, com.google.javascript.jscomp.FixedPointGraphTraversalTest, com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest, com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest, com.google.javascript.jscomp.FunctionArgumentInjectorTest, com.google.javascript.jscomp.FunctionArgumentInjectorTest, com.google.javascript.jscomp.FunctionInjectorTest, com.google.javascript.jscomp.FunctionInjectorTest, com.google.javascript.jscomp.FunctionNamesTest, com.google.javascript.jscomp.FunctionNamesTest, com.google.javascript.jscomp.FunctionRewriterTest, com.google.javascript.jscomp.FunctionRewriterTest, com.google.javascript.jscomp.FunctionToBlockMutatorTest, com.google.javascript.jscomp.FunctionToBlockMutatorTest, com.google.javascript.jscomp.FunctionTypeBuilderTest, com.google.javascript.jscomp.FunctionTypeBuilderTest, com.google.javascript.jscomp.GatherRawExportsTest, com.google.javascript.jscomp.GatherRawExportsTest, com.google.javascript.jscomp.GatherSideEffectSubexpressionsCallbackTest, com.google.javascript.jscomp.GatherSideEffectSubexpressionsCallbackTest, com.google.javascript.jscomp.GenerateExportsTest, com.google.javascript.jscomp.GenerateExportsTest, com.google.javascript.jscomp.GlobalNamespaceTest, com.google.javascript.jscomp.GlobalNamespaceTest, com.google.javascript.jscomp.GlobalVarReferenceMapTest, com.google.javascript.jscomp.GlobalVarReferenceMapTest, com.google.javascript.jscomp.GoogleCodingConventionTest, com.google.javascript.jscomp.GoogleCodingConventionTest, com.google.javascript.jscomp.GroupVariableDeclarationsTest, com.google.javascript.jscomp.GroupVariableDeclarationsTest, com.google.javascript.jscomp.IgnoreCajaPropertiesTest, com.google.javascript.jscomp.IgnoreCajaPropertiesTest, com.google.javascript.jscomp.InferJSDocInfoTest, com.google.javascript.jscomp.InferJSDocInfoTest, com.google.javascript.jscomp.InlineCostEstimatorTest, com.google.javascript.jscomp.InlineCostEstimatorTest, com.google.javascript.jscomp.InlineFunctionsTest, com.google.javascript.jscomp.InlineFunctionsTest, com.google.javascript.jscomp.InlineObjectLiteralsTest, com.google.javascript.jscomp.InlineObjectLiteralsTest, com.google.javascript.jscomp.InlinePropertiesTest, com.google.javascript.jscomp.InlinePropertiesTest, com.google.javascript.jscomp.InlineSimpleMethodsTest, com.google.javascript.jscomp.InlineSimpleMethodsTest, com.google.javascript.jscomp.InlineVariablesConstantsTest, com.google.javascript.jscomp.InlineVariablesConstantsTest, com.google.javascript.jscomp.InlineVariablesTest, com.google.javascript.jscomp.InlineVariablesTest, com.google.javascript.jscomp.InstrumentFunctionsTest, com.google.javascript.jscomp.InstrumentFunctionsTest, com.google.javascript.jscomp.InstrumentMemoryAllocPassTest, com.google.javascript.jscomp.InstrumentMemoryAllocPassTest, com.google.javascript.jscomp.IntegrationTest, com.google.javascript.jscomp.IntegrationTest, com.google.javascript.jscomp.JSCompilerSourceExcerptProviderTest, com.google.javascript.jscomp.JSCompilerSourceExcerptProviderTest, com.google.javascript.jscomp.JSModuleGraphTest, com.google.javascript.jscomp.JSModuleGraphTest, com.google.javascript.jscomp.JSModuleTest, com.google.javascript.jscomp.JSModuleTest, com.google.javascript.jscomp.JsMessageExtractorTest, com.google.javascript.jscomp.JsMessageExtractorTest, com.google.javascript.jscomp.JsMessageTest, com.google.javascript.jscomp.JsMessageTest, com.google.javascript.jscomp.JsMessageVisitorTest, com.google.javascript.jscomp.JsMessageVisitorTest, com.google.javascript.jscomp.LightweightMessageFormatterTest, com.google.javascript.jscomp.LightweightMessageFormatterTest, com.google.javascript.jscomp.LinkedFlowScopeTest, com.google.javascript.jscomp.LinkedFlowScopeTest, com.google.javascript.jscomp.LiveVariableAnalysisTest, com.google.javascript.jscomp.LiveVariableAnalysisTest, com.google.javascript.jscomp.LooseTypeCheckTest, com.google.javascript.jscomp.LooseTypeCheckTest, com.google.javascript.jscomp.MakeDeclaredNamesUniqueTest, com.google.javascript.jscomp.MakeDeclaredNamesUniqueTest, com.google.javascript.jscomp.MarkNoSideEffectCallsTest, com.google.javascript.jscomp.MarkNoSideEffectCallsTest, com.google.javascript.jscomp.MaybeReachingVariableUseTest, com.google.javascript.jscomp.MaybeReachingVariableUseTest, com.google.javascript.jscomp.MemoizedScopeCreatorTest, com.google.javascript.jscomp.MemoizedScopeCreatorTest, com.google.javascript.jscomp.MinimizeExitPointsTest, com.google.javascript.jscomp.MinimizeExitPointsTest, com.google.javascript.jscomp.MoveFunctionDeclarationsTest, com.google.javascript.jscomp.MoveFunctionDeclarationsTest, com.google.javascript.jscomp.MultiPassTest, com.google.javascript.jscomp.MultiPassTest, com.google.javascript.jscomp.MustBeReachingVariableDefTest, com.google.javascript.jscomp.MustBeReachingVariableDefTest, com.google.javascript.jscomp.NameAnalyzerTest, com.google.javascript.jscomp.NameAnalyzerTest, com.google.javascript.jscomp.NameAnonymousFunctionsMappedTest, com.google.javascript.jscomp.NameAnonymousFunctionsMappedTest, com.google.javascript.jscomp.NameAnonymousFunctionsTest, com.google.javascript.jscomp.NameAnonymousFunctionsTest, com.google.javascript.jscomp.NodeIteratorsTest, com.google.javascript.jscomp.NodeIteratorsTest, com.google.javascript.jscomp.NodeTraversalTest, com.google.javascript.jscomp.NodeTraversalTest, com.google.javascript.jscomp.NodeUtilTest, com.google.javascript.jscomp.NodeUtilTest, com.google.javascript.jscomp.NormalizeTest, com.google.javascript.jscomp.NormalizeTest, com.google.javascript.jscomp.ObjectPropertyStringPostprocessTest, com.google.javascript.jscomp.ObjectPropertyStringPostprocessTest, com.google.javascript.jscomp.ObjectPropertyStringPreprocessTest, com.google.javascript.jscomp.ObjectPropertyStringPreprocessTest, com.google.javascript.jscomp.OptimizeArgumentsArrayTest, com.google.javascript.jscomp.OptimizeArgumentsArrayTest, com.google.javascript.jscomp.OptimizeCallsTest, com.google.javascript.jscomp.OptimizeCallsTest, com.google.javascript.jscomp.OptimizeParametersTest, com.google.javascript.jscomp.OptimizeParametersTest, com.google.javascript.jscomp.OptimizeReturnsTest, com.google.javascript.jscomp.OptimizeReturnsTest, com.google.javascript.jscomp.PeepholeCollectPropertyAssignmentsTest, com.google.javascript.jscomp.PeepholeCollectPropertyAssignmentsTest, com.google.javascript.jscomp.PeepholeFoldConstantsTest, com.google.javascript.jscomp.PeepholeFoldConstantsTest, com.google.javascript.jscomp.PeepholeFoldWithTypesTest, com.google.javascript.jscomp.PeepholeFoldWithTypesTest, com.google.javascript.jscomp.PeepholeIntegrationTest, com.google.javascript.jscomp.PeepholeIntegrationTest, com.google.javascript.jscomp.PeepholeOptimizationsPassTest, com.google.javascript.jscomp.PeepholeOptimizationsPassTest, com.google.javascript.jscomp.PeepholeRemoveDeadCodeTest, com.google.javascript.jscomp.PeepholeRemoveDeadCodeTest, com.google.javascript.jscomp.PeepholeReplaceKnownMethodsTest, com.google.javascript.jscomp.PeepholeReplaceKnownMethodsTest, com.google.javascript.jscomp.PeepholeSimplifyRegExpTest, com.google.javascript.jscomp.PeepholeSimplifyRegExpTest, com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntaxTest, com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntaxTest, com.google.javascript.jscomp.PhaseOptimizerTest, com.google.javascript.jscomp.PhaseOptimizerTest, com.google.javascript.jscomp.PrepareAstTest, com.google.javascript.jscomp.PrepareAstTest, com.google.javascript.jscomp.ProcessClosurePrimitivesTest, com.google.javascript.jscomp.ProcessClosurePrimitivesTest, com.google.javascript.jscomp.ProcessCommonJSModulesTest, com.google.javascript.jscomp.ProcessCommonJSModulesTest, com.google.javascript.jscomp.ProcessDefinesTest, com.google.javascript.jscomp.ProcessDefinesTest, com.google.javascript.jscomp.ProcessTweaksTest, com.google.javascript.jscomp.ProcessTweaksTest, com.google.javascript.jscomp.PureFunctionIdentifierTest, com.google.javascript.jscomp.PureFunctionIdentifierTest, com.google.javascript.jscomp.RecordFunctionInformationTest, com.google.javascript.jscomp.RecordFunctionInformationTest, com.google.javascript.jscomp.RemoveTryCatchTest, com.google.javascript.jscomp.RemoveTryCatchTest, com.google.javascript.jscomp.RemoveUnusedClassPropertiesTest, com.google.javascript.jscomp.RemoveUnusedClassPropertiesTest, com.google.javascript.jscomp.RemoveUnusedNamesTest, com.google.javascript.jscomp.RemoveUnusedNamesTest, com.google.javascript.jscomp.RemoveUnusedPrototypePropertiesTest, com.google.javascript.jscomp.RemoveUnusedPrototypePropertiesTest, com.google.javascript.jscomp.RemoveUnusedVarsTest, com.google.javascript.jscomp.RemoveUnusedVarsTest, com.google.javascript.jscomp.RenameLabelsTest, com.google.javascript.jscomp.RenameLabelsTest, com.google.javascript.jscomp.RenameLocalVarsTest, com.google.javascript.jscomp.RenameLocalVarsTest, com.google.javascript.jscomp.RenamePropertiesTest, com.google.javascript.jscomp.RenamePropertiesTest, com.google.javascript.jscomp.RenamePrototypesTest, com.google.javascript.jscomp.RenamePrototypesTest, com.google.javascript.jscomp.RenameVarsTest, com.google.javascript.jscomp.RenameVarsTest, com.google.javascript.jscomp.ReorderConstantExpressionTest, com.google.javascript.jscomp.ReorderConstantExpressionTest, com.google.javascript.jscomp.ReplaceCssNamesTest, com.google.javascript.jscomp.ReplaceCssNamesTest, com.google.javascript.jscomp.ReplaceIdGeneratorsTest, com.google.javascript.jscomp.ReplaceIdGeneratorsTest, com.google.javascript.jscomp.ReplaceMessagesForChromeTest, com.google.javascript.jscomp.ReplaceMessagesForChromeTest, com.google.javascript.jscomp.ReplaceMessagesTest, com.google.javascript.jscomp.ReplaceMessagesTest, com.google.javascript.jscomp.ReplaceStringsTest, com.google.javascript.jscomp.ReplaceStringsTest, com.google.javascript.jscomp.RescopeGlobalSymbolsTest, com.google.javascript.jscomp.RescopeGlobalSymbolsTest, com.google.javascript.jscomp.RhinoErrorReporterTest, com.google.javascript.jscomp.RhinoErrorReporterTest, com.google.javascript.jscomp.RuntimeTypeCheckTest, com.google.javascript.jscomp.RuntimeTypeCheckTest, com.google.javascript.jscomp.SanityCheckTest, com.google.javascript.jscomp.SanityCheckTest, com.google.javascript.jscomp.ScopedAliasesTest, com.google.javascript.jscomp.ScopedAliasesTest, com.google.javascript.jscomp.SemanticReverseAbstractInterpreterTest, com.google.javascript.jscomp.SemanticReverseAbstractInterpreterTest, com.google.javascript.jscomp.ShadowVariablesTest, com.google.javascript.jscomp.ShadowVariablesTest, com.google.javascript.jscomp.SideEffectsAnalysisTest, com.google.javascript.jscomp.SideEffectsAnalysisTest, com.google.javascript.jscomp.SimpleDefinitionFinderTest, com.google.javascript.jscomp.SimpleDefinitionFinderTest, com.google.javascript.jscomp.SimpleFunctionAliasAnalysisTest, com.google.javascript.jscomp.SimpleFunctionAliasAnalysisTest, com.google.javascript.jscomp.SourceInformationAnnotatorTest, com.google.javascript.jscomp.SourceInformationAnnotatorTest, com.google.javascript.jscomp.SourceMapTest, com.google.javascript.jscomp.SourceMapTest, com.google.javascript.jscomp.SpecializeModuleTest, com.google.javascript.jscomp.SpecializeModuleTest, com.google.javascript.jscomp.StatementFusionTest, com.google.javascript.jscomp.StatementFusionTest, com.google.javascript.jscomp.StrictModeCheckTest, com.google.javascript.jscomp.StrictModeCheckTest, com.google.javascript.jscomp.StripCodeTest, com.google.javascript.jscomp.StripCodeTest, com.google.javascript.jscomp.SymbolTableTest, com.google.javascript.jscomp.SymbolTableTest, com.google.javascript.jscomp.SyntacticScopeCreatorTest, com.google.javascript.jscomp.SyntacticScopeCreatorTest, com.google.javascript.jscomp.TightenTypesTest, com.google.javascript.jscomp.TightenTypesTest, com.google.javascript.jscomp.TransformAMDToCJSModuleTest, com.google.javascript.jscomp.TransformAMDToCJSModuleTest, com.google.javascript.jscomp.TypeCheckFunctionCheckTest, com.google.javascript.jscomp.TypeCheckFunctionCheckTest, com.google.javascript.jscomp.TypeCheckTest, com.google.javascript.jscomp.TypeCheckTest, com.google.javascript.jscomp.TypeInferenceTest, com.google.javascript.jscomp.TypeInferenceTest, com.google.javascript.jscomp.TypeValidatorTest, com.google.javascript.jscomp.TypeValidatorTest, com.google.javascript.jscomp.TypedScopeCreatorTest, com.google.javascript.jscomp.TypedScopeCreatorTest, com.google.javascript.jscomp.UnreachableCodeEliminationTest, com.google.javascript.jscomp.UnreachableCodeEliminationTest, com.google.javascript.jscomp.VarCheckTest, com.google.javascript.jscomp.VarCheckTest, com.google.javascript.jscomp.VariableMapTest, com.google.javascript.jscomp.VariableMapTest, com.google.javascript.jscomp.VariableReferenceCheckTest, com.google.javascript.jscomp.VariableReferenceCheckTest, com.google.javascript.jscomp.VariableVisibilityAnalysisTest, com.google.javascript.jscomp.VariableVisibilityAnalysisTest, com.google.javascript.jscomp.XtbMessageBundleTest, com.google.javascript.jscomp.XtbMessageBundleTest, com.google.javascript.jscomp.deps.DepsFileParserTest, com.google.javascript.jscomp.deps.DepsFileParserTest, com.google.javascript.jscomp.deps.JsFileLineParserTest, com.google.javascript.jscomp.deps.JsFileLineParserTest, com.google.javascript.jscomp.deps.JsFileParserTest, com.google.javascript.jscomp.deps.JsFileParserTest, com.google.javascript.jscomp.deps.JsFunctionParserTest, com.google.javascript.jscomp.deps.JsFunctionParserTest, com.google.javascript.jscomp.deps.SortedDependenciesTest, com.google.javascript.jscomp.deps.SortedDependenciesTest, com.google.javascript.jscomp.graph.GraphColoringTest, com.google.javascript.jscomp.graph.GraphColoringTest, com.google.javascript.jscomp.graph.GraphPrunerTest, com.google.javascript.jscomp.graph.GraphPrunerTest, com.google.javascript.jscomp.graph.GraphReachabilityTest, com.google.javascript.jscomp.graph.GraphReachabilityTest, com.google.javascript.jscomp.graph.GraphTest, com.google.javascript.jscomp.graph.GraphTest, com.google.javascript.jscomp.graph.StandardUnionFindTest, com.google.javascript.jscomp.graph.StandardUnionFindTest, com.google.javascript.jscomp.jsonml.JsonMLConversionTest, com.google.javascript.jscomp.jsonml.JsonMLConversionTest, com.google.javascript.jscomp.jsonml.JsonMLValidationTest, com.google.javascript.jscomp.jsonml.JsonMLValidationTest, com.google.javascript.jscomp.jsonml.SecureCompilerTest, com.google.javascript.jscomp.jsonml.SecureCompilerTest, com.google.javascript.jscomp.parsing.IRFactoryTest, com.google.javascript.jscomp.parsing.IRFactoryTest, com.google.javascript.jscomp.parsing.JsDocInfoParserTest, com.google.javascript.jscomp.parsing.JsDocInfoParserTest, com.google.javascript.jscomp.parsing.JsDocTokenStreamTest, com.google.javascript.jscomp.parsing.JsDocTokenStreamTest, com.google.javascript.jscomp.parsing.ParserTest, com.google.javascript.jscomp.parsing.ParserTest, com.google.javascript.jscomp.regex.CharRangesTest, com.google.javascript.jscomp.regex.CharRangesTest, com.google.javascript.rhino.IRTest, com.google.javascript.rhino.IRTest, com.google.javascript.rhino.JSDocInfoTest, com.google.javascript.rhino.JSDocInfoTest, com.google.javascript.rhino.NodeTest, com.google.javascript.rhino.NodeTest, com.google.javascript.rhino.jstype.BooleanLiteralSetTest, com.google.javascript.rhino.jstype.BooleanLiteralSetTest, com.google.javascript.rhino.jstype.EnumElementTypeTest, com.google.javascript.rhino.jstype.EnumElementTypeTest, com.google.javascript.rhino.jstype.FunctionParamBuilderTest, com.google.javascript.rhino.jstype.FunctionParamBuilderTest, com.google.javascript.rhino.jstype.FunctionTypeTest, com.google.javascript.rhino.jstype.FunctionTypeTest, com.google.javascript.rhino.jstype.JSTypeRegistryTest, com.google.javascript.rhino.jstype.JSTypeRegistryTest, com.google.javascript.rhino.jstype.JSTypeTest, com.google.javascript.rhino.jstype.JSTypeTest, com.google.javascript.rhino.jstype.NamedTypeTest, com.google.javascript.rhino.jstype.NamedTypeTest, com.google.javascript.rhino.jstype.PrototypeObjectTypeTest, com.google.javascript.rhino.jstype.PrototypeObjectTypeTest, com.google.javascript.rhino.jstype.RecordTypeTest, com.google.javascript.rhino.jstype.RecordTypeTest, com.google.javascript.rhino.jstype.TemplatizedTypeTest, com.google.javascript.rhino.jstype.TemplatizedTypeTest, com.google.javascript.rhino.jstype.TernaryValueTest, com.google.javascript.rhino.jstype.TernaryValueTest, com.google.javascript.rhino.jstype.UnionTypeBuilderTest, com.google.javascript.rhino.jstype.UnionTypeBuilderTest, com.google.javascript.rhino.jstype.UnionTypeTest, com.google.javascript.rhino.jstype.UnionTypeTest], complianceLevel=6, outputFolder=., json=true}
19:25:20.166 [main] INFO  fr.inria.lille.repair.nopol.NoPol - Available processors (cores): 8
19:25:20.198 [main] INFO  fr.inria.lille.repair.nopol.NoPol - Free memory: 215 MB
19:25:20.199 [main] INFO  fr.inria.lille.repair.nopol.NoPol - Maximum memory: 3 GB
19:25:20.199 [main] INFO  fr.inria.lille.repair.nopol.NoPol - Total memory available to JVM: 241 MB
19:25:20.199 [main] INFO  fr.inria.lille.repair.nopol.NoPol - Java version: 1.8.0_181
19:25:20.201 [main] INFO  fr.inria.lille.repair.nopol.NoPol - JAVA_HOME: /usr/lib/jvm/java-1.8.0-openjdk-amd64/bin/
19:25:20.201 [main] INFO  fr.inria.lille.repair.nopol.NoPol - PATH: /usr/lib/jvm/java-1.8.0-openjdk-amd64/bin/:/usr/lib/oar/oardodo:/usr/lib/oar/oardodo:/usr/local/bin:/usr/bin:/bin:/usr/games
19:29:07.003 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #1
19:29:07.004 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.google.javascript.rhino.Node:1457 which is executed by 15 tests
2433571
19:29:07.836 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_stubMap=[];function JSCompiler_stubMethod(JSCompiler_stubMethod_id){return function(){return JSCompiler_stubMap[JSCompiler_stubMethod_id].apply(this,arguments)}}function JSCompiler_unstubMethod(JSCompiler_unstubMethod_id,JSCompiler_unstubMethod_body){return JSCompiler_stubMap[JSCompiler_unstubMethod_id]=JSCompiler_unstubMethod_body}function Foo(){}Foo.prototype.baz=JSCompiler_stubMethod(1);Foo.prototype.callBaz=JSCompiler_stubMethod(0);Foo.prototype.baz=JSCompiler_unstubMethod(1,function(){});
Foo.prototype.callBaz=JSCompiler_unstubMethod(0,function(){this.baz()});(new Foo).callBaz()
Result: var JSCompiler_stubMap=[];function JSCompiler_stubMethod(JSCompiler_stubMethod_id){return function(){return JSCompiler_stubMap[JSCompiler_stubMethod_id].apply(this,arguments)}}function JSCompiler_unstubMethod(JSCompiler_unstubMethod_id,JSCompiler_unstubMethod_body){return JSCompiler_stubMap[JSCompiler_unstubMethod_id]=JSCompiler_unstubMethod_body}function Foo(){}Foo.prototype.baz=JSCompiler_stubMethod(0);Foo.prototype.callBaz=JSCompiler_stubMethod(1);
Foo.prototype.callBaz=JSCompiler_unstubMethod(1,function(){this.baz()});Foo.prototype.baz=JSCompiler_unstubMethod(0,function(){});(new Foo).callBaz()
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        VAR 1 [source_file: expected0]
            NAME JSCompiler_stubMap 1 [source_file: expected0]
                ARRAYLIT 1 [source_file: expected0]
        FUNCTION JSCompiler_stubMethod 1 [source_file: expected0]
            NAME JSCompiler_stubMethod 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
                NAME JSCompiler_stubMethod_id 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                RETURN 1 [source_file: expected0]
                    FUNCTION  1 [source_file: expected0]
                        NAME  1 [source_file: expected0]
                        PARAM_LIST 1 [source_file: expected0]
                        BLOCK 1 [source_file: expected0]
                            RETURN 1 [source_file: expected0]
                                CALL 1 [source_file: expected0]
                                    GETPROP 1 [source_file: expected0]
                                        GETELEM 1 [source_file: expected0]
                                            NAME JSCompiler_stubMap 1 [source_file: expected0]
                                            NAME JSCompiler_stubMethod_id 1 [source_file: expected0]
                                        STRING apply 1 [source_file: expected0]
                                    THIS 1 [source_file: expected0]
                                    NAME arguments 1 [source_file: expected0]
        FUNCTION JSCompiler_unstubMethod 1 [source_file: expected0]
            NAME JSCompiler_unstubMethod 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
                NAME JSCompiler_unstubMethod_id 1 [source_file: expected0]
                NAME JSCompiler_unstubMethod_body 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                RETURN 1 [source_file: expected0]
                    ASSIGN 1 [source_file: expected0]
                        GETELEM 1 [source_file: expected0]
                            NAME JSCompiler_stubMap 1 [source_file: expected0]
                            NAME JSCompiler_unstubMethod_id 1 [source_file: expected0]
                        NAME JSCompiler_unstubMethod_body 1 [source_file: expected0]
        FUNCTION Foo 1 [source_file: expected0]
            NAME Foo 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            ASSIGN 1 [source_file: expected0]
                GETPROP 1 [source_file: expected0]
                    GETPROP 1 [source_file: expected0]
                        NAME Foo 1 [source_file: expected0]
                        STRING prototype 1 [source_file: expected0]
                    STRING baz 1 [source_file: expected0]
                CALL 1 [free_call: 1] [source_file: expected0]
                    NAME JSCompiler_stubMethod 1 [source_file: expected0]
                    NUMBER 1.0 1 [source_file: expected0]
    SCRIPT 1 [synthetic: 1] [source_file: expected1] [input_id: InputId: expected1]
        EXPR_RESULT 1 [source_file: expected1]
            ASSIGN 1 [source_file: expected1]
                GETPROP 1 [source_file: expected1]
                    GETPROP 1 [source_file: expected1]
                        NAME Foo 1 [source_file: expected1]
                        STRING prototype 1 [source_file: expected1]
                    STRING callBaz 1 [source_file: expected1]
                CALL 1 [free_call: 1] [source_file: expected1]
                    NAME JSCompiler_stubMethod 1 [source_file: expected1]
                    NUMBER 0.0 1 [source_file: expected1]
    SCRIPT 1 [synthetic: 1] [source_file: expected2] [input_id: InputId: expected2]
        EXPR_RESULT 1 [source_file: expected2]
            ASSIGN 1 [source_file: expected2]
                GETPROP 1 [source_file: expected2]
                    GETPROP 1 [source_file: expected2]
                        NAME Foo 1 [source_file: expected2]
                        STRING prototype 1 [source_file: expected2]
                    STRING baz 1 [source_file: expected2]
                CALL 1 [free_call: 1] [source_file: expected2]
                    NAME JSCompiler_unstubMethod 1 [source_file: expected2]
                    NUMBER 1.0 1 [source_file: expected2]
                    FUNCTION  1 [source_file: expected2]
                        NAME  1 [source_file: expected2]
                        PARAM_LIST 1 [source_file: expected2]
                        BLOCK 1 [source_file: expected2]
        EXPR_RESULT 1 [source_file: expected2]
            ASSIGN 1 [source_file: expected2]
                GETPROP 1 [source_file: expected2]
                    GETPROP 1 [source_file: expected2]
                        NAME Foo 1 [source_file: expected2]
                        STRING prototype 1 [source_file: expected2]
                    STRING callBaz 1 [source_file: expected2]
                CALL 1 [free_call: 1] [source_file: expected2]
                    NAME JSCompiler_unstubMethod 1 [source_file: expected2]
                    NUMBER 0.0 1 [source_file: expected2]
                    FUNCTION  1 [source_file: expected2]
                        NAME  1 [source_file: expected2]
                        PARAM_LIST 1 [source_file: expected2]
                        BLOCK 1 [source_file: expected2]
                            EXPR_RESULT 1 [source_file: expected2]
                                CALL 1 [source_file: expected2]
                                    GETPROP 1 [source_file: expected2]
                                        THIS 1 [source_file: expected2]
                                        STRING baz 1 [source_file: expected2]
        EXPR_RESULT 1 [source_file: expected2]
            CALL 1 [source_file: expected2]
                GETPROP 1 [source_file: expected2]
                    NEW 1 [source_file: expected2]
                        NAME Foo 1 [source_file: expected2]
                    STRING callBaz 1 [source_file: expected2]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: i0] [input_id: InputId: i0]
        VAR 1 [source_file:  [synthetic:1] ]
            NAME JSCompiler_stubMap 1 [source_file:  [synthetic:1] ]
                ARRAYLIT 1 [source_file:  [synthetic:1] ]
        FUNCTION JSCompiler_stubMethod 1 [source_file:  [synthetic:1] ]
            NAME JSCompiler_stubMethod 1 [source_file:  [synthetic:1] ]
            PARAM_LIST 1 [source_file:  [synthetic:1] ]
                NAME JSCompiler_stubMethod_id 1 [source_file:  [synthetic:1] ]
            BLOCK 1 [source_file:  [synthetic:1] ]
                RETURN 1 [source_file:  [synthetic:1] ]
                    FUNCTION  1 [source_file:  [synthetic:1] ]
                        NAME  1 [source_file:  [synthetic:1] ]
                        PARAM_LIST 1 [source_file:  [synthetic:1] ]
                        BLOCK 1 [source_file:  [synthetic:1] ]
                            RETURN 1 [source_file:  [synthetic:1] ]
                                CALL 1 [source_file:  [synthetic:1] ]
                                    GETPROP 1 [source_file:  [synthetic:1] ]
                                        GETELEM 1 [source_file:  [synthetic:1] ]
                                            NAME JSCompiler_stubMap 1 [source_file:  [synthetic:1] ]
                                            NAME JSCompiler_stubMethod_id 1 [source_file:  [synthetic:1] ]
                                        STRING apply 1 [source_file:  [synthetic:1] ]
                                    THIS 1 [source_file:  [synthetic:1] ]
                                    NAME arguments 1 [source_file:  [synthetic:1] ]
        FUNCTION JSCompiler_unstubMethod 1 [source_file:  [synthetic:1] ]
            NAME JSCompiler_unstubMethod 1 [source_file:  [synthetic:1] ]
            PARAM_LIST 1 [source_file:  [synthetic:1] ]
                NAME JSCompiler_unstubMethod_id 1 [source_file:  [synthetic:1] ]
                NAME JSCompiler_unstubMethod_body 1 [source_file:  [synthetic:1] ]
            BLOCK 1 [source_file:  [synthetic:1] ]
                RETURN 1 [source_file:  [synthetic:1] ]
                    ASSIGN 1 [source_file:  [synthetic:1] ]
                        GETELEM 1 [source_file:  [synthetic:1] ]
                            NAME JSCompiler_stubMap 1 [source_file:  [synthetic:1] ]
                            NAME JSCompiler_unstubMethod_id 1 [source_file:  [synthetic:1] ]
                        NAME JSCompiler_unstubMethod_body 1 [source_file:  [synthetic:1] ]
        FUNCTION Foo 1 [source_file: i0]
            NAME Foo 1 [source_file: i0]
            PARAM_LIST 1 [source_file: i0]
            BLOCK 1 [source_file: i0]
        EXPR_RESULT 1 [source_file: i0]
            ASSIGN 1 [source_file: i0]
                GETPROP 1 [source_file: i0]
                    GETPROP 1 [source_file: i0]
                        NAME Foo 1 [source_file: i0]
                        STRING prototype 1 [source_file: i0]
                    STRING baz 1 [source_file: i0]
                CALL 1 [free_call: 1] [source_file: i0]
                    NAME JSCompiler_stubMethod 1 [source_file: i0]
                    NUMBER 0.0 1 [source_file: i0]
    SCRIPT 1 [synthetic: 1] [source_file: i1] [input_id: InputId: i1]
        EXPR_RESULT 1 [source_file: i1]
            ASSIGN 1 [source_file: i1]
                GETPROP 1 [source_file: i1]
                    GETPROP 1 [source_file: i1]
                        NAME Foo 1 [source_file: i1]
                        STRING prototype 1 [source_file: i1]
                    STRING callBaz 1 [source_file: i1]
                CALL 1 [free_call: 1] [source_file: i1]
                    NAME JSCompiler_stubMethod 1 [source_file: i1]
                    NUMBER 1.0 1 [source_file: i1]
    SCRIPT 1 [synthetic: 1] [source_file: i2] [input_id: InputId: i2]
        EXPR_RESULT 1 [source_file: i1]
            ASSIGN 1 [source_file: i1]
                GETPROP 1 [source_file: i1]
                    GETPROP 1 [source_file: i1]
                        NAME Foo 1 [source_file: i1]
                        STRING prototype 1 [source_file: i1]
                    STRING callBaz 1 [source_file: i1]
                CALL 1 [free_call: 1] [source_file: i1]
                    NAME JSCompiler_unstubMethod 1 [source_file: i1]
                    NUMBER 1.0 1 [source_file: i1]
                    FUNCTION  1 [source_file: i1]
                        NAME  1 [source_file: i1]
                        PARAM_LIST 1 [source_file: i1]
                        BLOCK 1 [source_file: i1]
                            EXPR_RESULT 1 [source_file: i1]
                                CALL 1 [source_file: i1]
                                    GETPROP 1 [source_file: i1]
                                        THIS 1 [source_file: i1]
                                        STRING baz 1 [source_file: i1]
        EXPR_RESULT 1 [source_file: i0]
            ASSIGN 1 [source_file: i0]
                GETPROP 1 [source_file: i0]
                    GETPROP 1 [source_file: i0]
                        NAME Foo 1 [source_file: i0]
                        STRING prototype 1 [source_file: i0]
                    STRING baz 1 [source_file: i0]
                CALL 1 [free_call: 1] [source_file: i0]
                    NAME JSCompiler_unstubMethod 1 [source_file: i0]
                    NUMBER 0.0 1 [source_file: i0]
                    FUNCTION  1 [source_file: i0]
                        NAME  1 [source_file: i0]
                        PARAM_LIST 1 [source_file: i0]
                        BLOCK 1 [source_file: i0]
        EXPR_RESULT 1 [source_file: i2]
            CALL 1 [source_file: i2]
                GETPROP 1 [source_file: i2]
                    NEW 1 [source_file: i2]
                        NAME Foo 1 [source_file: i2]
                    STRING callBaz 1 [source_file: i2]


Subtree1: NUMBER 1.0 1 [source_file: expected0]


Subtree2: NUMBER 0.0 1 [source_file: i0]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:928)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:736)
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_stubMap=[];function JSCompiler_stubMethod(JSCompiler_stubMethod_id){return function(){return JSCompiler_stubMap[JSCompiler_stubMethod_id].apply(this,arguments)}}function JSCompiler_unstubMethod(JSCompiler_unstubMethod_id,JSCompiler_unstubMethod_body){return JSCompiler_stubMap[JSCompiler_unstubMethod_id]=JSCompiler_unstubMethod_body}function Foo(){}Foo.prototype.b1=JSCompiler_stubMethod(0);Foo.prototype.b1=JSCompiler_unstubMethod(0,function(){Foo.prototype.b2=JSCompiler_stubMethod(1)});
var y=new Foo;y.b1();Foo.prototype.b2=JSCompiler_unstubMethod(1,function(){var x=1;Foo.prototype.b3=function(){x}});y=new Foo;z.b2();y=new Foo;z.b3()
Result: var JSCompiler_stubMap=[];function JSCompiler_stubMethod(JSCompiler_stubMethod_id){return function(){return JSCompiler_stubMap[JSCompiler_stubMethod_id].apply(this,arguments)}}function JSCompiler_unstubMethod(JSCompiler_unstubMethod_id,JSCompiler_unstubMethod_body){return JSCompiler_stubMap[JSCompiler_unstubMethod_id]=JSCompiler_unstubMethod_body}function Foo(){}Foo.prototype.b1=JSCompiler_stubMethod(1);Foo.prototype.b1=JSCompiler_unstubMethod(1,function(){Foo.prototype.b2=JSCompiler_stubMethod(0)});
var y=new Foo;y.b1();Foo.prototype.b2=JSCompiler_unstubMethod(0,function(){var x=1;Foo.prototype.b3=function(){x}});y=new Foo;z.b2();y=new Foo;z.b3()
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        VAR 1 [source_file: expected0]
            NAME JSCompiler_stubMap 1 [source_file: expected0]
                ARRAYLIT 1 [source_file: expected0]
        FUNCTION JSCompiler_stubMethod 1 [source_file: expected0]
            NAME JSCompiler_stubMethod 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
                NAME JSCompiler_stubMethod_id 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                RETURN 1 [source_file: expected0]
                    FUNCTION  1 [source_file: expected0]
                        NAME  1 [source_file: expected0]
                        PARAM_LIST 1 [source_file: expected0]
                        BLOCK 1 [source_file: expected0]
                            RETURN 1 [source_file: expected0]
                                CALL 1 [source_file: expected0]
                                    GETPROP 1 [source_file: expected0]
                                        GETELEM 1 [source_file: expected0]
                                            NAME JSCompiler_stubMap 1 [source_file: expected0]
                                            NAME JSCompiler_stubMethod_id 1 [source_file: expected0]
                                        STRING apply 1 [source_file: expected0]
                                    THIS 1 [source_file: expected0]
                                    NAME arguments 1 [source_file: expected0]
        FUNCTION JSCompiler_unstubMethod 1 [source_file: expected0]
            NAME JSCompiler_unstubMethod 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
                NAME JSCompiler_unstubMethod_id 1 [source_file: expected0]
                NAME JSCompiler_unstubMethod_body 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                RETURN 1 [source_file: expected0]
                    ASSIGN 1 [source_file: expected0]
                        GETELEM 1 [source_file: expected0]
                            NAME JSCompiler_stubMap 1 [source_file: expected0]
                            NAME JSCompiler_unstubMethod_id 1 [source_file: expected0]
                        NAME JSCompiler_unstubMethod_body 1 [source_file: expected0]
        FUNCTION Foo 1 [source_file: expected0]
            NAME Foo 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            ASSIGN 1 [source_file: expected0]
                GETPROP 1 [source_file: expected0]
                    GETPROP 1 [source_file: expected0]
                        NAME Foo 1 [source_file: expected0]
                        STRING prototype 1 [source_file: expected0]
                    STRING b1 1 [source_file: expected0]
                CALL 1 [free_call: 1] [source_file: expected0]
                    NAME JSCompiler_stubMethod 1 [source_file: expected0]
                    NUMBER 0.0 1 [source_file: expected0]
    SCRIPT 1 [synthetic: 1] [source_file: expected1] [input_id: InputId: expected1]
        EXPR_RESULT 1 [source_file: expected1]
            ASSIGN 1 [source_file: expected1]
                GETPROP 1 [source_file: expected1]
                    GETPROP 1 [source_file: expected1]
                        NAME Foo 1 [source_file: expected1]
                        STRING prototype 1 [source_file: expected1]
                    STRING b1 1 [source_file: expected1]
                CALL 1 [free_call: 1] [source_file: expected1]
                    NAME JSCompiler_unstubMethod 1 [source_file: expected1]
                    NUMBER 0.0 1 [source_file: expected1]
                    FUNCTION  1 [source_file: expected1]
                        NAME  1 [source_file: expected1]
                        PARAM_LIST 1 [source_file: expected1]
                        BLOCK 1 [source_file: expected1]
                            EXPR_RESULT 1 [source_file: expected1]
                                ASSIGN 1 [source_file: expected1]
                                    GETPROP 1 [source_file: expected1]
                                        GETPROP 1 [source_file: expected1]
                                            NAME Foo 1 [source_file: expected1]
                                            STRING prototype 1 [source_file: expected1]
                                        STRING b2 1 [source_file: expected1]
                                    CALL 1 [free_call: 1] [source_file: expected1]
                                        NAME JSCompiler_stubMethod 1 [source_file: expected1]
                                        NUMBER 1.0 1 [source_file: expected1]
        VAR 1 [source_file: expected1]
            NAME y 1 [source_file: expected1]
                NEW 1 [source_file: expected1]
                    NAME Foo 1 [source_file: expected1]
        EXPR_RESULT 1 [source_file: expected1]
            CALL 1 [source_file: expected1]
                GETPROP 1 [source_file: expected1]
                    NAME y 1 [source_file: expected1]
                    STRING b1 1 [source_file: expected1]
    SCRIPT 1 [synthetic: 1] [source_file: expected2] [input_id: InputId: expected2]
        EXPR_RESULT 1 [source_file: expected2]
            ASSIGN 1 [source_file: expected2]
                GETPROP 1 [source_file: expected2]
                    GETPROP 1 [source_file: expected2]
                        NAME Foo 1 [source_file: expected2]
                        STRING prototype 1 [source_file: expected2]
                    STRING b2 1 [source_file: expected2]
                CALL 1 [free_call: 1] [source_file: expected2]
                    NAME JSCompiler_unstubMethod 1 [source_file: expected2]
                    NUMBER 1.0 1 [source_file: expected2]
                    FUNCTION  1 [source_file: expected2]
                        NAME  1 [source_file: expected2]
                        PARAM_LIST 1 [source_file: expected2]
                        BLOCK 1 [source_file: expected2]
                            VAR 1 [source_file: expected2]
                                NAME x 1 [source_file: expected2]
                                    NUMBER 1.0 1 [source_file: expected2]
                            EXPR_RESULT 1 [source_file: expected2]
                                ASSIGN 1 [source_file: expected2]
                                    GETPROP 1 [source_file: expected2]
                                        GETPROP 1 [source_file: expected2]
                                            NAME Foo 1 [source_file: expected2]
                                            STRING prototype 1 [source_file: expected2]
                                        STRING b3 1 [source_file: expected2]
                                    FUNCTION  1 [source_file: expected2]
                                        NAME  1 [source_file: expected2]
                                        PARAM_LIST 1 [source_file: expected2]
                                        BLOCK 1 [source_file: expected2]
                                            EXPR_RESULT 1 [source_file: expected2]
                                                NAME x 1 [source_file: expected2]
        EXPR_RESULT 1 [source_file: expected2]
            ASSIGN 1 [source_file: expected2]
                NAME y 1 [source_file: expected2]
                NEW 1 [source_file: expected2]
                    NAME Foo 1 [source_file: expected2]
        EXPR_RESULT 1 [source_file: expected2]
            CALL 1 [source_file: expected2]
                GETPROP 1 [source_file: expected2]
                    NAME z 1 [source_file: expected2]
                    STRING b2 1 [source_file: expected2]
    SCRIPT 1 [synthetic: 1] [source_file: expected3] [input_id: InputId: expected3]
        EXPR_RESULT 1 [source_file: expected3]
            ASSIGN 1 [source_file: expected3]
                NAME y 1 [source_file: expected3]
                NEW 1 [source_file: expected3]
                    NAME Foo 1 [source_file: expected3]
        EXPR_RESULT 1 [source_file: expected3]
            CALL 1 [source_file: expected3]
                GETPROP 1 [source_file: expected3]
                    NAME z 1 [source_file: expected3]
                    STRING b3 1 [source_file: expected3]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: i0] [input_id: InputId: i0]
        VAR 1 [source_file:  [synthetic:1] ]
            NAME JSCompiler_stubMap 1 [source_file:  [synthetic:1] ]
                ARRAYLIT 1 [source_file:  [synthetic:1] ]
        FUNCTION JSCompiler_stubMethod 1 [source_file:  [synthetic:1] ]
            NAME JSCompiler_stubMethod 1 [source_file:  [synthetic:1] ]
            PARAM_LIST 1 [source_file:  [synthetic:1] ]
                NAME JSCompiler_stubMethod_id 1 [source_file:  [synthetic:1] ]
            BLOCK 1 [source_file:  [synthetic:1] ]
                RETURN 1 [source_file:  [synthetic:1] ]
                    FUNCTION  1 [source_file:  [synthetic:1] ]
                        NAME  1 [source_file:  [synthetic:1] ]
                        PARAM_LIST 1 [source_file:  [synthetic:1] ]
                        BLOCK 1 [source_file:  [synthetic:1] ]
                            RETURN 1 [source_file:  [synthetic:1] ]
                                CALL 1 [source_file:  [synthetic:1] ]
                                    GETPROP 1 [source_file:  [synthetic:1] ]
                                        GETELEM 1 [source_file:  [synthetic:1] ]
                                            NAME JSCompiler_stubMap 1 [source_file:  [synthetic:1] ]
                                            NAME JSCompiler_stubMethod_id 1 [source_file:  [synthetic:1] ]
                                        STRING apply 1 [source_file:  [synthetic:1] ]
                                    THIS 1 [source_file:  [synthetic:1] ]
                                    NAME arguments 1 [source_file:  [synthetic:1] ]
        FUNCTION JSCompiler_unstubMethod 1 [source_file:  [synthetic:1] ]
            NAME JSCompiler_unstubMethod 1 [source_file:  [synthetic:1] ]
            PARAM_LIST 1 [source_file:  [synthetic:1] ]
                NAME JSCompiler_unstubMethod_id 1 [source_file:  [synthetic:1] ]
                NAME JSCompiler_unstubMethod_body 1 [source_file:  [synthetic:1] ]
            BLOCK 1 [source_file:  [synthetic:1] ]
                RETURN 1 [source_file:  [synthetic:1] ]
                    ASSIGN 1 [source_file:  [synthetic:1] ]
                        GETELEM 1 [source_file:  [synthetic:1] ]
                            NAME JSCompiler_stubMap 1 [source_file:  [synthetic:1] ]
                            NAME JSCompiler_unstubMethod_id 1 [source_file:  [synthetic:1] ]
                        NAME JSCompiler_unstubMethod_body 1 [source_file:  [synthetic:1] ]
        FUNCTION Foo 1 [source_file: i0]
            NAME Foo 1 [source_file: i0]
            PARAM_LIST 1 [source_file: i0]
            BLOCK 1 [source_file: i0]
        EXPR_RESULT 1 [source_file: i0]
            ASSIGN 1 [source_file: i0]
                GETPROP 1 [source_file: i0]
                    GETPROP 1 [source_file: i0]
                        NAME Foo 1 [source_file: i0]
                        STRING prototype 1 [source_file: i0]
                    STRING b1 1 [source_file: i0]
                CALL 1 [free_call: 1] [source_file: i0]
                    NAME JSCompiler_stubMethod 1 [source_file: i0]
                    NUMBER 1.0 1 [source_file: i0]
    SCRIPT 1 [synthetic: 1] [source_file: i1] [input_id: InputId: i1]
        EXPR_RESULT 1 [source_file: i0]
            ASSIGN 1 [source_file: i0]
                GETPROP 1 [source_file: i0]
                    GETPROP 1 [source_file: i0]
                        NAME Foo 1 [source_file: i0]
                        STRING prototype 1 [source_file: i0]
                    STRING b1 1 [source_file: i0]
                CALL 1 [free_call: 1] [source_file: i0]
                    NAME JSCompiler_unstubMethod 1 [source_file: i0]
                    NUMBER 1.0 1 [source_file: i0]
                    FUNCTION  1 [source_file: i0]
                        NAME  1 [source_file: i0]
                        PARAM_LIST 1 [source_file: i0]
                        BLOCK 1 [source_file: i0]
                            EXPR_RESULT 1 [source_file: i0]
                                ASSIGN 1 [source_file: i0]
                                    GETPROP 1 [source_file: i0]
                                        GETPROP 1 [source_file: i0]
                                            NAME Foo 1 [source_file: i0]
                                            STRING prototype 1 [source_file: i0]
                                        STRING b2 1 [source_file: i0]
                                    CALL 1 [free_call: 1] [source_file: i0]
                                        NAME JSCompiler_stubMethod 1 [source_file: i0]
                                        NUMBER 0.0 1 [source_file: i0]
        VAR 1 [source_file: i1]
            NAME y 1 [source_file: i1]
                NEW 1 [source_file: i1]
                    NAME Foo 1 [source_file: i1]
        EXPR_RESULT 1 [source_file: i1]
            CALL 1 [source_file: i1]
                GETPROP 1 [source_file: i1]
                    NAME y 1 [source_file: i1]
                    STRING b1 1 [source_file: i1]
    SCRIPT 1 [synthetic: 1] [source_file: i2] [input_id: InputId: i2]
        EXPR_RESULT 1 [source_file: i0]
            ASSIGN 1 [source_file: i0]
                GETPROP 1 [source_file: i0]
                    GETPROP 1 [source_file: i0]
                        NAME Foo 1 [source_file: i0]
                        STRING prototype 1 [source_file: i0]
                    STRING b2 1 [source_file: i0]
                CALL 1 [free_call: 1] [source_file: i0]
                    NAME JSCompiler_unstubMethod 1 [source_file: i0]
                    NUMBER 0.0 1 [source_file: i0]
                    FUNCTION  1 [source_file: i0]
                        NAME  1 [source_file: i0]
                        PARAM_LIST 1 [source_file: i0]
                        BLOCK 1 [source_file: i0]
                            VAR 1 [source_file: i0]
                                NAME x 1 [source_file: i0]
                                    NUMBER 1.0 1 [source_file: i0]
                            EXPR_RESULT 1 [source_file: i0]
                                ASSIGN 1 [source_file: i0]
                                    GETPROP 1 [source_file: i0]
                                        GETPROP 1 [source_file: i0]
                                            NAME Foo 1 [source_file: i0]
                                            STRING prototype 1 [source_file: i0]
                                        STRING b3 1 [source_file: i0]
                                    FUNCTION  1 [source_file: i0]
                                        NAME  1 [source_file: i0]
                                        PARAM_LIST 1 [source_file: i0]
                                        BLOCK 1 [source_file: i0]
                                            EXPR_RESULT 1 [source_file: i0]
                                                NAME x 1 [source_file: i0]
        EXPR_RESULT 1 [source_file: i2]
            ASSIGN 1 [source_file: i2]
                NAME y 1 [source_file: i2]
                NEW 1 [source_file: i2]
                    NAME Foo 1 [source_file: i2]
        EXPR_RESULT 1 [source_file: i2]
            CALL 1 [source_file: i2]
                GETPROP 1 [source_file: i2]
                    NAME z 1 [source_file: i2]
                    STRING b2 1 [source_file: i2]
    SCRIPT 1 [synthetic: 1] [source_file: i3] [input_id: InputId: i3]
        EXPR_RESULT 1 [source_file: i3]
            ASSIGN 1 [source_file: i3]
                NAME y 1 [source_file: i3]
                NEW 1 [source_file: i3]
                    NAME Foo 1 [source_file: i3]
        EXPR_RESULT 1 [source_file: i3]
            CALL 1 [source_file: i3]
                GETPROP 1 [source_file: i3]
                    NAME z 1 [source_file: i3]
                    STRING b3 1 [source_file: i3]


Subtree1: NUMBER 0.0 1 [source_file: expected0]


Subtree2: NUMBER 1.0 1 [source_file: i0]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:928)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:736)
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_stubMap=[];function JSCompiler_stubMethod(JSCompiler_stubMethod_id){return function(){return JSCompiler_stubMap[JSCompiler_stubMethod_id].apply(this,arguments)}}function JSCompiler_unstubMethod(JSCompiler_unstubMethod_id,JSCompiler_unstubMethod_body){return JSCompiler_stubMap[JSCompiler_unstubMethod_id]=JSCompiler_unstubMethod_body}function Foo(){}Foo.prototype.baz=JSCompiler_stubMethod(1);Foo.prototype.callBaz=JSCompiler_stubMethod(0);Foo.prototype.baz=JSCompiler_unstubMethod(1,function(){});
Foo.prototype.callBaz=JSCompiler_unstubMethod(0,function(){this.baz()});(new Foo).callBaz()
Result: var JSCompiler_stubMap=[];function JSCompiler_stubMethod(JSCompiler_stubMethod_id){return function(){return JSCompiler_stubMap[JSCompiler_stubMethod_id].apply(this,arguments)}}function JSCompiler_unstubMethod(JSCompiler_unstubMethod_id,JSCompiler_unstubMethod_body){return JSCompiler_stubMap[JSCompiler_unstubMethod_id]=JSCompiler_unstubMethod_body}function Foo(){}Foo.prototype.baz=JSCompiler_stubMethod(0);Foo.prototype.callBaz=JSCompiler_stubMethod(1);
Foo.prototype.callBaz=JSCompiler_unstubMethod(1,function(){this.baz()});Foo.prototype.baz=JSCompiler_unstubMethod(0,function(){});(new Foo).callBaz()
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        VAR 1 [source_file: expected0]
            NAME JSCompiler_stubMap 1 [source_file: expected0]
                ARRAYLIT 1 [source_file: expected0]
        FUNCTION JSCompiler_stubMethod 1 [source_file: expected0]
            NAME JSCompiler_stubMethod 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
                NAME JSCompiler_stubMethod_id 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                RETURN 1 [source_file: expected0]
                    FUNCTION  1 [source_file: expected0]
                        NAME  1 [source_file: expected0]
                        PARAM_LIST 1 [source_file: expected0]
                        BLOCK 1 [source_file: expected0]
                            RETURN 1 [source_file: expected0]
                                CALL 1 [source_file: expected0]
                                    GETPROP 1 [source_file: expected0]
                                        GETELEM 1 [source_file: expected0]
                                            NAME JSCompiler_stubMap 1 [source_file: expected0]
                                            NAME JSCompiler_stubMethod_id 1 [source_file: expected0]
                                        STRING apply 1 [source_file: expected0]
                                    THIS 1 [source_file: expected0]
                                    NAME arguments 1 [source_file: expected0]
        FUNCTION JSCompiler_unstubMethod 1 [source_file: expected0]
            NAME JSCompiler_unstubMethod 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
                NAME JSCompiler_unstubMethod_id 1 [source_file: expected0]
                NAME JSCompiler_unstubMethod_body 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                RETURN 1 [source_file: expected0]
                    ASSIGN 1 [source_file: expected0]
                        GETELEM 1 [source_file: expected0]
                            NAME JSCompiler_stubMap 1 [source_file: expected0]
                            NAME JSCompiler_unstubMethod_id 1 [source_file: expected0]
                        NAME JSCompiler_unstubMethod_body 1 [source_file: expected0]
        FUNCTION Foo 1 [source_file: expected0]
            NAME Foo 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            ASSIGN 1 [source_file: expected0]
                GETPROP 1 [source_file: expected0]
                    GETPROP 1 [source_file: expected0]
                        NAME Foo 1 [source_file: expected0]
                        STRING prototype 1 [source_file: expected0]
                    STRING baz 1 [source_file: expected0]
                CALL 1 [free_call: 1] [source_file: expected0]
                    NAME JSCompiler_stubMethod 1 [source_file: expected0]
                    NUMBER 1.0 1 [source_file: expected0]
    SCRIPT 1 [synthetic: 1] [source_file: expected1] [input_id: InputId: expected1]
        EXPR_RESULT 1 [source_file: expected1]
            ASSIGN 1 [source_file: expected1]
                GETPROP 1 [source_file: expected1]
                    GETPROP 1 [source_file: expected1]
                        NAME Foo 1 [source_file: expected1]
                        STRING prototype 1 [source_file: expected1]
                    STRING callBaz 1 [source_file: expected1]
                CALL 1 [free_call: 1] [source_file: expected1]
                    NAME JSCompiler_stubMethod 1 [source_file: expected1]
                    NUMBER 0.0 1 [source_file: expected1]
    SCRIPT 1 [synthetic: 1] [source_file: expected2] [input_id: InputId: expected2]
        EXPR_RESULT 1 [source_file: expected2]
            ASSIGN 1 [source_file: expected2]
                GETPROP 1 [source_file: expected2]
                    GETPROP 1 [source_file: expected2]
                        NAME Foo 1 [source_file: expected2]
                        STRING prototype 1 [source_file: expected2]
                    STRING baz 1 [source_file: expected2]
                CALL 1 [free_call: 1] [source_file: expected2]
                    NAME JSCompiler_unstubMethod 1 [source_file: expected2]
                    NUMBER 1.0 1 [source_file: expected2]
                    FUNCTION  1 [source_file: expected2]
                        NAME  1 [source_file: expected2]
                        PARAM_LIST 1 [source_file: expected2]
                        BLOCK 1 [source_file: expected2]
        EXPR_RESULT 1 [source_file: expected2]
            ASSIGN 1 [source_file: expected2]
                GETPROP 1 [source_file: expected2]
                    GETPROP 1 [source_file: expected2]
                        NAME Foo 1 [source_file: expected2]
                        STRING prototype 1 [source_file: expected2]
                    STRING callBaz 1 [source_file: expected2]
                CALL 1 [free_call: 1] [source_file: expected2]
                    NAME JSCompiler_unstubMethod 1 [source_file: expected2]
                    NUMBER 0.0 1 [source_file: expected2]
                    FUNCTION  1 [source_file: expected2]
                        NAME  1 [source_file: expected2]
                        PARAM_LIST 1 [source_file: expected2]
                        BLOCK 1 [source_file: expected2]
                            EXPR_RESULT 1 [source_file: expected2]
                                CALL 1 [source_file: expected2]
                                    GETPROP 1 [source_file: expected2]
                                        THIS 1 [source_file: expected2]
                                        STRING baz 1 [source_file: expected2]
        EXPR_RESULT 1 [source_file: expected2]
            CALL 1 [source_file: expected2]
                GETPROP 1 [source_file: expected2]
                    NEW 1 [source_file: expected2]
                        NAME Foo 1 [source_file: expected2]
                    STRING callBaz 1 [source_file: expected2]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: i0] [input_id: InputId: i0]
        VAR 1 [source_file:  [synthetic:1] ]
            NAME JSCompiler_stubMap 1 [source_file:  [synthetic:1] ]
                ARRAYLIT 1 [source_file:  [synthetic:1] ]
        FUNCTION JSCompiler_stubMethod 1 [source_file:  [synthetic:1] ]
            NAME JSCompiler_stubMethod 1 [source_file:  [synthetic:1] ]
            PARAM_LIST 1 [source_file:  [synthetic:1] ]
                NAME JSCompiler_stubMethod_id 1 [source_file:  [synthetic:1] ]
            BLOCK 1 [source_file:  [synthetic:1] ]
                RETURN 1 [source_file:  [synthetic:1] ]
                    FUNCTION  1 [source_file:  [synthetic:1] ]
                        NAME  1 [source_file:  [synthetic:1] ]
                        PARAM_LIST 1 [source_file:  [synthetic:1] ]
                        BLOCK 1 [source_file:  [synthetic:1] ]
                            RETURN 1 [source_file:  [synthetic:1] ]
                                CALL 1 [source_file:  [synthetic:1] ]
                                    GETPROP 1 [source_file:  [synthetic:1] ]
                                        GETELEM 1 [source_file:  [synthetic:1] ]
                                            NAME JSCompiler_stubMap 1 [source_file:  [synthetic:1] ]
                                            NAME JSCompiler_stubMethod_id 1 [source_file:  [synthetic:1] ]
                                        STRING apply 1 [source_file:  [synthetic:1] ]
                                    THIS 1 [source_file:  [synthetic:1] ]
                                    NAME arguments 1 [source_file:  [synthetic:1] ]
        FUNCTION JSCompiler_unstubMethod 1 [source_file:  [synthetic:1] ]
            NAME JSCompiler_unstubMethod 1 [source_file:  [synthetic:1] ]
            PARAM_LIST 1 [source_file:  [synthetic:1] ]
                NAME JSCompiler_unstubMethod_id 1 [source_file:  [synthetic:1] ]
                NAME JSCompiler_unstubMethod_body 1 [source_file:  [synthetic:1] ]
            BLOCK 1 [source_file:  [synthetic:1] ]
                RETURN 1 [source_file:  [synthetic:1] ]
                    ASSIGN 1 [source_file:  [synthetic:1] ]
                        GETELEM 1 [source_file:  [synthetic:1] ]
                            NAME JSCompiler_stubMap 1 [source_file:  [synthetic:1] ]
                            NAME JSCompiler_unstubMethod_id 1 [source_file:  [synthetic:1] ]
                        NAME JSCompiler_unstubMethod_body 1 [source_file:  [synthetic:1] ]
        FUNCTION Foo 1 [source_file: i0]
            NAME Foo 1 [source_file: i0]
            PARAM_LIST 1 [source_file: i0]
            BLOCK 1 [source_file: i0]
        EXPR_RESULT 1 [source_file: i0]
            ASSIGN 1 [source_file: i0]
                GETPROP 1 [source_file: i0]
                    GETPROP 1 [source_file: i0]
                        NAME Foo 1 [source_file: i0]
                        STRING prototype 1 [source_file: i0]
                    STRING baz 1 [source_file: i0]
                CALL 1 [free_call: 1] [source_file: i0]
                    NAME JSCompiler_stubMethod 1 [source_file: i0]
                    NUMBER 0.0 1 [source_file: i0]
    SCRIPT 1 [synthetic: 1] [source_file: i1] [input_id: InputId: i1]
        EXPR_RESULT 1 [source_file: i1]
            ASSIGN 1 [source_file: i1]
                GETPROP 1 [source_file: i1]
                    GETPROP 1 [source_file: i1]
                        NAME Foo 1 [source_file: i1]
                        STRING prototype 1 [source_file: i1]
                    STRING callBaz 1 [source_file: i1]
                CALL 1 [free_call: 1] [source_file: i1]
                    NAME JSCompiler_stubMethod 1 [source_file: i1]
                    NUMBER 1.0 1 [source_file: i1]
    SCRIPT 1 [synthetic: 1] [source_file: i2] [input_id: InputId: i2]
        EXPR_RESULT 1 [source_file: i1]
            ASSIGN 1 [source_file: i1]
                GETPROP 1 [source_file: i1]
                    GETPROP 1 [source_file: i1]
                        NAME Foo 1 [source_file: i1]
                        STRING prototype 1 [source_file: i1]
                    STRING callBaz 1 [source_file: i1]
                CALL 1 [free_call: 1] [source_file: i1]
                    NAME JSCompiler_unstubMethod 1 [source_file: i1]
                    NUMBER 1.0 1 [source_file: i1]
                    FUNCTION  1 [source_file: i1]
                        NAME  1 [source_file: i1]
                        PARAM_LIST 1 [source_file: i1]
                        BLOCK 1 [source_file: i1]
                            EXPR_RESULT 1 [source_file: i1]
                                CALL 1 [source_file: i1]
                                    GETPROP 1 [source_file: i1]
                                        THIS 1 [source_file: i1]
                                        STRING baz 1 [source_file: i1]
        EXPR_RESULT 1 [source_file: i0]
            ASSIGN 1 [source_file: i0]
                GETPROP 1 [source_file: i0]
                    GETPROP 1 [source_file: i0]
                        NAME Foo 1 [source_file: i0]
                        STRING prototype 1 [source_file: i0]
                    STRING baz 1 [source_file: i0]
                CALL 1 [free_call: 1] [source_file: i0]
                    NAME JSCompiler_unstubMethod 1 [source_file: i0]
                    NUMBER 0.0 1 [source_file: i0]
                    FUNCTION  1 [source_file: i0]
                        NAME  1 [source_file: i0]
                        PARAM_LIST 1 [source_file: i0]
                        BLOCK 1 [source_file: i0]
        EXPR_RESULT 1 [source_file: i2]
            CALL 1 [source_file: i2]
                GETPROP 1 [source_file: i2]
                    NEW 1 [source_file: i2]
                        NAME Foo 1 [source_file: i2]
                    STRING callBaz 1 [source_file: i2]


Subtree1: NUMBER 1.0 1 [source_file: expected0]


Subtree2: NUMBER 0.0 1 [source_file: i0]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:928)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:736)
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_stubMap=[];function JSCompiler_stubMethod(JSCompiler_stubMethod_id){return function(){return JSCompiler_stubMap[JSCompiler_stubMethod_id].apply(this,arguments)}}function JSCompiler_unstubMethod(JSCompiler_unstubMethod_id,JSCompiler_unstubMethod_body){return JSCompiler_stubMap[JSCompiler_unstubMethod_id]=JSCompiler_unstubMethod_body}function Foo(){}Foo.prototype.b1=JSCompiler_stubMethod(0);Foo.prototype.b1=JSCompiler_unstubMethod(0,function(){Foo.prototype.b2=JSCompiler_stubMethod(1)});
var y=new Foo;y.b1();Foo.prototype.b2=JSCompiler_unstubMethod(1,function(){var x=1;Foo.prototype.b3=function(){x}});y=new Foo;z.b2();y=new Foo;z.b3()
Result: var JSCompiler_stubMap=[];function JSCompiler_stubMethod(JSCompiler_stubMethod_id){return function(){return JSCompiler_stubMap[JSCompiler_stubMethod_id].apply(this,arguments)}}function JSCompiler_unstubMethod(JSCompiler_unstubMethod_id,JSCompiler_unstubMethod_body){return JSCompiler_stubMap[JSCompiler_unstubMethod_id]=JSCompiler_unstubMethod_body}function Foo(){}Foo.prototype.b1=JSCompiler_stubMethod(1);Foo.prototype.b1=JSCompiler_unstubMethod(1,function(){Foo.prototype.b2=JSCompiler_stubMethod(0)});
var y=new Foo;y.b1();Foo.prototype.b2=JSCompiler_unstubMethod(0,function(){var x=1;Foo.prototype.b3=function(){x}});y=new Foo;z.b2();y=new Foo;z.b3()
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        VAR 1 [source_file: expected0]
            NAME JSCompiler_stubMap 1 [source_file: expected0]
                ARRAYLIT 1 [source_file: expected0]
        FUNCTION JSCompiler_stubMethod 1 [source_file: expected0]
            NAME JSCompiler_stubMethod 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
                NAME JSCompiler_stubMethod_id 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                RETURN 1 [source_file: expected0]
                    FUNCTION  1 [source_file: expected0]
                        NAME  1 [source_file: expected0]
                        PARAM_LIST 1 [source_file: expected0]
                        BLOCK 1 [source_file: expected0]
                            RETURN 1 [source_file: expected0]
                                CALL 1 [source_file: expected0]
                                    GETPROP 1 [source_file: expected0]
                                        GETELEM 1 [source_file: expected0]
                                            NAME JSCompiler_stubMap 1 [source_file: expected0]
                                            NAME JSCompiler_stubMethod_id 1 [source_file: expected0]
                                        STRING apply 1 [source_file: expected0]
                                    THIS 1 [source_file: expected0]
                                    NAME arguments 1 [source_file: expected0]
        FUNCTION JSCompiler_unstubMethod 1 [source_file: expected0]
            NAME JSCompiler_unstubMethod 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
                NAME JSCompiler_unstubMethod_id 1 [source_file: expected0]
                NAME JSCompiler_unstubMethod_body 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                RETURN 1 [source_file: expected0]
                    ASSIGN 1 [source_file: expected0]
                        GETELEM 1 [source_file: expected0]
                            NAME JSCompiler_stubMap 1 [source_file: expected0]
                            NAME JSCompiler_unstubMethod_id 1 [source_file: expected0]
                        NAME JSCompiler_unstubMethod_body 1 [source_file: expected0]
        FUNCTION Foo 1 [source_file: expected0]
            NAME Foo 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            ASSIGN 1 [source_file: expected0]
                GETPROP 1 [source_file: expected0]
                    GETPROP 1 [source_file: expected0]
                        NAME Foo 1 [source_file: expected0]
                        STRING prototype 1 [source_file: expected0]
                    STRING b1 1 [source_file: expected0]
                CALL 1 [free_call: 1] [source_file: expected0]
                    NAME JSCompiler_stubMethod 1 [source_file: expected0]
                    NUMBER 0.0 1 [source_file: expected0]
    SCRIPT 1 [synthetic: 1] [source_file: expected1] [input_id: InputId: expected1]
        EXPR_RESULT 1 [source_file: expected1]
            ASSIGN 1 [source_file: expected1]
                GETPROP 1 [source_file: expected1]
                    GETPROP 1 [source_file: expected1]
                        NAME Foo 1 [source_file: expected1]
                        STRING prototype 1 [source_file: expected1]
                    STRING b1 1 [source_file: expected1]
                CALL 1 [free_call: 1] [source_file: expected1]
                    NAME JSCompiler_unstubMethod 1 [source_file: expected1]
                    NUMBER 0.0 1 [source_file: expected1]
                    FUNCTION  1 [source_file: expected1]
                        NAME  1 [source_file: expected1]
                        PARAM_LIST 1 [source_file: expected1]
                        BLOCK 1 [source_file: expected1]
                            EXPR_RESULT 1 [source_file: expected1]
                                ASSIGN 1 [source_file: expected1]
                                    GETPROP 1 [source_file: expected1]
                                        GETPROP 1 [source_file: expected1]
                                            NAME Foo 1 [source_file: expected1]
                                            STRING prototype 1 [source_file: expected1]
                                        STRING b2 1 [source_file: expected1]
                                    CALL 1 [free_call: 1] [source_file: expected1]
                                        NAME JSCompiler_stubMethod 1 [source_file: expected1]
                                        NUMBER 1.0 1 [source_file: expected1]
        VAR 1 [source_file: expected1]
            NAME y 1 [source_file: expected1]
                NEW 1 [source_file: expected1]
                    NAME Foo 1 [source_file: expected1]
        EXPR_RESULT 1 [source_file: expected1]
            CALL 1 [source_file: expected1]
                GETPROP 1 [source_file: expected1]
                    NAME y 1 [source_file: expected1]
                    STRING b1 1 [source_file: expected1]
    SCRIPT 1 [synthetic: 1] [source_file: expected2] [input_id: InputId: expected2]
        EXPR_RESULT 1 [source_file: expected2]
            ASSIGN 1 [source_file: expected2]
                GETPROP 1 [source_file: expected2]
                    GETPROP 1 [source_file: expected2]
                        NAME Foo 1 [source_file: expected2]
                        STRING prototype 1 [source_file: expected2]
                    STRING b2 1 [source_file: expected2]
                CALL 1 [free_call: 1] [source_file: expected2]
                    NAME JSCompiler_unstubMethod 1 [source_file: expected2]
                    NUMBER 1.0 1 [source_file: expected2]
                    FUNCTION  1 [source_file: expected2]
                        NAME  1 [source_file: expected2]
                        PARAM_LIST 1 [source_file: expected2]
                        BLOCK 1 [source_file: expected2]
                            VAR 1 [source_file: expected2]
                                NAME x 1 [source_file: expected2]
                                    NUMBER 1.0 1 [source_file: expected2]
                            EXPR_RESULT 1 [source_file: expected2]
                                ASSIGN 1 [source_file: expected2]
                                    GETPROP 1 [source_file: expected2]
                                        GETPROP 1 [source_file: expected2]
                                            NAME Foo 1 [source_file: expected2]
                                            STRING prototype 1 [source_file: expected2]
                                        STRING b3 1 [source_file: expected2]
                                    FUNCTION  1 [source_file: expected2]
                                        NAME  1 [source_file: expected2]
                                        PARAM_LIST 1 [source_file: expected2]
                                        BLOCK 1 [source_file: expected2]
                                            EXPR_RESULT 1 [source_file: expected2]
                                                NAME x 1 [source_file: expected2]
        EXPR_RESULT 1 [source_file: expected2]
            ASSIGN 1 [source_file: expected2]
                NAME y 1 [source_file: expected2]
                NEW 1 [source_file: expected2]
                    NAME Foo 1 [source_file: expected2]
        EXPR_RESULT 1 [source_file: expected2]
            CALL 1 [source_file: expected2]
                GETPROP 1 [source_file: expected2]
                    NAME z 1 [source_file: expected2]
                    STRING b2 1 [source_file: expected2]
    SCRIPT 1 [synthetic: 1] [source_file: expected3] [input_id: InputId: expected3]
        EXPR_RESULT 1 [source_file: expected3]
            ASSIGN 1 [source_file: expected3]
                NAME y 1 [source_file: expected3]
                NEW 1 [source_file: expected3]
                    NAME Foo 1 [source_file: expected3]
        EXPR_RESULT 1 [source_file: expected3]
            CALL 1 [source_file: expected3]
                GETPROP 1 [source_file: expected3]
                    NAME z 1 [source_file: expected3]
                    STRING b3 1 [source_file: expected3]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: i0] [input_id: InputId: i0]
        VAR 1 [source_file:  [synthetic:1] ]
            NAME JSCompiler_stubMap 1 [source_file:  [synthetic:1] ]
                ARRAYLIT 1 [source_file:  [synthetic:1] ]
        FUNCTION JSCompiler_stubMethod 1 [source_file:  [synthetic:1] ]
            NAME JSCompiler_stubMethod 1 [source_file:  [synthetic:1] ]
            PARAM_LIST 1 [source_file:  [synthetic:1] ]
                NAME JSCompiler_stubMethod_id 1 [source_file:  [synthetic:1] ]
            BLOCK 1 [source_file:  [synthetic:1] ]
                RETURN 1 [source_file:  [synthetic:1] ]
                    FUNCTION  1 [source_file:  [synthetic:1] ]
                        NAME  1 [source_file:  [synthetic:1] ]
                        PARAM_LIST 1 [source_file:  [synthetic:1] ]
                        BLOCK 1 [source_file:  [synthetic:1] ]
                            RETURN 1 [source_file:  [synthetic:1] ]
                                CALL 1 [source_file:  [synthetic:1] ]
                                    GETPROP 1 [source_file:  [synthetic:1] ]
                                        GETELEM 1 [source_file:  [synthetic:1] ]
                                            NAME JSCompiler_stubMap 1 [source_file:  [synthetic:1] ]
                                            NAME JSCompiler_stubMethod_id 1 [source_file:  [synthetic:1] ]
                                        STRING apply 1 [source_file:  [synthetic:1] ]
                                    THIS 1 [source_file:  [synthetic:1] ]
                                    NAME arguments 1 [source_file:  [synthetic:1] ]
        FUNCTION JSCompiler_unstubMethod 1 [source_file:  [synthetic:1] ]
            NAME JSCompiler_unstubMethod 1 [source_file:  [synthetic:1] ]
            PARAM_LIST 1 [source_file:  [synthetic:1] ]
                NAME JSCompiler_unstubMethod_id 1 [source_file:  [synthetic:1] ]
                NAME JSCompiler_unstubMethod_body 1 [source_file:  [synthetic:1] ]
            BLOCK 1 [source_file:  [synthetic:1] ]
                RETURN 1 [source_file:  [synthetic:1] ]
                    ASSIGN 1 [source_file:  [synthetic:1] ]
                        GETELEM 1 [source_file:  [synthetic:1] ]
                            NAME JSCompiler_stubMap 1 [source_file:  [synthetic:1] ]
                            NAME JSCompiler_unstubMethod_id 1 [source_file:  [synthetic:1] ]
                        NAME JSCompiler_unstubMethod_body 1 [source_file:  [synthetic:1] ]
        FUNCTION Foo 1 [source_file: i0]
            NAME Foo 1 [source_file: i0]
            PARAM_LIST 1 [source_file: i0]
            BLOCK 1 [source_file: i0]
        EXPR_RESULT 1 [source_file: i0]
            ASSIGN 1 [source_file: i0]
                GETPROP 1 [source_file: i0]
                    GETPROP 1 [source_file: i0]
                        NAME Foo 1 [source_file: i0]
                        STRING prototype 1 [source_file: i0]
                    STRING b1 1 [source_file: i0]
                CALL 1 [free_call: 1] [source_file: i0]
                    NAME JSCompiler_stubMethod 1 [source_file: i0]
                    NUMBER 1.0 1 [source_file: i0]
    SCRIPT 1 [synthetic: 1] [source_file: i1] [input_id: InputId: i1]
        EXPR_RESULT 1 [source_file: i0]
            ASSIGN 1 [source_file: i0]
                GETPROP 1 [source_file: i0]
                    GETPROP 1 [source_file: i0]
                        NAME Foo 1 [source_file: i0]
                        STRING prototype 1 [source_file: i0]
                    STRING b1 1 [source_file: i0]
                CALL 1 [free_call: 1] [source_file: i0]
                    NAME JSCompiler_unstubMethod 1 [source_file: i0]
                    NUMBER 1.0 1 [source_file: i0]
                    FUNCTION  1 [source_file: i0]
                        NAME  1 [source_file: i0]
                        PARAM_LIST 1 [source_file: i0]
                        BLOCK 1 [source_file: i0]
                            EXPR_RESULT 1 [source_file: i0]
                                ASSIGN 1 [source_file: i0]
                                    GETPROP 1 [source_file: i0]
                                        GETPROP 1 [source_file: i0]
                                            NAME Foo 1 [source_file: i0]
                                            STRING prototype 1 [source_file: i0]
                                        STRING b2 1 [source_file: i0]
                                    CALL 1 [free_call: 1] [source_file: i0]
                                        NAME JSCompiler_stubMethod 1 [source_file: i0]
                                        NUMBER 0.0 1 [source_file: i0]
        VAR 1 [source_file: i1]
            NAME y 1 [source_file: i1]
                NEW 1 [source_file: i1]
                    NAME Foo 1 [source_file: i1]
        EXPR_RESULT 1 [source_file: i1]
            CALL 1 [source_file: i1]
                GETPROP 1 [source_file: i1]
                    NAME y 1 [source_file: i1]
                    STRING b1 1 [source_file: i1]
    SCRIPT 1 [synthetic: 1] [source_file: i2] [input_id: InputId: i2]
        EXPR_RESULT 1 [source_file: i0]
            ASSIGN 1 [source_file: i0]
                GETPROP 1 [source_file: i0]
                    GETPROP 1 [source_file: i0]
                        NAME Foo 1 [source_file: i0]
                        STRING prototype 1 [source_file: i0]
                    STRING b2 1 [source_file: i0]
                CALL 1 [free_call: 1] [source_file: i0]
                    NAME JSCompiler_unstubMethod 1 [source_file: i0]
                    NUMBER 0.0 1 [source_file: i0]
                    FUNCTION  1 [source_file: i0]
                        NAME  1 [source_file: i0]
                        PARAM_LIST 1 [source_file: i0]
                        BLOCK 1 [source_file: i0]
                            VAR 1 [source_file: i0]
                                NAME x 1 [source_file: i0]
                                    NUMBER 1.0 1 [source_file: i0]
                            EXPR_RESULT 1 [source_file: i0]
                                ASSIGN 1 [source_file: i0]
                                    GETPROP 1 [source_file: i0]
                                        GETPROP 1 [source_file: i0]
                                            NAME Foo 1 [source_file: i0]
                                            STRING prototype 1 [source_file: i0]
                                        STRING b3 1 [source_file: i0]
                                    FUNCTION  1 [source_file: i0]
                                        NAME  1 [source_file: i0]
                                        PARAM_LIST 1 [source_file: i0]
                                        BLOCK 1 [source_file: i0]
                                            EXPR_RESULT 1 [source_file: i0]
                                                NAME x 1 [source_file: i0]
        EXPR_RESULT 1 [source_file: i2]
            ASSIGN 1 [source_file: i2]
                NAME y 1 [source_file: i2]
                NEW 1 [source_file: i2]
                    NAME Foo 1 [source_file: i2]
        EXPR_RESULT 1 [source_file: i2]
            CALL 1 [source_file: i2]
                GETPROP 1 [source_file: i2]
                    NAME z 1 [source_file: i2]
                    STRING b2 1 [source_file: i2]
    SCRIPT 1 [synthetic: 1] [source_file: i3] [input_id: InputId: i3]
        EXPR_RESULT 1 [source_file: i3]
            ASSIGN 1 [source_file: i3]
                NAME y 1 [source_file: i3]
                NEW 1 [source_file: i3]
                    NAME Foo 1 [source_file: i3]
        EXPR_RESULT 1 [source_file: i3]
            CALL 1 [source_file: i3]
                GETPROP 1 [source_file: i3]
                    NAME z 1 [source_file: i3]
                    STRING b3 1 [source_file: i3]


Subtree1: NUMBER 0.0 1 [source_file: expected0]


Subtree2: NUMBER 1.0 1 [source_file: i0]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:928)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:736)
junit.framework.AssertionFailedError: 
Expected: f=function(){var action;a:{var proto=null;try{proto=new Proto}finally{action=proto;return}}}
Result: f=function(){var action;a:{var proto=null;try{proto=new Proto}finally{action=proto}}}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            ASSIGN 1 [source_file: expected0]
                NAME f 1 [source_file: expected0]
                FUNCTION  1 [source_file: expected0]
                    NAME  1 [source_file: expected0]
                    PARAM_LIST 1 [source_file: expected0]
                    BLOCK 1 [source_file: expected0]
                        VAR 2 [source_file: expected0]
                            NAME action 2 [source_file: expected0]
                        LABEL 3 [source_file: expected0]
                            LABEL_NAME a 3 [source_file: expected0]
                            BLOCK 3 [source_file: expected0]
                                VAR 4 [source_file: expected0]
                                    NAME proto 4 [source_file: expected0]
                                        NULL 4 [source_file: expected0]
                                TRY 5 [source_file: expected0]
                                    BLOCK 5 [source_file: expected0]
                                        EXPR_RESULT 6 [source_file: expected0]
                                            ASSIGN 6 [source_file: expected0]
                                                NAME proto 6 [source_file: expected0]
                                                NEW 6 [source_file: expected0]
                                                    NAME Proto 6 [source_file: expected0]
                                    BLOCK 7 [source_file: expected0]
                                    BLOCK 7 [source_file: expected0]
                                        EXPR_RESULT 8 [source_file: expected0]
                                            ASSIGN 8 [source_file: expected0]
                                                NAME action 8 [source_file: expected0]
                                                NAME proto 8 [source_file: expected0]
                                        RETURN 9 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        EXPR_RESULT 1 [source_file: testcode]
            ASSIGN 1 [source_file: testcode]
                NAME f 1 [source_file: testcode]
                FUNCTION  1 [source_file: testcode]
                    NAME  1 [source_file: testcode]
                    PARAM_LIST 1 [source_file: testcode]
                    BLOCK 1 [source_file: testcode]
                        VAR 2 [source_file: testcode]
                            NAME action 2 [source_file: testcode]
                        LABEL 3 [source_file: testcode]
                            LABEL_NAME a 3 [source_file: testcode]
                            BLOCK 3 [source_file: testcode]
                                VAR 4 [source_file: testcode]
                                    NAME proto 4 [source_file: testcode]
                                        NULL 4 [source_file: testcode]
                                TRY 5 [source_file: testcode]
                                    BLOCK 5 [source_file: testcode]
                                        EXPR_RESULT 6 [source_file: testcode]
                                            ASSIGN 6 [source_file: testcode]
                                                NAME proto 6 [source_file: testcode]
                                                NEW 6 [source_file: testcode]
                                                    NAME Proto 6 [source_file: testcode]
                                    BLOCK 7 [source_file: testcode]
                                    BLOCK 7 [source_file: testcode]
                                        EXPR_RESULT 8 [source_file: testcode]
                                            ASSIGN 8 [source_file: testcode]
                                                NAME action 8 [source_file: testcode]
                                                NAME proto 8 [source_file: testcode]


Subtree1: BLOCK 7 [source_file: expected0]
    EXPR_RESULT 8 [source_file: expected0]
        ASSIGN 8 [source_file: expected0]
            NAME action 8 [source_file: expected0]
            NAME proto 8 [source_file: expected0]
    RETURN 9 [source_file: expected0]


Subtree2: BLOCK 7 [source_file: testcode]
    EXPR_RESULT 8 [source_file: testcode]
        ASSIGN 8 [source_file: testcode]
            NAME action 8 [source_file: testcode]
            NAME proto 8 [source_file: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:928)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:460)
junit.framework.AssertionFailedError: 
Expected: function f(){b:try{throw 9;}finally{break b}return 1}
Result: function f(){b:try{throw 9;}finally{}return 1}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION f 1 [source_file: expected0]
            NAME f 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                LABEL 1 [source_file: expected0]
                    LABEL_NAME b 1 [source_file: expected0]
                    TRY 1 [source_file: expected0]
                        BLOCK 1 [source_file: expected0]
                            THROW 1 [source_file: expected0]
                                NUMBER 9.0 1 [source_file: expected0]
                        BLOCK 1 [source_file: expected0]
                        BLOCK 1 [source_file: expected0]
                            BREAK 1 [source_file: expected0]
                                LABEL_NAME b 1 [source_file: expected0]
                RETURN 1 [source_file: expected0]
                    NUMBER 1.0 1 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION f 1 [source_file: testcode]
            NAME f 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                LABEL 1 [source_file: testcode]
                    LABEL_NAME b 1 [source_file: testcode]
                    TRY 1 [source_file: testcode]
                        BLOCK 1 [source_file: testcode]
                            THROW 1 [source_file: testcode]
                                NUMBER 9.0 1 [source_file: testcode]
                        BLOCK 1 [source_file: testcode]
                        BLOCK 1 [source_file: testcode]
                RETURN 1 [source_file: testcode]
                    NUMBER 1.0 1 [source_file: testcode]


Subtree1: BLOCK 1 [source_file: expected0]
    BREAK 1 [source_file: expected0]
        LABEL_NAME b 1 [source_file: expected0]


Subtree2: BLOCK 1 [source_file: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:928)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:460)
junit.framework.AssertionFailedError: 
Expected: f=function(){var action;a:do{var proto=null;try{proto=new Proto}finally{action=proto;continue a}}while(false);alert(action)}
Result: f=function(){var action;a:do{var proto=null;try{proto=new Proto}finally{action=proto}}while(false);alert(action)}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            ASSIGN 1 [source_file: expected0]
                NAME f 1 [source_file: expected0]
                FUNCTION  1 [source_file: expected0]
                    NAME  1 [source_file: expected0]
                    PARAM_LIST 1 [source_file: expected0]
                    BLOCK 1 [source_file: expected0]
                        VAR 2 [source_file: expected0]
                            NAME action 2 [source_file: expected0]
                        LABEL 3 [source_file: expected0]
                            LABEL_NAME a 3 [source_file: expected0]
                            DO 3 [source_file: expected0]
                                BLOCK 3 [source_file: expected0]
                                    VAR 4 [source_file: expected0]
                                        NAME proto 4 [source_file: expected0]
                                            NULL 4 [source_file: expected0]
                                    TRY 5 [source_file: expected0]
                                        BLOCK 5 [source_file: expected0]
                                            EXPR_RESULT 6 [source_file: expected0]
                                                ASSIGN 6 [source_file: expected0]
                                                    NAME proto 6 [source_file: expected0]
                                                    NEW 6 [source_file: expected0]
                                                        NAME Proto 6 [source_file: expected0]
                                        BLOCK 7 [source_file: expected0]
                                        BLOCK 7 [source_file: expected0]
                                            EXPR_RESULT 8 [source_file: expected0]
                                                ASSIGN 8 [source_file: expected0]
                                                    NAME action 8 [source_file: expected0]
                                                    NAME proto 8 [source_file: expected0]
                                            CONTINUE 9 [source_file: expected0]
                                                LABEL_NAME a 9 [source_file: expected0]
                                FALSE 11 [source_file: expected0]
                        EXPR_RESULT 12 [source_file: expected0]
                            CALL 12 [free_call: 1] [source_file: expected0]
                                NAME alert 12 [source_file: expected0]
                                NAME action 12 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        EXPR_RESULT 1 [source_file: testcode]
            ASSIGN 1 [source_file: testcode]
                NAME f 1 [source_file: testcode]
                FUNCTION  1 [source_file: testcode]
                    NAME  1 [source_file: testcode]
                    PARAM_LIST 1 [source_file: testcode]
                    BLOCK 1 [source_file: testcode]
                        VAR 2 [source_file: testcode]
                            NAME action 2 [source_file: testcode]
                        LABEL 3 [source_file: testcode]
                            LABEL_NAME a 3 [source_file: testcode]
                            DO 3 [source_file: testcode]
                                BLOCK 3 [source_file: testcode]
                                    VAR 4 [source_file: testcode]
                                        NAME proto 4 [source_file: testcode]
                                            NULL 4 [source_file: testcode]
                                    TRY 5 [source_file: testcode]
                                        BLOCK 5 [source_file: testcode]
                                            EXPR_RESULT 6 [source_file: testcode]
                                                ASSIGN 6 [source_file: testcode]
                                                    NAME proto 6 [source_file: testcode]
                                                    NEW 6 [source_file: testcode]
                                                        NAME Proto 6 [source_file: testcode]
                                        BLOCK 7 [source_file: testcode]
                                        BLOCK 7 [source_file: testcode]
                                            EXPR_RESULT 8 [source_file: testcode]
                                                ASSIGN 8 [source_file: testcode]
                                                    NAME action 8 [source_file: testcode]
                                                    NAME proto 8 [source_file: testcode]
                                FALSE 11 [source_file: testcode]
                        EXPR_RESULT 12 [source_file: testcode]
                            CALL 12 [free_call: 1] [source_file: testcode]
                                NAME alert 12 [source_file: testcode]
                                NAME action 12 [source_file: testcode]


Subtree1: BLOCK 7 [source_file: expected0]
    EXPR_RESULT 8 [source_file: expected0]
        ASSIGN 8 [source_file: expected0]
            NAME action 8 [source_file: expected0]
            NAME proto 8 [source_file: expected0]
    CONTINUE 9 [source_file: expected0]
        LABEL_NAME a 9 [source_file: expected0]


Subtree2: BLOCK 7 [source_file: testcode]
    EXPR_RESULT 8 [source_file: testcode]
        ASSIGN 8 [source_file: testcode]
            NAME action 8 [source_file: testcode]
            NAME proto 8 [source_file: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:928)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:460)
junit.framework.AssertionFailedError: 
Expected: function f(){b:try{throw 9;}finally{switch(x){case 1:break b}}return 1}
Result: function f(){b:try{throw 9;}finally{switch(x){case 1:}}return 1}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION f 1 [source_file: expected0]
            NAME f 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                LABEL 1 [source_file: expected0]
                    LABEL_NAME b 1 [source_file: expected0]
                    TRY 1 [source_file: expected0]
                        BLOCK 1 [source_file: expected0]
                            THROW 1 [source_file: expected0]
                                NUMBER 9.0 1 [source_file: expected0]
                        BLOCK 1 [source_file: expected0]
                        BLOCK 1 [source_file: expected0]
                            SWITCH 1 [source_file: expected0]
                                NAME x 1 [source_file: expected0]
                                CASE 1 [source_file: expected0]
                                    NUMBER 1.0 1 [source_file: expected0]
                                    BLOCK 1 [synthetic: 1] [source_file: expected0]
                                        BREAK 1 [source_file: expected0]
                                            LABEL_NAME b 1 [source_file: expected0]
                RETURN 1 [source_file: expected0]
                    NUMBER 1.0 1 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION f 1 [source_file: testcode]
            NAME f 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                LABEL 1 [source_file: testcode]
                    LABEL_NAME b 1 [source_file: testcode]
                    TRY 1 [source_file: testcode]
                        BLOCK 1 [source_file: testcode]
                            THROW 1 [source_file: testcode]
                                NUMBER 9.0 1 [source_file: testcode]
                        BLOCK 1 [source_file: testcode]
                        BLOCK 1 [source_file: testcode]
                            SWITCH 1 [source_file: testcode]
                                NAME x 1 [source_file: testcode]
                                CASE 1 [source_file: testcode]
                                    NUMBER 1.0 1 [source_file: testcode]
                                    BLOCK 1 [synthetic: 1] [source_file: testcode]
                RETURN 1 [source_file: testcode]
                    NUMBER 1.0 1 [source_file: testcode]


Subtree1: BLOCK 1 [synthetic: 1] [source_file: expected0]
    BREAK 1 [source_file: expected0]
        LABEL_NAME b 1 [source_file: expected0]


Subtree2: BLOCK 1 [synthetic: 1] [source_file: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:928)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:460)
junit.framework.AssertionFailedError: 
Expected: f=function(){var action;a:{var proto=null;try{proto=new Proto}finally{action=proto;break a}}alert(action)}
Result: f=function(){var action;a:{var proto=null;try{proto=new Proto}finally{action=proto}}alert(action)}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            ASSIGN 1 [source_file: expected0]
                NAME f 1 [source_file: expected0]
                FUNCTION  1 [source_file: expected0]
                    NAME  1 [source_file: expected0]
                    PARAM_LIST 1 [source_file: expected0]
                    BLOCK 1 [source_file: expected0]
                        VAR 2 [source_file: expected0]
                            NAME action 2 [source_file: expected0]
                        LABEL 3 [source_file: expected0]
                            LABEL_NAME a 3 [source_file: expected0]
                            BLOCK 3 [source_file: expected0]
                                VAR 4 [source_file: expected0]
                                    NAME proto 4 [source_file: expected0]
                                        NULL 4 [source_file: expected0]
                                TRY 5 [source_file: expected0]
                                    BLOCK 5 [source_file: expected0]
                                        EXPR_RESULT 6 [source_file: expected0]
                                            ASSIGN 6 [source_file: expected0]
                                                NAME proto 6 [source_file: expected0]
                                                NEW 6 [source_file: expected0]
                                                    NAME Proto 6 [source_file: expected0]
                                    BLOCK 7 [source_file: expected0]
                                    BLOCK 7 [source_file: expected0]
                                        EXPR_RESULT 8 [source_file: expected0]
                                            ASSIGN 8 [source_file: expected0]
                                                NAME action 8 [source_file: expected0]
                                                NAME proto 8 [source_file: expected0]
                                        BREAK 9 [source_file: expected0]
                                            LABEL_NAME a 9 [source_file: expected0]
                        EXPR_RESULT 12 [source_file: expected0]
                            CALL 12 [free_call: 1] [source_file: expected0]
                                NAME alert 12 [source_file: expected0]
                                NAME action 12 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        EXPR_RESULT 1 [source_file: testcode]
            ASSIGN 1 [source_file: testcode]
                NAME f 1 [source_file: testcode]
                FUNCTION  1 [source_file: testcode]
                    NAME  1 [source_file: testcode]
                    PARAM_LIST 1 [source_file: testcode]
                    BLOCK 1 [source_file: testcode]
                        VAR 2 [source_file: testcode]
                            NAME action 2 [source_file: testcode]
                        LABEL 3 [source_file: testcode]
                            LABEL_NAME a 3 [source_file: testcode]
                            BLOCK 3 [source_file: testcode]
                                VAR 4 [source_file: testcode]
                                    NAME proto 4 [source_file: testcode]
                                        NULL 4 [source_file: testcode]
                                TRY 5 [source_file: testcode]
                                    BLOCK 5 [source_file: testcode]
                                        EXPR_RESULT 6 [source_file: testcode]
                                            ASSIGN 6 [source_file: testcode]
                                                NAME proto 6 [source_file: testcode]
                                                NEW 6 [source_file: testcode]
                                                    NAME Proto 6 [source_file: testcode]
                                    BLOCK 7 [source_file: testcode]
                                    BLOCK 7 [source_file: testcode]
                                        EXPR_RESULT 8 [source_file: testcode]
                                            ASSIGN 8 [source_file: testcode]
                                                NAME action 8 [source_file: testcode]
                                                NAME proto 8 [source_file: testcode]
                        EXPR_RESULT 12 [source_file: testcode]
                            CALL 12 [free_call: 1] [source_file: testcode]
                                NAME alert 12 [source_file: testcode]
                                NAME action 12 [source_file: testcode]


Subtree1: BLOCK 7 [source_file: expected0]
    EXPR_RESULT 8 [source_file: expected0]
        ASSIGN 8 [source_file: expected0]
            NAME action 8 [source_file: expected0]
            NAME proto 8 [source_file: expected0]
    BREAK 9 [source_file: expected0]
        LABEL_NAME a 9 [source_file: expected0]


Subtree2: BLOCK 7 [source_file: testcode]
    EXPR_RESULT 8 [source_file: testcode]
        ASSIGN 8 [source_file: testcode]
            NAME action 8 [source_file: testcode]
            NAME proto 8 [source_file: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:928)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:460)
junit.framework.AssertionFailedError: 
Expected: f=function(){var action;a:{var proto=null;try{}finally{try{proto=new Proto}finally{action=proto;break a}}}alert(action)}
Result: f=function(){var action;a:{var proto=null;try{}finally{try{proto=new Proto}finally{action=proto}}}alert(action)}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            ASSIGN 1 [source_file: expected0]
                NAME f 1 [source_file: expected0]
                FUNCTION  1 [source_file: expected0]
                    NAME  1 [source_file: expected0]
                    PARAM_LIST 1 [source_file: expected0]
                    BLOCK 1 [source_file: expected0]
                        VAR 2 [source_file: expected0]
                            NAME action 2 [source_file: expected0]
                        LABEL 3 [source_file: expected0]
                            LABEL_NAME a 3 [source_file: expected0]
                            BLOCK 3 [source_file: expected0]
                                VAR 4 [source_file: expected0]
                                    NAME proto 4 [source_file: expected0]
                                        NULL 4 [source_file: expected0]
                                TRY 5 [source_file: expected0]
                                    BLOCK 5 [source_file: expected0]
                                    BLOCK 6 [source_file: expected0]
                                    BLOCK 6 [source_file: expected0]
                                        TRY 7 [source_file: expected0]
                                            BLOCK 7 [source_file: expected0]
                                                EXPR_RESULT 8 [source_file: expected0]
                                                    ASSIGN 8 [source_file: expected0]
                                                        NAME proto 8 [source_file: expected0]
                                                        NEW 8 [source_file: expected0]
                                                            NAME Proto 8 [source_file: expected0]
                                            BLOCK 9 [source_file: expected0]
                                            BLOCK 9 [source_file: expected0]
                                                EXPR_RESULT 10 [source_file: expected0]
                                                    ASSIGN 10 [source_file: expected0]
                                                        NAME action 10 [source_file: expected0]
                                                        NAME proto 10 [source_file: expected0]
                                                BREAK 11 [source_file: expected0]
                                                    LABEL_NAME a 11 [source_file: expected0]
                        EXPR_RESULT 15 [source_file: expected0]
                            CALL 15 [free_call: 1] [source_file: expected0]
                                NAME alert 15 [source_file: expected0]
                                NAME action 15 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        EXPR_RESULT 1 [source_file: testcode]
            ASSIGN 1 [source_file: testcode]
                NAME f 1 [source_file: testcode]
                FUNCTION  1 [source_file: testcode]
                    NAME  1 [source_file: testcode]
                    PARAM_LIST 1 [source_file: testcode]
                    BLOCK 1 [source_file: testcode]
                        VAR 2 [source_file: testcode]
                            NAME action 2 [source_file: testcode]
                        LABEL 3 [source_file: testcode]
                            LABEL_NAME a 3 [source_file: testcode]
                            BLOCK 3 [source_file: testcode]
                                VAR 4 [source_file: testcode]
                                    NAME proto 4 [source_file: testcode]
                                        NULL 4 [source_file: testcode]
                                TRY 5 [source_file: testcode]
                                    BLOCK 5 [source_file: testcode]
                                    BLOCK 6 [source_file: testcode]
                                    BLOCK 6 [source_file: testcode]
                                        TRY 7 [source_file: testcode]
                                            BLOCK 7 [source_file: testcode]
                                                EXPR_RESULT 8 [source_file: testcode]
                                                    ASSIGN 8 [source_file: testcode]
                                                        NAME proto 8 [source_file: testcode]
                                                        NEW 8 [source_file: testcode]
                                                            NAME Proto 8 [source_file: testcode]
                                            BLOCK 9 [source_file: testcode]
                                            BLOCK 9 [source_file: testcode]
                                                EXPR_RESULT 10 [source_file: testcode]
                                                    ASSIGN 10 [source_file: testcode]
                                                        NAME action 10 [source_file: testcode]
                                                        NAME proto 10 [source_file: testcode]
                        EXPR_RESULT 15 [source_file: testcode]
                            CALL 15 [free_call: 1] [source_file: testcode]
                                NAME alert 15 [source_file: testcode]
                                NAME action 15 [source_file: testcode]


Subtree1: BLOCK 9 [source_file: expected0]
    EXPR_RESULT 10 [source_file: expected0]
        ASSIGN 10 [source_file: expected0]
            NAME action 10 [source_file: expected0]
            NAME proto 10 [source_file: expected0]
    BREAK 11 [source_file: expected0]
        LABEL_NAME a 11 [source_file: expected0]


Subtree2: BLOCK 9 [source_file: testcode]
    EXPR_RESULT 10 [source_file: testcode]
        ASSIGN 10 [source_file: testcode]
            NAME action 10 [source_file: testcode]
            NAME proto 10 [source_file: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:928)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:460)
junit.framework.AssertionFailedError: 
Expected: f=function(){var action;a:{var proto=null;try{proto=new Proto}finally{action=proto;return}}}
Result: f=function(){var action;a:{var proto=null;try{proto=new Proto}finally{action=proto}}}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            ASSIGN 1 [source_file: expected0]
                NAME f 1 [source_file: expected0]
                FUNCTION  1 [source_file: expected0]
                    NAME  1 [source_file: expected0]
                    PARAM_LIST 1 [source_file: expected0]
                    BLOCK 1 [source_file: expected0]
                        VAR 2 [source_file: expected0]
                            NAME action 2 [source_file: expected0]
                        LABEL 3 [source_file: expected0]
                            LABEL_NAME a 3 [source_file: expected0]
                            BLOCK 3 [source_file: expected0]
                                VAR 4 [source_file: expected0]
                                    NAME proto 4 [source_file: expected0]
                                        NULL 4 [source_file: expected0]
                                TRY 5 [source_file: expected0]
                                    BLOCK 5 [source_file: expected0]
                                        EXPR_RESULT 6 [source_file: expected0]
                                            ASSIGN 6 [source_file: expected0]
                                                NAME proto 6 [source_file: expected0]
                                                NEW 6 [source_file: expected0]
                                                    NAME Proto 6 [source_file: expected0]
                                    BLOCK 7 [source_file: expected0]
                                    BLOCK 7 [source_file: expected0]
                                        EXPR_RESULT 8 [source_file: expected0]
                                            ASSIGN 8 [source_file: expected0]
                                                NAME action 8 [source_file: expected0]
                                                NAME proto 8 [source_file: expected0]
                                        RETURN 9 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        EXPR_RESULT 1 [source_file: testcode]
            ASSIGN 1 [source_file: testcode]
                NAME f 1 [source_file: testcode]
                FUNCTION  1 [source_file: testcode]
                    NAME  1 [source_file: testcode]
                    PARAM_LIST 1 [source_file: testcode]
                    BLOCK 1 [source_file: testcode]
                        VAR 2 [source_file: testcode]
                            NAME action 2 [source_file: testcode]
                        LABEL 3 [source_file: testcode]
                            LABEL_NAME a 3 [source_file: testcode]
                            BLOCK 3 [source_file: testcode]
                                VAR 4 [source_file: testcode]
                                    NAME proto 4 [source_file: testcode]
                                        NULL 4 [source_file: testcode]
                                TRY 5 [source_file: testcode]
                                    BLOCK 5 [source_file: testcode]
                                        EXPR_RESULT 6 [source_file: testcode]
                                            ASSIGN 6 [source_file: testcode]
                                                NAME proto 6 [source_file: testcode]
                                                NEW 6 [source_file: testcode]
                                                    NAME Proto 6 [source_file: testcode]
                                    BLOCK 7 [source_file: testcode]
                                    BLOCK 7 [source_file: testcode]
                                        EXPR_RESULT 8 [source_file: testcode]
                                            ASSIGN 8 [source_file: testcode]
                                                NAME action 8 [source_file: testcode]
                                                NAME proto 8 [source_file: testcode]


Subtree1: BLOCK 7 [source_file: expected0]
    EXPR_RESULT 8 [source_file: expected0]
        ASSIGN 8 [source_file: expected0]
            NAME action 8 [source_file: expected0]
            NAME proto 8 [source_file: expected0]
    RETURN 9 [source_file: expected0]


Subtree2: BLOCK 7 [source_file: testcode]
    EXPR_RESULT 8 [source_file: testcode]
        ASSIGN 8 [source_file: testcode]
            NAME action 8 [source_file: testcode]
            NAME proto 8 [source_file: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:928)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:460)
junit.framework.AssertionFailedError: 
Expected: function f(){b:try{throw 9;}finally{break b}return 1}
Result: function f(){b:try{throw 9;}finally{}return 1}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION f 1 [source_file: expected0]
            NAME f 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                LABEL 1 [source_file: expected0]
                    LABEL_NAME b 1 [source_file: expected0]
                    TRY 1 [source_file: expected0]
                        BLOCK 1 [source_file: expected0]
                            THROW 1 [source_file: expected0]
                                NUMBER 9.0 1 [source_file: expected0]
                        BLOCK 1 [source_file: expected0]
                        BLOCK 1 [source_file: expected0]
                            BREAK 1 [source_file: expected0]
                                LABEL_NAME b 1 [source_file: expected0]
                RETURN 1 [source_file: expected0]
                    NUMBER 1.0 1 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION f 1 [source_file: testcode]
            NAME f 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                LABEL 1 [source_file: testcode]
                    LABEL_NAME b 1 [source_file: testcode]
                    TRY 1 [source_file: testcode]
                        BLOCK 1 [source_file: testcode]
                            THROW 1 [source_file: testcode]
                                NUMBER 9.0 1 [source_file: testcode]
                        BLOCK 1 [source_file: testcode]
                        BLOCK 1 [source_file: testcode]
                RETURN 1 [source_file: testcode]
                    NUMBER 1.0 1 [source_file: testcode]


Subtree1: BLOCK 1 [source_file: expected0]
    BREAK 1 [source_file: expected0]
        LABEL_NAME b 1 [source_file: expected0]


Subtree2: BLOCK 1 [source_file: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:928)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:460)
junit.framework.AssertionFailedError: 
Expected: f=function(){var action;a:do{var proto=null;try{proto=new Proto}finally{action=proto;continue a}}while(false);alert(action)}
Result: f=function(){var action;a:do{var proto=null;try{proto=new Proto}finally{action=proto}}while(false);alert(action)}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            ASSIGN 1 [source_file: expected0]
                NAME f 1 [source_file: expected0]
                FUNCTION  1 [source_file: expected0]
                    NAME  1 [source_file: expected0]
                    PARAM_LIST 1 [source_file: expected0]
                    BLOCK 1 [source_file: expected0]
                        VAR 2 [source_file: expected0]
                            NAME action 2 [source_file: expected0]
                        LABEL 3 [source_file: expected0]
                            LABEL_NAME a 3 [source_file: expected0]
                            DO 3 [source_file: expected0]
                                BLOCK 3 [source_file: expected0]
                                    VAR 4 [source_file: expected0]
                                        NAME proto 4 [source_file: expected0]
                                            NULL 4 [source_file: expected0]
                                    TRY 5 [source_file: expected0]
                                        BLOCK 5 [source_file: expected0]
                                            EXPR_RESULT 6 [source_file: expected0]
                                                ASSIGN 6 [source_file: expected0]
                                                    NAME proto 6 [source_file: expected0]
                                                    NEW 6 [source_file: expected0]
                                                        NAME Proto 6 [source_file: expected0]
                                        BLOCK 7 [source_file: expected0]
                                        BLOCK 7 [source_file: expected0]
                                            EXPR_RESULT 8 [source_file: expected0]
                                                ASSIGN 8 [source_file: expected0]
                                                    NAME action 8 [source_file: expected0]
                                                    NAME proto 8 [source_file: expected0]
                                            CONTINUE 9 [source_file: expected0]
                                                LABEL_NAME a 9 [source_file: expected0]
                                FALSE 11 [source_file: expected0]
                        EXPR_RESULT 12 [source_file: expected0]
                            CALL 12 [free_call: 1] [source_file: expected0]
                                NAME alert 12 [source_file: expected0]
                                NAME action 12 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        EXPR_RESULT 1 [source_file: testcode]
            ASSIGN 1 [source_file: testcode]
                NAME f 1 [source_file: testcode]
                FUNCTION  1 [source_file: testcode]
                    NAME  1 [source_file: testcode]
                    PARAM_LIST 1 [source_file: testcode]
                    BLOCK 1 [source_file: testcode]
                        VAR 2 [source_file: testcode]
                            NAME action 2 [source_file: testcode]
                        LABEL 3 [source_file: testcode]
                            LABEL_NAME a 3 [source_file: testcode]
                            DO 3 [source_file: testcode]
                                BLOCK 3 [source_file: testcode]
                                    VAR 4 [source_file: testcode]
                                        NAME proto 4 [source_file: testcode]
                                            NULL 4 [source_file: testcode]
                                    TRY 5 [source_file: testcode]
                                        BLOCK 5 [source_file: testcode]
                                            EXPR_RESULT 6 [source_file: testcode]
                                                ASSIGN 6 [source_file: testcode]
                                                    NAME proto 6 [source_file: testcode]
                                                    NEW 6 [source_file: testcode]
                                                        NAME Proto 6 [source_file: testcode]
                                        BLOCK 7 [source_file: testcode]
                                        BLOCK 7 [source_file: testcode]
                                            EXPR_RESULT 8 [source_file: testcode]
                                                ASSIGN 8 [source_file: testcode]
                                                    NAME action 8 [source_file: testcode]
                                                    NAME proto 8 [source_file: testcode]
                                FALSE 11 [source_file: testcode]
                        EXPR_RESULT 12 [source_file: testcode]
                            CALL 12 [free_call: 1] [source_file: testcode]
                                NAME alert 12 [source_file: testcode]
                                NAME action 12 [source_file: testcode]


Subtree1: BLOCK 7 [source_file: expected0]
    EXPR_RESULT 8 [source_file: expected0]
        ASSIGN 8 [source_file: expected0]
            NAME action 8 [source_file: expected0]
            NAME proto 8 [source_file: expected0]
    CONTINUE 9 [source_file: expected0]
        LABEL_NAME a 9 [source_file: expected0]


Subtree2: BLOCK 7 [source_file: testcode]
    EXPR_RESULT 8 [source_file: testcode]
        ASSIGN 8 [source_file: testcode]
            NAME action 8 [source_file: testcode]
            NAME proto 8 [source_file: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:928)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:460)
junit.framework.AssertionFailedError: 
Expected: function f(){b:try{throw 9;}finally{switch(x){case 1:break b}}return 1}
Result: function f(){b:try{throw 9;}finally{switch(x){case 1:}}return 1}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION f 1 [source_file: expected0]
            NAME f 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                LABEL 1 [source_file: expected0]
                    LABEL_NAME b 1 [source_file: expected0]
                    TRY 1 [source_file: expected0]
                        BLOCK 1 [source_file: expected0]
                            THROW 1 [source_file: expected0]
                                NUMBER 9.0 1 [source_file: expected0]
                        BLOCK 1 [source_file: expected0]
                        BLOCK 1 [source_file: expected0]
                            SWITCH 1 [source_file: expected0]
                                NAME x 1 [source_file: expected0]
                                CASE 1 [source_file: expected0]
                                    NUMBER 1.0 1 [source_file: expected0]
                                    BLOCK 1 [synthetic: 1] [source_file: expected0]
                                        BREAK 1 [source_file: expected0]
                                            LABEL_NAME b 1 [source_file: expected0]
                RETURN 1 [source_file: expected0]
                    NUMBER 1.0 1 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION f 1 [source_file: testcode]
            NAME f 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                LABEL 1 [source_file: testcode]
                    LABEL_NAME b 1 [source_file: testcode]
                    TRY 1 [source_file: testcode]
                        BLOCK 1 [source_file: testcode]
                            THROW 1 [source_file: testcode]
                                NUMBER 9.0 1 [source_file: testcode]
                        BLOCK 1 [source_file: testcode]
                        BLOCK 1 [source_file: testcode]
                            SWITCH 1 [source_file: testcode]
                                NAME x 1 [source_file: testcode]
                                CASE 1 [source_file: testcode]
                                    NUMBER 1.0 1 [source_file: testcode]
                                    BLOCK 1 [synthetic: 1] [source_file: testcode]
                RETURN 1 [source_file: testcode]
                    NUMBER 1.0 1 [source_file: testcode]


Subtree1: BLOCK 1 [synthetic: 1] [source_file: expected0]
    BREAK 1 [source_file: expected0]
        LABEL_NAME b 1 [source_file: expected0]


Subtree2: BLOCK 1 [synthetic: 1] [source_file: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:928)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:460)
junit.framework.AssertionFailedError: 
Expected: f=function(){var action;a:{var proto=null;try{proto=new Proto}finally{action=proto;break a}}alert(action)}
Result: f=function(){var action;a:{var proto=null;try{proto=new Proto}finally{action=proto}}alert(action)}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            ASSIGN 1 [source_file: expected0]
                NAME f 1 [source_file: expected0]
                FUNCTION  1 [source_file: expected0]
                    NAME  1 [source_file: expected0]
                    PARAM_LIST 1 [source_file: expected0]
                    BLOCK 1 [source_file: expected0]
                        VAR 2 [source_file: expected0]
                            NAME action 2 [source_file: expected0]
                        LABEL 3 [source_file: expected0]
                            LABEL_NAME a 3 [source_file: expected0]
                            BLOCK 3 [source_file: expected0]
                                VAR 4 [source_file: expected0]
                                    NAME proto 4 [source_file: expected0]
                                        NULL 4 [source_file: expected0]
                                TRY 5 [source_file: expected0]
                                    BLOCK 5 [source_file: expected0]
                                        EXPR_RESULT 6 [source_file: expected0]
                                            ASSIGN 6 [source_file: expected0]
                                                NAME proto 6 [source_file: expected0]
                                                NEW 6 [source_file: expected0]
                                                    NAME Proto 6 [source_file: expected0]
                                    BLOCK 7 [source_file: expected0]
                                    BLOCK 7 [source_file: expected0]
                                        EXPR_RESULT 8 [source_file: expected0]
                                            ASSIGN 8 [source_file: expected0]
                                                NAME action 8 [source_file: expected0]
                                                NAME proto 8 [source_file: expected0]
                                        BREAK 9 [source_file: expected0]
                                            LABEL_NAME a 9 [source_file: expected0]
                        EXPR_RESULT 12 [source_file: expected0]
                            CALL 12 [free_call: 1] [source_file: expected0]
                                NAME alert 12 [source_file: expected0]
                                NAME action 12 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        EXPR_RESULT 1 [source_file: testcode]
            ASSIGN 1 [source_file: testcode]
                NAME f 1 [source_file: testcode]
                FUNCTION  1 [source_file: testcode]
                    NAME  1 [source_file: testcode]
                    PARAM_LIST 1 [source_file: testcode]
                    BLOCK 1 [source_file: testcode]
                        VAR 2 [source_file: testcode]
                            NAME action 2 [source_file: testcode]
                        LABEL 3 [source_file: testcode]
                            LABEL_NAME a 3 [source_file: testcode]
                            BLOCK 3 [source_file: testcode]
                                VAR 4 [source_file: testcode]
                                    NAME proto 4 [source_file: testcode]
                                        NULL 4 [source_file: testcode]
                                TRY 5 [source_file: testcode]
                                    BLOCK 5 [source_file: testcode]
                                        EXPR_RESULT 6 [source_file: testcode]
                                            ASSIGN 6 [source_file: testcode]
                                                NAME proto 6 [source_file: testcode]
                                                NEW 6 [source_file: testcode]
                                                    NAME Proto 6 [source_file: testcode]
                                    BLOCK 7 [source_file: testcode]
                                    BLOCK 7 [source_file: testcode]
                                        EXPR_RESULT 8 [source_file: testcode]
                                            ASSIGN 8 [source_file: testcode]
                                                NAME action 8 [source_file: testcode]
                                                NAME proto 8 [source_file: testcode]
                        EXPR_RESULT 12 [source_file: testcode]
                            CALL 12 [free_call: 1] [source_file: testcode]
                                NAME alert 12 [source_file: testcode]
                                NAME action 12 [source_file: testcode]


Subtree1: BLOCK 7 [source_file: expected0]
    EXPR_RESULT 8 [source_file: expected0]
        ASSIGN 8 [source_file: expected0]
            NAME action 8 [source_file: expected0]
            NAME proto 8 [source_file: expected0]
    BREAK 9 [source_file: expected0]
        LABEL_NAME a 9 [source_file: expected0]


Subtree2: BLOCK 7 [source_file: testcode]
    EXPR_RESULT 8 [source_file: testcode]
        ASSIGN 8 [source_file: testcode]
            NAME action 8 [source_file: testcode]
            NAME proto 8 [source_file: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:928)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:460)
junit.framework.AssertionFailedError: 
Expected: f=function(){var action;a:{var proto=null;try{}finally{try{proto=new Proto}finally{action=proto;break a}}}alert(action)}
Result: f=function(){var action;a:{var proto=null;try{}finally{try{proto=new Proto}finally{action=proto}}}alert(action)}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            ASSIGN 1 [source_file: expected0]
                NAME f 1 [source_file: expected0]
                FUNCTION  1 [source_file: expected0]
                    NAME  1 [source_file: expected0]
                    PARAM_LIST 1 [source_file: expected0]
                    BLOCK 1 [source_file: expected0]
                        VAR 2 [source_file: expected0]
                            NAME action 2 [source_file: expected0]
                        LABEL 3 [source_file: expected0]
                            LABEL_NAME a 3 [source_file: expected0]
                            BLOCK 3 [source_file: expected0]
                                VAR 4 [source_file: expected0]
                                    NAME proto 4 [source_file: expected0]
                                        NULL 4 [source_file: expected0]
                                TRY 5 [source_file: expected0]
                                    BLOCK 5 [source_file: expected0]
                                    BLOCK 6 [source_file: expected0]
                                    BLOCK 6 [source_file: expected0]
                                        TRY 7 [source_file: expected0]
                                            BLOCK 7 [source_file: expected0]
                                                EXPR_RESULT 8 [source_file: expected0]
                                                    ASSIGN 8 [source_file: expected0]
                                                        NAME proto 8 [source_file: expected0]
                                                        NEW 8 [source_file: expected0]
                                                            NAME Proto 8 [source_file: expected0]
                                            BLOCK 9 [source_file: expected0]
                                            BLOCK 9 [source_file: expected0]
                                                EXPR_RESULT 10 [source_file: expected0]
                                                    ASSIGN 10 [source_file: expected0]
                                                        NAME action 10 [source_file: expected0]
                                                        NAME proto 10 [source_file: expected0]
                                                BREAK 11 [source_file: expected0]
                                                    LABEL_NAME a 11 [source_file: expected0]
                        EXPR_RESULT 15 [source_file: expected0]
                            CALL 15 [free_call: 1] [source_file: expected0]
                                NAME alert 15 [source_file: expected0]
                                NAME action 15 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        EXPR_RESULT 1 [source_file: testcode]
            ASSIGN 1 [source_file: testcode]
                NAME f 1 [source_file: testcode]
                FUNCTION  1 [source_file: testcode]
                    NAME  1 [source_file: testcode]
                    PARAM_LIST 1 [source_file: testcode]
                    BLOCK 1 [source_file: testcode]
                        VAR 2 [source_file: testcode]
                            NAME action 2 [source_file: testcode]
                        LABEL 3 [source_file: testcode]
                            LABEL_NAME a 3 [source_file: testcode]
                            BLOCK 3 [source_file: testcode]
                                VAR 4 [source_file: testcode]
                                    NAME proto 4 [source_file: testcode]
                                        NULL 4 [source_file: testcode]
                                TRY 5 [source_file: testcode]
                                    BLOCK 5 [source_file: testcode]
                                    BLOCK 6 [source_file: testcode]
                                    BLOCK 6 [source_file: testcode]
                                        TRY 7 [source_file: testcode]
                                            BLOCK 7 [source_file: testcode]
                                                EXPR_RESULT 8 [source_file: testcode]
                                                    ASSIGN 8 [source_file: testcode]
                                                        NAME proto 8 [source_file: testcode]
                                                        NEW 8 [source_file: testcode]
                                                            NAME Proto 8 [source_file: testcode]
                                            BLOCK 9 [source_file: testcode]
                                            BLOCK 9 [source_file: testcode]
                                                EXPR_RESULT 10 [source_file: testcode]
                                                    ASSIGN 10 [source_file: testcode]
                                                        NAME action 10 [source_file: testcode]
                                                        NAME proto 10 [source_file: testcode]
                        EXPR_RESULT 15 [source_file: testcode]
                            CALL 15 [free_call: 1] [source_file: testcode]
                                NAME alert 15 [source_file: testcode]
                                NAME action 15 [source_file: testcode]


Subtree1: BLOCK 9 [source_file: expected0]
    EXPR_RESULT 10 [source_file: expected0]
        ASSIGN 10 [source_file: expected0]
            NAME action 10 [source_file: expected0]
            NAME proto 10 [source_file: expected0]
    BREAK 11 [source_file: expected0]
        LABEL_NAME a 11 [source_file: expected0]


Subtree2: BLOCK 9 [source_file: testcode]
    EXPR_RESULT 10 [source_file: testcode]
        ASSIGN 10 [source_file: testcode]
            NAME action 10 [source_file: testcode]
            NAME proto 10 [source_file: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:928)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:460)
junit.framework.AssertionFailedError: 
Expected: f=function(){var action;a:{var proto=null;try{proto=new Proto}finally{action=proto;return}}}
Result: f=function(){var action;a:{var proto=null;try{proto=new Proto}finally{action=proto}}}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            ASSIGN 1 [source_file: expected0]
                NAME f 1 [source_file: expected0]
                FUNCTION  1 [source_file: expected0]
                    NAME  1 [source_file: expected0]
                    PARAM_LIST 1 [source_file: expected0]
                    BLOCK 1 [source_file: expected0]
                        VAR 2 [source_file: expected0]
                            NAME action 2 [source_file: expected0]
                        LABEL 3 [source_file: expected0]
                            LABEL_NAME a 3 [source_file: expected0]
                            BLOCK 3 [source_file: expected0]
                                VAR 4 [source_file: expected0]
                                    NAME proto 4 [source_file: expected0]
                                        NULL 4 [source_file: expected0]
                                TRY 5 [source_file: expected0]
                                    BLOCK 5 [source_file: expected0]
                                        EXPR_RESULT 6 [source_file: expected0]
                                            ASSIGN 6 [source_file: expected0]
                                                NAME proto 6 [source_file: expected0]
                                                NEW 6 [source_file: expected0]
                                                    NAME Proto 6 [source_file: expected0]
                                    BLOCK 7 [source_file: expected0]
                                    BLOCK 7 [source_file: expected0]
                                        EXPR_RESULT 8 [source_file: expected0]
                                            ASSIGN 8 [source_file: expected0]
                                                NAME action 8 [source_file: expected0]
                                                NAME proto 8 [source_file: expected0]
                                        RETURN 9 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        EXPR_RESULT 1 [source_file: testcode]
            ASSIGN 1 [source_file: testcode]
                NAME f 1 [source_file: testcode]
                FUNCTION  1 [source_file: testcode]
                    NAME  1 [source_file: testcode]
                    PARAM_LIST 1 [source_file: testcode]
                    BLOCK 1 [source_file: testcode]
                        VAR 2 [source_file: testcode]
                            NAME action 2 [source_file: testcode]
                        LABEL 3 [source_file: testcode]
                            LABEL_NAME a 3 [source_file: testcode]
                            BLOCK 3 [source_file: testcode]
                                VAR 4 [source_file: testcode]
                                    NAME proto 4 [source_file: testcode]
                                        NULL 4 [source_file: testcode]
                                TRY 5 [source_file: testcode]
                                    BLOCK 5 [source_file: testcode]
                                        EXPR_RESULT 6 [source_file: testcode]
                                            ASSIGN 6 [source_file: testcode]
                                                NAME proto 6 [source_file: testcode]
                                                NEW 6 [source_file: testcode]
                                                    NAME Proto 6 [source_file: testcode]
                                    BLOCK 7 [source_file: testcode]
                                    BLOCK 7 [source_file: testcode]
                                        EXPR_RESULT 8 [source_file: testcode]
                                            ASSIGN 8 [source_file: testcode]
                                                NAME action 8 [source_file: testcode]
                                                NAME proto 8 [source_file: testcode]


Subtree1: BLOCK 7 [source_file: expected0]
    EXPR_RESULT 8 [source_file: expected0]
        ASSIGN 8 [source_file: expected0]
            NAME action 8 [source_file: expected0]
            NAME proto 8 [source_file: expected0]
    RETURN 9 [source_file: expected0]


Subtree2: BLOCK 7 [source_file: testcode]
    EXPR_RESULT 8 [source_file: testcode]
        ASSIGN 8 [source_file: testcode]
            NAME action 8 [source_file: testcode]
            NAME proto 8 [source_file: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:928)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:460)
junit.framework.AssertionFailedError: 
Expected: function f(){b:try{throw 9;}finally{break b}return 1}
Result: function f(){b:try{throw 9;}finally{}return 1}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION f 1 [source_file: expected0]
            NAME f 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                LABEL 1 [source_file: expected0]
                    LABEL_NAME b 1 [source_file: expected0]
                    TRY 1 [source_file: expected0]
                        BLOCK 1 [source_file: expected0]
                            THROW 1 [source_file: expected0]
                                NUMBER 9.0 1 [source_file: expected0]
                        BLOCK 1 [source_file: expected0]
                        BLOCK 1 [source_file: expected0]
                            BREAK 1 [source_file: expected0]
                                LABEL_NAME b 1 [source_file: expected0]
                RETURN 1 [source_file: expected0]
                    NUMBER 1.0 1 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION f 1 [source_file: testcode]
            NAME f 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                LABEL 1 [source_file: testcode]
                    LABEL_NAME b 1 [source_file: testcode]
                    TRY 1 [source_file: testcode]
                        BLOCK 1 [source_file: testcode]
                            THROW 1 [source_file: testcode]
                                NUMBER 9.0 1 [source_file: testcode]
                        BLOCK 1 [source_file: testcode]
                        BLOCK 1 [source_file: testcode]
                RETURN 1 [source_file: testcode]
                    NUMBER 1.0 1 [source_file: testcode]


Subtree1: BLOCK 1 [source_file: expected0]
    BREAK 1 [source_file: expected0]
        LABEL_NAME b 1 [source_file: expected0]


Subtree2: BLOCK 1 [source_file: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:928)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:460)
junit.framework.AssertionFailedError: 
Expected: f=function(){var action;a:do{var proto=null;try{proto=new Proto}finally{action=proto;continue a}}while(false);alert(action)}
Result: f=function(){var action;a:do{var proto=null;try{proto=new Proto}finally{action=proto}}while(false);alert(action)}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            ASSIGN 1 [source_file: expected0]
                NAME f 1 [source_file: expected0]
                FUNCTION  1 [source_file: expected0]
                    NAME  1 [source_file: expected0]
                    PARAM_LIST 1 [source_file: expected0]
                    BLOCK 1 [source_file: expected0]
                        VAR 2 [source_file: expected0]
                            NAME action 2 [source_file: expected0]
                        LABEL 3 [source_file: expected0]
                            LABEL_NAME a 3 [source_file: expected0]
                            DO 3 [source_file: expected0]
                                BLOCK 3 [source_file: expected0]
                                    VAR 4 [source_file: expected0]
                                        NAME proto 4 [source_file: expected0]
                                            NULL 4 [source_file: expected0]
                                    TRY 5 [source_file: expected0]
                                        BLOCK 5 [source_file: expected0]
                                            EXPR_RESULT 6 [source_file: expected0]
                                                ASSIGN 6 [source_file: expected0]
                                                    NAME proto 6 [source_file: expected0]
                                                    NEW 6 [source_file: expected0]
                                                        NAME Proto 6 [source_file: expected0]
                                        BLOCK 7 [source_file: expected0]
                                        BLOCK 7 [source_file: expected0]
                                            EXPR_RESULT 8 [source_file: expected0]
                                                ASSIGN 8 [source_file: expected0]
                                                    NAME action 8 [source_file: expected0]
                                                    NAME proto 8 [source_file: expected0]
                                            CONTINUE 9 [source_file: expected0]
                                                LABEL_NAME a 9 [source_file: expected0]
                                FALSE 11 [source_file: expected0]
                        EXPR_RESULT 12 [source_file: expected0]
                            CALL 12 [free_call: 1] [source_file: expected0]
                                NAME alert 12 [source_file: expected0]
                                NAME action 12 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        EXPR_RESULT 1 [source_file: testcode]
            ASSIGN 1 [source_file: testcode]
                NAME f 1 [source_file: testcode]
                FUNCTION  1 [source_file: testcode]
                    NAME  1 [source_file: testcode]
                    PARAM_LIST 1 [source_file: testcode]
                    BLOCK 1 [source_file: testcode]
                        VAR 2 [source_file: testcode]
                            NAME action 2 [source_file: testcode]
                        LABEL 3 [source_file: testcode]
                            LABEL_NAME a 3 [source_file: testcode]
                            DO 3 [source_file: testcode]
                                BLOCK 3 [source_file: testcode]
                                    VAR 4 [source_file: testcode]
                                        NAME proto 4 [source_file: testcode]
                                            NULL 4 [source_file: testcode]
                                    TRY 5 [source_file: testcode]
                                        BLOCK 5 [source_file: testcode]
                                            EXPR_RESULT 6 [source_file: testcode]
                                                ASSIGN 6 [source_file: testcode]
                                                    NAME proto 6 [source_file: testcode]
                                                    NEW 6 [source_file: testcode]
                                                        NAME Proto 6 [source_file: testcode]
                                        BLOCK 7 [source_file: testcode]
                                        BLOCK 7 [source_file: testcode]
                                            EXPR_RESULT 8 [source_file: testcode]
                                                ASSIGN 8 [source_file: testcode]
                                                    NAME action 8 [source_file: testcode]
                                                    NAME proto 8 [source_file: testcode]
                                FALSE 11 [source_file: testcode]
                        EXPR_RESULT 12 [source_file: testcode]
                            CALL 12 [free_call: 1] [source_file: testcode]
                                NAME alert 12 [source_file: testcode]
                                NAME action 12 [source_file: testcode]


Subtree1: BLOCK 7 [source_file: expected0]
    EXPR_RESULT 8 [source_file: expected0]
        ASSIGN 8 [source_file: expected0]
            NAME action 8 [source_file: expected0]
            NAME proto 8 [source_file: expected0]
    CONTINUE 9 [source_file: expected0]
        LABEL_NAME a 9 [source_file: expected0]


Subtree2: BLOCK 7 [source_file: testcode]
    EXPR_RESULT 8 [source_file: testcode]
        ASSIGN 8 [source_file: testcode]
            NAME action 8 [source_file: testcode]
            NAME proto 8 [source_file: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:928)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:460)
junit.framework.AssertionFailedError: 
Expected: function f(){b:try{throw 9;}finally{switch(x){case 1:break b}}return 1}
Result: function f(){b:try{throw 9;}finally{switch(x){case 1:}}return 1}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION f 1 [source_file: expected0]
            NAME f 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                LABEL 1 [source_file: expected0]
                    LABEL_NAME b 1 [source_file: expected0]
                    TRY 1 [source_file: expected0]
                        BLOCK 1 [source_file: expected0]
                            THROW 1 [source_file: expected0]
                                NUMBER 9.0 1 [source_file: expected0]
                        BLOCK 1 [source_file: expected0]
                        BLOCK 1 [source_file: expected0]
                            SWITCH 1 [source_file: expected0]
                                NAME x 1 [source_file: expected0]
                                CASE 1 [source_file: expected0]
                                    NUMBER 1.0 1 [source_file: expected0]
                                    BLOCK 1 [synthetic: 1] [source_file: expected0]
                                        BREAK 1 [source_file: expected0]
                                            LABEL_NAME b 1 [source_file: expected0]
                RETURN 1 [source_file: expected0]
                    NUMBER 1.0 1 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION f 1 [source_file: testcode]
            NAME f 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                LABEL 1 [source_file: testcode]
                    LABEL_NAME b 1 [source_file: testcode]
                    TRY 1 [source_file: testcode]
                        BLOCK 1 [source_file: testcode]
                            THROW 1 [source_file: testcode]
                                NUMBER 9.0 1 [source_file: testcode]
                        BLOCK 1 [source_file: testcode]
                        BLOCK 1 [source_file: testcode]
                            SWITCH 1 [source_file: testcode]
                                NAME x 1 [source_file: testcode]
                                CASE 1 [source_file: testcode]
                                    NUMBER 1.0 1 [source_file: testcode]
                                    BLOCK 1 [synthetic: 1] [source_file: testcode]
                RETURN 1 [source_file: testcode]
                    NUMBER 1.0 1 [source_file: testcode]


Subtree1: BLOCK 1 [synthetic: 1] [source_file: expected0]
    BREAK 1 [source_file: expected0]
        LABEL_NAME b 1 [source_file: expected0]


Subtree2: BLOCK 1 [synthetic: 1] [source_file: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:928)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:460)
junit.framework.AssertionFailedError: 
Expected: f=function(){var action;a:{var proto=null;try{proto=new Proto}finally{action=proto;break a}}alert(action)}
Result: f=function(){var action;a:{var proto=null;try{proto=new Proto}finally{action=proto}}alert(action)}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            ASSIGN 1 [source_file: expected0]
                NAME f 1 [source_file: expected0]
                FUNCTION  1 [source_file: expected0]
                    NAME  1 [source_file: expected0]
                    PARAM_LIST 1 [source_file: expected0]
                    BLOCK 1 [source_file: expected0]
                        VAR 2 [source_file: expected0]
                            NAME action 2 [source_file: expected0]
                        LABEL 3 [source_file: expected0]
                            LABEL_NAME a 3 [source_file: expected0]
                            BLOCK 3 [source_file: expected0]
                                VAR 4 [source_file: expected0]
                                    NAME proto 4 [source_file: expected0]
                                        NULL 4 [source_file: expected0]
                                TRY 5 [source_file: expected0]
                                    BLOCK 5 [source_file: expected0]
                                        EXPR_RESULT 6 [source_file: expected0]
                                            ASSIGN 6 [source_file: expected0]
                                                NAME proto 6 [source_file: expected0]
                                                NEW 6 [source_file: expected0]
                                                    NAME Proto 6 [source_file: expected0]
                                    BLOCK 7 [source_file: expected0]
                                    BLOCK 7 [source_file: expected0]
                                        EXPR_RESULT 8 [source_file: expected0]
                                            ASSIGN 8 [source_file: expected0]
                                                NAME action 8 [source_file: expected0]
                                                NAME proto 8 [source_file: expected0]
                                        BREAK 9 [source_file: expected0]
                                            LABEL_NAME a 9 [source_file: expected0]
                        EXPR_RESULT 12 [source_file: expected0]
                            CALL 12 [free_call: 1] [source_file: expected0]
                                NAME alert 12 [source_file: expected0]
                                NAME action 12 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        EXPR_RESULT 1 [source_file: testcode]
            ASSIGN 1 [source_file: testcode]
                NAME f 1 [source_file: testcode]
                FUNCTION  1 [source_file: testcode]
                    NAME  1 [source_file: testcode]
                    PARAM_LIST 1 [source_file: testcode]
                    BLOCK 1 [source_file: testcode]
                        VAR 2 [source_file: testcode]
                            NAME action 2 [source_file: testcode]
                        LABEL 3 [source_file: testcode]
                            LABEL_NAME a 3 [source_file: testcode]
                            BLOCK 3 [source_file: testcode]
                                VAR 4 [source_file: testcode]
                                    NAME proto 4 [source_file: testcode]
                                        NULL 4 [source_file: testcode]
                                TRY 5 [source_file: testcode]
                                    BLOCK 5 [source_file: testcode]
                                        EXPR_RESULT 6 [source_file: testcode]
                                            ASSIGN 6 [source_file: testcode]
                                                NAME proto 6 [source_file: testcode]
                                                NEW 6 [source_file: testcode]
                                                    NAME Proto 6 [source_file: testcode]
                                    BLOCK 7 [source_file: testcode]
                                    BLOCK 7 [source_file: testcode]
                                        EXPR_RESULT 8 [source_file: testcode]
                                            ASSIGN 8 [source_file: testcode]
                                                NAME action 8 [source_file: testcode]
                                                NAME proto 8 [source_file: testcode]
                        EXPR_RESULT 12 [source_file: testcode]
                            CALL 12 [free_call: 1] [source_file: testcode]
                                NAME alert 12 [source_file: testcode]
                                NAME action 12 [source_file: testcode]


Subtree1: BLOCK 7 [source_file: expected0]
    EXPR_RESULT 8 [source_file: expected0]
        ASSIGN 8 [source_file: expected0]
            NAME action 8 [source_file: expected0]
            NAME proto 8 [source_file: expected0]
    BREAK 9 [source_file: expected0]
        LABEL_NAME a 9 [source_file: expected0]


Subtree2: BLOCK 7 [source_file: testcode]
    EXPR_RESULT 8 [source_file: testcode]
        ASSIGN 8 [source_file: testcode]
            NAME action 8 [source_file: testcode]
            NAME proto 8 [source_file: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:928)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:460)
junit.framework.AssertionFailedError: 
Expected: f=function(){var action;a:{var proto=null;try{}finally{try{proto=new Proto}finally{action=proto;break a}}}alert(action)}
Result: f=function(){var action;a:{var proto=null;try{}finally{try{proto=new Proto}finally{action=proto}}}alert(action)}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            ASSIGN 1 [source_file: expected0]
                NAME f 1 [source_file: expected0]
                FUNCTION  1 [source_file: expected0]
                    NAME  1 [source_file: expected0]
                    PARAM_LIST 1 [source_file: expected0]
                    BLOCK 1 [source_file: expected0]
                        VAR 2 [source_file: expected0]
                            NAME action 2 [source_file: expected0]
                        LABEL 3 [source_file: expected0]
                            LABEL_NAME a 3 [source_file: expected0]
                            BLOCK 3 [source_file: expected0]
                                VAR 4 [source_file: expected0]
                                    NAME proto 4 [source_file: expected0]
                                        NULL 4 [source_file: expected0]
                                TRY 5 [source_file: expected0]
                                    BLOCK 5 [source_file: expected0]
                                    BLOCK 6 [source_file: expected0]
                                    BLOCK 6 [source_file: expected0]
                                        TRY 7 [source_file: expected0]
                                            BLOCK 7 [source_file: expected0]
                                                EXPR_RESULT 8 [source_file: expected0]
                                                    ASSIGN 8 [source_file: expected0]
                                                        NAME proto 8 [source_file: expected0]
                                                        NEW 8 [source_file: expected0]
                                                            NAME Proto 8 [source_file: expected0]
                                            BLOCK 9 [source_file: expected0]
                                            BLOCK 9 [source_file: expected0]
                                                EXPR_RESULT 10 [source_file: expected0]
                                                    ASSIGN 10 [source_file: expected0]
                                                        NAME action 10 [source_file: expected0]
                                                        NAME proto 10 [source_file: expected0]
                                                BREAK 11 [source_file: expected0]
                                                    LABEL_NAME a 11 [source_file: expected0]
                        EXPR_RESULT 15 [source_file: expected0]
                            CALL 15 [free_call: 1] [source_file: expected0]
                                NAME alert 15 [source_file: expected0]
                                NAME action 15 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        EXPR_RESULT 1 [source_file: testcode]
            ASSIGN 1 [source_file: testcode]
                NAME f 1 [source_file: testcode]
                FUNCTION  1 [source_file: testcode]
                    NAME  1 [source_file: testcode]
                    PARAM_LIST 1 [source_file: testcode]
                    BLOCK 1 [source_file: testcode]
                        VAR 2 [source_file: testcode]
                            NAME action 2 [source_file: testcode]
                        LABEL 3 [source_file: testcode]
                            LABEL_NAME a 3 [source_file: testcode]
                            BLOCK 3 [source_file: testcode]
                                VAR 4 [source_file: testcode]
                                    NAME proto 4 [source_file: testcode]
                                        NULL 4 [source_file: testcode]
                                TRY 5 [source_file: testcode]
                                    BLOCK 5 [source_file: testcode]
                                    BLOCK 6 [source_file: testcode]
                                    BLOCK 6 [source_file: testcode]
                                        TRY 7 [source_file: testcode]
                                            BLOCK 7 [source_file: testcode]
                                                EXPR_RESULT 8 [source_file: testcode]
                                                    ASSIGN 8 [source_file: testcode]
                                                        NAME proto 8 [source_file: testcode]
                                                        NEW 8 [source_file: testcode]
                                                            NAME Proto 8 [source_file: testcode]
                                            BLOCK 9 [source_file: testcode]
                                            BLOCK 9 [source_file: testcode]
                                                EXPR_RESULT 10 [source_file: testcode]
                                                    ASSIGN 10 [source_file: testcode]
                                                        NAME action 10 [source_file: testcode]
                                                        NAME proto 10 [source_file: testcode]
                        EXPR_RESULT 15 [source_file: testcode]
                            CALL 15 [free_call: 1] [source_file: testcode]
                                NAME alert 15 [source_file: testcode]
                                NAME action 15 [source_file: testcode]


Subtree1: BLOCK 9 [source_file: expected0]
    EXPR_RESULT 10 [source_file: expected0]
        ASSIGN 10 [source_file: expected0]
            NAME action 10 [source_file: expected0]
            NAME proto 10 [source_file: expected0]
    BREAK 11 [source_file: expected0]
        LABEL_NAME a 11 [source_file: expected0]


Subtree2: BLOCK 9 [source_file: testcode]
    EXPR_RESULT 10 [source_file: testcode]
        ASSIGN 10 [source_file: testcode]
            NAME action 10 [source_file: testcode]
            NAME proto 10 [source_file: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:928)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:460)
junit.framework.AssertionFailedError: 
Expected: f=function(){var action;a:{var proto=null;try{proto=new Proto}finally{action=proto;return}}}
Result: f=function(){var action;a:{var proto=null;try{proto=new Proto}finally{action=proto}}}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            ASSIGN 1 [source_file: expected0]
                NAME f 1 [source_file: expected0]
                FUNCTION  1 [source_file: expected0]
                    NAME  1 [source_file: expected0]
                    PARAM_LIST 1 [source_file: expected0]
                    BLOCK 1 [source_file: expected0]
                        VAR 2 [source_file: expected0]
                            NAME action 2 [source_file: expected0]
                        LABEL 3 [source_file: expected0]
                            LABEL_NAME a 3 [source_file: expected0]
                            BLOCK 3 [source_file: expected0]
                                VAR 4 [source_file: expected0]
                                    NAME proto 4 [source_file: expected0]
                                        NULL 4 [source_file: expected0]
                                TRY 5 [source_file: expected0]
                                    BLOCK 5 [source_file: expected0]
                                        EXPR_RESULT 6 [source_file: expected0]
                                            ASSIGN 6 [source_file: expected0]
                                                NAME proto 6 [source_file: expected0]
                                                NEW 6 [source_file: expected0]
                                                    NAME Proto 6 [source_file: expected0]
                                    BLOCK 7 [source_file: expected0]
                                    BLOCK 7 [source_file: expected0]
                                        EXPR_RESULT 8 [source_file: expected0]
                                            ASSIGN 8 [source_file: expected0]
                                                NAME action 8 [source_file: expected0]
                                                NAME proto 8 [source_file: expected0]
                                        RETURN 9 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        EXPR_RESULT 1 [source_file: testcode]
            ASSIGN 1 [source_file: testcode]
                NAME f 1 [source_file: testcode]
                FUNCTION  1 [source_file: testcode]
                    NAME  1 [source_file: testcode]
                    PARAM_LIST 1 [source_file: testcode]
                    BLOCK 1 [source_file: testcode]
                        VAR 2 [source_file: testcode]
                            NAME action 2 [source_file: testcode]
                        LABEL 3 [source_file: testcode]
                            LABEL_NAME a 3 [source_file: testcode]
                            BLOCK 3 [source_file: testcode]
                                VAR 4 [source_file: testcode]
                                    NAME proto 4 [source_file: testcode]
                                        NULL 4 [source_file: testcode]
                                TRY 5 [source_file: testcode]
                                    BLOCK 5 [source_file: testcode]
                                        EXPR_RESULT 6 [source_file: testcode]
                                            ASSIGN 6 [source_file: testcode]
                                                NAME proto 6 [source_file: testcode]
                                                NEW 6 [source_file: testcode]
                                                    NAME Proto 6 [source_file: testcode]
                                    BLOCK 7 [source_file: testcode]
                                    BLOCK 7 [source_file: testcode]
                                        EXPR_RESULT 8 [source_file: testcode]
                                            ASSIGN 8 [source_file: testcode]
                                                NAME action 8 [source_file: testcode]
                                                NAME proto 8 [source_file: testcode]


Subtree1: BLOCK 7 [source_file: expected0]
    EXPR_RESULT 8 [source_file: expected0]
        ASSIGN 8 [source_file: expected0]
            NAME action 8 [source_file: expected0]
            NAME proto 8 [source_file: expected0]
    RETURN 9 [source_file: expected0]


Subtree2: BLOCK 7 [source_file: testcode]
    EXPR_RESULT 8 [source_file: testcode]
        ASSIGN 8 [source_file: testcode]
            NAME action 8 [source_file: testcode]
            NAME proto 8 [source_file: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:928)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:460)
junit.framework.AssertionFailedError: 
Expected: function f(){b:try{throw 9;}finally{break b}return 1}
Result: function f(){b:try{throw 9;}finally{}return 1}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION f 1 [source_file: expected0]
            NAME f 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                LABEL 1 [source_file: expected0]
                    LABEL_NAME b 1 [source_file: expected0]
                    TRY 1 [source_file: expected0]
                        BLOCK 1 [source_file: expected0]
                            THROW 1 [source_file: expected0]
                                NUMBER 9.0 1 [source_file: expected0]
                        BLOCK 1 [source_file: expected0]
                        BLOCK 1 [source_file: expected0]
                            BREAK 1 [source_file: expected0]
                                LABEL_NAME b 1 [source_file: expected0]
                RETURN 1 [source_file: expected0]
                    NUMBER 1.0 1 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION f 1 [source_file: testcode]
            NAME f 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                LABEL 1 [source_file: testcode]
                    LABEL_NAME b 1 [source_file: testcode]
                    TRY 1 [source_file: testcode]
                        BLOCK 1 [source_file: testcode]
                            THROW 1 [source_file: testcode]
                                NUMBER 9.0 1 [source_file: testcode]
                        BLOCK 1 [source_file: testcode]
                        BLOCK 1 [source_file: testcode]
                RETURN 1 [source_file: testcode]
                    NUMBER 1.0 1 [source_file: testcode]


Subtree1: BLOCK 1 [source_file: expected0]
    BREAK 1 [source_file: expected0]
        LABEL_NAME b 1 [source_file: expected0]


Subtree2: BLOCK 1 [source_file: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:928)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:460)
junit.framework.AssertionFailedError: 
Expected: f=function(){var action;a:do{var proto=null;try{proto=new Proto}finally{action=proto;continue a}}while(false);alert(action)}
Result: f=function(){var action;a:do{var proto=null;try{proto=new Proto}finally{action=proto}}while(false);alert(action)}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            ASSIGN 1 [source_file: expected0]
                NAME f 1 [source_file: expected0]
                FUNCTION  1 [source_file: expected0]
                    NAME  1 [source_file: expected0]
                    PARAM_LIST 1 [source_file: expected0]
                    BLOCK 1 [source_file: expected0]
                        VAR 2 [source_file: expected0]
                            NAME action 2 [source_file: expected0]
                        LABEL 3 [source_file: expected0]
                            LABEL_NAME a 3 [source_file: expected0]
                            DO 3 [source_file: expected0]
                                BLOCK 3 [source_file: expected0]
                                    VAR 4 [source_file: expected0]
                                        NAME proto 4 [source_file: expected0]
                                            NULL 4 [source_file: expected0]
                                    TRY 5 [source_file: expected0]
                                        BLOCK 5 [source_file: expected0]
                                            EXPR_RESULT 6 [source_file: expected0]
                                                ASSIGN 6 [source_file: expected0]
                                                    NAME proto 6 [source_file: expected0]
                                                    NEW 6 [source_file: expected0]
                                                        NAME Proto 6 [source_file: expected0]
                                        BLOCK 7 [source_file: expected0]
                                        BLOCK 7 [source_file: expected0]
                                            EXPR_RESULT 8 [source_file: expected0]
                                                ASSIGN 8 [source_file: expected0]
                                                    NAME action 8 [source_file: expected0]
                                                    NAME proto 8 [source_file: expected0]
                                            CONTINUE 9 [source_file: expected0]
                                                LABEL_NAME a 9 [source_file: expected0]
                                FALSE 11 [source_file: expected0]
                        EXPR_RESULT 12 [source_file: expected0]
                            CALL 12 [free_call: 1] [source_file: expected0]
                                NAME alert 12 [source_file: expected0]
                                NAME action 12 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        EXPR_RESULT 1 [source_file: testcode]
            ASSIGN 1 [source_file: testcode]
                NAME f 1 [source_file: testcode]
                FUNCTION  1 [source_file: testcode]
                    NAME  1 [source_file: testcode]
                    PARAM_LIST 1 [source_file: testcode]
                    BLOCK 1 [source_file: testcode]
                        VAR 2 [source_file: testcode]
                            NAME action 2 [source_file: testcode]
                        LABEL 3 [source_file: testcode]
                            LABEL_NAME a 3 [source_file: testcode]
                            DO 3 [source_file: testcode]
                                BLOCK 3 [source_file: testcode]
                                    VAR 4 [source_file: testcode]
                                        NAME proto 4 [source_file: testcode]
                                            NULL 4 [source_file: testcode]
                                    TRY 5 [source_file: testcode]
                                        BLOCK 5 [source_file: testcode]
                                            EXPR_RESULT 6 [source_file: testcode]
                                                ASSIGN 6 [source_file: testcode]
                                                    NAME proto 6 [source_file: testcode]
                                                    NEW 6 [source_file: testcode]
                                                        NAME Proto 6 [source_file: testcode]
                                        BLOCK 7 [source_file: testcode]
                                        BLOCK 7 [source_file: testcode]
                                            EXPR_RESULT 8 [source_file: testcode]
                                                ASSIGN 8 [source_file: testcode]
                                                    NAME action 8 [source_file: testcode]
                                                    NAME proto 8 [source_file: testcode]
                                FALSE 11 [source_file: testcode]
                        EXPR_RESULT 12 [source_file: testcode]
                            CALL 12 [free_call: 1] [source_file: testcode]
                                NAME alert 12 [source_file: testcode]
                                NAME action 12 [source_file: testcode]


Subtree1: BLOCK 7 [source_file: expected0]
    EXPR_RESULT 8 [source_file: expected0]
        ASSIGN 8 [source_file: expected0]
            NAME action 8 [source_file: expected0]
            NAME proto 8 [source_file: expected0]
    CONTINUE 9 [source_file: expected0]
        LABEL_NAME a 9 [source_file: expected0]


Subtree2: BLOCK 7 [source_file: testcode]
    EXPR_RESULT 8 [source_file: testcode]
        ASSIGN 8 [source_file: testcode]
            NAME action 8 [source_file: testcode]
            NAME proto 8 [source_file: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:928)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:460)
junit.framework.AssertionFailedError: 
Expected: function f(){b:try{throw 9;}finally{switch(x){case 1:break b}}return 1}
Result: function f(){b:try{throw 9;}finally{switch(x){case 1:}}return 1}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION f 1 [source_file: expected0]
            NAME f 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                LABEL 1 [source_file: expected0]
                    LABEL_NAME b 1 [source_file: expected0]
                    TRY 1 [source_file: expected0]
                        BLOCK 1 [source_file: expected0]
                            THROW 1 [source_file: expected0]
                                NUMBER 9.0 1 [source_file: expected0]
                        BLOCK 1 [source_file: expected0]
                        BLOCK 1 [source_file: expected0]
                            SWITCH 1 [source_file: expected0]
                                NAME x 1 [source_file: expected0]
                                CASE 1 [source_file: expected0]
                                    NUMBER 1.0 1 [source_file: expected0]
                                    BLOCK 1 [synthetic: 1] [source_file: expected0]
                                        BREAK 1 [source_file: expected0]
                                            LABEL_NAME b 1 [source_file: expected0]
                RETURN 1 [source_file: expected0]
                    NUMBER 1.0 1 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION f 1 [source_file: testcode]
            NAME f 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                LABEL 1 [source_file: testcode]
                    LABEL_NAME b 1 [source_file: testcode]
                    TRY 1 [source_file: testcode]
                        BLOCK 1 [source_file: testcode]
                            THROW 1 [source_file: testcode]
                                NUMBER 9.0 1 [source_file: testcode]
                        BLOCK 1 [source_file: testcode]
                        BLOCK 1 [source_file: testcode]
                            SWITCH 1 [source_file: testcode]
                                NAME x 1 [source_file: testcode]
                                CASE 1 [source_file: testcode]
                                    NUMBER 1.0 1 [source_file: testcode]
                                    BLOCK 1 [synthetic: 1] [source_file: testcode]
                RETURN 1 [source_file: testcode]
                    NUMBER 1.0 1 [source_file: testcode]


Subtree1: BLOCK 1 [synthetic: 1] [source_file: expected0]
    BREAK 1 [source_file: expected0]
        LABEL_NAME b 1 [source_file: expected0]


Subtree2: BLOCK 1 [synthetic: 1] [source_file: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:928)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:460)
junit.framework.AssertionFailedError: 
Expected: f=function(){var action;a:{var proto=null;try{proto=new Proto}finally{action=proto;break a}}alert(action)}
Result: f=function(){var action;a:{var proto=null;try{proto=new Proto}finally{action=proto}}alert(action)}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            ASSIGN 1 [source_file: expected0]
                NAME f 1 [source_file: expected0]
                FUNCTION  1 [source_file: expected0]
                    NAME  1 [source_file: expected0]
                    PARAM_LIST 1 [source_file: expected0]
                    BLOCK 1 [source_file: expected0]
                        VAR 2 [source_file: expected0]
                            NAME action 2 [source_file: expected0]
                        LABEL 3 [source_file: expected0]
                            LABEL_NAME a 3 [source_file: expected0]
                            BLOCK 3 [source_file: expected0]
                                VAR 4 [source_file: expected0]
                                    NAME proto 4 [source_file: expected0]
                                        NULL 4 [source_file: expected0]
                                TRY 5 [source_file: expected0]
                                    BLOCK 5 [source_file: expected0]
                                        EXPR_RESULT 6 [source_file: expected0]
                                            ASSIGN 6 [source_file: expected0]
                                                NAME proto 6 [source_file: expected0]
                                                NEW 6 [source_file: expected0]
                                                    NAME Proto 6 [source_file: expected0]
                                    BLOCK 7 [source_file: expected0]
                                    BLOCK 7 [source_file: expected0]
                                        EXPR_RESULT 8 [source_file: expected0]
                                            ASSIGN 8 [source_file: expected0]
                                                NAME action 8 [source_file: expected0]
                                                NAME proto 8 [source_file: expected0]
                                        BREAK 9 [source_file: expected0]
                                            LABEL_NAME a 9 [source_file: expected0]
                        EXPR_RESULT 12 [source_file: expected0]
                            CALL 12 [free_call: 1] [source_file: expected0]
                                NAME alert 12 [source_file: expected0]
                                NAME action 12 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        EXPR_RESULT 1 [source_file: testcode]
            ASSIGN 1 [source_file: testcode]
                NAME f 1 [source_file: testcode]
                FUNCTION  1 [source_file: testcode]
                    NAME  1 [source_file: testcode]
                    PARAM_LIST 1 [source_file: testcode]
                    BLOCK 1 [source_file: testcode]
                        VAR 2 [source_file: testcode]
                            NAME action 2 [source_file: testcode]
                        LABEL 3 [source_file: testcode]
                            LABEL_NAME a 3 [source_file: testcode]
                            BLOCK 3 [source_file: testcode]
                                VAR 4 [source_file: testcode]
                                    NAME proto 4 [source_file: testcode]
                                        NULL 4 [source_file: testcode]
                                TRY 5 [source_file: testcode]
                                    BLOCK 5 [source_file: testcode]
                                        EXPR_RESULT 6 [source_file: testcode]
                                            ASSIGN 6 [source_file: testcode]
                                                NAME proto 6 [source_file: testcode]
                                                NEW 6 [source_file: testcode]
                                                    NAME Proto 6 [source_file: testcode]
                                    BLOCK 7 [source_file: testcode]
                                    BLOCK 7 [source_file: testcode]
                                        EXPR_RESULT 8 [source_file: testcode]
                                            ASSIGN 8 [source_file: testcode]
                                                NAME action 8 [source_file: testcode]
                                                NAME proto 8 [source_file: testcode]
                        EXPR_RESULT 12 [source_file: testcode]
                            CALL 12 [free_call: 1] [source_file: testcode]
                                NAME alert 12 [source_file: testcode]
                                NAME action 12 [source_file: testcode]


Subtree1: BLOCK 7 [source_file: expected0]
    EXPR_RESULT 8 [source_file: expected0]
        ASSIGN 8 [source_file: expected0]
            NAME action 8 [source_file: expected0]
            NAME proto 8 [source_file: expected0]
    BREAK 9 [source_file: expected0]
        LABEL_NAME a 9 [source_file: expected0]


Subtree2: BLOCK 7 [source_file: testcode]
    EXPR_RESULT 8 [source_file: testcode]
        ASSIGN 8 [source_file: testcode]
            NAME action 8 [source_file: testcode]
            NAME proto 8 [source_file: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:928)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:460)
junit.framework.AssertionFailedError: 
Expected: f=function(){var action;a:{var proto=null;try{}finally{try{proto=new Proto}finally{action=proto;break a}}}alert(action)}
Result: f=function(){var action;a:{var proto=null;try{}finally{try{proto=new Proto}finally{action=proto}}}alert(action)}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            ASSIGN 1 [source_file: expected0]
                NAME f 1 [source_file: expected0]
                FUNCTION  1 [source_file: expected0]
                    NAME  1 [source_file: expected0]
                    PARAM_LIST 1 [source_file: expected0]
                    BLOCK 1 [source_file: expected0]
                        VAR 2 [source_file: expected0]
                            NAME action 2 [source_file: expected0]
                        LABEL 3 [source_file: expected0]
                            LABEL_NAME a 3 [source_file: expected0]
                            BLOCK 3 [source_file: expected0]
                                VAR 4 [source_file: expected0]
                                    NAME proto 4 [source_file: expected0]
                                        NULL 4 [source_file: expected0]
                                TRY 5 [source_file: expected0]
                                    BLOCK 5 [source_file: expected0]
                                    BLOCK 6 [source_file: expected0]
                                    BLOCK 6 [source_file: expected0]
                                        TRY 7 [source_file: expected0]
                                            BLOCK 7 [source_file: expected0]
                                                EXPR_RESULT 8 [source_file: expected0]
                                                    ASSIGN 8 [source_file: expected0]
                                                        NAME proto 8 [source_file: expected0]
                                                        NEW 8 [source_file: expected0]
                                                            NAME Proto 8 [source_file: expected0]
                                            BLOCK 9 [source_file: expected0]
                                            BLOCK 9 [source_file: expected0]
                                                EXPR_RESULT 10 [source_file: expected0]
                                                    ASSIGN 10 [source_file: expected0]
                                                        NAME action 10 [source_file: expected0]
                                                        NAME proto 10 [source_file: expected0]
                                                BREAK 11 [source_file: expected0]
                                                    LABEL_NAME a 11 [source_file: expected0]
                        EXPR_RESULT 15 [source_file: expected0]
                            CALL 15 [free_call: 1] [source_file: expected0]
                                NAME alert 15 [source_file: expected0]
                                NAME action 15 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        EXPR_RESULT 1 [source_file: testcode]
            ASSIGN 1 [source_file: testcode]
                NAME f 1 [source_file: testcode]
                FUNCTION  1 [source_file: testcode]
                    NAME  1 [source_file: testcode]
                    PARAM_LIST 1 [source_file: testcode]
                    BLOCK 1 [source_file: testcode]
                        VAR 2 [source_file: testcode]
                            NAME action 2 [source_file: testcode]
                        LABEL 3 [source_file: testcode]
                            LABEL_NAME a 3 [source_file: testcode]
                            BLOCK 3 [source_file: testcode]
                                VAR 4 [source_file: testcode]
                                    NAME proto 4 [source_file: testcode]
                                        NULL 4 [source_file: testcode]
                                TRY 5 [source_file: testcode]
                                    BLOCK 5 [source_file: testcode]
                                    BLOCK 6 [source_file: testcode]
                                    BLOCK 6 [source_file: testcode]
                                        TRY 7 [source_file: testcode]
                                            BLOCK 7 [source_file: testcode]
                                                EXPR_RESULT 8 [source_file: testcode]
                                                    ASSIGN 8 [source_file: testcode]
                                                        NAME proto 8 [source_file: testcode]
                                                        NEW 8 [source_file: testcode]
                                                            NAME Proto 8 [source_file: testcode]
                                            BLOCK 9 [source_file: testcode]
                                            BLOCK 9 [source_file: testcode]
                                                EXPR_RESULT 10 [source_file: testcode]
                                                    ASSIGN 10 [source_file: testcode]
                                                        NAME action 10 [source_file: testcode]
                                                        NAME proto 10 [source_file: testcode]
                        EXPR_RESULT 15 [source_file: testcode]
                            CALL 15 [free_call: 1] [source_file: testcode]
                                NAME alert 15 [source_file: testcode]
                                NAME action 15 [source_file: testcode]


Subtree1: BLOCK 9 [source_file: expected0]
    EXPR_RESULT 10 [source_file: expected0]
        ASSIGN 10 [source_file: expected0]
            NAME action 10 [source_file: expected0]
            NAME proto 10 [source_file: expected0]
    BREAK 11 [source_file: expected0]
        LABEL_NAME a 11 [source_file: expected0]


Subtree2: BLOCK 9 [source_file: testcode]
    EXPR_RESULT 10 [source_file: testcode]
        ASSIGN 10 [source_file: testcode]
            NAME action 10 [source_file: testcode]
            NAME proto 10 [source_file: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:928)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:460)
junit.framework.AssertionFailedError: 
Expected: f=function(){var action;a:{var proto=null;try{proto=new Proto}finally{action=proto;return}}}
Result: f=function(){var action;a:{var proto=null;try{proto=new Proto}finally{action=proto}}}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            ASSIGN 1 [source_file: expected0]
                NAME f 1 [source_file: expected0]
                FUNCTION  1 [source_file: expected0]
                    NAME  1 [source_file: expected0]
                    PARAM_LIST 1 [source_file: expected0]
                    BLOCK 1 [source_file: expected0]
                        VAR 2 [source_file: expected0]
                            NAME action 2 [source_file: expected0]
                        LABEL 3 [source_file: expected0]
                            LABEL_NAME a 3 [source_file: expected0]
                            BLOCK 3 [source_file: expected0]
                                VAR 4 [source_file: expected0]
                                    NAME proto 4 [source_file: expected0]
                                        NULL 4 [source_file: expected0]
                                TRY 5 [source_file: expected0]
                                    BLOCK 5 [source_file: expected0]
                                        EXPR_RESULT 6 [source_file: expected0]
                                            ASSIGN 6 [source_file: expected0]
                                                NAME proto 6 [source_file: expected0]
                                                NEW 6 [source_file: expected0]
                                                    NAME Proto 6 [source_file: expected0]
                                    BLOCK 7 [source_file: expected0]
                                    BLOCK 7 [source_file: expected0]
                                        EXPR_RESULT 8 [source_file: expected0]
                                            ASSIGN 8 [source_file: expected0]
                                                NAME action 8 [source_file: expected0]
                                                NAME proto 8 [source_file: expected0]
                                        RETURN 9 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        EXPR_RESULT 1 [source_file: testcode]
            ASSIGN 1 [source_file: testcode]
                NAME f 1 [source_file: testcode]
                FUNCTION  1 [source_file: testcode]
                    NAME  1 [source_file: testcode]
                    PARAM_LIST 1 [source_file: testcode]
                    BLOCK 1 [source_file: testcode]
                        VAR 2 [source_file: testcode]
                            NAME action 2 [source_file: testcode]
                        LABEL 3 [source_file: testcode]
                            LABEL_NAME a 3 [source_file: testcode]
                            BLOCK 3 [source_file: testcode]
                                VAR 4 [source_file: testcode]
                                    NAME proto 4 [source_file: testcode]
                                        NULL 4 [source_file: testcode]
                                TRY 5 [source_file: testcode]
                                    BLOCK 5 [source_file: testcode]
                                        EXPR_RESULT 6 [source_file: testcode]
                                            ASSIGN 6 [source_file: testcode]
                                                NAME proto 6 [source_file: testcode]
                                                NEW 6 [source_file: testcode]
                                                    NAME Proto 6 [source_file: testcode]
                                    BLOCK 7 [source_file: testcode]
                                    BLOCK 7 [source_file: testcode]
                                        EXPR_RESULT 8 [source_file: testcode]
                                            ASSIGN 8 [source_file: testcode]
                                                NAME action 8 [source_file: testcode]
                                                NAME proto 8 [source_file: testcode]


Subtree1: BLOCK 7 [source_file: expected0]
    EXPR_RESULT 8 [source_file: expected0]
        ASSIGN 8 [source_file: expected0]
            NAME action 8 [source_file: expected0]
            NAME proto 8 [source_file: expected0]
    RETURN 9 [source_file: expected0]


Subtree2: BLOCK 7 [source_file: testcode]
    EXPR_RESULT 8 [source_file: testcode]
        ASSIGN 8 [source_file: testcode]
            NAME action 8 [source_file: testcode]
            NAME proto 8 [source_file: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:928)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:460)
junit.framework.AssertionFailedError: 
Expected: function f(){b:try{throw 9;}finally{break b}return 1}
Result: function f(){b:try{throw 9;}finally{}return 1}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION f 1 [source_file: expected0]
            NAME f 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                LABEL 1 [source_file: expected0]
                    LABEL_NAME b 1 [source_file: expected0]
                    TRY 1 [source_file: expected0]
                        BLOCK 1 [source_file: expected0]
                            THROW 1 [source_file: expected0]
                                NUMBER 9.0 1 [source_file: expected0]
                        BLOCK 1 [source_file: expected0]
                        BLOCK 1 [source_file: expected0]
                            BREAK 1 [source_file: expected0]
                                LABEL_NAME b 1 [source_file: expected0]
                RETURN 1 [source_file: expected0]
                    NUMBER 1.0 1 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION f 1 [source_file: testcode]
            NAME f 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                LABEL 1 [source_file: testcode]
                    LABEL_NAME b 1 [source_file: testcode]
                    TRY 1 [source_file: testcode]
                        BLOCK 1 [source_file: testcode]
                            THROW 1 [source_file: testcode]
                                NUMBER 9.0 1 [source_file: testcode]
                        BLOCK 1 [source_file: testcode]
                        BLOCK 1 [source_file: testcode]
                RETURN 1 [source_file: testcode]
                    NUMBER 1.0 1 [source_file: testcode]


Subtree1: BLOCK 1 [source_file: expected0]
    BREAK 1 [source_file: expected0]
        LABEL_NAME b 1 [source_file: expected0]


Subtree2: BLOCK 1 [source_file: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:928)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:460)
junit.framework.AssertionFailedError: 
Expected: f=function(){var action;a:do{var proto=null;try{proto=new Proto}finally{action=proto;continue a}}while(false);alert(action)}
Result: f=function(){var action;a:do{var proto=null;try{proto=new Proto}finally{action=proto}}while(false);alert(action)}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            ASSIGN 1 [source_file: expected0]
                NAME f 1 [source_file: expected0]
                FUNCTION  1 [source_file: expected0]
                    NAME  1 [source_file: expected0]
                    PARAM_LIST 1 [source_file: expected0]
                    BLOCK 1 [source_file: expected0]
                        VAR 2 [source_file: expected0]
                            NAME action 2 [source_file: expected0]
                        LABEL 3 [source_file: expected0]
                            LABEL_NAME a 3 [source_file: expected0]
                            DO 3 [source_file: expected0]
                                BLOCK 3 [source_file: expected0]
                                    VAR 4 [source_file: expected0]
                                        NAME proto 4 [source_file: expected0]
                                            NULL 4 [source_file: expected0]
                                    TRY 5 [source_file: expected0]
                                        BLOCK 5 [source_file: expected0]
                                            EXPR_RESULT 6 [source_file: expected0]
                                                ASSIGN 6 [source_file: expected0]
                                                    NAME proto 6 [source_file: expected0]
                                                    NEW 6 [source_file: expected0]
                                                        NAME Proto 6 [source_file: expected0]
                                        BLOCK 7 [source_file: expected0]
                                        BLOCK 7 [source_file: expected0]
                                            EXPR_RESULT 8 [source_file: expected0]
                                                ASSIGN 8 [source_file: expected0]
                                                    NAME action 8 [source_file: expected0]
                                                    NAME proto 8 [source_file: expected0]
                                            CONTINUE 9 [source_file: expected0]
                                                LABEL_NAME a 9 [source_file: expected0]
                                FALSE 11 [source_file: expected0]
                        EXPR_RESULT 12 [source_file: expected0]
                            CALL 12 [free_call: 1] [source_file: expected0]
                                NAME alert 12 [source_file: expected0]
                                NAME action 12 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        EXPR_RESULT 1 [source_file: testcode]
            ASSIGN 1 [source_file: testcode]
                NAME f 1 [source_file: testcode]
                FUNCTION  1 [source_file: testcode]
                    NAME  1 [source_file: testcode]
                    PARAM_LIST 1 [source_file: testcode]
                    BLOCK 1 [source_file: testcode]
                        VAR 2 [source_file: testcode]
                            NAME action 2 [source_file: testcode]
                        LABEL 3 [source_file: testcode]
                            LABEL_NAME a 3 [source_file: testcode]
                            DO 3 [source_file: testcode]
                                BLOCK 3 [source_file: testcode]
                                    VAR 4 [source_file: testcode]
                                        NAME proto 4 [source_file: testcode]
                                            NULL 4 [source_file: testcode]
                                    TRY 5 [source_file: testcode]
                                        BLOCK 5 [source_file: testcode]
                                            EXPR_RESULT 6 [source_file: testcode]
                                                ASSIGN 6 [source_file: testcode]
                                                    NAME proto 6 [source_file: testcode]
                                                    NEW 6 [source_file: testcode]
                                                        NAME Proto 6 [source_file: testcode]
                                        BLOCK 7 [source_file: testcode]
                                        BLOCK 7 [source_file: testcode]
                                            EXPR_RESULT 8 [source_file: testcode]
                                                ASSIGN 8 [source_file: testcode]
                                                    NAME action 8 [source_file: testcode]
                                                    NAME proto 8 [source_file: testcode]
                                FALSE 11 [source_file: testcode]
                        EXPR_RESULT 12 [source_file: testcode]
                            CALL 12 [free_call: 1] [source_file: testcode]
                                NAME alert 12 [source_file: testcode]
                                NAME action 12 [source_file: testcode]


Subtree1: BLOCK 7 [source_file: expected0]
    EXPR_RESULT 8 [source_file: expected0]
        ASSIGN 8 [source_file: expected0]
            NAME action 8 [source_file: expected0]
            NAME proto 8 [source_file: expected0]
    CONTINUE 9 [source_file: expected0]
        LABEL_NAME a 9 [source_file: expected0]


Subtree2: BLOCK 7 [source_file: testcode]
    EXPR_RESULT 8 [source_file: testcode]
        ASSIGN 8 [source_file: testcode]
            NAME action 8 [source_file: testcode]
            NAME proto 8 [source_file: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:928)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:460)
junit.framework.AssertionFailedError: 
Expected: function f(){b:try{throw 9;}finally{switch(x){case 1:break b}}return 1}
Result: function f(){b:try{throw 9;}finally{switch(x){case 1:}}return 1}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION f 1 [source_file: expected0]
            NAME f 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                LABEL 1 [source_file: expected0]
                    LABEL_NAME b 1 [source_file: expected0]
                    TRY 1 [source_file: expected0]
                        BLOCK 1 [source_file: expected0]
                            THROW 1 [source_file: expected0]
                                NUMBER 9.0 1 [source_file: expected0]
                        BLOCK 1 [source_file: expected0]
                        BLOCK 1 [source_file: expected0]
                            SWITCH 1 [source_file: expected0]
                                NAME x 1 [source_file: expected0]
                                CASE 1 [source_file: expected0]
                                    NUMBER 1.0 1 [source_file: expected0]
                                    BLOCK 1 [synthetic: 1] [source_file: expected0]
                                        BREAK 1 [source_file: expected0]
                                            LABEL_NAME b 1 [source_file: expected0]
                RETURN 1 [source_file: expected0]
                    NUMBER 1.0 1 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION f 1 [source_file: testcode]
            NAME f 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                LABEL 1 [source_file: testcode]
                    LABEL_NAME b 1 [source_file: testcode]
                    TRY 1 [source_file: testcode]
                        BLOCK 1 [source_file: testcode]
                            THROW 1 [source_file: testcode]
                                NUMBER 9.0 1 [source_file: testcode]
                        BLOCK 1 [source_file: testcode]
                        BLOCK 1 [source_file: testcode]
                            SWITCH 1 [source_file: testcode]
                                NAME x 1 [source_file: testcode]
                                CASE 1 [source_file: testcode]
                                    NUMBER 1.0 1 [source_file: testcode]
                                    BLOCK 1 [synthetic: 1] [source_file: testcode]
                RETURN 1 [source_file: testcode]
                    NUMBER 1.0 1 [source_file: testcode]


Subtree1: BLOCK 1 [synthetic: 1] [source_file: expected0]
    BREAK 1 [source_file: expected0]
        LABEL_NAME b 1 [source_file: expected0]


Subtree2: BLOCK 1 [synthetic: 1] [source_file: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:928)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:460)
junit.framework.AssertionFailedError: 
Expected: f=function(){var action;a:{var proto=null;try{proto=new Proto}finally{action=proto;break a}}alert(action)}
Result: f=function(){var action;a:{var proto=null;try{proto=new Proto}finally{action=proto}}alert(action)}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            ASSIGN 1 [source_file: expected0]
                NAME f 1 [source_file: expected0]
                FUNCTION  1 [source_file: expected0]
                    NAME  1 [source_file: expected0]
                    PARAM_LIST 1 [source_file: expected0]
                    BLOCK 1 [source_file: expected0]
                        VAR 2 [source_file: expected0]
                            NAME action 2 [source_file: expected0]
                        LABEL 3 [source_file: expected0]
                            LABEL_NAME a 3 [source_file: expected0]
                            BLOCK 3 [source_file: expected0]
                                VAR 4 [source_file: expected0]
                                    NAME proto 4 [source_file: expected0]
                                        NULL 4 [source_file: expected0]
                                TRY 5 [source_file: expected0]
                                    BLOCK 5 [source_file: expected0]
                                        EXPR_RESULT 6 [source_file: expected0]
                                            ASSIGN 6 [source_file: expected0]
                                                NAME proto 6 [source_file: expected0]
                                                NEW 6 [source_file: expected0]
                                                    NAME Proto 6 [source_file: expected0]
                                    BLOCK 7 [source_file: expected0]
                                    BLOCK 7 [source_file: expected0]
                                        EXPR_RESULT 8 [source_file: expected0]
                                            ASSIGN 8 [source_file: expected0]
                                                NAME action 8 [source_file: expected0]
                                                NAME proto 8 [source_file: expected0]
                                        BREAK 9 [source_file: expected0]
                                            LABEL_NAME a 9 [source_file: expected0]
                        EXPR_RESULT 12 [source_file: expected0]
                            CALL 12 [free_call: 1] [source_file: expected0]
                                NAME alert 12 [source_file: expected0]
                                NAME action 12 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        EXPR_RESULT 1 [source_file: testcode]
            ASSIGN 1 [source_file: testcode]
                NAME f 1 [source_file: testcode]
                FUNCTION  1 [source_file: testcode]
                    NAME  1 [source_file: testcode]
                    PARAM_LIST 1 [source_file: testcode]
                    BLOCK 1 [source_file: testcode]
                        VAR 2 [source_file: testcode]
                            NAME action 2 [source_file: testcode]
                        LABEL 3 [source_file: testcode]
                            LABEL_NAME a 3 [source_file: testcode]
                            BLOCK 3 [source_file: testcode]
                                VAR 4 [source_file: testcode]
                                    NAME proto 4 [source_file: testcode]
                                        NULL 4 [source_file: testcode]
                                TRY 5 [source_file: testcode]
                                    BLOCK 5 [source_file: testcode]
                                        EXPR_RESULT 6 [source_file: testcode]
                                            ASSIGN 6 [source_file: testcode]
                                                NAME proto 6 [source_file: testcode]
                                                NEW 6 [source_file: testcode]
                                                    NAME Proto 6 [source_file: testcode]
                                    BLOCK 7 [source_file: testcode]
                                    BLOCK 7 [source_file: testcode]
                                        EXPR_RESULT 8 [source_file: testcode]
                                            ASSIGN 8 [source_file: testcode]
                                                NAME action 8 [source_file: testcode]
                                                NAME proto 8 [source_file: testcode]
                        EXPR_RESULT 12 [source_file: testcode]
                            CALL 12 [free_call: 1] [source_file: testcode]
                                NAME alert 12 [source_file: testcode]
                                NAME action 12 [source_file: testcode]


Subtree1: BLOCK 7 [source_file: expected0]
    EXPR_RESULT 8 [source_file: expected0]
        ASSIGN 8 [source_file: expected0]
            NAME action 8 [source_file: expected0]
            NAME proto 8 [source_file: expected0]
    BREAK 9 [source_file: expected0]
        LABEL_NAME a 9 [source_file: expected0]


Subtree2: BLOCK 7 [source_file: testcode]
    EXPR_RESULT 8 [source_file: testcode]
        ASSIGN 8 [source_file: testcode]
            NAME action 8 [source_file: testcode]
            NAME proto 8 [source_file: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:928)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:460)
junit.framework.AssertionFailedError: 
Expected: f=function(){var action;a:{var proto=null;try{}finally{try{proto=new Proto}finally{action=proto;break a}}}alert(action)}
Result: f=function(){var action;a:{var proto=null;try{}finally{try{proto=new Proto}finally{action=proto}}}alert(action)}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            ASSIGN 1 [source_file: expected0]
                NAME f 1 [source_file: expected0]
                FUNCTION  1 [source_file: expected0]
                    NAME  1 [source_file: expected0]
                    PARAM_LIST 1 [source_file: expected0]
                    BLOCK 1 [source_file: expected0]
                        VAR 2 [source_file: expected0]
                            NAME action 2 [source_file: expected0]
                        LABEL 3 [source_file: expected0]
                            LABEL_NAME a 3 [source_file: expected0]
                            BLOCK 3 [source_file: expected0]
                                VAR 4 [source_file: expected0]
                                    NAME proto 4 [source_file: expected0]
                                        NULL 4 [source_file: expected0]
                                TRY 5 [source_file: expected0]
                                    BLOCK 5 [source_file: expected0]
                                    BLOCK 6 [source_file: expected0]
                                    BLOCK 6 [source_file: expected0]
                                        TRY 7 [source_file: expected0]
                                            BLOCK 7 [source_file: expected0]
                                                EXPR_RESULT 8 [source_file: expected0]
                                                    ASSIGN 8 [source_file: expected0]
                                                        NAME proto 8 [source_file: expected0]
                                                        NEW 8 [source_file: expected0]
                                                            NAME Proto 8 [source_file: expected0]
                                            BLOCK 9 [source_file: expected0]
                                            BLOCK 9 [source_file: expected0]
                                                EXPR_RESULT 10 [source_file: expected0]
                                                    ASSIGN 10 [source_file: expected0]
                                                        NAME action 10 [source_file: expected0]
                                                        NAME proto 10 [source_file: expected0]
                                                BREAK 11 [source_file: expected0]
                                                    LABEL_NAME a 11 [source_file: expected0]
                        EXPR_RESULT 15 [source_file: expected0]
                            CALL 15 [free_call: 1] [source_file: expected0]
                                NAME alert 15 [source_file: expected0]
                                NAME action 15 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        EXPR_RESULT 1 [source_file: testcode]
            ASSIGN 1 [source_file: testcode]
                NAME f 1 [source_file: testcode]
                FUNCTION  1 [source_file: testcode]
                    NAME  1 [source_file: testcode]
                    PARAM_LIST 1 [source_file: testcode]
                    BLOCK 1 [source_file: testcode]
                        VAR 2 [source_file: testcode]
                            NAME action 2 [source_file: testcode]
                        LABEL 3 [source_file: testcode]
                            LABEL_NAME a 3 [source_file: testcode]
                            BLOCK 3 [source_file: testcode]
                                VAR 4 [source_file: testcode]
                                    NAME proto 4 [source_file: testcode]
                                        NULL 4 [source_file: testcode]
                                TRY 5 [source_file: testcode]
                                    BLOCK 5 [source_file: testcode]
                                    BLOCK 6 [source_file: testcode]
                                    BLOCK 6 [source_file: testcode]
                                        TRY 7 [source_file: testcode]
                                            BLOCK 7 [source_file: testcode]
                                                EXPR_RESULT 8 [source_file: testcode]
                                                    ASSIGN 8 [source_file: testcode]
                                                        NAME proto 8 [source_file: testcode]
                                                        NEW 8 [source_file: testcode]
                                                            NAME Proto 8 [source_file: testcode]
                                            BLOCK 9 [source_file: testcode]
                                            BLOCK 9 [source_file: testcode]
                                                EXPR_RESULT 10 [source_file: testcode]
                                                    ASSIGN 10 [source_file: testcode]
                                                        NAME action 10 [source_file: testcode]
                                                        NAME proto 10 [source_file: testcode]
                        EXPR_RESULT 15 [source_file: testcode]
                            CALL 15 [free_call: 1] [source_file: testcode]
                                NAME alert 15 [source_file: testcode]
                                NAME action 15 [source_file: testcode]


Subtree1: BLOCK 9 [source_file: expected0]
    EXPR_RESULT 10 [source_file: expected0]
        ASSIGN 10 [source_file: expected0]
            NAME action 10 [source_file: expected0]
            NAME proto 10 [source_file: expected0]
    BREAK 11 [source_file: expected0]
        LABEL_NAME a 11 [source_file: expected0]


Subtree2: BLOCK 9 [source_file: testcode]
    EXPR_RESULT 10 [source_file: testcode]
        ASSIGN 10 [source_file: testcode]
            NAME action 10 [source_file: testcode]
            NAME proto 10 [source_file: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:928)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:460)
junit.framework.AssertionFailedError: 
Expected: f=function(){var action;a:{var proto=null;try{proto=new Proto}finally{action=proto;return}}}
Result: f=function(){var action;a:{var proto=null;try{proto=new Proto}finally{action=proto}}}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            ASSIGN 1 [source_file: expected0]
                NAME f 1 [source_file: expected0]
                FUNCTION  1 [source_file: expected0]
                    NAME  1 [source_file: expected0]
                    PARAM_LIST 1 [source_file: expected0]
                    BLOCK 1 [source_file: expected0]
                        VAR 2 [source_file: expected0]
                            NAME action 2 [source_file: expected0]
                        LABEL 3 [source_file: expected0]
                            LABEL_NAME a 3 [source_file: expected0]
                            BLOCK 3 [source_file: expected0]
                                VAR 4 [source_file: expected0]
                                    NAME proto 4 [source_file: expected0]
                                        NULL 4 [source_file: expected0]
                                TRY 5 [source_file: expected0]
                                    BLOCK 5 [source_file: expected0]
                                        EXPR_RESULT 6 [source_file: expected0]
                                            ASSIGN 6 [source_file: expected0]
                                                NAME proto 6 [source_file: expected0]
                                                NEW 6 [source_file: expected0]
                                                    NAME Proto 6 [source_file: expected0]
                                    BLOCK 7 [source_file: expected0]
                                    BLOCK 7 [source_file: expected0]
                                        EXPR_RESULT 8 [source_file: expected0]
                                            ASSIGN 8 [source_file: expected0]
                                                NAME action 8 [source_file: expected0]
                                                NAME proto 8 [source_file: expected0]
                                        RETURN 9 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        EXPR_RESULT 1 [source_file: testcode]
            ASSIGN 1 [source_file: testcode]
                NAME f 1 [source_file: testcode]
                FUNCTION  1 [source_file: testcode]
                    NAME  1 [source_file: testcode]
                    PARAM_LIST 1 [source_file: testcode]
                    BLOCK 1 [source_file: testcode]
                        VAR 2 [source_file: testcode]
                            NAME action 2 [source_file: testcode]
                        LABEL 3 [source_file: testcode]
                            LABEL_NAME a 3 [source_file: testcode]
                            BLOCK 3 [source_file: testcode]
                                VAR 4 [source_file: testcode]
                                    NAME proto 4 [source_file: testcode]
                                        NULL 4 [source_file: testcode]
                                TRY 5 [source_file: testcode]
                                    BLOCK 5 [source_file: testcode]
                                        EXPR_RESULT 6 [source_file: testcode]
                                            ASSIGN 6 [source_file: testcode]
                                                NAME proto 6 [source_file: testcode]
                                                NEW 6 [source_file: testcode]
                                                    NAME Proto 6 [source_file: testcode]
                                    BLOCK 7 [source_file: testcode]
                                    BLOCK 7 [source_file: testcode]
                                        EXPR_RESULT 8 [source_file: testcode]
                                            ASSIGN 8 [source_file: testcode]
                                                NAME action 8 [source_file: testcode]
                                                NAME proto 8 [source_file: testcode]


Subtree1: BLOCK 7 [source_file: expected0]
    EXPR_RESULT 8 [source_file: expected0]
        ASSIGN 8 [source_file: expected0]
            NAME action 8 [source_file: expected0]
            NAME proto 8 [source_file: expected0]
    RETURN 9 [source_file: expected0]


Subtree2: BLOCK 7 [source_file: testcode]
    EXPR_RESULT 8 [source_file: testcode]
        ASSIGN 8 [source_file: testcode]
            NAME action 8 [source_file: testcode]
            NAME proto 8 [source_file: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:928)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:460)
junit.framework.AssertionFailedError: 
Expected: function f(){b:try{throw 9;}finally{break b}return 1}
Result: function f(){b:try{throw 9;}finally{}return 1}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION f 1 [source_file: expected0]
            NAME f 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                LABEL 1 [source_file: expected0]
                    LABEL_NAME b 1 [source_file: expected0]
                    TRY 1 [source_file: expected0]
                        BLOCK 1 [source_file: expected0]
                            THROW 1 [source_file: expected0]
                                NUMBER 9.0 1 [source_file: expected0]
                        BLOCK 1 [source_file: expected0]
                        BLOCK 1 [source_file: expected0]
                            BREAK 1 [source_file: expected0]
                                LABEL_NAME b 1 [source_file: expected0]
                RETURN 1 [source_file: expected0]
                    NUMBER 1.0 1 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION f 1 [source_file: testcode]
            NAME f 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                LABEL 1 [source_file: testcode]
                    LABEL_NAME b 1 [source_file: testcode]
                    TRY 1 [source_file: testcode]
                        BLOCK 1 [source_file: testcode]
                            THROW 1 [source_file: testcode]
                                NUMBER 9.0 1 [source_file: testcode]
                        BLOCK 1 [source_file: testcode]
                        BLOCK 1 [source_file: testcode]
                RETURN 1 [source_file: testcode]
                    NUMBER 1.0 1 [source_file: testcode]


Subtree1: BLOCK 1 [source_file: expected0]
    BREAK 1 [source_file: expected0]
        LABEL_NAME b 1 [source_file: expected0]


Subtree2: BLOCK 1 [source_file: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:928)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:460)
junit.framework.AssertionFailedError: 
Expected: f=function(){var action;a:do{var proto=null;try{proto=new Proto}finally{action=proto;continue a}}while(false);alert(action)}
Result: f=function(){var action;a:do{var proto=null;try{proto=new Proto}finally{action=proto}}while(false);alert(action)}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            ASSIGN 1 [source_file: expected0]
                NAME f 1 [source_file: expected0]
                FUNCTION  1 [source_file: expected0]
                    NAME  1 [source_file: expected0]
                    PARAM_LIST 1 [source_file: expected0]
                    BLOCK 1 [source_file: expected0]
                        VAR 2 [source_file: expected0]
                            NAME action 2 [source_file: expected0]
                        LABEL 3 [source_file: expected0]
                            LABEL_NAME a 3 [source_file: expected0]
                            DO 3 [source_file: expected0]
                                BLOCK 3 [source_file: expected0]
                                    VAR 4 [source_file: expected0]
                                        NAME proto 4 [source_file: expected0]
                                            NULL 4 [source_file: expected0]
                                    TRY 5 [source_file: expected0]
                                        BLOCK 5 [source_file: expected0]
                                            EXPR_RESULT 6 [source_file: expected0]
                                                ASSIGN 6 [source_file: expected0]
                                                    NAME proto 6 [source_file: expected0]
                                                    NEW 6 [source_file: expected0]
                                                        NAME Proto 6 [source_file: expected0]
                                        BLOCK 7 [source_file: expected0]
                                        BLOCK 7 [source_file: expected0]
                                            EXPR_RESULT 8 [source_file: expected0]
                                                ASSIGN 8 [source_file: expected0]
                                                    NAME action 8 [source_file: expected0]
                                                    NAME proto 8 [source_file: expected0]
                                            CONTINUE 9 [source_file: expected0]
                                                LABEL_NAME a 9 [source_file: expected0]
                                FALSE 11 [source_file: expected0]
                        EXPR_RESULT 12 [source_file: expected0]
                            CALL 12 [free_call: 1] [source_file: expected0]
                                NAME alert 12 [source_file: expected0]
                                NAME action 12 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        EXPR_RESULT 1 [source_file: testcode]
            ASSIGN 1 [source_file: testcode]
                NAME f 1 [source_file: testcode]
                FUNCTION  1 [source_file: testcode]
                    NAME  1 [source_file: testcode]
                    PARAM_LIST 1 [source_file: testcode]
                    BLOCK 1 [source_file: testcode]
                        VAR 2 [source_file: testcode]
                            NAME action 2 [source_file: testcode]
                        LABEL 3 [source_file: testcode]
                            LABEL_NAME a 3 [source_file: testcode]
                            DO 3 [source_file: testcode]
                                BLOCK 3 [source_file: testcode]
                                    VAR 4 [source_file: testcode]
                                        NAME proto 4 [source_file: testcode]
                                            NULL 4 [source_file: testcode]
                                    TRY 5 [source_file: testcode]
                                        BLOCK 5 [source_file: testcode]
                                            EXPR_RESULT 6 [source_file: testcode]
                                                ASSIGN 6 [source_file: testcode]
                                                    NAME proto 6 [source_file: testcode]
                                                    NEW 6 [source_file: testcode]
                                                        NAME Proto 6 [source_file: testcode]
                                        BLOCK 7 [source_file: testcode]
                                        BLOCK 7 [source_file: testcode]
                                            EXPR_RESULT 8 [source_file: testcode]
                                                ASSIGN 8 [source_file: testcode]
                                                    NAME action 8 [source_file: testcode]
                                                    NAME proto 8 [source_file: testcode]
                                FALSE 11 [source_file: testcode]
                        EXPR_RESULT 12 [source_file: testcode]
                            CALL 12 [free_call: 1] [source_file: testcode]
                                NAME alert 12 [source_file: testcode]
                                NAME action 12 [source_file: testcode]


Subtree1: BLOCK 7 [source_file: expected0]
    EXPR_RESULT 8 [source_file: expected0]
        ASSIGN 8 [source_file: expected0]
            NAME action 8 [source_file: expected0]
            NAME proto 8 [source_file: expected0]
    CONTINUE 9 [source_file: expected0]
        LABEL_NAME a 9 [source_file: expected0]


Subtree2: BLOCK 7 [source_file: testcode]
    EXPR_RESULT 8 [source_file: testcode]
        ASSIGN 8 [source_file: testcode]
            NAME action 8 [source_file: testcode]
            NAME proto 8 [source_file: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:928)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:460)
junit.framework.AssertionFailedError: 
Expected: function f(){b:try{throw 9;}finally{switch(x){case 1:break b}}return 1}
Result: function f(){b:try{throw 9;}finally{switch(x){case 1:}}return 1}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION f 1 [source_file: expected0]
            NAME f 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                LABEL 1 [source_file: expected0]
                    LABEL_NAME b 1 [source_file: expected0]
                    TRY 1 [source_file: expected0]
                        BLOCK 1 [source_file: expected0]
                            THROW 1 [source_file: expected0]
                                NUMBER 9.0 1 [source_file: expected0]
                        BLOCK 1 [source_file: expected0]
                        BLOCK 1 [source_file: expected0]
                            SWITCH 1 [source_file: expected0]
                                NAME x 1 [source_file: expected0]
                                CASE 1 [source_file: expected0]
                                    NUMBER 1.0 1 [source_file: expected0]
                                    BLOCK 1 [synthetic: 1] [source_file: expected0]
                                        BREAK 1 [source_file: expected0]
                                            LABEL_NAME b 1 [source_file: expected0]
                RETURN 1 [source_file: expected0]
                    NUMBER 1.0 1 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION f 1 [source_file: testcode]
            NAME f 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                LABEL 1 [source_file: testcode]
                    LABEL_NAME b 1 [source_file: testcode]
                    TRY 1 [source_file: testcode]
                        BLOCK 1 [source_file: testcode]
                            THROW 1 [source_file: testcode]
                                NUMBER 9.0 1 [source_file: testcode]
                        BLOCK 1 [source_file: testcode]
                        BLOCK 1 [source_file: testcode]
                            SWITCH 1 [source_file: testcode]
                                NAME x 1 [source_file: testcode]
                                CASE 1 [source_file: testcode]
                                    NUMBER 1.0 1 [source_file: testcode]
                                    BLOCK 1 [synthetic: 1] [source_file: testcode]
                RETURN 1 [source_file: testcode]
                    NUMBER 1.0 1 [source_file: testcode]


Subtree1: BLOCK 1 [synthetic: 1] [source_file: expected0]
    BREAK 1 [source_file: expected0]
        LABEL_NAME b 1 [source_file: expected0]


Subtree2: BLOCK 1 [synthetic: 1] [source_file: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:928)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:460)
junit.framework.AssertionFailedError: 
Expected: f=function(){var action;a:{var proto=null;try{proto=new Proto}finally{action=proto;break a}}alert(action)}
Result: f=function(){var action;a:{var proto=null;try{proto=new Proto}finally{action=proto}}alert(action)}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            ASSIGN 1 [source_file: expected0]
                NAME f 1 [source_file: expected0]
                FUNCTION  1 [source_file: expected0]
                    NAME  1 [source_file: expected0]
                    PARAM_LIST 1 [source_file: expected0]
                    BLOCK 1 [source_file: expected0]
                        VAR 2 [source_file: expected0]
                            NAME action 2 [source_file: expected0]
                        LABEL 3 [source_file: expected0]
                            LABEL_NAME a 3 [source_file: expected0]
                            BLOCK 3 [source_file: expected0]
                                VAR 4 [source_file: expected0]
                                    NAME proto 4 [source_file: expected0]
                                        NULL 4 [source_file: expected0]
                                TRY 5 [source_file: expected0]
                                    BLOCK 5 [source_file: expected0]
                                        EXPR_RESULT 6 [source_file: expected0]
                                            ASSIGN 6 [source_file: expected0]
                                                NAME proto 6 [source_file: expected0]
                                                NEW 6 [source_file: expected0]
                                                    NAME Proto 6 [source_file: expected0]
                                    BLOCK 7 [source_file: expected0]
                                    BLOCK 7 [source_file: expected0]
                                        EXPR_RESULT 8 [source_file: expected0]
                                            ASSIGN 8 [source_file: expected0]
                                                NAME action 8 [source_file: expected0]
                                                NAME proto 8 [source_file: expected0]
                                        BREAK 9 [source_file: expected0]
                                            LABEL_NAME a 9 [source_file: expected0]
                        EXPR_RESULT 12 [source_file: expected0]
                            CALL 12 [free_call: 1] [source_file: expected0]
                                NAME alert 12 [source_file: expected0]
                                NAME action 12 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        EXPR_RESULT 1 [source_file: testcode]
            ASSIGN 1 [source_file: testcode]
                NAME f 1 [source_file: testcode]
                FUNCTION  1 [source_file: testcode]
                    NAME  1 [source_file: testcode]
                    PARAM_LIST 1 [source_file: testcode]
                    BLOCK 1 [source_file: testcode]
                        VAR 2 [source_file: testcode]
                            NAME action 2 [source_file: testcode]
                        LABEL 3 [source_file: testcode]
                            LABEL_NAME a 3 [source_file: testcode]
                            BLOCK 3 [source_file: testcode]
                                VAR 4 [source_file: testcode]
                                    NAME proto 4 [source_file: testcode]
                                        NULL 4 [source_file: testcode]
                                TRY 5 [source_file: testcode]
                                    BLOCK 5 [source_file: testcode]
                                        EXPR_RESULT 6 [source_file: testcode]
                                            ASSIGN 6 [source_file: testcode]
                                                NAME proto 6 [source_file: testcode]
                                                NEW 6 [source_file: testcode]
                                                    NAME Proto 6 [source_file: testcode]
                                    BLOCK 7 [source_file: testcode]
                                    BLOCK 7 [source_file: testcode]
                                        EXPR_RESULT 8 [source_file: testcode]
                                            ASSIGN 8 [source_file: testcode]
                                                NAME action 8 [source_file: testcode]
                                                NAME proto 8 [source_file: testcode]
                        EXPR_RESULT 12 [source_file: testcode]
                            CALL 12 [free_call: 1] [source_file: testcode]
                                NAME alert 12 [source_file: testcode]
                                NAME action 12 [source_file: testcode]


Subtree1: BLOCK 7 [source_file: expected0]
    EXPR_RESULT 8 [source_file: expected0]
        ASSIGN 8 [source_file: expected0]
            NAME action 8 [source_file: expected0]
            NAME proto 8 [source_file: expected0]
    BREAK 9 [source_file: expected0]
        LABEL_NAME a 9 [source_file: expected0]


Subtree2: BLOCK 7 [source_file: testcode]
    EXPR_RESULT 8 [source_file: testcode]
        ASSIGN 8 [source_file: testcode]
            NAME action 8 [source_file: testcode]
            NAME proto 8 [source_file: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:928)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:460)
junit.framework.AssertionFailedError: 
Expected: f=function(){var action;a:{var proto=null;try{}finally{try{proto=new Proto}finally{action=proto;break a}}}alert(action)}
Result: f=function(){var action;a:{var proto=null;try{}finally{try{proto=new Proto}finally{action=proto}}}alert(action)}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            ASSIGN 1 [source_file: expected0]
                NAME f 1 [source_file: expected0]
                FUNCTION  1 [source_file: expected0]
                    NAME  1 [source_file: expected0]
                    PARAM_LIST 1 [source_file: expected0]
                    BLOCK 1 [source_file: expected0]
                        VAR 2 [source_file: expected0]
                            NAME action 2 [source_file: expected0]
                        LABEL 3 [source_file: expected0]
                            LABEL_NAME a 3 [source_file: expected0]
                            BLOCK 3 [source_file: expected0]
                                VAR 4 [source_file: expected0]
                                    NAME proto 4 [source_file: expected0]
                                        NULL 4 [source_file: expected0]
                                TRY 5 [source_file: expected0]
                                    BLOCK 5 [source_file: expected0]
                                    BLOCK 6 [source_file: expected0]
                                    BLOCK 6 [source_file: expected0]
                                        TRY 7 [source_file: expected0]
                                            BLOCK 7 [source_file: expected0]
                                                EXPR_RESULT 8 [source_file: expected0]
                                                    ASSIGN 8 [source_file: expected0]
                                                        NAME proto 8 [source_file: expected0]
                                                        NEW 8 [source_file: expected0]
                                                            NAME Proto 8 [source_file: expected0]
                                            BLOCK 9 [source_file: expected0]
                                            BLOCK 9 [source_file: expected0]
                                                EXPR_RESULT 10 [source_file: expected0]
                                                    ASSIGN 10 [source_file: expected0]
                                                        NAME action 10 [source_file: expected0]
                                                        NAME proto 10 [source_file: expected0]
                                                BREAK 11 [source_file: expected0]
                                                    LABEL_NAME a 11 [source_file: expected0]
                        EXPR_RESULT 15 [source_file: expected0]
                            CALL 15 [free_call: 1] [source_file: expected0]
                                NAME alert 15 [source_file: expected0]
                                NAME action 15 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        EXPR_RESULT 1 [source_file: testcode]
            ASSIGN 1 [source_file: testcode]
                NAME f 1 [source_file: testcode]
                FUNCTION  1 [source_file: testcode]
                    NAME  1 [source_file: testcode]
                    PARAM_LIST 1 [source_file: testcode]
                    BLOCK 1 [source_file: testcode]
                        VAR 2 [source_file: testcode]
                            NAME action 2 [source_file: testcode]
                        LABEL 3 [source_file: testcode]
                            LABEL_NAME a 3 [source_file: testcode]
                            BLOCK 3 [source_file: testcode]
                                VAR 4 [source_file: testcode]
                                    NAME proto 4 [source_file: testcode]
                                        NULL 4 [source_file: testcode]
                                TRY 5 [source_file: testcode]
                                    BLOCK 5 [source_file: testcode]
                                    BLOCK 6 [source_file: testcode]
                                    BLOCK 6 [source_file: testcode]
                                        TRY 7 [source_file: testcode]
                                            BLOCK 7 [source_file: testcode]
                                                EXPR_RESULT 8 [source_file: testcode]
                                                    ASSIGN 8 [source_file: testcode]
                                                        NAME proto 8 [source_file: testcode]
                                                        NEW 8 [source_file: testcode]
                                                            NAME Proto 8 [source_file: testcode]
                                            BLOCK 9 [source_file: testcode]
                                            BLOCK 9 [source_file: testcode]
                                                EXPR_RESULT 10 [source_file: testcode]
                                                    ASSIGN 10 [source_file: testcode]
                                                        NAME action 10 [source_file: testcode]
                                                        NAME proto 10 [source_file: testcode]
                        EXPR_RESULT 15 [source_file: testcode]
                            CALL 15 [free_call: 1] [source_file: testcode]
                                NAME alert 15 [source_file: testcode]
                                NAME action 15 [source_file: testcode]


Subtree1: BLOCK 9 [source_file: expected0]
    EXPR_RESULT 10 [source_file: expected0]
        ASSIGN 10 [source_file: expected0]
            NAME action 10 [source_file: expected0]
            NAME proto 10 [source_file: expected0]
    BREAK 11 [source_file: expected0]
        LABEL_NAME a 11 [source_file: expected0]


Subtree2: BLOCK 9 [source_file: testcode]
    EXPR_RESULT 10 [source_file: testcode]
        ASSIGN 10 [source_file: testcode]
            NAME action 10 [source_file: testcode]
            NAME proto 10 [source_file: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:928)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:460)
19:29:29.664 [pool-4-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (21735 ms)
<> Total tests run: 210
<> Ignored tests: 0
<> Failed tests: 40
~ testTwoMethods(com.google.javascript.jscomp.CrossModuleMethodMotionTest)
[
Expected: var JSCompiler_stubMap=[];function JSCompiler_stubMethod(JSCompiler_stubMethod_id){return function(){return JSCompiler_stubMap[JSCompiler_stubMethod_id].apply(this,arguments)}}function JSCompiler_unstubMethod(JSCompiler_unstubMethod_id,JSCompiler_unstubMethod_body){return JSCompiler_stubMap[JSCompiler_unstubMethod_id]=JSCompiler_unstubMethod_body}function Foo(){}Foo.prototype.baz=JSCompiler_stubMethod(1);Foo.prototype.callBaz=JSCompiler_stubMethod(0);Foo.prototype.baz=JSCompiler_unstubMethod(1,function(){});
Foo.prototype.callBaz=JSCompiler_unstubMethod(0,function(){this.baz()});(new Foo).callBaz()
Result: var JSCompiler_stubMap=[];function JSCompiler_stubMethod(JSCompiler_stubMethod_id){return function(){return JSCompiler_stubMap[JSCompiler_stubMethod_id].apply(this,arguments)}}function JSCompiler_unstubMethod(JSCompiler_unstubMethod_id,JSCompiler_unstubMethod_body){return JSCompiler_stubMap[JSCompiler_unstubMethod_id]=JSCompiler_unstubMethod_body}function Foo(){}Foo.prototype.baz=JSCompiler_stubMethod(0);Foo.prototype.callBaz=JSCompiler_stubMethod(1);
Foo.prototype.callBaz=JSCompiler_unstubMethod(1,function(){this.baz()});Foo.prototype.baz=JSCompiler_unstubMethod(0,function(){});(new Foo).callBaz()
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        VAR 1 [source_file: expected0]
            NAME JSCompiler_stubMap 1 [source_file: expected0]
                ARRAYLIT 1 [source_file: expected0]
        FUNCTION JSCompiler_stubMethod 1 [source_file: expected0]
            NAME JSCompiler_stubMethod 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
                NAME JSCompiler_stubMethod_id 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                RETURN 1 [source_file: expected0]
                    FUNCTION  1 [source_file: expected0]
                        NAME  1 [source_file: expected0]
                        PARAM_LIST 1 [source_file: expected0]
                        BLOCK 1 [source_file: expected0]
                            RETURN 1 [source_file: expected0]
                                CALL 1 [source_file: expected0]
                                    GETPROP 1 [source_file: expected0]
                                        GETELEM 1 [source_file: expected0]
                                            NAME JSCompiler_stubMap 1 [source_file: expected0]
                                            NAME JSCompiler_stubMethod_id 1 [source_file: expected0]
                                        STRING apply 1 [source_file: expected0]
                                    THIS 1 [source_file: expected0]
                                    NAME arguments 1 [source_file: expected0]
        FUNCTION JSCompiler_unstubMethod 1 [source_file: expected0]
            NAME JSCompiler_unstubMethod 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
                NAME JSCompiler_unstubMethod_id 1 [source_file: expected0]
                NAME JSCompiler_unstubMethod_body 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                RETURN 1 [source_file: expected0]
                    ASSIGN 1 [source_file: expected0]
                        GETELEM 1 [source_file: expected0]
                            NAME JSCompiler_stubMap 1 [source_file: expected0]
                            NAME JSCompiler_unstubMethod_id 1 [source_file: expected0]
                        NAME JSCompiler_unstubMethod_body 1 [source_file: expected0]
        FUNCTION Foo 1 [source_file: expected0]
            NAME Foo 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            ASSIGN 1 [source_file: expected0]
                GETPROP 1 [source_file: expected0]
                    GETPROP 1 [source_file: expected0]
                        NAME Foo 1 [source_file: expected0]
                        STRING prototype 1 [source_file: expected0]
                    STRING baz 1 [source_file: expected0]
                CALL 1 [free_call: 1] [source_file: expected0]
                    NAME JSCompiler_stubMethod 1 [source_file: expected0]
                    NUMBER 1.0 1 [source_file: expected0]
    SCRIPT 1 [synthetic: 1] [source_file: expected1] [input_id: InputId: expected1]
        EXPR_RESULT 1 [source_file: expected1]
            ASSIGN 1 [source_file: expected1]
                GETPROP 1 [source_file: expected1]
                    GETPROP 1 [source_file: expected1]
                        NAME Foo 1 [source_file: expected1]
                        STRING prototype 1 [source_file: expected1]
                    STRING callBaz 1 [source_file: expected1]
                CALL 1 [free_call: 1] [source_file: expected1]
                    NAME JSCompiler_stubMethod 1 [source_file: expected1]
                    NUMBER 0.0 1 [source_file: expected1]
    SCRIPT 1 [synthetic: 1] [source_file: expected2] [input_id: InputId: expected2]
        EXPR_RESULT 1 [source_file: expected2]
            ASSIGN 1 [source_file: expected2]
                GETPROP 1 [source_file: expected2]
                    GETPROP 1 [source_file: expected2]
                        NAME Foo 1 [source_file: expected2]
                        STRING prototype 1 [source_file: expected2]
                    STRING baz 1 [source_file: expected2]
                CALL 1 [free_call: 1] [source_file: expected2]
                    NAME JSCompiler_unstubMethod 1 [source_file: expected2]
                    NUMBER 1.0 1 [source_file: expected2]
                    FUNCTION  1 [source_file: expected2]
                        NAME  1 [source_file: expected2]
                        PARAM_LIST 1 [source_file: expected2]
                        BLOCK 1 [source_file: expected2]
        EXPR_RESULT 1 [source_file: expected2]
            ASSIGN 1 [source_file: expected2]
                GETPROP 1 [source_file: expected2]
                    GETPROP 1 [source_file: expected2]
                        NAME Foo 1 [source_file: expected2]
                        STRING prototype 1 [source_file: expected2]
                    STRING callBaz 1 [source_file: expected2]
                CALL 1 [free_call: 1] [source_file: expected2]
                    NAME JSCompiler_unstubMethod 1 [source_file: expected2]
                    NUMBER 0.0 1 [source_file: expected2]
                    FUNCTION  1 [source_file: expected2]
                        NAME  1 [source_file: expected2]
                        PARAM_LIST 1 [source_file: expected2]
                        BLOCK 1 [source_file: expected2]
                            EXPR_RESULT 1 [source_file: expected2]
                                CALL 1 [source_file: expected2]
                                    GETPROP 1 [source_file: expected2]
                                        THIS 1 [source_file: expected2]
                                        STRING baz 1 [source_file: expected2]
        EXPR_RESULT 1 [source_file: expected2]
            CALL 1 [source_file: expected2]
                GETPROP 1 [source_file: expected2]
                    NEW 1 [source_file: expected2]
                        NAME Foo 1 [source_file: expected2]
                    STRING callBaz 1 [source_file: expected2]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: i0] [input_id: InputId: i0]
        VAR 1 [source_file:  [synthetic:1] ]
            NAME JSCompiler_stubMap 1 [source_file:  [synthetic:1] ]
                ARRAYLIT 1 [source_file:  [synthetic:1] ]
        FUNCTION JSCompiler_stubMethod 1 [source_file:  [synthetic:1] ]
            NAME JSCompiler_stubMethod 1 [source_file:  [synthetic:1] ]
            PARAM_LIST 1 [source_file:  [synthetic:1] ]
                NAME JSCompiler_stubMethod_id 1 [source_file:  [synthetic:1] ]
            BLOCK 1 [source_file:  [synthetic:1] ]
                RETURN 1 [source_file:  [synthetic:1] ]
                    FUNCTION  1 [source_file:  [synthetic:1] ]
                        NAME  1 [source_file:  [synthetic:1] ]
                        PARAM_LIST 1 [source_file:  [synthetic:1] ]
                        BLOCK 1 [source_file:  [synthetic:1] ]
                            RETURN 1 [source_file:  [synthetic:1] ]
                                CALL 1 [source_file:  [synthetic:1] ]
                                    GETPROP 1 [source_file:  [synthetic:1] ]
                                        GETELEM 1 [source_file:  [synthetic:1] ]
                                            NAME JSCompiler_stubMap 1 [source_file:  [synthetic:1] ]
                                            NAME JSCompiler_stubMethod_id 1 [source_file:  [synthetic:1] ]
                                        STRING apply 1 [source_file:  [synthetic:1] ]
                                    THIS 1 [source_file:  [synthetic:1] ]
                                    NAME arguments 1 [source_file:  [synthetic:1] ]
        FUNCTION JSCompiler_unstubMethod 1 [source_file:  [synthetic:1] ]
            NAME JSCompiler_unstubMethod 1 [source_file:  [synthetic:1] ]
            PARAM_LIST 1 [source_file:  [synthetic:1] ]
                NAME JSCompiler_unstubMethod_id 1 [source_file:  [synthetic:1] ]
                NAME JSCompiler_unstubMethod_body 1 [source_file:  [synthetic:1] ]
            BLOCK 1 [source_file:  [synthetic:1] ]
                RETURN 1 [source_file:  [synthetic:1] ]
                    ASSIGN 1 [source_file:  [synthetic:1] ]
                        GETELEM 1 [source_file:  [synthetic:1] ]
                            NAME JSCompiler_stubMap 1 [source_file:  [synthetic:1] ]
                            NAME JSCompiler_unstubMethod_id 1 [source_file:  [synthetic:1] ]
                        NAME JSCompiler_unstubMethod_body 1 [source_file:  [synthetic:1] ]
        FUNCTION Foo 1 [source_file: i0]
            NAME Foo 1 [source_file: i0]
            PARAM_LIST 1 [source_file: i0]
            BLOCK 1 [source_file: i0]
        EXPR_RESULT 1 [source_file: i0]
            ASSIGN 1 [source_file: i0]
                GETPROP 1 [source_file: i0]
                    GETPROP 1 [source_file: i0]
                        NAME Foo 1 [source_file: i0]
                        STRING prototype 1 [source_file: i0]
                    STRING baz 1 [source_file: i0]
                CALL 1 [free_call: 1] [source_file: i0]
                    NAME JSCompiler_stubMethod 1 [source_file: i0]
                    NUMBER 0.0 1 [source_file: i0]
    SCRIPT 1 [synthetic: 1] [source_file: i1] [input_id: InputId: i1]
        EXPR_RESULT 1 [source_file: i1]
            ASSIGN 1 [source_file: i1]
                GETPROP 1 [source_file: i1]
                    GETPROP 1 [source_file: i1]
                        NAME Foo 1 [source_file: i1]
                        STRING prototype 1 [source_file: i1]
                    STRING callBaz 1 [source_file: i1]
                CALL 1 [free_call: 1] [source_file: i1]
                    NAME JSCompiler_stubMethod 1 [source_file: i1]
                    NUMBER 1.0 1 [source_file: i1]
    SCRIPT 1 [synthetic: 1] [source_file: i2] [input_id: InputId: i2]
        EXPR_RESULT 1 [source_file: i1]
            ASSIGN 1 [source_file: i1]
                GETPROP 1 [source_file: i1]
                    GETPROP 1 [source_file: i1]
                        NAME Foo 1 [source_file: i1]
                        STRING prototype 1 [source_file: i1]
                    STRING callBaz 1 [source_file: i1]
                CALL 1 [free_call: 1] [source_file: i1]
                    NAME JSCompiler_unstubMethod 1 [source_file: i1]
                    NUMBER 1.0 1 [source_file: i1]
                    FUNCTION  1 [source_file: i1]
                        NAME  1 [source_file: i1]
                        PARAM_LIST 1 [source_file: i1]
                        BLOCK 1 [source_file: i1]
                            EXPR_RESULT 1 [source_file: i1]
                                CALL 1 [source_file: i1]
                                    GETPROP 1 [source_file: i1]
                                        THIS 1 [source_file: i1]
                                        STRING baz 1 [source_file: i1]
        EXPR_RESULT 1 [source_file: i0]
            ASSIGN 1 [source_file: i0]
                GETPROP 1 [source_file: i0]
                    GETPROP 1 [source_file: i0]
                        NAME Foo 1 [source_file: i0]
                        STRING prototype 1 [source_file: i0]
                    STRING baz 1 [source_file: i0]
                CALL 1 [free_call: 1] [source_file: i0]
                    NAME JSCompiler_unstubMethod 1 [source_file: i0]
                    NUMBER 0.0 1 [source_file: i0]
                    FUNCTION  1 [source_file: i0]
                        NAME  1 [source_file: i0]
                        PARAM_LIST 1 [source_file: i0]
                        BLOCK 1 [source_file: i0]
        EXPR_RESULT 1 [source_file: i2]
            CALL 1 [source_file: i2]
                GETPROP 1 [source_file: i2]
                    NEW 1 [source_file: i2]
                        NAME Foo 1 [source_file: i2]
                    STRING callBaz 1 [source_file: i2]


Subtree1: NUMBER 1.0 1 [source_file: expected0]


Subtree2: NUMBER 0.0 1 [source_file: i0]
]
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_stubMap=[];function JSCompiler_stubMethod(JSCompiler_stubMethod_id){return function(){return JSCompiler_stubMap[JSCompiler_stubMethod_id].apply(this,arguments)}}function JSCompiler_unstubMethod(JSCompiler_unstubMethod_id,JSCompiler_unstubMethod_body){return JSCompiler_stubMap[JSCompiler_unstubMethod_id]=JSCompiler_unstubMethod_body}function Foo(){}Foo.prototype.baz=JSCompiler_stubMethod(1);Foo.prototype.callBaz=JSCompiler_stubMethod(0);Foo.prototype.baz=JSCompiler_unstubMethod(1,function(){});
Foo.prototype.callBaz=JSCompiler_unstubMethod(0,function(){this.baz()});(new Foo).callBaz()
Result: var JSCompiler_stubMap=[];function JSCompiler_stubMethod(JSCompiler_stubMethod_id){return function(){return JSCompiler_stubMap[JSCompiler_stubMethod_id].apply(this,arguments)}}function JSCompiler_unstubMethod(JSCompiler_unstubMethod_id,JSCompiler_unstubMethod_body){return JSCompiler_stubMap[JSCompiler_unstubMethod_id]=JSCompiler_unstubMethod_body}function Foo(){}Foo.prototype.baz=JSCompiler_stubMethod(0);Foo.prototype.callBaz=JSCompiler_stubMethod(1);
Foo.prototype.callBaz=JSCompiler_unstubMethod(1,function(){this.baz()});Foo.prototype.baz=JSCompiler_unstubMethod(0,function(){});(new Foo).callBaz()
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        VAR 1 [source_file: expected0]
            NAME JSCompiler_stubMap 1 [source_file: expected0]
                ARRAYLIT 1 [source_file: expected0]
        FUNCTION JSCompiler_stubMethod 1 [source_file: expected0]
            NAME JSCompiler_stubMethod 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
                NAME JSCompiler_stubMethod_id 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                RETURN 1 [source_file: expected0]
                    FUNCTION  1 [source_file: expected0]
                        NAME  1 [source_file: expected0]
                        PARAM_LIST 1 [source_file: expected0]
                        BLOCK 1 [source_file: expected0]
                            RETURN 1 [source_file: expected0]
                                CALL 1 [source_file: expected0]
                                    GETPROP 1 [source_file: expected0]
                                        GETELEM 1 [source_file: expected0]
                                            NAME JSCompiler_stubMap 1 [source_file: expected0]
                                            NAME JSCompiler_stubMethod_id 1 [source_file: expected0]
                                        STRING apply 1 [source_file: expected0]
                                    THIS 1 [source_file: expected0]
                                    NAME arguments 1 [source_file: expected0]
        FUNCTION JSCompiler_unstubMethod 1 [source_file: expected0]
            NAME JSCompiler_unstubMethod 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
                NAME JSCompiler_unstubMethod_id 1 [source_file: expected0]
                NAME JSCompiler_unstubMethod_body 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                RETURN 1 [source_file: expected0]
                    ASSIGN 1 [source_file: expected0]
                        GETELEM 1 [source_file: expected0]
                            NAME JSCompiler_stubMap 1 [source_file: expected0]
                            NAME JSCompiler_unstubMethod_id 1 [source_file: expected0]
                        NAME JSCompiler_unstubMethod_body 1 [source_file: expected0]
        FUNCTION Foo 1 [source_file: expected0]
            NAME Foo 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            ASSIGN 1 [source_file: expected0]
                GETPROP 1 [source_file: expected0]
                    GETPROP 1 [source_file: expected0]
                        NAME Foo 1 [source_file: expected0]
                        STRING prototype 1 [source_file: expected0]
                    STRING baz 1 [source_file: expected0]
                CALL 1 [free_call: 1] [source_file: expected0]
                    NAME JSCompiler_stubMethod 1 [source_file: expected0]
                    NUMBER 1.0 1 [source_file: expected0]
    SCRIPT 1 [synthetic: 1] [source_file: expected1] [input_id: InputId: expected1]
        EXPR_RESULT 1 [source_file: expected1]
            ASSIGN 1 [source_file: expected1]
                GETPROP 1 [source_file: expected1]
                    GETPROP 1 [source_file: expected1]
                        NAME Foo 1 [source_file: expected1]
                        STRING prototype 1 [source_file: expected1]
                    STRING callBaz 1 [source_file: expected1]
                CALL 1 [free_call: 1] [source_file: expected1]
                    NAME JSCompiler_stubMethod 1 [source_file: expected1]
                    NUMBER 0.0 1 [source_file: expected1]
    SCRIPT 1 [synthetic: 1] [source_file: expected2] [input_id: InputId: expected2]
        EXPR_RESULT 1 [source_file: expected2]
            ASSIGN 1 [source_file: expected2]
                GETPROP 1 [source_file: expected2]
                    GETPROP 1 [source_file: expected2]
                        NAME Foo 1 [source_file: expected2]
                        STRING prototype 1 [source_file: expected2]
                    STRING baz 1 [source_file: expected2]
                CALL 1 [free_call: 1] [source_file: expected2]
                    NAME JSCompiler_unstubMethod 1 [source_file: expected2]
                    NUMBER 1.0 1 [source_file: expected2]
                    FUNCTION  1 [source_file: expected2]
                        NAME  1 [source_file: expected2]
                        PARAM_LIST 1 [source_file: expected2]
                        BLOCK 1 [source_file: expected2]
        EXPR_RESULT 1 [source_file: expected2]
            ASSIGN 1 [source_file: expected2]
                GETPROP 1 [source_file: expected2]
                    GETPROP 1 [source_file: expected2]
                        NAME Foo 1 [source_file: expected2]
                        STRING prototype 1 [source_file: expected2]
                    STRING callBaz 1 [source_file: expected2]
                CALL 1 [free_call: 1] [source_file: expected2]
                    NAME JSCompiler_unstubMethod 1 [source_file: expected2]
                    NUMBER 0.0 1 [source_file: expected2]
                    FUNCTION  1 [source_file: expected2]
                        NAME  1 [source_file: expected2]
                        PARAM_LIST 1 [source_file: expected2]
                        BLOCK 1 [source_file: expected2]
                            EXPR_RESULT 1 [source_file: expected2]
                                CALL 1 [source_file: expected2]
                                    GETPROP 1 [source_file: expected2]
                                        THIS 1 [source_file: expected2]
                                        STRING baz 1 [source_file: expected2]
        EXPR_RESULT 1 [source_file: expected2]
            CALL 1 [source_file: expected2]
                GETPROP 1 [source_file: expected2]
                    NEW 1 [source_file: expected2]
                        NAME Foo 1 [source_file: expected2]
                    STRING callBaz 1 [source_file: expected2]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: i0] [input_id: InputId: i0]
        VAR 1 [source_file:  [synthetic:1] ]
            NAME JSCompiler_stubMap 1 [source_file:  [synthetic:1] ]
                ARRAYLIT 1 [source_file:  [synthetic:1] ]
        FUNCTION JSCompiler_stubMethod 1 [source_file:  [synthetic:1] ]
            NAME JSCompiler_stubMethod 1 [source_file:  [synthetic:1] ]
            PARAM_LIST 1 [source_file:  [synthetic:1] ]
                NAME JSCompiler_stubMethod_id 1 [source_file:  [synthetic:1] ]
            BLOCK 1 [source_file:  [synthetic:1] ]
                RETURN 1 [source_file:  [synthetic:1] ]
                    FUNCTION  1 [source_file:  [synthetic:1] ]
                        NAME  1 [source_file:  [synthetic:1] ]
                        PARAM_LIST 1 [source_file:  [synthetic:1] ]
                        BLOCK 1 [source_file:  [synthetic:1] ]
                            RETURN 1 [source_file:  [synthetic:1] ]
                                CALL 1 [source_file:  [synthetic:1] ]
                                    GETPROP 1 [source_file:  [synthetic:1] ]
                                        GETELEM 1 [source_file:  [synthetic:1] ]
                                            NAME JSCompiler_stubMap 1 [source_file:  [synthetic:1] ]
                                            NAME JSCompiler_stubMethod_id 1 [source_file:  [synthetic:1] ]
                                        STRING apply 1 [source_file:  [synthetic:1] ]
                                    THIS 1 [source_file:  [synthetic:1] ]
                                    NAME arguments 1 [source_file:  [synthetic:1] ]
        FUNCTION JSCompiler_unstubMethod 1 [source_file:  [synthetic:1] ]
            NAME JSCompiler_unstubMethod 1 [source_file:  [synthetic:1] ]
            PARAM_LIST 1 [source_file:  [synthetic:1] ]
                NAME JSCompiler_unstubMethod_id 1 [source_file:  [synthetic:1] ]
                NAME JSCompiler_unstubMethod_body 1 [source_file:  [synthetic:1] ]
            BLOCK 1 [source_file:  [synthetic:1] ]
                RETURN 1 [source_file:  [synthetic:1] ]
                    ASSIGN 1 [source_file:  [synthetic:1] ]
                        GETELEM 1 [source_file:  [synthetic:1] ]
                            NAME JSCompiler_stubMap 1 [source_file:  [synthetic:1] ]
                            NAME JSCompiler_unstubMethod_id 1 [source_file:  [synthetic:1] ]
                        NAME JSCompiler_unstubMethod_body 1 [source_file:  [synthetic:1] ]
        FUNCTION Foo 1 [source_file: i0]
            NAME Foo 1 [source_file: i0]
            PARAM_LIST 1 [source_file: i0]
            BLOCK 1 [source_file: i0]
        EXPR_RESULT 1 [source_file: i0]
            ASSIGN 1 [source_file: i0]
                GETPROP 1 [source_file: i0]
                    GETPROP 1 [source_file: i0]
                        NAME Foo 1 [source_file: i0]
                        STRING prototype 1 [source_file: i0]
                    STRING baz 1 [source_file: i0]
                CALL 1 [free_call: 1] [source_file: i0]
                    NAME JSCompiler_stubMethod 1 [source_file: i0]
                    NUMBER 0.0 1 [source_file: i0]
    SCRIPT 1 [synthetic: 1] [source_file: i1] [input_id: InputId: i1]
        EXPR_RESULT 1 [source_file: i1]
            ASSIGN 1 [source_file: i1]
                GETPROP 1 [source_file: i1]
                    GETPROP 1 [source_file: i1]
                        NAME Foo 1 [source_file: i1]
                        STRING prototype 1 [source_file: i1]
                    STRING callBaz 1 [source_file: i1]
                CALL 1 [free_call: 1] [source_file: i1]
                    NAME JSCompiler_stubMethod 1 [source_file: i1]
                    NUMBER 1.0 1 [source_file: i1]
    SCRIPT 1 [synthetic: 1] [source_file: i2] [input_id: InputId: i2]
        EXPR_RESULT 1 [source_file: i1]
            ASSIGN 1 [source_file: i1]
                GETPROP 1 [source_file: i1]
                    GETPROP 1 [source_file: i1]
                        NAME Foo 1 [source_file: i1]
                        STRING prototype 1 [source_file: i1]
                    STRING callBaz 1 [source_file: i1]
                CALL 1 [free_call: 1] [source_file: i1]
                    NAME JSCompiler_unstubMethod 1 [source_file: i1]
                    NUMBER 1.0 1 [source_file: i1]
                    FUNCTION  1 [source_file: i1]
                        NAME  1 [source_file: i1]
                        PARAM_LIST 1 [source_file: i1]
                        BLOCK 1 [source_file: i1]
                            EXPR_RESULT 1 [source_file: i1]
                                CALL 1 [source_file: i1]
                                    GETPROP 1 [source_file: i1]
                                        THIS 1 [source_file: i1]
                                        STRING baz 1 [source_file: i1]
        EXPR_RESULT 1 [source_file: i0]
            ASSIGN 1 [source_file: i0]
                GETPROP 1 [source_file: i0]
                    GETPROP 1 [source_file: i0]
                        NAME Foo 1 [source_file: i0]
                        STRING prototype 1 [source_file: i0]
                    STRING baz 1 [source_file: i0]
                CALL 1 [free_call: 1] [source_file: i0]
                    NAME JSCompiler_unstubMethod 1 [source_file: i0]
                    NUMBER 0.0 1 [source_file: i0]
                    FUNCTION  1 [source_file: i0]
                        NAME  1 [source_file: i0]
                        PARAM_LIST 1 [source_file: i0]
                        BLOCK 1 [source_file: i0]
        EXPR_RESULT 1 [source_file: i2]
            CALL 1 [source_file: i2]
                GETPROP 1 [source_file: i2]
                    NEW 1 [source_file: i2]
                        NAME Foo 1 [source_file: i2]
                    STRING callBaz 1 [source_file: i2]


Subtree1: NUMBER 1.0 1 [source_file: expected0]


Subtree2: NUMBER 0.0 1 [source_file: i0]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:928)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:736)
~ testClosureVariableReads3(com.google.javascript.jscomp.CrossModuleMethodMotionTest)
[
Expected: var JSCompiler_stubMap=[];function JSCompiler_stubMethod(JSCompiler_stubMethod_id){return function(){return JSCompiler_stubMap[JSCompiler_stubMethod_id].apply(this,arguments)}}function JSCompiler_unstubMethod(JSCompiler_unstubMethod_id,JSCompiler_unstubMethod_body){return JSCompiler_stubMap[JSCompiler_unstubMethod_id]=JSCompiler_unstubMethod_body}function Foo(){}Foo.prototype.b1=JSCompiler_stubMethod(0);Foo.prototype.b1=JSCompiler_unstubMethod(0,function(){Foo.prototype.b2=JSCompiler_stubMethod(1)});
var y=new Foo;y.b1();Foo.prototype.b2=JSCompiler_unstubMethod(1,function(){var x=1;Foo.prototype.b3=function(){x}});y=new Foo;z.b2();y=new Foo;z.b3()
Result: var JSCompiler_stubMap=[];function JSCompiler_stubMethod(JSCompiler_stubMethod_id){return function(){return JSCompiler_stubMap[JSCompiler_stubMethod_id].apply(this,arguments)}}function JSCompiler_unstubMethod(JSCompiler_unstubMethod_id,JSCompiler_unstubMethod_body){return JSCompiler_stubMap[JSCompiler_unstubMethod_id]=JSCompiler_unstubMethod_body}function Foo(){}Foo.prototype.b1=JSCompiler_stubMethod(1);Foo.prototype.b1=JSCompiler_unstubMethod(1,function(){Foo.prototype.b2=JSCompiler_stubMethod(0)});
var y=new Foo;y.b1();Foo.prototype.b2=JSCompiler_unstubMethod(0,function(){var x=1;Foo.prototype.b3=function(){x}});y=new Foo;z.b2();y=new Foo;z.b3()
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        VAR 1 [source_file: expected0]
            NAME JSCompiler_stubMap 1 [source_file: expected0]
                ARRAYLIT 1 [source_file: expected0]
        FUNCTION JSCompiler_stubMethod 1 [source_file: expected0]
            NAME JSCompiler_stubMethod 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
                NAME JSCompiler_stubMethod_id 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                RETURN 1 [source_file: expected0]
                    FUNCTION  1 [source_file: expected0]
                        NAME  1 [source_file: expected0]
                        PARAM_LIST 1 [source_file: expected0]
                        BLOCK 1 [source_file: expected0]
                            RETURN 1 [source_file: expected0]
                                CALL 1 [source_file: expected0]
                                    GETPROP 1 [source_file: expected0]
                                        GETELEM 1 [source_file: expected0]
                                            NAME JSCompiler_stubMap 1 [source_file: expected0]
                                            NAME JSCompiler_stubMethod_id 1 [source_file: expected0]
                                        STRING apply 1 [source_file: expected0]
                                    THIS 1 [source_file: expected0]
                                    NAME arguments 1 [source_file: expected0]
        FUNCTION JSCompiler_unstubMethod 1 [source_file: expected0]
            NAME JSCompiler_unstubMethod 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
                NAME JSCompiler_unstubMethod_id 1 [source_file: expected0]
                NAME JSCompiler_unstubMethod_body 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                RETURN 1 [source_file: expected0]
                    ASSIGN 1 [source_file: expected0]
                        GETELEM 1 [source_file: expected0]
                            NAME JSCompiler_stubMap 1 [source_file: expected0]
                            NAME JSCompiler_unstubMethod_id 1 [source_file: expected0]
                        NAME JSCompiler_unstubMethod_body 1 [source_file: expected0]
        FUNCTION Foo 1 [source_file: expected0]
            NAME Foo 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            ASSIGN 1 [source_file: expected0]
                GETPROP 1 [source_file: expected0]
                    GETPROP 1 [source_file: expected0]
                        NAME Foo 1 [source_file: expected0]
                        STRING prototype 1 [source_file: expected0]
                    STRING b1 1 [source_file: expected0]
                CALL 1 [free_call: 1] [source_file: expected0]
                    NAME JSCompiler_stubMethod 1 [source_file: expected0]
                    NUMBER 0.0 1 [source_file: expected0]
    SCRIPT 1 [synthetic: 1] [source_file: expected1] [input_id: InputId: expected1]
        EXPR_RESULT 1 [source_file: expected1]
            ASSIGN 1 [source_file: expected1]
                GETPROP 1 [source_file: expected1]
                    GETPROP 1 [source_file: expected1]
                        NAME Foo 1 [source_file: expected1]
                        STRING prototype 1 [source_file: expected1]
                    STRING b1 1 [source_file: expected1]
                CALL 1 [free_call: 1] [source_file: expected1]
                    NAME JSCompiler_unstubMethod 1 [source_file: expected1]
                    NUMBER 0.0 1 [source_file: expected1]
                    FUNCTION  1 [source_file: expected1]
                        NAME  1 [source_file: expected1]
                        PARAM_LIST 1 [source_file: expected1]
                        BLOCK 1 [source_file: expected1]
                            EXPR_RESULT 1 [source_file: expected1]
                                ASSIGN 1 [source_file: expected1]
                                    GETPROP 1 [source_file: expected1]
                                        GETPROP 1 [source_file: expected1]
                                            NAME Foo 1 [source_file: expected1]
                                            STRING prototype 1 [source_file: expected1]
                                        STRING b2 1 [source_file: expected1]
                                    CALL 1 [free_call: 1] [source_file: expected1]
                                        NAME JSCompiler_stubMethod 1 [source_file: expected1]
                                        NUMBER 1.0 1 [source_file: expected1]
        VAR 1 [source_file: expected1]
            NAME y 1 [source_file: expected1]
                NEW 1 [source_file: expected1]
                    NAME Foo 1 [source_file: expected1]
        EXPR_RESULT 1 [source_file: expected1]
            CALL 1 [source_file: expected1]
                GETPROP 1 [source_file: expected1]
                    NAME y 1 [source_file: expected1]
                    STRING b1 1 [source_file: expected1]
    SCRIPT 1 [synthetic: 1] [source_file: expected2] [input_id: InputId: expected2]
        EXPR_RESULT 1 [source_file: expected2]
            ASSIGN 1 [source_file: expected2]
                GETPROP 1 [source_file: expected2]
                    GETPROP 1 [source_file: expected2]
                        NAME Foo 1 [source_file: expected2]
                        STRING prototype 1 [source_file: expected2]
                    STRING b2 1 [source_file: expected2]
                CALL 1 [free_call: 1] [source_file: expected2]
                    NAME JSCompiler_unstubMethod 1 [source_file: expected2]
                    NUMBER 1.0 1 [source_file: expected2]
                    FUNCTION  1 [source_file: expected2]
                        NAME  1 [source_file: expected2]
                        PARAM_LIST 1 [source_file: expected2]
                        BLOCK 1 [source_file: expected2]
                            VAR 1 [source_file: expected2]
                                NAME x 1 [source_file: expected2]
                                    NUMBER 1.0 1 [source_file: expected2]
                            EXPR_RESULT 1 [source_file: expected2]
                                ASSIGN 1 [source_file: expected2]
                                    GETPROP 1 [source_file: expected2]
                                        GETPROP 1 [source_file: expected2]
                                            NAME Foo 1 [source_file: expected2]
                                            STRING prototype 1 [source_file: expected2]
                                        STRING b3 1 [source_file: expected2]
                                    FUNCTION  1 [source_file: expected2]
                                        NAME  1 [source_file: expected2]
                                        PARAM_LIST 1 [source_file: expected2]
                                        BLOCK 1 [source_file: expected2]
                                            EXPR_RESULT 1 [source_file: expected2]
                                                NAME x 1 [source_file: expected2]
        EXPR_RESULT 1 [source_file: expected2]
            ASSIGN 1 [source_file: expected2]
                NAME y 1 [source_file: expected2]
                NEW 1 [source_file: expected2]
                    NAME Foo 1 [source_file: expected2]
        EXPR_RESULT 1 [source_file: expected2]
            CALL 1 [source_file: expected2]
                GETPROP 1 [source_file: expected2]
                    NAME z 1 [source_file: expected2]
                    STRING b2 1 [source_file: expected2]
    SCRIPT 1 [synthetic: 1] [source_file: expected3] [input_id: InputId: expected3]
        EXPR_RESULT 1 [source_file: expected3]
            ASSIGN 1 [source_file: expected3]
                NAME y 1 [source_file: expected3]
                NEW 1 [source_file: expected3]
                    NAME Foo 1 [source_file: expected3]
        EXPR_RESULT 1 [source_file: expected3]
            CALL 1 [source_file: expected3]
                GETPROP 1 [source_file: expected3]
                    NAME z 1 [source_file: expected3]
                    STRING b3 1 [source_file: expected3]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: i0] [input_id: InputId: i0]
        VAR 1 [source_file:  [synthetic:1] ]
            NAME JSCompiler_stubMap 1 [source_file:  [synthetic:1] ]
                ARRAYLIT 1 [source_file:  [synthetic:1] ]
        FUNCTION JSCompiler_stubMethod 1 [source_file:  [synthetic:1] ]
            NAME JSCompiler_stubMethod 1 [source_file:  [synthetic:1] ]
            PARAM_LIST 1 [source_file:  [synthetic:1] ]
                NAME JSCompiler_stubMethod_id 1 [source_file:  [synthetic:1] ]
            BLOCK 1 [source_file:  [synthetic:1] ]
                RETURN 1 [source_file:  [synthetic:1] ]
                    FUNCTION  1 [source_file:  [synthetic:1] ]
                        NAME  1 [source_file:  [synthetic:1] ]
                        PARAM_LIST 1 [source_file:  [synthetic:1] ]
                        BLOCK 1 [source_file:  [synthetic:1] ]
                            RETURN 1 [source_file:  [synthetic:1] ]
                                CALL 1 [source_file:  [synthetic:1] ]
                                    GETPROP 1 [source_file:  [synthetic:1] ]
                                        GETELEM 1 [source_file:  [synthetic:1] ]
                                            NAME JSCompiler_stubMap 1 [source_file:  [synthetic:1] ]
                                            NAME JSCompiler_stubMethod_id 1 [source_file:  [synthetic:1] ]
                                        STRING apply 1 [source_file:  [synthetic:1] ]
                                    THIS 1 [source_file:  [synthetic:1] ]
                                    NAME arguments 1 [source_file:  [synthetic:1] ]
        FUNCTION JSCompiler_unstubMethod 1 [source_file:  [synthetic:1] ]
            NAME JSCompiler_unstubMethod 1 [source_file:  [synthetic:1] ]
            PARAM_LIST 1 [source_file:  [synthetic:1] ]
                NAME JSCompiler_unstubMethod_id 1 [source_file:  [synthetic:1] ]
                NAME JSCompiler_unstubMethod_body 1 [source_file:  [synthetic:1] ]
            BLOCK 1 [source_file:  [synthetic:1] ]
                RETURN 1 [source_file:  [synthetic:1] ]
                    ASSIGN 1 [source_file:  [synthetic:1] ]
                        GETELEM 1 [source_file:  [synthetic:1] ]
                            NAME JSCompiler_stubMap 1 [source_file:  [synthetic:1] ]
                            NAME JSCompiler_unstubMethod_id 1 [source_file:  [synthetic:1] ]
                        NAME JSCompiler_unstubMethod_body 1 [source_file:  [synthetic:1] ]
        FUNCTION Foo 1 [source_file: i0]
            NAME Foo 1 [source_file: i0]
            PARAM_LIST 1 [source_file: i0]
            BLOCK 1 [source_file: i0]
        EXPR_RESULT 1 [source_file: i0]
            ASSIGN 1 [source_file: i0]
                GETPROP 1 [source_file: i0]
                    GETPROP 1 [source_file: i0]
                        NAME Foo 1 [source_file: i0]
                        STRING prototype 1 [source_file: i0]
                    STRING b1 1 [source_file: i0]
                CALL 1 [free_call: 1] [source_file: i0]
                    NAME JSCompiler_stubMethod 1 [source_file: i0]
                    NUMBER 1.0 1 [source_file: i0]
    SCRIPT 1 [synthetic: 1] [source_file: i1] [input_id: InputId: i1]
        EXPR_RESULT 1 [source_file: i0]
            ASSIGN 1 [source_file: i0]
                GETPROP 1 [source_file: i0]
                    GETPROP 1 [source_file: i0]
                        NAME Foo 1 [source_file: i0]
                        STRING prototype 1 [source_file: i0]
                    STRING b1 1 [source_file: i0]
                CALL 1 [free_call: 1] [source_file: i0]
                    NAME JSCompiler_unstubMethod 1 [source_file: i0]
                    NUMBER 1.0 1 [source_file: i0]
                    FUNCTION  1 [source_file: i0]
                        NAME  1 [source_file: i0]
                        PARAM_LIST 1 [source_file: i0]
                        BLOCK 1 [source_file: i0]
                            EXPR_RESULT 1 [source_file: i0]
                                ASSIGN 1 [source_file: i0]
                                    GETPROP 1 [source_file: i0]
                                        GETPROP 1 [source_file: i0]
                                            NAME Foo 1 [source_file: i0]
                                            STRING prototype 1 [source_file: i0]
                                        STRING b2 1 [source_file: i0]
                                    CALL 1 [free_call: 1] [source_file: i0]
                                        NAME JSCompiler_stubMethod 1 [source_file: i0]
                                        NUMBER 0.0 1 [source_file: i0]
        VAR 1 [source_file: i1]
            NAME y 1 [source_file: i1]
                NEW 1 [source_file: i1]
                    NAME Foo 1 [source_file: i1]
        EXPR_RESULT 1 [source_file: i1]
            CALL 1 [source_file: i1]
                GETPROP 1 [source_file: i1]
                    NAME y 1 [source_file: i1]
                    STRING b1 1 [source_file: i1]
    SCRIPT 1 [synthetic: 1] [source_file: i2] [input_id: InputId: i2]
        EXPR_RESULT 1 [source_file: i0]
            ASSIGN 1 [source_file: i0]
                GETPROP 1 [source_file: i0]
                    GETPROP 1 [source_file: i0]
                        NAME Foo 1 [source_file: i0]
                        STRING prototype 1 [source_file: i0]
                    STRING b2 1 [source_file: i0]
                CALL 1 [free_call: 1] [source_file: i0]
                    NAME JSCompiler_unstubMethod 1 [source_file: i0]
                    NUMBER 0.0 1 [source_file: i0]
                    FUNCTION  1 [source_file: i0]
                        NAME  1 [source_file: i0]
                        PARAM_LIST 1 [source_file: i0]
                        BLOCK 1 [source_file: i0]
                            VAR 1 [source_file: i0]
                                NAME x 1 [source_file: i0]
                                    NUMBER 1.0 1 [source_file: i0]
                            EXPR_RESULT 1 [source_file: i0]
                                ASSIGN 1 [source_file: i0]
                                    GETPROP 1 [source_file: i0]
                                        GETPROP 1 [source_file: i0]
                                            NAME Foo 1 [source_file: i0]
                                            STRING prototype 1 [source_file: i0]
                                        STRING b3 1 [source_file: i0]
                                    FUNCTION  1 [source_file: i0]
                                        NAME  1 [source_file: i0]
                                        PARAM_LIST 1 [source_file: i0]
                                        BLOCK 1 [source_file: i0]
                                            EXPR_RESULT 1 [source_file: i0]
                                                NAME x 1 [source_file: i0]
        EXPR_RESULT 1 [source_file: i2]
            ASSIGN 1 [source_file: i2]
                NAME y 1 [source_file: i2]
                NEW 1 [source_file: i2]
                    NAME Foo 1 [source_file: i2]
        EXPR_RESULT 1 [source_file: i2]
            CALL 1 [source_file: i2]
                GETPROP 1 [source_file: i2]
                    NAME z 1 [source_file: i2]
                    STRING b2 1 [source_file: i2]
    SCRIPT 1 [synthetic: 1] [source_file: i3] [input_id: InputId: i3]
        EXPR_RESULT 1 [source_file: i3]
            ASSIGN 1 [source_file: i3]
                NAME y 1 [source_file: i3]
                NEW 1 [source_file: i3]
                    NAME Foo 1 [source_file: i3]
        EXPR_RESULT 1 [source_file: i3]
            CALL 1 [source_file: i3]
                GETPROP 1 [source_file: i3]
                    NAME z 1 [source_file: i3]
                    STRING b3 1 [source_file: i3]


Subtree1: NUMBER 0.0 1 [source_file: expected0]


Subtree2: NUMBER 1.0 1 [source_file: i0]
]
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_stubMap=[];function JSCompiler_stubMethod(JSCompiler_stubMethod_id){return function(){return JSCompiler_stubMap[JSCompiler_stubMethod_id].apply(this,arguments)}}function JSCompiler_unstubMethod(JSCompiler_unstubMethod_id,JSCompiler_unstubMethod_body){return JSCompiler_stubMap[JSCompiler_unstubMethod_id]=JSCompiler_unstubMethod_body}function Foo(){}Foo.prototype.b1=JSCompiler_stubMethod(0);Foo.prototype.b1=JSCompiler_unstubMethod(0,function(){Foo.prototype.b2=JSCompiler_stubMethod(1)});
var y=new Foo;y.b1();Foo.prototype.b2=JSCompiler_unstubMethod(1,function(){var x=1;Foo.prototype.b3=function(){x}});y=new Foo;z.b2();y=new Foo;z.b3()
Result: var JSCompiler_stubMap=[];function JSCompiler_stubMethod(JSCompiler_stubMethod_id){return function(){return JSCompiler_stubMap[JSCompiler_stubMethod_id].apply(this,arguments)}}function JSCompiler_unstubMethod(JSCompiler_unstubMethod_id,JSCompiler_unstubMethod_body){return JSCompiler_stubMap[JSCompiler_unstubMethod_id]=JSCompiler_unstubMethod_body}function Foo(){}Foo.prototype.b1=JSCompiler_stubMethod(1);Foo.prototype.b1=JSCompiler_unstubMethod(1,function(){Foo.prototype.b2=JSCompiler_stubMethod(0)});
var y=new Foo;y.b1();Foo.prototype.b2=JSCompiler_unstubMethod(0,function(){var x=1;Foo.prototype.b3=function(){x}});y=new Foo;z.b2();y=new Foo;z.b3()
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        VAR 1 [source_file: expected0]
            NAME JSCompiler_stubMap 1 [source_file: expected0]
                ARRAYLIT 1 [source_file: expected0]
        FUNCTION JSCompiler_stubMethod 1 [source_file: expected0]
            NAME JSCompiler_stubMethod 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
                NAME JSCompiler_stubMethod_id 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                RETURN 1 [source_file: expected0]
                    FUNCTION  1 [source_file: expected0]
                        NAME  1 [source_file: expected0]
                        PARAM_LIST 1 [source_file: expected0]
                        BLOCK 1 [source_file: expected0]
                            RETURN 1 [source_file: expected0]
                                CALL 1 [source_file: expected0]
                                    GETPROP 1 [source_file: expected0]
                                        GETELEM 1 [source_file: expected0]
                                            NAME JSCompiler_stubMap 1 [source_file: expected0]
                                            NAME JSCompiler_stubMethod_id 1 [source_file: expected0]
                                        STRING apply 1 [source_file: expected0]
                                    THIS 1 [source_file: expected0]
                                    NAME arguments 1 [source_file: expected0]
        FUNCTION JSCompiler_unstubMethod 1 [source_file: expected0]
            NAME JSCompiler_unstubMethod 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
                NAME JSCompiler_unstubMethod_id 1 [source_file: expected0]
                NAME JSCompiler_unstubMethod_body 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                RETURN 1 [source_file: expected0]
                    ASSIGN 1 [source_file: expected0]
                        GETELEM 1 [source_file: expected0]
                            NAME JSCompiler_stubMap 1 [source_file: expected0]
                            NAME JSCompiler_unstubMethod_id 1 [source_file: expected0]
                        NAME JSCompiler_unstubMethod_body 1 [source_file: expected0]
        FUNCTION Foo 1 [source_file: expected0]
            NAME Foo 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            ASSIGN 1 [source_file: expected0]
                GETPROP 1 [source_file: expected0]
                    GETPROP 1 [source_file: expected0]
                        NAME Foo 1 [source_file: expected0]
                        STRING prototype 1 [source_file: expected0]
                    STRING b1 1 [source_file: expected0]
                CALL 1 [free_call: 1] [source_file: expected0]
                    NAME JSCompiler_stubMethod 1 [source_file: expected0]
                    NUMBER 0.0 1 [source_file: expected0]
    SCRIPT 1 [synthetic: 1] [source_file: expected1] [input_id: InputId: expected1]
        EXPR_RESULT 1 [source_file: expected1]
            ASSIGN 1 [source_file: expected1]
                GETPROP 1 [source_file: expected1]
                    GETPROP 1 [source_file: expected1]
                        NAME Foo 1 [source_file: expected1]
                        STRING prototype 1 [source_file: expected1]
                    STRING b1 1 [source_file: expected1]
                CALL 1 [free_call: 1] [source_file: expected1]
                    NAME JSCompiler_unstubMethod 1 [source_file: expected1]
                    NUMBER 0.0 1 [source_file: expected1]
                    FUNCTION  1 [source_file: expected1]
                        NAME  1 [source_file: expected1]
                        PARAM_LIST 1 [source_file: expected1]
                        BLOCK 1 [source_file: expected1]
                            EXPR_RESULT 1 [source_file: expected1]
                                ASSIGN 1 [source_file: expected1]
                                    GETPROP 1 [source_file: expected1]
                                        GETPROP 1 [source_file: expected1]
                                            NAME Foo 1 [source_file: expected1]
                                            STRING prototype 1 [source_file: expected1]
                                        STRING b2 1 [source_file: expected1]
                                    CALL 1 [free_call: 1] [source_file: expected1]
                                        NAME JSCompiler_stubMethod 1 [source_file: expected1]
                                        NUMBER 1.0 1 [source_file: expected1]
        VAR 1 [source_file: expected1]
            NAME y 1 [source_file: expected1]
                NEW 1 [source_file: expected1]
                    NAME Foo 1 [source_file: expected1]
        EXPR_RESULT 1 [source_file: expected1]
            CALL 1 [source_file: expected1]
                GETPROP 1 [source_file: expected1]
                    NAME y 1 [source_file: expected1]
                    STRING b1 1 [source_file: expected1]
    SCRIPT 1 [synthetic: 1] [source_file: expected2] [input_id: InputId: expected2]
        EXPR_RESULT 1 [source_file: expected2]
            ASSIGN 1 [source_file: expected2]
                GETPROP 1 [source_file: expected2]
                    GETPROP 1 [source_file: expected2]
                        NAME Foo 1 [source_file: expected2]
                        STRING prototype 1 [source_file: expected2]
                    STRING b2 1 [source_file: expected2]
                CALL 1 [free_call: 1] [source_file: expected2]
                    NAME JSCompiler_unstubMethod 1 [source_file: expected2]
                    NUMBER 1.0 1 [source_file: expected2]
                    FUNCTION  1 [source_file: expected2]
                        NAME  1 [source_file: expected2]
                        PARAM_LIST 1 [source_file: expected2]
                        BLOCK 1 [source_file: expected2]
                            VAR 1 [source_file: expected2]
                                NAME x 1 [source_file: expected2]
                                    NUMBER 1.0 1 [source_file: expected2]
                            EXPR_RESULT 1 [source_file: expected2]
                                ASSIGN 1 [source_file: expected2]
                                    GETPROP 1 [source_file: expected2]
                                        GETPROP 1 [source_file: expected2]
                                            NAME Foo 1 [source_file: expected2]
                                            STRING prototype 1 [source_file: expected2]
                                        STRING b3 1 [source_file: expected2]
                                    FUNCTION  1 [source_file: expected2]
                                        NAME  1 [source_file: expected2]
                                        PARAM_LIST 1 [source_file: expected2]
                                        BLOCK 1 [source_file: expected2]
                                            EXPR_RESULT 1 [source_file: expected2]
                                                NAME x 1 [source_file: expected2]
        EXPR_RESULT 1 [source_file: expected2]
            ASSIGN 1 [source_file: expected2]
                NAME y 1 [source_file: expected2]
                NEW 1 [source_file: expected2]
                    NAME Foo 1 [source_file: expected2]
        EXPR_RESULT 1 [source_file: expected2]
            CALL 1 [source_file: expected2]
                GETPROP 1 [source_file: expected2]
                    NAME z 1 [source_file: expected2]
                    STRING b2 1 [source_file: expected2]
    SCRIPT 1 [synthetic: 1] [source_file: expected3] [input_id: InputId: expected3]
        EXPR_RESULT 1 [source_file: expected3]
            ASSIGN 1 [source_file: expected3]
                NAME y 1 [source_file: expected3]
                NEW 1 [source_file: expected3]
                    NAME Foo 1 [source_file: expected3]
        EXPR_RESULT 1 [source_file: expected3]
            CALL 1 [source_file: expected3]
                GETPROP 1 [source_file: expected3]
                    NAME z 1 [source_file: expected3]
                    STRING b3 1 [source_file: expected3]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: i0] [input_id: InputId: i0]
        VAR 1 [source_file:  [synthetic:1] ]
            NAME JSCompiler_stubMap 1 [source_file:  [synthetic:1] ]
                ARRAYLIT 1 [source_file:  [synthetic:1] ]
        FUNCTION JSCompiler_stubMethod 1 [source_file:  [synthetic:1] ]
            NAME JSCompiler_stubMethod 1 [source_file:  [synthetic:1] ]
            PARAM_LIST 1 [source_file:  [synthetic:1] ]
                NAME JSCompiler_stubMethod_id 1 [source_file:  [synthetic:1] ]
            BLOCK 1 [source_file:  [synthetic:1] ]
                RETURN 1 [source_file:  [synthetic:1] ]
                    FUNCTION  1 [source_file:  [synthetic:1] ]
                        NAME  1 [source_file:  [synthetic:1] ]
                        PARAM_LIST 1 [source_file:  [synthetic:1] ]
                        BLOCK 1 [source_file:  [synthetic:1] ]
                            RETURN 1 [source_file:  [synthetic:1] ]
                                CALL 1 [source_file:  [synthetic:1] ]
                                    GETPROP 1 [source_file:  [synthetic:1] ]
                                        GETELEM 1 [source_file:  [synthetic:1] ]
                                            NAME JSCompiler_stubMap 1 [source_file:  [synthetic:1] ]
                                            NAME JSCompiler_stubMethod_id 1 [source_file:  [synthetic:1] ]
                                        STRING apply 1 [source_file:  [synthetic:1] ]
                                    THIS 1 [source_file:  [synthetic:1] ]
                                    NAME arguments 1 [source_file:  [synthetic:1] ]
        FUNCTION JSCompiler_unstubMethod 1 [source_file:  [synthetic:1] ]
            NAME JSCompiler_unstubMethod 1 [source_file:  [synthetic:1] ]
            PARAM_LIST 1 [source_file:  [synthetic:1] ]
                NAME JSCompiler_unstubMethod_id 1 [source_file:  [synthetic:1] ]
                NAME JSCompiler_unstubMethod_body 1 [source_file:  [synthetic:1] ]
            BLOCK 1 [source_file:  [synthetic:1] ]
                RETURN 1 [source_file:  [synthetic:1] ]
                    ASSIGN 1 [source_file:  [synthetic:1] ]
                        GETELEM 1 [source_file:  [synthetic:1] ]
                            NAME JSCompiler_stubMap 1 [source_file:  [synthetic:1] ]
                            NAME JSCompiler_unstubMethod_id 1 [source_file:  [synthetic:1] ]
                        NAME JSCompiler_unstubMethod_body 1 [source_file:  [synthetic:1] ]
        FUNCTION Foo 1 [source_file: i0]
            NAME Foo 1 [source_file: i0]
            PARAM_LIST 1 [source_file: i0]
            BLOCK 1 [source_file: i0]
        EXPR_RESULT 1 [source_file: i0]
            ASSIGN 1 [source_file: i0]
                GETPROP 1 [source_file: i0]
                    GETPROP 1 [source_file: i0]
                        NAME Foo 1 [source_file: i0]
                        STRING prototype 1 [source_file: i0]
                    STRING b1 1 [source_file: i0]
                CALL 1 [free_call: 1] [source_file: i0]
                    NAME JSCompiler_stubMethod 1 [source_file: i0]
                    NUMBER 1.0 1 [source_file: i0]
    SCRIPT 1 [synthetic: 1] [source_file: i1] [input_id: InputId: i1]
        EXPR_RESULT 1 [source_file: i0]
            ASSIGN 1 [source_file: i0]
                GETPROP 1 [source_file: i0]
                    GETPROP 1 [source_file: i0]
                        NAME Foo 1 [source_file: i0]
                        STRING prototype 1 [source_file: i0]
                    STRING b1 1 [source_file: i0]
                CALL 1 [free_call: 1] [source_file: i0]
                    NAME JSCompiler_unstubMethod 1 [source_file: i0]
                    NUMBER 1.0 1 [source_file: i0]
                    FUNCTION  1 [source_file: i0]
                        NAME  1 [source_file: i0]
                        PARAM_LIST 1 [source_file: i0]
                        BLOCK 1 [source_file: i0]
                            EXPR_RESULT 1 [source_file: i0]
                                ASSIGN 1 [source_file: i0]
                                    GETPROP 1 [source_file: i0]
                                        GETPROP 1 [source_file: i0]
                                            NAME Foo 1 [source_file: i0]
                                            STRING prototype 1 [source_file: i0]
                                        STRING b2 1 [source_file: i0]
                                    CALL 1 [free_call: 1] [source_file: i0]
                                        NAME JSCompiler_stubMethod 1 [source_file: i0]
                                        NUMBER 0.0 1 [source_file: i0]
        VAR 1 [source_file: i1]
            NAME y 1 [source_file: i1]
                NEW 1 [source_file: i1]
                    NAME Foo 1 [source_file: i1]
        EXPR_RESULT 1 [source_file: i1]
            CALL 1 [source_file: i1]
                GETPROP 1 [source_file: i1]
                    NAME y 1 [source_file: i1]
                    STRING b1 1 [source_file: i1]
    SCRIPT 1 [synthetic: 1] [source_file: i2] [input_id: InputId: i2]
        EXPR_RESULT 1 [source_file: i0]
            ASSIGN 1 [source_file: i0]
                GETPROP 1 [source_file: i0]
                    GETPROP 1 [source_file: i0]
                        NAME Foo 1 [source_file: i0]
                        STRING prototype 1 [source_file: i0]
                    STRING b2 1 [source_file: i0]
                CALL 1 [free_call: 1] [source_file: i0]
                    NAME JSCompiler_unstubMethod 1 [source_file: i0]
                    NUMBER 0.0 1 [source_file: i0]
                    FUNCTION  1 [source_file: i0]
                        NAME  1 [source_file: i0]
                        PARAM_LIST 1 [source_file: i0]
                        BLOCK 1 [source_file: i0]
                            VAR 1 [source_file: i0]
                                NAME x 1 [source_file: i0]
                                    NUMBER 1.0 1 [source_file: i0]
                            EXPR_RESULT 1 [source_file: i0]
                                ASSIGN 1 [source_file: i0]
                                    GETPROP 1 [source_file: i0]
                                        GETPROP 1 [source_file: i0]
                                            NAME Foo 1 [source_file: i0]
                                            STRING prototype 1 [source_file: i0]
                                        STRING b3 1 [source_file: i0]
                                    FUNCTION  1 [source_file: i0]
                                        NAME  1 [source_file: i0]
                                        PARAM_LIST 1 [source_file: i0]
                                        BLOCK 1 [source_file: i0]
                                            EXPR_RESULT 1 [source_file: i0]
                                                NAME x 1 [source_file: i0]
        EXPR_RESULT 1 [source_file: i2]
            ASSIGN 1 [source_file: i2]
                NAME y 1 [source_file: i2]
                NEW 1 [source_file: i2]
                    NAME Foo 1 [source_file: i2]
        EXPR_RESULT 1 [source_file: i2]
            CALL 1 [source_file: i2]
                GETPROP 1 [source_file: i2]
                    NAME z 1 [source_file: i2]
                    STRING b2 1 [source_file: i2]
    SCRIPT 1 [synthetic: 1] [source_file: i3] [input_id: InputId: i3]
        EXPR_RESULT 1 [source_file: i3]
            ASSIGN 1 [source_file: i3]
                NAME y 1 [source_file: i3]
                NEW 1 [source_file: i3]
                    NAME Foo 1 [source_file: i3]
        EXPR_RESULT 1 [source_file: i3]
            CALL 1 [source_file: i3]
                GETPROP 1 [source_file: i3]
                    NAME z 1 [source_file: i3]
                    STRING b3 1 [source_file: i3]


Subtree1: NUMBER 0.0 1 [source_file: expected0]


Subtree2: NUMBER 1.0 1 [source_file: i0]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:928)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:736)
~ testTwoMethods(com.google.javascript.jscomp.CrossModuleMethodMotionTest)
[
Expected: var JSCompiler_stubMap=[];function JSCompiler_stubMethod(JSCompiler_stubMethod_id){return function(){return JSCompiler_stubMap[JSCompiler_stubMethod_id].apply(this,arguments)}}function JSCompiler_unstubMethod(JSCompiler_unstubMethod_id,JSCompiler_unstubMethod_body){return JSCompiler_stubMap[JSCompiler_unstubMethod_id]=JSCompiler_unstubMethod_body}function Foo(){}Foo.prototype.baz=JSCompiler_stubMethod(1);Foo.prototype.callBaz=JSCompiler_stubMethod(0);Foo.prototype.baz=JSCompiler_unstubMethod(1,function(){});
Foo.prototype.callBaz=JSCompiler_unstubMethod(0,function(){this.baz()});(new Foo).callBaz()
Result: var JSCompiler_stubMap=[];function JSCompiler_stubMethod(JSCompiler_stubMethod_id){return function(){return JSCompiler_stubMap[JSCompiler_stubMethod_id].apply(this,arguments)}}function JSCompiler_unstubMethod(JSCompiler_unstubMethod_id,JSCompiler_unstubMethod_body){return JSCompiler_stubMap[JSCompiler_unstubMethod_id]=JSCompiler_unstubMethod_body}function Foo(){}Foo.prototype.baz=JSCompiler_stubMethod(0);Foo.prototype.callBaz=JSCompiler_stubMethod(1);
Foo.prototype.callBaz=JSCompiler_unstubMethod(1,function(){this.baz()});Foo.prototype.baz=JSCompiler_unstubMethod(0,function(){});(new Foo).callBaz()
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        VAR 1 [source_file: expected0]
            NAME JSCompiler_stubMap 1 [source_file: expected0]
                ARRAYLIT 1 [source_file: expected0]
        FUNCTION JSCompiler_stubMethod 1 [source_file: expected0]
            NAME JSCompiler_stubMethod 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
                NAME JSCompiler_stubMethod_id 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                RETURN 1 [source_file: expected0]
                    FUNCTION  1 [source_file: expected0]
                        NAME  1 [source_file: expected0]
                        PARAM_LIST 1 [source_file: expected0]
                        BLOCK 1 [source_file: expected0]
                            RETURN 1 [source_file: expected0]
                                CALL 1 [source_file: expected0]
                                    GETPROP 1 [source_file: expected0]
                                        GETELEM 1 [source_file: expected0]
                                            NAME JSCompiler_stubMap 1 [source_file: expected0]
                                            NAME JSCompiler_stubMethod_id 1 [source_file: expected0]
                                        STRING apply 1 [source_file: expected0]
                                    THIS 1 [source_file: expected0]
                                    NAME arguments 1 [source_file: expected0]
        FUNCTION JSCompiler_unstubMethod 1 [source_file: expected0]
            NAME JSCompiler_unstubMethod 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
                NAME JSCompiler_unstubMethod_id 1 [source_file: expected0]
                NAME JSCompiler_unstubMethod_body 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                RETURN 1 [source_file: expected0]
                    ASSIGN 1 [source_file: expected0]
                        GETELEM 1 [source_file: expected0]
                            NAME JSCompiler_stubMap 1 [source_file: expected0]
                            NAME JSCompiler_unstubMethod_id 1 [source_file: expected0]
                        NAME JSCompiler_unstubMethod_body 1 [source_file: expected0]
        FUNCTION Foo 1 [source_file: expected0]
            NAME Foo 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            ASSIGN 1 [source_file: expected0]
                GETPROP 1 [source_file: expected0]
                    GETPROP 1 [source_file: expected0]
                        NAME Foo 1 [source_file: expected0]
                        STRING prototype 1 [source_file: expected0]
                    STRING baz 1 [source_file: expected0]
                CALL 1 [free_call: 1] [source_file: expected0]
                    NAME JSCompiler_stubMethod 1 [source_file: expected0]
                    NUMBER 1.0 1 [source_file: expected0]
    SCRIPT 1 [synthetic: 1] [source_file: expected1] [input_id: InputId: expected1]
        EXPR_RESULT 1 [source_file: expected1]
            ASSIGN 1 [source_file: expected1]
                GETPROP 1 [source_file: expected1]
                    GETPROP 1 [source_file: expected1]
                        NAME Foo 1 [source_file: expected1]
                        STRING prototype 1 [source_file: expected1]
                    STRING callBaz 1 [source_file: expected1]
                CALL 1 [free_call: 1] [source_file: expected1]
                    NAME JSCompiler_stubMethod 1 [source_file: expected1]
                    NUMBER 0.0 1 [source_file: expected1]
    SCRIPT 1 [synthetic: 1] [source_file: expected2] [input_id: InputId: expected2]
        EXPR_RESULT 1 [source_file: expected2]
            ASSIGN 1 [source_file: expected2]
                GETPROP 1 [source_file: expected2]
                    GETPROP 1 [source_file: expected2]
                        NAME Foo 1 [source_file: expected2]
                        STRING prototype 1 [source_file: expected2]
                    STRING baz 1 [source_file: expected2]
                CALL 1 [free_call: 1] [source_file: expected2]
                    NAME JSCompiler_unstubMethod 1 [source_file: expected2]
                    NUMBER 1.0 1 [source_file: expected2]
                    FUNCTION  1 [source_file: expected2]
                        NAME  1 [source_file: expected2]
                        PARAM_LIST 1 [source_file: expected2]
                        BLOCK 1 [source_file: expected2]
        EXPR_RESULT 1 [source_file: expected2]
            ASSIGN 1 [source_file: expected2]
                GETPROP 1 [source_file: expected2]
                    GETPROP 1 [source_file: expected2]
                        NAME Foo 1 [source_file: expected2]
                        STRING prototype 1 [source_file: expected2]
                    STRING callBaz 1 [source_file: expected2]
                CALL 1 [free_call: 1] [source_file: expected2]
                    NAME JSCompiler_unstubMethod 1 [source_file: expected2]
                    NUMBER 0.0 1 [source_file: expected2]
                    FUNCTION  1 [source_file: expected2]
                        NAME  1 [source_file: expected2]
                        PARAM_LIST 1 [source_file: expected2]
                        BLOCK 1 [source_file: expected2]
                            EXPR_RESULT 1 [source_file: expected2]
                                CALL 1 [source_file: expected2]
                                    GETPROP 1 [source_file: expected2]
                                        THIS 1 [source_file: expected2]
                                        STRING baz 1 [source_file: expected2]
        EXPR_RESULT 1 [source_file: expected2]
            CALL 1 [source_file: expected2]
                GETPROP 1 [source_file: expected2]
                    NEW 1 [source_file: expected2]
                        NAME Foo 1 [source_file: expected2]
                    STRING callBaz 1 [source_file: expected2]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: i0] [input_id: InputId: i0]
        VAR 1 [source_file:  [synthetic:1] ]
            NAME JSCompiler_stubMap 1 [source_file:  [synthetic:1] ]
                ARRAYLIT 1 [source_file:  [synthetic:1] ]
        FUNCTION JSCompiler_stubMethod 1 [source_file:  [synthetic:1] ]
            NAME JSCompiler_stubMethod 1 [source_file:  [synthetic:1] ]
            PARAM_LIST 1 [source_file:  [synthetic:1] ]
                NAME JSCompiler_stubMethod_id 1 [source_file:  [synthetic:1] ]
            BLOCK 1 [source_file:  [synthetic:1] ]
                RETURN 1 [source_file:  [synthetic:1] ]
                    FUNCTION  1 [source_file:  [synthetic:1] ]
                        NAME  1 [source_file:  [synthetic:1] ]
                        PARAM_LIST 1 [source_file:  [synthetic:1] ]
                        BLOCK 1 [source_file:  [synthetic:1] ]
                            RETURN 1 [source_file:  [synthetic:1] ]
                                CALL 1 [source_file:  [synthetic:1] ]
                                    GETPROP 1 [source_file:  [synthetic:1] ]
                                        GETELEM 1 [source_file:  [synthetic:1] ]
                                            NAME JSCompiler_stubMap 1 [source_file:  [synthetic:1] ]
                                            NAME JSCompiler_stubMethod_id 1 [source_file:  [synthetic:1] ]
                                        STRING apply 1 [source_file:  [synthetic:1] ]
                                    THIS 1 [source_file:  [synthetic:1] ]
                                    NAME arguments 1 [source_file:  [synthetic:1] ]
        FUNCTION JSCompiler_unstubMethod 1 [source_file:  [synthetic:1] ]
            NAME JSCompiler_unstubMethod 1 [source_file:  [synthetic:1] ]
            PARAM_LIST 1 [source_file:  [synthetic:1] ]
                NAME JSCompiler_unstubMethod_id 1 [source_file:  [synthetic:1] ]
                NAME JSCompiler_unstubMethod_body 1 [source_file:  [synthetic:1] ]
            BLOCK 1 [source_file:  [synthetic:1] ]
                RETURN 1 [source_file:  [synthetic:1] ]
                    ASSIGN 1 [source_file:  [synthetic:1] ]
                        GETELEM 1 [source_file:  [synthetic:1] ]
                            NAME JSCompiler_stubMap 1 [source_file:  [synthetic:1] ]
                            NAME JSCompiler_unstubMethod_id 1 [source_file:  [synthetic:1] ]
                        NAME JSCompiler_unstubMethod_body 1 [source_file:  [synthetic:1] ]
        FUNCTION Foo 1 [source_file: i0]
            NAME Foo 1 [source_file: i0]
            PARAM_LIST 1 [source_file: i0]
            BLOCK 1 [source_file: i0]
        EXPR_RESULT 1 [source_file: i0]
            ASSIGN 1 [source_file: i0]
                GETPROP 1 [source_file: i0]
                    GETPROP 1 [source_file: i0]
                        NAME Foo 1 [source_file: i0]
                        STRING prototype 1 [source_file: i0]
                    STRING baz 1 [source_file: i0]
                CALL 1 [free_call: 1] [source_file: i0]
                    NAME JSCompiler_stubMethod 1 [source_file: i0]
                    NUMBER 0.0 1 [source_file: i0]
    SCRIPT 1 [synthetic: 1] [source_file: i1] [input_id: InputId: i1]
        EXPR_RESULT 1 [source_file: i1]
            ASSIGN 1 [source_file: i1]
                GETPROP 1 [source_file: i1]
                    GETPROP 1 [source_file: i1]
                        NAME Foo 1 [source_file: i1]
                        STRING prototype 1 [source_file: i1]
                    STRING callBaz 1 [source_file: i1]
                CALL 1 [free_call: 1] [source_file: i1]
                    NAME JSCompiler_stubMethod 1 [source_file: i1]
                    NUMBER 1.0 1 [source_file: i1]
    SCRIPT 1 [synthetic: 1] [source_file: i2] [input_id: InputId: i2]
        EXPR_RESULT 1 [source_file: i1]
            ASSIGN 1 [source_file: i1]
                GETPROP 1 [source_file: i1]
                    GETPROP 1 [source_file: i1]
                        NAME Foo 1 [source_file: i1]
                        STRING prototype 1 [source_file: i1]
                    STRING callBaz 1 [source_file: i1]
                CALL 1 [free_call: 1] [source_file: i1]
                    NAME JSCompiler_unstubMethod 1 [source_file: i1]
                    NUMBER 1.0 1 [source_file: i1]
                    FUNCTION  1 [source_file: i1]
                        NAME  1 [source_file: i1]
                        PARAM_LIST 1 [source_file: i1]
                        BLOCK 1 [source_file: i1]
                            EXPR_RESULT 1 [source_file: i1]
                                CALL 1 [source_file: i1]
                                    GETPROP 1 [source_file: i1]
                                        THIS 1 [source_file: i1]
                                        STRING baz 1 [source_file: i1]
        EXPR_RESULT 1 [source_file: i0]
            ASSIGN 1 [source_file: i0]
                GETPROP 1 [source_file: i0]
                    GETPROP 1 [source_file: i0]
                        NAME Foo 1 [source_file: i0]
                        STRING prototype 1 [source_file: i0]
                    STRING baz 1 [source_file: i0]
                CALL 1 [free_call: 1] [source_file: i0]
                    NAME JSCompiler_unstubMethod 1 [source_file: i0]
                    NUMBER 0.0 1 [source_file: i0]
                    FUNCTION  1 [source_file: i0]
                        NAME  1 [source_file: i0]
                        PARAM_LIST 1 [source_file: i0]
                        BLOCK 1 [source_file: i0]
        EXPR_RESULT 1 [source_file: i2]
            CALL 1 [source_file: i2]
                GETPROP 1 [source_file: i2]
                    NEW 1 [source_file: i2]
                        NAME Foo 1 [source_file: i2]
                    STRING callBaz 1 [source_file: i2]


Subtree1: NUMBER 1.0 1 [source_file: expected0]


Subtree2: NUMBER 0.0 1 [source_file: i0]
]
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_stubMap=[];function JSCompiler_stubMethod(JSCompiler_stubMethod_id){return function(){return JSCompiler_stubMap[JSCompiler_stubMethod_id].apply(this,arguments)}}function JSCompiler_unstubMethod(JSCompiler_unstubMethod_id,JSCompiler_unstubMethod_body){return JSCompiler_stubMap[JSCompiler_unstubMethod_id]=JSCompiler_unstubMethod_body}function Foo(){}Foo.prototype.baz=JSCompiler_stubMethod(1);Foo.prototype.callBaz=JSCompiler_stubMethod(0);Foo.prototype.baz=JSCompiler_unstubMethod(1,function(){});
Foo.prototype.callBaz=JSCompiler_unstubMethod(0,function(){this.baz()});(new Foo).callBaz()
Result: var JSCompiler_stubMap=[];function JSCompiler_stubMethod(JSCompiler_stubMethod_id){return function(){return JSCompiler_stubMap[JSCompiler_stubMethod_id].apply(this,arguments)}}function JSCompiler_unstubMethod(JSCompiler_unstubMethod_id,JSCompiler_unstubMethod_body){return JSCompiler_stubMap[JSCompiler_unstubMethod_id]=JSCompiler_unstubMethod_body}function Foo(){}Foo.prototype.baz=JSCompiler_stubMethod(0);Foo.prototype.callBaz=JSCompiler_stubMethod(1);
Foo.prototype.callBaz=JSCompiler_unstubMethod(1,function(){this.baz()});Foo.prototype.baz=JSCompiler_unstubMethod(0,function(){});(new Foo).callBaz()
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        VAR 1 [source_file: expected0]
            NAME JSCompiler_stubMap 1 [source_file: expected0]
                ARRAYLIT 1 [source_file: expected0]
        FUNCTION JSCompiler_stubMethod 1 [source_file: expected0]
            NAME JSCompiler_stubMethod 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
                NAME JSCompiler_stubMethod_id 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                RETURN 1 [source_file: expected0]
                    FUNCTION  1 [source_file: expected0]
                        NAME  1 [source_file: expected0]
                        PARAM_LIST 1 [source_file: expected0]
                        BLOCK 1 [source_file: expected0]
                            RETURN 1 [source_file: expected0]
                                CALL 1 [source_file: expected0]
                                    GETPROP 1 [source_file: expected0]
                                        GETELEM 1 [source_file: expected0]
                                            NAME JSCompiler_stubMap 1 [source_file: expected0]
                                            NAME JSCompiler_stubMethod_id 1 [source_file: expected0]
                                        STRING apply 1 [source_file: expected0]
                                    THIS 1 [source_file: expected0]
                                    NAME arguments 1 [source_file: expected0]
        FUNCTION JSCompiler_unstubMethod 1 [source_file: expected0]
            NAME JSCompiler_unstubMethod 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
                NAME JSCompiler_unstubMethod_id 1 [source_file: expected0]
                NAME JSCompiler_unstubMethod_body 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                RETURN 1 [source_file: expected0]
                    ASSIGN 1 [source_file: expected0]
                        GETELEM 1 [source_file: expected0]
                            NAME JSCompiler_stubMap 1 [source_file: expected0]
                            NAME JSCompiler_unstubMethod_id 1 [source_file: expected0]
                        NAME JSCompiler_unstubMethod_body 1 [source_file: expected0]
        FUNCTION Foo 1 [source_file: expected0]
            NAME Foo 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            ASSIGN 1 [source_file: expected0]
                GETPROP 1 [source_file: expected0]
                    GETPROP 1 [source_file: expected0]
                        NAME Foo 1 [source_file: expected0]
                        STRING prototype 1 [source_file: expected0]
                    STRING baz 1 [source_file: expected0]
                CALL 1 [free_call: 1] [source_file: expected0]
                    NAME JSCompiler_stubMethod 1 [source_file: expected0]
                    NUMBER 1.0 1 [source_file: expected0]
    SCRIPT 1 [synthetic: 1] [source_file: expected1] [input_id: InputId: expected1]
        EXPR_RESULT 1 [source_file: expected1]
            ASSIGN 1 [source_file: expected1]
                GETPROP 1 [source_file: expected1]
                    GETPROP 1 [source_file: expected1]
                        NAME Foo 1 [source_file: expected1]
                        STRING prototype 1 [source_file: expected1]
                    STRING callBaz 1 [source_file: expected1]
                CALL 1 [free_call: 1] [source_file: expected1]
                    NAME JSCompiler_stubMethod 1 [source_file: expected1]
                    NUMBER 0.0 1 [source_file: expected1]
    SCRIPT 1 [synthetic: 1] [source_file: expected2] [input_id: InputId: expected2]
        EXPR_RESULT 1 [source_file: expected2]
            ASSIGN 1 [source_file: expected2]
                GETPROP 1 [source_file: expected2]
                    GETPROP 1 [source_file: expected2]
                        NAME Foo 1 [source_file: expected2]
                        STRING prototype 1 [source_file: expected2]
                    STRING baz 1 [source_file: expected2]
                CALL 1 [free_call: 1] [source_file: expected2]
                    NAME JSCompiler_unstubMethod 1 [source_file: expected2]
                    NUMBER 1.0 1 [source_file: expected2]
                    FUNCTION  1 [source_file: expected2]
                        NAME  1 [source_file: expected2]
                        PARAM_LIST 1 [source_file: expected2]
                        BLOCK 1 [source_file: expected2]
        EXPR_RESULT 1 [source_file: expected2]
            ASSIGN 1 [source_file: expected2]
                GETPROP 1 [source_file: expected2]
                    GETPROP 1 [source_file: expected2]
                        NAME Foo 1 [source_file: expected2]
                        STRING prototype 1 [source_file: expected2]
                    STRING callBaz 1 [source_file: expected2]
                CALL 1 [free_call: 1] [source_file: expected2]
                    NAME JSCompiler_unstubMethod 1 [source_file: expected2]
                    NUMBER 0.0 1 [source_file: expected2]
                    FUNCTION  1 [source_file: expected2]
                        NAME  1 [source_file: expected2]
                        PARAM_LIST 1 [source_file: expected2]
                        BLOCK 1 [source_file: expected2]
                            EXPR_RESULT 1 [source_file: expected2]
                                CALL 1 [source_file: expected2]
                                    GETPROP 1 [source_file: expected2]
                                        THIS 1 [source_file: expected2]
                                        STRING baz 1 [source_file: expected2]
        EXPR_RESULT 1 [source_file: expected2]
            CALL 1 [source_file: expected2]
                GETPROP 1 [source_file: expected2]
                    NEW 1 [source_file: expected2]
                        NAME Foo 1 [source_file: expected2]
                    STRING callBaz 1 [source_file: expected2]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: i0] [input_id: InputId: i0]
        VAR 1 [source_file:  [synthetic:1] ]
            NAME JSCompiler_stubMap 1 [source_file:  [synthetic:1] ]
                ARRAYLIT 1 [source_file:  [synthetic:1] ]
        FUNCTION JSCompiler_stubMethod 1 [source_file:  [synthetic:1] ]
            NAME JSCompiler_stubMethod 1 [source_file:  [synthetic:1] ]
            PARAM_LIST 1 [source_file:  [synthetic:1] ]
                NAME JSCompiler_stubMethod_id 1 [source_file:  [synthetic:1] ]
            BLOCK 1 [source_file:  [synthetic:1] ]
                RETURN 1 [source_file:  [synthetic:1] ]
                    FUNCTION  1 [source_file:  [synthetic:1] ]
                        NAME  1 [source_file:  [synthetic:1] ]
                        PARAM_LIST 1 [source_file:  [synthetic:1] ]
                        BLOCK 1 [source_file:  [synthetic:1] ]
                            RETURN 1 [source_file:  [synthetic:1] ]
                                CALL 1 [source_file:  [synthetic:1] ]
                                    GETPROP 1 [source_file:  [synthetic:1] ]
                                        GETELEM 1 [source_file:  [synthetic:1] ]
                                            NAME JSCompiler_stubMap 1 [source_file:  [synthetic:1] ]
                                            NAME JSCompiler_stubMethod_id 1 [source_file:  [synthetic:1] ]
                                        STRING apply 1 [source_file:  [synthetic:1] ]
                                    THIS 1 [source_file:  [synthetic:1] ]
                                    NAME arguments 1 [source_file:  [synthetic:1] ]
        FUNCTION JSCompiler_unstubMethod 1 [source_file:  [synthetic:1] ]
            NAME JSCompiler_unstubMethod 1 [source_file:  [synthetic:1] ]
            PARAM_LIST 1 [source_file:  [synthetic:1] ]
                NAME JSCompiler_unstubMethod_id 1 [source_file:  [synthetic:1] ]
                NAME JSCompiler_unstubMethod_body 1 [source_file:  [synthetic:1] ]
            BLOCK 1 [source_file:  [synthetic:1] ]
                RETURN 1 [source_file:  [synthetic:1] ]
                    ASSIGN 1 [source_file:  [synthetic:1] ]
                        GETELEM 1 [source_file:  [synthetic:1] ]
                            NAME JSCompiler_stubMap 1 [source_file:  [synthetic:1] ]
                            NAME JSCompiler_unstubMethod_id 1 [source_file:  [synthetic:1] ]
                        NAME JSCompiler_unstubMethod_body 1 [source_file:  [synthetic:1] ]
        FUNCTION Foo 1 [source_file: i0]
            NAME Foo 1 [source_file: i0]
            PARAM_LIST 1 [source_file: i0]
            BLOCK 1 [source_file: i0]
        EXPR_RESULT 1 [source_file: i0]
            ASSIGN 1 [source_file: i0]
                GETPROP 1 [source_file: i0]
                    GETPROP 1 [source_file: i0]
                        NAME Foo 1 [source_file: i0]
                        STRING prototype 1 [source_file: i0]
                    STRING baz 1 [source_file: i0]
                CALL 1 [free_call: 1] [source_file: i0]
                    NAME JSCompiler_stubMethod 1 [source_file: i0]
                    NUMBER 0.0 1 [source_file: i0]
    SCRIPT 1 [synthetic: 1] [source_file: i1] [input_id: InputId: i1]
        EXPR_RESULT 1 [source_file: i1]
            ASSIGN 1 [source_file: i1]
                GETPROP 1 [source_file: i1]
                    GETPROP 1 [source_file: i1]
                        NAME Foo 1 [source_file: i1]
                        STRING prototype 1 [source_file: i1]
                    STRING callBaz 1 [source_file: i1]
                CALL 1 [free_call: 1] [source_file: i1]
                    NAME JSCompiler_stubMethod 1 [source_file: i1]
                    NUMBER 1.0 1 [source_file: i1]
    SCRIPT 1 [synthetic: 1] [source_file: i2] [input_id: InputId: i2]
        EXPR_RESULT 1 [source_file: i1]
            ASSIGN 1 [source_file: i1]
                GETPROP 1 [source_file: i1]
                    GETPROP 1 [source_file: i1]
                        NAME Foo 1 [source_file: i1]
                        STRING prototype 1 [source_file: i1]
                    STRING callBaz 1 [source_file: i1]
                CALL 1 [free_call: 1] [source_file: i1]
                    NAME JSCompiler_unstubMethod 1 [source_file: i1]
                    NUMBER 1.0 1 [source_file: i1]
                    FUNCTION  1 [source_file: i1]
                        NAME  1 [source_file: i1]
                        PARAM_LIST 1 [source_file: i1]
                        BLOCK 1 [source_file: i1]
                            EXPR_RESULT 1 [source_file: i1]
                                CALL 1 [source_file: i1]
                                    GETPROP 1 [source_file: i1]
                                        THIS 1 [source_file: i1]
                                        STRING baz 1 [source_file: i1]
        EXPR_RESULT 1 [source_file: i0]
            ASSIGN 1 [source_file: i0]
                GETPROP 1 [source_file: i0]
                    GETPROP 1 [source_file: i0]
                        NAME Foo 1 [source_file: i0]
                        STRING prototype 1 [source_file: i0]
                    STRING baz 1 [source_file: i0]
                CALL 1 [free_call: 1] [source_file: i0]
                    NAME JSCompiler_unstubMethod 1 [source_file: i0]
                    NUMBER 0.0 1 [source_file: i0]
                    FUNCTION  1 [source_file: i0]
                        NAME  1 [source_file: i0]
                        PARAM_LIST 1 [source_file: i0]
                        BLOCK 1 [source_file: i0]
        EXPR_RESULT 1 [source_file: i2]
            CALL 1 [source_file: i2]
                GETPROP 1 [source_file: i2]
                    NEW 1 [source_file: i2]
                        NAME Foo 1 [source_file: i2]
                    STRING callBaz 1 [source_file: i2]


Subtree1: NUMBER 1.0 1 [source_file: expected0]


Subtree2: NUMBER 0.0 1 [source_file: i0]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:928)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:736)
~ testClosureVariableReads3(com.google.javascript.jscomp.CrossModuleMethodMotionTest)
[
Expected: var JSCompiler_stubMap=[];function JSCompiler_stubMethod(JSCompiler_stubMethod_id){return function(){return JSCompiler_stubMap[JSCompiler_stubMethod_id].apply(this,arguments)}}function JSCompiler_unstubMethod(JSCompiler_unstubMethod_id,JSCompiler_unstubMethod_body){return JSCompiler_stubMap[JSCompiler_unstubMethod_id]=JSCompiler_unstubMethod_body}function Foo(){}Foo.prototype.b1=JSCompiler_stubMethod(0);Foo.prototype.b1=JSCompiler_unstubMethod(0,function(){Foo.prototype.b2=JSCompiler_stubMethod(1)});
var y=new Foo;y.b1();Foo.prototype.b2=JSCompiler_unstubMethod(1,function(){var x=1;Foo.prototype.b3=function(){x}});y=new Foo;z.b2();y=new Foo;z.b3()
Result: var JSCompiler_stubMap=[];function JSCompiler_stubMethod(JSCompiler_stubMethod_id){return function(){return JSCompiler_stubMap[JSCompiler_stubMethod_id].apply(this,arguments)}}function JSCompiler_unstubMethod(JSCompiler_unstubMethod_id,JSCompiler_unstubMethod_body){return JSCompiler_stubMap[JSCompiler_unstubMethod_id]=JSCompiler_unstubMethod_body}function Foo(){}Foo.prototype.b1=JSCompiler_stubMethod(1);Foo.prototype.b1=JSCompiler_unstubMethod(1,function(){Foo.prototype.b2=JSCompiler_stubMethod(0)});
var y=new Foo;y.b1();Foo.prototype.b2=JSCompiler_unstubMethod(0,function(){var x=1;Foo.prototype.b3=function(){x}});y=new Foo;z.b2();y=new Foo;z.b3()
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        VAR 1 [source_file: expected0]
            NAME JSCompiler_stubMap 1 [source_file: expected0]
                ARRAYLIT 1 [source_file: expected0]
        FUNCTION JSCompiler_stubMethod 1 [source_file: expected0]
            NAME JSCompiler_stubMethod 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
                NAME JSCompiler_stubMethod_id 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                RETURN 1 [source_file: expected0]
                    FUNCTION  1 [source_file: expected0]
                        NAME  1 [source_file: expected0]
                        PARAM_LIST 1 [source_file: expected0]
                        BLOCK 1 [source_file: expected0]
                            RETURN 1 [source_file: expected0]
                                CALL 1 [source_file: expected0]
                                    GETPROP 1 [source_file: expected0]
                                        GETELEM 1 [source_file: expected0]
                                            NAME JSCompiler_stubMap 1 [source_file: expected0]
                                            NAME JSCompiler_stubMethod_id 1 [source_file: expected0]
                                        STRING apply 1 [source_file: expected0]
                                    THIS 1 [source_file: expected0]
                                    NAME arguments 1 [source_file: expected0]
        FUNCTION JSCompiler_unstubMethod 1 [source_file: expected0]
            NAME JSCompiler_unstubMethod 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
                NAME JSCompiler_unstubMethod_id 1 [source_file: expected0]
                NAME JSCompiler_unstubMethod_body 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                RETURN 1 [source_file: expected0]
                    ASSIGN 1 [source_file: expected0]
                        GETELEM 1 [source_file: expected0]
                            NAME JSCompiler_stubMap 1 [source_file: expected0]
                            NAME JSCompiler_unstubMethod_id 1 [source_file: expected0]
                        NAME JSCompiler_unstubMethod_body 1 [source_file: expected0]
        FUNCTION Foo 1 [source_file: expected0]
            NAME Foo 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            ASSIGN 1 [source_file: expected0]
                GETPROP 1 [source_file: expected0]
                    GETPROP 1 [source_file: expected0]
                        NAME Foo 1 [source_file: expected0]
                        STRING prototype 1 [source_file: expected0]
                    STRING b1 1 [source_file: expected0]
                CALL 1 [free_call: 1] [source_file: expected0]
                    NAME JSCompiler_stubMethod 1 [source_file: expected0]
                    NUMBER 0.0 1 [source_file: expected0]
    SCRIPT 1 [synthetic: 1] [source_file: expected1] [input_id: InputId: expected1]
        EXPR_RESULT 1 [source_file: expected1]
            ASSIGN 1 [source_file: expected1]
                GETPROP 1 [source_file: expected1]
                    GETPROP 1 [source_file: expected1]
                        NAME Foo 1 [source_file: expected1]
                        STRING prototype 1 [source_file: expected1]
                    STRING b1 1 [source_file: expected1]
                CALL 1 [free_call: 1] [source_file: expected1]
                    NAME JSCompiler_unstubMethod 1 [source_file: expected1]
                    NUMBER 0.0 1 [source_file: expected1]
                    FUNCTION  1 [source_file: expected1]
                        NAME  1 [source_file: expected1]
                        PARAM_LIST 1 [source_file: expected1]
                        BLOCK 1 [source_file: expected1]
                            EXPR_RESULT 1 [source_file: expected1]
                                ASSIGN 1 [source_file: expected1]
                                    GETPROP 1 [source_file: expected1]
                                        GETPROP 1 [source_file: expected1]
                                            NAME Foo 1 [source_file: expected1]
                                            STRING prototype 1 [source_file: expected1]
                                        STRING b2 1 [source_file: expected1]
                                    CALL 1 [free_call: 1] [source_file: expected1]
                                        NAME JSCompiler_stubMethod 1 [source_file: expected1]
                                        NUMBER 1.0 1 [source_file: expected1]
        VAR 1 [source_file: expected1]
            NAME y 1 [source_file: expected1]
                NEW 1 [source_file: expected1]
                    NAME Foo 1 [source_file: expected1]
        EXPR_RESULT 1 [source_file: expected1]
            CALL 1 [source_file: expected1]
                GETPROP 1 [source_file: expected1]
                    NAME y 1 [source_file: expected1]
                    STRING b1 1 [source_file: expected1]
    SCRIPT 1 [synthetic: 1] [source_file: expected2] [input_id: InputId: expected2]
        EXPR_RESULT 1 [source_file: expected2]
            ASSIGN 1 [source_file: expected2]
                GETPROP 1 [source_file: expected2]
                    GETPROP 1 [source_file: expected2]
                        NAME Foo 1 [source_file: expected2]
                        STRING prototype 1 [source_file: expected2]
                    STRING b2 1 [source_file: expected2]
                CALL 1 [free_call: 1] [source_file: expected2]
                    NAME JSCompiler_unstubMethod 1 [source_file: expected2]
                    NUMBER 1.0 1 [source_file: expected2]
                    FUNCTION  1 [source_file: expected2]
                        NAME  1 [source_file: expected2]
                        PARAM_LIST 1 [source_file: expected2]
                        BLOCK 1 [source_file: expected2]
                            VAR 1 [source_file: expected2]
                                NAME x 1 [source_file: expected2]
                                    NUMBER 1.0 1 [source_file: expected2]
                            EXPR_RESULT 1 [source_file: expected2]
                                ASSIGN 1 [source_file: expected2]
                                    GETPROP 1 [source_file: expected2]
                                        GETPROP 1 [source_file: expected2]
                                            NAME Foo 1 [source_file: expected2]
                                            STRING prototype 1 [source_file: expected2]
                                        STRING b3 1 [source_file: expected2]
                                    FUNCTION  1 [source_file: expected2]
                                        NAME  1 [source_file: expected2]
                                        PARAM_LIST 1 [source_file: expected2]
                                        BLOCK 1 [source_file: expected2]
                                            EXPR_RESULT 1 [source_file: expected2]
                                                NAME x 1 [source_file: expected2]
        EXPR_RESULT 1 [source_file: expected2]
            ASSIGN 1 [source_file: expected2]
                NAME y 1 [source_file: expected2]
                NEW 1 [source_file: expected2]
                    NAME Foo 1 [source_file: expected2]
        EXPR_RESULT 1 [source_file: expected2]
            CALL 1 [source_file: expected2]
                GETPROP 1 [source_file: expected2]
                    NAME z 1 [source_file: expected2]
                    STRING b2 1 [source_file: expected2]
    SCRIPT 1 [synthetic: 1] [source_file: expected3] [input_id: InputId: expected3]
        EXPR_RESULT 1 [source_file: expected3]
            ASSIGN 1 [source_file: expected3]
                NAME y 1 [source_file: expected3]
                NEW 1 [source_file: expected3]
                    NAME Foo 1 [source_file: expected3]
        EXPR_RESULT 1 [source_file: expected3]
            CALL 1 [source_file: expected3]
                GETPROP 1 [source_file: expected3]
                    NAME z 1 [source_file: expected3]
                    STRING b3 1 [source_file: expected3]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: i0] [input_id: InputId: i0]
        VAR 1 [source_file:  [synthetic:1] ]
            NAME JSCompiler_stubMap 1 [source_file:  [synthetic:1] ]
                ARRAYLIT 1 [source_file:  [synthetic:1] ]
        FUNCTION JSCompiler_stubMethod 1 [source_file:  [synthetic:1] ]
            NAME JSCompiler_stubMethod 1 [source_file:  [synthetic:1] ]
            PARAM_LIST 1 [source_file:  [synthetic:1] ]
                NAME JSCompiler_stubMethod_id 1 [source_file:  [synthetic:1] ]
            BLOCK 1 [source_file:  [synthetic:1] ]
                RETURN 1 [source_file:  [synthetic:1] ]
                    FUNCTION  1 [source_file:  [synthetic:1] ]
                        NAME  1 [source_file:  [synthetic:1] ]
                        PARAM_LIST 1 [source_file:  [synthetic:1] ]
                        BLOCK 1 [source_file:  [synthetic:1] ]
                            RETURN 1 [source_file:  [synthetic:1] ]
                                CALL 1 [source_file:  [synthetic:1] ]
                                    GETPROP 1 [source_file:  [synthetic:1] ]
                                        GETELEM 1 [source_file:  [synthetic:1] ]
                                            NAME JSCompiler_stubMap 1 [source_file:  [synthetic:1] ]
                                            NAME JSCompiler_stubMethod_id 1 [source_file:  [synthetic:1] ]
                                        STRING apply 1 [source_file:  [synthetic:1] ]
                                    THIS 1 [source_file:  [synthetic:1] ]
                                    NAME arguments 1 [source_file:  [synthetic:1] ]
        FUNCTION JSCompiler_unstubMethod 1 [source_file:  [synthetic:1] ]
            NAME JSCompiler_unstubMethod 1 [source_file:  [synthetic:1] ]
            PARAM_LIST 1 [source_file:  [synthetic:1] ]
                NAME JSCompiler_unstubMethod_id 1 [source_file:  [synthetic:1] ]
                NAME JSCompiler_unstubMethod_body 1 [source_file:  [synthetic:1] ]
            BLOCK 1 [source_file:  [synthetic:1] ]
                RETURN 1 [source_file:  [synthetic:1] ]
                    ASSIGN 1 [source_file:  [synthetic:1] ]
                        GETELEM 1 [source_file:  [synthetic:1] ]
                            NAME JSCompiler_stubMap 1 [source_file:  [synthetic:1] ]
                            NAME JSCompiler_unstubMethod_id 1 [source_file:  [synthetic:1] ]
                        NAME JSCompiler_unstubMethod_body 1 [source_file:  [synthetic:1] ]
        FUNCTION Foo 1 [source_file: i0]
            NAME Foo 1 [source_file: i0]
            PARAM_LIST 1 [source_file: i0]
            BLOCK 1 [source_file: i0]
        EXPR_RESULT 1 [source_file: i0]
            ASSIGN 1 [source_file: i0]
                GETPROP 1 [source_file: i0]
                    GETPROP 1 [source_file: i0]
                        NAME Foo 1 [source_file: i0]
                        STRING prototype 1 [source_file: i0]
                    STRING b1 1 [source_file: i0]
                CALL 1 [free_call: 1] [source_file: i0]
                    NAME JSCompiler_stubMethod 1 [source_file: i0]
                    NUMBER 1.0 1 [source_file: i0]
    SCRIPT 1 [synthetic: 1] [source_file: i1] [input_id: InputId: i1]
        EXPR_RESULT 1 [source_file: i0]
            ASSIGN 1 [source_file: i0]
                GETPROP 1 [source_file: i0]
                    GETPROP 1 [source_file: i0]
                        NAME Foo 1 [source_file: i0]
                        STRING prototype 1 [source_file: i0]
                    STRING b1 1 [source_file: i0]
                CALL 1 [free_call: 1] [source_file: i0]
                    NAME JSCompiler_unstubMethod 1 [source_file: i0]
                    NUMBER 1.0 1 [source_file: i0]
                    FUNCTION  1 [source_file: i0]
                        NAME  1 [source_file: i0]
                        PARAM_LIST 1 [source_file: i0]
                        BLOCK 1 [source_file: i0]
                            EXPR_RESULT 1 [source_file: i0]
                                ASSIGN 1 [source_file: i0]
                                    GETPROP 1 [source_file: i0]
                                        GETPROP 1 [source_file: i0]
                                            NAME Foo 1 [source_file: i0]
                                            STRING prototype 1 [source_file: i0]
                                        STRING b2 1 [source_file: i0]
                                    CALL 1 [free_call: 1] [source_file: i0]
                                        NAME JSCompiler_stubMethod 1 [source_file: i0]
                                        NUMBER 0.0 1 [source_file: i0]
        VAR 1 [source_file: i1]
            NAME y 1 [source_file: i1]
                NEW 1 [source_file: i1]
                    NAME Foo 1 [source_file: i1]
        EXPR_RESULT 1 [source_file: i1]
            CALL 1 [source_file: i1]
                GETPROP 1 [source_file: i1]
                    NAME y 1 [source_file: i1]
                    STRING b1 1 [source_file: i1]
    SCRIPT 1 [synthetic: 1] [source_file: i2] [input_id: InputId: i2]
        EXPR_RESULT 1 [source_file: i0]
            ASSIGN 1 [source_file: i0]
                GETPROP 1 [source_file: i0]
                    GETPROP 1 [source_file: i0]
                        NAME Foo 1 [source_file: i0]
                        STRING prototype 1 [source_file: i0]
                    STRING b2 1 [source_file: i0]
                CALL 1 [free_call: 1] [source_file: i0]
                    NAME JSCompiler_unstubMethod 1 [source_file: i0]
                    NUMBER 0.0 1 [source_file: i0]
                    FUNCTION  1 [source_file: i0]
                        NAME  1 [source_file: i0]
                        PARAM_LIST 1 [source_file: i0]
                        BLOCK 1 [source_file: i0]
                            VAR 1 [source_file: i0]
                                NAME x 1 [source_file: i0]
                                    NUMBER 1.0 1 [source_file: i0]
                            EXPR_RESULT 1 [source_file: i0]
                                ASSIGN 1 [source_file: i0]
                                    GETPROP 1 [source_file: i0]
                                        GETPROP 1 [source_file: i0]
                                            NAME Foo 1 [source_file: i0]
                                            STRING prototype 1 [source_file: i0]
                                        STRING b3 1 [source_file: i0]
                                    FUNCTION  1 [source_file: i0]
                                        NAME  1 [source_file: i0]
                                        PARAM_LIST 1 [source_file: i0]
                                        BLOCK 1 [source_file: i0]
                                            EXPR_RESULT 1 [source_file: i0]
                                                NAME x 1 [source_file: i0]
        EXPR_RESULT 1 [source_file: i2]
            ASSIGN 1 [source_file: i2]
                NAME y 1 [source_file: i2]
                NEW 1 [source_file: i2]
                    NAME Foo 1 [source_file: i2]
        EXPR_RESULT 1 [source_file: i2]
            CALL 1 [source_file: i2]
                GETPROP 1 [source_file: i2]
                    NAME z 1 [source_file: i2]
                    STRING b2 1 [source_file: i2]
    SCRIPT 1 [synthetic: 1] [source_file: i3] [input_id: InputId: i3]
        EXPR_RESULT 1 [source_file: i3]
            ASSIGN 1 [source_file: i3]
                NAME y 1 [source_file: i3]
                NEW 1 [source_file: i3]
                    NAME Foo 1 [source_file: i3]
        EXPR_RESULT 1 [source_file: i3]
            CALL 1 [source_file: i3]
                GETPROP 1 [source_file: i3]
                    NAME z 1 [source_file: i3]
                    STRING b3 1 [source_file: i3]


Subtree1: NUMBER 0.0 1 [source_file: expected0]


Subtree2: NUMBER 1.0 1 [source_file: i0]
]
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_stubMap=[];function JSCompiler_stubMethod(JSCompiler_stubMethod_id){return function(){return JSCompiler_stubMap[JSCompiler_stubMethod_id].apply(this,arguments)}}function JSCompiler_unstubMethod(JSCompiler_unstubMethod_id,JSCompiler_unstubMethod_body){return JSCompiler_stubMap[JSCompiler_unstubMethod_id]=JSCompiler_unstubMethod_body}function Foo(){}Foo.prototype.b1=JSCompiler_stubMethod(0);Foo.prototype.b1=JSCompiler_unstubMethod(0,function(){Foo.prototype.b2=JSCompiler_stubMethod(1)});
var y=new Foo;y.b1();Foo.prototype.b2=JSCompiler_unstubMethod(1,function(){var x=1;Foo.prototype.b3=function(){x}});y=new Foo;z.b2();y=new Foo;z.b3()
Result: var JSCompiler_stubMap=[];function JSCompiler_stubMethod(JSCompiler_stubMethod_id){return function(){return JSCompiler_stubMap[JSCompiler_stubMethod_id].apply(this,arguments)}}function JSCompiler_unstubMethod(JSCompiler_unstubMethod_id,JSCompiler_unstubMethod_body){return JSCompiler_stubMap[JSCompiler_unstubMethod_id]=JSCompiler_unstubMethod_body}function Foo(){}Foo.prototype.b1=JSCompiler_stubMethod(1);Foo.prototype.b1=JSCompiler_unstubMethod(1,function(){Foo.prototype.b2=JSCompiler_stubMethod(0)});
var y=new Foo;y.b1();Foo.prototype.b2=JSCompiler_unstubMethod(0,function(){var x=1;Foo.prototype.b3=function(){x}});y=new Foo;z.b2();y=new Foo;z.b3()
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        VAR 1 [source_file: expected0]
            NAME JSCompiler_stubMap 1 [source_file: expected0]
                ARRAYLIT 1 [source_file: expected0]
        FUNCTION JSCompiler_stubMethod 1 [source_file: expected0]
            NAME JSCompiler_stubMethod 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
                NAME JSCompiler_stubMethod_id 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                RETURN 1 [source_file: expected0]
                    FUNCTION  1 [source_file: expected0]
                        NAME  1 [source_file: expected0]
                        PARAM_LIST 1 [source_file: expected0]
                        BLOCK 1 [source_file: expected0]
                            RETURN 1 [source_file: expected0]
                                CALL 1 [source_file: expected0]
                                    GETPROP 1 [source_file: expected0]
                                        GETELEM 1 [source_file: expected0]
                                            NAME JSCompiler_stubMap 1 [source_file: expected0]
                                            NAME JSCompiler_stubMethod_id 1 [source_file: expected0]
                                        STRING apply 1 [source_file: expected0]
                                    THIS 1 [source_file: expected0]
                                    NAME arguments 1 [source_file: expected0]
        FUNCTION JSCompiler_unstubMethod 1 [source_file: expected0]
            NAME JSCompiler_unstubMethod 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
                NAME JSCompiler_unstubMethod_id 1 [source_file: expected0]
                NAME JSCompiler_unstubMethod_body 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                RETURN 1 [source_file: expected0]
                    ASSIGN 1 [source_file: expected0]
                        GETELEM 1 [source_file: expected0]
                            NAME JSCompiler_stubMap 1 [source_file: expected0]
                            NAME JSCompiler_unstubMethod_id 1 [source_file: expected0]
                        NAME JSCompiler_unstubMethod_body 1 [source_file: expected0]
        FUNCTION Foo 1 [source_file: expected0]
            NAME Foo 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            ASSIGN 1 [source_file: expected0]
                GETPROP 1 [source_file: expected0]
                    GETPROP 1 [source_file: expected0]
                        NAME Foo 1 [source_file: expected0]
                        STRING prototype 1 [source_file: expected0]
                    STRING b1 1 [source_file: expected0]
                CALL 1 [free_call: 1] [source_file: expected0]
                    NAME JSCompiler_stubMethod 1 [source_file: expected0]
                    NUMBER 0.0 1 [source_file: expected0]
    SCRIPT 1 [synthetic: 1] [source_file: expected1] [input_id: InputId: expected1]
        EXPR_RESULT 1 [source_file: expected1]
            ASSIGN 1 [source_file: expected1]
                GETPROP 1 [source_file: expected1]
                    GETPROP 1 [source_file: expected1]
                        NAME Foo 1 [source_file: expected1]
                        STRING prototype 1 [source_file: expected1]
                    STRING b1 1 [source_file: expected1]
                CALL 1 [free_call: 1] [source_file: expected1]
                    NAME JSCompiler_unstubMethod 1 [source_file: expected1]
                    NUMBER 0.0 1 [source_file: expected1]
                    FUNCTION  1 [source_file: expected1]
                        NAME  1 [source_file: expected1]
                        PARAM_LIST 1 [source_file: expected1]
                        BLOCK 1 [source_file: expected1]
                            EXPR_RESULT 1 [source_file: expected1]
                                ASSIGN 1 [source_file: expected1]
                                    GETPROP 1 [source_file: expected1]
                                        GETPROP 1 [source_file: expected1]
                                            NAME Foo 1 [source_file: expected1]
                                            STRING prototype 1 [source_file: expected1]
                                        STRING b2 1 [source_file: expected1]
                                    CALL 1 [free_call: 1] [source_file: expected1]
                                        NAME JSCompiler_stubMethod 1 [source_file: expected1]
                                        NUMBER 1.0 1 [source_file: expected1]
        VAR 1 [source_file: expected1]
            NAME y 1 [source_file: expected1]
                NEW 1 [source_file: expected1]
                    NAME Foo 1 [source_file: expected1]
        EXPR_RESULT 1 [source_file: expected1]
            CALL 1 [source_file: expected1]
                GETPROP 1 [source_file: expected1]
                    NAME y 1 [source_file: expected1]
                    STRING b1 1 [source_file: expected1]
    SCRIPT 1 [synthetic: 1] [source_file: expected2] [input_id: InputId: expected2]
        EXPR_RESULT 1 [source_file: expected2]
            ASSIGN 1 [source_file: expected2]
                GETPROP 1 [source_file: expected2]
                    GETPROP 1 [source_file: expected2]
                        NAME Foo 1 [source_file: expected2]
                        STRING prototype 1 [source_file: expected2]
                    STRING b2 1 [source_file: expected2]
                CALL 1 [free_call: 1] [source_file: expected2]
                    NAME JSCompiler_unstubMethod 1 [source_file: expected2]
                    NUMBER 1.0 1 [source_file: expected2]
                    FUNCTION  1 [source_file: expected2]
                        NAME  1 [source_file: expected2]
                        PARAM_LIST 1 [source_file: expected2]
                        BLOCK 1 [source_file: expected2]
                            VAR 1 [source_file: expected2]
                                NAME x 1 [source_file: expected2]
                                    NUMBER 1.0 1 [source_file: expected2]
                            EXPR_RESULT 1 [source_file: expected2]
                                ASSIGN 1 [source_file: expected2]
                                    GETPROP 1 [source_file: expected2]
                                        GETPROP 1 [source_file: expected2]
                                            NAME Foo 1 [source_file: expected2]
                                            STRING prototype 1 [source_file: expected2]
                                        STRING b3 1 [source_file: expected2]
                                    FUNCTION  1 [source_file: expected2]
                                        NAME  1 [source_file: expected2]
                                        PARAM_LIST 1 [source_file: expected2]
                                        BLOCK 1 [source_file: expected2]
                                            EXPR_RESULT 1 [source_file: expected2]
                                                NAME x 1 [source_file: expected2]
        EXPR_RESULT 1 [source_file: expected2]
            ASSIGN 1 [source_file: expected2]
                NAME y 1 [source_file: expected2]
                NEW 1 [source_file: expected2]
                    NAME Foo 1 [source_file: expected2]
        EXPR_RESULT 1 [source_file: expected2]
            CALL 1 [source_file: expected2]
                GETPROP 1 [source_file: expected2]
                    NAME z 1 [source_file: expected2]
                    STRING b2 1 [source_file: expected2]
    SCRIPT 1 [synthetic: 1] [source_file: expected3] [input_id: InputId: expected3]
        EXPR_RESULT 1 [source_file: expected3]
            ASSIGN 1 [source_file: expected3]
                NAME y 1 [source_file: expected3]
                NEW 1 [source_file: expected3]
                    NAME Foo 1 [source_file: expected3]
        EXPR_RESULT 1 [source_file: expected3]
            CALL 1 [source_file: expected3]
                GETPROP 1 [source_file: expected3]
                    NAME z 1 [source_file: expected3]
                    STRING b3 1 [source_file: expected3]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: i0] [input_id: InputId: i0]
        VAR 1 [source_file:  [synthetic:1] ]
            NAME JSCompiler_stubMap 1 [source_file:  [synthetic:1] ]
                ARRAYLIT 1 [source_file:  [synthetic:1] ]
        FUNCTION JSCompiler_stubMethod 1 [source_file:  [synthetic:1] ]
            NAME JSCompiler_stubMethod 1 [source_file:  [synthetic:1] ]
            PARAM_LIST 1 [source_file:  [synthetic:1] ]
                NAME JSCompiler_stubMethod_id 1 [source_file:  [synthetic:1] ]
            BLOCK 1 [source_file:  [synthetic:1] ]
                RETURN 1 [source_file:  [synthetic:1] ]
                    FUNCTION  1 [source_file:  [synthetic:1] ]
                        NAME  1 [source_file:  [synthetic:1] ]
                        PARAM_LIST 1 [source_file:  [synthetic:1] ]
                        BLOCK 1 [source_file:  [synthetic:1] ]
                            RETURN 1 [source_file:  [synthetic:1] ]
                                CALL 1 [source_file:  [synthetic:1] ]
                                    GETPROP 1 [source_file:  [synthetic:1] ]
                                        GETELEM 1 [source_file:  [synthetic:1] ]
                                            NAME JSCompiler_stubMap 1 [source_file:  [synthetic:1] ]
                                            NAME JSCompiler_stubMethod_id 1 [source_file:  [synthetic:1] ]
                                        STRING apply 1 [source_file:  [synthetic:1] ]
                                    THIS 1 [source_file:  [synthetic:1] ]
                                    NAME arguments 1 [source_file:  [synthetic:1] ]
        FUNCTION JSCompiler_unstubMethod 1 [source_file:  [synthetic:1] ]
            NAME JSCompiler_unstubMethod 1 [source_file:  [synthetic:1] ]
            PARAM_LIST 1 [source_file:  [synthetic:1] ]
                NAME JSCompiler_unstubMethod_id 1 [source_file:  [synthetic:1] ]
                NAME JSCompiler_unstubMethod_body 1 [source_file:  [synthetic:1] ]
            BLOCK 1 [source_file:  [synthetic:1] ]
                RETURN 1 [source_file:  [synthetic:1] ]
                    ASSIGN 1 [source_file:  [synthetic:1] ]
                        GETELEM 1 [source_file:  [synthetic:1] ]
                            NAME JSCompiler_stubMap 1 [source_file:  [synthetic:1] ]
                            NAME JSCompiler_unstubMethod_id 1 [source_file:  [synthetic:1] ]
                        NAME JSCompiler_unstubMethod_body 1 [source_file:  [synthetic:1] ]
        FUNCTION Foo 1 [source_file: i0]
            NAME Foo 1 [source_file: i0]
            PARAM_LIST 1 [source_file: i0]
            BLOCK 1 [source_file: i0]
        EXPR_RESULT 1 [source_file: i0]
            ASSIGN 1 [source_file: i0]
                GETPROP 1 [source_file: i0]
                    GETPROP 1 [source_file: i0]
                        NAME Foo 1 [source_file: i0]
                        STRING prototype 1 [source_file: i0]
                    STRING b1 1 [source_file: i0]
                CALL 1 [free_call: 1] [source_file: i0]
                    NAME JSCompiler_stubMethod 1 [source_file: i0]
                    NUMBER 1.0 1 [source_file: i0]
    SCRIPT 1 [synthetic: 1] [source_file: i1] [input_id: InputId: i1]
        EXPR_RESULT 1 [source_file: i0]
            ASSIGN 1 [source_file: i0]
                GETPROP 1 [source_file: i0]
                    GETPROP 1 [source_file: i0]
                        NAME Foo 1 [source_file: i0]
                        STRING prototype 1 [source_file: i0]
                    STRING b1 1 [source_file: i0]
                CALL 1 [free_call: 1] [source_file: i0]
                    NAME JSCompiler_unstubMethod 1 [source_file: i0]
                    NUMBER 1.0 1 [source_file: i0]
                    FUNCTION  1 [source_file: i0]
                        NAME  1 [source_file: i0]
                        PARAM_LIST 1 [source_file: i0]
                        BLOCK 1 [source_file: i0]
                            EXPR_RESULT 1 [source_file: i0]
                                ASSIGN 1 [source_file: i0]
                                    GETPROP 1 [source_file: i0]
                                        GETPROP 1 [source_file: i0]
                                            NAME Foo 1 [source_file: i0]
                                            STRING prototype 1 [source_file: i0]
                                        STRING b2 1 [source_file: i0]
                                    CALL 1 [free_call: 1] [source_file: i0]
                                        NAME JSCompiler_stubMethod 1 [source_file: i0]
                                        NUMBER 0.0 1 [source_file: i0]
        VAR 1 [source_file: i1]
            NAME y 1 [source_file: i1]
                NEW 1 [source_file: i1]
                    NAME Foo 1 [source_file: i1]
        EXPR_RESULT 1 [source_file: i1]
            CALL 1 [source_file: i1]
                GETPROP 1 [source_file: i1]
                    NAME y 1 [source_file: i1]
                    STRING b1 1 [source_file: i1]
    SCRIPT 1 [synthetic: 1] [source_file: i2] [input_id: InputId: i2]
        EXPR_RESULT 1 [source_file: i0]
            ASSIGN 1 [source_file: i0]
                GETPROP 1 [source_file: i0]
                    GETPROP 1 [source_file: i0]
                        NAME Foo 1 [source_file: i0]
                        STRING prototype 1 [source_file: i0]
                    STRING b2 1 [source_file: i0]
                CALL 1 [free_call: 1] [source_file: i0]
                    NAME JSCompiler_unstubMethod 1 [source_file: i0]
                    NUMBER 0.0 1 [source_file: i0]
                    FUNCTION  1 [source_file: i0]
                        NAME  1 [source_file: i0]
                        PARAM_LIST 1 [source_file: i0]
                        BLOCK 1 [source_file: i0]
                            VAR 1 [source_file: i0]
                                NAME x 1 [source_file: i0]
                                    NUMBER 1.0 1 [source_file: i0]
                            EXPR_RESULT 1 [source_file: i0]
                                ASSIGN 1 [source_file: i0]
                                    GETPROP 1 [source_file: i0]
                                        GETPROP 1 [source_file: i0]
                                            NAME Foo 1 [source_file: i0]
                                            STRING prototype 1 [source_file: i0]
                                        STRING b3 1 [source_file: i0]
                                    FUNCTION  1 [source_file: i0]
                                        NAME  1 [source_file: i0]
                                        PARAM_LIST 1 [source_file: i0]
                                        BLOCK 1 [source_file: i0]
                                            EXPR_RESULT 1 [source_file: i0]
                                                NAME x 1 [source_file: i0]
        EXPR_RESULT 1 [source_file: i2]
            ASSIGN 1 [source_file: i2]
                NAME y 1 [source_file: i2]
                NEW 1 [source_file: i2]
                    NAME Foo 1 [source_file: i2]
        EXPR_RESULT 1 [source_file: i2]
            CALL 1 [source_file: i2]
                GETPROP 1 [source_file: i2]
                    NAME z 1 [source_file: i2]
                    STRING b2 1 [source_file: i2]
    SCRIPT 1 [synthetic: 1] [source_file: i3] [input_id: InputId: i3]
        EXPR_RESULT 1 [source_file: i3]
            ASSIGN 1 [source_file: i3]
                NAME y 1 [source_file: i3]
                NEW 1 [source_file: i3]
                    NAME Foo 1 [source_file: i3]
        EXPR_RESULT 1 [source_file: i3]
            CALL 1 [source_file: i3]
                GETPROP 1 [source_file: i3]
                    NAME z 1 [source_file: i3]
                    STRING b3 1 [source_file: i3]


Subtree1: NUMBER 0.0 1 [source_file: expected0]


Subtree2: NUMBER 1.0 1 [source_file: i0]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:928)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:736)
~ testIssue4177428_return(com.google.javascript.jscomp.UnreachableCodeEliminationTest)
[
Expected: f=function(){var action;a:{var proto=null;try{proto=new Proto}finally{action=proto;return}}}
Result: f=function(){var action;a:{var proto=null;try{proto=new Proto}finally{action=proto}}}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            ASSIGN 1 [source_file: expected0]
                NAME f 1 [source_file: expected0]
                FUNCTION  1 [source_file: expected0]
                    NAME  1 [source_file: expected0]
                    PARAM_LIST 1 [source_file: expected0]
                    BLOCK 1 [source_file: expected0]
                        VAR 2 [source_file: expected0]
                            NAME action 2 [source_file: expected0]
                        LABEL 3 [source_file: expected0]
                            LABEL_NAME a 3 [source_file: expected0]
                            BLOCK 3 [source_file: expected0]
                                VAR 4 [source_file: expected0]
                                    NAME proto 4 [source_file: expected0]
                                        NULL 4 [source_file: expected0]
                                TRY 5 [source_file: expected0]
                                    BLOCK 5 [source_file: expected0]
                                        EXPR_RESULT 6 [source_file: expected0]
                                            ASSIGN 6 [source_file: expected0]
                                                NAME proto 6 [source_file: expected0]
                                                NEW 6 [source_file: expected0]
                                                    NAME Proto 6 [source_file: expected0]
                                    BLOCK 7 [source_file: expected0]
                                    BLOCK 7 [source_file: expected0]
                                        EXPR_RESULT 8 [source_file: expected0]
                                            ASSIGN 8 [source_file: expected0]
                                                NAME action 8 [source_file: expected0]
                                                NAME proto 8 [source_file: expected0]
                                        RETURN 9 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        EXPR_RESULT 1 [source_file: testcode]
            ASSIGN 1 [source_file: testcode]
                NAME f 1 [source_file: testcode]
                FUNCTION  1 [source_file: testcode]
                    NAME  1 [source_file: testcode]
                    PARAM_LIST 1 [source_file: testcode]
                    BLOCK 1 [source_file: testcode]
                        VAR 2 [source_file: testcode]
                            NAME action 2 [source_file: testcode]
                        LABEL 3 [source_file: testcode]
                            LABEL_NAME a 3 [source_file: testcode]
                            BLOCK 3 [source_file: testcode]
                                VAR 4 [source_file: testcode]
                                    NAME proto 4 [source_file: testcode]
                                        NULL 4 [source_file: testcode]
                                TRY 5 [source_file: testcode]
                                    BLOCK 5 [source_file: testcode]
                                        EXPR_RESULT 6 [source_file: testcode]
                                            ASSIGN 6 [source_file: testcode]
                                                NAME proto 6 [source_file: testcode]
                                                NEW 6 [source_file: testcode]
                                                    NAME Proto 6 [source_file: testcode]
                                    BLOCK 7 [source_file: testcode]
                                    BLOCK 7 [source_file: testcode]
                                        EXPR_RESULT 8 [source_file: testcode]
                                            ASSIGN 8 [source_file: testcode]
                                                NAME action 8 [source_file: testcode]
                                                NAME proto 8 [source_file: testcode]


Subtree1: BLOCK 7 [source_file: expected0]
    EXPR_RESULT 8 [source_file: expected0]
        ASSIGN 8 [source_file: expected0]
            NAME action 8 [source_file: expected0]
            NAME proto 8 [source_file: expected0]
    RETURN 9 [source_file: expected0]


Subtree2: BLOCK 7 [source_file: testcode]
    EXPR_RESULT 8 [source_file: testcode]
        ASSIGN 8 [source_file: testcode]
            NAME action 8 [source_file: testcode]
            NAME proto 8 [source_file: testcode]
]
junit.framework.AssertionFailedError: 
Expected: f=function(){var action;a:{var proto=null;try{proto=new Proto}finally{action=proto;return}}}
Result: f=function(){var action;a:{var proto=null;try{proto=new Proto}finally{action=proto}}}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            ASSIGN 1 [source_file: expected0]
                NAME f 1 [source_file: expected0]
                FUNCTION  1 [source_file: expected0]
                    NAME  1 [source_file: expected0]
                    PARAM_LIST 1 [source_file: expected0]
                    BLOCK 1 [source_file: expected0]
                        VAR 2 [source_file: expected0]
                            NAME action 2 [source_file: expected0]
                        LABEL 3 [source_file: expected0]
                            LABEL_NAME a 3 [source_file: expected0]
                            BLOCK 3 [source_file: expected0]
                                VAR 4 [source_file: expected0]
                                    NAME proto 4 [source_file: expected0]
                                        NULL 4 [source_file: expected0]
                                TRY 5 [source_file: expected0]
                                    BLOCK 5 [source_file: expected0]
                                        EXPR_RESULT 6 [source_file: expected0]
                                            ASSIGN 6 [source_file: expected0]
                                                NAME proto 6 [source_file: expected0]
                                                NEW 6 [source_file: expected0]
                                                    NAME Proto 6 [source_file: expected0]
                                    BLOCK 7 [source_file: expected0]
                                    BLOCK 7 [source_file: expected0]
                                        EXPR_RESULT 8 [source_file: expected0]
                                            ASSIGN 8 [source_file: expected0]
                                                NAME action 8 [source_file: expected0]
                                                NAME proto 8 [source_file: expected0]
                                        RETURN 9 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        EXPR_RESULT 1 [source_file: testcode]
            ASSIGN 1 [source_file: testcode]
                NAME f 1 [source_file: testcode]
                FUNCTION  1 [source_file: testcode]
                    NAME  1 [source_file: testcode]
                    PARAM_LIST 1 [source_file: testcode]
                    BLOCK 1 [source_file: testcode]
                        VAR 2 [source_file: testcode]
                            NAME action 2 [source_file: testcode]
                        LABEL 3 [source_file: testcode]
                            LABEL_NAME a 3 [source_file: testcode]
                            BLOCK 3 [source_file: testcode]
                                VAR 4 [source_file: testcode]
                                    NAME proto 4 [source_file: testcode]
                                        NULL 4 [source_file: testcode]
                                TRY 5 [source_file: testcode]
                                    BLOCK 5 [source_file: testcode]
                                        EXPR_RESULT 6 [source_file: testcode]
                                            ASSIGN 6 [source_file: testcode]
                                                NAME proto 6 [source_file: testcode]
                                                NEW 6 [source_file: testcode]
                                                    NAME Proto 6 [source_file: testcode]
                                    BLOCK 7 [source_file: testcode]
                                    BLOCK 7 [source_file: testcode]
                                        EXPR_RESULT 8 [source_file: testcode]
                                            ASSIGN 8 [source_file: testcode]
                                                NAME action 8 [source_file: testcode]
                                                NAME proto 8 [source_file: testcode]


Subtree1: BLOCK 7 [source_file: expected0]
    EXPR_RESULT 8 [source_file: expected0]
        ASSIGN 8 [source_file: expected0]
            NAME action 8 [source_file: expected0]
            NAME proto 8 [source_file: expected0]
    RETURN 9 [source_file: expected0]


Subtree2: BLOCK 7 [source_file: testcode]
    EXPR_RESULT 8 [source_file: testcode]
        ASSIGN 8 [source_file: testcode]
            NAME action 8 [source_file: testcode]
            NAME proto 8 [source_file: testcode]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:928)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:460)
~ testDontRemoveBreakInTryFinally(com.google.javascript.jscomp.UnreachableCodeEliminationTest)
[
Expected: function f(){b:try{throw 9;}finally{break b}return 1}
Result: function f(){b:try{throw 9;}finally{}return 1}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION f 1 [source_file: expected0]
            NAME f 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                LABEL 1 [source_file: expected0]
                    LABEL_NAME b 1 [source_file: expected0]
                    TRY 1 [source_file: expected0]
                        BLOCK 1 [source_file: expected0]
                            THROW 1 [source_file: expected0]
                                NUMBER 9.0 1 [source_file: expected0]
                        BLOCK 1 [source_file: expected0]
                        BLOCK 1 [source_file: expected0]
                            BREAK 1 [source_file: expected0]
                                LABEL_NAME b 1 [source_file: expected0]
                RETURN 1 [source_file: expected0]
                    NUMBER 1.0 1 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION f 1 [source_file: testcode]
            NAME f 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                LABEL 1 [source_file: testcode]
                    LABEL_NAME b 1 [source_file: testcode]
                    TRY 1 [source_file: testcode]
                        BLOCK 1 [source_file: testcode]
                            THROW 1 [source_file: testcode]
                                NUMBER 9.0 1 [source_file: testcode]
                        BLOCK 1 [source_file: testcode]
                        BLOCK 1 [source_file: testcode]
                RETURN 1 [source_file: testcode]
                    NUMBER 1.0 1 [source_file: testcode]


Subtree1: BLOCK 1 [source_file: expected0]
    BREAK 1 [source_file: expected0]
        LABEL_NAME b 1 [source_file: expected0]


Subtree2: BLOCK 1 [source_file: testcode]
]
junit.framework.AssertionFailedError: 
Expected: function f(){b:try{throw 9;}finally{break b}return 1}
Result: function f(){b:try{throw 9;}finally{}return 1}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION f 1 [source_file: expected0]
            NAME f 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                LABEL 1 [source_file: expected0]
                    LABEL_NAME b 1 [source_file: expected0]
                    TRY 1 [source_file: expected0]
                        BLOCK 1 [source_file: expected0]
                            THROW 1 [source_file: expected0]
                                NUMBER 9.0 1 [source_file: expected0]
                        BLOCK 1 [source_file: expected0]
                        BLOCK 1 [source_file: expected0]
                            BREAK 1 [source_file: expected0]
                                LABEL_NAME b 1 [source_file: expected0]
                RETURN 1 [source_file: expected0]
                    NUMBER 1.0 1 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION f 1 [source_file: testcode]
            NAME f 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                LABEL 1 [source_file: testcode]
                    LABEL_NAME b 1 [source_file: testcode]
                    TRY 1 [source_file: testcode]
                        BLOCK 1 [source_file: testcode]
                            THROW 1 [source_file: testcode]
                                NUMBER 9.0 1 [source_file: testcode]
                        BLOCK 1 [source_file: testcode]
                        BLOCK 1 [source_file: testcode]
                RETURN 1 [source_file: testcode]
                    NUMBER 1.0 1 [source_file: testcode]


Subtree1: BLOCK 1 [source_file: expected0]
    BREAK 1 [source_file: expected0]
        LABEL_NAME b 1 [source_file: expected0]


Subtree2: BLOCK 1 [source_file: testcode]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:928)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:460)
~ testIssue4177428_continue(com.google.javascript.jscomp.UnreachableCodeEliminationTest)
[
Expected: f=function(){var action;a:do{var proto=null;try{proto=new Proto}finally{action=proto;continue a}}while(false);alert(action)}
Result: f=function(){var action;a:do{var proto=null;try{proto=new Proto}finally{action=proto}}while(false);alert(action)}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            ASSIGN 1 [source_file: expected0]
                NAME f 1 [source_file: expected0]
                FUNCTION  1 [source_file: expected0]
                    NAME  1 [source_file: expected0]
                    PARAM_LIST 1 [source_file: expected0]
                    BLOCK 1 [source_file: expected0]
                        VAR 2 [source_file: expected0]
                            NAME action 2 [source_file: expected0]
                        LABEL 3 [source_file: expected0]
                            LABEL_NAME a 3 [source_file: expected0]
                            DO 3 [source_file: expected0]
                                BLOCK 3 [source_file: expected0]
                                    VAR 4 [source_file: expected0]
                                        NAME proto 4 [source_file: expected0]
                                            NULL 4 [source_file: expected0]
                                    TRY 5 [source_file: expected0]
                                        BLOCK 5 [source_file: expected0]
                                            EXPR_RESULT 6 [source_file: expected0]
                                                ASSIGN 6 [source_file: expected0]
                                                    NAME proto 6 [source_file: expected0]
                                                    NEW 6 [source_file: expected0]
                                                        NAME Proto 6 [source_file: expected0]
                                        BLOCK 7 [source_file: expected0]
                                        BLOCK 7 [source_file: expected0]
                                            EXPR_RESULT 8 [source_file: expected0]
                                                ASSIGN 8 [source_file: expected0]
                                                    NAME action 8 [source_file: expected0]
                                                    NAME proto 8 [source_file: expected0]
                                            CONTINUE 9 [source_file: expected0]
                                                LABEL_NAME a 9 [source_file: expected0]
                                FALSE 11 [source_file: expected0]
                        EXPR_RESULT 12 [source_file: expected0]
                            CALL 12 [free_call: 1] [source_file: expected0]
                                NAME alert 12 [source_file: expected0]
                                NAME action 12 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        EXPR_RESULT 1 [source_file: testcode]
            ASSIGN 1 [source_file: testcode]
                NAME f 1 [source_file: testcode]
                FUNCTION  1 [source_file: testcode]
                    NAME  1 [source_file: testcode]
                    PARAM_LIST 1 [source_file: testcode]
                    BLOCK 1 [source_file: testcode]
                        VAR 2 [source_file: testcode]
                            NAME action 2 [source_file: testcode]
                        LABEL 3 [source_file: testcode]
                            LABEL_NAME a 3 [source_file: testcode]
                            DO 3 [source_file: testcode]
                                BLOCK 3 [source_file: testcode]
                                    VAR 4 [source_file: testcode]
                                        NAME proto 4 [source_file: testcode]
                                            NULL 4 [source_file: testcode]
                                    TRY 5 [source_file: testcode]
                                        BLOCK 5 [source_file: testcode]
                                            EXPR_RESULT 6 [source_file: testcode]
                                                ASSIGN 6 [source_file: testcode]
                                                    NAME proto 6 [source_file: testcode]
                                                    NEW 6 [source_file: testcode]
                                                        NAME Proto 6 [source_file: testcode]
                                        BLOCK 7 [source_file: testcode]
                                        BLOCK 7 [source_file: testcode]
                                            EXPR_RESULT 8 [source_file: testcode]
                                                ASSIGN 8 [source_file: testcode]
                                                    NAME action 8 [source_file: testcode]
                                                    NAME proto 8 [source_file: testcode]
                                FALSE 11 [source_file: testcode]
                        EXPR_RESULT 12 [source_file: testcode]
                            CALL 12 [free_call: 1] [source_file: testcode]
                                NAME alert 12 [source_file: testcode]
                                NAME action 12 [source_file: testcode]


Subtree1: BLOCK 7 [source_file: expected0]
    EXPR_RESULT 8 [source_file: expected0]
        ASSIGN 8 [source_file: expected0]
            NAME action 8 [source_file: expected0]
            NAME proto 8 [source_file: expected0]
    CONTINUE 9 [source_file: expected0]
        LABEL_NAME a 9 [source_file: expected0]


Subtree2: BLOCK 7 [source_file: testcode]
    EXPR_RESULT 8 [source_file: testcode]
        ASSIGN 8 [source_file: testcode]
            NAME action 8 [source_file: testcode]
            NAME proto 8 [source_file: testcode]
]
junit.framework.AssertionFailedError: 
Expected: f=function(){var action;a:do{var proto=null;try{proto=new Proto}finally{action=proto;continue a}}while(false);alert(action)}
Result: f=function(){var action;a:do{var proto=null;try{proto=new Proto}finally{action=proto}}while(false);alert(action)}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            ASSIGN 1 [source_file: expected0]
                NAME f 1 [source_file: expected0]
                FUNCTION  1 [source_file: expected0]
                    NAME  1 [source_file: expected0]
                    PARAM_LIST 1 [source_file: expected0]
                    BLOCK 1 [source_file: expected0]
                        VAR 2 [source_file: expected0]
                            NAME action 2 [source_file: expected0]
                        LABEL 3 [source_file: expected0]
                            LABEL_NAME a 3 [source_file: expected0]
                            DO 3 [source_file: expected0]
                                BLOCK 3 [source_file: expected0]
                                    VAR 4 [source_file: expected0]
                                        NAME proto 4 [source_file: expected0]
                                            NULL 4 [source_file: expected0]
                                    TRY 5 [source_file: expected0]
                                        BLOCK 5 [source_file: expected0]
                                            EXPR_RESULT 6 [source_file: expected0]
                                                ASSIGN 6 [source_file: expected0]
                                                    NAME proto 6 [source_file: expected0]
                                                    NEW 6 [source_file: expected0]
                                                        NAME Proto 6 [source_file: expected0]
                                        BLOCK 7 [source_file: expected0]
                                        BLOCK 7 [source_file: expected0]
                                            EXPR_RESULT 8 [source_file: expected0]
                                                ASSIGN 8 [source_file: expected0]
                                                    NAME action 8 [source_file: expected0]
                                                    NAME proto 8 [source_file: expected0]
                                            CONTINUE 9 [source_file: expected0]
                                                LABEL_NAME a 9 [source_file: expected0]
                                FALSE 11 [source_file: expected0]
                        EXPR_RESULT 12 [source_file: expected0]
                            CALL 12 [free_call: 1] [source_file: expected0]
                                NAME alert 12 [source_file: expected0]
                                NAME action 12 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        EXPR_RESULT 1 [source_file: testcode]
            ASSIGN 1 [source_file: testcode]
                NAME f 1 [source_file: testcode]
                FUNCTION  1 [source_file: testcode]
                    NAME  1 [source_file: testcode]
                    PARAM_LIST 1 [source_file: testcode]
                    BLOCK 1 [source_file: testcode]
                        VAR 2 [source_file: testcode]
                            NAME action 2 [source_file: testcode]
                        LABEL 3 [source_file: testcode]
                            LABEL_NAME a 3 [source_file: testcode]
                            DO 3 [source_file: testcode]
                                BLOCK 3 [source_file: testcode]
                                    VAR 4 [source_file: testcode]
                                        NAME proto 4 [source_file: testcode]
                                            NULL 4 [source_file: testcode]
                                    TRY 5 [source_file: testcode]
                                        BLOCK 5 [source_file: testcode]
                                            EXPR_RESULT 6 [source_file: testcode]
                                                ASSIGN 6 [source_file: testcode]
                                                    NAME proto 6 [source_file: testcode]
                                                    NEW 6 [source_file: testcode]
                                                        NAME Proto 6 [source_file: testcode]
                                        BLOCK 7 [source_file: testcode]
                                        BLOCK 7 [source_file: testcode]
                                            EXPR_RESULT 8 [source_file: testcode]
                                                ASSIGN 8 [source_file: testcode]
                                                    NAME action 8 [source_file: testcode]
                                                    NAME proto 8 [source_file: testcode]
                                FALSE 11 [source_file: testcode]
                        EXPR_RESULT 12 [source_file: testcode]
                            CALL 12 [free_call: 1] [source_file: testcode]
                                NAME alert 12 [source_file: testcode]
                                NAME action 12 [source_file: testcode]


Subtree1: BLOCK 7 [source_file: expected0]
    EXPR_RESULT 8 [source_file: expected0]
        ASSIGN 8 [source_file: expected0]
            NAME action 8 [source_file: expected0]
            NAME proto 8 [source_file: expected0]
    CONTINUE 9 [source_file: expected0]
        LABEL_NAME a 9 [source_file: expected0]


Subtree2: BLOCK 7 [source_file: testcode]
    EXPR_RESULT 8 [source_file: testcode]
        ASSIGN 8 [source_file: testcode]
            NAME action 8 [source_file: testcode]
            NAME proto 8 [source_file: testcode]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:928)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:460)
~ testDontRemoveBreakInTryFinallySwitch(com.google.javascript.jscomp.UnreachableCodeEliminationTest)
[
Expected: function f(){b:try{throw 9;}finally{switch(x){case 1:break b}}return 1}
Result: function f(){b:try{throw 9;}finally{switch(x){case 1:}}return 1}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION f 1 [source_file: expected0]
            NAME f 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                LABEL 1 [source_file: expected0]
                    LABEL_NAME b 1 [source_file: expected0]
                    TRY 1 [source_file: expected0]
                        BLOCK 1 [source_file: expected0]
                            THROW 1 [source_file: expected0]
                                NUMBER 9.0 1 [source_file: expected0]
                        BLOCK 1 [source_file: expected0]
                        BLOCK 1 [source_file: expected0]
                            SWITCH 1 [source_file: expected0]
                                NAME x 1 [source_file: expected0]
                                CASE 1 [source_file: expected0]
                                    NUMBER 1.0 1 [source_file: expected0]
                                    BLOCK 1 [synthetic: 1] [source_file: expected0]
                                        BREAK 1 [source_file: expected0]
                                            LABEL_NAME b 1 [source_file: expected0]
                RETURN 1 [source_file: expected0]
                    NUMBER 1.0 1 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION f 1 [source_file: testcode]
            NAME f 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                LABEL 1 [source_file: testcode]
                    LABEL_NAME b 1 [source_file: testcode]
                    TRY 1 [source_file: testcode]
                        BLOCK 1 [source_file: testcode]
                            THROW 1 [source_file: testcode]
                                NUMBER 9.0 1 [source_file: testcode]
                        BLOCK 1 [source_file: testcode]
                        BLOCK 1 [source_file: testcode]
                            SWITCH 1 [source_file: testcode]
                                NAME x 1 [source_file: testcode]
                                CASE 1 [source_file: testcode]
                                    NUMBER 1.0 1 [source_file: testcode]
                                    BLOCK 1 [synthetic: 1] [source_file: testcode]
                RETURN 1 [source_file: testcode]
                    NUMBER 1.0 1 [source_file: testcode]


Subtree1: BLOCK 1 [synthetic: 1] [source_file: expected0]
    BREAK 1 [source_file: expected0]
        LABEL_NAME b 1 [source_file: expected0]


Subtree2: BLOCK 1 [synthetic: 1] [source_file: testcode]
]
junit.framework.AssertionFailedError: 
Expected: function f(){b:try{throw 9;}finally{switch(x){case 1:break b}}return 1}
Result: function f(){b:try{throw 9;}finally{switch(x){case 1:}}return 1}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION f 1 [source_file: expected0]
            NAME f 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                LABEL 1 [source_file: expected0]
                    LABEL_NAME b 1 [source_file: expected0]
                    TRY 1 [source_file: expected0]
                        BLOCK 1 [source_file: expected0]
                            THROW 1 [source_file: expected0]
                                NUMBER 9.0 1 [source_file: expected0]
                        BLOCK 1 [source_file: expected0]
                        BLOCK 1 [source_file: expected0]
                            SWITCH 1 [source_file: expected0]
                                NAME x 1 [source_file: expected0]
                                CASE 1 [source_file: expected0]
                                    NUMBER 1.0 1 [source_file: expected0]
                                    BLOCK 1 [synthetic: 1] [source_file: expected0]
                                        BREAK 1 [source_file: expected0]
                                            LABEL_NAME b 1 [source_file: expected0]
                RETURN 1 [source_file: expected0]
                    NUMBER 1.0 1 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION f 1 [source_file: testcode]
            NAME f 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                LABEL 1 [source_file: testcode]
                    LABEL_NAME b 1 [source_file: testcode]
                    TRY 1 [source_file: testcode]
                        BLOCK 1 [source_file: testcode]
                            THROW 1 [source_file: testcode]
                                NUMBER 9.0 1 [source_file: testcode]
                        BLOCK 1 [source_file: testcode]
                        BLOCK 1 [source_file: testcode]
                            SWITCH 1 [source_file: testcode]
                                NAME x 1 [source_file: testcode]
                                CASE 1 [source_file: testcode]
                                    NUMBER 1.0 1 [source_file: testcode]
                                    BLOCK 1 [synthetic: 1] [source_file: testcode]
                RETURN 1 [source_file: testcode]
                    NUMBER 1.0 1 [source_file: testcode]


Subtree1: BLOCK 1 [synthetic: 1] [source_file: expected0]
    BREAK 1 [source_file: expected0]
        LABEL_NAME b 1 [source_file: expected0]


Subtree2: BLOCK 1 [synthetic: 1] [source_file: testcode]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:928)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:460)
~ testIssue4177428a(com.google.javascript.jscomp.UnreachableCodeEliminationTest)
[
Expected: f=function(){var action;a:{var proto=null;try{proto=new Proto}finally{action=proto;break a}}alert(action)}
Result: f=function(){var action;a:{var proto=null;try{proto=new Proto}finally{action=proto}}alert(action)}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            ASSIGN 1 [source_file: expected0]
                NAME f 1 [source_file: expected0]
                FUNCTION  1 [source_file: expected0]
                    NAME  1 [source_file: expected0]
                    PARAM_LIST 1 [source_file: expected0]
                    BLOCK 1 [source_file: expected0]
                        VAR 2 [source_file: expected0]
                            NAME action 2 [source_file: expected0]
                        LABEL 3 [source_file: expected0]
                            LABEL_NAME a 3 [source_file: expected0]
                            BLOCK 3 [source_file: expected0]
                                VAR 4 [source_file: expected0]
                                    NAME proto 4 [source_file: expected0]
                                        NULL 4 [source_file: expected0]
                                TRY 5 [source_file: expected0]
                                    BLOCK 5 [source_file: expected0]
                                        EXPR_RESULT 6 [source_file: expected0]
                                            ASSIGN 6 [source_file: expected0]
                                                NAME proto 6 [source_file: expected0]
                                                NEW 6 [source_file: expected0]
                                                    NAME Proto 6 [source_file: expected0]
                                    BLOCK 7 [source_file: expected0]
                                    BLOCK 7 [source_file: expected0]
                                        EXPR_RESULT 8 [source_file: expected0]
                                            ASSIGN 8 [source_file: expected0]
                                                NAME action 8 [source_file: expected0]
                                                NAME proto 8 [source_file: expected0]
                                        BREAK 9 [source_file: expected0]
                                            LABEL_NAME a 9 [source_file: expected0]
                        EXPR_RESULT 12 [source_file: expected0]
                            CALL 12 [free_call: 1] [source_file: expected0]
                                NAME alert 12 [source_file: expected0]
                                NAME action 12 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        EXPR_RESULT 1 [source_file: testcode]
            ASSIGN 1 [source_file: testcode]
                NAME f 1 [source_file: testcode]
                FUNCTION  1 [source_file: testcode]
                    NAME  1 [source_file: testcode]
                    PARAM_LIST 1 [source_file: testcode]
                    BLOCK 1 [source_file: testcode]
                        VAR 2 [source_file: testcode]
                            NAME action 2 [source_file: testcode]
                        LABEL 3 [source_file: testcode]
                            LABEL_NAME a 3 [source_file: testcode]
                            BLOCK 3 [source_file: testcode]
                                VAR 4 [source_file: testcode]
                                    NAME proto 4 [source_file: testcode]
                                        NULL 4 [source_file: testcode]
                                TRY 5 [source_file: testcode]
                                    BLOCK 5 [source_file: testcode]
                                        EXPR_RESULT 6 [source_file: testcode]
                                            ASSIGN 6 [source_file: testcode]
                                                NAME proto 6 [source_file: testcode]
                                                NEW 6 [source_file: testcode]
                                                    NAME Proto 6 [source_file: testcode]
                                    BLOCK 7 [source_file: testcode]
                                    BLOCK 7 [source_file: testcode]
                                        EXPR_RESULT 8 [source_file: testcode]
                                            ASSIGN 8 [source_file: testcode]
                                                NAME action 8 [source_file: testcode]
                                                NAME proto 8 [source_file: testcode]
                        EXPR_RESULT 12 [source_file: testcode]
                            CALL 12 [free_call: 1] [source_file: testcode]
                                NAME alert 12 [source_file: testcode]
                                NAME action 12 [source_file: testcode]


Subtree1: BLOCK 7 [source_file: expected0]
    EXPR_RESULT 8 [source_file: expected0]
        ASSIGN 8 [source_file: expected0]
            NAME action 8 [source_file: expected0]
            NAME proto 8 [source_file: expected0]
    BREAK 9 [source_file: expected0]
        LABEL_NAME a 9 [source_file: expected0]


Subtree2: BLOCK 7 [source_file: testcode]
    EXPR_RESULT 8 [source_file: testcode]
        ASSIGN 8 [source_file: testcode]
            NAME action 8 [source_file: testcode]
            NAME proto 8 [source_file: testcode]
]
junit.framework.AssertionFailedError: 
Expected: f=function(){var action;a:{var proto=null;try{proto=new Proto}finally{action=proto;break a}}alert(action)}
Result: f=function(){var action;a:{var proto=null;try{proto=new Proto}finally{action=proto}}alert(action)}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            ASSIGN 1 [source_file: expected0]
                NAME f 1 [source_file: expected0]
                FUNCTION  1 [source_file: expected0]
                    NAME  1 [source_file: expected0]
                    PARAM_LIST 1 [source_file: expected0]
                    BLOCK 1 [source_file: expected0]
                        VAR 2 [source_file: expected0]
                            NAME action 2 [source_file: expected0]
                        LABEL 3 [source_file: expected0]
                            LABEL_NAME a 3 [source_file: expected0]
                            BLOCK 3 [source_file: expected0]
                                VAR 4 [source_file: expected0]
                                    NAME proto 4 [source_file: expected0]
                                        NULL 4 [source_file: expected0]
                                TRY 5 [source_file: expected0]
                                    BLOCK 5 [source_file: expected0]
                                        EXPR_RESULT 6 [source_file: expected0]
                                            ASSIGN 6 [source_file: expected0]
                                                NAME proto 6 [source_file: expected0]
                                                NEW 6 [source_file: expected0]
                                                    NAME Proto 6 [source_file: expected0]
                                    BLOCK 7 [source_file: expected0]
                                    BLOCK 7 [source_file: expected0]
                                        EXPR_RESULT 8 [source_file: expected0]
                                            ASSIGN 8 [source_file: expected0]
                                                NAME action 8 [source_file: expected0]
                                                NAME proto 8 [source_file: expected0]
                                        BREAK 9 [source_file: expected0]
                                            LABEL_NAME a 9 [source_file: expected0]
                        EXPR_RESULT 12 [source_file: expected0]
                            CALL 12 [free_call: 1] [source_file: expected0]
                                NAME alert 12 [source_file: expected0]
                                NAME action 12 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        EXPR_RESULT 1 [source_file: testcode]
            ASSIGN 1 [source_file: testcode]
                NAME f 1 [source_file: testcode]
                FUNCTION  1 [source_file: testcode]
                    NAME  1 [source_file: testcode]
                    PARAM_LIST 1 [source_file: testcode]
                    BLOCK 1 [source_file: testcode]
                        VAR 2 [source_file: testcode]
                            NAME action 2 [source_file: testcode]
                        LABEL 3 [source_file: testcode]
                            LABEL_NAME a 3 [source_file: testcode]
                            BLOCK 3 [source_file: testcode]
                                VAR 4 [source_file: testcode]
                                    NAME proto 4 [source_file: testcode]
                                        NULL 4 [source_file: testcode]
                                TRY 5 [source_file: testcode]
                                    BLOCK 5 [source_file: testcode]
                                        EXPR_RESULT 6 [source_file: testcode]
                                            ASSIGN 6 [source_file: testcode]
                                                NAME proto 6 [source_file: testcode]
                                                NEW 6 [source_file: testcode]
                                                    NAME Proto 6 [source_file: testcode]
                                    BLOCK 7 [source_file: testcode]
                                    BLOCK 7 [source_file: testcode]
                                        EXPR_RESULT 8 [source_file: testcode]
                                            ASSIGN 8 [source_file: testcode]
                                                NAME action 8 [source_file: testcode]
                                                NAME proto 8 [source_file: testcode]
                        EXPR_RESULT 12 [source_file: testcode]
                            CALL 12 [free_call: 1] [source_file: testcode]
                                NAME alert 12 [source_file: testcode]
                                NAME action 12 [source_file: testcode]


Subtree1: BLOCK 7 [source_file: expected0]
    EXPR_RESULT 8 [source_file: expected0]
        ASSIGN 8 [source_file: expected0]
            NAME action 8 [source_file: expected0]
            NAME proto 8 [source_file: expected0]
    BREAK 9 [source_file: expected0]
        LABEL_NAME a 9 [source_file: expected0]


Subtree2: BLOCK 7 [source_file: testcode]
    EXPR_RESULT 8 [source_file: testcode]
        ASSIGN 8 [source_file: testcode]
            NAME action 8 [source_file: testcode]
            NAME proto 8 [source_file: testcode]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:928)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:460)
~ testIssue4177428c(com.google.javascript.jscomp.UnreachableCodeEliminationTest)
[
Expected: f=function(){var action;a:{var proto=null;try{}finally{try{proto=new Proto}finally{action=proto;break a}}}alert(action)}
Result: f=function(){var action;a:{var proto=null;try{}finally{try{proto=new Proto}finally{action=proto}}}alert(action)}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            ASSIGN 1 [source_file: expected0]
                NAME f 1 [source_file: expected0]
                FUNCTION  1 [source_file: expected0]
                    NAME  1 [source_file: expected0]
                    PARAM_LIST 1 [source_file: expected0]
                    BLOCK 1 [source_file: expected0]
                        VAR 2 [source_file: expected0]
                            NAME action 2 [source_file: expected0]
                        LABEL 3 [source_file: expected0]
                            LABEL_NAME a 3 [source_file: expected0]
                            BLOCK 3 [source_file: expected0]
                                VAR 4 [source_file: expected0]
                                    NAME proto 4 [source_file: expected0]
                                        NULL 4 [source_file: expected0]
                                TRY 5 [source_file: expected0]
                                    BLOCK 5 [source_file: expected0]
                                    BLOCK 6 [source_file: expected0]
                                    BLOCK 6 [source_file: expected0]
                                        TRY 7 [source_file: expected0]
                                            BLOCK 7 [source_file: expected0]
                                                EXPR_RESULT 8 [source_file: expected0]
                                                    ASSIGN 8 [source_file: expected0]
                                                        NAME proto 8 [source_file: expected0]
                                                        NEW 8 [source_file: expected0]
                                                            NAME Proto 8 [source_file: expected0]
                                            BLOCK 9 [source_file: expected0]
                                            BLOCK 9 [source_file: expected0]
                                                EXPR_RESULT 10 [source_file: expected0]
                                                    ASSIGN 10 [source_file: expected0]
                                                        NAME action 10 [source_file: expected0]
                                                        NAME proto 10 [source_file: expected0]
                                                BREAK 11 [source_file: expected0]
                                                    LABEL_NAME a 11 [source_file: expected0]
                        EXPR_RESULT 15 [source_file: expected0]
                            CALL 15 [free_call: 1] [source_file: expected0]
                                NAME alert 15 [source_file: expected0]
                                NAME action 15 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        EXPR_RESULT 1 [source_file: testcode]
            ASSIGN 1 [source_file: testcode]
                NAME f 1 [source_file: testcode]
                FUNCTION  1 [source_file: testcode]
                    NAME  1 [source_file: testcode]
                    PARAM_LIST 1 [source_file: testcode]
                    BLOCK 1 [source_file: testcode]
                        VAR 2 [source_file: testcode]
                            NAME action 2 [source_file: testcode]
                        LABEL 3 [source_file: testcode]
                            LABEL_NAME a 3 [source_file: testcode]
                            BLOCK 3 [source_file: testcode]
                                VAR 4 [source_file: testcode]
                                    NAME proto 4 [source_file: testcode]
                                        NULL 4 [source_file: testcode]
                                TRY 5 [source_file: testcode]
                                    BLOCK 5 [source_file: testcode]
                                    BLOCK 6 [source_file: testcode]
                                    BLOCK 6 [source_file: testcode]
                                        TRY 7 [source_file: testcode]
                                            BLOCK 7 [source_file: testcode]
                                                EXPR_RESULT 8 [source_file: testcode]
                                                    ASSIGN 8 [source_file: testcode]
                                                        NAME proto 8 [source_file: testcode]
                                                        NEW 8 [source_file: testcode]
                                                            NAME Proto 8 [source_file: testcode]
                                            BLOCK 9 [source_file: testcode]
                                            BLOCK 9 [source_file: testcode]
                                                EXPR_RESULT 10 [source_file: testcode]
                                                    ASSIGN 10 [source_file: testcode]
                                                        NAME action 10 [source_file: testcode]
                                                        NAME proto 10 [source_file: testcode]
                        EXPR_RESULT 15 [source_file: testcode]
                            CALL 15 [free_call: 1] [source_file: testcode]
                                NAME alert 15 [source_file: testcode]
                                NAME action 15 [source_file: testcode]


Subtree1: BLOCK 9 [source_file: expected0]
    EXPR_RESULT 10 [source_file: expected0]
        ASSIGN 10 [source_file: expected0]
            NAME action 10 [source_file: expected0]
            NAME proto 10 [source_file: expected0]
    BREAK 11 [source_file: expected0]
        LABEL_NAME a 11 [source_file: expected0]


Subtree2: BLOCK 9 [source_file: testcode]
    EXPR_RESULT 10 [source_file: testcode]
        ASSIGN 10 [source_file: testcode]
            NAME action 10 [source_file: testcode]
            NAME proto 10 [source_file: testcode]
]
junit.framework.AssertionFailedError: 
Expected: f=function(){var action;a:{var proto=null;try{}finally{try{proto=new Proto}finally{action=proto;break a}}}alert(action)}
Result: f=function(){var action;a:{var proto=null;try{}finally{try{proto=new Proto}finally{action=proto}}}alert(action)}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            ASSIGN 1 [source_file: expected0]
                NAME f 1 [source_file: expected0]
                FUNCTION  1 [source_file: expected0]
                    NAME  1 [source_file: expected0]
                    PARAM_LIST 1 [source_file: expected0]
                    BLOCK 1 [source_file: expected0]
                        VAR 2 [source_file: expected0]
                            NAME action 2 [source_file: expected0]
                        LABEL 3 [source_file: expected0]
                            LABEL_NAME a 3 [source_file: expected0]
                            BLOCK 3 [source_file: expected0]
                                VAR 4 [source_file: expected0]
                                    NAME proto 4 [source_file: expected0]
                                        NULL 4 [source_file: expected0]
                                TRY 5 [source_file: expected0]
                                    BLOCK 5 [source_file: expected0]
                                    BLOCK 6 [source_file: expected0]
                                    BLOCK 6 [source_file: expected0]
                                        TRY 7 [source_file: expected0]
                                            BLOCK 7 [source_file: expected0]
                                                EXPR_RESULT 8 [source_file: expected0]
                                                    ASSIGN 8 [source_file: expected0]
                                                        NAME proto 8 [source_file: expected0]
                                                        NEW 8 [source_file: expected0]
                                                            NAME Proto 8 [source_file: expected0]
                                            BLOCK 9 [source_file: expected0]
                                            BLOCK 9 [source_file: expected0]
                                                EXPR_RESULT 10 [source_file: expected0]
                                                    ASSIGN 10 [source_file: expected0]
                                                        NAME action 10 [source_file: expected0]
                                                        NAME proto 10 [source_file: expected0]
                                                BREAK 11 [source_file: expected0]
                                                    LABEL_NAME a 11 [source_file: expected0]
                        EXPR_RESULT 15 [source_file: expected0]
                            CALL 15 [free_call: 1] [source_file: expected0]
                                NAME alert 15 [source_file: expected0]
                                NAME action 15 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        EXPR_RESULT 1 [source_file: testcode]
            ASSIGN 1 [source_file: testcode]
                NAME f 1 [source_file: testcode]
                FUNCTION  1 [source_file: testcode]
                    NAME  1 [source_file: testcode]
                    PARAM_LIST 1 [source_file: testcode]
                    BLOCK 1 [source_file: testcode]
                        VAR 2 [source_file: testcode]
                            NAME action 2 [source_file: testcode]
                        LABEL 3 [source_file: testcode]
                            LABEL_NAME a 3 [source_file: testcode]
                            BLOCK 3 [source_file: testcode]
                                VAR 4 [source_file: testcode]
                                    NAME proto 4 [source_file: testcode]
                                        NULL 4 [source_file: testcode]
                                TRY 5 [source_file: testcode]
                                    BLOCK 5 [source_file: testcode]
                                    BLOCK 6 [source_file: testcode]
                                    BLOCK 6 [source_file: testcode]
                                        TRY 7 [source_file: testcode]
                                            BLOCK 7 [source_file: testcode]
                                                EXPR_RESULT 8 [source_file: testcode]
                                                    ASSIGN 8 [source_file: testcode]
                                                        NAME proto 8 [source_file: testcode]
                                                        NEW 8 [source_file: testcode]
                                                            NAME Proto 8 [source_file: testcode]
                                            BLOCK 9 [source_file: testcode]
                                            BLOCK 9 [source_file: testcode]
                                                EXPR_RESULT 10 [source_file: testcode]
                                                    ASSIGN 10 [source_file: testcode]
                                                        NAME action 10 [source_file: testcode]
                                                        NAME proto 10 [source_file: testcode]
                        EXPR_RESULT 15 [source_file: testcode]
                            CALL 15 [free_call: 1] [source_file: testcode]
                                NAME alert 15 [source_file: testcode]
                                NAME action 15 [source_file: testcode]


Subtree1: BLOCK 9 [source_file: expected0]
    EXPR_RESULT 10 [source_file: expected0]
        ASSIGN 10 [source_file: expected0]
            NAME action 10 [source_file: expected0]
            NAME proto 10 [source_file: expected0]
    BREAK 11 [source_file: expected0]
        LABEL_NAME a 11 [source_file: expected0]


Subtree2: BLOCK 9 [source_file: testcode]
    EXPR_RESULT 10 [source_file: testcode]
        ASSIGN 10 [source_file: testcode]
            NAME action 10 [source_file: testcode]
            NAME proto 10 [source_file: testcode]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:928)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:460)
~ testIssue4177428_return(com.google.javascript.jscomp.UnreachableCodeEliminationTest)
[
Expected: f=function(){var action;a:{var proto=null;try{proto=new Proto}finally{action=proto;return}}}
Result: f=function(){var action;a:{var proto=null;try{proto=new Proto}finally{action=proto}}}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            ASSIGN 1 [source_file: expected0]
                NAME f 1 [source_file: expected0]
                FUNCTION  1 [source_file: expected0]
                    NAME  1 [source_file: expected0]
                    PARAM_LIST 1 [source_file: expected0]
                    BLOCK 1 [source_file: expected0]
                        VAR 2 [source_file: expected0]
                            NAME action 2 [source_file: expected0]
                        LABEL 3 [source_file: expected0]
                            LABEL_NAME a 3 [source_file: expected0]
                            BLOCK 3 [source_file: expected0]
                                VAR 4 [source_file: expected0]
                                    NAME proto 4 [source_file: expected0]
                                        NULL 4 [source_file: expected0]
                                TRY 5 [source_file: expected0]
                                    BLOCK 5 [source_file: expected0]
                                        EXPR_RESULT 6 [source_file: expected0]
                                            ASSIGN 6 [source_file: expected0]
                                                NAME proto 6 [source_file: expected0]
                                                NEW 6 [source_file: expected0]
                                                    NAME Proto 6 [source_file: expected0]
                                    BLOCK 7 [source_file: expected0]
                                    BLOCK 7 [source_file: expected0]
                                        EXPR_RESULT 8 [source_file: expected0]
                                            ASSIGN 8 [source_file: expected0]
                                                NAME action 8 [source_file: expected0]
                                                NAME proto 8 [source_file: expected0]
                                        RETURN 9 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        EXPR_RESULT 1 [source_file: testcode]
            ASSIGN 1 [source_file: testcode]
                NAME f 1 [source_file: testcode]
                FUNCTION  1 [source_file: testcode]
                    NAME  1 [source_file: testcode]
                    PARAM_LIST 1 [source_file: testcode]
                    BLOCK 1 [source_file: testcode]
                        VAR 2 [source_file: testcode]
                            NAME action 2 [source_file: testcode]
                        LABEL 3 [source_file: testcode]
                            LABEL_NAME a 3 [source_file: testcode]
                            BLOCK 3 [source_file: testcode]
                                VAR 4 [source_file: testcode]
                                    NAME proto 4 [source_file: testcode]
                                        NULL 4 [source_file: testcode]
                                TRY 5 [source_file: testcode]
                                    BLOCK 5 [source_file: testcode]
                                        EXPR_RESULT 6 [source_file: testcode]
                                            ASSIGN 6 [source_file: testcode]
                                                NAME proto 6 [source_file: testcode]
                                                NEW 6 [source_file: testcode]
                                                    NAME Proto 6 [source_file: testcode]
                                    BLOCK 7 [source_file: testcode]
                                    BLOCK 7 [source_file: testcode]
                                        EXPR_RESULT 8 [source_file: testcode]
                                            ASSIGN 8 [source_file: testcode]
                                                NAME action 8 [source_file: testcode]
                                                NAME proto 8 [source_file: testcode]


Subtree1: BLOCK 7 [source_file: expected0]
    EXPR_RESULT 8 [source_file: expected0]
        ASSIGN 8 [source_file: expected0]
            NAME action 8 [source_file: expected0]
            NAME proto 8 [source_file: expected0]
    RETURN 9 [source_file: expected0]


Subtree2: BLOCK 7 [source_file: testcode]
    EXPR_RESULT 8 [source_file: testcode]
        ASSIGN 8 [source_file: testcode]
            NAME action 8 [source_file: testcode]
            NAME proto 8 [source_file: testcode]
]
junit.framework.AssertionFailedError: 
Expected: f=function(){var action;a:{var proto=null;try{proto=new Proto}finally{action=proto;return}}}
Result: f=function(){var action;a:{var proto=null;try{proto=new Proto}finally{action=proto}}}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            ASSIGN 1 [source_file: expected0]
                NAME f 1 [source_file: expected0]
                FUNCTION  1 [source_file: expected0]
                    NAME  1 [source_file: expected0]
                    PARAM_LIST 1 [source_file: expected0]
                    BLOCK 1 [source_file: expected0]
                        VAR 2 [source_file: expected0]
                            NAME action 2 [source_file: expected0]
                        LABEL 3 [source_file: expected0]
                            LABEL_NAME a 3 [source_file: expected0]
                            BLOCK 3 [source_file: expected0]
                                VAR 4 [source_file: expected0]
                                    NAME proto 4 [source_file: expected0]
                                        NULL 4 [source_file: expected0]
                                TRY 5 [source_file: expected0]
                                    BLOCK 5 [source_file: expected0]
                                        EXPR_RESULT 6 [source_file: expected0]
                                            ASSIGN 6 [source_file: expected0]
                                                NAME proto 6 [source_file: expected0]
                                                NEW 6 [source_file: expected0]
                                                    NAME Proto 6 [source_file: expected0]
                                    BLOCK 7 [source_file: expected0]
                                    BLOCK 7 [source_file: expected0]
                                        EXPR_RESULT 8 [source_file: expected0]
                                            ASSIGN 8 [source_file: expected0]
                                                NAME action 8 [source_file: expected0]
                                                NAME proto 8 [source_file: expected0]
                                        RETURN 9 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        EXPR_RESULT 1 [source_file: testcode]
            ASSIGN 1 [source_file: testcode]
                NAME f 1 [source_file: testcode]
                FUNCTION  1 [source_file: testcode]
                    NAME  1 [source_file: testcode]
                    PARAM_LIST 1 [source_file: testcode]
                    BLOCK 1 [source_file: testcode]
                        VAR 2 [source_file: testcode]
                            NAME action 2 [source_file: testcode]
                        LABEL 3 [source_file: testcode]
                            LABEL_NAME a 3 [source_file: testcode]
                            BLOCK 3 [source_file: testcode]
                                VAR 4 [source_file: testcode]
                                    NAME proto 4 [source_file: testcode]
                                        NULL 4 [source_file: testcode]
                                TRY 5 [source_file: testcode]
                                    BLOCK 5 [source_file: testcode]
                                        EXPR_RESULT 6 [source_file: testcode]
                                            ASSIGN 6 [source_file: testcode]
                                                NAME proto 6 [source_file: testcode]
                                                NEW 6 [source_file: testcode]
                                                    NAME Proto 6 [source_file: testcode]
                                    BLOCK 7 [source_file: testcode]
                                    BLOCK 7 [source_file: testcode]
                                        EXPR_RESULT 8 [source_file: testcode]
                                            ASSIGN 8 [source_file: testcode]
                                                NAME action 8 [source_file: testcode]
                                                NAME proto 8 [source_file: testcode]


Subtree1: BLOCK 7 [source_file: expected0]
    EXPR_RESULT 8 [source_file: expected0]
        ASSIGN 8 [source_file: expected0]
            NAME action 8 [source_file: expected0]
            NAME proto 8 [source_file: expected0]
    RETURN 9 [source_file: expected0]


Subtree2: BLOCK 7 [source_file: testcode]
    EXPR_RESULT 8 [source_file: testcode]
        ASSIGN 8 [source_file: testcode]
            NAME action 8 [source_file: testcode]
            NAME proto 8 [source_file: testcode]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:928)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:460)
~ testDontRemoveBreakInTryFinally(com.google.javascript.jscomp.UnreachableCodeEliminationTest)
[
Expected: function f(){b:try{throw 9;}finally{break b}return 1}
Result: function f(){b:try{throw 9;}finally{}return 1}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION f 1 [source_file: expected0]
            NAME f 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                LABEL 1 [source_file: expected0]
                    LABEL_NAME b 1 [source_file: expected0]
                    TRY 1 [source_file: expected0]
                        BLOCK 1 [source_file: expected0]
                            THROW 1 [source_file: expected0]
                                NUMBER 9.0 1 [source_file: expected0]
                        BLOCK 1 [source_file: expected0]
                        BLOCK 1 [source_file: expected0]
                            BREAK 1 [source_file: expected0]
                                LABEL_NAME b 1 [source_file: expected0]
                RETURN 1 [source_file: expected0]
                    NUMBER 1.0 1 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION f 1 [source_file: testcode]
            NAME f 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                LABEL 1 [source_file: testcode]
                    LABEL_NAME b 1 [source_file: testcode]
                    TRY 1 [source_file: testcode]
                        BLOCK 1 [source_file: testcode]
                            THROW 1 [source_file: testcode]
                                NUMBER 9.0 1 [source_file: testcode]
                        BLOCK 1 [source_file: testcode]
                        BLOCK 1 [source_file: testcode]
                RETURN 1 [source_file: testcode]
                    NUMBER 1.0 1 [source_file: testcode]


Subtree1: BLOCK 1 [source_file: expected0]
    BREAK 1 [source_file: expected0]
        LABEL_NAME b 1 [source_file: expected0]


Subtree2: BLOCK 1 [source_file: testcode]
]
junit.framework.AssertionFailedError: 
Expected: function f(){b:try{throw 9;}finally{break b}return 1}
Result: function f(){b:try{throw 9;}finally{}return 1}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION f 1 [source_file: expected0]
            NAME f 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                LABEL 1 [source_file: expected0]
                    LABEL_NAME b 1 [source_file: expected0]
                    TRY 1 [source_file: expected0]
                        BLOCK 1 [source_file: expected0]
                            THROW 1 [source_file: expected0]
                                NUMBER 9.0 1 [source_file: expected0]
                        BLOCK 1 [source_file: expected0]
                        BLOCK 1 [source_file: expected0]
                            BREAK 1 [source_file: expected0]
                                LABEL_NAME b 1 [source_file: expected0]
                RETURN 1 [source_file: expected0]
                    NUMBER 1.0 1 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION f 1 [source_file: testcode]
            NAME f 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                LABEL 1 [source_file: testcode]
                    LABEL_NAME b 1 [source_file: testcode]
                    TRY 1 [source_file: testcode]
                        BLOCK 1 [source_file: testcode]
                            THROW 1 [source_file: testcode]
                                NUMBER 9.0 1 [source_file: testcode]
                        BLOCK 1 [source_file: testcode]
                        BLOCK 1 [source_file: testcode]
                RETURN 1 [source_file: testcode]
                    NUMBER 1.0 1 [source_file: testcode]


Subtree1: BLOCK 1 [source_file: expected0]
    BREAK 1 [source_file: expected0]
        LABEL_NAME b 1 [source_file: expected0]


Subtree2: BLOCK 1 [source_file: testcode]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:928)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:460)
~ testIssue4177428_continue(com.google.javascript.jscomp.UnreachableCodeEliminationTest)
[
Expected: f=function(){var action;a:do{var proto=null;try{proto=new Proto}finally{action=proto;continue a}}while(false);alert(action)}
Result: f=function(){var action;a:do{var proto=null;try{proto=new Proto}finally{action=proto}}while(false);alert(action)}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            ASSIGN 1 [source_file: expected0]
                NAME f 1 [source_file: expected0]
                FUNCTION  1 [source_file: expected0]
                    NAME  1 [source_file: expected0]
                    PARAM_LIST 1 [source_file: expected0]
                    BLOCK 1 [source_file: expected0]
                        VAR 2 [source_file: expected0]
                            NAME action 2 [source_file: expected0]
                        LABEL 3 [source_file: expected0]
                            LABEL_NAME a 3 [source_file: expected0]
                            DO 3 [source_file: expected0]
                                BLOCK 3 [source_file: expected0]
                                    VAR 4 [source_file: expected0]
                                        NAME proto 4 [source_file: expected0]
                                            NULL 4 [source_file: expected0]
                                    TRY 5 [source_file: expected0]
                                        BLOCK 5 [source_file: expected0]
                                            EXPR_RESULT 6 [source_file: expected0]
                                                ASSIGN 6 [source_file: expected0]
                                                    NAME proto 6 [source_file: expected0]
                                                    NEW 6 [source_file: expected0]
                                                        NAME Proto 6 [source_file: expected0]
                                        BLOCK 7 [source_file: expected0]
                                        BLOCK 7 [source_file: expected0]
                                            EXPR_RESULT 8 [source_file: expected0]
                                                ASSIGN 8 [source_file: expected0]
                                                    NAME action 8 [source_file: expected0]
                                                    NAME proto 8 [source_file: expected0]
                                            CONTINUE 9 [source_file: expected0]
                                                LABEL_NAME a 9 [source_file: expected0]
                                FALSE 11 [source_file: expected0]
                        EXPR_RESULT 12 [source_file: expected0]
                            CALL 12 [free_call: 1] [source_file: expected0]
                                NAME alert 12 [source_file: expected0]
                                NAME action 12 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        EXPR_RESULT 1 [source_file: testcode]
            ASSIGN 1 [source_file: testcode]
                NAME f 1 [source_file: testcode]
                FUNCTION  1 [source_file: testcode]
                    NAME  1 [source_file: testcode]
                    PARAM_LIST 1 [source_file: testcode]
                    BLOCK 1 [source_file: testcode]
                        VAR 2 [source_file: testcode]
                            NAME action 2 [source_file: testcode]
                        LABEL 3 [source_file: testcode]
                            LABEL_NAME a 3 [source_file: testcode]
                            DO 3 [source_file: testcode]
                                BLOCK 3 [source_file: testcode]
                                    VAR 4 [source_file: testcode]
                                        NAME proto 4 [source_file: testcode]
                                            NULL 4 [source_file: testcode]
                                    TRY 5 [source_file: testcode]
                                        BLOCK 5 [source_file: testcode]
                                            EXPR_RESULT 6 [source_file: testcode]
                                                ASSIGN 6 [source_file: testcode]
                                                    NAME proto 6 [source_file: testcode]
                                                    NEW 6 [source_file: testcode]
                                                        NAME Proto 6 [source_file: testcode]
                                        BLOCK 7 [source_file: testcode]
                                        BLOCK 7 [source_file: testcode]
                                            EXPR_RESULT 8 [source_file: testcode]
                                                ASSIGN 8 [source_file: testcode]
                                                    NAME action 8 [source_file: testcode]
                                                    NAME proto 8 [source_file: testcode]
                                FALSE 11 [source_file: testcode]
                        EXPR_RESULT 12 [source_file: testcode]
                            CALL 12 [free_call: 1] [source_file: testcode]
                                NAME alert 12 [source_file: testcode]
                                NAME action 12 [source_file: testcode]


Subtree1: BLOCK 7 [source_file: expected0]
    EXPR_RESULT 8 [source_file: expected0]
        ASSIGN 8 [source_file: expected0]
            NAME action 8 [source_file: expected0]
            NAME proto 8 [source_file: expected0]
    CONTINUE 9 [source_file: expected0]
        LABEL_NAME a 9 [source_file: expected0]


Subtree2: BLOCK 7 [source_file: testcode]
    EXPR_RESULT 8 [source_file: testcode]
        ASSIGN 8 [source_file: testcode]
            NAME action 8 [source_file: testcode]
            NAME proto 8 [source_file: testcode]
]
junit.framework.AssertionFailedError: 
Expected: f=function(){var action;a:do{var proto=null;try{proto=new Proto}finally{action=proto;continue a}}while(false);alert(action)}
Result: f=function(){var action;a:do{var proto=null;try{proto=new Proto}finally{action=proto}}while(false);alert(action)}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            ASSIGN 1 [source_file: expected0]
                NAME f 1 [source_file: expected0]
                FUNCTION  1 [source_file: expected0]
                    NAME  1 [source_file: expected0]
                    PARAM_LIST 1 [source_file: expected0]
                    BLOCK 1 [source_file: expected0]
                        VAR 2 [source_file: expected0]
                            NAME action 2 [source_file: expected0]
                        LABEL 3 [source_file: expected0]
                            LABEL_NAME a 3 [source_file: expected0]
                            DO 3 [source_file: expected0]
                                BLOCK 3 [source_file: expected0]
                                    VAR 4 [source_file: expected0]
                                        NAME proto 4 [source_file: expected0]
                                            NULL 4 [source_file: expected0]
                                    TRY 5 [source_file: expected0]
                                        BLOCK 5 [source_file: expected0]
                                            EXPR_RESULT 6 [source_file: expected0]
                                                ASSIGN 6 [source_file: expected0]
                                                    NAME proto 6 [source_file: expected0]
                                                    NEW 6 [source_file: expected0]
                                                        NAME Proto 6 [source_file: expected0]
                                        BLOCK 7 [source_file: expected0]
                                        BLOCK 7 [source_file: expected0]
                                            EXPR_RESULT 8 [source_file: expected0]
                                                ASSIGN 8 [source_file: expected0]
                                                    NAME action 8 [source_file: expected0]
                                                    NAME proto 8 [source_file: expected0]
                                            CONTINUE 9 [source_file: expected0]
                                                LABEL_NAME a 9 [source_file: expected0]
                                FALSE 11 [source_file: expected0]
                        EXPR_RESULT 12 [source_file: expected0]
                            CALL 12 [free_call: 1] [source_file: expected0]
                                NAME alert 12 [source_file: expected0]
                                NAME action 12 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        EXPR_RESULT 1 [source_file: testcode]
            ASSIGN 1 [source_file: testcode]
                NAME f 1 [source_file: testcode]
                FUNCTION  1 [source_file: testcode]
                    NAME  1 [source_file: testcode]
                    PARAM_LIST 1 [source_file: testcode]
                    BLOCK 1 [source_file: testcode]
                        VAR 2 [source_file: testcode]
                            NAME action 2 [source_file: testcode]
                        LABEL 3 [source_file: testcode]
                            LABEL_NAME a 3 [source_file: testcode]
                            DO 3 [source_file: testcode]
                                BLOCK 3 [source_file: testcode]
                                    VAR 4 [source_file: testcode]
                                        NAME proto 4 [source_file: testcode]
                                            NULL 4 [source_file: testcode]
                                    TRY 5 [source_file: testcode]
                                        BLOCK 5 [source_file: testcode]
                                            EXPR_RESULT 6 [source_file: testcode]
                                                ASSIGN 6 [source_file: testcode]
                                                    NAME proto 6 [source_file: testcode]
                                                    NEW 6 [source_file: testcode]
                                                        NAME Proto 6 [source_file: testcode]
                                        BLOCK 7 [source_file: testcode]
                                        BLOCK 7 [source_file: testcode]
                                            EXPR_RESULT 8 [source_file: testcode]
                                                ASSIGN 8 [source_file: testcode]
                                                    NAME action 8 [source_file: testcode]
                                                    NAME proto 8 [source_file: testcode]
                                FALSE 11 [source_file: testcode]
                        EXPR_RESULT 12 [source_file: testcode]
                            CALL 12 [free_call: 1] [source_file: testcode]
                                NAME alert 12 [source_file: testcode]
                                NAME action 12 [source_file: testcode]


Subtree1: BLOCK 7 [source_file: expected0]
    EXPR_RESULT 8 [source_file: expected0]
        ASSIGN 8 [source_file: expected0]
            NAME action 8 [source_file: expected0]
            NAME proto 8 [source_file: expected0]
    CONTINUE 9 [source_file: expected0]
        LABEL_NAME a 9 [source_file: expected0]


Subtree2: BLOCK 7 [source_file: testcode]
    EXPR_RESULT 8 [source_file: testcode]
        ASSIGN 8 [source_file: testcode]
            NAME action 8 [source_file: testcode]
            NAME proto 8 [source_file: testcode]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:928)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:460)
~ testDontRemoveBreakInTryFinallySwitch(com.google.javascript.jscomp.UnreachableCodeEliminationTest)
[
Expected: function f(){b:try{throw 9;}finally{switch(x){case 1:break b}}return 1}
Result: function f(){b:try{throw 9;}finally{switch(x){case 1:}}return 1}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION f 1 [source_file: expected0]
            NAME f 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                LABEL 1 [source_file: expected0]
                    LABEL_NAME b 1 [source_file: expected0]
                    TRY 1 [source_file: expected0]
                        BLOCK 1 [source_file: expected0]
                            THROW 1 [source_file: expected0]
                                NUMBER 9.0 1 [source_file: expected0]
                        BLOCK 1 [source_file: expected0]
                        BLOCK 1 [source_file: expected0]
                            SWITCH 1 [source_file: expected0]
                                NAME x 1 [source_file: expected0]
                                CASE 1 [source_file: expected0]
                                    NUMBER 1.0 1 [source_file: expected0]
                                    BLOCK 1 [synthetic: 1] [source_file: expected0]
                                        BREAK 1 [source_file: expected0]
                                            LABEL_NAME b 1 [source_file: expected0]
                RETURN 1 [source_file: expected0]
                    NUMBER 1.0 1 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION f 1 [source_file: testcode]
            NAME f 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                LABEL 1 [source_file: testcode]
                    LABEL_NAME b 1 [source_file: testcode]
                    TRY 1 [source_file: testcode]
                        BLOCK 1 [source_file: testcode]
                            THROW 1 [source_file: testcode]
                                NUMBER 9.0 1 [source_file: testcode]
                        BLOCK 1 [source_file: testcode]
                        BLOCK 1 [source_file: testcode]
                            SWITCH 1 [source_file: testcode]
                                NAME x 1 [source_file: testcode]
                                CASE 1 [source_file: testcode]
                                    NUMBER 1.0 1 [source_file: testcode]
                                    BLOCK 1 [synthetic: 1] [source_file: testcode]
                RETURN 1 [source_file: testcode]
                    NUMBER 1.0 1 [source_file: testcode]


Subtree1: BLOCK 1 [synthetic: 1] [source_file: expected0]
    BREAK 1 [source_file: expected0]
        LABEL_NAME b 1 [source_file: expected0]


Subtree2: BLOCK 1 [synthetic: 1] [source_file: testcode]
]
junit.framework.AssertionFailedError: 
Expected: function f(){b:try{throw 9;}finally{switch(x){case 1:break b}}return 1}
Result: function f(){b:try{throw 9;}finally{switch(x){case 1:}}return 1}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION f 1 [source_file: expected0]
            NAME f 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                LABEL 1 [source_file: expected0]
                    LABEL_NAME b 1 [source_file: expected0]
                    TRY 1 [source_file: expected0]
                        BLOCK 1 [source_file: expected0]
                            THROW 1 [source_file: expected0]
                                NUMBER 9.0 1 [source_file: expected0]
                        BLOCK 1 [source_file: expected0]
                        BLOCK 1 [source_file: expected0]
                            SWITCH 1 [source_file: expected0]
                                NAME x 1 [source_file: expected0]
                                CASE 1 [source_file: expected0]
                                    NUMBER 1.0 1 [source_file: expected0]
                                    BLOCK 1 [synthetic: 1] [source_file: expected0]
                                        BREAK 1 [source_file: expected0]
                                            LABEL_NAME b 1 [source_file: expected0]
                RETURN 1 [source_file: expected0]
                    NUMBER 1.0 1 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION f 1 [source_file: testcode]
            NAME f 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                LABEL 1 [source_file: testcode]
                    LABEL_NAME b 1 [source_file: testcode]
                    TRY 1 [source_file: testcode]
                        BLOCK 1 [source_file: testcode]
                            THROW 1 [source_file: testcode]
                                NUMBER 9.0 1 [source_file: testcode]
                        BLOCK 1 [source_file: testcode]
                        BLOCK 1 [source_file: testcode]
                            SWITCH 1 [source_file: testcode]
                                NAME x 1 [source_file: testcode]
                                CASE 1 [source_file: testcode]
                                    NUMBER 1.0 1 [source_file: testcode]
                                    BLOCK 1 [synthetic: 1] [source_file: testcode]
                RETURN 1 [source_file: testcode]
                    NUMBER 1.0 1 [source_file: testcode]


Subtree1: BLOCK 1 [synthetic: 1] [source_file: expected0]
    BREAK 1 [source_file: expected0]
        LABEL_NAME b 1 [source_file: expected0]


Subtree2: BLOCK 1 [synthetic: 1] [source_file: testcode]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:928)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:460)
~ testIssue4177428a(com.google.javascript.jscomp.UnreachableCodeEliminationTest)
[
Expected: f=function(){var action;a:{var proto=null;try{proto=new Proto}finally{action=proto;break a}}alert(action)}
Result: f=function(){var action;a:{var proto=null;try{proto=new Proto}finally{action=proto}}alert(action)}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            ASSIGN 1 [source_file: expected0]
                NAME f 1 [source_file: expected0]
                FUNCTION  1 [source_file: expected0]
                    NAME  1 [source_file: expected0]
                    PARAM_LIST 1 [source_file: expected0]
                    BLOCK 1 [source_file: expected0]
                        VAR 2 [source_file: expected0]
                            NAME action 2 [source_file: expected0]
                        LABEL 3 [source_file: expected0]
                            LABEL_NAME a 3 [source_file: expected0]
                            BLOCK 3 [source_file: expected0]
                                VAR 4 [source_file: expected0]
                                    NAME proto 4 [source_file: expected0]
                                        NULL 4 [source_file: expected0]
                                TRY 5 [source_file: expected0]
                                    BLOCK 5 [source_file: expected0]
                                        EXPR_RESULT 6 [source_file: expected0]
                                            ASSIGN 6 [source_file: expected0]
                                                NAME proto 6 [source_file: expected0]
                                                NEW 6 [source_file: expected0]
                                                    NAME Proto 6 [source_file: expected0]
                                    BLOCK 7 [source_file: expected0]
                                    BLOCK 7 [source_file: expected0]
                                        EXPR_RESULT 8 [source_file: expected0]
                                            ASSIGN 8 [source_file: expected0]
                                                NAME action 8 [source_file: expected0]
                                                NAME proto 8 [source_file: expected0]
                                        BREAK 9 [source_file: expected0]
                                            LABEL_NAME a 9 [source_file: expected0]
                        EXPR_RESULT 12 [source_file: expected0]
                            CALL 12 [free_call: 1] [source_file: expected0]
                                NAME alert 12 [source_file: expected0]
                                NAME action 12 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        EXPR_RESULT 1 [source_file: testcode]
            ASSIGN 1 [source_file: testcode]
                NAME f 1 [source_file: testcode]
                FUNCTION  1 [source_file: testcode]
                    NAME  1 [source_file: testcode]
                    PARAM_LIST 1 [source_file: testcode]
                    BLOCK 1 [source_file: testcode]
                        VAR 2 [source_file: testcode]
                            NAME action 2 [source_file: testcode]
                        LABEL 3 [source_file: testcode]
                            LABEL_NAME a 3 [source_file: testcode]
                            BLOCK 3 [source_file: testcode]
                                VAR 4 [source_file: testcode]
                                    NAME proto 4 [source_file: testcode]
                                        NULL 4 [source_file: testcode]
                                TRY 5 [source_file: testcode]
                                    BLOCK 5 [source_file: testcode]
                                        EXPR_RESULT 6 [source_file: testcode]
                                            ASSIGN 6 [source_file: testcode]
                                                NAME proto 6 [source_file: testcode]
                                                NEW 6 [source_file: testcode]
                                                    NAME Proto 6 [source_file: testcode]
                                    BLOCK 7 [source_file: testcode]
                                    BLOCK 7 [source_file: testcode]
                                        EXPR_RESULT 8 [source_file: testcode]
                                            ASSIGN 8 [source_file: testcode]
                                                NAME action 8 [source_file: testcode]
                                                NAME proto 8 [source_file: testcode]
                        EXPR_RESULT 12 [source_file: testcode]
                            CALL 12 [free_call: 1] [source_file: testcode]
                                NAME alert 12 [source_file: testcode]
                                NAME action 12 [source_file: testcode]


Subtree1: BLOCK 7 [source_file: expected0]
    EXPR_RESULT 8 [source_file: expected0]
        ASSIGN 8 [source_file: expected0]
            NAME action 8 [source_file: expected0]
            NAME proto 8 [source_file: expected0]
    BREAK 9 [source_file: expected0]
        LABEL_NAME a 9 [source_file: expected0]


Subtree2: BLOCK 7 [source_file: testcode]
    EXPR_RESULT 8 [source_file: testcode]
        ASSIGN 8 [source_file: testcode]
            NAME action 8 [source_file: testcode]
            NAME proto 8 [source_file: testcode]
]
junit.framework.AssertionFailedError: 
Expected: f=function(){var action;a:{var proto=null;try{proto=new Proto}finally{action=proto;break a}}alert(action)}
Result: f=function(){var action;a:{var proto=null;try{proto=new Proto}finally{action=proto}}alert(action)}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            ASSIGN 1 [source_file: expected0]
                NAME f 1 [source_file: expected0]
                FUNCTION  1 [source_file: expected0]
                    NAME  1 [source_file: expected0]
                    PARAM_LIST 1 [source_file: expected0]
                    BLOCK 1 [source_file: expected0]
                        VAR 2 [source_file: expected0]
                            NAME action 2 [source_file: expected0]
                        LABEL 3 [source_file: expected0]
                            LABEL_NAME a 3 [source_file: expected0]
                            BLOCK 3 [source_file: expected0]
                                VAR 4 [source_file: expected0]
                                    NAME proto 4 [source_file: expected0]
                                        NULL 4 [source_file: expected0]
                                TRY 5 [source_file: expected0]
                                    BLOCK 5 [source_file: expected0]
                                        EXPR_RESULT 6 [source_file: expected0]
                                            ASSIGN 6 [source_file: expected0]
                                                NAME proto 6 [source_file: expected0]
                                                NEW 6 [source_file: expected0]
                                                    NAME Proto 6 [source_file: expected0]
                                    BLOCK 7 [source_file: expected0]
                                    BLOCK 7 [source_file: expected0]
                                        EXPR_RESULT 8 [source_file: expected0]
                                            ASSIGN 8 [source_file: expected0]
                                                NAME action 8 [source_file: expected0]
                                                NAME proto 8 [source_file: expected0]
                                        BREAK 9 [source_file: expected0]
                                            LABEL_NAME a 9 [source_file: expected0]
                        EXPR_RESULT 12 [source_file: expected0]
                            CALL 12 [free_call: 1] [source_file: expected0]
                                NAME alert 12 [source_file: expected0]
                                NAME action 12 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        EXPR_RESULT 1 [source_file: testcode]
            ASSIGN 1 [source_file: testcode]
                NAME f 1 [source_file: testcode]
                FUNCTION  1 [source_file: testcode]
                    NAME  1 [source_file: testcode]
                    PARAM_LIST 1 [source_file: testcode]
                    BLOCK 1 [source_file: testcode]
                        VAR 2 [source_file: testcode]
                            NAME action 2 [source_file: testcode]
                        LABEL 3 [source_file: testcode]
                            LABEL_NAME a 3 [source_file: testcode]
                            BLOCK 3 [source_file: testcode]
                                VAR 4 [source_file: testcode]
                                    NAME proto 4 [source_file: testcode]
                                        NULL 4 [source_file: testcode]
                                TRY 5 [source_file: testcode]
                                    BLOCK 5 [source_file: testcode]
                                        EXPR_RESULT 6 [source_file: testcode]
                                            ASSIGN 6 [source_file: testcode]
                                                NAME proto 6 [source_file: testcode]
                                                NEW 6 [source_file: testcode]
                                                    NAME Proto 6 [source_file: testcode]
                                    BLOCK 7 [source_file: testcode]
                                    BLOCK 7 [source_file: testcode]
                                        EXPR_RESULT 8 [source_file: testcode]
                                            ASSIGN 8 [source_file: testcode]
                                                NAME action 8 [source_file: testcode]
                                                NAME proto 8 [source_file: testcode]
                        EXPR_RESULT 12 [source_file: testcode]
                            CALL 12 [free_call: 1] [source_file: testcode]
                                NAME alert 12 [source_file: testcode]
                                NAME action 12 [source_file: testcode]


Subtree1: BLOCK 7 [source_file: expected0]
    EXPR_RESULT 8 [source_file: expected0]
        ASSIGN 8 [source_file: expected0]
            NAME action 8 [source_file: expected0]
            NAME proto 8 [source_file: expected0]
    BREAK 9 [source_file: expected0]
        LABEL_NAME a 9 [source_file: expected0]


Subtree2: BLOCK 7 [source_file: testcode]
    EXPR_RESULT 8 [source_file: testcode]
        ASSIGN 8 [source_file: testcode]
            NAME action 8 [source_file: testcode]
            NAME proto 8 [source_file: testcode]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:928)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:460)
~ testIssue4177428c(com.google.javascript.jscomp.UnreachableCodeEliminationTest)
[
Expected: f=function(){var action;a:{var proto=null;try{}finally{try{proto=new Proto}finally{action=proto;break a}}}alert(action)}
Result: f=function(){var action;a:{var proto=null;try{}finally{try{proto=new Proto}finally{action=proto}}}alert(action)}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            ASSIGN 1 [source_file: expected0]
                NAME f 1 [source_file: expected0]
                FUNCTION  1 [source_file: expected0]
                    NAME  1 [source_file: expected0]
                    PARAM_LIST 1 [source_file: expected0]
                    BLOCK 1 [source_file: expected0]
                        VAR 2 [source_file: expected0]
                            NAME action 2 [source_file: expected0]
                        LABEL 3 [source_file: expected0]
                            LABEL_NAME a 3 [source_file: expected0]
                            BLOCK 3 [source_file: expected0]
                                VAR 4 [source_file: expected0]
                                    NAME proto 4 [source_file: expected0]
                                        NULL 4 [source_file: expected0]
                                TRY 5 [source_file: expected0]
                                    BLOCK 5 [source_file: expected0]
                                    BLOCK 6 [source_file: expected0]
                                    BLOCK 6 [source_file: expected0]
                                        TRY 7 [source_file: expected0]
                                            BLOCK 7 [source_file: expected0]
                                                EXPR_RESULT 8 [source_file: expected0]
                                                    ASSIGN 8 [source_file: expected0]
                                                        NAME proto 8 [source_file: expected0]
                                                        NEW 8 [source_file: expected0]
                                                            NAME Proto 8 [source_file: expected0]
                                            BLOCK 9 [source_file: expected0]
                                            BLOCK 9 [source_file: expected0]
                                                EXPR_RESULT 10 [source_file: expected0]
                                                    ASSIGN 10 [source_file: expected0]
                                                        NAME action 10 [source_file: expected0]
                                                        NAME proto 10 [source_file: expected0]
                                                BREAK 11 [source_file: expected0]
                                                    LABEL_NAME a 11 [source_file: expected0]
                        EXPR_RESULT 15 [source_file: expected0]
                            CALL 15 [free_call: 1] [source_file: expected0]
                                NAME alert 15 [source_file: expected0]
                                NAME action 15 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        EXPR_RESULT 1 [source_file: testcode]
            ASSIGN 1 [source_file: testcode]
                NAME f 1 [source_file: testcode]
                FUNCTION  1 [source_file: testcode]
                    NAME  1 [source_file: testcode]
                    PARAM_LIST 1 [source_file: testcode]
                    BLOCK 1 [source_file: testcode]
                        VAR 2 [source_file: testcode]
                            NAME action 2 [source_file: testcode]
                        LABEL 3 [source_file: testcode]
                            LABEL_NAME a 3 [source_file: testcode]
                            BLOCK 3 [source_file: testcode]
                                VAR 4 [source_file: testcode]
                                    NAME proto 4 [source_file: testcode]
                                        NULL 4 [source_file: testcode]
                                TRY 5 [source_file: testcode]
                                    BLOCK 5 [source_file: testcode]
                                    BLOCK 6 [source_file: testcode]
                                    BLOCK 6 [source_file: testcode]
                                        TRY 7 [source_file: testcode]
                                            BLOCK 7 [source_file: testcode]
                                                EXPR_RESULT 8 [source_file: testcode]
                                                    ASSIGN 8 [source_file: testcode]
                                                        NAME proto 8 [source_file: testcode]
                                                        NEW 8 [source_file: testcode]
                                                            NAME Proto 8 [source_file: testcode]
                                            BLOCK 9 [source_file: testcode]
                                            BLOCK 9 [source_file: testcode]
                                                EXPR_RESULT 10 [source_file: testcode]
                                                    ASSIGN 10 [source_file: testcode]
                                                        NAME action 10 [source_file: testcode]
                                                        NAME proto 10 [source_file: testcode]
                        EXPR_RESULT 15 [source_file: testcode]
                            CALL 15 [free_call: 1] [source_file: testcode]
                                NAME alert 15 [source_file: testcode]
                                NAME action 15 [source_file: testcode]


Subtree1: BLOCK 9 [source_file: expected0]
    EXPR_RESULT 10 [source_file: expected0]
        ASSIGN 10 [source_file: expected0]
            NAME action 10 [source_file: expected0]
            NAME proto 10 [source_file: expected0]
    BREAK 11 [source_file: expected0]
        LABEL_NAME a 11 [source_file: expected0]


Subtree2: BLOCK 9 [source_file: testcode]
    EXPR_RESULT 10 [source_file: testcode]
        ASSIGN 10 [source_file: testcode]
            NAME action 10 [source_file: testcode]
            NAME proto 10 [source_file: testcode]
]
junit.framework.AssertionFailedError: 
Expected: f=function(){var action;a:{var proto=null;try{}finally{try{proto=new Proto}finally{action=proto;break a}}}alert(action)}
Result: f=function(){var action;a:{var proto=null;try{}finally{try{proto=new Proto}finally{action=proto}}}alert(action)}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            ASSIGN 1 [source_file: expected0]
                NAME f 1 [source_file: expected0]
                FUNCTION  1 [source_file: expected0]
                    NAME  1 [source_file: expected0]
                    PARAM_LIST 1 [source_file: expected0]
                    BLOCK 1 [source_file: expected0]
                        VAR 2 [source_file: expected0]
                            NAME action 2 [source_file: expected0]
                        LABEL 3 [source_file: expected0]
                            LABEL_NAME a 3 [source_file: expected0]
                            BLOCK 3 [source_file: expected0]
                                VAR 4 [source_file: expected0]
                                    NAME proto 4 [source_file: expected0]
                                        NULL 4 [source_file: expected0]
                                TRY 5 [source_file: expected0]
                                    BLOCK 5 [source_file: expected0]
                                    BLOCK 6 [source_file: expected0]
                                    BLOCK 6 [source_file: expected0]
                                        TRY 7 [source_file: expected0]
                                            BLOCK 7 [source_file: expected0]
                                                EXPR_RESULT 8 [source_file: expected0]
                                                    ASSIGN 8 [source_file: expected0]
                                                        NAME proto 8 [source_file: expected0]
                                                        NEW 8 [source_file: expected0]
                                                            NAME Proto 8 [source_file: expected0]
                                            BLOCK 9 [source_file: expected0]
                                            BLOCK 9 [source_file: expected0]
                                                EXPR_RESULT 10 [source_file: expected0]
                                                    ASSIGN 10 [source_file: expected0]
                                                        NAME action 10 [source_file: expected0]
                                                        NAME proto 10 [source_file: expected0]
                                                BREAK 11 [source_file: expected0]
                                                    LABEL_NAME a 11 [source_file: expected0]
                        EXPR_RESULT 15 [source_file: expected0]
                            CALL 15 [free_call: 1] [source_file: expected0]
                                NAME alert 15 [source_file: expected0]
                                NAME action 15 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        EXPR_RESULT 1 [source_file: testcode]
            ASSIGN 1 [source_file: testcode]
                NAME f 1 [source_file: testcode]
                FUNCTION  1 [source_file: testcode]
                    NAME  1 [source_file: testcode]
                    PARAM_LIST 1 [source_file: testcode]
                    BLOCK 1 [source_file: testcode]
                        VAR 2 [source_file: testcode]
                            NAME action 2 [source_file: testcode]
                        LABEL 3 [source_file: testcode]
                            LABEL_NAME a 3 [source_file: testcode]
                            BLOCK 3 [source_file: testcode]
                                VAR 4 [source_file: testcode]
                                    NAME proto 4 [source_file: testcode]
                                        NULL 4 [source_file: testcode]
                                TRY 5 [source_file: testcode]
                                    BLOCK 5 [source_file: testcode]
                                    BLOCK 6 [source_file: testcode]
                                    BLOCK 6 [source_file: testcode]
                                        TRY 7 [source_file: testcode]
                                            BLOCK 7 [source_file: testcode]
                                                EXPR_RESULT 8 [source_file: testcode]
                                                    ASSIGN 8 [source_file: testcode]
                                                        NAME proto 8 [source_file: testcode]
                                                        NEW 8 [source_file: testcode]
                                                            NAME Proto 8 [source_file: testcode]
                                            BLOCK 9 [source_file: testcode]
                                            BLOCK 9 [source_file: testcode]
                                                EXPR_RESULT 10 [source_file: testcode]
                                                    ASSIGN 10 [source_file: testcode]
                                                        NAME action 10 [source_file: testcode]
                                                        NAME proto 10 [source_file: testcode]
                        EXPR_RESULT 15 [source_file: testcode]
                            CALL 15 [free_call: 1] [source_file: testcode]
                                NAME alert 15 [source_file: testcode]
                                NAME action 15 [source_file: testcode]


Subtree1: BLOCK 9 [source_file: expected0]
    EXPR_RESULT 10 [source_file: expected0]
        ASSIGN 10 [source_file: expected0]
            NAME action 10 [source_file: expected0]
            NAME proto 10 [source_file: expected0]
    BREAK 11 [source_file: expected0]
        LABEL_NAME a 11 [source_file: expected0]


Subtree2: BLOCK 9 [source_file: testcode]
    EXPR_RESULT 10 [source_file: testcode]
        ASSIGN 10 [source_file: testcode]
            NAME action 10 [source_file: testcode]
            NAME proto 10 [source_file: testcode]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:928)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:460)
~ testIssue4177428_return(com.google.javascript.jscomp.UnreachableCodeEliminationTest)
[
Expected: f=function(){var action;a:{var proto=null;try{proto=new Proto}finally{action=proto;return}}}
Result: f=function(){var action;a:{var proto=null;try{proto=new Proto}finally{action=proto}}}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            ASSIGN 1 [source_file: expected0]
                NAME f 1 [source_file: expected0]
                FUNCTION  1 [source_file: expected0]
                    NAME  1 [source_file: expected0]
                    PARAM_LIST 1 [source_file: expected0]
                    BLOCK 1 [source_file: expected0]
                        VAR 2 [source_file: expected0]
                            NAME action 2 [source_file: expected0]
                        LABEL 3 [source_file: expected0]
                            LABEL_NAME a 3 [source_file: expected0]
                            BLOCK 3 [source_file: expected0]
                                VAR 4 [source_file: expected0]
                                    NAME proto 4 [source_file: expected0]
                                        NULL 4 [source_file: expected0]
                                TRY 5 [source_file: expected0]
                                    BLOCK 5 [source_file: expected0]
                                        EXPR_RESULT 6 [source_file: expected0]
                                            ASSIGN 6 [source_file: expected0]
                                                NAME proto 6 [source_file: expected0]
                                                NEW 6 [source_file: expected0]
                                                    NAME Proto 6 [source_file: expected0]
                                    BLOCK 7 [source_file: expected0]
                                    BLOCK 7 [source_file: expected0]
                                        EXPR_RESULT 8 [source_file: expected0]
                                            ASSIGN 8 [source_file: expected0]
                                                NAME action 8 [source_file: expected0]
                                                NAME proto 8 [source_file: expected0]
                                        RETURN 9 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        EXPR_RESULT 1 [source_file: testcode]
            ASSIGN 1 [source_file: testcode]
                NAME f 1 [source_file: testcode]
                FUNCTION  1 [source_file: testcode]
                    NAME  1 [source_file: testcode]
                    PARAM_LIST 1 [source_file: testcode]
                    BLOCK 1 [source_file: testcode]
                        VAR 2 [source_file: testcode]
                            NAME action 2 [source_file: testcode]
                        LABEL 3 [source_file: testcode]
                            LABEL_NAME a 3 [source_file: testcode]
                            BLOCK 3 [source_file: testcode]
                                VAR 4 [source_file: testcode]
                                    NAME proto 4 [source_file: testcode]
                                        NULL 4 [source_file: testcode]
                                TRY 5 [source_file: testcode]
                                    BLOCK 5 [source_file: testcode]
                                        EXPR_RESULT 6 [source_file: testcode]
                                            ASSIGN 6 [source_file: testcode]
                                                NAME proto 6 [source_file: testcode]
                                                NEW 6 [source_file: testcode]
                                                    NAME Proto 6 [source_file: testcode]
                                    BLOCK 7 [source_file: testcode]
                                    BLOCK 7 [source_file: testcode]
                                        EXPR_RESULT 8 [source_file: testcode]
                                            ASSIGN 8 [source_file: testcode]
                                                NAME action 8 [source_file: testcode]
                                                NAME proto 8 [source_file: testcode]


Subtree1: BLOCK 7 [source_file: expected0]
    EXPR_RESULT 8 [source_file: expected0]
        ASSIGN 8 [source_file: expected0]
            NAME action 8 [source_file: expected0]
            NAME proto 8 [source_file: expected0]
    RETURN 9 [source_file: expected0]


Subtree2: BLOCK 7 [source_file: testcode]
    EXPR_RESULT 8 [source_file: testcode]
        ASSIGN 8 [source_file: testcode]
            NAME action 8 [source_file: testcode]
            NAME proto 8 [source_file: testcode]
]
junit.framework.AssertionFailedError: 
Expected: f=function(){var action;a:{var proto=null;try{proto=new Proto}finally{action=proto;return}}}
Result: f=function(){var action;a:{var proto=null;try{proto=new Proto}finally{action=proto}}}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            ASSIGN 1 [source_file: expected0]
                NAME f 1 [source_file: expected0]
                FUNCTION  1 [source_file: expected0]
                    NAME  1 [source_file: expected0]
                    PARAM_LIST 1 [source_file: expected0]
                    BLOCK 1 [source_file: expected0]
                        VAR 2 [source_file: expected0]
                            NAME action 2 [source_file: expected0]
                        LABEL 3 [source_file: expected0]
                            LABEL_NAME a 3 [source_file: expected0]
                            BLOCK 3 [source_file: expected0]
                                VAR 4 [source_file: expected0]
                                    NAME proto 4 [source_file: expected0]
                                        NULL 4 [source_file: expected0]
                                TRY 5 [source_file: expected0]
                                    BLOCK 5 [source_file: expected0]
                                        EXPR_RESULT 6 [source_file: expected0]
                                            ASSIGN 6 [source_file: expected0]
                                                NAME proto 6 [source_file: expected0]
                                                NEW 6 [source_file: expected0]
                                                    NAME Proto 6 [source_file: expected0]
                                    BLOCK 7 [source_file: expected0]
                                    BLOCK 7 [source_file: expected0]
                                        EXPR_RESULT 8 [source_file: expected0]
                                            ASSIGN 8 [source_file: expected0]
                                                NAME action 8 [source_file: expected0]
                                                NAME proto 8 [source_file: expected0]
                                        RETURN 9 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        EXPR_RESULT 1 [source_file: testcode]
            ASSIGN 1 [source_file: testcode]
                NAME f 1 [source_file: testcode]
                FUNCTION  1 [source_file: testcode]
                    NAME  1 [source_file: testcode]
                    PARAM_LIST 1 [source_file: testcode]
                    BLOCK 1 [source_file: testcode]
                        VAR 2 [source_file: testcode]
                            NAME action 2 [source_file: testcode]
                        LABEL 3 [source_file: testcode]
                            LABEL_NAME a 3 [source_file: testcode]
                            BLOCK 3 [source_file: testcode]
                                VAR 4 [source_file: testcode]
                                    NAME proto 4 [source_file: testcode]
                                        NULL 4 [source_file: testcode]
                                TRY 5 [source_file: testcode]
                                    BLOCK 5 [source_file: testcode]
                                        EXPR_RESULT 6 [source_file: testcode]
                                            ASSIGN 6 [source_file: testcode]
                                                NAME proto 6 [source_file: testcode]
                                                NEW 6 [source_file: testcode]
                                                    NAME Proto 6 [source_file: testcode]
                                    BLOCK 7 [source_file: testcode]
                                    BLOCK 7 [source_file: testcode]
                                        EXPR_RESULT 8 [source_file: testcode]
                                            ASSIGN 8 [source_file: testcode]
                                                NAME action 8 [source_file: testcode]
                                                NAME proto 8 [source_file: testcode]


Subtree1: BLOCK 7 [source_file: expected0]
    EXPR_RESULT 8 [source_file: expected0]
        ASSIGN 8 [source_file: expected0]
            NAME action 8 [source_file: expected0]
            NAME proto 8 [source_file: expected0]
    RETURN 9 [source_file: expected0]


Subtree2: BLOCK 7 [source_file: testcode]
    EXPR_RESULT 8 [source_file: testcode]
        ASSIGN 8 [source_file: testcode]
            NAME action 8 [source_file: testcode]
            NAME proto 8 [source_file: testcode]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:928)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:460)
~ testDontRemoveBreakInTryFinally(com.google.javascript.jscomp.UnreachableCodeEliminationTest)
[
Expected: function f(){b:try{throw 9;}finally{break b}return 1}
Result: function f(){b:try{throw 9;}finally{}return 1}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION f 1 [source_file: expected0]
            NAME f 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                LABEL 1 [source_file: expected0]
                    LABEL_NAME b 1 [source_file: expected0]
                    TRY 1 [source_file: expected0]
                        BLOCK 1 [source_file: expected0]
                            THROW 1 [source_file: expected0]
                                NUMBER 9.0 1 [source_file: expected0]
                        BLOCK 1 [source_file: expected0]
                        BLOCK 1 [source_file: expected0]
                            BREAK 1 [source_file: expected0]
                                LABEL_NAME b 1 [source_file: expected0]
                RETURN 1 [source_file: expected0]
                    NUMBER 1.0 1 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION f 1 [source_file: testcode]
            NAME f 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                LABEL 1 [source_file: testcode]
                    LABEL_NAME b 1 [source_file: testcode]
                    TRY 1 [source_file: testcode]
                        BLOCK 1 [source_file: testcode]
                            THROW 1 [source_file: testcode]
                                NUMBER 9.0 1 [source_file: testcode]
                        BLOCK 1 [source_file: testcode]
                        BLOCK 1 [source_file: testcode]
                RETURN 1 [source_file: testcode]
                    NUMBER 1.0 1 [source_file: testcode]


Subtree1: BLOCK 1 [source_file: expected0]
    BREAK 1 [source_file: expected0]
        LABEL_NAME b 1 [source_file: expected0]


Subtree2: BLOCK 1 [source_file: testcode]
]
junit.framework.AssertionFailedError: 
Expected: function f(){b:try{throw 9;}finally{break b}return 1}
Result: function f(){b:try{throw 9;}finally{}return 1}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION f 1 [source_file: expected0]
            NAME f 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                LABEL 1 [source_file: expected0]
                    LABEL_NAME b 1 [source_file: expected0]
                    TRY 1 [source_file: expected0]
                        BLOCK 1 [source_file: expected0]
                            THROW 1 [source_file: expected0]
                                NUMBER 9.0 1 [source_file: expected0]
                        BLOCK 1 [source_file: expected0]
                        BLOCK 1 [source_file: expected0]
                            BREAK 1 [source_file: expected0]
                                LABEL_NAME b 1 [source_file: expected0]
                RETURN 1 [source_file: expected0]
                    NUMBER 1.0 1 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION f 1 [source_file: testcode]
            NAME f 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                LABEL 1 [source_file: testcode]
                    LABEL_NAME b 1 [source_file: testcode]
                    TRY 1 [source_file: testcode]
                        BLOCK 1 [source_file: testcode]
                            THROW 1 [source_file: testcode]
                                NUMBER 9.0 1 [source_file: testcode]
                        BLOCK 1 [source_file: testcode]
                        BLOCK 1 [source_file: testcode]
                RETURN 1 [source_file: testcode]
                    NUMBER 1.0 1 [source_file: testcode]


Subtree1: BLOCK 1 [source_file: expected0]
    BREAK 1 [source_file: expected0]
        LABEL_NAME b 1 [source_file: expected0]


Subtree2: BLOCK 1 [source_file: testcode]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:928)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:460)
~ testIssue4177428_continue(com.google.javascript.jscomp.UnreachableCodeEliminationTest)
[
Expected: f=function(){var action;a:do{var proto=null;try{proto=new Proto}finally{action=proto;continue a}}while(false);alert(action)}
Result: f=function(){var action;a:do{var proto=null;try{proto=new Proto}finally{action=proto}}while(false);alert(action)}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            ASSIGN 1 [source_file: expected0]
                NAME f 1 [source_file: expected0]
                FUNCTION  1 [source_file: expected0]
                    NAME  1 [source_file: expected0]
                    PARAM_LIST 1 [source_file: expected0]
                    BLOCK 1 [source_file: expected0]
                        VAR 2 [source_file: expected0]
                            NAME action 2 [source_file: expected0]
                        LABEL 3 [source_file: expected0]
                            LABEL_NAME a 3 [source_file: expected0]
                            DO 3 [source_file: expected0]
                                BLOCK 3 [source_file: expected0]
                                    VAR 4 [source_file: expected0]
                                        NAME proto 4 [source_file: expected0]
                                            NULL 4 [source_file: expected0]
                                    TRY 5 [source_file: expected0]
                                        BLOCK 5 [source_file: expected0]
                                            EXPR_RESULT 6 [source_file: expected0]
                                                ASSIGN 6 [source_file: expected0]
                                                    NAME proto 6 [source_file: expected0]
                                                    NEW 6 [source_file: expected0]
                                                        NAME Proto 6 [source_file: expected0]
                                        BLOCK 7 [source_file: expected0]
                                        BLOCK 7 [source_file: expected0]
                                            EXPR_RESULT 8 [source_file: expected0]
                                                ASSIGN 8 [source_file: expected0]
                                                    NAME action 8 [source_file: expected0]
                                                    NAME proto 8 [source_file: expected0]
                                            CONTINUE 9 [source_file: expected0]
                                                LABEL_NAME a 9 [source_file: expected0]
                                FALSE 11 [source_file: expected0]
                        EXPR_RESULT 12 [source_file: expected0]
                            CALL 12 [free_call: 1] [source_file: expected0]
                                NAME alert 12 [source_file: expected0]
                                NAME action 12 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        EXPR_RESULT 1 [source_file: testcode]
            ASSIGN 1 [source_file: testcode]
                NAME f 1 [source_file: testcode]
                FUNCTION  1 [source_file: testcode]
                    NAME  1 [source_file: testcode]
                    PARAM_LIST 1 [source_file: testcode]
                    BLOCK 1 [source_file: testcode]
                        VAR 2 [source_file: testcode]
                            NAME action 2 [source_file: testcode]
                        LABEL 3 [source_file: testcode]
                            LABEL_NAME a 3 [source_file: testcode]
                            DO 3 [source_file: testcode]
                                BLOCK 3 [source_file: testcode]
                                    VAR 4 [source_file: testcode]
                                        NAME proto 4 [source_file: testcode]
                                            NULL 4 [source_file: testcode]
                                    TRY 5 [source_file: testcode]
                                        BLOCK 5 [source_file: testcode]
                                            EXPR_RESULT 6 [source_file: testcode]
                                                ASSIGN 6 [source_file: testcode]
                                                    NAME proto 6 [source_file: testcode]
                                                    NEW 6 [source_file: testcode]
                                                        NAME Proto 6 [source_file: testcode]
                                        BLOCK 7 [source_file: testcode]
                                        BLOCK 7 [source_file: testcode]
                                            EXPR_RESULT 8 [source_file: testcode]
                                                ASSIGN 8 [source_file: testcode]
                                                    NAME action 8 [source_file: testcode]
                                                    NAME proto 8 [source_file: testcode]
                                FALSE 11 [source_file: testcode]
                        EXPR_RESULT 12 [source_file: testcode]
                            CALL 12 [free_call: 1] [source_file: testcode]
                                NAME alert 12 [source_file: testcode]
                                NAME action 12 [source_file: testcode]


Subtree1: BLOCK 7 [source_file: expected0]
    EXPR_RESULT 8 [source_file: expected0]
        ASSIGN 8 [source_file: expected0]
            NAME action 8 [source_file: expected0]
            NAME proto 8 [source_file: expected0]
    CONTINUE 9 [source_file: expected0]
        LABEL_NAME a 9 [source_file: expected0]


Subtree2: BLOCK 7 [source_file: testcode]
    EXPR_RESULT 8 [source_file: testcode]
        ASSIGN 8 [source_file: testcode]
            NAME action 8 [source_file: testcode]
            NAME proto 8 [source_file: testcode]
]
junit.framework.AssertionFailedError: 
Expected: f=function(){var action;a:do{var proto=null;try{proto=new Proto}finally{action=proto;continue a}}while(false);alert(action)}
Result: f=function(){var action;a:do{var proto=null;try{proto=new Proto}finally{action=proto}}while(false);alert(action)}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            ASSIGN 1 [source_file: expected0]
                NAME f 1 [source_file: expected0]
                FUNCTION  1 [source_file: expected0]
                    NAME  1 [source_file: expected0]
                    PARAM_LIST 1 [source_file: expected0]
                    BLOCK 1 [source_file: expected0]
                        VAR 2 [source_file: expected0]
                            NAME action 2 [source_file: expected0]
                        LABEL 3 [source_file: expected0]
                            LABEL_NAME a 3 [source_file: expected0]
                            DO 3 [source_file: expected0]
                                BLOCK 3 [source_file: expected0]
                                    VAR 4 [source_file: expected0]
                                        NAME proto 4 [source_file: expected0]
                                            NULL 4 [source_file: expected0]
                                    TRY 5 [source_file: expected0]
                                        BLOCK 5 [source_file: expected0]
                                            EXPR_RESULT 6 [source_file: expected0]
                                                ASSIGN 6 [source_file: expected0]
                                                    NAME proto 6 [source_file: expected0]
                                                    NEW 6 [source_file: expected0]
                                                        NAME Proto 6 [source_file: expected0]
                                        BLOCK 7 [source_file: expected0]
                                        BLOCK 7 [source_file: expected0]
                                            EXPR_RESULT 8 [source_file: expected0]
                                                ASSIGN 8 [source_file: expected0]
                                                    NAME action 8 [source_file: expected0]
                                                    NAME proto 8 [source_file: expected0]
                                            CONTINUE 9 [source_file: expected0]
                                                LABEL_NAME a 9 [source_file: expected0]
                                FALSE 11 [source_file: expected0]
                        EXPR_RESULT 12 [source_file: expected0]
                            CALL 12 [free_call: 1] [source_file: expected0]
                                NAME alert 12 [source_file: expected0]
                                NAME action 12 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        EXPR_RESULT 1 [source_file: testcode]
            ASSIGN 1 [source_file: testcode]
                NAME f 1 [source_file: testcode]
                FUNCTION  1 [source_file: testcode]
                    NAME  1 [source_file: testcode]
                    PARAM_LIST 1 [source_file: testcode]
                    BLOCK 1 [source_file: testcode]
                        VAR 2 [source_file: testcode]
                            NAME action 2 [source_file: testcode]
                        LABEL 3 [source_file: testcode]
                            LABEL_NAME a 3 [source_file: testcode]
                            DO 3 [source_file: testcode]
                                BLOCK 3 [source_file: testcode]
                                    VAR 4 [source_file: testcode]
                                        NAME proto 4 [source_file: testcode]
                                            NULL 4 [source_file: testcode]
                                    TRY 5 [source_file: testcode]
                                        BLOCK 5 [source_file: testcode]
                                            EXPR_RESULT 6 [source_file: testcode]
                                                ASSIGN 6 [source_file: testcode]
                                                    NAME proto 6 [source_file: testcode]
                                                    NEW 6 [source_file: testcode]
                                                        NAME Proto 6 [source_file: testcode]
                                        BLOCK 7 [source_file: testcode]
                                        BLOCK 7 [source_file: testcode]
                                            EXPR_RESULT 8 [source_file: testcode]
                                                ASSIGN 8 [source_file: testcode]
                                                    NAME action 8 [source_file: testcode]
                                                    NAME proto 8 [source_file: testcode]
                                FALSE 11 [source_file: testcode]
                        EXPR_RESULT 12 [source_file: testcode]
                            CALL 12 [free_call: 1] [source_file: testcode]
                                NAME alert 12 [source_file: testcode]
                                NAME action 12 [source_file: testcode]


Subtree1: BLOCK 7 [source_file: expected0]
    EXPR_RESULT 8 [source_file: expected0]
        ASSIGN 8 [source_file: expected0]
            NAME action 8 [source_file: expected0]
            NAME proto 8 [source_file: expected0]
    CONTINUE 9 [source_file: expected0]
        LABEL_NAME a 9 [source_file: expected0]


Subtree2: BLOCK 7 [source_file: testcode]
    EXPR_RESULT 8 [source_file: testcode]
        ASSIGN 8 [source_file: testcode]
            NAME action 8 [source_file: testcode]
            NAME proto 8 [source_file: testcode]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:928)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:460)
~ testDontRemoveBreakInTryFinallySwitch(com.google.javascript.jscomp.UnreachableCodeEliminationTest)
[
Expected: function f(){b:try{throw 9;}finally{switch(x){case 1:break b}}return 1}
Result: function f(){b:try{throw 9;}finally{switch(x){case 1:}}return 1}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION f 1 [source_file: expected0]
            NAME f 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                LABEL 1 [source_file: expected0]
                    LABEL_NAME b 1 [source_file: expected0]
                    TRY 1 [source_file: expected0]
                        BLOCK 1 [source_file: expected0]
                            THROW 1 [source_file: expected0]
                                NUMBER 9.0 1 [source_file: expected0]
                        BLOCK 1 [source_file: expected0]
                        BLOCK 1 [source_file: expected0]
                            SWITCH 1 [source_file: expected0]
                                NAME x 1 [source_file: expected0]
                                CASE 1 [source_file: expected0]
                                    NUMBER 1.0 1 [source_file: expected0]
                                    BLOCK 1 [synthetic: 1] [source_file: expected0]
                                        BREAK 1 [source_file: expected0]
                                            LABEL_NAME b 1 [source_file: expected0]
                RETURN 1 [source_file: expected0]
                    NUMBER 1.0 1 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION f 1 [source_file: testcode]
            NAME f 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                LABEL 1 [source_file: testcode]
                    LABEL_NAME b 1 [source_file: testcode]
                    TRY 1 [source_file: testcode]
                        BLOCK 1 [source_file: testcode]
                            THROW 1 [source_file: testcode]
                                NUMBER 9.0 1 [source_file: testcode]
                        BLOCK 1 [source_file: testcode]
                        BLOCK 1 [source_file: testcode]
                            SWITCH 1 [source_file: testcode]
                                NAME x 1 [source_file: testcode]
                                CASE 1 [source_file: testcode]
                                    NUMBER 1.0 1 [source_file: testcode]
                                    BLOCK 1 [synthetic: 1] [source_file: testcode]
                RETURN 1 [source_file: testcode]
                    NUMBER 1.0 1 [source_file: testcode]


Subtree1: BLOCK 1 [synthetic: 1] [source_file: expected0]
    BREAK 1 [source_file: expected0]
        LABEL_NAME b 1 [source_file: expected0]


Subtree2: BLOCK 1 [synthetic: 1] [source_file: testcode]
]
junit.framework.AssertionFailedError: 
Expected: function f(){b:try{throw 9;}finally{switch(x){case 1:break b}}return 1}
Result: function f(){b:try{throw 9;}finally{switch(x){case 1:}}return 1}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION f 1 [source_file: expected0]
            NAME f 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                LABEL 1 [source_file: expected0]
                    LABEL_NAME b 1 [source_file: expected0]
                    TRY 1 [source_file: expected0]
                        BLOCK 1 [source_file: expected0]
                            THROW 1 [source_file: expected0]
                                NUMBER 9.0 1 [source_file: expected0]
                        BLOCK 1 [source_file: expected0]
                        BLOCK 1 [source_file: expected0]
                            SWITCH 1 [source_file: expected0]
                                NAME x 1 [source_file: expected0]
                                CASE 1 [source_file: expected0]
                                    NUMBER 1.0 1 [source_file: expected0]
                                    BLOCK 1 [synthetic: 1] [source_file: expected0]
                                        BREAK 1 [source_file: expected0]
                                            LABEL_NAME b 1 [source_file: expected0]
                RETURN 1 [source_file: expected0]
                    NUMBER 1.0 1 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION f 1 [source_file: testcode]
            NAME f 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                LABEL 1 [source_file: testcode]
                    LABEL_NAME b 1 [source_file: testcode]
                    TRY 1 [source_file: testcode]
                        BLOCK 1 [source_file: testcode]
                            THROW 1 [source_file: testcode]
                                NUMBER 9.0 1 [source_file: testcode]
                        BLOCK 1 [source_file: testcode]
                        BLOCK 1 [source_file: testcode]
                            SWITCH 1 [source_file: testcode]
                                NAME x 1 [source_file: testcode]
                                CASE 1 [source_file: testcode]
                                    NUMBER 1.0 1 [source_file: testcode]
                                    BLOCK 1 [synthetic: 1] [source_file: testcode]
                RETURN 1 [source_file: testcode]
                    NUMBER 1.0 1 [source_file: testcode]


Subtree1: BLOCK 1 [synthetic: 1] [source_file: expected0]
    BREAK 1 [source_file: expected0]
        LABEL_NAME b 1 [source_file: expected0]


Subtree2: BLOCK 1 [synthetic: 1] [source_file: testcode]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:928)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:460)
~ testIssue4177428a(com.google.javascript.jscomp.UnreachableCodeEliminationTest)
[
Expected: f=function(){var action;a:{var proto=null;try{proto=new Proto}finally{action=proto;break a}}alert(action)}
Result: f=function(){var action;a:{var proto=null;try{proto=new Proto}finally{action=proto}}alert(action)}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            ASSIGN 1 [source_file: expected0]
                NAME f 1 [source_file: expected0]
                FUNCTION  1 [source_file: expected0]
                    NAME  1 [source_file: expected0]
                    PARAM_LIST 1 [source_file: expected0]
                    BLOCK 1 [source_file: expected0]
                        VAR 2 [source_file: expected0]
                            NAME action 2 [source_file: expected0]
                        LABEL 3 [source_file: expected0]
                            LABEL_NAME a 3 [source_file: expected0]
                            BLOCK 3 [source_file: expected0]
                                VAR 4 [source_file: expected0]
                                    NAME proto 4 [source_file: expected0]
                                        NULL 4 [source_file: expected0]
                                TRY 5 [source_file: expected0]
                                    BLOCK 5 [source_file: expected0]
                                        EXPR_RESULT 6 [source_file: expected0]
                                            ASSIGN 6 [source_file: expected0]
                                                NAME proto 6 [source_file: expected0]
                                                NEW 6 [source_file: expected0]
                                                    NAME Proto 6 [source_file: expected0]
                                    BLOCK 7 [source_file: expected0]
                                    BLOCK 7 [source_file: expected0]
                                        EXPR_RESULT 8 [source_file: expected0]
                                            ASSIGN 8 [source_file: expected0]
                                                NAME action 8 [source_file: expected0]
                                                NAME proto 8 [source_file: expected0]
                                        BREAK 9 [source_file: expected0]
                                            LABEL_NAME a 9 [source_file: expected0]
                        EXPR_RESULT 12 [source_file: expected0]
                            CALL 12 [free_call: 1] [source_file: expected0]
                                NAME alert 12 [source_file: expected0]
                                NAME action 12 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        EXPR_RESULT 1 [source_file: testcode]
            ASSIGN 1 [source_file: testcode]
                NAME f 1 [source_file: testcode]
                FUNCTION  1 [source_file: testcode]
                    NAME  1 [source_file: testcode]
                    PARAM_LIST 1 [source_file: testcode]
                    BLOCK 1 [source_file: testcode]
                        VAR 2 [source_file: testcode]
                            NAME action 2 [source_file: testcode]
                        LABEL 3 [source_file: testcode]
                            LABEL_NAME a 3 [source_file: testcode]
                            BLOCK 3 [source_file: testcode]
                                VAR 4 [source_file: testcode]
                                    NAME proto 4 [source_file: testcode]
                                        NULL 4 [source_file: testcode]
                                TRY 5 [source_file: testcode]
                                    BLOCK 5 [source_file: testcode]
                                        EXPR_RESULT 6 [source_file: testcode]
                                            ASSIGN 6 [source_file: testcode]
                                                NAME proto 6 [source_file: testcode]
                                                NEW 6 [source_file: testcode]
                                                    NAME Proto 6 [source_file: testcode]
                                    BLOCK 7 [source_file: testcode]
                                    BLOCK 7 [source_file: testcode]
                                        EXPR_RESULT 8 [source_file: testcode]
                                            ASSIGN 8 [source_file: testcode]
                                                NAME action 8 [source_file: testcode]
                                                NAME proto 8 [source_file: testcode]
                        EXPR_RESULT 12 [source_file: testcode]
                            CALL 12 [free_call: 1] [source_file: testcode]
                                NAME alert 12 [source_file: testcode]
                                NAME action 12 [source_file: testcode]


Subtree1: BLOCK 7 [source_file: expected0]
    EXPR_RESULT 8 [source_file: expected0]
        ASSIGN 8 [source_file: expected0]
            NAME action 8 [source_file: expected0]
            NAME proto 8 [source_file: expected0]
    BREAK 9 [source_file: expected0]
        LABEL_NAME a 9 [source_file: expected0]


Subtree2: BLOCK 7 [source_file: testcode]
    EXPR_RESULT 8 [source_file: testcode]
        ASSIGN 8 [source_file: testcode]
            NAME action 8 [source_file: testcode]
            NAME proto 8 [source_file: testcode]
]
junit.framework.AssertionFailedError: 
Expected: f=function(){var action;a:{var proto=null;try{proto=new Proto}finally{action=proto;break a}}alert(action)}
Result: f=function(){var action;a:{var proto=null;try{proto=new Proto}finally{action=proto}}alert(action)}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            ASSIGN 1 [source_file: expected0]
                NAME f 1 [source_file: expected0]
                FUNCTION  1 [source_file: expected0]
                    NAME  1 [source_file: expected0]
                    PARAM_LIST 1 [source_file: expected0]
                    BLOCK 1 [source_file: expected0]
                        VAR 2 [source_file: expected0]
                            NAME action 2 [source_file: expected0]
                        LABEL 3 [source_file: expected0]
                            LABEL_NAME a 3 [source_file: expected0]
                            BLOCK 3 [source_file: expected0]
                                VAR 4 [source_file: expected0]
                                    NAME proto 4 [source_file: expected0]
                                        NULL 4 [source_file: expected0]
                                TRY 5 [source_file: expected0]
                                    BLOCK 5 [source_file: expected0]
                                        EXPR_RESULT 6 [source_file: expected0]
                                            ASSIGN 6 [source_file: expected0]
                                                NAME proto 6 [source_file: expected0]
                                                NEW 6 [source_file: expected0]
                                                    NAME Proto 6 [source_file: expected0]
                                    BLOCK 7 [source_file: expected0]
                                    BLOCK 7 [source_file: expected0]
                                        EXPR_RESULT 8 [source_file: expected0]
                                            ASSIGN 8 [source_file: expected0]
                                                NAME action 8 [source_file: expected0]
                                                NAME proto 8 [source_file: expected0]
                                        BREAK 9 [source_file: expected0]
                                            LABEL_NAME a 9 [source_file: expected0]
                        EXPR_RESULT 12 [source_file: expected0]
                            CALL 12 [free_call: 1] [source_file: expected0]
                                NAME alert 12 [source_file: expected0]
                                NAME action 12 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        EXPR_RESULT 1 [source_file: testcode]
            ASSIGN 1 [source_file: testcode]
                NAME f 1 [source_file: testcode]
                FUNCTION  1 [source_file: testcode]
                    NAME  1 [source_file: testcode]
                    PARAM_LIST 1 [source_file: testcode]
                    BLOCK 1 [source_file: testcode]
                        VAR 2 [source_file: testcode]
                            NAME action 2 [source_file: testcode]
                        LABEL 3 [source_file: testcode]
                            LABEL_NAME a 3 [source_file: testcode]
                            BLOCK 3 [source_file: testcode]
                                VAR 4 [source_file: testcode]
                                    NAME proto 4 [source_file: testcode]
                                        NULL 4 [source_file: testcode]
                                TRY 5 [source_file: testcode]
                                    BLOCK 5 [source_file: testcode]
                                        EXPR_RESULT 6 [source_file: testcode]
                                            ASSIGN 6 [source_file: testcode]
                                                NAME proto 6 [source_file: testcode]
                                                NEW 6 [source_file: testcode]
                                                    NAME Proto 6 [source_file: testcode]
                                    BLOCK 7 [source_file: testcode]
                                    BLOCK 7 [source_file: testcode]
                                        EXPR_RESULT 8 [source_file: testcode]
                                            ASSIGN 8 [source_file: testcode]
                                                NAME action 8 [source_file: testcode]
                                                NAME proto 8 [source_file: testcode]
                        EXPR_RESULT 12 [source_file: testcode]
                            CALL 12 [free_call: 1] [source_file: testcode]
                                NAME alert 12 [source_file: testcode]
                                NAME action 12 [source_file: testcode]


Subtree1: BLOCK 7 [source_file: expected0]
    EXPR_RESULT 8 [source_file: expected0]
        ASSIGN 8 [source_file: expected0]
            NAME action 8 [source_file: expected0]
            NAME proto 8 [source_file: expected0]
    BREAK 9 [source_file: expected0]
        LABEL_NAME a 9 [source_file: expected0]


Subtree2: BLOCK 7 [source_file: testcode]
    EXPR_RESULT 8 [source_file: testcode]
        ASSIGN 8 [source_file: testcode]
            NAME action 8 [source_file: testcode]
            NAME proto 8 [source_file: testcode]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:928)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:460)
~ testIssue4177428c(com.google.javascript.jscomp.UnreachableCodeEliminationTest)
[
Expected: f=function(){var action;a:{var proto=null;try{}finally{try{proto=new Proto}finally{action=proto;break a}}}alert(action)}
Result: f=function(){var action;a:{var proto=null;try{}finally{try{proto=new Proto}finally{action=proto}}}alert(action)}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            ASSIGN 1 [source_file: expected0]
                NAME f 1 [source_file: expected0]
                FUNCTION  1 [source_file: expected0]
                    NAME  1 [source_file: expected0]
                    PARAM_LIST 1 [source_file: expected0]
                    BLOCK 1 [source_file: expected0]
                        VAR 2 [source_file: expected0]
                            NAME action 2 [source_file: expected0]
                        LABEL 3 [source_file: expected0]
                            LABEL_NAME a 3 [source_file: expected0]
                            BLOCK 3 [source_file: expected0]
                                VAR 4 [source_file: expected0]
                                    NAME proto 4 [source_file: expected0]
                                        NULL 4 [source_file: expected0]
                                TRY 5 [source_file: expected0]
                                    BLOCK 5 [source_file: expected0]
                                    BLOCK 6 [source_file: expected0]
                                    BLOCK 6 [source_file: expected0]
                                        TRY 7 [source_file: expected0]
                                            BLOCK 7 [source_file: expected0]
                                                EXPR_RESULT 8 [source_file: expected0]
                                                    ASSIGN 8 [source_file: expected0]
                                                        NAME proto 8 [source_file: expected0]
                                                        NEW 8 [source_file: expected0]
                                                            NAME Proto 8 [source_file: expected0]
                                            BLOCK 9 [source_file: expected0]
                                            BLOCK 9 [source_file: expected0]
                                                EXPR_RESULT 10 [source_file: expected0]
                                                    ASSIGN 10 [source_file: expected0]
                                                        NAME action 10 [source_file: expected0]
                                                        NAME proto 10 [source_file: expected0]
                                                BREAK 11 [source_file: expected0]
                                                    LABEL_NAME a 11 [source_file: expected0]
                        EXPR_RESULT 15 [source_file: expected0]
                            CALL 15 [free_call: 1] [source_file: expected0]
                                NAME alert 15 [source_file: expected0]
                                NAME action 15 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        EXPR_RESULT 1 [source_file: testcode]
            ASSIGN 1 [source_file: testcode]
                NAME f 1 [source_file: testcode]
                FUNCTION  1 [source_file: testcode]
                    NAME  1 [source_file: testcode]
                    PARAM_LIST 1 [source_file: testcode]
                    BLOCK 1 [source_file: testcode]
                        VAR 2 [source_file: testcode]
                            NAME action 2 [source_file: testcode]
                        LABEL 3 [source_file: testcode]
                            LABEL_NAME a 3 [source_file: testcode]
                            BLOCK 3 [source_file: testcode]
                                VAR 4 [source_file: testcode]
                                    NAME proto 4 [source_file: testcode]
                                        NULL 4 [source_file: testcode]
                                TRY 5 [source_file: testcode]
                                    BLOCK 5 [source_file: testcode]
                                    BLOCK 6 [source_file: testcode]
                                    BLOCK 6 [source_file: testcode]
                                        TRY 7 [source_file: testcode]
                                            BLOCK 7 [source_file: testcode]
                                                EXPR_RESULT 8 [source_file: testcode]
                                                    ASSIGN 8 [source_file: testcode]
                                                        NAME proto 8 [source_file: testcode]
                                                        NEW 8 [source_file: testcode]
                                                            NAME Proto 8 [source_file: testcode]
                                            BLOCK 9 [source_file: testcode]
                                            BLOCK 9 [source_file: testcode]
                                                EXPR_RESULT 10 [source_file: testcode]
                                                    ASSIGN 10 [source_file: testcode]
                                                        NAME action 10 [source_file: testcode]
                                                        NAME proto 10 [source_file: testcode]
                        EXPR_RESULT 15 [source_file: testcode]
                            CALL 15 [free_call: 1] [source_file: testcode]
                                NAME alert 15 [source_file: testcode]
                                NAME action 15 [source_file: testcode]


Subtree1: BLOCK 9 [source_file: expected0]
    EXPR_RESULT 10 [source_file: expected0]
        ASSIGN 10 [source_file: expected0]
            NAME action 10 [source_file: expected0]
            NAME proto 10 [source_file: expected0]
    BREAK 11 [source_file: expected0]
        LABEL_NAME a 11 [source_file: expected0]


Subtree2: BLOCK 9 [source_file: testcode]
    EXPR_RESULT 10 [source_file: testcode]
        ASSIGN 10 [source_file: testcode]
            NAME action 10 [source_file: testcode]
            NAME proto 10 [source_file: testcode]
]
junit.framework.AssertionFailedError: 
Expected: f=function(){var action;a:{var proto=null;try{}finally{try{proto=new Proto}finally{action=proto;break a}}}alert(action)}
Result: f=function(){var action;a:{var proto=null;try{}finally{try{proto=new Proto}finally{action=proto}}}alert(action)}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            ASSIGN 1 [source_file: expected0]
                NAME f 1 [source_file: expected0]
                FUNCTION  1 [source_file: expected0]
                    NAME  1 [source_file: expected0]
                    PARAM_LIST 1 [source_file: expected0]
                    BLOCK 1 [source_file: expected0]
                        VAR 2 [source_file: expected0]
                            NAME action 2 [source_file: expected0]
                        LABEL 3 [source_file: expected0]
                            LABEL_NAME a 3 [source_file: expected0]
                            BLOCK 3 [source_file: expected0]
                                VAR 4 [source_file: expected0]
                                    NAME proto 4 [source_file: expected0]
                                        NULL 4 [source_file: expected0]
                                TRY 5 [source_file: expected0]
                                    BLOCK 5 [source_file: expected0]
                                    BLOCK 6 [source_file: expected0]
                                    BLOCK 6 [source_file: expected0]
                                        TRY 7 [source_file: expected0]
                                            BLOCK 7 [source_file: expected0]
                                                EXPR_RESULT 8 [source_file: expected0]
                                                    ASSIGN 8 [source_file: expected0]
                                                        NAME proto 8 [source_file: expected0]
                                                        NEW 8 [source_file: expected0]
                                                            NAME Proto 8 [source_file: expected0]
                                            BLOCK 9 [source_file: expected0]
                                            BLOCK 9 [source_file: expected0]
                                                EXPR_RESULT 10 [source_file: expected0]
                                                    ASSIGN 10 [source_file: expected0]
                                                        NAME action 10 [source_file: expected0]
                                                        NAME proto 10 [source_file: expected0]
                                                BREAK 11 [source_file: expected0]
                                                    LABEL_NAME a 11 [source_file: expected0]
                        EXPR_RESULT 15 [source_file: expected0]
                            CALL 15 [free_call: 1] [source_file: expected0]
                                NAME alert 15 [source_file: expected0]
                                NAME action 15 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        EXPR_RESULT 1 [source_file: testcode]
            ASSIGN 1 [source_file: testcode]
                NAME f 1 [source_file: testcode]
                FUNCTION  1 [source_file: testcode]
                    NAME  1 [source_file: testcode]
                    PARAM_LIST 1 [source_file: testcode]
                    BLOCK 1 [source_file: testcode]
                        VAR 2 [source_file: testcode]
                            NAME action 2 [source_file: testcode]
                        LABEL 3 [source_file: testcode]
                            LABEL_NAME a 3 [source_file: testcode]
                            BLOCK 3 [source_file: testcode]
                                VAR 4 [source_file: testcode]
                                    NAME proto 4 [source_file: testcode]
                                        NULL 4 [source_file: testcode]
                                TRY 5 [source_file: testcode]
                                    BLOCK 5 [source_file: testcode]
                                    BLOCK 6 [source_file: testcode]
                                    BLOCK 6 [source_file: testcode]
                                        TRY 7 [source_file: testcode]
                                            BLOCK 7 [source_file: testcode]
                                                EXPR_RESULT 8 [source_file: testcode]
                                                    ASSIGN 8 [source_file: testcode]
                                                        NAME proto 8 [source_file: testcode]
                                                        NEW 8 [source_file: testcode]
                                                            NAME Proto 8 [source_file: testcode]
                                            BLOCK 9 [source_file: testcode]
                                            BLOCK 9 [source_file: testcode]
                                                EXPR_RESULT 10 [source_file: testcode]
                                                    ASSIGN 10 [source_file: testcode]
                                                        NAME action 10 [source_file: testcode]
                                                        NAME proto 10 [source_file: testcode]
                        EXPR_RESULT 15 [source_file: testcode]
                            CALL 15 [free_call: 1] [source_file: testcode]
                                NAME alert 15 [source_file: testcode]
                                NAME action 15 [source_file: testcode]


Subtree1: BLOCK 9 [source_file: expected0]
    EXPR_RESULT 10 [source_file: expected0]
        ASSIGN 10 [source_file: expected0]
            NAME action 10 [source_file: expected0]
            NAME proto 10 [source_file: expected0]
    BREAK 11 [source_file: expected0]
        LABEL_NAME a 11 [source_file: expected0]


Subtree2: BLOCK 9 [source_file: testcode]
    EXPR_RESULT 10 [source_file: testcode]
        ASSIGN 10 [source_file: testcode]
            NAME action 10 [source_file: testcode]
            NAME proto 10 [source_file: testcode]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:928)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:460)
~ testIssue4177428_return(com.google.javascript.jscomp.UnreachableCodeEliminationTest)
[
Expected: f=function(){var action;a:{var proto=null;try{proto=new Proto}finally{action=proto;return}}}
Result: f=function(){var action;a:{var proto=null;try{proto=new Proto}finally{action=proto}}}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            ASSIGN 1 [source_file: expected0]
                NAME f 1 [source_file: expected0]
                FUNCTION  1 [source_file: expected0]
                    NAME  1 [source_file: expected0]
                    PARAM_LIST 1 [source_file: expected0]
                    BLOCK 1 [source_file: expected0]
                        VAR 2 [source_file: expected0]
                            NAME action 2 [source_file: expected0]
                        LABEL 3 [source_file: expected0]
                            LABEL_NAME a 3 [source_file: expected0]
                            BLOCK 3 [source_file: expected0]
                                VAR 4 [source_file: expected0]
                                    NAME proto 4 [source_file: expected0]
                                        NULL 4 [source_file: expected0]
                                TRY 5 [source_file: expected0]
                                    BLOCK 5 [source_file: expected0]
                                        EXPR_RESULT 6 [source_file: expected0]
                                            ASSIGN 6 [source_file: expected0]
                                                NAME proto 6 [source_file: expected0]
                                                NEW 6 [source_file: expected0]
                                                    NAME Proto 6 [source_file: expected0]
                                    BLOCK 7 [source_file: expected0]
                                    BLOCK 7 [source_file: expected0]
                                        EXPR_RESULT 8 [source_file: expected0]
                                            ASSIGN 8 [source_file: expected0]
                                                NAME action 8 [source_file: expected0]
                                                NAME proto 8 [source_file: expected0]
                                        RETURN 9 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        EXPR_RESULT 1 [source_file: testcode]
            ASSIGN 1 [source_file: testcode]
                NAME f 1 [source_file: testcode]
                FUNCTION  1 [source_file: testcode]
                    NAME  1 [source_file: testcode]
                    PARAM_LIST 1 [source_file: testcode]
                    BLOCK 1 [source_file: testcode]
                        VAR 2 [source_file: testcode]
                            NAME action 2 [source_file: testcode]
                        LABEL 3 [source_file: testcode]
                            LABEL_NAME a 3 [source_file: testcode]
                            BLOCK 3 [source_file: testcode]
                                VAR 4 [source_file: testcode]
                                    NAME proto 4 [source_file: testcode]
                                        NULL 4 [source_file: testcode]
                                TRY 5 [source_file: testcode]
                                    BLOCK 5 [source_file: testcode]
                                        EXPR_RESULT 6 [source_file: testcode]
                                            ASSIGN 6 [source_file: testcode]
                                                NAME proto 6 [source_file: testcode]
                                                NEW 6 [source_file: testcode]
                                                    NAME Proto 6 [source_file: testcode]
                                    BLOCK 7 [source_file: testcode]
                                    BLOCK 7 [source_file: testcode]
                                        EXPR_RESULT 8 [source_file: testcode]
                                            ASSIGN 8 [source_file: testcode]
                                                NAME action 8 [source_file: testcode]
                                                NAME proto 8 [source_file: testcode]


Subtree1: BLOCK 7 [source_file: expected0]
    EXPR_RESULT 8 [source_file: expected0]
        ASSIGN 8 [source_file: expected0]
            NAME action 8 [source_file: expected0]
            NAME proto 8 [source_file: expected0]
    RETURN 9 [source_file: expected0]


Subtree2: BLOCK 7 [source_file: testcode]
    EXPR_RESULT 8 [source_file: testcode]
        ASSIGN 8 [source_file: testcode]
            NAME action 8 [source_file: testcode]
            NAME proto 8 [source_file: testcode]
]
junit.framework.AssertionFailedError: 
Expected: f=function(){var action;a:{var proto=null;try{proto=new Proto}finally{action=proto;return}}}
Result: f=function(){var action;a:{var proto=null;try{proto=new Proto}finally{action=proto}}}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            ASSIGN 1 [source_file: expected0]
                NAME f 1 [source_file: expected0]
                FUNCTION  1 [source_file: expected0]
                    NAME  1 [source_file: expected0]
                    PARAM_LIST 1 [source_file: expected0]
                    BLOCK 1 [source_file: expected0]
                        VAR 2 [source_file: expected0]
                            NAME action 2 [source_file: expected0]
                        LABEL 3 [source_file: expected0]
                            LABEL_NAME a 3 [source_file: expected0]
                            BLOCK 3 [source_file: expected0]
                                VAR 4 [source_file: expected0]
                                    NAME proto 4 [source_file: expected0]
                                        NULL 4 [source_file: expected0]
                                TRY 5 [source_file: expected0]
                                    BLOCK 5 [source_file: expected0]
                                        EXPR_RESULT 6 [source_file: expected0]
                                            ASSIGN 6 [source_file: expected0]
                                                NAME proto 6 [source_file: expected0]
                                                NEW 6 [source_file: expected0]
                                                    NAME Proto 6 [source_file: expected0]
                                    BLOCK 7 [source_file: expected0]
                                    BLOCK 7 [source_file: expected0]
                                        EXPR_RESULT 8 [source_file: expected0]
                                            ASSIGN 8 [source_file: expected0]
                                                NAME action 8 [source_file: expected0]
                                                NAME proto 8 [source_file: expected0]
                                        RETURN 9 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        EXPR_RESULT 1 [source_file: testcode]
            ASSIGN 1 [source_file: testcode]
                NAME f 1 [source_file: testcode]
                FUNCTION  1 [source_file: testcode]
                    NAME  1 [source_file: testcode]
                    PARAM_LIST 1 [source_file: testcode]
                    BLOCK 1 [source_file: testcode]
                        VAR 2 [source_file: testcode]
                            NAME action 2 [source_file: testcode]
                        LABEL 3 [source_file: testcode]
                            LABEL_NAME a 3 [source_file: testcode]
                            BLOCK 3 [source_file: testcode]
                                VAR 4 [source_file: testcode]
                                    NAME proto 4 [source_file: testcode]
                                        NULL 4 [source_file: testcode]
                                TRY 5 [source_file: testcode]
                                    BLOCK 5 [source_file: testcode]
                                        EXPR_RESULT 6 [source_file: testcode]
                                            ASSIGN 6 [source_file: testcode]
                                                NAME proto 6 [source_file: testcode]
                                                NEW 6 [source_file: testcode]
                                                    NAME Proto 6 [source_file: testcode]
                                    BLOCK 7 [source_file: testcode]
                                    BLOCK 7 [source_file: testcode]
                                        EXPR_RESULT 8 [source_file: testcode]
                                            ASSIGN 8 [source_file: testcode]
                                                NAME action 8 [source_file: testcode]
                                                NAME proto 8 [source_file: testcode]


Subtree1: BLOCK 7 [source_file: expected0]
    EXPR_RESULT 8 [source_file: expected0]
        ASSIGN 8 [source_file: expected0]
            NAME action 8 [source_file: expected0]
            NAME proto 8 [source_file: expected0]
    RETURN 9 [source_file: expected0]


Subtree2: BLOCK 7 [source_file: testcode]
    EXPR_RESULT 8 [source_file: testcode]
        ASSIGN 8 [source_file: testcode]
            NAME action 8 [source_file: testcode]
            NAME proto 8 [source_file: testcode]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:928)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:460)
~ testDontRemoveBreakInTryFinally(com.google.javascript.jscomp.UnreachableCodeEliminationTest)
[
Expected: function f(){b:try{throw 9;}finally{break b}return 1}
Result: function f(){b:try{throw 9;}finally{}return 1}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION f 1 [source_file: expected0]
            NAME f 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                LABEL 1 [source_file: expected0]
                    LABEL_NAME b 1 [source_file: expected0]
                    TRY 1 [source_file: expected0]
                        BLOCK 1 [source_file: expected0]
                            THROW 1 [source_file: expected0]
                                NUMBER 9.0 1 [source_file: expected0]
                        BLOCK 1 [source_file: expected0]
                        BLOCK 1 [source_file: expected0]
                            BREAK 1 [source_file: expected0]
                                LABEL_NAME b 1 [source_file: expected0]
                RETURN 1 [source_file: expected0]
                    NUMBER 1.0 1 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION f 1 [source_file: testcode]
            NAME f 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                LABEL 1 [source_file: testcode]
                    LABEL_NAME b 1 [source_file: testcode]
                    TRY 1 [source_file: testcode]
                        BLOCK 1 [source_file: testcode]
                            THROW 1 [source_file: testcode]
                                NUMBER 9.0 1 [source_file: testcode]
                        BLOCK 1 [source_file: testcode]
                        BLOCK 1 [source_file: testcode]
                RETURN 1 [source_file: testcode]
                    NUMBER 1.0 1 [source_file: testcode]


Subtree1: BLOCK 1 [source_file: expected0]
    BREAK 1 [source_file: expected0]
        LABEL_NAME b 1 [source_file: expected0]


Subtree2: BLOCK 1 [source_file: testcode]
]
junit.framework.AssertionFailedError: 
Expected: function f(){b:try{throw 9;}finally{break b}return 1}
Result: function f(){b:try{throw 9;}finally{}return 1}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION f 1 [source_file: expected0]
            NAME f 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                LABEL 1 [source_file: expected0]
                    LABEL_NAME b 1 [source_file: expected0]
                    TRY 1 [source_file: expected0]
                        BLOCK 1 [source_file: expected0]
                            THROW 1 [source_file: expected0]
                                NUMBER 9.0 1 [source_file: expected0]
                        BLOCK 1 [source_file: expected0]
                        BLOCK 1 [source_file: expected0]
                            BREAK 1 [source_file: expected0]
                                LABEL_NAME b 1 [source_file: expected0]
                RETURN 1 [source_file: expected0]
                    NUMBER 1.0 1 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION f 1 [source_file: testcode]
            NAME f 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                LABEL 1 [source_file: testcode]
                    LABEL_NAME b 1 [source_file: testcode]
                    TRY 1 [source_file: testcode]
                        BLOCK 1 [source_file: testcode]
                            THROW 1 [source_file: testcode]
                                NUMBER 9.0 1 [source_file: testcode]
                        BLOCK 1 [source_file: testcode]
                        BLOCK 1 [source_file: testcode]
                RETURN 1 [source_file: testcode]
                    NUMBER 1.0 1 [source_file: testcode]


Subtree1: BLOCK 1 [source_file: expected0]
    BREAK 1 [source_file: expected0]
        LABEL_NAME b 1 [source_file: expected0]


Subtree2: BLOCK 1 [source_file: testcode]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:928)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:460)
~ testIssue4177428_continue(com.google.javascript.jscomp.UnreachableCodeEliminationTest)
[
Expected: f=function(){var action;a:do{var proto=null;try{proto=new Proto}finally{action=proto;continue a}}while(false);alert(action)}
Result: f=function(){var action;a:do{var proto=null;try{proto=new Proto}finally{action=proto}}while(false);alert(action)}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            ASSIGN 1 [source_file: expected0]
                NAME f 1 [source_file: expected0]
                FUNCTION  1 [source_file: expected0]
                    NAME  1 [source_file: expected0]
                    PARAM_LIST 1 [source_file: expected0]
                    BLOCK 1 [source_file: expected0]
                        VAR 2 [source_file: expected0]
                            NAME action 2 [source_file: expected0]
                        LABEL 3 [source_file: expected0]
                            LABEL_NAME a 3 [source_file: expected0]
                            DO 3 [source_file: expected0]
                                BLOCK 3 [source_file: expected0]
                                    VAR 4 [source_file: expected0]
                                        NAME proto 4 [source_file: expected0]
                                            NULL 4 [source_file: expected0]
                                    TRY 5 [source_file: expected0]
                                        BLOCK 5 [source_file: expected0]
                                            EXPR_RESULT 6 [source_file: expected0]
                                                ASSIGN 6 [source_file: expected0]
                                                    NAME proto 6 [source_file: expected0]
                                                    NEW 6 [source_file: expected0]
                                                        NAME Proto 6 [source_file: expected0]
                                        BLOCK 7 [source_file: expected0]
                                        BLOCK 7 [source_file: expected0]
                                            EXPR_RESULT 8 [source_file: expected0]
                                                ASSIGN 8 [source_file: expected0]
                                                    NAME action 8 [source_file: expected0]
                                                    NAME proto 8 [source_file: expected0]
                                            CONTINUE 9 [source_file: expected0]
                                                LABEL_NAME a 9 [source_file: expected0]
                                FALSE 11 [source_file: expected0]
                        EXPR_RESULT 12 [source_file: expected0]
                            CALL 12 [free_call: 1] [source_file: expected0]
                                NAME alert 12 [source_file: expected0]
                                NAME action 12 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        EXPR_RESULT 1 [source_file: testcode]
            ASSIGN 1 [source_file: testcode]
                NAME f 1 [source_file: testcode]
                FUNCTION  1 [source_file: testcode]
                    NAME  1 [source_file: testcode]
                    PARAM_LIST 1 [source_file: testcode]
                    BLOCK 1 [source_file: testcode]
                        VAR 2 [source_file: testcode]
                            NAME action 2 [source_file: testcode]
                        LABEL 3 [source_file: testcode]
                            LABEL_NAME a 3 [source_file: testcode]
                            DO 3 [source_file: testcode]
                                BLOCK 3 [source_file: testcode]
                                    VAR 4 [source_file: testcode]
                                        NAME proto 4 [source_file: testcode]
                                            NULL 4 [source_file: testcode]
                                    TRY 5 [source_file: testcode]
                                        BLOCK 5 [source_file: testcode]
                                            EXPR_RESULT 6 [source_file: testcode]
                                                ASSIGN 6 [source_file: testcode]
                                                    NAME proto 6 [source_file: testcode]
                                                    NEW 6 [source_file: testcode]
                                                        NAME Proto 6 [source_file: testcode]
                                        BLOCK 7 [source_file: testcode]
                                        BLOCK 7 [source_file: testcode]
                                            EXPR_RESULT 8 [source_file: testcode]
                                                ASSIGN 8 [source_file: testcode]
                                                    NAME action 8 [source_file: testcode]
                                                    NAME proto 8 [source_file: testcode]
                                FALSE 11 [source_file: testcode]
                        EXPR_RESULT 12 [source_file: testcode]
                            CALL 12 [free_call: 1] [source_file: testcode]
                                NAME alert 12 [source_file: testcode]
                                NAME action 12 [source_file: testcode]


Subtree1: BLOCK 7 [source_file: expected0]
    EXPR_RESULT 8 [source_file: expected0]
        ASSIGN 8 [source_file: expected0]
            NAME action 8 [source_file: expected0]
            NAME proto 8 [source_file: expected0]
    CONTINUE 9 [source_file: expected0]
        LABEL_NAME a 9 [source_file: expected0]


Subtree2: BLOCK 7 [source_file: testcode]
    EXPR_RESULT 8 [source_file: testcode]
        ASSIGN 8 [source_file: testcode]
            NAME action 8 [source_file: testcode]
            NAME proto 8 [source_file: testcode]
]
junit.framework.AssertionFailedError: 
Expected: f=function(){var action;a:do{var proto=null;try{proto=new Proto}finally{action=proto;continue a}}while(false);alert(action)}
Result: f=function(){var action;a:do{var proto=null;try{proto=new Proto}finally{action=proto}}while(false);alert(action)}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            ASSIGN 1 [source_file: expected0]
                NAME f 1 [source_file: expected0]
                FUNCTION  1 [source_file: expected0]
                    NAME  1 [source_file: expected0]
                    PARAM_LIST 1 [source_file: expected0]
                    BLOCK 1 [source_file: expected0]
                        VAR 2 [source_file: expected0]
                            NAME action 2 [source_file: expected0]
                        LABEL 3 [source_file: expected0]
                            LABEL_NAME a 3 [source_file: expected0]
                            DO 3 [source_file: expected0]
                                BLOCK 3 [source_file: expected0]
                                    VAR 4 [source_file: expected0]
                                        NAME proto 4 [source_file: expected0]
                                            NULL 4 [source_file: expected0]
                                    TRY 5 [source_file: expected0]
                                        BLOCK 5 [source_file: expected0]
                                            EXPR_RESULT 6 [source_file: expected0]
                                                ASSIGN 6 [source_file: expected0]
                                                    NAME proto 6 [source_file: expected0]
                                                    NEW 6 [source_file: expected0]
                                                        NAME Proto 6 [source_file: expected0]
                                        BLOCK 7 [source_file: expected0]
                                        BLOCK 7 [source_file: expected0]
                                            EXPR_RESULT 8 [source_file: expected0]
                                                ASSIGN 8 [source_file: expected0]
                                                    NAME action 8 [source_file: expected0]
                                                    NAME proto 8 [source_file: expected0]
                                            CONTINUE 9 [source_file: expected0]
                                                LABEL_NAME a 9 [source_file: expected0]
                                FALSE 11 [source_file: expected0]
                        EXPR_RESULT 12 [source_file: expected0]
                            CALL 12 [free_call: 1] [source_file: expected0]
                                NAME alert 12 [source_file: expected0]
                                NAME action 12 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        EXPR_RESULT 1 [source_file: testcode]
            ASSIGN 1 [source_file: testcode]
                NAME f 1 [source_file: testcode]
                FUNCTION  1 [source_file: testcode]
                    NAME  1 [source_file: testcode]
                    PARAM_LIST 1 [source_file: testcode]
                    BLOCK 1 [source_file: testcode]
                        VAR 2 [source_file: testcode]
                            NAME action 2 [source_file: testcode]
                        LABEL 3 [source_file: testcode]
                            LABEL_NAME a 3 [source_file: testcode]
                            DO 3 [source_file: testcode]
                                BLOCK 3 [source_file: testcode]
                                    VAR 4 [source_file: testcode]
                                        NAME proto 4 [source_file: testcode]
                                            NULL 4 [source_file: testcode]
                                    TRY 5 [source_file: testcode]
                                        BLOCK 5 [source_file: testcode]
                                            EXPR_RESULT 6 [source_file: testcode]
                                                ASSIGN 6 [source_file: testcode]
                                                    NAME proto 6 [source_file: testcode]
                                                    NEW 6 [source_file: testcode]
                                                        NAME Proto 6 [source_file: testcode]
                                        BLOCK 7 [source_file: testcode]
                                        BLOCK 7 [source_file: testcode]
                                            EXPR_RESULT 8 [source_file: testcode]
                                                ASSIGN 8 [source_file: testcode]
                                                    NAME action 8 [source_file: testcode]
                                                    NAME proto 8 [source_file: testcode]
                                FALSE 11 [source_file: testcode]
                        EXPR_RESULT 12 [source_file: testcode]
                            CALL 12 [free_call: 1] [source_file: testcode]
                                NAME alert 12 [source_file: testcode]
                                NAME action 12 [source_file: testcode]


Subtree1: BLOCK 7 [source_file: expected0]
    EXPR_RESULT 8 [source_file: expected0]
        ASSIGN 8 [source_file: expected0]
            NAME action 8 [source_file: expected0]
            NAME proto 8 [source_file: expected0]
    CONTINUE 9 [source_file: expected0]
        LABEL_NAME a 9 [source_file: expected0]


Subtree2: BLOCK 7 [source_file: testcode]
    EXPR_RESULT 8 [source_file: testcode]
        ASSIGN 8 [source_file: testcode]
            NAME action 8 [source_file: testcode]
            NAME proto 8 [source_file: testcode]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:928)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:460)
~ testDontRemoveBreakInTryFinallySwitch(com.google.javascript.jscomp.UnreachableCodeEliminationTest)
[
Expected: function f(){b:try{throw 9;}finally{switch(x){case 1:break b}}return 1}
Result: function f(){b:try{throw 9;}finally{switch(x){case 1:}}return 1}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION f 1 [source_file: expected0]
            NAME f 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                LABEL 1 [source_file: expected0]
                    LABEL_NAME b 1 [source_file: expected0]
                    TRY 1 [source_file: expected0]
                        BLOCK 1 [source_file: expected0]
                            THROW 1 [source_file: expected0]
                                NUMBER 9.0 1 [source_file: expected0]
                        BLOCK 1 [source_file: expected0]
                        BLOCK 1 [source_file: expected0]
                            SWITCH 1 [source_file: expected0]
                                NAME x 1 [source_file: expected0]
                                CASE 1 [source_file: expected0]
                                    NUMBER 1.0 1 [source_file: expected0]
                                    BLOCK 1 [synthetic: 1] [source_file: expected0]
                                        BREAK 1 [source_file: expected0]
                                            LABEL_NAME b 1 [source_file: expected0]
                RETURN 1 [source_file: expected0]
                    NUMBER 1.0 1 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION f 1 [source_file: testcode]
            NAME f 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                LABEL 1 [source_file: testcode]
                    LABEL_NAME b 1 [source_file: testcode]
                    TRY 1 [source_file: testcode]
                        BLOCK 1 [source_file: testcode]
                            THROW 1 [source_file: testcode]
                                NUMBER 9.0 1 [source_file: testcode]
                        BLOCK 1 [source_file: testcode]
                        BLOCK 1 [source_file: testcode]
                            SWITCH 1 [source_file: testcode]
                                NAME x 1 [source_file: testcode]
                                CASE 1 [source_file: testcode]
                                    NUMBER 1.0 1 [source_file: testcode]
                                    BLOCK 1 [synthetic: 1] [source_file: testcode]
                RETURN 1 [source_file: testcode]
                    NUMBER 1.0 1 [source_file: testcode]


Subtree1: BLOCK 1 [synthetic: 1] [source_file: expected0]
    BREAK 1 [source_file: expected0]
        LABEL_NAME b 1 [source_file: expected0]


Subtree2: BLOCK 1 [synthetic: 1] [source_file: testcode]
]
junit.framework.AssertionFailedError: 
Expected: function f(){b:try{throw 9;}finally{switch(x){case 1:break b}}return 1}
Result: function f(){b:try{throw 9;}finally{switch(x){case 1:}}return 1}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION f 1 [source_file: expected0]
            NAME f 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                LABEL 1 [source_file: expected0]
                    LABEL_NAME b 1 [source_file: expected0]
                    TRY 1 [source_file: expected0]
                        BLOCK 1 [source_file: expected0]
                            THROW 1 [source_file: expected0]
                                NUMBER 9.0 1 [source_file: expected0]
                        BLOCK 1 [source_file: expected0]
                        BLOCK 1 [source_file: expected0]
                            SWITCH 1 [source_file: expected0]
                                NAME x 1 [source_file: expected0]
                                CASE 1 [source_file: expected0]
                                    NUMBER 1.0 1 [source_file: expected0]
                                    BLOCK 1 [synthetic: 1] [source_file: expected0]
                                        BREAK 1 [source_file: expected0]
                                            LABEL_NAME b 1 [source_file: expected0]
                RETURN 1 [source_file: expected0]
                    NUMBER 1.0 1 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION f 1 [source_file: testcode]
            NAME f 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                LABEL 1 [source_file: testcode]
                    LABEL_NAME b 1 [source_file: testcode]
                    TRY 1 [source_file: testcode]
                        BLOCK 1 [source_file: testcode]
                            THROW 1 [source_file: testcode]
                                NUMBER 9.0 1 [source_file: testcode]
                        BLOCK 1 [source_file: testcode]
                        BLOCK 1 [source_file: testcode]
                            SWITCH 1 [source_file: testcode]
                                NAME x 1 [source_file: testcode]
                                CASE 1 [source_file: testcode]
                                    NUMBER 1.0 1 [source_file: testcode]
                                    BLOCK 1 [synthetic: 1] [source_file: testcode]
                RETURN 1 [source_file: testcode]
                    NUMBER 1.0 1 [source_file: testcode]


Subtree1: BLOCK 1 [synthetic: 1] [source_file: expected0]
    BREAK 1 [source_file: expected0]
        LABEL_NAME b 1 [source_file: expected0]


Subtree2: BLOCK 1 [synthetic: 1] [source_file: testcode]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:928)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:460)
~ testIssue4177428a(com.google.javascript.jscomp.UnreachableCodeEliminationTest)
[
Expected: f=function(){var action;a:{var proto=null;try{proto=new Proto}finally{action=proto;break a}}alert(action)}
Result: f=function(){var action;a:{var proto=null;try{proto=new Proto}finally{action=proto}}alert(action)}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            ASSIGN 1 [source_file: expected0]
                NAME f 1 [source_file: expected0]
                FUNCTION  1 [source_file: expected0]
                    NAME  1 [source_file: expected0]
                    PARAM_LIST 1 [source_file: expected0]
                    BLOCK 1 [source_file: expected0]
                        VAR 2 [source_file: expected0]
                            NAME action 2 [source_file: expected0]
                        LABEL 3 [source_file: expected0]
                            LABEL_NAME a 3 [source_file: expected0]
                            BLOCK 3 [source_file: expected0]
                                VAR 4 [source_file: expected0]
                                    NAME proto 4 [source_file: expected0]
                                        NULL 4 [source_file: expected0]
                                TRY 5 [source_file: expected0]
                                    BLOCK 5 [source_file: expected0]
                                        EXPR_RESULT 6 [source_file: expected0]
                                            ASSIGN 6 [source_file: expected0]
                                                NAME proto 6 [source_file: expected0]
                                                NEW 6 [source_file: expected0]
                                                    NAME Proto 6 [source_file: expected0]
                                    BLOCK 7 [source_file: expected0]
                                    BLOCK 7 [source_file: expected0]
                                        EXPR_RESULT 8 [source_file: expected0]
                                            ASSIGN 8 [source_file: expected0]
                                                NAME action 8 [source_file: expected0]
                                                NAME proto 8 [source_file: expected0]
                                        BREAK 9 [source_file: expected0]
                                            LABEL_NAME a 9 [source_file: expected0]
                        EXPR_RESULT 12 [source_file: expected0]
                            CALL 12 [free_call: 1] [source_file: expected0]
                                NAME alert 12 [source_file: expected0]
                                NAME action 12 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        EXPR_RESULT 1 [source_file: testcode]
            ASSIGN 1 [source_file: testcode]
                NAME f 1 [source_file: testcode]
                FUNCTION  1 [source_file: testcode]
                    NAME  1 [source_file: testcode]
                    PARAM_LIST 1 [source_file: testcode]
                    BLOCK 1 [source_file: testcode]
                        VAR 2 [source_file: testcode]
                            NAME action 2 [source_file: testcode]
                        LABEL 3 [source_file: testcode]
                            LABEL_NAME a 3 [source_file: testcode]
                            BLOCK 3 [source_file: testcode]
                                VAR 4 [source_file: testcode]
                                    NAME proto 4 [source_file: testcode]
                                        NULL 4 [source_file: testcode]
                                TRY 5 [source_file: testcode]
                                    BLOCK 5 [source_file: testcode]
                                        EXPR_RESULT 6 [source_file: testcode]
                                            ASSIGN 6 [source_file: testcode]
                                                NAME proto 6 [source_file: testcode]
                                                NEW 6 [source_file: testcode]
                                                    NAME Proto 6 [source_file: testcode]
                                    BLOCK 7 [source_file: testcode]
                                    BLOCK 7 [source_file: testcode]
                                        EXPR_RESULT 8 [source_file: testcode]
                                            ASSIGN 8 [source_file: testcode]
                                                NAME action 8 [source_file: testcode]
                                                NAME proto 8 [source_file: testcode]
                        EXPR_RESULT 12 [source_file: testcode]
                            CALL 12 [free_call: 1] [source_file: testcode]
                                NAME alert 12 [source_file: testcode]
                                NAME action 12 [source_file: testcode]


Subtree1: BLOCK 7 [source_file: expected0]
    EXPR_RESULT 8 [source_file: expected0]
        ASSIGN 8 [source_file: expected0]
            NAME action 8 [source_file: expected0]
            NAME proto 8 [source_file: expected0]
    BREAK 9 [source_file: expected0]
        LABEL_NAME a 9 [source_file: expected0]


Subtree2: BLOCK 7 [source_file: testcode]
    EXPR_RESULT 8 [source_file: testcode]
        ASSIGN 8 [source_file: testcode]
            NAME action 8 [source_file: testcode]
            NAME proto 8 [source_file: testcode]
]
junit.framework.AssertionFailedError: 
Expected: f=function(){var action;a:{var proto=null;try{proto=new Proto}finally{action=proto;break a}}alert(action)}
Result: f=function(){var action;a:{var proto=null;try{proto=new Proto}finally{action=proto}}alert(action)}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            ASSIGN 1 [source_file: expected0]
                NAME f 1 [source_file: expected0]
                FUNCTION  1 [source_file: expected0]
                    NAME  1 [source_file: expected0]
                    PARAM_LIST 1 [source_file: expected0]
                    BLOCK 1 [source_file: expected0]
                        VAR 2 [source_file: expected0]
                            NAME action 2 [source_file: expected0]
                        LABEL 3 [source_file: expected0]
                            LABEL_NAME a 3 [source_file: expected0]
                            BLOCK 3 [source_file: expected0]
                                VAR 4 [source_file: expected0]
                                    NAME proto 4 [source_file: expected0]
                                        NULL 4 [source_file: expected0]
                                TRY 5 [source_file: expected0]
                                    BLOCK 5 [source_file: expected0]
                                        EXPR_RESULT 6 [source_file: expected0]
                                            ASSIGN 6 [source_file: expected0]
                                                NAME proto 6 [source_file: expected0]
                                                NEW 6 [source_file: expected0]
                                                    NAME Proto 6 [source_file: expected0]
                                    BLOCK 7 [source_file: expected0]
                                    BLOCK 7 [source_file: expected0]
                                        EXPR_RESULT 8 [source_file: expected0]
                                            ASSIGN 8 [source_file: expected0]
                                                NAME action 8 [source_file: expected0]
                                                NAME proto 8 [source_file: expected0]
                                        BREAK 9 [source_file: expected0]
                                            LABEL_NAME a 9 [source_file: expected0]
                        EXPR_RESULT 12 [source_file: expected0]
                            CALL 12 [free_call: 1] [source_file: expected0]
                                NAME alert 12 [source_file: expected0]
                                NAME action 12 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        EXPR_RESULT 1 [source_file: testcode]
            ASSIGN 1 [source_file: testcode]
                NAME f 1 [source_file: testcode]
                FUNCTION  1 [source_file: testcode]
                    NAME  1 [source_file: testcode]
                    PARAM_LIST 1 [source_file: testcode]
                    BLOCK 1 [source_file: testcode]
                        VAR 2 [source_file: testcode]
                            NAME action 2 [source_file: testcode]
                        LABEL 3 [source_file: testcode]
                            LABEL_NAME a 3 [source_file: testcode]
                            BLOCK 3 [source_file: testcode]
                                VAR 4 [source_file: testcode]
                                    NAME proto 4 [source_file: testcode]
                                        NULL 4 [source_file: testcode]
                                TRY 5 [source_file: testcode]
                                    BLOCK 5 [source_file: testcode]
                                        EXPR_RESULT 6 [source_file: testcode]
                                            ASSIGN 6 [source_file: testcode]
                                                NAME proto 6 [source_file: testcode]
                                                NEW 6 [source_file: testcode]
                                                    NAME Proto 6 [source_file: testcode]
                                    BLOCK 7 [source_file: testcode]
                                    BLOCK 7 [source_file: testcode]
                                        EXPR_RESULT 8 [source_file: testcode]
                                            ASSIGN 8 [source_file: testcode]
                                                NAME action 8 [source_file: testcode]
                                                NAME proto 8 [source_file: testcode]
                        EXPR_RESULT 12 [source_file: testcode]
                            CALL 12 [free_call: 1] [source_file: testcode]
                                NAME alert 12 [source_file: testcode]
                                NAME action 12 [source_file: testcode]


Subtree1: BLOCK 7 [source_file: expected0]
    EXPR_RESULT 8 [source_file: expected0]
        ASSIGN 8 [source_file: expected0]
            NAME action 8 [source_file: expected0]
            NAME proto 8 [source_file: expected0]
    BREAK 9 [source_file: expected0]
        LABEL_NAME a 9 [source_file: expected0]


Subtree2: BLOCK 7 [source_file: testcode]
    EXPR_RESULT 8 [source_file: testcode]
        ASSIGN 8 [source_file: testcode]
            NAME action 8 [source_file: testcode]
            NAME proto 8 [source_file: testcode]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:928)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:460)
~ testIssue4177428c(com.google.javascript.jscomp.UnreachableCodeEliminationTest)
[
Expected: f=function(){var action;a:{var proto=null;try{}finally{try{proto=new Proto}finally{action=proto;break a}}}alert(action)}
Result: f=function(){var action;a:{var proto=null;try{}finally{try{proto=new Proto}finally{action=proto}}}alert(action)}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            ASSIGN 1 [source_file: expected0]
                NAME f 1 [source_file: expected0]
                FUNCTION  1 [source_file: expected0]
                    NAME  1 [source_file: expected0]
                    PARAM_LIST 1 [source_file: expected0]
                    BLOCK 1 [source_file: expected0]
                        VAR 2 [source_file: expected0]
                            NAME action 2 [source_file: expected0]
                        LABEL 3 [source_file: expected0]
                            LABEL_NAME a 3 [source_file: expected0]
                            BLOCK 3 [source_file: expected0]
                                VAR 4 [source_file: expected0]
                                    NAME proto 4 [source_file: expected0]
                                        NULL 4 [source_file: expected0]
                                TRY 5 [source_file: expected0]
                                    BLOCK 5 [source_file: expected0]
                                    BLOCK 6 [source_file: expected0]
                                    BLOCK 6 [source_file: expected0]
                                        TRY 7 [source_file: expected0]
                                            BLOCK 7 [source_file: expected0]
                                                EXPR_RESULT 8 [source_file: expected0]
                                                    ASSIGN 8 [source_file: expected0]
                                                        NAME proto 8 [source_file: expected0]
                                                        NEW 8 [source_file: expected0]
                                                            NAME Proto 8 [source_file: expected0]
                                            BLOCK 9 [source_file: expected0]
                                            BLOCK 9 [source_file: expected0]
                                                EXPR_RESULT 10 [source_file: expected0]
                                                    ASSIGN 10 [source_file: expected0]
                                                        NAME action 10 [source_file: expected0]
                                                        NAME proto 10 [source_file: expected0]
                                                BREAK 11 [source_file: expected0]
                                                    LABEL_NAME a 11 [source_file: expected0]
                        EXPR_RESULT 15 [source_file: expected0]
                            CALL 15 [free_call: 1] [source_file: expected0]
                                NAME alert 15 [source_file: expected0]
                                NAME action 15 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        EXPR_RESULT 1 [source_file: testcode]
            ASSIGN 1 [source_file: testcode]
                NAME f 1 [source_file: testcode]
                FUNCTION  1 [source_file: testcode]
                    NAME  1 [source_file: testcode]
                    PARAM_LIST 1 [source_file: testcode]
                    BLOCK 1 [source_file: testcode]
                        VAR 2 [source_file: testcode]
                            NAME action 2 [source_file: testcode]
                        LABEL 3 [source_file: testcode]
                            LABEL_NAME a 3 [source_file: testcode]
                            BLOCK 3 [source_file: testcode]
                                VAR 4 [source_file: testcode]
                                    NAME proto 4 [source_file: testcode]
                                        NULL 4 [source_file: testcode]
                                TRY 5 [source_file: testcode]
                                    BLOCK 5 [source_file: testcode]
                                    BLOCK 6 [source_file: testcode]
                                    BLOCK 6 [source_file: testcode]
                                        TRY 7 [source_file: testcode]
                                            BLOCK 7 [source_file: testcode]
                                                EXPR_RESULT 8 [source_file: testcode]
                                                    ASSIGN 8 [source_file: testcode]
                                                        NAME proto 8 [source_file: testcode]
                                                        NEW 8 [source_file: testcode]
                                                            NAME Proto 8 [source_file: testcode]
                                            BLOCK 9 [source_file: testcode]
                                            BLOCK 9 [source_file: testcode]
                                                EXPR_RESULT 10 [source_file: testcode]
                                                    ASSIGN 10 [source_file: testcode]
                                                        NAME action 10 [source_file: testcode]
                                                        NAME proto 10 [source_file: testcode]
                        EXPR_RESULT 15 [source_file: testcode]
                            CALL 15 [free_call: 1] [source_file: testcode]
                                NAME alert 15 [source_file: testcode]
                                NAME action 15 [source_file: testcode]


Subtree1: BLOCK 9 [source_file: expected0]
    EXPR_RESULT 10 [source_file: expected0]
        ASSIGN 10 [source_file: expected0]
            NAME action 10 [source_file: expected0]
            NAME proto 10 [source_file: expected0]
    BREAK 11 [source_file: expected0]
        LABEL_NAME a 11 [source_file: expected0]


Subtree2: BLOCK 9 [source_file: testcode]
    EXPR_RESULT 10 [source_file: testcode]
        ASSIGN 10 [source_file: testcode]
            NAME action 10 [source_file: testcode]
            NAME proto 10 [source_file: testcode]
]
junit.framework.AssertionFailedError: 
Expected: f=function(){var action;a:{var proto=null;try{}finally{try{proto=new Proto}finally{action=proto;break a}}}alert(action)}
Result: f=function(){var action;a:{var proto=null;try{}finally{try{proto=new Proto}finally{action=proto}}}alert(action)}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            ASSIGN 1 [source_file: expected0]
                NAME f 1 [source_file: expected0]
                FUNCTION  1 [source_file: expected0]
                    NAME  1 [source_file: expected0]
                    PARAM_LIST 1 [source_file: expected0]
                    BLOCK 1 [source_file: expected0]
                        VAR 2 [source_file: expected0]
                            NAME action 2 [source_file: expected0]
                        LABEL 3 [source_file: expected0]
                            LABEL_NAME a 3 [source_file: expected0]
                            BLOCK 3 [source_file: expected0]
                                VAR 4 [source_file: expected0]
                                    NAME proto 4 [source_file: expected0]
                                        NULL 4 [source_file: expected0]
                                TRY 5 [source_file: expected0]
                                    BLOCK 5 [source_file: expected0]
                                    BLOCK 6 [source_file: expected0]
                                    BLOCK 6 [source_file: expected0]
                                        TRY 7 [source_file: expected0]
                                            BLOCK 7 [source_file: expected0]
                                                EXPR_RESULT 8 [source_file: expected0]
                                                    ASSIGN 8 [source_file: expected0]
                                                        NAME proto 8 [source_file: expected0]
                                                        NEW 8 [source_file: expected0]
                                                            NAME Proto 8 [source_file: expected0]
                                            BLOCK 9 [source_file: expected0]
                                            BLOCK 9 [source_file: expected0]
                                                EXPR_RESULT 10 [source_file: expected0]
                                                    ASSIGN 10 [source_file: expected0]
                                                        NAME action 10 [source_file: expected0]
                                                        NAME proto 10 [source_file: expected0]
                                                BREAK 11 [source_file: expected0]
                                                    LABEL_NAME a 11 [source_file: expected0]
                        EXPR_RESULT 15 [source_file: expected0]
                            CALL 15 [free_call: 1] [source_file: expected0]
                                NAME alert 15 [source_file: expected0]
                                NAME action 15 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        EXPR_RESULT 1 [source_file: testcode]
            ASSIGN 1 [source_file: testcode]
                NAME f 1 [source_file: testcode]
                FUNCTION  1 [source_file: testcode]
                    NAME  1 [source_file: testcode]
                    PARAM_LIST 1 [source_file: testcode]
                    BLOCK 1 [source_file: testcode]
                        VAR 2 [source_file: testcode]
                            NAME action 2 [source_file: testcode]
                        LABEL 3 [source_file: testcode]
                            LABEL_NAME a 3 [source_file: testcode]
                            BLOCK 3 [source_file: testcode]
                                VAR 4 [source_file: testcode]
                                    NAME proto 4 [source_file: testcode]
                                        NULL 4 [source_file: testcode]
                                TRY 5 [source_file: testcode]
                                    BLOCK 5 [source_file: testcode]
                                    BLOCK 6 [source_file: testcode]
                                    BLOCK 6 [source_file: testcode]
                                        TRY 7 [source_file: testcode]
                                            BLOCK 7 [source_file: testcode]
                                                EXPR_RESULT 8 [source_file: testcode]
                                                    ASSIGN 8 [source_file: testcode]
                                                        NAME proto 8 [source_file: testcode]
                                                        NEW 8 [source_file: testcode]
                                                            NAME Proto 8 [source_file: testcode]
                                            BLOCK 9 [source_file: testcode]
                                            BLOCK 9 [source_file: testcode]
                                                EXPR_RESULT 10 [source_file: testcode]
                                                    ASSIGN 10 [source_file: testcode]
                                                        NAME action 10 [source_file: testcode]
                                                        NAME proto 10 [source_file: testcode]
                        EXPR_RESULT 15 [source_file: testcode]
                            CALL 15 [free_call: 1] [source_file: testcode]
                                NAME alert 15 [source_file: testcode]
                                NAME action 15 [source_file: testcode]


Subtree1: BLOCK 9 [source_file: expected0]
    EXPR_RESULT 10 [source_file: expected0]
        ASSIGN 10 [source_file: expected0]
            NAME action 10 [source_file: expected0]
            NAME proto 10 [source_file: expected0]
    BREAK 11 [source_file: expected0]
        LABEL_NAME a 11 [source_file: expected0]


Subtree2: BLOCK 9 [source_file: testcode]
    EXPR_RESULT 10 [source_file: testcode]
        ASSIGN 10 [source_file: testcode]
            NAME action 10 [source_file: testcode]
            NAME proto 10 [source_file: testcode]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:928)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:460)
~ testIssue4177428_return(com.google.javascript.jscomp.UnreachableCodeEliminationTest)
[
Expected: f=function(){var action;a:{var proto=null;try{proto=new Proto}finally{action=proto;return}}}
Result: f=function(){var action;a:{var proto=null;try{proto=new Proto}finally{action=proto}}}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            ASSIGN 1 [source_file: expected0]
                NAME f 1 [source_file: expected0]
                FUNCTION  1 [source_file: expected0]
                    NAME  1 [source_file: expected0]
                    PARAM_LIST 1 [source_file: expected0]
                    BLOCK 1 [source_file: expected0]
                        VAR 2 [source_file: expected0]
                            NAME action 2 [source_file: expected0]
                        LABEL 3 [source_file: expected0]
                            LABEL_NAME a 3 [source_file: expected0]
                            BLOCK 3 [source_file: expected0]
                                VAR 4 [source_file: expected0]
                                    NAME proto 4 [source_file: expected0]
                                        NULL 4 [source_file: expected0]
                                TRY 5 [source_file: expected0]
                                    BLOCK 5 [source_file: expected0]
                                        EXPR_RESULT 6 [source_file: expected0]
                                            ASSIGN 6 [source_file: expected0]
                                                NAME proto 6 [source_file: expected0]
                                                NEW 6 [source_file: expected0]
                                                    NAME Proto 6 [source_file: expected0]
                                    BLOCK 7 [source_file: expected0]
                                    BLOCK 7 [source_file: expected0]
                                        EXPR_RESULT 8 [source_file: expected0]
                                            ASSIGN 8 [source_file: expected0]
                                                NAME action 8 [source_file: expected0]
                                                NAME proto 8 [source_file: expected0]
                                        RETURN 9 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        EXPR_RESULT 1 [source_file: testcode]
            ASSIGN 1 [source_file: testcode]
                NAME f 1 [source_file: testcode]
                FUNCTION  1 [source_file: testcode]
                    NAME  1 [source_file: testcode]
                    PARAM_LIST 1 [source_file: testcode]
                    BLOCK 1 [source_file: testcode]
                        VAR 2 [source_file: testcode]
                            NAME action 2 [source_file: testcode]
                        LABEL 3 [source_file: testcode]
                            LABEL_NAME a 3 [source_file: testcode]
                            BLOCK 3 [source_file: testcode]
                                VAR 4 [source_file: testcode]
                                    NAME proto 4 [source_file: testcode]
                                        NULL 4 [source_file: testcode]
                                TRY 5 [source_file: testcode]
                                    BLOCK 5 [source_file: testcode]
                                        EXPR_RESULT 6 [source_file: testcode]
                                            ASSIGN 6 [source_file: testcode]
                                                NAME proto 6 [source_file: testcode]
                                                NEW 6 [source_file: testcode]
                                                    NAME Proto 6 [source_file: testcode]
                                    BLOCK 7 [source_file: testcode]
                                    BLOCK 7 [source_file: testcode]
                                        EXPR_RESULT 8 [source_file: testcode]
                                            ASSIGN 8 [source_file: testcode]
                                                NAME action 8 [source_file: testcode]
                                                NAME proto 8 [source_file: testcode]


Subtree1: BLOCK 7 [source_file: expected0]
    EXPR_RESULT 8 [source_file: expected0]
        ASSIGN 8 [source_file: expected0]
            NAME action 8 [source_file: expected0]
            NAME proto 8 [source_file: expected0]
    RETURN 9 [source_file: expected0]


Subtree2: BLOCK 7 [source_file: testcode]
    EXPR_RESULT 8 [source_file: testcode]
        ASSIGN 8 [source_file: testcode]
            NAME action 8 [source_file: testcode]
            NAME proto 8 [source_file: testcode]
]
junit.framework.AssertionFailedError: 
Expected: f=function(){var action;a:{var proto=null;try{proto=new Proto}finally{action=proto;return}}}
Result: f=function(){var action;a:{var proto=null;try{proto=new Proto}finally{action=proto}}}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            ASSIGN 1 [source_file: expected0]
                NAME f 1 [source_file: expected0]
                FUNCTION  1 [source_file: expected0]
                    NAME  1 [source_file: expected0]
                    PARAM_LIST 1 [source_file: expected0]
                    BLOCK 1 [source_file: expected0]
                        VAR 2 [source_file: expected0]
                            NAME action 2 [source_file: expected0]
                        LABEL 3 [source_file: expected0]
                            LABEL_NAME a 3 [source_file: expected0]
                            BLOCK 3 [source_file: expected0]
                                VAR 4 [source_file: expected0]
                                    NAME proto 4 [source_file: expected0]
                                        NULL 4 [source_file: expected0]
                                TRY 5 [source_file: expected0]
                                    BLOCK 5 [source_file: expected0]
                                        EXPR_RESULT 6 [source_file: expected0]
                                            ASSIGN 6 [source_file: expected0]
                                                NAME proto 6 [source_file: expected0]
                                                NEW 6 [source_file: expected0]
                                                    NAME Proto 6 [source_file: expected0]
                                    BLOCK 7 [source_file: expected0]
                                    BLOCK 7 [source_file: expected0]
                                        EXPR_RESULT 8 [source_file: expected0]
                                            ASSIGN 8 [source_file: expected0]
                                                NAME action 8 [source_file: expected0]
                                                NAME proto 8 [source_file: expected0]
                                        RETURN 9 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        EXPR_RESULT 1 [source_file: testcode]
            ASSIGN 1 [source_file: testcode]
                NAME f 1 [source_file: testcode]
                FUNCTION  1 [source_file: testcode]
                    NAME  1 [source_file: testcode]
                    PARAM_LIST 1 [source_file: testcode]
                    BLOCK 1 [source_file: testcode]
                        VAR 2 [source_file: testcode]
                            NAME action 2 [source_file: testcode]
                        LABEL 3 [source_file: testcode]
                            LABEL_NAME a 3 [source_file: testcode]
                            BLOCK 3 [source_file: testcode]
                                VAR 4 [source_file: testcode]
                                    NAME proto 4 [source_file: testcode]
                                        NULL 4 [source_file: testcode]
                                TRY 5 [source_file: testcode]
                                    BLOCK 5 [source_file: testcode]
                                        EXPR_RESULT 6 [source_file: testcode]
                                            ASSIGN 6 [source_file: testcode]
                                                NAME proto 6 [source_file: testcode]
                                                NEW 6 [source_file: testcode]
                                                    NAME Proto 6 [source_file: testcode]
                                    BLOCK 7 [source_file: testcode]
                                    BLOCK 7 [source_file: testcode]
                                        EXPR_RESULT 8 [source_file: testcode]
                                            ASSIGN 8 [source_file: testcode]
                                                NAME action 8 [source_file: testcode]
                                                NAME proto 8 [source_file: testcode]


Subtree1: BLOCK 7 [source_file: expected0]
    EXPR_RESULT 8 [source_file: expected0]
        ASSIGN 8 [source_file: expected0]
            NAME action 8 [source_file: expected0]
            NAME proto 8 [source_file: expected0]
    RETURN 9 [source_file: expected0]


Subtree2: BLOCK 7 [source_file: testcode]
    EXPR_RESULT 8 [source_file: testcode]
        ASSIGN 8 [source_file: testcode]
            NAME action 8 [source_file: testcode]
            NAME proto 8 [source_file: testcode]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:928)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:460)
~ testDontRemoveBreakInTryFinally(com.google.javascript.jscomp.UnreachableCodeEliminationTest)
[
Expected: function f(){b:try{throw 9;}finally{break b}return 1}
Result: function f(){b:try{throw 9;}finally{}return 1}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION f 1 [source_file: expected0]
            NAME f 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                LABEL 1 [source_file: expected0]
                    LABEL_NAME b 1 [source_file: expected0]
                    TRY 1 [source_file: expected0]
                        BLOCK 1 [source_file: expected0]
                            THROW 1 [source_file: expected0]
                                NUMBER 9.0 1 [source_file: expected0]
                        BLOCK 1 [source_file: expected0]
                        BLOCK 1 [source_file: expected0]
                            BREAK 1 [source_file: expected0]
                                LABEL_NAME b 1 [source_file: expected0]
                RETURN 1 [source_file: expected0]
                    NUMBER 1.0 1 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION f 1 [source_file: testcode]
            NAME f 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                LABEL 1 [source_file: testcode]
                    LABEL_NAME b 1 [source_file: testcode]
                    TRY 1 [source_file: testcode]
                        BLOCK 1 [source_file: testcode]
                            THROW 1 [source_file: testcode]
                                NUMBER 9.0 1 [source_file: testcode]
                        BLOCK 1 [source_file: testcode]
                        BLOCK 1 [source_file: testcode]
                RETURN 1 [source_file: testcode]
                    NUMBER 1.0 1 [source_file: testcode]


Subtree1: BLOCK 1 [source_file: expected0]
    BREAK 1 [source_file: expected0]
        LABEL_NAME b 1 [source_file: expected0]


Subtree2: BLOCK 1 [source_file: testcode]
]
junit.framework.AssertionFailedError: 
Expected: function f(){b:try{throw 9;}finally{break b}return 1}
Result: function f(){b:try{throw 9;}finally{}return 1}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION f 1 [source_file: expected0]
            NAME f 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                LABEL 1 [source_file: expected0]
                    LABEL_NAME b 1 [source_file: expected0]
                    TRY 1 [source_file: expected0]
                        BLOCK 1 [source_file: expected0]
                            THROW 1 [source_file: expected0]
                                NUMBER 9.0 1 [source_file: expected0]
                        BLOCK 1 [source_file: expected0]
                        BLOCK 1 [source_file: expected0]
                            BREAK 1 [source_file: expected0]
                                LABEL_NAME b 1 [source_file: expected0]
                RETURN 1 [source_file: expected0]
                    NUMBER 1.0 1 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION f 1 [source_file: testcode]
            NAME f 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                LABEL 1 [source_file: testcode]
                    LABEL_NAME b 1 [source_file: testcode]
                    TRY 1 [source_file: testcode]
                        BLOCK 1 [source_file: testcode]
                            THROW 1 [source_file: testcode]
                                NUMBER 9.0 1 [source_file: testcode]
                        BLOCK 1 [source_file: testcode]
                        BLOCK 1 [source_file: testcode]
                RETURN 1 [source_file: testcode]
                    NUMBER 1.0 1 [source_file: testcode]


Subtree1: BLOCK 1 [source_file: expected0]
    BREAK 1 [source_file: expected0]
        LABEL_NAME b 1 [source_file: expected0]


Subtree2: BLOCK 1 [source_file: testcode]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:928)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:460)
~ testIssue4177428_continue(com.google.javascript.jscomp.UnreachableCodeEliminationTest)
[
Expected: f=function(){var action;a:do{var proto=null;try{proto=new Proto}finally{action=proto;continue a}}while(false);alert(action)}
Result: f=function(){var action;a:do{var proto=null;try{proto=new Proto}finally{action=proto}}while(false);alert(action)}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            ASSIGN 1 [source_file: expected0]
                NAME f 1 [source_file: expected0]
                FUNCTION  1 [source_file: expected0]
                    NAME  1 [source_file: expected0]
                    PARAM_LIST 1 [source_file: expected0]
                    BLOCK 1 [source_file: expected0]
                        VAR 2 [source_file: expected0]
                            NAME action 2 [source_file: expected0]
                        LABEL 3 [source_file: expected0]
                            LABEL_NAME a 3 [source_file: expected0]
                            DO 3 [source_file: expected0]
                                BLOCK 3 [source_file: expected0]
                                    VAR 4 [source_file: expected0]
                                        NAME proto 4 [source_file: expected0]
                                            NULL 4 [source_file: expected0]
                                    TRY 5 [source_file: expected0]
                                        BLOCK 5 [source_file: expected0]
                                            EXPR_RESULT 6 [source_file: expected0]
                                                ASSIGN 6 [source_file: expected0]
                                                    NAME proto 6 [source_file: expected0]
                                                    NEW 6 [source_file: expected0]
                                                        NAME Proto 6 [source_file: expected0]
                                        BLOCK 7 [source_file: expected0]
                                        BLOCK 7 [source_file: expected0]
                                            EXPR_RESULT 8 [source_file: expected0]
                                                ASSIGN 8 [source_file: expected0]
                                                    NAME action 8 [source_file: expected0]
                                                    NAME proto 8 [source_file: expected0]
                                            CONTINUE 9 [source_file: expected0]
                                                LABEL_NAME a 9 [source_file: expected0]
                                FALSE 11 [source_file: expected0]
                        EXPR_RESULT 12 [source_file: expected0]
                            CALL 12 [free_call: 1] [source_file: expected0]
                                NAME alert 12 [source_file: expected0]
                                NAME action 12 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        EXPR_RESULT 1 [source_file: testcode]
            ASSIGN 1 [source_file: testcode]
                NAME f 1 [source_file: testcode]
                FUNCTION  1 [source_file: testcode]
                    NAME  1 [source_file: testcode]
                    PARAM_LIST 1 [source_file: testcode]
                    BLOCK 1 [source_file: testcode]
                        VAR 2 [source_file: testcode]
                            NAME action 2 [source_file: testcode]
                        LABEL 3 [source_file: testcode]
                            LABEL_NAME a 3 [source_file: testcode]
                            DO 3 [source_file: testcode]
                                BLOCK 3 [source_file: testcode]
                                    VAR 4 [source_file: testcode]
                                        NAME proto 4 [source_file: testcode]
                                            NULL 4 [source_file: testcode]
                                    TRY 5 [source_file: testcode]
                                        BLOCK 5 [source_file: testcode]
                                            EXPR_RESULT 6 [source_file: testcode]
                                                ASSIGN 6 [source_file: testcode]
                                                    NAME proto 6 [source_file: testcode]
                                                    NEW 6 [source_file: testcode]
                                                        NAME Proto 6 [source_file: testcode]
                                        BLOCK 7 [source_file: testcode]
                                        BLOCK 7 [source_file: testcode]
                                            EXPR_RESULT 8 [source_file: testcode]
                                                ASSIGN 8 [source_file: testcode]
                                                    NAME action 8 [source_file: testcode]
                                                    NAME proto 8 [source_file: testcode]
                                FALSE 11 [source_file: testcode]
                        EXPR_RESULT 12 [source_file: testcode]
                            CALL 12 [free_call: 1] [source_file: testcode]
                                NAME alert 12 [source_file: testcode]
                                NAME action 12 [source_file: testcode]


Subtree1: BLOCK 7 [source_file: expected0]
    EXPR_RESULT 8 [source_file: expected0]
        ASSIGN 8 [source_file: expected0]
            NAME action 8 [source_file: expected0]
            NAME proto 8 [source_file: expected0]
    CONTINUE 9 [source_file: expected0]
        LABEL_NAME a 9 [source_file: expected0]


Subtree2: BLOCK 7 [source_file: testcode]
    EXPR_RESULT 8 [source_file: testcode]
        ASSIGN 8 [source_file: testcode]
            NAME action 8 [source_file: testcode]
            NAME proto 8 [source_file: testcode]
]
junit.framework.AssertionFailedError: 
Expected: f=function(){var action;a:do{var proto=null;try{proto=new Proto}finally{action=proto;continue a}}while(false);alert(action)}
Result: f=function(){var action;a:do{var proto=null;try{proto=new Proto}finally{action=proto}}while(false);alert(action)}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            ASSIGN 1 [source_file: expected0]
                NAME f 1 [source_file: expected0]
                FUNCTION  1 [source_file: expected0]
                    NAME  1 [source_file: expected0]
                    PARAM_LIST 1 [source_file: expected0]
                    BLOCK 1 [source_file: expected0]
                        VAR 2 [source_file: expected0]
                            NAME action 2 [source_file: expected0]
                        LABEL 3 [source_file: expected0]
                            LABEL_NAME a 3 [source_file: expected0]
                            DO 3 [source_file: expected0]
                                BLOCK 3 [source_file: expected0]
                                    VAR 4 [source_file: expected0]
                                        NAME proto 4 [source_file: expected0]
                                            NULL 4 [source_file: expected0]
                                    TRY 5 [source_file: expected0]
                                        BLOCK 5 [source_file: expected0]
                                            EXPR_RESULT 6 [source_file: expected0]
                                                ASSIGN 6 [source_file: expected0]
                                                    NAME proto 6 [source_file: expected0]
                                                    NEW 6 [source_file: expected0]
                                                        NAME Proto 6 [source_file: expected0]
                                        BLOCK 7 [source_file: expected0]
                                        BLOCK 7 [source_file: expected0]
                                            EXPR_RESULT 8 [source_file: expected0]
                                                ASSIGN 8 [source_file: expected0]
                                                    NAME action 8 [source_file: expected0]
                                                    NAME proto 8 [source_file: expected0]
                                            CONTINUE 9 [source_file: expected0]
                                                LABEL_NAME a 9 [source_file: expected0]
                                FALSE 11 [source_file: expected0]
                        EXPR_RESULT 12 [source_file: expected0]
                            CALL 12 [free_call: 1] [source_file: expected0]
                                NAME alert 12 [source_file: expected0]
                                NAME action 12 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        EXPR_RESULT 1 [source_file: testcode]
            ASSIGN 1 [source_file: testcode]
                NAME f 1 [source_file: testcode]
                FUNCTION  1 [source_file: testcode]
                    NAME  1 [source_file: testcode]
                    PARAM_LIST 1 [source_file: testcode]
                    BLOCK 1 [source_file: testcode]
                        VAR 2 [source_file: testcode]
                            NAME action 2 [source_file: testcode]
                        LABEL 3 [source_file: testcode]
                            LABEL_NAME a 3 [source_file: testcode]
                            DO 3 [source_file: testcode]
                                BLOCK 3 [source_file: testcode]
                                    VAR 4 [source_file: testcode]
                                        NAME proto 4 [source_file: testcode]
                                            NULL 4 [source_file: testcode]
                                    TRY 5 [source_file: testcode]
                                        BLOCK 5 [source_file: testcode]
                                            EXPR_RESULT 6 [source_file: testcode]
                                                ASSIGN 6 [source_file: testcode]
                                                    NAME proto 6 [source_file: testcode]
                                                    NEW 6 [source_file: testcode]
                                                        NAME Proto 6 [source_file: testcode]
                                        BLOCK 7 [source_file: testcode]
                                        BLOCK 7 [source_file: testcode]
                                            EXPR_RESULT 8 [source_file: testcode]
                                                ASSIGN 8 [source_file: testcode]
                                                    NAME action 8 [source_file: testcode]
                                                    NAME proto 8 [source_file: testcode]
                                FALSE 11 [source_file: testcode]
                        EXPR_RESULT 12 [source_file: testcode]
                            CALL 12 [free_call: 1] [source_file: testcode]
                                NAME alert 12 [source_file: testcode]
                                NAME action 12 [source_file: testcode]


Subtree1: BLOCK 7 [source_file: expected0]
    EXPR_RESULT 8 [source_file: expected0]
        ASSIGN 8 [source_file: expected0]
            NAME action 8 [source_file: expected0]
            NAME proto 8 [source_file: expected0]
    CONTINUE 9 [source_file: expected0]
        LABEL_NAME a 9 [source_file: expected0]


Subtree2: BLOCK 7 [source_file: testcode]
    EXPR_RESULT 8 [source_file: testcode]
        ASSIGN 8 [source_file: testcode]
            NAME action 8 [source_file: testcode]
            NAME proto 8 [source_file: testcode]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:928)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:460)
~ testDontRemoveBreakInTryFinallySwitch(com.google.javascript.jscomp.UnreachableCodeEliminationTest)
[
Expected: function f(){b:try{throw 9;}finally{switch(x){case 1:break b}}return 1}
Result: function f(){b:try{throw 9;}finally{switch(x){case 1:}}return 1}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION f 1 [source_file: expected0]
            NAME f 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                LABEL 1 [source_file: expected0]
                    LABEL_NAME b 1 [source_file: expected0]
                    TRY 1 [source_file: expected0]
                        BLOCK 1 [source_file: expected0]
                            THROW 1 [source_file: expected0]
                                NUMBER 9.0 1 [source_file: expected0]
                        BLOCK 1 [source_file: expected0]
                        BLOCK 1 [source_file: expected0]
                            SWITCH 1 [source_file: expected0]
                                NAME x 1 [source_file: expected0]
                                CASE 1 [source_file: expected0]
                                    NUMBER 1.0 1 [source_file: expected0]
                                    BLOCK 1 [synthetic: 1] [source_file: expected0]
                                        BREAK 1 [source_file: expected0]
                                            LABEL_NAME b 1 [source_file: expected0]
                RETURN 1 [source_file: expected0]
                    NUMBER 1.0 1 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION f 1 [source_file: testcode]
            NAME f 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                LABEL 1 [source_file: testcode]
                    LABEL_NAME b 1 [source_file: testcode]
                    TRY 1 [source_file: testcode]
                        BLOCK 1 [source_file: testcode]
                            THROW 1 [source_file: testcode]
                                NUMBER 9.0 1 [source_file: testcode]
                        BLOCK 1 [source_file: testcode]
                        BLOCK 1 [source_file: testcode]
                            SWITCH 1 [source_file: testcode]
                                NAME x 1 [source_file: testcode]
                                CASE 1 [source_file: testcode]
                                    NUMBER 1.0 1 [source_file: testcode]
                                    BLOCK 1 [synthetic: 1] [source_file: testcode]
                RETURN 1 [source_file: testcode]
                    NUMBER 1.0 1 [source_file: testcode]


Subtree1: BLOCK 1 [synthetic: 1] [source_file: expected0]
    BREAK 1 [source_file: expected0]
        LABEL_NAME b 1 [source_file: expected0]


Subtree2: BLOCK 1 [synthetic: 1] [source_file: testcode]
]
junit.framework.AssertionFailedError: 
Expected: function f(){b:try{throw 9;}finally{switch(x){case 1:break b}}return 1}
Result: function f(){b:try{throw 9;}finally{switch(x){case 1:}}return 1}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION f 1 [source_file: expected0]
            NAME f 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                LABEL 1 [source_file: expected0]
                    LABEL_NAME b 1 [source_file: expected0]
                    TRY 1 [source_file: expected0]
                        BLOCK 1 [source_file: expected0]
                            THROW 1 [source_file: expected0]
                                NUMBER 9.0 1 [source_file: expected0]
                        BLOCK 1 [source_file: expected0]
                        BLOCK 1 [source_file: expected0]
                            SWITCH 1 [source_file: expected0]
                                NAME x 1 [source_file: expected0]
                                CASE 1 [source_file: expected0]
                                    NUMBER 1.0 1 [source_file: expected0]
                                    BLOCK 1 [synthetic: 1] [source_file: expected0]
                                        BREAK 1 [source_file: expected0]
                                            LABEL_NAME b 1 [source_file: expected0]
                RETURN 1 [source_file: expected0]
                    NUMBER 1.0 1 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION f 1 [source_file: testcode]
            NAME f 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                LABEL 1 [source_file: testcode]
                    LABEL_NAME b 1 [source_file: testcode]
                    TRY 1 [source_file: testcode]
                        BLOCK 1 [source_file: testcode]
                            THROW 1 [source_file: testcode]
                                NUMBER 9.0 1 [source_file: testcode]
                        BLOCK 1 [source_file: testcode]
                        BLOCK 1 [source_file: testcode]
                            SWITCH 1 [source_file: testcode]
                                NAME x 1 [source_file: testcode]
                                CASE 1 [source_file: testcode]
                                    NUMBER 1.0 1 [source_file: testcode]
                                    BLOCK 1 [synthetic: 1] [source_file: testcode]
                RETURN 1 [source_file: testcode]
                    NUMBER 1.0 1 [source_file: testcode]


Subtree1: BLOCK 1 [synthetic: 1] [source_file: expected0]
    BREAK 1 [source_file: expected0]
        LABEL_NAME b 1 [source_file: expected0]


Subtree2: BLOCK 1 [synthetic: 1] [source_file: testcode]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:928)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:460)
~ testIssue4177428a(com.google.javascript.jscomp.UnreachableCodeEliminationTest)
[
Expected: f=function(){var action;a:{var proto=null;try{proto=new Proto}finally{action=proto;break a}}alert(action)}
Result: f=function(){var action;a:{var proto=null;try{proto=new Proto}finally{action=proto}}alert(action)}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            ASSIGN 1 [source_file: expected0]
                NAME f 1 [source_file: expected0]
                FUNCTION  1 [source_file: expected0]
                    NAME  1 [source_file: expected0]
                    PARAM_LIST 1 [source_file: expected0]
                    BLOCK 1 [source_file: expected0]
                        VAR 2 [source_file: expected0]
                            NAME action 2 [source_file: expected0]
                        LABEL 3 [source_file: expected0]
                            LABEL_NAME a 3 [source_file: expected0]
                            BLOCK 3 [source_file: expected0]
                                VAR 4 [source_file: expected0]
                                    NAME proto 4 [source_file: expected0]
                                        NULL 4 [source_file: expected0]
                                TRY 5 [source_file: expected0]
                                    BLOCK 5 [source_file: expected0]
                                        EXPR_RESULT 6 [source_file: expected0]
                                            ASSIGN 6 [source_file: expected0]
                                                NAME proto 6 [source_file: expected0]
                                                NEW 6 [source_file: expected0]
                                                    NAME Proto 6 [source_file: expected0]
                                    BLOCK 7 [source_file: expected0]
                                    BLOCK 7 [source_file: expected0]
                                        EXPR_RESULT 8 [source_file: expected0]
                                            ASSIGN 8 [source_file: expected0]
                                                NAME action 8 [source_file: expected0]
                                                NAME proto 8 [source_file: expected0]
                                        BREAK 9 [source_file: expected0]
                                            LABEL_NAME a 9 [source_file: expected0]
                        EXPR_RESULT 12 [source_file: expected0]
                            CALL 12 [free_call: 1] [source_file: expected0]
                                NAME alert 12 [source_file: expected0]
                                NAME action 12 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        EXPR_RESULT 1 [source_file: testcode]
            ASSIGN 1 [source_file: testcode]
                NAME f 1 [source_file: testcode]
                FUNCTION  1 [source_file: testcode]
                    NAME  1 [source_file: testcode]
                    PARAM_LIST 1 [source_file: testcode]
                    BLOCK 1 [source_file: testcode]
                        VAR 2 [source_file: testcode]
                            NAME action 2 [source_file: testcode]
                        LABEL 3 [source_file: testcode]
                            LABEL_NAME a 3 [source_file: testcode]
                            BLOCK 3 [source_file: testcode]
                                VAR 4 [source_file: testcode]
                                    NAME proto 4 [source_file: testcode]
                                        NULL 4 [source_file: testcode]
                                TRY 5 [source_file: testcode]
                                    BLOCK 5 [source_file: testcode]
                                        EXPR_RESULT 6 [source_file: testcode]
                                            ASSIGN 6 [source_file: testcode]
                                                NAME proto 6 [source_file: testcode]
                                                NEW 6 [source_file: testcode]
                                                    NAME Proto 6 [source_file: testcode]
                                    BLOCK 7 [source_file: testcode]
                                    BLOCK 7 [source_file: testcode]
                                        EXPR_RESULT 8 [source_file: testcode]
                                            ASSIGN 8 [source_file: testcode]
                                                NAME action 8 [source_file: testcode]
                                                NAME proto 8 [source_file: testcode]
                        EXPR_RESULT 12 [source_file: testcode]
                            CALL 12 [free_call: 1] [source_file: testcode]
                                NAME alert 12 [source_file: testcode]
                                NAME action 12 [source_file: testcode]


Subtree1: BLOCK 7 [source_file: expected0]
    EXPR_RESULT 8 [source_file: expected0]
        ASSIGN 8 [source_file: expected0]
            NAME action 8 [source_file: expected0]
            NAME proto 8 [source_file: expected0]
    BREAK 9 [source_file: expected0]
        LABEL_NAME a 9 [source_file: expected0]


Subtree2: BLOCK 7 [source_file: testcode]
    EXPR_RESULT 8 [source_file: testcode]
        ASSIGN 8 [source_file: testcode]
            NAME action 8 [source_file: testcode]
            NAME proto 8 [source_file: testcode]
]
junit.framework.AssertionFailedError: 
Expected: f=function(){var action;a:{var proto=null;try{proto=new Proto}finally{action=proto;break a}}alert(action)}
Result: f=function(){var action;a:{var proto=null;try{proto=new Proto}finally{action=proto}}alert(action)}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            ASSIGN 1 [source_file: expected0]
                NAME f 1 [source_file: expected0]
                FUNCTION  1 [source_file: expected0]
                    NAME  1 [source_file: expected0]
                    PARAM_LIST 1 [source_file: expected0]
                    BLOCK 1 [source_file: expected0]
                        VAR 2 [source_file: expected0]
                            NAME action 2 [source_file: expected0]
                        LABEL 3 [source_file: expected0]
                            LABEL_NAME a 3 [source_file: expected0]
                            BLOCK 3 [source_file: expected0]
                                VAR 4 [source_file: expected0]
                                    NAME proto 4 [source_file: expected0]
                                        NULL 4 [source_file: expected0]
                                TRY 5 [source_file: expected0]
                                    BLOCK 5 [source_file: expected0]
                                        EXPR_RESULT 6 [source_file: expected0]
                                            ASSIGN 6 [source_file: expected0]
                                                NAME proto 6 [source_file: expected0]
                                                NEW 6 [source_file: expected0]
                                                    NAME Proto 6 [source_file: expected0]
                                    BLOCK 7 [source_file: expected0]
                                    BLOCK 7 [source_file: expected0]
                                        EXPR_RESULT 8 [source_file: expected0]
                                            ASSIGN 8 [source_file: expected0]
                                                NAME action 8 [source_file: expected0]
                                                NAME proto 8 [source_file: expected0]
                                        BREAK 9 [source_file: expected0]
                                            LABEL_NAME a 9 [source_file: expected0]
                        EXPR_RESULT 12 [source_file: expected0]
                            CALL 12 [free_call: 1] [source_file: expected0]
                                NAME alert 12 [source_file: expected0]
                                NAME action 12 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        EXPR_RESULT 1 [source_file: testcode]
            ASSIGN 1 [source_file: testcode]
                NAME f 1 [source_file: testcode]
                FUNCTION  1 [source_file: testcode]
                    NAME  1 [source_file: testcode]
                    PARAM_LIST 1 [source_file: testcode]
                    BLOCK 1 [source_file: testcode]
                        VAR 2 [source_file: testcode]
                            NAME action 2 [source_file: testcode]
                        LABEL 3 [source_file: testcode]
                            LABEL_NAME a 3 [source_file: testcode]
                            BLOCK 3 [source_file: testcode]
                                VAR 4 [source_file: testcode]
                                    NAME proto 4 [source_file: testcode]
                                        NULL 4 [source_file: testcode]
                                TRY 5 [source_file: testcode]
                                    BLOCK 5 [source_file: testcode]
                                        EXPR_RESULT 6 [source_file: testcode]
                                            ASSIGN 6 [source_file: testcode]
                                                NAME proto 6 [source_file: testcode]
                                                NEW 6 [source_file: testcode]
                                                    NAME Proto 6 [source_file: testcode]
                                    BLOCK 7 [source_file: testcode]
                                    BLOCK 7 [source_file: testcode]
                                        EXPR_RESULT 8 [source_file: testcode]
                                            ASSIGN 8 [source_file: testcode]
                                                NAME action 8 [source_file: testcode]
                                                NAME proto 8 [source_file: testcode]
                        EXPR_RESULT 12 [source_file: testcode]
                            CALL 12 [free_call: 1] [source_file: testcode]
                                NAME alert 12 [source_file: testcode]
                                NAME action 12 [source_file: testcode]


Subtree1: BLOCK 7 [source_file: expected0]
    EXPR_RESULT 8 [source_file: expected0]
        ASSIGN 8 [source_file: expected0]
            NAME action 8 [source_file: expected0]
            NAME proto 8 [source_file: expected0]
    BREAK 9 [source_file: expected0]
        LABEL_NAME a 9 [source_file: expected0]


Subtree2: BLOCK 7 [source_file: testcode]
    EXPR_RESULT 8 [source_file: testcode]
        ASSIGN 8 [source_file: testcode]
            NAME action 8 [source_file: testcode]
            NAME proto 8 [source_file: testcode]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:928)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:460)
~ testIssue4177428c(com.google.javascript.jscomp.UnreachableCodeEliminationTest)
[
Expected: f=function(){var action;a:{var proto=null;try{}finally{try{proto=new Proto}finally{action=proto;break a}}}alert(action)}
Result: f=function(){var action;a:{var proto=null;try{}finally{try{proto=new Proto}finally{action=proto}}}alert(action)}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            ASSIGN 1 [source_file: expected0]
                NAME f 1 [source_file: expected0]
                FUNCTION  1 [source_file: expected0]
                    NAME  1 [source_file: expected0]
                    PARAM_LIST 1 [source_file: expected0]
                    BLOCK 1 [source_file: expected0]
                        VAR 2 [source_file: expected0]
                            NAME action 2 [source_file: expected0]
                        LABEL 3 [source_file: expected0]
                            LABEL_NAME a 3 [source_file: expected0]
                            BLOCK 3 [source_file: expected0]
                                VAR 4 [source_file: expected0]
                                    NAME proto 4 [source_file: expected0]
                                        NULL 4 [source_file: expected0]
                                TRY 5 [source_file: expected0]
                                    BLOCK 5 [source_file: expected0]
                                    BLOCK 6 [source_file: expected0]
                                    BLOCK 6 [source_file: expected0]
                                        TRY 7 [source_file: expected0]
                                            BLOCK 7 [source_file: expected0]
                                                EXPR_RESULT 8 [source_file: expected0]
                                                    ASSIGN 8 [source_file: expected0]
                                                        NAME proto 8 [source_file: expected0]
                                                        NEW 8 [source_file: expected0]
                                                            NAME Proto 8 [source_file: expected0]
                                            BLOCK 9 [source_file: expected0]
                                            BLOCK 9 [source_file: expected0]
                                                EXPR_RESULT 10 [source_file: expected0]
                                                    ASSIGN 10 [source_file: expected0]
                                                        NAME action 10 [source_file: expected0]
                                                        NAME proto 10 [source_file: expected0]
                                                BREAK 11 [source_file: expected0]
                                                    LABEL_NAME a 11 [source_file: expected0]
                        EXPR_RESULT 15 [source_file: expected0]
                            CALL 15 [free_call: 1] [source_file: expected0]
                                NAME alert 15 [source_file: expected0]
                                NAME action 15 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        EXPR_RESULT 1 [source_file: testcode]
            ASSIGN 1 [source_file: testcode]
                NAME f 1 [source_file: testcode]
                FUNCTION  1 [source_file: testcode]
                    NAME  1 [source_file: testcode]
                    PARAM_LIST 1 [source_file: testcode]
                    BLOCK 1 [source_file: testcode]
                        VAR 2 [source_file: testcode]
                            NAME action 2 [source_file: testcode]
                        LABEL 3 [source_file: testcode]
                            LABEL_NAME a 3 [source_file: testcode]
                            BLOCK 3 [source_file: testcode]
                                VAR 4 [source_file: testcode]
                                    NAME proto 4 [source_file: testcode]
                                        NULL 4 [source_file: testcode]
                                TRY 5 [source_file: testcode]
                                    BLOCK 5 [source_file: testcode]
                                    BLOCK 6 [source_file: testcode]
                                    BLOCK 6 [source_file: testcode]
                                        TRY 7 [source_file: testcode]
                                            BLOCK 7 [source_file: testcode]
                                                EXPR_RESULT 8 [source_file: testcode]
                                                    ASSIGN 8 [source_file: testcode]
                                                        NAME proto 8 [source_file: testcode]
                                                        NEW 8 [source_file: testcode]
                                                            NAME Proto 8 [source_file: testcode]
                                            BLOCK 9 [source_file: testcode]
                                            BLOCK 9 [source_file: testcode]
                                                EXPR_RESULT 10 [source_file: testcode]
                                                    ASSIGN 10 [source_file: testcode]
                                                        NAME action 10 [source_file: testcode]
                                                        NAME proto 10 [source_file: testcode]
                        EXPR_RESULT 15 [source_file: testcode]
                            CALL 15 [free_call: 1] [source_file: testcode]
                                NAME alert 15 [source_file: testcode]
                                NAME action 15 [source_file: testcode]


Subtree1: BLOCK 9 [source_file: expected0]
    EXPR_RESULT 10 [source_file: expected0]
        ASSIGN 10 [source_file: expected0]
            NAME action 10 [source_file: expected0]
            NAME proto 10 [source_file: expected0]
    BREAK 11 [source_file: expected0]
        LABEL_NAME a 11 [source_file: expected0]


Subtree2: BLOCK 9 [source_file: testcode]
    EXPR_RESULT 10 [source_file: testcode]
        ASSIGN 10 [source_file: testcode]
            NAME action 10 [source_file: testcode]
            NAME proto 10 [source_file: testcode]
]
junit.framework.AssertionFailedError: 
Expected: f=function(){var action;a:{var proto=null;try{}finally{try{proto=new Proto}finally{action=proto;break a}}}alert(action)}
Result: f=function(){var action;a:{var proto=null;try{}finally{try{proto=new Proto}finally{action=proto}}}alert(action)}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            ASSIGN 1 [source_file: expected0]
                NAME f 1 [source_file: expected0]
                FUNCTION  1 [source_file: expected0]
                    NAME  1 [source_file: expected0]
                    PARAM_LIST 1 [source_file: expected0]
                    BLOCK 1 [source_file: expected0]
                        VAR 2 [source_file: expected0]
                            NAME action 2 [source_file: expected0]
                        LABEL 3 [source_file: expected0]
                            LABEL_NAME a 3 [source_file: expected0]
                            BLOCK 3 [source_file: expected0]
                                VAR 4 [source_file: expected0]
                                    NAME proto 4 [source_file: expected0]
                                        NULL 4 [source_file: expected0]
                                TRY 5 [source_file: expected0]
                                    BLOCK 5 [source_file: expected0]
                                    BLOCK 6 [source_file: expected0]
                                    BLOCK 6 [source_file: expected0]
                                        TRY 7 [source_file: expected0]
                                            BLOCK 7 [source_file: expected0]
                                                EXPR_RESULT 8 [source_file: expected0]
                                                    ASSIGN 8 [source_file: expected0]
                                                        NAME proto 8 [source_file: expected0]
                                                        NEW 8 [source_file: expected0]
                                                            NAME Proto 8 [source_file: expected0]
                                            BLOCK 9 [source_file: expected0]
                                            BLOCK 9 [source_file: expected0]
                                                EXPR_RESULT 10 [source_file: expected0]
                                                    ASSIGN 10 [source_file: expected0]
                                                        NAME action 10 [source_file: expected0]
                                                        NAME proto 10 [source_file: expected0]
                                                BREAK 11 [source_file: expected0]
                                                    LABEL_NAME a 11 [source_file: expected0]
                        EXPR_RESULT 15 [source_file: expected0]
                            CALL 15 [free_call: 1] [source_file: expected0]
                                NAME alert 15 [source_file: expected0]
                                NAME action 15 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        EXPR_RESULT 1 [source_file: testcode]
            ASSIGN 1 [source_file: testcode]
                NAME f 1 [source_file: testcode]
                FUNCTION  1 [source_file: testcode]
                    NAME  1 [source_file: testcode]
                    PARAM_LIST 1 [source_file: testcode]
                    BLOCK 1 [source_file: testcode]
                        VAR 2 [source_file: testcode]
                            NAME action 2 [source_file: testcode]
                        LABEL 3 [source_file: testcode]
                            LABEL_NAME a 3 [source_file: testcode]
                            BLOCK 3 [source_file: testcode]
                                VAR 4 [source_file: testcode]
                                    NAME proto 4 [source_file: testcode]
                                        NULL 4 [source_file: testcode]
                                TRY 5 [source_file: testcode]
                                    BLOCK 5 [source_file: testcode]
                                    BLOCK 6 [source_file: testcode]
                                    BLOCK 6 [source_file: testcode]
                                        TRY 7 [source_file: testcode]
                                            BLOCK 7 [source_file: testcode]
                                                EXPR_RESULT 8 [source_file: testcode]
                                                    ASSIGN 8 [source_file: testcode]
                                                        NAME proto 8 [source_file: testcode]
                                                        NEW 8 [source_file: testcode]
                                                            NAME Proto 8 [source_file: testcode]
                                            BLOCK 9 [source_file: testcode]
                                            BLOCK 9 [source_file: testcode]
                                                EXPR_RESULT 10 [source_file: testcode]
                                                    ASSIGN 10 [source_file: testcode]
                                                        NAME action 10 [source_file: testcode]
                                                        NAME proto 10 [source_file: testcode]
                        EXPR_RESULT 15 [source_file: testcode]
                            CALL 15 [free_call: 1] [source_file: testcode]
                                NAME alert 15 [source_file: testcode]
                                NAME action 15 [source_file: testcode]


Subtree1: BLOCK 9 [source_file: expected0]
    EXPR_RESULT 10 [source_file: expected0]
        ASSIGN 10 [source_file: expected0]
            NAME action 10 [source_file: expected0]
            NAME proto 10 [source_file: expected0]
    BREAK 11 [source_file: expected0]
        LABEL_NAME a 11 [source_file: expected0]


Subtree2: BLOCK 9 [source_file: testcode]
    EXPR_RESULT 10 [source_file: testcode]
        ASSIGN 10 [source_file: testcode]
            NAME action 10 [source_file: testcode]
            NAME proto 10 [source_file: testcode]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:928)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:460)
~ testIssue4177428_return(com.google.javascript.jscomp.UnreachableCodeEliminationTest)
[
Expected: f=function(){var action;a:{var proto=null;try{proto=new Proto}finally{action=proto;return}}}
Result: f=function(){var action;a:{var proto=null;try{proto=new Proto}finally{action=proto}}}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            ASSIGN 1 [source_file: expected0]
                NAME f 1 [source_file: expected0]
                FUNCTION  1 [source_file: expected0]
                    NAME  1 [source_file: expected0]
                    PARAM_LIST 1 [source_file: expected0]
                    BLOCK 1 [source_file: expected0]
                        VAR 2 [source_file: expected0]
                            NAME action 2 [source_file: expected0]
                        LABEL 3 [source_file: expected0]
                            LABEL_NAME a 3 [source_file: expected0]
                            BLOCK 3 [source_file: expected0]
                                VAR 4 [source_file: expected0]
                                    NAME proto 4 [source_file: expected0]
                                        NULL 4 [source_file: expected0]
                                TRY 5 [source_file: expected0]
                                    BLOCK 5 [source_file: expected0]
                                        EXPR_RESULT 6 [source_file: expected0]
                                            ASSIGN 6 [source_file: expected0]
                                                NAME proto 6 [source_file: expected0]
                                                NEW 6 [source_file: expected0]
                                                    NAME Proto 6 [source_file: expected0]
                                    BLOCK 7 [source_file: expected0]
                                    BLOCK 7 [source_file: expected0]
                                        EXPR_RESULT 8 [source_file: expected0]
                                            ASSIGN 8 [source_file: expected0]
                                                NAME action 8 [source_file: expected0]
                                                NAME proto 8 [source_file: expected0]
                                        RETURN 9 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        EXPR_RESULT 1 [source_file: testcode]
            ASSIGN 1 [source_file: testcode]
                NAME f 1 [source_file: testcode]
                FUNCTION  1 [source_file: testcode]
                    NAME  1 [source_file: testcode]
                    PARAM_LIST 1 [source_file: testcode]
                    BLOCK 1 [source_file: testcode]
                        VAR 2 [source_file: testcode]
                            NAME action 2 [source_file: testcode]
                        LABEL 3 [source_file: testcode]
                            LABEL_NAME a 3 [source_file: testcode]
                            BLOCK 3 [source_file: testcode]
                                VAR 4 [source_file: testcode]
                                    NAME proto 4 [source_file: testcode]
                                        NULL 4 [source_file: testcode]
                                TRY 5 [source_file: testcode]
                                    BLOCK 5 [source_file: testcode]
                                        EXPR_RESULT 6 [source_file: testcode]
                                            ASSIGN 6 [source_file: testcode]
                                                NAME proto 6 [source_file: testcode]
                                                NEW 6 [source_file: testcode]
                                                    NAME Proto 6 [source_file: testcode]
                                    BLOCK 7 [source_file: testcode]
                                    BLOCK 7 [source_file: testcode]
                                        EXPR_RESULT 8 [source_file: testcode]
                                            ASSIGN 8 [source_file: testcode]
                                                NAME action 8 [source_file: testcode]
                                                NAME proto 8 [source_file: testcode]


Subtree1: BLOCK 7 [source_file: expected0]
    EXPR_RESULT 8 [source_file: expected0]
        ASSIGN 8 [source_file: expected0]
            NAME action 8 [source_file: expected0]
            NAME proto 8 [source_file: expected0]
    RETURN 9 [source_file: expected0]


Subtree2: BLOCK 7 [source_file: testcode]
    EXPR_RESULT 8 [source_file: testcode]
        ASSIGN 8 [source_file: testcode]
            NAME action 8 [source_file: testcode]
            NAME proto 8 [source_file: testcode]
]
junit.framework.AssertionFailedError: 
Expected: f=function(){var action;a:{var proto=null;try{proto=new Proto}finally{action=proto;return}}}
Result: f=function(){var action;a:{var proto=null;try{proto=new Proto}finally{action=proto}}}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            ASSIGN 1 [source_file: expected0]
                NAME f 1 [source_file: expected0]
                FUNCTION  1 [source_file: expected0]
                    NAME  1 [source_file: expected0]
                    PARAM_LIST 1 [source_file: expected0]
                    BLOCK 1 [source_file: expected0]
                        VAR 2 [source_file: expected0]
                            NAME action 2 [source_file: expected0]
                        LABEL 3 [source_file: expected0]
                            LABEL_NAME a 3 [source_file: expected0]
                            BLOCK 3 [source_file: expected0]
                                VAR 4 [source_file: expected0]
                                    NAME proto 4 [source_file: expected0]
                                        NULL 4 [source_file: expected0]
                                TRY 5 [source_file: expected0]
                                    BLOCK 5 [source_file: expected0]
                                        EXPR_RESULT 6 [source_file: expected0]
                                            ASSIGN 6 [source_file: expected0]
                                                NAME proto 6 [source_file: expected0]
                                                NEW 6 [source_file: expected0]
                                                    NAME Proto 6 [source_file: expected0]
                                    BLOCK 7 [source_file: expected0]
                                    BLOCK 7 [source_file: expected0]
                                        EXPR_RESULT 8 [source_file: expected0]
                                            ASSIGN 8 [source_file: expected0]
                                                NAME action 8 [source_file: expected0]
                                                NAME proto 8 [source_file: expected0]
                                        RETURN 9 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        EXPR_RESULT 1 [source_file: testcode]
            ASSIGN 1 [source_file: testcode]
                NAME f 1 [source_file: testcode]
                FUNCTION  1 [source_file: testcode]
                    NAME  1 [source_file: testcode]
                    PARAM_LIST 1 [source_file: testcode]
                    BLOCK 1 [source_file: testcode]
                        VAR 2 [source_file: testcode]
                            NAME action 2 [source_file: testcode]
                        LABEL 3 [source_file: testcode]
                            LABEL_NAME a 3 [source_file: testcode]
                            BLOCK 3 [source_file: testcode]
                                VAR 4 [source_file: testcode]
                                    NAME proto 4 [source_file: testcode]
                                        NULL 4 [source_file: testcode]
                                TRY 5 [source_file: testcode]
                                    BLOCK 5 [source_file: testcode]
                                        EXPR_RESULT 6 [source_file: testcode]
                                            ASSIGN 6 [source_file: testcode]
                                                NAME proto 6 [source_file: testcode]
                                                NEW 6 [source_file: testcode]
                                                    NAME Proto 6 [source_file: testcode]
                                    BLOCK 7 [source_file: testcode]
                                    BLOCK 7 [source_file: testcode]
                                        EXPR_RESULT 8 [source_file: testcode]
                                            ASSIGN 8 [source_file: testcode]
                                                NAME action 8 [source_file: testcode]
                                                NAME proto 8 [source_file: testcode]


Subtree1: BLOCK 7 [source_file: expected0]
    EXPR_RESULT 8 [source_file: expected0]
        ASSIGN 8 [source_file: expected0]
            NAME action 8 [source_file: expected0]
            NAME proto 8 [source_file: expected0]
    RETURN 9 [source_file: expected0]


Subtree2: BLOCK 7 [source_file: testcode]
    EXPR_RESULT 8 [source_file: testcode]
        ASSIGN 8 [source_file: testcode]
            NAME action 8 [source_file: testcode]
            NAME proto 8 [source_file: testcode]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:928)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:460)
~ testDontRemoveBreakInTryFinally(com.google.javascript.jscomp.UnreachableCodeEliminationTest)
[
Expected: function f(){b:try{throw 9;}finally{break b}return 1}
Result: function f(){b:try{throw 9;}finally{}return 1}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION f 1 [source_file: expected0]
            NAME f 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                LABEL 1 [source_file: expected0]
                    LABEL_NAME b 1 [source_file: expected0]
                    TRY 1 [source_file: expected0]
                        BLOCK 1 [source_file: expected0]
                            THROW 1 [source_file: expected0]
                                NUMBER 9.0 1 [source_file: expected0]
                        BLOCK 1 [source_file: expected0]
                        BLOCK 1 [source_file: expected0]
                            BREAK 1 [source_file: expected0]
                                LABEL_NAME b 1 [source_file: expected0]
                RETURN 1 [source_file: expected0]
                    NUMBER 1.0 1 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION f 1 [source_file: testcode]
            NAME f 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                LABEL 1 [source_file: testcode]
                    LABEL_NAME b 1 [source_file: testcode]
                    TRY 1 [source_file: testcode]
                        BLOCK 1 [source_file: testcode]
                            THROW 1 [source_file: testcode]
                                NUMBER 9.0 1 [source_file: testcode]
                        BLOCK 1 [source_file: testcode]
                        BLOCK 1 [source_file: testcode]
                RETURN 1 [source_file: testcode]
                    NUMBER 1.0 1 [source_file: testcode]


Subtree1: BLOCK 1 [source_file: expected0]
    BREAK 1 [source_file: expected0]
        LABEL_NAME b 1 [source_file: expected0]


Subtree2: BLOCK 1 [source_file: testcode]
]
junit.framework.AssertionFailedError: 
Expected: function f(){b:try{throw 9;}finally{break b}return 1}
Result: function f(){b:try{throw 9;}finally{}return 1}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION f 1 [source_file: expected0]
            NAME f 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                LABEL 1 [source_file: expected0]
                    LABEL_NAME b 1 [source_file: expected0]
                    TRY 1 [source_file: expected0]
                        BLOCK 1 [source_file: expected0]
                            THROW 1 [source_file: expected0]
                                NUMBER 9.0 1 [source_file: expected0]
                        BLOCK 1 [source_file: expected0]
                        BLOCK 1 [source_file: expected0]
                            BREAK 1 [source_file: expected0]
                                LABEL_NAME b 1 [source_file: expected0]
                RETURN 1 [source_file: expected0]
                    NUMBER 1.0 1 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION f 1 [source_file: testcode]
            NAME f 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                LABEL 1 [source_file: testcode]
                    LABEL_NAME b 1 [source_file: testcode]
                    TRY 1 [source_file: testcode]
                        BLOCK 1 [source_file: testcode]
                            THROW 1 [source_file: testcode]
                                NUMBER 9.0 1 [source_file: testcode]
                        BLOCK 1 [source_file: testcode]
                        BLOCK 1 [source_file: testcode]
                RETURN 1 [source_file: testcode]
                    NUMBER 1.0 1 [source_file: testcode]


Subtree1: BLOCK 1 [source_file: expected0]
    BREAK 1 [source_file: expected0]
        LABEL_NAME b 1 [source_file: expected0]


Subtree2: BLOCK 1 [source_file: testcode]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:928)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:460)
~ testIssue4177428_continue(com.google.javascript.jscomp.UnreachableCodeEliminationTest)
[
Expected: f=function(){var action;a:do{var proto=null;try{proto=new Proto}finally{action=proto;continue a}}while(false);alert(action)}
Result: f=function(){var action;a:do{var proto=null;try{proto=new Proto}finally{action=proto}}while(false);alert(action)}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            ASSIGN 1 [source_file: expected0]
                NAME f 1 [source_file: expected0]
                FUNCTION  1 [source_file: expected0]
                    NAME  1 [source_file: expected0]
                    PARAM_LIST 1 [source_file: expected0]
                    BLOCK 1 [source_file: expected0]
                        VAR 2 [source_file: expected0]
                            NAME action 2 [source_file: expected0]
                        LABEL 3 [source_file: expected0]
                            LABEL_NAME a 3 [source_file: expected0]
                            DO 3 [source_file: expected0]
                                BLOCK 3 [source_file: expected0]
                                    VAR 4 [source_file: expected0]
                                        NAME proto 4 [source_file: expected0]
                                            NULL 4 [source_file: expected0]
                                    TRY 5 [source_file: expected0]
                                        BLOCK 5 [source_file: expected0]
                                            EXPR_RESULT 6 [source_file: expected0]
                                                ASSIGN 6 [source_file: expected0]
                                                    NAME proto 6 [source_file: expected0]
                                                    NEW 6 [source_file: expected0]
                                                        NAME Proto 6 [source_file: expected0]
                                        BLOCK 7 [source_file: expected0]
                                        BLOCK 7 [source_file: expected0]
                                            EXPR_RESULT 8 [source_file: expected0]
                                                ASSIGN 8 [source_file: expected0]
                                                    NAME action 8 [source_file: expected0]
                                                    NAME proto 8 [source_file: expected0]
                                            CONTINUE 9 [source_file: expected0]
                                                LABEL_NAME a 9 [source_file: expected0]
                                FALSE 11 [source_file: expected0]
                        EXPR_RESULT 12 [source_file: expected0]
                            CALL 12 [free_call: 1] [source_file: expected0]
                                NAME alert 12 [source_file: expected0]
                                NAME action 12 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        EXPR_RESULT 1 [source_file: testcode]
            ASSIGN 1 [source_file: testcode]
                NAME f 1 [source_file: testcode]
                FUNCTION  1 [source_file: testcode]
                    NAME  1 [source_file: testcode]
                    PARAM_LIST 1 [source_file: testcode]
                    BLOCK 1 [source_file: testcode]
                        VAR 2 [source_file: testcode]
                            NAME action 2 [source_file: testcode]
                        LABEL 3 [source_file: testcode]
                            LABEL_NAME a 3 [source_file: testcode]
                            DO 3 [source_file: testcode]
                                BLOCK 3 [source_file: testcode]
                                    VAR 4 [source_file: testcode]
                                        NAME proto 4 [source_file: testcode]
                                            NULL 4 [source_file: testcode]
                                    TRY 5 [source_file: testcode]
                                        BLOCK 5 [source_file: testcode]
                                            EXPR_RESULT 6 [source_file: testcode]
                                                ASSIGN 6 [source_file: testcode]
                                                    NAME proto 6 [source_file: testcode]
                                                    NEW 6 [source_file: testcode]
                                                        NAME Proto 6 [source_file: testcode]
                                        BLOCK 7 [source_file: testcode]
                                        BLOCK 7 [source_file: testcode]
                                            EXPR_RESULT 8 [source_file: testcode]
                                                ASSIGN 8 [source_file: testcode]
                                                    NAME action 8 [source_file: testcode]
                                                    NAME proto 8 [source_file: testcode]
                                FALSE 11 [source_file: testcode]
                        EXPR_RESULT 12 [source_file: testcode]
                            CALL 12 [free_call: 1] [source_file: testcode]
                                NAME alert 12 [source_file: testcode]
                                NAME action 12 [source_file: testcode]


Subtree1: BLOCK 7 [source_file: expected0]
    EXPR_RESULT 8 [source_file: expected0]
        ASSIGN 8 [source_file: expected0]
            NAME action 8 [source_file: expected0]
            NAME proto 8 [source_file: expected0]
    CONTINUE 9 [source_file: expected0]
        LABEL_NAME a 9 [source_file: expected0]


Subtree2: BLOCK 7 [source_file: testcode]
    EXPR_RESULT 8 [source_file: testcode]
        ASSIGN 8 [source_file: testcode]
            NAME action 8 [source_file: testcode]
            NAME proto 8 [source_file: testcode]
]
junit.framework.AssertionFailedError: 
Expected: f=function(){var action;a:do{var proto=null;try{proto=new Proto}finally{action=proto;continue a}}while(false);alert(action)}
Result: f=function(){var action;a:do{var proto=null;try{proto=new Proto}finally{action=proto}}while(false);alert(action)}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            ASSIGN 1 [source_file: expected0]
                NAME f 1 [source_file: expected0]
                FUNCTION  1 [source_file: expected0]
                    NAME  1 [source_file: expected0]
                    PARAM_LIST 1 [source_file: expected0]
                    BLOCK 1 [source_file: expected0]
                        VAR 2 [source_file: expected0]
                            NAME action 2 [source_file: expected0]
                        LABEL 3 [source_file: expected0]
                            LABEL_NAME a 3 [source_file: expected0]
                            DO 3 [source_file: expected0]
                                BLOCK 3 [source_file: expected0]
                                    VAR 4 [source_file: expected0]
                                        NAME proto 4 [source_file: expected0]
                                            NULL 4 [source_file: expected0]
                                    TRY 5 [source_file: expected0]
                                        BLOCK 5 [source_file: expected0]
                                            EXPR_RESULT 6 [source_file: expected0]
                                                ASSIGN 6 [source_file: expected0]
                                                    NAME proto 6 [source_file: expected0]
                                                    NEW 6 [source_file: expected0]
                                                        NAME Proto 6 [source_file: expected0]
                                        BLOCK 7 [source_file: expected0]
                                        BLOCK 7 [source_file: expected0]
                                            EXPR_RESULT 8 [source_file: expected0]
                                                ASSIGN 8 [source_file: expected0]
                                                    NAME action 8 [source_file: expected0]
                                                    NAME proto 8 [source_file: expected0]
                                            CONTINUE 9 [source_file: expected0]
                                                LABEL_NAME a 9 [source_file: expected0]
                                FALSE 11 [source_file: expected0]
                        EXPR_RESULT 12 [source_file: expected0]
                            CALL 12 [free_call: 1] [source_file: expected0]
                                NAME alert 12 [source_file: expected0]
                                NAME action 12 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        EXPR_RESULT 1 [source_file: testcode]
            ASSIGN 1 [source_file: testcode]
                NAME f 1 [source_file: testcode]
                FUNCTION  1 [source_file: testcode]
                    NAME  1 [source_file: testcode]
                    PARAM_LIST 1 [source_file: testcode]
                    BLOCK 1 [source_file: testcode]
                        VAR 2 [source_file: testcode]
                            NAME action 2 [source_file: testcode]
                        LABEL 3 [source_file: testcode]
                            LABEL_NAME a 3 [source_file: testcode]
                            DO 3 [source_file: testcode]
                                BLOCK 3 [source_file: testcode]
                                    VAR 4 [source_file: testcode]
                                        NAME proto 4 [source_file: testcode]
                                            NULL 4 [source_file: testcode]
                                    TRY 5 [source_file: testcode]
                                        BLOCK 5 [source_file: testcode]
                                            EXPR_RESULT 6 [source_file: testcode]
                                                ASSIGN 6 [source_file: testcode]
                                                    NAME proto 6 [source_file: testcode]
                                                    NEW 6 [source_file: testcode]
                                                        NAME Proto 6 [source_file: testcode]
                                        BLOCK 7 [source_file: testcode]
                                        BLOCK 7 [source_file: testcode]
                                            EXPR_RESULT 8 [source_file: testcode]
                                                ASSIGN 8 [source_file: testcode]
                                                    NAME action 8 [source_file: testcode]
                                                    NAME proto 8 [source_file: testcode]
                                FALSE 11 [source_file: testcode]
                        EXPR_RESULT 12 [source_file: testcode]
                            CALL 12 [free_call: 1] [source_file: testcode]
                                NAME alert 12 [source_file: testcode]
                                NAME action 12 [source_file: testcode]


Subtree1: BLOCK 7 [source_file: expected0]
    EXPR_RESULT 8 [source_file: expected0]
        ASSIGN 8 [source_file: expected0]
            NAME action 8 [source_file: expected0]
            NAME proto 8 [source_file: expected0]
    CONTINUE 9 [source_file: expected0]
        LABEL_NAME a 9 [source_file: expected0]


Subtree2: BLOCK 7 [source_file: testcode]
    EXPR_RESULT 8 [source_file: testcode]
        ASSIGN 8 [source_file: testcode]
            NAME action 8 [source_file: testcode]
            NAME proto 8 [source_file: testcode]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:928)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:460)
~ testDontRemoveBreakInTryFinallySwitch(com.google.javascript.jscomp.UnreachableCodeEliminationTest)
[
Expected: function f(){b:try{throw 9;}finally{switch(x){case 1:break b}}return 1}
Result: function f(){b:try{throw 9;}finally{switch(x){case 1:}}return 1}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION f 1 [source_file: expected0]
            NAME f 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                LABEL 1 [source_file: expected0]
                    LABEL_NAME b 1 [source_file: expected0]
                    TRY 1 [source_file: expected0]
                        BLOCK 1 [source_file: expected0]
                            THROW 1 [source_file: expected0]
                                NUMBER 9.0 1 [source_file: expected0]
                        BLOCK 1 [source_file: expected0]
                        BLOCK 1 [source_file: expected0]
                            SWITCH 1 [source_file: expected0]
                                NAME x 1 [source_file: expected0]
                                CASE 1 [source_file: expected0]
                                    NUMBER 1.0 1 [source_file: expected0]
                                    BLOCK 1 [synthetic: 1] [source_file: expected0]
                                        BREAK 1 [source_file: expected0]
                                            LABEL_NAME b 1 [source_file: expected0]
                RETURN 1 [source_file: expected0]
                    NUMBER 1.0 1 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION f 1 [source_file: testcode]
            NAME f 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                LABEL 1 [source_file: testcode]
                    LABEL_NAME b 1 [source_file: testcode]
                    TRY 1 [source_file: testcode]
                        BLOCK 1 [source_file: testcode]
                            THROW 1 [source_file: testcode]
                                NUMBER 9.0 1 [source_file: testcode]
                        BLOCK 1 [source_file: testcode]
                        BLOCK 1 [source_file: testcode]
                            SWITCH 1 [source_file: testcode]
                                NAME x 1 [source_file: testcode]
                                CASE 1 [source_file: testcode]
                                    NUMBER 1.0 1 [source_file: testcode]
                                    BLOCK 1 [synthetic: 1] [source_file: testcode]
                RETURN 1 [source_file: testcode]
                    NUMBER 1.0 1 [source_file: testcode]


Subtree1: BLOCK 1 [synthetic: 1] [source_file: expected0]
    BREAK 1 [source_file: expected0]
        LABEL_NAME b 1 [source_file: expected0]


Subtree2: BLOCK 1 [synthetic: 1] [source_file: testcode]
]
junit.framework.AssertionFailedError: 
Expected: function f(){b:try{throw 9;}finally{switch(x){case 1:break b}}return 1}
Result: function f(){b:try{throw 9;}finally{switch(x){case 1:}}return 1}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION f 1 [source_file: expected0]
            NAME f 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                LABEL 1 [source_file: expected0]
                    LABEL_NAME b 1 [source_file: expected0]
                    TRY 1 [source_file: expected0]
                        BLOCK 1 [source_file: expected0]
                            THROW 1 [source_file: expected0]
                                NUMBER 9.0 1 [source_file: expected0]
                        BLOCK 1 [source_file: expected0]
                        BLOCK 1 [source_file: expected0]
                            SWITCH 1 [source_file: expected0]
                                NAME x 1 [source_file: expected0]
                                CASE 1 [source_file: expected0]
                                    NUMBER 1.0 1 [source_file: expected0]
                                    BLOCK 1 [synthetic: 1] [source_file: expected0]
                                        BREAK 1 [source_file: expected0]
                                            LABEL_NAME b 1 [source_file: expected0]
                RETURN 1 [source_file: expected0]
                    NUMBER 1.0 1 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION f 1 [source_file: testcode]
            NAME f 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                LABEL 1 [source_file: testcode]
                    LABEL_NAME b 1 [source_file: testcode]
                    TRY 1 [source_file: testcode]
                        BLOCK 1 [source_file: testcode]
                            THROW 1 [source_file: testcode]
                                NUMBER 9.0 1 [source_file: testcode]
                        BLOCK 1 [source_file: testcode]
                        BLOCK 1 [source_file: testcode]
                            SWITCH 1 [source_file: testcode]
                                NAME x 1 [source_file: testcode]
                                CASE 1 [source_file: testcode]
                                    NUMBER 1.0 1 [source_file: testcode]
                                    BLOCK 1 [synthetic: 1] [source_file: testcode]
                RETURN 1 [source_file: testcode]
                    NUMBER 1.0 1 [source_file: testcode]


Subtree1: BLOCK 1 [synthetic: 1] [source_file: expected0]
    BREAK 1 [source_file: expected0]
        LABEL_NAME b 1 [source_file: expected0]


Subtree2: BLOCK 1 [synthetic: 1] [source_file: testcode]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:928)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:460)
~ testIssue4177428a(com.google.javascript.jscomp.UnreachableCodeEliminationTest)
[
Expected: f=function(){var action;a:{var proto=null;try{proto=new Proto}finally{action=proto;break a}}alert(action)}
Result: f=function(){var action;a:{var proto=null;try{proto=new Proto}finally{action=proto}}alert(action)}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            ASSIGN 1 [source_file: expected0]
                NAME f 1 [source_file: expected0]
                FUNCTION  1 [source_file: expected0]
                    NAME  1 [source_file: expected0]
                    PARAM_LIST 1 [source_file: expected0]
                    BLOCK 1 [source_file: expected0]
                        VAR 2 [source_file: expected0]
                            NAME action 2 [source_file: expected0]
                        LABEL 3 [source_file: expected0]
                            LABEL_NAME a 3 [source_file: expected0]
                            BLOCK 3 [source_file: expected0]
                                VAR 4 [source_file: expected0]
                                    NAME proto 4 [source_file: expected0]
                                        NULL 4 [source_file: expected0]
                                TRY 5 [source_file: expected0]
                                    BLOCK 5 [source_file: expected0]
                                        EXPR_RESULT 6 [source_file: expected0]
                                            ASSIGN 6 [source_file: expected0]
                                                NAME proto 6 [source_file: expected0]
                                                NEW 6 [source_file: expected0]
                                                    NAME Proto 6 [source_file: expected0]
                                    BLOCK 7 [source_file: expected0]
                                    BLOCK 7 [source_file: expected0]
                                        EXPR_RESULT 8 [source_file: expected0]
                                            ASSIGN 8 [source_file: expected0]
                                                NAME action 8 [source_file: expected0]
                                                NAME proto 8 [source_file: expected0]
                                        BREAK 9 [source_file: expected0]
                                            LABEL_NAME a 9 [source_file: expected0]
                        EXPR_RESULT 12 [source_file: expected0]
                            CALL 12 [free_call: 1] [source_file: expected0]
                                NAME alert 12 [source_file: expected0]
                                NAME action 12 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        EXPR_RESULT 1 [source_file: testcode]
            ASSIGN 1 [source_file: testcode]
                NAME f 1 [source_file: testcode]
                FUNCTION  1 [source_file: testcode]
                    NAME  1 [source_file: testcode]
                    PARAM_LIST 1 [source_file: testcode]
                    BLOCK 1 [source_file: testcode]
                        VAR 2 [source_file: testcode]
                            NAME action 2 [source_file: testcode]
                        LABEL 3 [source_file: testcode]
                            LABEL_NAME a 3 [source_file: testcode]
                            BLOCK 3 [source_file: testcode]
                                VAR 4 [source_file: testcode]
                                    NAME proto 4 [source_file: testcode]
                                        NULL 4 [source_file: testcode]
                                TRY 5 [source_file: testcode]
                                    BLOCK 5 [source_file: testcode]
                                        EXPR_RESULT 6 [source_file: testcode]
                                            ASSIGN 6 [source_file: testcode]
                                                NAME proto 6 [source_file: testcode]
                                                NEW 6 [source_file: testcode]
                                                    NAME Proto 6 [source_file: testcode]
                                    BLOCK 7 [source_file: testcode]
                                    BLOCK 7 [source_file: testcode]
                                        EXPR_RESULT 8 [source_file: testcode]
                                            ASSIGN 8 [source_file: testcode]
                                                NAME action 8 [source_file: testcode]
                                                NAME proto 8 [source_file: testcode]
                        EXPR_RESULT 12 [source_file: testcode]
                            CALL 12 [free_call: 1] [source_file: testcode]
                                NAME alert 12 [source_file: testcode]
                                NAME action 12 [source_file: testcode]


Subtree1: BLOCK 7 [source_file: expected0]
    EXPR_RESULT 8 [source_file: expected0]
        ASSIGN 8 [source_file: expected0]
            NAME action 8 [source_file: expected0]
            NAME proto 8 [source_file: expected0]
    BREAK 9 [source_file: expected0]
        LABEL_NAME a 9 [source_file: expected0]


Subtree2: BLOCK 7 [source_file: testcode]
    EXPR_RESULT 8 [source_file: testcode]
        ASSIGN 8 [source_file: testcode]
            NAME action 8 [source_file: testcode]
            NAME proto 8 [source_file: testcode]
]
junit.framework.AssertionFailedError: 
Expected: f=function(){var action;a:{var proto=null;try{proto=new Proto}finally{action=proto;break a}}alert(action)}
Result: f=function(){var action;a:{var proto=null;try{proto=new Proto}finally{action=proto}}alert(action)}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            ASSIGN 1 [source_file: expected0]
                NAME f 1 [source_file: expected0]
                FUNCTION  1 [source_file: expected0]
                    NAME  1 [source_file: expected0]
                    PARAM_LIST 1 [source_file: expected0]
                    BLOCK 1 [source_file: expected0]
                        VAR 2 [source_file: expected0]
                            NAME action 2 [source_file: expected0]
                        LABEL 3 [source_file: expected0]
                            LABEL_NAME a 3 [source_file: expected0]
                            BLOCK 3 [source_file: expected0]
                                VAR 4 [source_file: expected0]
                                    NAME proto 4 [source_file: expected0]
                                        NULL 4 [source_file: expected0]
                                TRY 5 [source_file: expected0]
                                    BLOCK 5 [source_file: expected0]
                                        EXPR_RESULT 6 [source_file: expected0]
                                            ASSIGN 6 [source_file: expected0]
                                                NAME proto 6 [source_file: expected0]
                                                NEW 6 [source_file: expected0]
                                                    NAME Proto 6 [source_file: expected0]
                                    BLOCK 7 [source_file: expected0]
                                    BLOCK 7 [source_file: expected0]
                                        EXPR_RESULT 8 [source_file: expected0]
                                            ASSIGN 8 [source_file: expected0]
                                                NAME action 8 [source_file: expected0]
                                                NAME proto 8 [source_file: expected0]
                                        BREAK 9 [source_file: expected0]
                                            LABEL_NAME a 9 [source_file: expected0]
                        EXPR_RESULT 12 [source_file: expected0]
                            CALL 12 [free_call: 1] [source_file: expected0]
                                NAME alert 12 [source_file: expected0]
                                NAME action 12 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        EXPR_RESULT 1 [source_file: testcode]
            ASSIGN 1 [source_file: testcode]
                NAME f 1 [source_file: testcode]
                FUNCTION  1 [source_file: testcode]
                    NAME  1 [source_file: testcode]
                    PARAM_LIST 1 [source_file: testcode]
                    BLOCK 1 [source_file: testcode]
                        VAR 2 [source_file: testcode]
                            NAME action 2 [source_file: testcode]
                        LABEL 3 [source_file: testcode]
                            LABEL_NAME a 3 [source_file: testcode]
                            BLOCK 3 [source_file: testcode]
                                VAR 4 [source_file: testcode]
                                    NAME proto 4 [source_file: testcode]
                                        NULL 4 [source_file: testcode]
                                TRY 5 [source_file: testcode]
                                    BLOCK 5 [source_file: testcode]
                                        EXPR_RESULT 6 [source_file: testcode]
                                            ASSIGN 6 [source_file: testcode]
                                                NAME proto 6 [source_file: testcode]
                                                NEW 6 [source_file: testcode]
                                                    NAME Proto 6 [source_file: testcode]
                                    BLOCK 7 [source_file: testcode]
                                    BLOCK 7 [source_file: testcode]
                                        EXPR_RESULT 8 [source_file: testcode]
                                            ASSIGN 8 [source_file: testcode]
                                                NAME action 8 [source_file: testcode]
                                                NAME proto 8 [source_file: testcode]
                        EXPR_RESULT 12 [source_file: testcode]
                            CALL 12 [free_call: 1] [source_file: testcode]
                                NAME alert 12 [source_file: testcode]
                                NAME action 12 [source_file: testcode]


Subtree1: BLOCK 7 [source_file: expected0]
    EXPR_RESULT 8 [source_file: expected0]
        ASSIGN 8 [source_file: expected0]
            NAME action 8 [source_file: expected0]
            NAME proto 8 [source_file: expected0]
    BREAK 9 [source_file: expected0]
        LABEL_NAME a 9 [source_file: expected0]


Subtree2: BLOCK 7 [source_file: testcode]
    EXPR_RESULT 8 [source_file: testcode]
        ASSIGN 8 [source_file: testcode]
            NAME action 8 [source_file: testcode]
            NAME proto 8 [source_file: testcode]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:928)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:460)
~ testIssue4177428c(com.google.javascript.jscomp.UnreachableCodeEliminationTest)
[
Expected: f=function(){var action;a:{var proto=null;try{}finally{try{proto=new Proto}finally{action=proto;break a}}}alert(action)}
Result: f=function(){var action;a:{var proto=null;try{}finally{try{proto=new Proto}finally{action=proto}}}alert(action)}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            ASSIGN 1 [source_file: expected0]
                NAME f 1 [source_file: expected0]
                FUNCTION  1 [source_file: expected0]
                    NAME  1 [source_file: expected0]
                    PARAM_LIST 1 [source_file: expected0]
                    BLOCK 1 [source_file: expected0]
                        VAR 2 [source_file: expected0]
                            NAME action 2 [source_file: expected0]
                        LABEL 3 [source_file: expected0]
                            LABEL_NAME a 3 [source_file: expected0]
                            BLOCK 3 [source_file: expected0]
                                VAR 4 [source_file: expected0]
                                    NAME proto 4 [source_file: expected0]
                                        NULL 4 [source_file: expected0]
                                TRY 5 [source_file: expected0]
                                    BLOCK 5 [source_file: expected0]
                                    BLOCK 6 [source_file: expected0]
                                    BLOCK 6 [source_file: expected0]
                                        TRY 7 [source_file: expected0]
                                            BLOCK 7 [source_file: expected0]
                                                EXPR_RESULT 8 [source_file: expected0]
                                                    ASSIGN 8 [source_file: expected0]
                                                        NAME proto 8 [source_file: expected0]
                                                        NEW 8 [source_file: expected0]
                                                            NAME Proto 8 [source_file: expected0]
                                            BLOCK 9 [source_file: expected0]
                                            BLOCK 9 [source_file: expected0]
                                                EXPR_RESULT 10 [source_file: expected0]
                                                    ASSIGN 10 [source_file: expected0]
                                                        NAME action 10 [source_file: expected0]
                                                        NAME proto 10 [source_file: expected0]
                                                BREAK 11 [source_file: expected0]
                                                    LABEL_NAME a 11 [source_file: expected0]
                        EXPR_RESULT 15 [source_file: expected0]
                            CALL 15 [free_call: 1] [source_file: expected0]
                                NAME alert 15 [source_file: expected0]
                                NAME action 15 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        EXPR_RESULT 1 [source_file: testcode]
            ASSIGN 1 [source_file: testcode]
                NAME f 1 [source_file: testcode]
                FUNCTION  1 [source_file: testcode]
                    NAME  1 [source_file: testcode]
                    PARAM_LIST 1 [source_file: testcode]
                    BLOCK 1 [source_file: testcode]
                        VAR 2 [source_file: testcode]
                            NAME action 2 [source_file: testcode]
                        LABEL 3 [source_file: testcode]
                            LABEL_NAME a 3 [source_file: testcode]
                            BLOCK 3 [source_file: testcode]
                                VAR 4 [source_file: testcode]
                                    NAME proto 4 [source_file: testcode]
                                        NULL 4 [source_file: testcode]
                                TRY 5 [source_file: testcode]
                                    BLOCK 5 [source_file: testcode]
                                    BLOCK 6 [source_file: testcode]
                                    BLOCK 6 [source_file: testcode]
                                        TRY 7 [source_file: testcode]
                                            BLOCK 7 [source_file: testcode]
                                                EXPR_RESULT 8 [source_file: testcode]
                                                    ASSIGN 8 [source_file: testcode]
                                                        NAME proto 8 [source_file: testcode]
                                                        NEW 8 [source_file: testcode]
                                                            NAME Proto 8 [source_file: testcode]
                                            BLOCK 9 [source_file: testcode]
                                            BLOCK 9 [source_file: testcode]
                                                EXPR_RESULT 10 [source_file: testcode]
                                                    ASSIGN 10 [source_file: testcode]
                                                        NAME action 10 [source_file: testcode]
                                                        NAME proto 10 [source_file: testcode]
                        EXPR_RESULT 15 [source_file: testcode]
                            CALL 15 [free_call: 1] [source_file: testcode]
                                NAME alert 15 [source_file: testcode]
                                NAME action 15 [source_file: testcode]


Subtree1: BLOCK 9 [source_file: expected0]
    EXPR_RESULT 10 [source_file: expected0]
        ASSIGN 10 [source_file: expected0]
            NAME action 10 [source_file: expected0]
            NAME proto 10 [source_file: expected0]
    BREAK 11 [source_file: expected0]
        LABEL_NAME a 11 [source_file: expected0]


Subtree2: BLOCK 9 [source_file: testcode]
    EXPR_RESULT 10 [source_file: testcode]
        ASSIGN 10 [source_file: testcode]
            NAME action 10 [source_file: testcode]
            NAME proto 10 [source_file: testcode]
]
junit.framework.AssertionFailedError: 
Expected: f=function(){var action;a:{var proto=null;try{}finally{try{proto=new Proto}finally{action=proto;break a}}}alert(action)}
Result: f=function(){var action;a:{var proto=null;try{}finally{try{proto=new Proto}finally{action=proto}}}alert(action)}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            ASSIGN 1 [source_file: expected0]
                NAME f 1 [source_file: expected0]
                FUNCTION  1 [source_file: expected0]
                    NAME  1 [source_file: expected0]
                    PARAM_LIST 1 [source_file: expected0]
                    BLOCK 1 [source_file: expected0]
                        VAR 2 [source_file: expected0]
                            NAME action 2 [source_file: expected0]
                        LABEL 3 [source_file: expected0]
                            LABEL_NAME a 3 [source_file: expected0]
                            BLOCK 3 [source_file: expected0]
                                VAR 4 [source_file: expected0]
                                    NAME proto 4 [source_file: expected0]
                                        NULL 4 [source_file: expected0]
                                TRY 5 [source_file: expected0]
                                    BLOCK 5 [source_file: expected0]
                                    BLOCK 6 [source_file: expected0]
                                    BLOCK 6 [source_file: expected0]
                                        TRY 7 [source_file: expected0]
                                            BLOCK 7 [source_file: expected0]
                                                EXPR_RESULT 8 [source_file: expected0]
                                                    ASSIGN 8 [source_file: expected0]
                                                        NAME proto 8 [source_file: expected0]
                                                        NEW 8 [source_file: expected0]
                                                            NAME Proto 8 [source_file: expected0]
                                            BLOCK 9 [source_file: expected0]
                                            BLOCK 9 [source_file: expected0]
                                                EXPR_RESULT 10 [source_file: expected0]
                                                    ASSIGN 10 [source_file: expected0]
                                                        NAME action 10 [source_file: expected0]
                                                        NAME proto 10 [source_file: expected0]
                                                BREAK 11 [source_file: expected0]
                                                    LABEL_NAME a 11 [source_file: expected0]
                        EXPR_RESULT 15 [source_file: expected0]
                            CALL 15 [free_call: 1] [source_file: expected0]
                                NAME alert 15 [source_file: expected0]
                                NAME action 15 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        EXPR_RESULT 1 [source_file: testcode]
            ASSIGN 1 [source_file: testcode]
                NAME f 1 [source_file: testcode]
                FUNCTION  1 [source_file: testcode]
                    NAME  1 [source_file: testcode]
                    PARAM_LIST 1 [source_file: testcode]
                    BLOCK 1 [source_file: testcode]
                        VAR 2 [source_file: testcode]
                            NAME action 2 [source_file: testcode]
                        LABEL 3 [source_file: testcode]
                            LABEL_NAME a 3 [source_file: testcode]
                            BLOCK 3 [source_file: testcode]
                                VAR 4 [source_file: testcode]
                                    NAME proto 4 [source_file: testcode]
                                        NULL 4 [source_file: testcode]
                                TRY 5 [source_file: testcode]
                                    BLOCK 5 [source_file: testcode]
                                    BLOCK 6 [source_file: testcode]
                                    BLOCK 6 [source_file: testcode]
                                        TRY 7 [source_file: testcode]
                                            BLOCK 7 [source_file: testcode]
                                                EXPR_RESULT 8 [source_file: testcode]
                                                    ASSIGN 8 [source_file: testcode]
                                                        NAME proto 8 [source_file: testcode]
                                                        NEW 8 [source_file: testcode]
                                                            NAME Proto 8 [source_file: testcode]
                                            BLOCK 9 [source_file: testcode]
                                            BLOCK 9 [source_file: testcode]
                                                EXPR_RESULT 10 [source_file: testcode]
                                                    ASSIGN 10 [source_file: testcode]
                                                        NAME action 10 [source_file: testcode]
                                                        NAME proto 10 [source_file: testcode]
                        EXPR_RESULT 15 [source_file: testcode]
                            CALL 15 [free_call: 1] [source_file: testcode]
                                NAME alert 15 [source_file: testcode]
                                NAME action 15 [source_file: testcode]


Subtree1: BLOCK 9 [source_file: expected0]
    EXPR_RESULT 10 [source_file: expected0]
        ASSIGN 10 [source_file: expected0]
            NAME action 10 [source_file: expected0]
            NAME proto 10 [source_file: expected0]
    BREAK 11 [source_file: expected0]
        LABEL_NAME a 11 [source_file: expected0]


Subtree2: BLOCK 9 [source_file: testcode]
    EXPR_RESULT 10 [source_file: testcode]
        ASSIGN 10 [source_file: testcode]
            NAME action 10 [source_file: testcode]
            NAME proto 10 [source_file: testcode]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:928)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:460)

junit.framework.AssertionFailedError: 
Expected: function f(){b:try{throw 9;}finally{switch(x){case 1:break b}}return 1}
Result: function f(){b:try{throw 9;}finally{switch(x){case 1:}}return 1}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION f 1 [source_file: expected0]
            NAME f 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                LABEL 1 [source_file: expected0]
                    LABEL_NAME b 1 [source_file: expected0]
                    TRY 1 [source_file: expected0]
                        BLOCK 1 [source_file: expected0]
                            THROW 1 [source_file: expected0]
                                NUMBER 9.0 1 [source_file: expected0]
                        BLOCK 1 [source_file: expected0]
                        BLOCK 1 [source_file: expected0]
                            SWITCH 1 [source_file: expected0]
                                NAME x 1 [source_file: expected0]
                                CASE 1 [source_file: expected0]
                                    NUMBER 1.0 1 [source_file: expected0]
                                    BLOCK 1 [synthetic: 1] [source_file: expected0]
                                        BREAK 1 [source_file: expected0]
                                            LABEL_NAME b 1 [source_file: expected0]
                RETURN 1 [source_file: expected0]
                    NUMBER 1.0 1 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION f 1 [source_file: testcode]
            NAME f 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                LABEL 1 [source_file: testcode]
                    LABEL_NAME b 1 [source_file: testcode]
                    TRY 1 [source_file: testcode]
                        BLOCK 1 [source_file: testcode]
                            THROW 1 [source_file: testcode]
                                NUMBER 9.0 1 [source_file: testcode]
                        BLOCK 1 [source_file: testcode]
                        BLOCK 1 [source_file: testcode]
                            SWITCH 1 [source_file: testcode]
                                NAME x 1 [source_file: testcode]
                                CASE 1 [source_file: testcode]
                                    NUMBER 1.0 1 [source_file: testcode]
                                    BLOCK 1 [synthetic: 1] [source_file: testcode]
                RETURN 1 [source_file: testcode]
                    NUMBER 1.0 1 [source_file: testcode]


Subtree1: BLOCK 1 [synthetic: 1] [source_file: expected0]
    BREAK 1 [source_file: expected0]
        LABEL_NAME b 1 [source_file: expected0]


Subtree2: BLOCK 1 [synthetic: 1] [source_file: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:928)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:460)
19:29:46.770 [pool-5-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (306 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testDontRemoveBreakInTryFinallySwitch(com.google.javascript.jscomp.UnreachableCodeEliminationTest)
[
Expected: function f(){b:try{throw 9;}finally{switch(x){case 1:break b}}return 1}
Result: function f(){b:try{throw 9;}finally{switch(x){case 1:}}return 1}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION f 1 [source_file: expected0]
            NAME f 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                LABEL 1 [source_file: expected0]
                    LABEL_NAME b 1 [source_file: expected0]
                    TRY 1 [source_file: expected0]
                        BLOCK 1 [source_file: expected0]
                            THROW 1 [source_file: expected0]
                                NUMBER 9.0 1 [source_file: expected0]
                        BLOCK 1 [source_file: expected0]
                        BLOCK 1 [source_file: expected0]
                            SWITCH 1 [source_file: expected0]
                                NAME x 1 [source_file: expected0]
                                CASE 1 [source_file: expected0]
                                    NUMBER 1.0 1 [source_file: expected0]
                                    BLOCK 1 [synthetic: 1] [source_file: expected0]
                                        BREAK 1 [source_file: expected0]
                                            LABEL_NAME b 1 [source_file: expected0]
                RETURN 1 [source_file: expected0]
                    NUMBER 1.0 1 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION f 1 [source_file: testcode]
            NAME f 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                LABEL 1 [source_file: testcode]
                    LABEL_NAME b 1 [source_file: testcode]
                    TRY 1 [source_file: testcode]
                        BLOCK 1 [source_file: testcode]
                            THROW 1 [source_file: testcode]
                                NUMBER 9.0 1 [source_file: testcode]
                        BLOCK 1 [source_file: testcode]
                        BLOCK 1 [source_file: testcode]
                            SWITCH 1 [source_file: testcode]
                                NAME x 1 [source_file: testcode]
                                CASE 1 [source_file: testcode]
                                    NUMBER 1.0 1 [source_file: testcode]
                                    BLOCK 1 [synthetic: 1] [source_file: testcode]
                RETURN 1 [source_file: testcode]
                    NUMBER 1.0 1 [source_file: testcode]


Subtree1: BLOCK 1 [synthetic: 1] [source_file: expected0]
    BREAK 1 [source_file: expected0]
        LABEL_NAME b 1 [source_file: expected0]


Subtree2: BLOCK 1 [synthetic: 1] [source_file: testcode]
]
junit.framework.AssertionFailedError: 
Expected: function f(){b:try{throw 9;}finally{switch(x){case 1:break b}}return 1}
Result: function f(){b:try{throw 9;}finally{switch(x){case 1:}}return 1}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION f 1 [source_file: expected0]
            NAME f 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                LABEL 1 [source_file: expected0]
                    LABEL_NAME b 1 [source_file: expected0]
                    TRY 1 [source_file: expected0]
                        BLOCK 1 [source_file: expected0]
                            THROW 1 [source_file: expected0]
                                NUMBER 9.0 1 [source_file: expected0]
                        BLOCK 1 [source_file: expected0]
                        BLOCK 1 [source_file: expected0]
                            SWITCH 1 [source_file: expected0]
                                NAME x 1 [source_file: expected0]
                                CASE 1 [source_file: expected0]
                                    NUMBER 1.0 1 [source_file: expected0]
                                    BLOCK 1 [synthetic: 1] [source_file: expected0]
                                        BREAK 1 [source_file: expected0]
                                            LABEL_NAME b 1 [source_file: expected0]
                RETURN 1 [source_file: expected0]
                    NUMBER 1.0 1 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION f 1 [source_file: testcode]
            NAME f 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                LABEL 1 [source_file: testcode]
                    LABEL_NAME b 1 [source_file: testcode]
                    TRY 1 [source_file: testcode]
                        BLOCK 1 [source_file: testcode]
                            THROW 1 [source_file: testcode]
                                NUMBER 9.0 1 [source_file: testcode]
                        BLOCK 1 [source_file: testcode]
                        BLOCK 1 [source_file: testcode]
                            SWITCH 1 [source_file: testcode]
                                NAME x 1 [source_file: testcode]
                                CASE 1 [source_file: testcode]
                                    NUMBER 1.0 1 [source_file: testcode]
                                    BLOCK 1 [synthetic: 1] [source_file: testcode]
                RETURN 1 [source_file: testcode]
                    NUMBER 1.0 1 [source_file: testcode]


Subtree1: BLOCK 1 [synthetic: 1] [source_file: expected0]
    BREAK 1 [source_file: expected0]
        LABEL_NAME b 1 [source_file: expected0]


Subtree2: BLOCK 1 [synthetic: 1] [source_file: testcode]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:928)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:460)

junit.framework.AssertionFailedError: 
Expected: f=function(){var action;a:do{var proto=null;try{proto=new Proto}finally{action=proto;continue a}}while(false);alert(action)}
Result: f=function(){var action;a:do{var proto=null;try{proto=new Proto}finally{action=proto}}while(false);alert(action)}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            ASSIGN 1 [source_file: expected0]
                NAME f 1 [source_file: expected0]
                FUNCTION  1 [source_file: expected0]
                    NAME  1 [source_file: expected0]
                    PARAM_LIST 1 [source_file: expected0]
                    BLOCK 1 [source_file: expected0]
                        VAR 2 [source_file: expected0]
                            NAME action 2 [source_file: expected0]
                        LABEL 3 [source_file: expected0]
                            LABEL_NAME a 3 [source_file: expected0]
                            DO 3 [source_file: expected0]
                                BLOCK 3 [source_file: expected0]
                                    VAR 4 [source_file: expected0]
                                        NAME proto 4 [source_file: expected0]
                                            NULL 4 [source_file: expected0]
                                    TRY 5 [source_file: expected0]
                                        BLOCK 5 [source_file: expected0]
                                            EXPR_RESULT 6 [source_file: expected0]
                                                ASSIGN 6 [source_file: expected0]
                                                    NAME proto 6 [source_file: expected0]
                                                    NEW 6 [source_file: expected0]
                                                        NAME Proto 6 [source_file: expected0]
                                        BLOCK 7 [source_file: expected0]
                                        BLOCK 7 [source_file: expected0]
                                            EXPR_RESULT 8 [source_file: expected0]
                                                ASSIGN 8 [source_file: expected0]
                                                    NAME action 8 [source_file: expected0]
                                                    NAME proto 8 [source_file: expected0]
                                            CONTINUE 9 [source_file: expected0]
                                                LABEL_NAME a 9 [source_file: expected0]
                                FALSE 11 [source_file: expected0]
                        EXPR_RESULT 12 [source_file: expected0]
                            CALL 12 [free_call: 1] [source_file: expected0]
                                NAME alert 12 [source_file: expected0]
                                NAME action 12 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        EXPR_RESULT 1 [source_file: testcode]
            ASSIGN 1 [source_file: testcode]
                NAME f 1 [source_file: testcode]
                FUNCTION  1 [source_file: testcode]
                    NAME  1 [source_file: testcode]
                    PARAM_LIST 1 [source_file: testcode]
                    BLOCK 1 [source_file: testcode]
                        VAR 2 [source_file: testcode]
                            NAME action 2 [source_file: testcode]
                        LABEL 3 [source_file: testcode]
                            LABEL_NAME a 3 [source_file: testcode]
                            DO 3 [source_file: testcode]
                                BLOCK 3 [source_file: testcode]
                                    VAR 4 [source_file: testcode]
                                        NAME proto 4 [source_file: testcode]
                                            NULL 4 [source_file: testcode]
                                    TRY 5 [source_file: testcode]
                                        BLOCK 5 [source_file: testcode]
                                            EXPR_RESULT 6 [source_file: testcode]
                                                ASSIGN 6 [source_file: testcode]
                                                    NAME proto 6 [source_file: testcode]
                                                    NEW 6 [source_file: testcode]
                                                        NAME Proto 6 [source_file: testcode]
                                        BLOCK 7 [source_file: testcode]
                                        BLOCK 7 [source_file: testcode]
                                            EXPR_RESULT 8 [source_file: testcode]
                                                ASSIGN 8 [source_file: testcode]
                                                    NAME action 8 [source_file: testcode]
                                                    NAME proto 8 [source_file: testcode]
                                FALSE 11 [source_file: testcode]
                        EXPR_RESULT 12 [source_file: testcode]
                            CALL 12 [free_call: 1] [source_file: testcode]
                                NAME alert 12 [source_file: testcode]
                                NAME action 12 [source_file: testcode]


Subtree1: BLOCK 7 [source_file: expected0]
    EXPR_RESULT 8 [source_file: expected0]
        ASSIGN 8 [source_file: expected0]
            NAME action 8 [source_file: expected0]
            NAME proto 8 [source_file: expected0]
    CONTINUE 9 [source_file: expected0]
        LABEL_NAME a 9 [source_file: expected0]


Subtree2: BLOCK 7 [source_file: testcode]
    EXPR_RESULT 8 [source_file: testcode]
        ASSIGN 8 [source_file: testcode]
            NAME action 8 [source_file: testcode]
            NAME proto 8 [source_file: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:928)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:460)
19:29:46.803 [pool-6-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (22 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue4177428_continue(com.google.javascript.jscomp.UnreachableCodeEliminationTest)
[
Expected: f=function(){var action;a:do{var proto=null;try{proto=new Proto}finally{action=proto;continue a}}while(false);alert(action)}
Result: f=function(){var action;a:do{var proto=null;try{proto=new Proto}finally{action=proto}}while(false);alert(action)}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            ASSIGN 1 [source_file: expected0]
                NAME f 1 [source_file: expected0]
                FUNCTION  1 [source_file: expected0]
                    NAME  1 [source_file: expected0]
                    PARAM_LIST 1 [source_file: expected0]
                    BLOCK 1 [source_file: expected0]
                        VAR 2 [source_file: expected0]
                            NAME action 2 [source_file: expected0]
                        LABEL 3 [source_file: expected0]
                            LABEL_NAME a 3 [source_file: expected0]
                            DO 3 [source_file: expected0]
                                BLOCK 3 [source_file: expected0]
                                    VAR 4 [source_file: expected0]
                                        NAME proto 4 [source_file: expected0]
                                            NULL 4 [source_file: expected0]
                                    TRY 5 [source_file: expected0]
                                        BLOCK 5 [source_file: expected0]
                                            EXPR_RESULT 6 [source_file: expected0]
                                                ASSIGN 6 [source_file: expected0]
                                                    NAME proto 6 [source_file: expected0]
                                                    NEW 6 [source_file: expected0]
                                                        NAME Proto 6 [source_file: expected0]
                                        BLOCK 7 [source_file: expected0]
                                        BLOCK 7 [source_file: expected0]
                                            EXPR_RESULT 8 [source_file: expected0]
                                                ASSIGN 8 [source_file: expected0]
                                                    NAME action 8 [source_file: expected0]
                                                    NAME proto 8 [source_file: expected0]
                                            CONTINUE 9 [source_file: expected0]
                                                LABEL_NAME a 9 [source_file: expected0]
                                FALSE 11 [source_file: expected0]
                        EXPR_RESULT 12 [source_file: expected0]
                            CALL 12 [free_call: 1] [source_file: expected0]
                                NAME alert 12 [source_file: expected0]
                                NAME action 12 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        EXPR_RESULT 1 [source_file: testcode]
            ASSIGN 1 [source_file: testcode]
                NAME f 1 [source_file: testcode]
                FUNCTION  1 [source_file: testcode]
                    NAME  1 [source_file: testcode]
                    PARAM_LIST 1 [source_file: testcode]
                    BLOCK 1 [source_file: testcode]
                        VAR 2 [source_file: testcode]
                            NAME action 2 [source_file: testcode]
                        LABEL 3 [source_file: testcode]
                            LABEL_NAME a 3 [source_file: testcode]
                            DO 3 [source_file: testcode]
                                BLOCK 3 [source_file: testcode]
                                    VAR 4 [source_file: testcode]
                                        NAME proto 4 [source_file: testcode]
                                            NULL 4 [source_file: testcode]
                                    TRY 5 [source_file: testcode]
                                        BLOCK 5 [source_file: testcode]
                                            EXPR_RESULT 6 [source_file: testcode]
                                                ASSIGN 6 [source_file: testcode]
                                                    NAME proto 6 [source_file: testcode]
                                                    NEW 6 [source_file: testcode]
                                                        NAME Proto 6 [source_file: testcode]
                                        BLOCK 7 [source_file: testcode]
                                        BLOCK 7 [source_file: testcode]
                                            EXPR_RESULT 8 [source_file: testcode]
                                                ASSIGN 8 [source_file: testcode]
                                                    NAME action 8 [source_file: testcode]
                                                    NAME proto 8 [source_file: testcode]
                                FALSE 11 [source_file: testcode]
                        EXPR_RESULT 12 [source_file: testcode]
                            CALL 12 [free_call: 1] [source_file: testcode]
                                NAME alert 12 [source_file: testcode]
                                NAME action 12 [source_file: testcode]


Subtree1: BLOCK 7 [source_file: expected0]
    EXPR_RESULT 8 [source_file: expected0]
        ASSIGN 8 [source_file: expected0]
            NAME action 8 [source_file: expected0]
            NAME proto 8 [source_file: expected0]
    CONTINUE 9 [source_file: expected0]
        LABEL_NAME a 9 [source_file: expected0]


Subtree2: BLOCK 7 [source_file: testcode]
    EXPR_RESULT 8 [source_file: testcode]
        ASSIGN 8 [source_file: testcode]
            NAME action 8 [source_file: testcode]
            NAME proto 8 [source_file: testcode]
]
junit.framework.AssertionFailedError: 
Expected: f=function(){var action;a:do{var proto=null;try{proto=new Proto}finally{action=proto;continue a}}while(false);alert(action)}
Result: f=function(){var action;a:do{var proto=null;try{proto=new Proto}finally{action=proto}}while(false);alert(action)}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            ASSIGN 1 [source_file: expected0]
                NAME f 1 [source_file: expected0]
                FUNCTION  1 [source_file: expected0]
                    NAME  1 [source_file: expected0]
                    PARAM_LIST 1 [source_file: expected0]
                    BLOCK 1 [source_file: expected0]
                        VAR 2 [source_file: expected0]
                            NAME action 2 [source_file: expected0]
                        LABEL 3 [source_file: expected0]
                            LABEL_NAME a 3 [source_file: expected0]
                            DO 3 [source_file: expected0]
                                BLOCK 3 [source_file: expected0]
                                    VAR 4 [source_file: expected0]
                                        NAME proto 4 [source_file: expected0]
                                            NULL 4 [source_file: expected0]
                                    TRY 5 [source_file: expected0]
                                        BLOCK 5 [source_file: expected0]
                                            EXPR_RESULT 6 [source_file: expected0]
                                                ASSIGN 6 [source_file: expected0]
                                                    NAME proto 6 [source_file: expected0]
                                                    NEW 6 [source_file: expected0]
                                                        NAME Proto 6 [source_file: expected0]
                                        BLOCK 7 [source_file: expected0]
                                        BLOCK 7 [source_file: expected0]
                                            EXPR_RESULT 8 [source_file: expected0]
                                                ASSIGN 8 [source_file: expected0]
                                                    NAME action 8 [source_file: expected0]
                                                    NAME proto 8 [source_file: expected0]
                                            CONTINUE 9 [source_file: expected0]
                                                LABEL_NAME a 9 [source_file: expected0]
                                FALSE 11 [source_file: expected0]
                        EXPR_RESULT 12 [source_file: expected0]
                            CALL 12 [free_call: 1] [source_file: expected0]
                                NAME alert 12 [source_file: expected0]
                                NAME action 12 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        EXPR_RESULT 1 [source_file: testcode]
            ASSIGN 1 [source_file: testcode]
                NAME f 1 [source_file: testcode]
                FUNCTION  1 [source_file: testcode]
                    NAME  1 [source_file: testcode]
                    PARAM_LIST 1 [source_file: testcode]
                    BLOCK 1 [source_file: testcode]
                        VAR 2 [source_file: testcode]
                            NAME action 2 [source_file: testcode]
                        LABEL 3 [source_file: testcode]
                            LABEL_NAME a 3 [source_file: testcode]
                            DO 3 [source_file: testcode]
                                BLOCK 3 [source_file: testcode]
                                    VAR 4 [source_file: testcode]
                                        NAME proto 4 [source_file: testcode]
                                            NULL 4 [source_file: testcode]
                                    TRY 5 [source_file: testcode]
                                        BLOCK 5 [source_file: testcode]
                                            EXPR_RESULT 6 [source_file: testcode]
                                                ASSIGN 6 [source_file: testcode]
                                                    NAME proto 6 [source_file: testcode]
                                                    NEW 6 [source_file: testcode]
                                                        NAME Proto 6 [source_file: testcode]
                                        BLOCK 7 [source_file: testcode]
                                        BLOCK 7 [source_file: testcode]
                                            EXPR_RESULT 8 [source_file: testcode]
                                                ASSIGN 8 [source_file: testcode]
                                                    NAME action 8 [source_file: testcode]
                                                    NAME proto 8 [source_file: testcode]
                                FALSE 11 [source_file: testcode]
                        EXPR_RESULT 12 [source_file: testcode]
                            CALL 12 [free_call: 1] [source_file: testcode]
                                NAME alert 12 [source_file: testcode]
                                NAME action 12 [source_file: testcode]


Subtree1: BLOCK 7 [source_file: expected0]
    EXPR_RESULT 8 [source_file: expected0]
        ASSIGN 8 [source_file: expected0]
            NAME action 8 [source_file: expected0]
            NAME proto 8 [source_file: expected0]
    CONTINUE 9 [source_file: expected0]
        LABEL_NAME a 9 [source_file: expected0]


Subtree2: BLOCK 7 [source_file: testcode]
    EXPR_RESULT 8 [source_file: testcode]
        ASSIGN 8 [source_file: testcode]
            NAME action 8 [source_file: testcode]
            NAME proto 8 [source_file: testcode]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:928)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:460)

junit.framework.AssertionFailedError: 
Expected: f=function(){var action;a:{var proto=null;try{}finally{try{proto=new Proto}finally{action=proto;break a}}}alert(action)}
Result: f=function(){var action;a:{var proto=null;try{}finally{try{proto=new Proto}finally{action=proto}}}alert(action)}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            ASSIGN 1 [source_file: expected0]
                NAME f 1 [source_file: expected0]
                FUNCTION  1 [source_file: expected0]
                    NAME  1 [source_file: expected0]
                    PARAM_LIST 1 [source_file: expected0]
                    BLOCK 1 [source_file: expected0]
                        VAR 2 [source_file: expected0]
                            NAME action 2 [source_file: expected0]
                        LABEL 3 [source_file: expected0]
                            LABEL_NAME a 3 [source_file: expected0]
                            BLOCK 3 [source_file: expected0]
                                VAR 4 [source_file: expected0]
                                    NAME proto 4 [source_file: expected0]
                                        NULL 4 [source_file: expected0]
                                TRY 5 [source_file: expected0]
                                    BLOCK 5 [source_file: expected0]
                                    BLOCK 6 [source_file: expected0]
                                    BLOCK 6 [source_file: expected0]
                                        TRY 7 [source_file: expected0]
                                            BLOCK 7 [source_file: expected0]
                                                EXPR_RESULT 8 [source_file: expected0]
                                                    ASSIGN 8 [source_file: expected0]
                                                        NAME proto 8 [source_file: expected0]
                                                        NEW 8 [source_file: expected0]
                                                            NAME Proto 8 [source_file: expected0]
                                            BLOCK 9 [source_file: expected0]
                                            BLOCK 9 [source_file: expected0]
                                                EXPR_RESULT 10 [source_file: expected0]
                                                    ASSIGN 10 [source_file: expected0]
                                                        NAME action 10 [source_file: expected0]
                                                        NAME proto 10 [source_file: expected0]
                                                BREAK 11 [source_file: expected0]
                                                    LABEL_NAME a 11 [source_file: expected0]
                        EXPR_RESULT 15 [source_file: expected0]
                            CALL 15 [free_call: 1] [source_file: expected0]
                                NAME alert 15 [source_file: expected0]
                                NAME action 15 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        EXPR_RESULT 1 [source_file: testcode]
            ASSIGN 1 [source_file: testcode]
                NAME f 1 [source_file: testcode]
                FUNCTION  1 [source_file: testcode]
                    NAME  1 [source_file: testcode]
                    PARAM_LIST 1 [source_file: testcode]
                    BLOCK 1 [source_file: testcode]
                        VAR 2 [source_file: testcode]
                            NAME action 2 [source_file: testcode]
                        LABEL 3 [source_file: testcode]
                            LABEL_NAME a 3 [source_file: testcode]
                            BLOCK 3 [source_file: testcode]
                                VAR 4 [source_file: testcode]
                                    NAME proto 4 [source_file: testcode]
                                        NULL 4 [source_file: testcode]
                                TRY 5 [source_file: testcode]
                                    BLOCK 5 [source_file: testcode]
                                    BLOCK 6 [source_file: testcode]
                                    BLOCK 6 [source_file: testcode]
                                        TRY 7 [source_file: testcode]
                                            BLOCK 7 [source_file: testcode]
                                                EXPR_RESULT 8 [source_file: testcode]
                                                    ASSIGN 8 [source_file: testcode]
                                                        NAME proto 8 [source_file: testcode]
                                                        NEW 8 [source_file: testcode]
                                                            NAME Proto 8 [source_file: testcode]
                                            BLOCK 9 [source_file: testcode]
                                            BLOCK 9 [source_file: testcode]
                                                EXPR_RESULT 10 [source_file: testcode]
                                                    ASSIGN 10 [source_file: testcode]
                                                        NAME action 10 [source_file: testcode]
                                                        NAME proto 10 [source_file: testcode]
                        EXPR_RESULT 15 [source_file: testcode]
                            CALL 15 [free_call: 1] [source_file: testcode]
                                NAME alert 15 [source_file: testcode]
                                NAME action 15 [source_file: testcode]


Subtree1: BLOCK 9 [source_file: expected0]
    EXPR_RESULT 10 [source_file: expected0]
        ASSIGN 10 [source_file: expected0]
            NAME action 10 [source_file: expected0]
            NAME proto 10 [source_file: expected0]
    BREAK 11 [source_file: expected0]
        LABEL_NAME a 11 [source_file: expected0]


Subtree2: BLOCK 9 [source_file: testcode]
    EXPR_RESULT 10 [source_file: testcode]
        ASSIGN 10 [source_file: testcode]
            NAME action 10 [source_file: testcode]
            NAME proto 10 [source_file: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:928)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:460)
19:29:46.819 [pool-7-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (13 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue4177428c(com.google.javascript.jscomp.UnreachableCodeEliminationTest)
[
Expected: f=function(){var action;a:{var proto=null;try{}finally{try{proto=new Proto}finally{action=proto;break a}}}alert(action)}
Result: f=function(){var action;a:{var proto=null;try{}finally{try{proto=new Proto}finally{action=proto}}}alert(action)}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            ASSIGN 1 [source_file: expected0]
                NAME f 1 [source_file: expected0]
                FUNCTION  1 [source_file: expected0]
                    NAME  1 [source_file: expected0]
                    PARAM_LIST 1 [source_file: expected0]
                    BLOCK 1 [source_file: expected0]
                        VAR 2 [source_file: expected0]
                            NAME action 2 [source_file: expected0]
                        LABEL 3 [source_file: expected0]
                            LABEL_NAME a 3 [source_file: expected0]
                            BLOCK 3 [source_file: expected0]
                                VAR 4 [source_file: expected0]
                                    NAME proto 4 [source_file: expected0]
                                        NULL 4 [source_file: expected0]
                                TRY 5 [source_file: expected0]
                                    BLOCK 5 [source_file: expected0]
                                    BLOCK 6 [source_file: expected0]
                                    BLOCK 6 [source_file: expected0]
                                        TRY 7 [source_file: expected0]
                                            BLOCK 7 [source_file: expected0]
                                                EXPR_RESULT 8 [source_file: expected0]
                                                    ASSIGN 8 [source_file: expected0]
                                                        NAME proto 8 [source_file: expected0]
                                                        NEW 8 [source_file: expected0]
                                                            NAME Proto 8 [source_file: expected0]
                                            BLOCK 9 [source_file: expected0]
                                            BLOCK 9 [source_file: expected0]
                                                EXPR_RESULT 10 [source_file: expected0]
                                                    ASSIGN 10 [source_file: expected0]
                                                        NAME action 10 [source_file: expected0]
                                                        NAME proto 10 [source_file: expected0]
                                                BREAK 11 [source_file: expected0]
                                                    LABEL_NAME a 11 [source_file: expected0]
                        EXPR_RESULT 15 [source_file: expected0]
                            CALL 15 [free_call: 1] [source_file: expected0]
                                NAME alert 15 [source_file: expected0]
                                NAME action 15 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        EXPR_RESULT 1 [source_file: testcode]
            ASSIGN 1 [source_file: testcode]
                NAME f 1 [source_file: testcode]
                FUNCTION  1 [source_file: testcode]
                    NAME  1 [source_file: testcode]
                    PARAM_LIST 1 [source_file: testcode]
                    BLOCK 1 [source_file: testcode]
                        VAR 2 [source_file: testcode]
                            NAME action 2 [source_file: testcode]
                        LABEL 3 [source_file: testcode]
                            LABEL_NAME a 3 [source_file: testcode]
                            BLOCK 3 [source_file: testcode]
                                VAR 4 [source_file: testcode]
                                    NAME proto 4 [source_file: testcode]
                                        NULL 4 [source_file: testcode]
                                TRY 5 [source_file: testcode]
                                    BLOCK 5 [source_file: testcode]
                                    BLOCK 6 [source_file: testcode]
                                    BLOCK 6 [source_file: testcode]
                                        TRY 7 [source_file: testcode]
                                            BLOCK 7 [source_file: testcode]
                                                EXPR_RESULT 8 [source_file: testcode]
                                                    ASSIGN 8 [source_file: testcode]
                                                        NAME proto 8 [source_file: testcode]
                                                        NEW 8 [source_file: testcode]
                                                            NAME Proto 8 [source_file: testcode]
                                            BLOCK 9 [source_file: testcode]
                                            BLOCK 9 [source_file: testcode]
                                                EXPR_RESULT 10 [source_file: testcode]
                                                    ASSIGN 10 [source_file: testcode]
                                                        NAME action 10 [source_file: testcode]
                                                        NAME proto 10 [source_file: testcode]
                        EXPR_RESULT 15 [source_file: testcode]
                            CALL 15 [free_call: 1] [source_file: testcode]
                                NAME alert 15 [source_file: testcode]
                                NAME action 15 [source_file: testcode]


Subtree1: BLOCK 9 [source_file: expected0]
    EXPR_RESULT 10 [source_file: expected0]
        ASSIGN 10 [source_file: expected0]
            NAME action 10 [source_file: expected0]
            NAME proto 10 [source_file: expected0]
    BREAK 11 [source_file: expected0]
        LABEL_NAME a 11 [source_file: expected0]


Subtree2: BLOCK 9 [source_file: testcode]
    EXPR_RESULT 10 [source_file: testcode]
        ASSIGN 10 [source_file: testcode]
            NAME action 10 [source_file: testcode]
            NAME proto 10 [source_file: testcode]
]
junit.framework.AssertionFailedError: 
Expected: f=function(){var action;a:{var proto=null;try{}finally{try{proto=new Proto}finally{action=proto;break a}}}alert(action)}
Result: f=function(){var action;a:{var proto=null;try{}finally{try{proto=new Proto}finally{action=proto}}}alert(action)}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            ASSIGN 1 [source_file: expected0]
                NAME f 1 [source_file: expected0]
                FUNCTION  1 [source_file: expected0]
                    NAME  1 [source_file: expected0]
                    PARAM_LIST 1 [source_file: expected0]
                    BLOCK 1 [source_file: expected0]
                        VAR 2 [source_file: expected0]
                            NAME action 2 [source_file: expected0]
                        LABEL 3 [source_file: expected0]
                            LABEL_NAME a 3 [source_file: expected0]
                            BLOCK 3 [source_file: expected0]
                                VAR 4 [source_file: expected0]
                                    NAME proto 4 [source_file: expected0]
                                        NULL 4 [source_file: expected0]
                                TRY 5 [source_file: expected0]
                                    BLOCK 5 [source_file: expected0]
                                    BLOCK 6 [source_file: expected0]
                                    BLOCK 6 [source_file: expected0]
                                        TRY 7 [source_file: expected0]
                                            BLOCK 7 [source_file: expected0]
                                                EXPR_RESULT 8 [source_file: expected0]
                                                    ASSIGN 8 [source_file: expected0]
                                                        NAME proto 8 [source_file: expected0]
                                                        NEW 8 [source_file: expected0]
                                                            NAME Proto 8 [source_file: expected0]
                                            BLOCK 9 [source_file: expected0]
                                            BLOCK 9 [source_file: expected0]
                                                EXPR_RESULT 10 [source_file: expected0]
                                                    ASSIGN 10 [source_file: expected0]
                                                        NAME action 10 [source_file: expected0]
                                                        NAME proto 10 [source_file: expected0]
                                                BREAK 11 [source_file: expected0]
                                                    LABEL_NAME a 11 [source_file: expected0]
                        EXPR_RESULT 15 [source_file: expected0]
                            CALL 15 [free_call: 1] [source_file: expected0]
                                NAME alert 15 [source_file: expected0]
                                NAME action 15 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        EXPR_RESULT 1 [source_file: testcode]
            ASSIGN 1 [source_file: testcode]
                NAME f 1 [source_file: testcode]
                FUNCTION  1 [source_file: testcode]
                    NAME  1 [source_file: testcode]
                    PARAM_LIST 1 [source_file: testcode]
                    BLOCK 1 [source_file: testcode]
                        VAR 2 [source_file: testcode]
                            NAME action 2 [source_file: testcode]
                        LABEL 3 [source_file: testcode]
                            LABEL_NAME a 3 [source_file: testcode]
                            BLOCK 3 [source_file: testcode]
                                VAR 4 [source_file: testcode]
                                    NAME proto 4 [source_file: testcode]
                                        NULL 4 [source_file: testcode]
                                TRY 5 [source_file: testcode]
                                    BLOCK 5 [source_file: testcode]
                                    BLOCK 6 [source_file: testcode]
                                    BLOCK 6 [source_file: testcode]
                                        TRY 7 [source_file: testcode]
                                            BLOCK 7 [source_file: testcode]
                                                EXPR_RESULT 8 [source_file: testcode]
                                                    ASSIGN 8 [source_file: testcode]
                                                        NAME proto 8 [source_file: testcode]
                                                        NEW 8 [source_file: testcode]
                                                            NAME Proto 8 [source_file: testcode]
                                            BLOCK 9 [source_file: testcode]
                                            BLOCK 9 [source_file: testcode]
                                                EXPR_RESULT 10 [source_file: testcode]
                                                    ASSIGN 10 [source_file: testcode]
                                                        NAME action 10 [source_file: testcode]
                                                        NAME proto 10 [source_file: testcode]
                        EXPR_RESULT 15 [source_file: testcode]
                            CALL 15 [free_call: 1] [source_file: testcode]
                                NAME alert 15 [source_file: testcode]
                                NAME action 15 [source_file: testcode]


Subtree1: BLOCK 9 [source_file: expected0]
    EXPR_RESULT 10 [source_file: expected0]
        ASSIGN 10 [source_file: expected0]
            NAME action 10 [source_file: expected0]
            NAME proto 10 [source_file: expected0]
    BREAK 11 [source_file: expected0]
        LABEL_NAME a 11 [source_file: expected0]


Subtree2: BLOCK 9 [source_file: testcode]
    EXPR_RESULT 10 [source_file: testcode]
        ASSIGN 10 [source_file: testcode]
            NAME action 10 [source_file: testcode]
            NAME proto 10 [source_file: testcode]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:928)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:460)

junit.framework.AssertionFailedError: 
Expected: f=function(){var action;a:{var proto=null;try{proto=new Proto}finally{action=proto;return}}}
Result: f=function(){var action;a:{var proto=null;try{proto=new Proto}finally{action=proto}}}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            ASSIGN 1 [source_file: expected0]
                NAME f 1 [source_file: expected0]
                FUNCTION  1 [source_file: expected0]
                    NAME  1 [source_file: expected0]
                    PARAM_LIST 1 [source_file: expected0]
                    BLOCK 1 [source_file: expected0]
                        VAR 2 [source_file: expected0]
                            NAME action 2 [source_file: expected0]
                        LABEL 3 [source_file: expected0]
                            LABEL_NAME a 3 [source_file: expected0]
                            BLOCK 3 [source_file: expected0]
                                VAR 4 [source_file: expected0]
                                    NAME proto 4 [source_file: expected0]
                                        NULL 4 [source_file: expected0]
                                TRY 5 [source_file: expected0]
                                    BLOCK 5 [source_file: expected0]
                                        EXPR_RESULT 6 [source_file: expected0]
                                            ASSIGN 6 [source_file: expected0]
                                                NAME proto 6 [source_file: expected0]
                                                NEW 6 [source_file: expected0]
                                                    NAME Proto 6 [source_file: expected0]
                                    BLOCK 7 [source_file: expected0]
                                    BLOCK 7 [source_file: expected0]
                                        EXPR_RESULT 8 [source_file: expected0]
                                            ASSIGN 8 [source_file: expected0]
                                                NAME action 8 [source_file: expected0]
                                                NAME proto 8 [source_file: expected0]
                                        RETURN 9 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        EXPR_RESULT 1 [source_file: testcode]
            ASSIGN 1 [source_file: testcode]
                NAME f 1 [source_file: testcode]
                FUNCTION  1 [source_file: testcode]
                    NAME  1 [source_file: testcode]
                    PARAM_LIST 1 [source_file: testcode]
                    BLOCK 1 [source_file: testcode]
                        VAR 2 [source_file: testcode]
                            NAME action 2 [source_file: testcode]
                        LABEL 3 [source_file: testcode]
                            LABEL_NAME a 3 [source_file: testcode]
                            BLOCK 3 [source_file: testcode]
                                VAR 4 [source_file: testcode]
                                    NAME proto 4 [source_file: testcode]
                                        NULL 4 [source_file: testcode]
                                TRY 5 [source_file: testcode]
                                    BLOCK 5 [source_file: testcode]
                                        EXPR_RESULT 6 [source_file: testcode]
                                            ASSIGN 6 [source_file: testcode]
                                                NAME proto 6 [source_file: testcode]
                                                NEW 6 [source_file: testcode]
                                                    NAME Proto 6 [source_file: testcode]
                                    BLOCK 7 [source_file: testcode]
                                    BLOCK 7 [source_file: testcode]
                                        EXPR_RESULT 8 [source_file: testcode]
                                            ASSIGN 8 [source_file: testcode]
                                                NAME action 8 [source_file: testcode]
                                                NAME proto 8 [source_file: testcode]


Subtree1: BLOCK 7 [source_file: expected0]
    EXPR_RESULT 8 [source_file: expected0]
        ASSIGN 8 [source_file: expected0]
            NAME action 8 [source_file: expected0]
            NAME proto 8 [source_file: expected0]
    RETURN 9 [source_file: expected0]


Subtree2: BLOCK 7 [source_file: testcode]
    EXPR_RESULT 8 [source_file: testcode]
        ASSIGN 8 [source_file: testcode]
            NAME action 8 [source_file: testcode]
            NAME proto 8 [source_file: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:928)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:460)
19:29:46.834 [pool-8-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (12 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue4177428_return(com.google.javascript.jscomp.UnreachableCodeEliminationTest)
[
Expected: f=function(){var action;a:{var proto=null;try{proto=new Proto}finally{action=proto;return}}}
Result: f=function(){var action;a:{var proto=null;try{proto=new Proto}finally{action=proto}}}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            ASSIGN 1 [source_file: expected0]
                NAME f 1 [source_file: expected0]
                FUNCTION  1 [source_file: expected0]
                    NAME  1 [source_file: expected0]
                    PARAM_LIST 1 [source_file: expected0]
                    BLOCK 1 [source_file: expected0]
                        VAR 2 [source_file: expected0]
                            NAME action 2 [source_file: expected0]
                        LABEL 3 [source_file: expected0]
                            LABEL_NAME a 3 [source_file: expected0]
                            BLOCK 3 [source_file: expected0]
                                VAR 4 [source_file: expected0]
                                    NAME proto 4 [source_file: expected0]
                                        NULL 4 [source_file: expected0]
                                TRY 5 [source_file: expected0]
                                    BLOCK 5 [source_file: expected0]
                                        EXPR_RESULT 6 [source_file: expected0]
                                            ASSIGN 6 [source_file: expected0]
                                                NAME proto 6 [source_file: expected0]
                                                NEW 6 [source_file: expected0]
                                                    NAME Proto 6 [source_file: expected0]
                                    BLOCK 7 [source_file: expected0]
                                    BLOCK 7 [source_file: expected0]
                                        EXPR_RESULT 8 [source_file: expected0]
                                            ASSIGN 8 [source_file: expected0]
                                                NAME action 8 [source_file: expected0]
                                                NAME proto 8 [source_file: expected0]
                                        RETURN 9 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        EXPR_RESULT 1 [source_file: testcode]
            ASSIGN 1 [source_file: testcode]
                NAME f 1 [source_file: testcode]
                FUNCTION  1 [source_file: testcode]
                    NAME  1 [source_file: testcode]
                    PARAM_LIST 1 [source_file: testcode]
                    BLOCK 1 [source_file: testcode]
                        VAR 2 [source_file: testcode]
                            NAME action 2 [source_file: testcode]
                        LABEL 3 [source_file: testcode]
                            LABEL_NAME a 3 [source_file: testcode]
                            BLOCK 3 [source_file: testcode]
                                VAR 4 [source_file: testcode]
                                    NAME proto 4 [source_file: testcode]
                                        NULL 4 [source_file: testcode]
                                TRY 5 [source_file: testcode]
                                    BLOCK 5 [source_file: testcode]
                                        EXPR_RESULT 6 [source_file: testcode]
                                            ASSIGN 6 [source_file: testcode]
                                                NAME proto 6 [source_file: testcode]
                                                NEW 6 [source_file: testcode]
                                                    NAME Proto 6 [source_file: testcode]
                                    BLOCK 7 [source_file: testcode]
                                    BLOCK 7 [source_file: testcode]
                                        EXPR_RESULT 8 [source_file: testcode]
                                            ASSIGN 8 [source_file: testcode]
                                                NAME action 8 [source_file: testcode]
                                                NAME proto 8 [source_file: testcode]


Subtree1: BLOCK 7 [source_file: expected0]
    EXPR_RESULT 8 [source_file: expected0]
        ASSIGN 8 [source_file: expected0]
            NAME action 8 [source_file: expected0]
            NAME proto 8 [source_file: expected0]
    RETURN 9 [source_file: expected0]


Subtree2: BLOCK 7 [source_file: testcode]
    EXPR_RESULT 8 [source_file: testcode]
        ASSIGN 8 [source_file: testcode]
            NAME action 8 [source_file: testcode]
            NAME proto 8 [source_file: testcode]
]
junit.framework.AssertionFailedError: 
Expected: f=function(){var action;a:{var proto=null;try{proto=new Proto}finally{action=proto;return}}}
Result: f=function(){var action;a:{var proto=null;try{proto=new Proto}finally{action=proto}}}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            ASSIGN 1 [source_file: expected0]
                NAME f 1 [source_file: expected0]
                FUNCTION  1 [source_file: expected0]
                    NAME  1 [source_file: expected0]
                    PARAM_LIST 1 [source_file: expected0]
                    BLOCK 1 [source_file: expected0]
                        VAR 2 [source_file: expected0]
                            NAME action 2 [source_file: expected0]
                        LABEL 3 [source_file: expected0]
                            LABEL_NAME a 3 [source_file: expected0]
                            BLOCK 3 [source_file: expected0]
                                VAR 4 [source_file: expected0]
                                    NAME proto 4 [source_file: expected0]
                                        NULL 4 [source_file: expected0]
                                TRY 5 [source_file: expected0]
                                    BLOCK 5 [source_file: expected0]
                                        EXPR_RESULT 6 [source_file: expected0]
                                            ASSIGN 6 [source_file: expected0]
                                                NAME proto 6 [source_file: expected0]
                                                NEW 6 [source_file: expected0]
                                                    NAME Proto 6 [source_file: expected0]
                                    BLOCK 7 [source_file: expected0]
                                    BLOCK 7 [source_file: expected0]
                                        EXPR_RESULT 8 [source_file: expected0]
                                            ASSIGN 8 [source_file: expected0]
                                                NAME action 8 [source_file: expected0]
                                                NAME proto 8 [source_file: expected0]
                                        RETURN 9 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        EXPR_RESULT 1 [source_file: testcode]
            ASSIGN 1 [source_file: testcode]
                NAME f 1 [source_file: testcode]
                FUNCTION  1 [source_file: testcode]
                    NAME  1 [source_file: testcode]
                    PARAM_LIST 1 [source_file: testcode]
                    BLOCK 1 [source_file: testcode]
                        VAR 2 [source_file: testcode]
                            NAME action 2 [source_file: testcode]
                        LABEL 3 [source_file: testcode]
                            LABEL_NAME a 3 [source_file: testcode]
                            BLOCK 3 [source_file: testcode]
                                VAR 4 [source_file: testcode]
                                    NAME proto 4 [source_file: testcode]
                                        NULL 4 [source_file: testcode]
                                TRY 5 [source_file: testcode]
                                    BLOCK 5 [source_file: testcode]
                                        EXPR_RESULT 6 [source_file: testcode]
                                            ASSIGN 6 [source_file: testcode]
                                                NAME proto 6 [source_file: testcode]
                                                NEW 6 [source_file: testcode]
                                                    NAME Proto 6 [source_file: testcode]
                                    BLOCK 7 [source_file: testcode]
                                    BLOCK 7 [source_file: testcode]
                                        EXPR_RESULT 8 [source_file: testcode]
                                            ASSIGN 8 [source_file: testcode]
                                                NAME action 8 [source_file: testcode]
                                                NAME proto 8 [source_file: testcode]


Subtree1: BLOCK 7 [source_file: expected0]
    EXPR_RESULT 8 [source_file: expected0]
        ASSIGN 8 [source_file: expected0]
            NAME action 8 [source_file: expected0]
            NAME proto 8 [source_file: expected0]
    RETURN 9 [source_file: expected0]


Subtree2: BLOCK 7 [source_file: testcode]
    EXPR_RESULT 8 [source_file: testcode]
        ASSIGN 8 [source_file: testcode]
            NAME action 8 [source_file: testcode]
            NAME proto 8 [source_file: testcode]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:928)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:460)

junit.framework.AssertionFailedError: 
Expected: f=function(){var action;a:{var proto=null;try{proto=new Proto}finally{action=proto;break a}}alert(action)}
Result: f=function(){var action;a:{var proto=null;try{proto=new Proto}finally{action=proto}}alert(action)}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            ASSIGN 1 [source_file: expected0]
                NAME f 1 [source_file: expected0]
                FUNCTION  1 [source_file: expected0]
                    NAME  1 [source_file: expected0]
                    PARAM_LIST 1 [source_file: expected0]
                    BLOCK 1 [source_file: expected0]
                        VAR 2 [source_file: expected0]
                            NAME action 2 [source_file: expected0]
                        LABEL 3 [source_file: expected0]
                            LABEL_NAME a 3 [source_file: expected0]
                            BLOCK 3 [source_file: expected0]
                                VAR 4 [source_file: expected0]
                                    NAME proto 4 [source_file: expected0]
                                        NULL 4 [source_file: expected0]
                                TRY 5 [source_file: expected0]
                                    BLOCK 5 [source_file: expected0]
                                        EXPR_RESULT 6 [source_file: expected0]
                                            ASSIGN 6 [source_file: expected0]
                                                NAME proto 6 [source_file: expected0]
                                                NEW 6 [source_file: expected0]
                                                    NAME Proto 6 [source_file: expected0]
                                    BLOCK 7 [source_file: expected0]
                                    BLOCK 7 [source_file: expected0]
                                        EXPR_RESULT 8 [source_file: expected0]
                                            ASSIGN 8 [source_file: expected0]
                                                NAME action 8 [source_file: expected0]
                                                NAME proto 8 [source_file: expected0]
                                        BREAK 9 [source_file: expected0]
                                            LABEL_NAME a 9 [source_file: expected0]
                        EXPR_RESULT 12 [source_file: expected0]
                            CALL 12 [free_call: 1] [source_file: expected0]
                                NAME alert 12 [source_file: expected0]
                                NAME action 12 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        EXPR_RESULT 1 [source_file: testcode]
            ASSIGN 1 [source_file: testcode]
                NAME f 1 [source_file: testcode]
                FUNCTION  1 [source_file: testcode]
                    NAME  1 [source_file: testcode]
                    PARAM_LIST 1 [source_file: testcode]
                    BLOCK 1 [source_file: testcode]
                        VAR 2 [source_file: testcode]
                            NAME action 2 [source_file: testcode]
                        LABEL 3 [source_file: testcode]
                            LABEL_NAME a 3 [source_file: testcode]
                            BLOCK 3 [source_file: testcode]
                                VAR 4 [source_file: testcode]
                                    NAME proto 4 [source_file: testcode]
                                        NULL 4 [source_file: testcode]
                                TRY 5 [source_file: testcode]
                                    BLOCK 5 [source_file: testcode]
                                        EXPR_RESULT 6 [source_file: testcode]
                                            ASSIGN 6 [source_file: testcode]
                                                NAME proto 6 [source_file: testcode]
                                                NEW 6 [source_file: testcode]
                                                    NAME Proto 6 [source_file: testcode]
                                    BLOCK 7 [source_file: testcode]
                                    BLOCK 7 [source_file: testcode]
                                        EXPR_RESULT 8 [source_file: testcode]
                                            ASSIGN 8 [source_file: testcode]
                                                NAME action 8 [source_file: testcode]
                                                NAME proto 8 [source_file: testcode]
                        EXPR_RESULT 12 [source_file: testcode]
                            CALL 12 [free_call: 1] [source_file: testcode]
                                NAME alert 12 [source_file: testcode]
                                NAME action 12 [source_file: testcode]


Subtree1: BLOCK 7 [source_file: expected0]
    EXPR_RESULT 8 [source_file: expected0]
        ASSIGN 8 [source_file: expected0]
            NAME action 8 [source_file: expected0]
            NAME proto 8 [source_file: expected0]
    BREAK 9 [source_file: expected0]
        LABEL_NAME a 9 [source_file: expected0]


Subtree2: BLOCK 7 [source_file: testcode]
    EXPR_RESULT 8 [source_file: testcode]
        ASSIGN 8 [source_file: testcode]
            NAME action 8 [source_file: testcode]
            NAME proto 8 [source_file: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:928)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:460)
19:29:46.848 [pool-9-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (11 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue4177428a(com.google.javascript.jscomp.UnreachableCodeEliminationTest)
[
Expected: f=function(){var action;a:{var proto=null;try{proto=new Proto}finally{action=proto;break a}}alert(action)}
Result: f=function(){var action;a:{var proto=null;try{proto=new Proto}finally{action=proto}}alert(action)}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            ASSIGN 1 [source_file: expected0]
                NAME f 1 [source_file: expected0]
                FUNCTION  1 [source_file: expected0]
                    NAME  1 [source_file: expected0]
                    PARAM_LIST 1 [source_file: expected0]
                    BLOCK 1 [source_file: expected0]
                        VAR 2 [source_file: expected0]
                            NAME action 2 [source_file: expected0]
                        LABEL 3 [source_file: expected0]
                            LABEL_NAME a 3 [source_file: expected0]
                            BLOCK 3 [source_file: expected0]
                                VAR 4 [source_file: expected0]
                                    NAME proto 4 [source_file: expected0]
                                        NULL 4 [source_file: expected0]
                                TRY 5 [source_file: expected0]
                                    BLOCK 5 [source_file: expected0]
                                        EXPR_RESULT 6 [source_file: expected0]
                                            ASSIGN 6 [source_file: expected0]
                                                NAME proto 6 [source_file: expected0]
                                                NEW 6 [source_file: expected0]
                                                    NAME Proto 6 [source_file: expected0]
                                    BLOCK 7 [source_file: expected0]
                                    BLOCK 7 [source_file: expected0]
                                        EXPR_RESULT 8 [source_file: expected0]
                                            ASSIGN 8 [source_file: expected0]
                                                NAME action 8 [source_file: expected0]
                                                NAME proto 8 [source_file: expected0]
                                        BREAK 9 [source_file: expected0]
                                            LABEL_NAME a 9 [source_file: expected0]
                        EXPR_RESULT 12 [source_file: expected0]
                            CALL 12 [free_call: 1] [source_file: expected0]
                                NAME alert 12 [source_file: expected0]
                                NAME action 12 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        EXPR_RESULT 1 [source_file: testcode]
            ASSIGN 1 [source_file: testcode]
                NAME f 1 [source_file: testcode]
                FUNCTION  1 [source_file: testcode]
                    NAME  1 [source_file: testcode]
                    PARAM_LIST 1 [source_file: testcode]
                    BLOCK 1 [source_file: testcode]
                        VAR 2 [source_file: testcode]
                            NAME action 2 [source_file: testcode]
                        LABEL 3 [source_file: testcode]
                            LABEL_NAME a 3 [source_file: testcode]
                            BLOCK 3 [source_file: testcode]
                                VAR 4 [source_file: testcode]
                                    NAME proto 4 [source_file: testcode]
                                        NULL 4 [source_file: testcode]
                                TRY 5 [source_file: testcode]
                                    BLOCK 5 [source_file: testcode]
                                        EXPR_RESULT 6 [source_file: testcode]
                                            ASSIGN 6 [source_file: testcode]
                                                NAME proto 6 [source_file: testcode]
                                                NEW 6 [source_file: testcode]
                                                    NAME Proto 6 [source_file: testcode]
                                    BLOCK 7 [source_file: testcode]
                                    BLOCK 7 [source_file: testcode]
                                        EXPR_RESULT 8 [source_file: testcode]
                                            ASSIGN 8 [source_file: testcode]
                                                NAME action 8 [source_file: testcode]
                                                NAME proto 8 [source_file: testcode]
                        EXPR_RESULT 12 [source_file: testcode]
                            CALL 12 [free_call: 1] [source_file: testcode]
                                NAME alert 12 [source_file: testcode]
                                NAME action 12 [source_file: testcode]


Subtree1: BLOCK 7 [source_file: expected0]
    EXPR_RESULT 8 [source_file: expected0]
        ASSIGN 8 [source_file: expected0]
            NAME action 8 [source_file: expected0]
            NAME proto 8 [source_file: expected0]
    BREAK 9 [source_file: expected0]
        LABEL_NAME a 9 [source_file: expected0]


Subtree2: BLOCK 7 [source_file: testcode]
    EXPR_RESULT 8 [source_file: testcode]
        ASSIGN 8 [source_file: testcode]
            NAME action 8 [source_file: testcode]
            NAME proto 8 [source_file: testcode]
]
junit.framework.AssertionFailedError: 
Expected: f=function(){var action;a:{var proto=null;try{proto=new Proto}finally{action=proto;break a}}alert(action)}
Result: f=function(){var action;a:{var proto=null;try{proto=new Proto}finally{action=proto}}alert(action)}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            ASSIGN 1 [source_file: expected0]
                NAME f 1 [source_file: expected0]
                FUNCTION  1 [source_file: expected0]
                    NAME  1 [source_file: expected0]
                    PARAM_LIST 1 [source_file: expected0]
                    BLOCK 1 [source_file: expected0]
                        VAR 2 [source_file: expected0]
                            NAME action 2 [source_file: expected0]
                        LABEL 3 [source_file: expected0]
                            LABEL_NAME a 3 [source_file: expected0]
                            BLOCK 3 [source_file: expected0]
                                VAR 4 [source_file: expected0]
                                    NAME proto 4 [source_file: expected0]
                                        NULL 4 [source_file: expected0]
                                TRY 5 [source_file: expected0]
                                    BLOCK 5 [source_file: expected0]
                                        EXPR_RESULT 6 [source_file: expected0]
                                            ASSIGN 6 [source_file: expected0]
                                                NAME proto 6 [source_file: expected0]
                                                NEW 6 [source_file: expected0]
                                                    NAME Proto 6 [source_file: expected0]
                                    BLOCK 7 [source_file: expected0]
                                    BLOCK 7 [source_file: expected0]
                                        EXPR_RESULT 8 [source_file: expected0]
                                            ASSIGN 8 [source_file: expected0]
                                                NAME action 8 [source_file: expected0]
                                                NAME proto 8 [source_file: expected0]
                                        BREAK 9 [source_file: expected0]
                                            LABEL_NAME a 9 [source_file: expected0]
                        EXPR_RESULT 12 [source_file: expected0]
                            CALL 12 [free_call: 1] [source_file: expected0]
                                NAME alert 12 [source_file: expected0]
                                NAME action 12 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        EXPR_RESULT 1 [source_file: testcode]
            ASSIGN 1 [source_file: testcode]
                NAME f 1 [source_file: testcode]
                FUNCTION  1 [source_file: testcode]
                    NAME  1 [source_file: testcode]
                    PARAM_LIST 1 [source_file: testcode]
                    BLOCK 1 [source_file: testcode]
                        VAR 2 [source_file: testcode]
                            NAME action 2 [source_file: testcode]
                        LABEL 3 [source_file: testcode]
                            LABEL_NAME a 3 [source_file: testcode]
                            BLOCK 3 [source_file: testcode]
                                VAR 4 [source_file: testcode]
                                    NAME proto 4 [source_file: testcode]
                                        NULL 4 [source_file: testcode]
                                TRY 5 [source_file: testcode]
                                    BLOCK 5 [source_file: testcode]
                                        EXPR_RESULT 6 [source_file: testcode]
                                            ASSIGN 6 [source_file: testcode]
                                                NAME proto 6 [source_file: testcode]
                                                NEW 6 [source_file: testcode]
                                                    NAME Proto 6 [source_file: testcode]
                                    BLOCK 7 [source_file: testcode]
                                    BLOCK 7 [source_file: testcode]
                                        EXPR_RESULT 8 [source_file: testcode]
                                            ASSIGN 8 [source_file: testcode]
                                                NAME action 8 [source_file: testcode]
                                                NAME proto 8 [source_file: testcode]
                        EXPR_RESULT 12 [source_file: testcode]
                            CALL 12 [free_call: 1] [source_file: testcode]
                                NAME alert 12 [source_file: testcode]
                                NAME action 12 [source_file: testcode]


Subtree1: BLOCK 7 [source_file: expected0]
    EXPR_RESULT 8 [source_file: expected0]
        ASSIGN 8 [source_file: expected0]
            NAME action 8 [source_file: expected0]
            NAME proto 8 [source_file: expected0]
    BREAK 9 [source_file: expected0]
        LABEL_NAME a 9 [source_file: expected0]


Subtree2: BLOCK 7 [source_file: testcode]
    EXPR_RESULT 8 [source_file: testcode]
        ASSIGN 8 [source_file: testcode]
            NAME action 8 [source_file: testcode]
            NAME proto 8 [source_file: testcode]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:928)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:460)

junit.framework.AssertionFailedError: 
Expected: function f(){b:try{throw 9;}finally{break b}return 1}
Result: function f(){b:try{throw 9;}finally{}return 1}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION f 1 [source_file: expected0]
            NAME f 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                LABEL 1 [source_file: expected0]
                    LABEL_NAME b 1 [source_file: expected0]
                    TRY 1 [source_file: expected0]
                        BLOCK 1 [source_file: expected0]
                            THROW 1 [source_file: expected0]
                                NUMBER 9.0 1 [source_file: expected0]
                        BLOCK 1 [source_file: expected0]
                        BLOCK 1 [source_file: expected0]
                            BREAK 1 [source_file: expected0]
                                LABEL_NAME b 1 [source_file: expected0]
                RETURN 1 [source_file: expected0]
                    NUMBER 1.0 1 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION f 1 [source_file: testcode]
            NAME f 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                LABEL 1 [source_file: testcode]
                    LABEL_NAME b 1 [source_file: testcode]
                    TRY 1 [source_file: testcode]
                        BLOCK 1 [source_file: testcode]
                            THROW 1 [source_file: testcode]
                                NUMBER 9.0 1 [source_file: testcode]
                        BLOCK 1 [source_file: testcode]
                        BLOCK 1 [source_file: testcode]
                RETURN 1 [source_file: testcode]
                    NUMBER 1.0 1 [source_file: testcode]


Subtree1: BLOCK 1 [source_file: expected0]
    BREAK 1 [source_file: expected0]
        LABEL_NAME b 1 [source_file: expected0]


Subtree2: BLOCK 1 [source_file: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:928)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:460)
19:29:46.861 [pool-10-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (10 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testDontRemoveBreakInTryFinally(com.google.javascript.jscomp.UnreachableCodeEliminationTest)
[
Expected: function f(){b:try{throw 9;}finally{break b}return 1}
Result: function f(){b:try{throw 9;}finally{}return 1}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION f 1 [source_file: expected0]
            NAME f 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                LABEL 1 [source_file: expected0]
                    LABEL_NAME b 1 [source_file: expected0]
                    TRY 1 [source_file: expected0]
                        BLOCK 1 [source_file: expected0]
                            THROW 1 [source_file: expected0]
                                NUMBER 9.0 1 [source_file: expected0]
                        BLOCK 1 [source_file: expected0]
                        BLOCK 1 [source_file: expected0]
                            BREAK 1 [source_file: expected0]
                                LABEL_NAME b 1 [source_file: expected0]
                RETURN 1 [source_file: expected0]
                    NUMBER 1.0 1 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION f 1 [source_file: testcode]
            NAME f 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                LABEL 1 [source_file: testcode]
                    LABEL_NAME b 1 [source_file: testcode]
                    TRY 1 [source_file: testcode]
                        BLOCK 1 [source_file: testcode]
                            THROW 1 [source_file: testcode]
                                NUMBER 9.0 1 [source_file: testcode]
                        BLOCK 1 [source_file: testcode]
                        BLOCK 1 [source_file: testcode]
                RETURN 1 [source_file: testcode]
                    NUMBER 1.0 1 [source_file: testcode]


Subtree1: BLOCK 1 [source_file: expected0]
    BREAK 1 [source_file: expected0]
        LABEL_NAME b 1 [source_file: expected0]


Subtree2: BLOCK 1 [source_file: testcode]
]
junit.framework.AssertionFailedError: 
Expected: function f(){b:try{throw 9;}finally{break b}return 1}
Result: function f(){b:try{throw 9;}finally{}return 1}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION f 1 [source_file: expected0]
            NAME f 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                LABEL 1 [source_file: expected0]
                    LABEL_NAME b 1 [source_file: expected0]
                    TRY 1 [source_file: expected0]
                        BLOCK 1 [source_file: expected0]
                            THROW 1 [source_file: expected0]
                                NUMBER 9.0 1 [source_file: expected0]
                        BLOCK 1 [source_file: expected0]
                        BLOCK 1 [source_file: expected0]
                            BREAK 1 [source_file: expected0]
                                LABEL_NAME b 1 [source_file: expected0]
                RETURN 1 [source_file: expected0]
                    NUMBER 1.0 1 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION f 1 [source_file: testcode]
            NAME f 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                LABEL 1 [source_file: testcode]
                    LABEL_NAME b 1 [source_file: testcode]
                    TRY 1 [source_file: testcode]
                        BLOCK 1 [source_file: testcode]
                            THROW 1 [source_file: testcode]
                                NUMBER 9.0 1 [source_file: testcode]
                        BLOCK 1 [source_file: testcode]
                        BLOCK 1 [source_file: testcode]
                RETURN 1 [source_file: testcode]
                    NUMBER 1.0 1 [source_file: testcode]


Subtree1: BLOCK 1 [source_file: expected0]
    BREAK 1 [source_file: expected0]
        LABEL_NAME b 1 [source_file: expected0]


Subtree2: BLOCK 1 [source_file: testcode]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:928)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:460)

junit.framework.AssertionFailedError: 
Expected: var JSCompiler_stubMap=[];function JSCompiler_stubMethod(JSCompiler_stubMethod_id){return function(){return JSCompiler_stubMap[JSCompiler_stubMethod_id].apply(this,arguments)}}function JSCompiler_unstubMethod(JSCompiler_unstubMethod_id,JSCompiler_unstubMethod_body){return JSCompiler_stubMap[JSCompiler_unstubMethod_id]=JSCompiler_unstubMethod_body}function Foo(){}Foo.prototype.baz=JSCompiler_stubMethod(1);Foo.prototype.callBaz=JSCompiler_stubMethod(0);Foo.prototype.baz=JSCompiler_unstubMethod(1,function(){});
Foo.prototype.callBaz=JSCompiler_unstubMethod(0,function(){this.baz()});(new Foo).callBaz()
Result: var JSCompiler_stubMap=[];function JSCompiler_stubMethod(JSCompiler_stubMethod_id){return function(){return JSCompiler_stubMap[JSCompiler_stubMethod_id].apply(this,arguments)}}function JSCompiler_unstubMethod(JSCompiler_unstubMethod_id,JSCompiler_unstubMethod_body){return JSCompiler_stubMap[JSCompiler_unstubMethod_id]=JSCompiler_unstubMethod_body}function Foo(){}Foo.prototype.baz=JSCompiler_stubMethod(0);Foo.prototype.callBaz=JSCompiler_stubMethod(1);
Foo.prototype.callBaz=JSCompiler_unstubMethod(1,function(){this.baz()});Foo.prototype.baz=JSCompiler_unstubMethod(0,function(){});(new Foo).callBaz()
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        VAR 1 [source_file: expected0]
            NAME JSCompiler_stubMap 1 [source_file: expected0]
                ARRAYLIT 1 [source_file: expected0]
        FUNCTION JSCompiler_stubMethod 1 [source_file: expected0]
            NAME JSCompiler_stubMethod 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
                NAME JSCompiler_stubMethod_id 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                RETURN 1 [source_file: expected0]
                    FUNCTION  1 [source_file: expected0]
                        NAME  1 [source_file: expected0]
                        PARAM_LIST 1 [source_file: expected0]
                        BLOCK 1 [source_file: expected0]
                            RETURN 1 [source_file: expected0]
                                CALL 1 [source_file: expected0]
                                    GETPROP 1 [source_file: expected0]
                                        GETELEM 1 [source_file: expected0]
                                            NAME JSCompiler_stubMap 1 [source_file: expected0]
                                            NAME JSCompiler_stubMethod_id 1 [source_file: expected0]
                                        STRING apply 1 [source_file: expected0]
                                    THIS 1 [source_file: expected0]
                                    NAME arguments 1 [source_file: expected0]
        FUNCTION JSCompiler_unstubMethod 1 [source_file: expected0]
            NAME JSCompiler_unstubMethod 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
                NAME JSCompiler_unstubMethod_id 1 [source_file: expected0]
                NAME JSCompiler_unstubMethod_body 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                RETURN 1 [source_file: expected0]
                    ASSIGN 1 [source_file: expected0]
                        GETELEM 1 [source_file: expected0]
                            NAME JSCompiler_stubMap 1 [source_file: expected0]
                            NAME JSCompiler_unstubMethod_id 1 [source_file: expected0]
                        NAME JSCompiler_unstubMethod_body 1 [source_file: expected0]
        FUNCTION Foo 1 [source_file: expected0]
            NAME Foo 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            ASSIGN 1 [source_file: expected0]
                GETPROP 1 [source_file: expected0]
                    GETPROP 1 [source_file: expected0]
                        NAME Foo 1 [source_file: expected0]
                        STRING prototype 1 [source_file: expected0]
                    STRING baz 1 [source_file: expected0]
                CALL 1 [free_call: 1] [source_file: expected0]
                    NAME JSCompiler_stubMethod 1 [source_file: expected0]
                    NUMBER 1.0 1 [source_file: expected0]
    SCRIPT 1 [synthetic: 1] [source_file: expected1] [input_id: InputId: expected1]
        EXPR_RESULT 1 [source_file: expected1]
            ASSIGN 1 [source_file: expected1]
                GETPROP 1 [source_file: expected1]
                    GETPROP 1 [source_file: expected1]
                        NAME Foo 1 [source_file: expected1]
                        STRING prototype 1 [source_file: expected1]
                    STRING callBaz 1 [source_file: expected1]
                CALL 1 [free_call: 1] [source_file: expected1]
                    NAME JSCompiler_stubMethod 1 [source_file: expected1]
                    NUMBER 0.0 1 [source_file: expected1]
    SCRIPT 1 [synthetic: 1] [source_file: expected2] [input_id: InputId: expected2]
        EXPR_RESULT 1 [source_file: expected2]
            ASSIGN 1 [source_file: expected2]
                GETPROP 1 [source_file: expected2]
                    GETPROP 1 [source_file: expected2]
                        NAME Foo 1 [source_file: expected2]
                        STRING prototype 1 [source_file: expected2]
                    STRING baz 1 [source_file: expected2]
                CALL 1 [free_call: 1] [source_file: expected2]
                    NAME JSCompiler_unstubMethod 1 [source_file: expected2]
                    NUMBER 1.0 1 [source_file: expected2]
                    FUNCTION  1 [source_file: expected2]
                        NAME  1 [source_file: expected2]
                        PARAM_LIST 1 [source_file: expected2]
                        BLOCK 1 [source_file: expected2]
        EXPR_RESULT 1 [source_file: expected2]
            ASSIGN 1 [source_file: expected2]
                GETPROP 1 [source_file: expected2]
                    GETPROP 1 [source_file: expected2]
                        NAME Foo 1 [source_file: expected2]
                        STRING prototype 1 [source_file: expected2]
                    STRING callBaz 1 [source_file: expected2]
                CALL 1 [free_call: 1] [source_file: expected2]
                    NAME JSCompiler_unstubMethod 1 [source_file: expected2]
                    NUMBER 0.0 1 [source_file: expected2]
                    FUNCTION  1 [source_file: expected2]
                        NAME  1 [source_file: expected2]
                        PARAM_LIST 1 [source_file: expected2]
                        BLOCK 1 [source_file: expected2]
                            EXPR_RESULT 1 [source_file: expected2]
                                CALL 1 [source_file: expected2]
                                    GETPROP 1 [source_file: expected2]
                                        THIS 1 [source_file: expected2]
                                        STRING baz 1 [source_file: expected2]
        EXPR_RESULT 1 [source_file: expected2]
            CALL 1 [source_file: expected2]
                GETPROP 1 [source_file: expected2]
                    NEW 1 [source_file: expected2]
                        NAME Foo 1 [source_file: expected2]
                    STRING callBaz 1 [source_file: expected2]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: i0] [input_id: InputId: i0]
        VAR 1 [source_file:  [synthetic:1] ]
            NAME JSCompiler_stubMap 1 [source_file:  [synthetic:1] ]
                ARRAYLIT 1 [source_file:  [synthetic:1] ]
        FUNCTION JSCompiler_stubMethod 1 [source_file:  [synthetic:1] ]
            NAME JSCompiler_stubMethod 1 [source_file:  [synthetic:1] ]
            PARAM_LIST 1 [source_file:  [synthetic:1] ]
                NAME JSCompiler_stubMethod_id 1 [source_file:  [synthetic:1] ]
            BLOCK 1 [source_file:  [synthetic:1] ]
                RETURN 1 [source_file:  [synthetic:1] ]
                    FUNCTION  1 [source_file:  [synthetic:1] ]
                        NAME  1 [source_file:  [synthetic:1] ]
                        PARAM_LIST 1 [source_file:  [synthetic:1] ]
                        BLOCK 1 [source_file:  [synthetic:1] ]
                            RETURN 1 [source_file:  [synthetic:1] ]
                                CALL 1 [source_file:  [synthetic:1] ]
                                    GETPROP 1 [source_file:  [synthetic:1] ]
                                        GETELEM 1 [source_file:  [synthetic:1] ]
                                            NAME JSCompiler_stubMap 1 [source_file:  [synthetic:1] ]
                                            NAME JSCompiler_stubMethod_id 1 [source_file:  [synthetic:1] ]
                                        STRING apply 1 [source_file:  [synthetic:1] ]
                                    THIS 1 [source_file:  [synthetic:1] ]
                                    NAME arguments 1 [source_file:  [synthetic:1] ]
        FUNCTION JSCompiler_unstubMethod 1 [source_file:  [synthetic:1] ]
            NAME JSCompiler_unstubMethod 1 [source_file:  [synthetic:1] ]
            PARAM_LIST 1 [source_file:  [synthetic:1] ]
                NAME JSCompiler_unstubMethod_id 1 [source_file:  [synthetic:1] ]
                NAME JSCompiler_unstubMethod_body 1 [source_file:  [synthetic:1] ]
            BLOCK 1 [source_file:  [synthetic:1] ]
                RETURN 1 [source_file:  [synthetic:1] ]
                    ASSIGN 1 [source_file:  [synthetic:1] ]
                        GETELEM 1 [source_file:  [synthetic:1] ]
                            NAME JSCompiler_stubMap 1 [source_file:  [synthetic:1] ]
                            NAME JSCompiler_unstubMethod_id 1 [source_file:  [synthetic:1] ]
                        NAME JSCompiler_unstubMethod_body 1 [source_file:  [synthetic:1] ]
        FUNCTION Foo 1 [source_file: i0]
            NAME Foo 1 [source_file: i0]
            PARAM_LIST 1 [source_file: i0]
            BLOCK 1 [source_file: i0]
        EXPR_RESULT 1 [source_file: i0]
            ASSIGN 1 [source_file: i0]
                GETPROP 1 [source_file: i0]
                    GETPROP 1 [source_file: i0]
                        NAME Foo 1 [source_file: i0]
                        STRING prototype 1 [source_file: i0]
                    STRING baz 1 [source_file: i0]
                CALL 1 [free_call: 1] [source_file: i0]
                    NAME JSCompiler_stubMethod 1 [source_file: i0]
                    NUMBER 0.0 1 [source_file: i0]
    SCRIPT 1 [synthetic: 1] [source_file: i1] [input_id: InputId: i1]
        EXPR_RESULT 1 [source_file: i1]
            ASSIGN 1 [source_file: i1]
                GETPROP 1 [source_file: i1]
                    GETPROP 1 [source_file: i1]
                        NAME Foo 1 [source_file: i1]
                        STRING prototype 1 [source_file: i1]
                    STRING callBaz 1 [source_file: i1]
                CALL 1 [free_call: 1] [source_file: i1]
                    NAME JSCompiler_stubMethod 1 [source_file: i1]
                    NUMBER 1.0 1 [source_file: i1]
    SCRIPT 1 [synthetic: 1] [source_file: i2] [input_id: InputId: i2]
        EXPR_RESULT 1 [source_file: i1]
            ASSIGN 1 [source_file: i1]
                GETPROP 1 [source_file: i1]
                    GETPROP 1 [source_file: i1]
                        NAME Foo 1 [source_file: i1]
                        STRING prototype 1 [source_file: i1]
                    STRING callBaz 1 [source_file: i1]
                CALL 1 [free_call: 1] [source_file: i1]
                    NAME JSCompiler_unstubMethod 1 [source_file: i1]
                    NUMBER 1.0 1 [source_file: i1]
                    FUNCTION  1 [source_file: i1]
                        NAME  1 [source_file: i1]
                        PARAM_LIST 1 [source_file: i1]
                        BLOCK 1 [source_file: i1]
                            EXPR_RESULT 1 [source_file: i1]
                                CALL 1 [source_file: i1]
                                    GETPROP 1 [source_file: i1]
                                        THIS 1 [source_file: i1]
                                        STRING baz 1 [source_file: i1]
        EXPR_RESULT 1 [source_file: i0]
            ASSIGN 1 [source_file: i0]
                GETPROP 1 [source_file: i0]
                    GETPROP 1 [source_file: i0]
                        NAME Foo 1 [source_file: i0]
                        STRING prototype 1 [source_file: i0]
                    STRING baz 1 [source_file: i0]
                CALL 1 [free_call: 1] [source_file: i0]
                    NAME JSCompiler_unstubMethod 1 [source_file: i0]
                    NUMBER 0.0 1 [source_file: i0]
                    FUNCTION  1 [source_file: i0]
                        NAME  1 [source_file: i0]
                        PARAM_LIST 1 [source_file: i0]
                        BLOCK 1 [source_file: i0]
        EXPR_RESULT 1 [source_file: i2]
            CALL 1 [source_file: i2]
                GETPROP 1 [source_file: i2]
                    NEW 1 [source_file: i2]
                        NAME Foo 1 [source_file: i2]
                    STRING callBaz 1 [source_file: i2]


Subtree1: NUMBER 1.0 1 [source_file: expected0]


Subtree2: NUMBER 0.0 1 [source_file: i0]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:928)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:736)
19:29:46.894 [pool-11-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (29 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testTwoMethods(com.google.javascript.jscomp.CrossModuleMethodMotionTest)
[
Expected: var JSCompiler_stubMap=[];function JSCompiler_stubMethod(JSCompiler_stubMethod_id){return function(){return JSCompiler_stubMap[JSCompiler_stubMethod_id].apply(this,arguments)}}function JSCompiler_unstubMethod(JSCompiler_unstubMethod_id,JSCompiler_unstubMethod_body){return JSCompiler_stubMap[JSCompiler_unstubMethod_id]=JSCompiler_unstubMethod_body}function Foo(){}Foo.prototype.baz=JSCompiler_stubMethod(1);Foo.prototype.callBaz=JSCompiler_stubMethod(0);Foo.prototype.baz=JSCompiler_unstubMethod(1,function(){});
Foo.prototype.callBaz=JSCompiler_unstubMethod(0,function(){this.baz()});(new Foo).callBaz()
Result: var JSCompiler_stubMap=[];function JSCompiler_stubMethod(JSCompiler_stubMethod_id){return function(){return JSCompiler_stubMap[JSCompiler_stubMethod_id].apply(this,arguments)}}function JSCompiler_unstubMethod(JSCompiler_unstubMethod_id,JSCompiler_unstubMethod_body){return JSCompiler_stubMap[JSCompiler_unstubMethod_id]=JSCompiler_unstubMethod_body}function Foo(){}Foo.prototype.baz=JSCompiler_stubMethod(0);Foo.prototype.callBaz=JSCompiler_stubMethod(1);
Foo.prototype.callBaz=JSCompiler_unstubMethod(1,function(){this.baz()});Foo.prototype.baz=JSCompiler_unstubMethod(0,function(){});(new Foo).callBaz()
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        VAR 1 [source_file: expected0]
            NAME JSCompiler_stubMap 1 [source_file: expected0]
                ARRAYLIT 1 [source_file: expected0]
        FUNCTION JSCompiler_stubMethod 1 [source_file: expected0]
            NAME JSCompiler_stubMethod 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
                NAME JSCompiler_stubMethod_id 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                RETURN 1 [source_file: expected0]
                    FUNCTION  1 [source_file: expected0]
                        NAME  1 [source_file: expected0]
                        PARAM_LIST 1 [source_file: expected0]
                        BLOCK 1 [source_file: expected0]
                            RETURN 1 [source_file: expected0]
                                CALL 1 [source_file: expected0]
                                    GETPROP 1 [source_file: expected0]
                                        GETELEM 1 [source_file: expected0]
                                            NAME JSCompiler_stubMap 1 [source_file: expected0]
                                            NAME JSCompiler_stubMethod_id 1 [source_file: expected0]
                                        STRING apply 1 [source_file: expected0]
                                    THIS 1 [source_file: expected0]
                                    NAME arguments 1 [source_file: expected0]
        FUNCTION JSCompiler_unstubMethod 1 [source_file: expected0]
            NAME JSCompiler_unstubMethod 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
                NAME JSCompiler_unstubMethod_id 1 [source_file: expected0]
                NAME JSCompiler_unstubMethod_body 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                RETURN 1 [source_file: expected0]
                    ASSIGN 1 [source_file: expected0]
                        GETELEM 1 [source_file: expected0]
                            NAME JSCompiler_stubMap 1 [source_file: expected0]
                            NAME JSCompiler_unstubMethod_id 1 [source_file: expected0]
                        NAME JSCompiler_unstubMethod_body 1 [source_file: expected0]
        FUNCTION Foo 1 [source_file: expected0]
            NAME Foo 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            ASSIGN 1 [source_file: expected0]
                GETPROP 1 [source_file: expected0]
                    GETPROP 1 [source_file: expected0]
                        NAME Foo 1 [source_file: expected0]
                        STRING prototype 1 [source_file: expected0]
                    STRING baz 1 [source_file: expected0]
                CALL 1 [free_call: 1] [source_file: expected0]
                    NAME JSCompiler_stubMethod 1 [source_file: expected0]
                    NUMBER 1.0 1 [source_file: expected0]
    SCRIPT 1 [synthetic: 1] [source_file: expected1] [input_id: InputId: expected1]
        EXPR_RESULT 1 [source_file: expected1]
            ASSIGN 1 [source_file: expected1]
                GETPROP 1 [source_file: expected1]
                    GETPROP 1 [source_file: expected1]
                        NAME Foo 1 [source_file: expected1]
                        STRING prototype 1 [source_file: expected1]
                    STRING callBaz 1 [source_file: expected1]
                CALL 1 [free_call: 1] [source_file: expected1]
                    NAME JSCompiler_stubMethod 1 [source_file: expected1]
                    NUMBER 0.0 1 [source_file: expected1]
    SCRIPT 1 [synthetic: 1] [source_file: expected2] [input_id: InputId: expected2]
        EXPR_RESULT 1 [source_file: expected2]
            ASSIGN 1 [source_file: expected2]
                GETPROP 1 [source_file: expected2]
                    GETPROP 1 [source_file: expected2]
                        NAME Foo 1 [source_file: expected2]
                        STRING prototype 1 [source_file: expected2]
                    STRING baz 1 [source_file: expected2]
                CALL 1 [free_call: 1] [source_file: expected2]
                    NAME JSCompiler_unstubMethod 1 [source_file: expected2]
                    NUMBER 1.0 1 [source_file: expected2]
                    FUNCTION  1 [source_file: expected2]
                        NAME  1 [source_file: expected2]
                        PARAM_LIST 1 [source_file: expected2]
                        BLOCK 1 [source_file: expected2]
        EXPR_RESULT 1 [source_file: expected2]
            ASSIGN 1 [source_file: expected2]
                GETPROP 1 [source_file: expected2]
                    GETPROP 1 [source_file: expected2]
                        NAME Foo 1 [source_file: expected2]
                        STRING prototype 1 [source_file: expected2]
                    STRING callBaz 1 [source_file: expected2]
                CALL 1 [free_call: 1] [source_file: expected2]
                    NAME JSCompiler_unstubMethod 1 [source_file: expected2]
                    NUMBER 0.0 1 [source_file: expected2]
                    FUNCTION  1 [source_file: expected2]
                        NAME  1 [source_file: expected2]
                        PARAM_LIST 1 [source_file: expected2]
                        BLOCK 1 [source_file: expected2]
                            EXPR_RESULT 1 [source_file: expected2]
                                CALL 1 [source_file: expected2]
                                    GETPROP 1 [source_file: expected2]
                                        THIS 1 [source_file: expected2]
                                        STRING baz 1 [source_file: expected2]
        EXPR_RESULT 1 [source_file: expected2]
            CALL 1 [source_file: expected2]
                GETPROP 1 [source_file: expected2]
                    NEW 1 [source_file: expected2]
                        NAME Foo 1 [source_file: expected2]
                    STRING callBaz 1 [source_file: expected2]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: i0] [input_id: InputId: i0]
        VAR 1 [source_file:  [synthetic:1] ]
            NAME JSCompiler_stubMap 1 [source_file:  [synthetic:1] ]
                ARRAYLIT 1 [source_file:  [synthetic:1] ]
        FUNCTION JSCompiler_stubMethod 1 [source_file:  [synthetic:1] ]
            NAME JSCompiler_stubMethod 1 [source_file:  [synthetic:1] ]
            PARAM_LIST 1 [source_file:  [synthetic:1] ]
                NAME JSCompiler_stubMethod_id 1 [source_file:  [synthetic:1] ]
            BLOCK 1 [source_file:  [synthetic:1] ]
                RETURN 1 [source_file:  [synthetic:1] ]
                    FUNCTION  1 [source_file:  [synthetic:1] ]
                        NAME  1 [source_file:  [synthetic:1] ]
                        PARAM_LIST 1 [source_file:  [synthetic:1] ]
                        BLOCK 1 [source_file:  [synthetic:1] ]
                            RETURN 1 [source_file:  [synthetic:1] ]
                                CALL 1 [source_file:  [synthetic:1] ]
                                    GETPROP 1 [source_file:  [synthetic:1] ]
                                        GETELEM 1 [source_file:  [synthetic:1] ]
                                            NAME JSCompiler_stubMap 1 [source_file:  [synthetic:1] ]
                                            NAME JSCompiler_stubMethod_id 1 [source_file:  [synthetic:1] ]
                                        STRING apply 1 [source_file:  [synthetic:1] ]
                                    THIS 1 [source_file:  [synthetic:1] ]
                                    NAME arguments 1 [source_file:  [synthetic:1] ]
        FUNCTION JSCompiler_unstubMethod 1 [source_file:  [synthetic:1] ]
            NAME JSCompiler_unstubMethod 1 [source_file:  [synthetic:1] ]
            PARAM_LIST 1 [source_file:  [synthetic:1] ]
                NAME JSCompiler_unstubMethod_id 1 [source_file:  [synthetic:1] ]
                NAME JSCompiler_unstubMethod_body 1 [source_file:  [synthetic:1] ]
            BLOCK 1 [source_file:  [synthetic:1] ]
                RETURN 1 [source_file:  [synthetic:1] ]
                    ASSIGN 1 [source_file:  [synthetic:1] ]
                        GETELEM 1 [source_file:  [synthetic:1] ]
                            NAME JSCompiler_stubMap 1 [source_file:  [synthetic:1] ]
                            NAME JSCompiler_unstubMethod_id 1 [source_file:  [synthetic:1] ]
                        NAME JSCompiler_unstubMethod_body 1 [source_file:  [synthetic:1] ]
        FUNCTION Foo 1 [source_file: i0]
            NAME Foo 1 [source_file: i0]
            PARAM_LIST 1 [source_file: i0]
            BLOCK 1 [source_file: i0]
        EXPR_RESULT 1 [source_file: i0]
            ASSIGN 1 [source_file: i0]
                GETPROP 1 [source_file: i0]
                    GETPROP 1 [source_file: i0]
                        NAME Foo 1 [source_file: i0]
                        STRING prototype 1 [source_file: i0]
                    STRING baz 1 [source_file: i0]
                CALL 1 [free_call: 1] [source_file: i0]
                    NAME JSCompiler_stubMethod 1 [source_file: i0]
                    NUMBER 0.0 1 [source_file: i0]
    SCRIPT 1 [synthetic: 1] [source_file: i1] [input_id: InputId: i1]
        EXPR_RESULT 1 [source_file: i1]
            ASSIGN 1 [source_file: i1]
                GETPROP 1 [source_file: i1]
                    GETPROP 1 [source_file: i1]
                        NAME Foo 1 [source_file: i1]
                        STRING prototype 1 [source_file: i1]
                    STRING callBaz 1 [source_file: i1]
                CALL 1 [free_call: 1] [source_file: i1]
                    NAME JSCompiler_stubMethod 1 [source_file: i1]
                    NUMBER 1.0 1 [source_file: i1]
    SCRIPT 1 [synthetic: 1] [source_file: i2] [input_id: InputId: i2]
        EXPR_RESULT 1 [source_file: i1]
            ASSIGN 1 [source_file: i1]
                GETPROP 1 [source_file: i1]
                    GETPROP 1 [source_file: i1]
                        NAME Foo 1 [source_file: i1]
                        STRING prototype 1 [source_file: i1]
                    STRING callBaz 1 [source_file: i1]
                CALL 1 [free_call: 1] [source_file: i1]
                    NAME JSCompiler_unstubMethod 1 [source_file: i1]
                    NUMBER 1.0 1 [source_file: i1]
                    FUNCTION  1 [source_file: i1]
                        NAME  1 [source_file: i1]
                        PARAM_LIST 1 [source_file: i1]
                        BLOCK 1 [source_file: i1]
                            EXPR_RESULT 1 [source_file: i1]
                                CALL 1 [source_file: i1]
                                    GETPROP 1 [source_file: i1]
                                        THIS 1 [source_file: i1]
                                        STRING baz 1 [source_file: i1]
        EXPR_RESULT 1 [source_file: i0]
            ASSIGN 1 [source_file: i0]
                GETPROP 1 [source_file: i0]
                    GETPROP 1 [source_file: i0]
                        NAME Foo 1 [source_file: i0]
                        STRING prototype 1 [source_file: i0]
                    STRING baz 1 [source_file: i0]
                CALL 1 [free_call: 1] [source_file: i0]
                    NAME JSCompiler_unstubMethod 1 [source_file: i0]
                    NUMBER 0.0 1 [source_file: i0]
                    FUNCTION  1 [source_file: i0]
                        NAME  1 [source_file: i0]
                        PARAM_LIST 1 [source_file: i0]
                        BLOCK 1 [source_file: i0]
        EXPR_RESULT 1 [source_file: i2]
            CALL 1 [source_file: i2]
                GETPROP 1 [source_file: i2]
                    NEW 1 [source_file: i2]
                        NAME Foo 1 [source_file: i2]
                    STRING callBaz 1 [source_file: i2]


Subtree1: NUMBER 1.0 1 [source_file: expected0]


Subtree2: NUMBER 0.0 1 [source_file: i0]
]
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_stubMap=[];function JSCompiler_stubMethod(JSCompiler_stubMethod_id){return function(){return JSCompiler_stubMap[JSCompiler_stubMethod_id].apply(this,arguments)}}function JSCompiler_unstubMethod(JSCompiler_unstubMethod_id,JSCompiler_unstubMethod_body){return JSCompiler_stubMap[JSCompiler_unstubMethod_id]=JSCompiler_unstubMethod_body}function Foo(){}Foo.prototype.baz=JSCompiler_stubMethod(1);Foo.prototype.callBaz=JSCompiler_stubMethod(0);Foo.prototype.baz=JSCompiler_unstubMethod(1,function(){});
Foo.prototype.callBaz=JSCompiler_unstubMethod(0,function(){this.baz()});(new Foo).callBaz()
Result: var JSCompiler_stubMap=[];function JSCompiler_stubMethod(JSCompiler_stubMethod_id){return function(){return JSCompiler_stubMap[JSCompiler_stubMethod_id].apply(this,arguments)}}function JSCompiler_unstubMethod(JSCompiler_unstubMethod_id,JSCompiler_unstubMethod_body){return JSCompiler_stubMap[JSCompiler_unstubMethod_id]=JSCompiler_unstubMethod_body}function Foo(){}Foo.prototype.baz=JSCompiler_stubMethod(0);Foo.prototype.callBaz=JSCompiler_stubMethod(1);
Foo.prototype.callBaz=JSCompiler_unstubMethod(1,function(){this.baz()});Foo.prototype.baz=JSCompiler_unstubMethod(0,function(){});(new Foo).callBaz()
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        VAR 1 [source_file: expected0]
            NAME JSCompiler_stubMap 1 [source_file: expected0]
                ARRAYLIT 1 [source_file: expected0]
        FUNCTION JSCompiler_stubMethod 1 [source_file: expected0]
            NAME JSCompiler_stubMethod 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
                NAME JSCompiler_stubMethod_id 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                RETURN 1 [source_file: expected0]
                    FUNCTION  1 [source_file: expected0]
                        NAME  1 [source_file: expected0]
                        PARAM_LIST 1 [source_file: expected0]
                        BLOCK 1 [source_file: expected0]
                            RETURN 1 [source_file: expected0]
                                CALL 1 [source_file: expected0]
                                    GETPROP 1 [source_file: expected0]
                                        GETELEM 1 [source_file: expected0]
                                            NAME JSCompiler_stubMap 1 [source_file: expected0]
                                            NAME JSCompiler_stubMethod_id 1 [source_file: expected0]
                                        STRING apply 1 [source_file: expected0]
                                    THIS 1 [source_file: expected0]
                                    NAME arguments 1 [source_file: expected0]
        FUNCTION JSCompiler_unstubMethod 1 [source_file: expected0]
            NAME JSCompiler_unstubMethod 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
                NAME JSCompiler_unstubMethod_id 1 [source_file: expected0]
                NAME JSCompiler_unstubMethod_body 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                RETURN 1 [source_file: expected0]
                    ASSIGN 1 [source_file: expected0]
                        GETELEM 1 [source_file: expected0]
                            NAME JSCompiler_stubMap 1 [source_file: expected0]
                            NAME JSCompiler_unstubMethod_id 1 [source_file: expected0]
                        NAME JSCompiler_unstubMethod_body 1 [source_file: expected0]
        FUNCTION Foo 1 [source_file: expected0]
            NAME Foo 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            ASSIGN 1 [source_file: expected0]
                GETPROP 1 [source_file: expected0]
                    GETPROP 1 [source_file: expected0]
                        NAME Foo 1 [source_file: expected0]
                        STRING prototype 1 [source_file: expected0]
                    STRING baz 1 [source_file: expected0]
                CALL 1 [free_call: 1] [source_file: expected0]
                    NAME JSCompiler_stubMethod 1 [source_file: expected0]
                    NUMBER 1.0 1 [source_file: expected0]
    SCRIPT 1 [synthetic: 1] [source_file: expected1] [input_id: InputId: expected1]
        EXPR_RESULT 1 [source_file: expected1]
            ASSIGN 1 [source_file: expected1]
                GETPROP 1 [source_file: expected1]
                    GETPROP 1 [source_file: expected1]
                        NAME Foo 1 [source_file: expected1]
                        STRING prototype 1 [source_file: expected1]
                    STRING callBaz 1 [source_file: expected1]
                CALL 1 [free_call: 1] [source_file: expected1]
                    NAME JSCompiler_stubMethod 1 [source_file: expected1]
                    NUMBER 0.0 1 [source_file: expected1]
    SCRIPT 1 [synthetic: 1] [source_file: expected2] [input_id: InputId: expected2]
        EXPR_RESULT 1 [source_file: expected2]
            ASSIGN 1 [source_file: expected2]
                GETPROP 1 [source_file: expected2]
                    GETPROP 1 [source_file: expected2]
                        NAME Foo 1 [source_file: expected2]
                        STRING prototype 1 [source_file: expected2]
                    STRING baz 1 [source_file: expected2]
                CALL 1 [free_call: 1] [source_file: expected2]
                    NAME JSCompiler_unstubMethod 1 [source_file: expected2]
                    NUMBER 1.0 1 [source_file: expected2]
                    FUNCTION  1 [source_file: expected2]
                        NAME  1 [source_file: expected2]
                        PARAM_LIST 1 [source_file: expected2]
                        BLOCK 1 [source_file: expected2]
        EXPR_RESULT 1 [source_file: expected2]
            ASSIGN 1 [source_file: expected2]
                GETPROP 1 [source_file: expected2]
                    GETPROP 1 [source_file: expected2]
                        NAME Foo 1 [source_file: expected2]
                        STRING prototype 1 [source_file: expected2]
                    STRING callBaz 1 [source_file: expected2]
                CALL 1 [free_call: 1] [source_file: expected2]
                    NAME JSCompiler_unstubMethod 1 [source_file: expected2]
                    NUMBER 0.0 1 [source_file: expected2]
                    FUNCTION  1 [source_file: expected2]
                        NAME  1 [source_file: expected2]
                        PARAM_LIST 1 [source_file: expected2]
                        BLOCK 1 [source_file: expected2]
                            EXPR_RESULT 1 [source_file: expected2]
                                CALL 1 [source_file: expected2]
                                    GETPROP 1 [source_file: expected2]
                                        THIS 1 [source_file: expected2]
                                        STRING baz 1 [source_file: expected2]
        EXPR_RESULT 1 [source_file: expected2]
            CALL 1 [source_file: expected2]
                GETPROP 1 [source_file: expected2]
                    NEW 1 [source_file: expected2]
                        NAME Foo 1 [source_file: expected2]
                    STRING callBaz 1 [source_file: expected2]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: i0] [input_id: InputId: i0]
        VAR 1 [source_file:  [synthetic:1] ]
            NAME JSCompiler_stubMap 1 [source_file:  [synthetic:1] ]
                ARRAYLIT 1 [source_file:  [synthetic:1] ]
        FUNCTION JSCompiler_stubMethod 1 [source_file:  [synthetic:1] ]
            NAME JSCompiler_stubMethod 1 [source_file:  [synthetic:1] ]
            PARAM_LIST 1 [source_file:  [synthetic:1] ]
                NAME JSCompiler_stubMethod_id 1 [source_file:  [synthetic:1] ]
            BLOCK 1 [source_file:  [synthetic:1] ]
                RETURN 1 [source_file:  [synthetic:1] ]
                    FUNCTION  1 [source_file:  [synthetic:1] ]
                        NAME  1 [source_file:  [synthetic:1] ]
                        PARAM_LIST 1 [source_file:  [synthetic:1] ]
                        BLOCK 1 [source_file:  [synthetic:1] ]
                            RETURN 1 [source_file:  [synthetic:1] ]
                                CALL 1 [source_file:  [synthetic:1] ]
                                    GETPROP 1 [source_file:  [synthetic:1] ]
                                        GETELEM 1 [source_file:  [synthetic:1] ]
                                            NAME JSCompiler_stubMap 1 [source_file:  [synthetic:1] ]
                                            NAME JSCompiler_stubMethod_id 1 [source_file:  [synthetic:1] ]
                                        STRING apply 1 [source_file:  [synthetic:1] ]
                                    THIS 1 [source_file:  [synthetic:1] ]
                                    NAME arguments 1 [source_file:  [synthetic:1] ]
        FUNCTION JSCompiler_unstubMethod 1 [source_file:  [synthetic:1] ]
            NAME JSCompiler_unstubMethod 1 [source_file:  [synthetic:1] ]
            PARAM_LIST 1 [source_file:  [synthetic:1] ]
                NAME JSCompiler_unstubMethod_id 1 [source_file:  [synthetic:1] ]
                NAME JSCompiler_unstubMethod_body 1 [source_file:  [synthetic:1] ]
            BLOCK 1 [source_file:  [synthetic:1] ]
                RETURN 1 [source_file:  [synthetic:1] ]
                    ASSIGN 1 [source_file:  [synthetic:1] ]
                        GETELEM 1 [source_file:  [synthetic:1] ]
                            NAME JSCompiler_stubMap 1 [source_file:  [synthetic:1] ]
                            NAME JSCompiler_unstubMethod_id 1 [source_file:  [synthetic:1] ]
                        NAME JSCompiler_unstubMethod_body 1 [source_file:  [synthetic:1] ]
        FUNCTION Foo 1 [source_file: i0]
            NAME Foo 1 [source_file: i0]
            PARAM_LIST 1 [source_file: i0]
            BLOCK 1 [source_file: i0]
        EXPR_RESULT 1 [source_file: i0]
            ASSIGN 1 [source_file: i0]
                GETPROP 1 [source_file: i0]
                    GETPROP 1 [source_file: i0]
                        NAME Foo 1 [source_file: i0]
                        STRING prototype 1 [source_file: i0]
                    STRING baz 1 [source_file: i0]
                CALL 1 [free_call: 1] [source_file: i0]
                    NAME JSCompiler_stubMethod 1 [source_file: i0]
                    NUMBER 0.0 1 [source_file: i0]
    SCRIPT 1 [synthetic: 1] [source_file: i1] [input_id: InputId: i1]
        EXPR_RESULT 1 [source_file: i1]
            ASSIGN 1 [source_file: i1]
                GETPROP 1 [source_file: i1]
                    GETPROP 1 [source_file: i1]
                        NAME Foo 1 [source_file: i1]
                        STRING prototype 1 [source_file: i1]
                    STRING callBaz 1 [source_file: i1]
                CALL 1 [free_call: 1] [source_file: i1]
                    NAME JSCompiler_stubMethod 1 [source_file: i1]
                    NUMBER 1.0 1 [source_file: i1]
    SCRIPT 1 [synthetic: 1] [source_file: i2] [input_id: InputId: i2]
        EXPR_RESULT 1 [source_file: i1]
            ASSIGN 1 [source_file: i1]
                GETPROP 1 [source_file: i1]
                    GETPROP 1 [source_file: i1]
                        NAME Foo 1 [source_file: i1]
                        STRING prototype 1 [source_file: i1]
                    STRING callBaz 1 [source_file: i1]
                CALL 1 [free_call: 1] [source_file: i1]
                    NAME JSCompiler_unstubMethod 1 [source_file: i1]
                    NUMBER 1.0 1 [source_file: i1]
                    FUNCTION  1 [source_file: i1]
                        NAME  1 [source_file: i1]
                        PARAM_LIST 1 [source_file: i1]
                        BLOCK 1 [source_file: i1]
                            EXPR_RESULT 1 [source_file: i1]
                                CALL 1 [source_file: i1]
                                    GETPROP 1 [source_file: i1]
                                        THIS 1 [source_file: i1]
                                        STRING baz 1 [source_file: i1]
        EXPR_RESULT 1 [source_file: i0]
            ASSIGN 1 [source_file: i0]
                GETPROP 1 [source_file: i0]
                    GETPROP 1 [source_file: i0]
                        NAME Foo 1 [source_file: i0]
                        STRING prototype 1 [source_file: i0]
                    STRING baz 1 [source_file: i0]
                CALL 1 [free_call: 1] [source_file: i0]
                    NAME JSCompiler_unstubMethod 1 [source_file: i0]
                    NUMBER 0.0 1 [source_file: i0]
                    FUNCTION  1 [source_file: i0]
                        NAME  1 [source_file: i0]
                        PARAM_LIST 1 [source_file: i0]
                        BLOCK 1 [source_file: i0]
        EXPR_RESULT 1 [source_file: i2]
            CALL 1 [source_file: i2]
                GETPROP 1 [source_file: i2]
                    NEW 1 [source_file: i2]
                        NAME Foo 1 [source_file: i2]
                    STRING callBaz 1 [source_file: i2]


Subtree1: NUMBER 1.0 1 [source_file: expected0]


Subtree2: NUMBER 0.0 1 [source_file: i0]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:928)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:736)

junit.framework.AssertionFailedError: 
Expected: var JSCompiler_stubMap=[];function JSCompiler_stubMethod(JSCompiler_stubMethod_id){return function(){return JSCompiler_stubMap[JSCompiler_stubMethod_id].apply(this,arguments)}}function JSCompiler_unstubMethod(JSCompiler_unstubMethod_id,JSCompiler_unstubMethod_body){return JSCompiler_stubMap[JSCompiler_unstubMethod_id]=JSCompiler_unstubMethod_body}function Foo(){}Foo.prototype.b1=JSCompiler_stubMethod(0);Foo.prototype.b1=JSCompiler_unstubMethod(0,function(){Foo.prototype.b2=JSCompiler_stubMethod(1)});
var y=new Foo;y.b1();Foo.prototype.b2=JSCompiler_unstubMethod(1,function(){var x=1;Foo.prototype.b3=function(){x}});y=new Foo;z.b2();y=new Foo;z.b3()
Result: var JSCompiler_stubMap=[];function JSCompiler_stubMethod(JSCompiler_stubMethod_id){return function(){return JSCompiler_stubMap[JSCompiler_stubMethod_id].apply(this,arguments)}}function JSCompiler_unstubMethod(JSCompiler_unstubMethod_id,JSCompiler_unstubMethod_body){return JSCompiler_stubMap[JSCompiler_unstubMethod_id]=JSCompiler_unstubMethod_body}function Foo(){}Foo.prototype.b1=JSCompiler_stubMethod(1);Foo.prototype.b1=JSCompiler_unstubMethod(1,function(){Foo.prototype.b2=JSCompiler_stubMethod(0)});
var y=new Foo;y.b1();Foo.prototype.b2=JSCompiler_unstubMethod(0,function(){var x=1;Foo.prototype.b3=function(){x}});y=new Foo;z.b2();y=new Foo;z.b3()
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        VAR 1 [source_file: expected0]
            NAME JSCompiler_stubMap 1 [source_file: expected0]
                ARRAYLIT 1 [source_file: expected0]
        FUNCTION JSCompiler_stubMethod 1 [source_file: expected0]
            NAME JSCompiler_stubMethod 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
                NAME JSCompiler_stubMethod_id 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                RETURN 1 [source_file: expected0]
                    FUNCTION  1 [source_file: expected0]
                        NAME  1 [source_file: expected0]
                        PARAM_LIST 1 [source_file: expected0]
                        BLOCK 1 [source_file: expected0]
                            RETURN 1 [source_file: expected0]
                                CALL 1 [source_file: expected0]
                                    GETPROP 1 [source_file: expected0]
                                        GETELEM 1 [source_file: expected0]
                                            NAME JSCompiler_stubMap 1 [source_file: expected0]
                                            NAME JSCompiler_stubMethod_id 1 [source_file: expected0]
                                        STRING apply 1 [source_file: expected0]
                                    THIS 1 [source_file: expected0]
                                    NAME arguments 1 [source_file: expected0]
        FUNCTION JSCompiler_unstubMethod 1 [source_file: expected0]
            NAME JSCompiler_unstubMethod 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
                NAME JSCompiler_unstubMethod_id 1 [source_file: expected0]
                NAME JSCompiler_unstubMethod_body 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                RETURN 1 [source_file: expected0]
                    ASSIGN 1 [source_file: expected0]
                        GETELEM 1 [source_file: expected0]
                            NAME JSCompiler_stubMap 1 [source_file: expected0]
                            NAME JSCompiler_unstubMethod_id 1 [source_file: expected0]
                        NAME JSCompiler_unstubMethod_body 1 [source_file: expected0]
        FUNCTION Foo 1 [source_file: expected0]
            NAME Foo 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            ASSIGN 1 [source_file: expected0]
                GETPROP 1 [source_file: expected0]
                    GETPROP 1 [source_file: expected0]
                        NAME Foo 1 [source_file: expected0]
                        STRING prototype 1 [source_file: expected0]
                    STRING b1 1 [source_file: expected0]
                CALL 1 [free_call: 1] [source_file: expected0]
                    NAME JSCompiler_stubMethod 1 [source_file: expected0]
                    NUMBER 0.0 1 [source_file: expected0]
    SCRIPT 1 [synthetic: 1] [source_file: expected1] [input_id: InputId: expected1]
        EXPR_RESULT 1 [source_file: expected1]
            ASSIGN 1 [source_file: expected1]
                GETPROP 1 [source_file: expected1]
                    GETPROP 1 [source_file: expected1]
                        NAME Foo 1 [source_file: expected1]
                        STRING prototype 1 [source_file: expected1]
                    STRING b1 1 [source_file: expected1]
                CALL 1 [free_call: 1] [source_file: expected1]
                    NAME JSCompiler_unstubMethod 1 [source_file: expected1]
                    NUMBER 0.0 1 [source_file: expected1]
                    FUNCTION  1 [source_file: expected1]
                        NAME  1 [source_file: expected1]
                        PARAM_LIST 1 [source_file: expected1]
                        BLOCK 1 [source_file: expected1]
                            EXPR_RESULT 1 [source_file: expected1]
                                ASSIGN 1 [source_file: expected1]
                                    GETPROP 1 [source_file: expected1]
                                        GETPROP 1 [source_file: expected1]
                                            NAME Foo 1 [source_file: expected1]
                                            STRING prototype 1 [source_file: expected1]
                                        STRING b2 1 [source_file: expected1]
                                    CALL 1 [free_call: 1] [source_file: expected1]
                                        NAME JSCompiler_stubMethod 1 [source_file: expected1]
                                        NUMBER 1.0 1 [source_file: expected1]
        VAR 1 [source_file: expected1]
            NAME y 1 [source_file: expected1]
                NEW 1 [source_file: expected1]
                    NAME Foo 1 [source_file: expected1]
        EXPR_RESULT 1 [source_file: expected1]
            CALL 1 [source_file: expected1]
                GETPROP 1 [source_file: expected1]
                    NAME y 1 [source_file: expected1]
                    STRING b1 1 [source_file: expected1]
    SCRIPT 1 [synthetic: 1] [source_file: expected2] [input_id: InputId: expected2]
        EXPR_RESULT 1 [source_file: expected2]
            ASSIGN 1 [source_file: expected2]
                GETPROP 1 [source_file: expected2]
                    GETPROP 1 [source_file: expected2]
                        NAME Foo 1 [source_file: expected2]
                        STRING prototype 1 [source_file: expected2]
                    STRING b2 1 [source_file: expected2]
                CALL 1 [free_call: 1] [source_file: expected2]
                    NAME JSCompiler_unstubMethod 1 [source_file: expected2]
                    NUMBER 1.0 1 [source_file: expected2]
                    FUNCTION  1 [source_file: expected2]
                        NAME  1 [source_file: expected2]
                        PARAM_LIST 1 [source_file: expected2]
                        BLOCK 1 [source_file: expected2]
                            VAR 1 [source_file: expected2]
                                NAME x 1 [source_file: expected2]
                                    NUMBER 1.0 1 [source_file: expected2]
                            EXPR_RESULT 1 [source_file: expected2]
                                ASSIGN 1 [source_file: expected2]
                                    GETPROP 1 [source_file: expected2]
                                        GETPROP 1 [source_file: expected2]
                                            NAME Foo 1 [source_file: expected2]
                                            STRING prototype 1 [source_file: expected2]
                                        STRING b3 1 [source_file: expected2]
                                    FUNCTION  1 [source_file: expected2]
                                        NAME  1 [source_file: expected2]
                                        PARAM_LIST 1 [source_file: expected2]
                                        BLOCK 1 [source_file: expected2]
                                            EXPR_RESULT 1 [source_file: expected2]
                                                NAME x 1 [source_file: expected2]
        EXPR_RESULT 1 [source_file: expected2]
            ASSIGN 1 [source_file: expected2]
                NAME y 1 [source_file: expected2]
                NEW 1 [source_file: expected2]
                    NAME Foo 1 [source_file: expected2]
        EXPR_RESULT 1 [source_file: expected2]
            CALL 1 [source_file: expected2]
                GETPROP 1 [source_file: expected2]
                    NAME z 1 [source_file: expected2]
                    STRING b2 1 [source_file: expected2]
    SCRIPT 1 [synthetic: 1] [source_file: expected3] [input_id: InputId: expected3]
        EXPR_RESULT 1 [source_file: expected3]
            ASSIGN 1 [source_file: expected3]
                NAME y 1 [source_file: expected3]
                NEW 1 [source_file: expected3]
                    NAME Foo 1 [source_file: expected3]
        EXPR_RESULT 1 [source_file: expected3]
            CALL 1 [source_file: expected3]
                GETPROP 1 [source_file: expected3]
                    NAME z 1 [source_file: expected3]
                    STRING b3 1 [source_file: expected3]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: i0] [input_id: InputId: i0]
        VAR 1 [source_file:  [synthetic:1] ]
            NAME JSCompiler_stubMap 1 [source_file:  [synthetic:1] ]
                ARRAYLIT 1 [source_file:  [synthetic:1] ]
        FUNCTION JSCompiler_stubMethod 1 [source_file:  [synthetic:1] ]
            NAME JSCompiler_stubMethod 1 [source_file:  [synthetic:1] ]
            PARAM_LIST 1 [source_file:  [synthetic:1] ]
                NAME JSCompiler_stubMethod_id 1 [source_file:  [synthetic:1] ]
            BLOCK 1 [source_file:  [synthetic:1] ]
                RETURN 1 [source_file:  [synthetic:1] ]
                    FUNCTION  1 [source_file:  [synthetic:1] ]
                        NAME  1 [source_file:  [synthetic:1] ]
                        PARAM_LIST 1 [source_file:  [synthetic:1] ]
                        BLOCK 1 [source_file:  [synthetic:1] ]
                            RETURN 1 [source_file:  [synthetic:1] ]
                                CALL 1 [source_file:  [synthetic:1] ]
                                    GETPROP 1 [source_file:  [synthetic:1] ]
                                        GETELEM 1 [source_file:  [synthetic:1] ]
                                            NAME JSCompiler_stubMap 1 [source_file:  [synthetic:1] ]
                                            NAME JSCompiler_stubMethod_id 1 [source_file:  [synthetic:1] ]
                                        STRING apply 1 [source_file:  [synthetic:1] ]
                                    THIS 1 [source_file:  [synthetic:1] ]
                                    NAME arguments 1 [source_file:  [synthetic:1] ]
        FUNCTION JSCompiler_unstubMethod 1 [source_file:  [synthetic:1] ]
            NAME JSCompiler_unstubMethod 1 [source_file:  [synthetic:1] ]
            PARAM_LIST 1 [source_file:  [synthetic:1] ]
                NAME JSCompiler_unstubMethod_id 1 [source_file:  [synthetic:1] ]
                NAME JSCompiler_unstubMethod_body 1 [source_file:  [synthetic:1] ]
            BLOCK 1 [source_file:  [synthetic:1] ]
                RETURN 1 [source_file:  [synthetic:1] ]
                    ASSIGN 1 [source_file:  [synthetic:1] ]
                        GETELEM 1 [source_file:  [synthetic:1] ]
                            NAME JSCompiler_stubMap 1 [source_file:  [synthetic:1] ]
                            NAME JSCompiler_unstubMethod_id 1 [source_file:  [synthetic:1] ]
                        NAME JSCompiler_unstubMethod_body 1 [source_file:  [synthetic:1] ]
        FUNCTION Foo 1 [source_file: i0]
            NAME Foo 1 [source_file: i0]
            PARAM_LIST 1 [source_file: i0]
            BLOCK 1 [source_file: i0]
        EXPR_RESULT 1 [source_file: i0]
            ASSIGN 1 [source_file: i0]
                GETPROP 1 [source_file: i0]
                    GETPROP 1 [source_file: i0]
                        NAME Foo 1 [source_file: i0]
                        STRING prototype 1 [source_file: i0]
                    STRING b1 1 [source_file: i0]
                CALL 1 [free_call: 1] [source_file: i0]
                    NAME JSCompiler_stubMethod 1 [source_file: i0]
                    NUMBER 1.0 1 [source_file: i0]
    SCRIPT 1 [synthetic: 1] [source_file: i1] [input_id: InputId: i1]
        EXPR_RESULT 1 [source_file: i0]
            ASSIGN 1 [source_file: i0]
                GETPROP 1 [source_file: i0]
                    GETPROP 1 [source_file: i0]
                        NAME Foo 1 [source_file: i0]
                        STRING prototype 1 [source_file: i0]
                    STRING b1 1 [source_file: i0]
                CALL 1 [free_call: 1] [source_file: i0]
                    NAME JSCompiler_unstubMethod 1 [source_file: i0]
                    NUMBER 1.0 1 [source_file: i0]
                    FUNCTION  1 [source_file: i0]
                        NAME  1 [source_file: i0]
                        PARAM_LIST 1 [source_file: i0]
                        BLOCK 1 [source_file: i0]
                            EXPR_RESULT 1 [source_file: i0]
                                ASSIGN 1 [source_file: i0]
                                    GETPROP 1 [source_file: i0]
                                        GETPROP 1 [source_file: i0]
                                            NAME Foo 1 [source_file: i0]
                                            STRING prototype 1 [source_file: i0]
                                        STRING b2 1 [source_file: i0]
                                    CALL 1 [free_call: 1] [source_file: i0]
                                        NAME JSCompiler_stubMethod 1 [source_file: i0]
                                        NUMBER 0.0 1 [source_file: i0]
        VAR 1 [source_file: i1]
            NAME y 1 [source_file: i1]
                NEW 1 [source_file: i1]
                    NAME Foo 1 [source_file: i1]
        EXPR_RESULT 1 [source_file: i1]
            CALL 1 [source_file: i1]
                GETPROP 1 [source_file: i1]
                    NAME y 1 [source_file: i1]
                    STRING b1 1 [source_file: i1]
    SCRIPT 1 [synthetic: 1] [source_file: i2] [input_id: InputId: i2]
        EXPR_RESULT 1 [source_file: i0]
            ASSIGN 1 [source_file: i0]
                GETPROP 1 [source_file: i0]
                    GETPROP 1 [source_file: i0]
                        NAME Foo 1 [source_file: i0]
                        STRING prototype 1 [source_file: i0]
                    STRING b2 1 [source_file: i0]
                CALL 1 [free_call: 1] [source_file: i0]
                    NAME JSCompiler_unstubMethod 1 [source_file: i0]
                    NUMBER 0.0 1 [source_file: i0]
                    FUNCTION  1 [source_file: i0]
                        NAME  1 [source_file: i0]
                        PARAM_LIST 1 [source_file: i0]
                        BLOCK 1 [source_file: i0]
                            VAR 1 [source_file: i0]
                                NAME x 1 [source_file: i0]
                                    NUMBER 1.0 1 [source_file: i0]
                            EXPR_RESULT 1 [source_file: i0]
                                ASSIGN 1 [source_file: i0]
                                    GETPROP 1 [source_file: i0]
                                        GETPROP 1 [source_file: i0]
                                            NAME Foo 1 [source_file: i0]
                                            STRING prototype 1 [source_file: i0]
                                        STRING b3 1 [source_file: i0]
                                    FUNCTION  1 [source_file: i0]
                                        NAME  1 [source_file: i0]
                                        PARAM_LIST 1 [source_file: i0]
                                        BLOCK 1 [source_file: i0]
                                            EXPR_RESULT 1 [source_file: i0]
                                                NAME x 1 [source_file: i0]
        EXPR_RESULT 1 [source_file: i2]
            ASSIGN 1 [source_file: i2]
                NAME y 1 [source_file: i2]
                NEW 1 [source_file: i2]
                    NAME Foo 1 [source_file: i2]
        EXPR_RESULT 1 [source_file: i2]
            CALL 1 [source_file: i2]
                GETPROP 1 [source_file: i2]
                    NAME z 1 [source_file: i2]
                    STRING b2 1 [source_file: i2]
    SCRIPT 1 [synthetic: 1] [source_file: i3] [input_id: InputId: i3]
        EXPR_RESULT 1 [source_file: i3]
            ASSIGN 1 [source_file: i3]
                NAME y 1 [source_file: i3]
                NEW 1 [source_file: i3]
                    NAME Foo 1 [source_file: i3]
        EXPR_RESULT 1 [source_file: i3]
            CALL 1 [source_file: i3]
                GETPROP 1 [source_file: i3]
                    NAME z 1 [source_file: i3]
                    STRING b3 1 [source_file: i3]


Subtree1: NUMBER 0.0 1 [source_file: expected0]


Subtree2: NUMBER 1.0 1 [source_file: i0]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:928)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:736)
19:29:46.912 [pool-12-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (14 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testClosureVariableReads3(com.google.javascript.jscomp.CrossModuleMethodMotionTest)
[
Expected: var JSCompiler_stubMap=[];function JSCompiler_stubMethod(JSCompiler_stubMethod_id){return function(){return JSCompiler_stubMap[JSCompiler_stubMethod_id].apply(this,arguments)}}function JSCompiler_unstubMethod(JSCompiler_unstubMethod_id,JSCompiler_unstubMethod_body){return JSCompiler_stubMap[JSCompiler_unstubMethod_id]=JSCompiler_unstubMethod_body}function Foo(){}Foo.prototype.b1=JSCompiler_stubMethod(0);Foo.prototype.b1=JSCompiler_unstubMethod(0,function(){Foo.prototype.b2=JSCompiler_stubMethod(1)});
var y=new Foo;y.b1();Foo.prototype.b2=JSCompiler_unstubMethod(1,function(){var x=1;Foo.prototype.b3=function(){x}});y=new Foo;z.b2();y=new Foo;z.b3()
Result: var JSCompiler_stubMap=[];function JSCompiler_stubMethod(JSCompiler_stubMethod_id){return function(){return JSCompiler_stubMap[JSCompiler_stubMethod_id].apply(this,arguments)}}function JSCompiler_unstubMethod(JSCompiler_unstubMethod_id,JSCompiler_unstubMethod_body){return JSCompiler_stubMap[JSCompiler_unstubMethod_id]=JSCompiler_unstubMethod_body}function Foo(){}Foo.prototype.b1=JSCompiler_stubMethod(1);Foo.prototype.b1=JSCompiler_unstubMethod(1,function(){Foo.prototype.b2=JSCompiler_stubMethod(0)});
var y=new Foo;y.b1();Foo.prototype.b2=JSCompiler_unstubMethod(0,function(){var x=1;Foo.prototype.b3=function(){x}});y=new Foo;z.b2();y=new Foo;z.b3()
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        VAR 1 [source_file: expected0]
            NAME JSCompiler_stubMap 1 [source_file: expected0]
                ARRAYLIT 1 [source_file: expected0]
        FUNCTION JSCompiler_stubMethod 1 [source_file: expected0]
            NAME JSCompiler_stubMethod 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
                NAME JSCompiler_stubMethod_id 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                RETURN 1 [source_file: expected0]
                    FUNCTION  1 [source_file: expected0]
                        NAME  1 [source_file: expected0]
                        PARAM_LIST 1 [source_file: expected0]
                        BLOCK 1 [source_file: expected0]
                            RETURN 1 [source_file: expected0]
                                CALL 1 [source_file: expected0]
                                    GETPROP 1 [source_file: expected0]
                                        GETELEM 1 [source_file: expected0]
                                            NAME JSCompiler_stubMap 1 [source_file: expected0]
                                            NAME JSCompiler_stubMethod_id 1 [source_file: expected0]
                                        STRING apply 1 [source_file: expected0]
                                    THIS 1 [source_file: expected0]
                                    NAME arguments 1 [source_file: expected0]
        FUNCTION JSCompiler_unstubMethod 1 [source_file: expected0]
            NAME JSCompiler_unstubMethod 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
                NAME JSCompiler_unstubMethod_id 1 [source_file: expected0]
                NAME JSCompiler_unstubMethod_body 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                RETURN 1 [source_file: expected0]
                    ASSIGN 1 [source_file: expected0]
                        GETELEM 1 [source_file: expected0]
                            NAME JSCompiler_stubMap 1 [source_file: expected0]
                            NAME JSCompiler_unstubMethod_id 1 [source_file: expected0]
                        NAME JSCompiler_unstubMethod_body 1 [source_file: expected0]
        FUNCTION Foo 1 [source_file: expected0]
            NAME Foo 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            ASSIGN 1 [source_file: expected0]
                GETPROP 1 [source_file: expected0]
                    GETPROP 1 [source_file: expected0]
                        NAME Foo 1 [source_file: expected0]
                        STRING prototype 1 [source_file: expected0]
                    STRING b1 1 [source_file: expected0]
                CALL 1 [free_call: 1] [source_file: expected0]
                    NAME JSCompiler_stubMethod 1 [source_file: expected0]
                    NUMBER 0.0 1 [source_file: expected0]
    SCRIPT 1 [synthetic: 1] [source_file: expected1] [input_id: InputId: expected1]
        EXPR_RESULT 1 [source_file: expected1]
            ASSIGN 1 [source_file: expected1]
                GETPROP 1 [source_file: expected1]
                    GETPROP 1 [source_file: expected1]
                        NAME Foo 1 [source_file: expected1]
                        STRING prototype 1 [source_file: expected1]
                    STRING b1 1 [source_file: expected1]
                CALL 1 [free_call: 1] [source_file: expected1]
                    NAME JSCompiler_unstubMethod 1 [source_file: expected1]
                    NUMBER 0.0 1 [source_file: expected1]
                    FUNCTION  1 [source_file: expected1]
                        NAME  1 [source_file: expected1]
                        PARAM_LIST 1 [source_file: expected1]
                        BLOCK 1 [source_file: expected1]
                            EXPR_RESULT 1 [source_file: expected1]
                                ASSIGN 1 [source_file: expected1]
                                    GETPROP 1 [source_file: expected1]
                                        GETPROP 1 [source_file: expected1]
                                            NAME Foo 1 [source_file: expected1]
                                            STRING prototype 1 [source_file: expected1]
                                        STRING b2 1 [source_file: expected1]
                                    CALL 1 [free_call: 1] [source_file: expected1]
                                        NAME JSCompiler_stubMethod 1 [source_file: expected1]
                                        NUMBER 1.0 1 [source_file: expected1]
        VAR 1 [source_file: expected1]
            NAME y 1 [source_file: expected1]
                NEW 1 [source_file: expected1]
                    NAME Foo 1 [source_file: expected1]
        EXPR_RESULT 1 [source_file: expected1]
            CALL 1 [source_file: expected1]
                GETPROP 1 [source_file: expected1]
                    NAME y 1 [source_file: expected1]
                    STRING b1 1 [source_file: expected1]
    SCRIPT 1 [synthetic: 1] [source_file: expected2] [input_id: InputId: expected2]
        EXPR_RESULT 1 [source_file: expected2]
            ASSIGN 1 [source_file: expected2]
                GETPROP 1 [source_file: expected2]
                    GETPROP 1 [source_file: expected2]
                        NAME Foo 1 [source_file: expected2]
                        STRING prototype 1 [source_file: expected2]
                    STRING b2 1 [source_file: expected2]
                CALL 1 [free_call: 1] [source_file: expected2]
                    NAME JSCompiler_unstubMethod 1 [source_file: expected2]
                    NUMBER 1.0 1 [source_file: expected2]
                    FUNCTION  1 [source_file: expected2]
                        NAME  1 [source_file: expected2]
                        PARAM_LIST 1 [source_file: expected2]
                        BLOCK 1 [source_file: expected2]
                            VAR 1 [source_file: expected2]
                                NAME x 1 [source_file: expected2]
                                    NUMBER 1.0 1 [source_file: expected2]
                            EXPR_RESULT 1 [source_file: expected2]
                                ASSIGN 1 [source_file: expected2]
                                    GETPROP 1 [source_file: expected2]
                                        GETPROP 1 [source_file: expected2]
                                            NAME Foo 1 [source_file: expected2]
                                            STRING prototype 1 [source_file: expected2]
                                        STRING b3 1 [source_file: expected2]
                                    FUNCTION  1 [source_file: expected2]
                                        NAME  1 [source_file: expected2]
                                        PARAM_LIST 1 [source_file: expected2]
                                        BLOCK 1 [source_file: expected2]
                                            EXPR_RESULT 1 [source_file: expected2]
                                                NAME x 1 [source_file: expected2]
        EXPR_RESULT 1 [source_file: expected2]
            ASSIGN 1 [source_file: expected2]
                NAME y 1 [source_file: expected2]
                NEW 1 [source_file: expected2]
                    NAME Foo 1 [source_file: expected2]
        EXPR_RESULT 1 [source_file: expected2]
            CALL 1 [source_file: expected2]
                GETPROP 1 [source_file: expected2]
                    NAME z 1 [source_file: expected2]
                    STRING b2 1 [source_file: expected2]
    SCRIPT 1 [synthetic: 1] [source_file: expected3] [input_id: InputId: expected3]
        EXPR_RESULT 1 [source_file: expected3]
            ASSIGN 1 [source_file: expected3]
                NAME y 1 [source_file: expected3]
                NEW 1 [source_file: expected3]
                    NAME Foo 1 [source_file: expected3]
        EXPR_RESULT 1 [source_file: expected3]
            CALL 1 [source_file: expected3]
                GETPROP 1 [source_file: expected3]
                    NAME z 1 [source_file: expected3]
                    STRING b3 1 [source_file: expected3]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: i0] [input_id: InputId: i0]
        VAR 1 [source_file:  [synthetic:1] ]
            NAME JSCompiler_stubMap 1 [source_file:  [synthetic:1] ]
                ARRAYLIT 1 [source_file:  [synthetic:1] ]
        FUNCTION JSCompiler_stubMethod 1 [source_file:  [synthetic:1] ]
            NAME JSCompiler_stubMethod 1 [source_file:  [synthetic:1] ]
            PARAM_LIST 1 [source_file:  [synthetic:1] ]
                NAME JSCompiler_stubMethod_id 1 [source_file:  [synthetic:1] ]
            BLOCK 1 [source_file:  [synthetic:1] ]
                RETURN 1 [source_file:  [synthetic:1] ]
                    FUNCTION  1 [source_file:  [synthetic:1] ]
                        NAME  1 [source_file:  [synthetic:1] ]
                        PARAM_LIST 1 [source_file:  [synthetic:1] ]
                        BLOCK 1 [source_file:  [synthetic:1] ]
                            RETURN 1 [source_file:  [synthetic:1] ]
                                CALL 1 [source_file:  [synthetic:1] ]
                                    GETPROP 1 [source_file:  [synthetic:1] ]
                                        GETELEM 1 [source_file:  [synthetic:1] ]
                                            NAME JSCompiler_stubMap 1 [source_file:  [synthetic:1] ]
                                            NAME JSCompiler_stubMethod_id 1 [source_file:  [synthetic:1] ]
                                        STRING apply 1 [source_file:  [synthetic:1] ]
                                    THIS 1 [source_file:  [synthetic:1] ]
                                    NAME arguments 1 [source_file:  [synthetic:1] ]
        FUNCTION JSCompiler_unstubMethod 1 [source_file:  [synthetic:1] ]
            NAME JSCompiler_unstubMethod 1 [source_file:  [synthetic:1] ]
            PARAM_LIST 1 [source_file:  [synthetic:1] ]
                NAME JSCompiler_unstubMethod_id 1 [source_file:  [synthetic:1] ]
                NAME JSCompiler_unstubMethod_body 1 [source_file:  [synthetic:1] ]
            BLOCK 1 [source_file:  [synthetic:1] ]
                RETURN 1 [source_file:  [synthetic:1] ]
                    ASSIGN 1 [source_file:  [synthetic:1] ]
                        GETELEM 1 [source_file:  [synthetic:1] ]
                            NAME JSCompiler_stubMap 1 [source_file:  [synthetic:1] ]
                            NAME JSCompiler_unstubMethod_id 1 [source_file:  [synthetic:1] ]
                        NAME JSCompiler_unstubMethod_body 1 [source_file:  [synthetic:1] ]
        FUNCTION Foo 1 [source_file: i0]
            NAME Foo 1 [source_file: i0]
            PARAM_LIST 1 [source_file: i0]
            BLOCK 1 [source_file: i0]
        EXPR_RESULT 1 [source_file: i0]
            ASSIGN 1 [source_file: i0]
                GETPROP 1 [source_file: i0]
                    GETPROP 1 [source_file: i0]
                        NAME Foo 1 [source_file: i0]
                        STRING prototype 1 [source_file: i0]
                    STRING b1 1 [source_file: i0]
                CALL 1 [free_call: 1] [source_file: i0]
                    NAME JSCompiler_stubMethod 1 [source_file: i0]
                    NUMBER 1.0 1 [source_file: i0]
    SCRIPT 1 [synthetic: 1] [source_file: i1] [input_id: InputId: i1]
        EXPR_RESULT 1 [source_file: i0]
            ASSIGN 1 [source_file: i0]
                GETPROP 1 [source_file: i0]
                    GETPROP 1 [source_file: i0]
                        NAME Foo 1 [source_file: i0]
                        STRING prototype 1 [source_file: i0]
                    STRING b1 1 [source_file: i0]
                CALL 1 [free_call: 1] [source_file: i0]
                    NAME JSCompiler_unstubMethod 1 [source_file: i0]
                    NUMBER 1.0 1 [source_file: i0]
                    FUNCTION  1 [source_file: i0]
                        NAME  1 [source_file: i0]
                        PARAM_LIST 1 [source_file: i0]
                        BLOCK 1 [source_file: i0]
                            EXPR_RESULT 1 [source_file: i0]
                                ASSIGN 1 [source_file: i0]
                                    GETPROP 1 [source_file: i0]
                                        GETPROP 1 [source_file: i0]
                                            NAME Foo 1 [source_file: i0]
                                            STRING prototype 1 [source_file: i0]
                                        STRING b2 1 [source_file: i0]
                                    CALL 1 [free_call: 1] [source_file: i0]
                                        NAME JSCompiler_stubMethod 1 [source_file: i0]
                                        NUMBER 0.0 1 [source_file: i0]
        VAR 1 [source_file: i1]
            NAME y 1 [source_file: i1]
                NEW 1 [source_file: i1]
                    NAME Foo 1 [source_file: i1]
        EXPR_RESULT 1 [source_file: i1]
            CALL 1 [source_file: i1]
                GETPROP 1 [source_file: i1]
                    NAME y 1 [source_file: i1]
                    STRING b1 1 [source_file: i1]
    SCRIPT 1 [synthetic: 1] [source_file: i2] [input_id: InputId: i2]
        EXPR_RESULT 1 [source_file: i0]
            ASSIGN 1 [source_file: i0]
                GETPROP 1 [source_file: i0]
                    GETPROP 1 [source_file: i0]
                        NAME Foo 1 [source_file: i0]
                        STRING prototype 1 [source_file: i0]
                    STRING b2 1 [source_file: i0]
                CALL 1 [free_call: 1] [source_file: i0]
                    NAME JSCompiler_unstubMethod 1 [source_file: i0]
                    NUMBER 0.0 1 [source_file: i0]
                    FUNCTION  1 [source_file: i0]
                        NAME  1 [source_file: i0]
                        PARAM_LIST 1 [source_file: i0]
                        BLOCK 1 [source_file: i0]
                            VAR 1 [source_file: i0]
                                NAME x 1 [source_file: i0]
                                    NUMBER 1.0 1 [source_file: i0]
                            EXPR_RESULT 1 [source_file: i0]
                                ASSIGN 1 [source_file: i0]
                                    GETPROP 1 [source_file: i0]
                                        GETPROP 1 [source_file: i0]
                                            NAME Foo 1 [source_file: i0]
                                            STRING prototype 1 [source_file: i0]
                                        STRING b3 1 [source_file: i0]
                                    FUNCTION  1 [source_file: i0]
                                        NAME  1 [source_file: i0]
                                        PARAM_LIST 1 [source_file: i0]
                                        BLOCK 1 [source_file: i0]
                                            EXPR_RESULT 1 [source_file: i0]
                                                NAME x 1 [source_file: i0]
        EXPR_RESULT 1 [source_file: i2]
            ASSIGN 1 [source_file: i2]
                NAME y 1 [source_file: i2]
                NEW 1 [source_file: i2]
                    NAME Foo 1 [source_file: i2]
        EXPR_RESULT 1 [source_file: i2]
            CALL 1 [source_file: i2]
                GETPROP 1 [source_file: i2]
                    NAME z 1 [source_file: i2]
                    STRING b2 1 [source_file: i2]
    SCRIPT 1 [synthetic: 1] [source_file: i3] [input_id: InputId: i3]
        EXPR_RESULT 1 [source_file: i3]
            ASSIGN 1 [source_file: i3]
                NAME y 1 [source_file: i3]
                NEW 1 [source_file: i3]
                    NAME Foo 1 [source_file: i3]
        EXPR_RESULT 1 [source_file: i3]
            CALL 1 [source_file: i3]
                GETPROP 1 [source_file: i3]
                    NAME z 1 [source_file: i3]
                    STRING b3 1 [source_file: i3]


Subtree1: NUMBER 0.0 1 [source_file: expected0]


Subtree2: NUMBER 1.0 1 [source_file: i0]
]
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_stubMap=[];function JSCompiler_stubMethod(JSCompiler_stubMethod_id){return function(){return JSCompiler_stubMap[JSCompiler_stubMethod_id].apply(this,arguments)}}function JSCompiler_unstubMethod(JSCompiler_unstubMethod_id,JSCompiler_unstubMethod_body){return JSCompiler_stubMap[JSCompiler_unstubMethod_id]=JSCompiler_unstubMethod_body}function Foo(){}Foo.prototype.b1=JSCompiler_stubMethod(0);Foo.prototype.b1=JSCompiler_unstubMethod(0,function(){Foo.prototype.b2=JSCompiler_stubMethod(1)});
var y=new Foo;y.b1();Foo.prototype.b2=JSCompiler_unstubMethod(1,function(){var x=1;Foo.prototype.b3=function(){x}});y=new Foo;z.b2();y=new Foo;z.b3()
Result: var JSCompiler_stubMap=[];function JSCompiler_stubMethod(JSCompiler_stubMethod_id){return function(){return JSCompiler_stubMap[JSCompiler_stubMethod_id].apply(this,arguments)}}function JSCompiler_unstubMethod(JSCompiler_unstubMethod_id,JSCompiler_unstubMethod_body){return JSCompiler_stubMap[JSCompiler_unstubMethod_id]=JSCompiler_unstubMethod_body}function Foo(){}Foo.prototype.b1=JSCompiler_stubMethod(1);Foo.prototype.b1=JSCompiler_unstubMethod(1,function(){Foo.prototype.b2=JSCompiler_stubMethod(0)});
var y=new Foo;y.b1();Foo.prototype.b2=JSCompiler_unstubMethod(0,function(){var x=1;Foo.prototype.b3=function(){x}});y=new Foo;z.b2();y=new Foo;z.b3()
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        VAR 1 [source_file: expected0]
            NAME JSCompiler_stubMap 1 [source_file: expected0]
                ARRAYLIT 1 [source_file: expected0]
        FUNCTION JSCompiler_stubMethod 1 [source_file: expected0]
            NAME JSCompiler_stubMethod 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
                NAME JSCompiler_stubMethod_id 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                RETURN 1 [source_file: expected0]
                    FUNCTION  1 [source_file: expected0]
                        NAME  1 [source_file: expected0]
                        PARAM_LIST 1 [source_file: expected0]
                        BLOCK 1 [source_file: expected0]
                            RETURN 1 [source_file: expected0]
                                CALL 1 [source_file: expected0]
                                    GETPROP 1 [source_file: expected0]
                                        GETELEM 1 [source_file: expected0]
                                            NAME JSCompiler_stubMap 1 [source_file: expected0]
                                            NAME JSCompiler_stubMethod_id 1 [source_file: expected0]
                                        STRING apply 1 [source_file: expected0]
                                    THIS 1 [source_file: expected0]
                                    NAME arguments 1 [source_file: expected0]
        FUNCTION JSCompiler_unstubMethod 1 [source_file: expected0]
            NAME JSCompiler_unstubMethod 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
                NAME JSCompiler_unstubMethod_id 1 [source_file: expected0]
                NAME JSCompiler_unstubMethod_body 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                RETURN 1 [source_file: expected0]
                    ASSIGN 1 [source_file: expected0]
                        GETELEM 1 [source_file: expected0]
                            NAME JSCompiler_stubMap 1 [source_file: expected0]
                            NAME JSCompiler_unstubMethod_id 1 [source_file: expected0]
                        NAME JSCompiler_unstubMethod_body 1 [source_file: expected0]
        FUNCTION Foo 1 [source_file: expected0]
            NAME Foo 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            ASSIGN 1 [source_file: expected0]
                GETPROP 1 [source_file: expected0]
                    GETPROP 1 [source_file: expected0]
                        NAME Foo 1 [source_file: expected0]
                        STRING prototype 1 [source_file: expected0]
                    STRING b1 1 [source_file: expected0]
                CALL 1 [free_call: 1] [source_file: expected0]
                    NAME JSCompiler_stubMethod 1 [source_file: expected0]
                    NUMBER 0.0 1 [source_file: expected0]
    SCRIPT 1 [synthetic: 1] [source_file: expected1] [input_id: InputId: expected1]
        EXPR_RESULT 1 [source_file: expected1]
            ASSIGN 1 [source_file: expected1]
                GETPROP 1 [source_file: expected1]
                    GETPROP 1 [source_file: expected1]
                        NAME Foo 1 [source_file: expected1]
                        STRING prototype 1 [source_file: expected1]
                    STRING b1 1 [source_file: expected1]
                CALL 1 [free_call: 1] [source_file: expected1]
                    NAME JSCompiler_unstubMethod 1 [source_file: expected1]
                    NUMBER 0.0 1 [source_file: expected1]
                    FUNCTION  1 [source_file: expected1]
                        NAME  1 [source_file: expected1]
                        PARAM_LIST 1 [source_file: expected1]
                        BLOCK 1 [source_file: expected1]
                            EXPR_RESULT 1 [source_file: expected1]
                                ASSIGN 1 [source_file: expected1]
                                    GETPROP 1 [source_file: expected1]
                                        GETPROP 1 [source_file: expected1]
                                            NAME Foo 1 [source_file: expected1]
                                            STRING prototype 1 [source_file: expected1]
                                        STRING b2 1 [source_file: expected1]
                                    CALL 1 [free_call: 1] [source_file: expected1]
                                        NAME JSCompiler_stubMethod 1 [source_file: expected1]
                                        NUMBER 1.0 1 [source_file: expected1]
        VAR 1 [source_file: expected1]
            NAME y 1 [source_file: expected1]
                NEW 1 [source_file: expected1]
                    NAME Foo 1 [source_file: expected1]
        EXPR_RESULT 1 [source_file: expected1]
            CALL 1 [source_file: expected1]
                GETPROP 1 [source_file: expected1]
                    NAME y 1 [source_file: expected1]
                    STRING b1 1 [source_file: expected1]
    SCRIPT 1 [synthetic: 1] [source_file: expected2] [input_id: InputId: expected2]
        EXPR_RESULT 1 [source_file: expected2]
            ASSIGN 1 [source_file: expected2]
                GETPROP 1 [source_file: expected2]
                    GETPROP 1 [source_file: expected2]
                        NAME Foo 1 [source_file: expected2]
                        STRING prototype 1 [source_file: expected2]
                    STRING b2 1 [source_file: expected2]
                CALL 1 [free_call: 1] [source_file: expected2]
                    NAME JSCompiler_unstubMethod 1 [source_file: expected2]
                    NUMBER 1.0 1 [source_file: expected2]
                    FUNCTION  1 [source_file: expected2]
                        NAME  1 [source_file: expected2]
                        PARAM_LIST 1 [source_file: expected2]
                        BLOCK 1 [source_file: expected2]
                            VAR 1 [source_file: expected2]
                                NAME x 1 [source_file: expected2]
                                    NUMBER 1.0 1 [source_file: expected2]
                            EXPR_RESULT 1 [source_file: expected2]
                                ASSIGN 1 [source_file: expected2]
                                    GETPROP 1 [source_file: expected2]
                                        GETPROP 1 [source_file: expected2]
                                            NAME Foo 1 [source_file: expected2]
                                            STRING prototype 1 [source_file: expected2]
                                        STRING b3 1 [source_file: expected2]
                                    FUNCTION  1 [source_file: expected2]
                                        NAME  1 [source_file: expected2]
                                        PARAM_LIST 1 [source_file: expected2]
                                        BLOCK 1 [source_file: expected2]
                                            EXPR_RESULT 1 [source_file: expected2]
                                                NAME x 1 [source_file: expected2]
        EXPR_RESULT 1 [source_file: expected2]
            ASSIGN 1 [source_file: expected2]
                NAME y 1 [source_file: expected2]
                NEW 1 [source_file: expected2]
                    NAME Foo 1 [source_file: expected2]
        EXPR_RESULT 1 [source_file: expected2]
            CALL 1 [source_file: expected2]
                GETPROP 1 [source_file: expected2]
                    NAME z 1 [source_file: expected2]
                    STRING b2 1 [source_file: expected2]
    SCRIPT 1 [synthetic: 1] [source_file: expected3] [input_id: InputId: expected3]
        EXPR_RESULT 1 [source_file: expected3]
            ASSIGN 1 [source_file: expected3]
                NAME y 1 [source_file: expected3]
                NEW 1 [source_file: expected3]
                    NAME Foo 1 [source_file: expected3]
        EXPR_RESULT 1 [source_file: expected3]
            CALL 1 [source_file: expected3]
                GETPROP 1 [source_file: expected3]
                    NAME z 1 [source_file: expected3]
                    STRING b3 1 [source_file: expected3]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: i0] [input_id: InputId: i0]
        VAR 1 [source_file:  [synthetic:1] ]
            NAME JSCompiler_stubMap 1 [source_file:  [synthetic:1] ]
                ARRAYLIT 1 [source_file:  [synthetic:1] ]
        FUNCTION JSCompiler_stubMethod 1 [source_file:  [synthetic:1] ]
            NAME JSCompiler_stubMethod 1 [source_file:  [synthetic:1] ]
            PARAM_LIST 1 [source_file:  [synthetic:1] ]
                NAME JSCompiler_stubMethod_id 1 [source_file:  [synthetic:1] ]
            BLOCK 1 [source_file:  [synthetic:1] ]
                RETURN 1 [source_file:  [synthetic:1] ]
                    FUNCTION  1 [source_file:  [synthetic:1] ]
                        NAME  1 [source_file:  [synthetic:1] ]
                        PARAM_LIST 1 [source_file:  [synthetic:1] ]
                        BLOCK 1 [source_file:  [synthetic:1] ]
                            RETURN 1 [source_file:  [synthetic:1] ]
                                CALL 1 [source_file:  [synthetic:1] ]
                                    GETPROP 1 [source_file:  [synthetic:1] ]
                                        GETELEM 1 [source_file:  [synthetic:1] ]
                                            NAME JSCompiler_stubMap 1 [source_file:  [synthetic:1] ]
                                            NAME JSCompiler_stubMethod_id 1 [source_file:  [synthetic:1] ]
                                        STRING apply 1 [source_file:  [synthetic:1] ]
                                    THIS 1 [source_file:  [synthetic:1] ]
                                    NAME arguments 1 [source_file:  [synthetic:1] ]
        FUNCTION JSCompiler_unstubMethod 1 [source_file:  [synthetic:1] ]
            NAME JSCompiler_unstubMethod 1 [source_file:  [synthetic:1] ]
            PARAM_LIST 1 [source_file:  [synthetic:1] ]
                NAME JSCompiler_unstubMethod_id 1 [source_file:  [synthetic:1] ]
                NAME JSCompiler_unstubMethod_body 1 [source_file:  [synthetic:1] ]
            BLOCK 1 [source_file:  [synthetic:1] ]
                RETURN 1 [source_file:  [synthetic:1] ]
                    ASSIGN 1 [source_file:  [synthetic:1] ]
                        GETELEM 1 [source_file:  [synthetic:1] ]
                            NAME JSCompiler_stubMap 1 [source_file:  [synthetic:1] ]
                            NAME JSCompiler_unstubMethod_id 1 [source_file:  [synthetic:1] ]
                        NAME JSCompiler_unstubMethod_body 1 [source_file:  [synthetic:1] ]
        FUNCTION Foo 1 [source_file: i0]
            NAME Foo 1 [source_file: i0]
            PARAM_LIST 1 [source_file: i0]
            BLOCK 1 [source_file: i0]
        EXPR_RESULT 1 [source_file: i0]
            ASSIGN 1 [source_file: i0]
                GETPROP 1 [source_file: i0]
                    GETPROP 1 [source_file: i0]
                        NAME Foo 1 [source_file: i0]
                        STRING prototype 1 [source_file: i0]
                    STRING b1 1 [source_file: i0]
                CALL 1 [free_call: 1] [source_file: i0]
                    NAME JSCompiler_stubMethod 1 [source_file: i0]
                    NUMBER 1.0 1 [source_file: i0]
    SCRIPT 1 [synthetic: 1] [source_file: i1] [input_id: InputId: i1]
        EXPR_RESULT 1 [source_file: i0]
            ASSIGN 1 [source_file: i0]
                GETPROP 1 [source_file: i0]
                    GETPROP 1 [source_file: i0]
                        NAME Foo 1 [source_file: i0]
                        STRING prototype 1 [source_file: i0]
                    STRING b1 1 [source_file: i0]
                CALL 1 [free_call: 1] [source_file: i0]
                    NAME JSCompiler_unstubMethod 1 [source_file: i0]
                    NUMBER 1.0 1 [source_file: i0]
                    FUNCTION  1 [source_file: i0]
                        NAME  1 [source_file: i0]
                        PARAM_LIST 1 [source_file: i0]
                        BLOCK 1 [source_file: i0]
                            EXPR_RESULT 1 [source_file: i0]
                                ASSIGN 1 [source_file: i0]
                                    GETPROP 1 [source_file: i0]
                                        GETPROP 1 [source_file: i0]
                                            NAME Foo 1 [source_file: i0]
                                            STRING prototype 1 [source_file: i0]
                                        STRING b2 1 [source_file: i0]
                                    CALL 1 [free_call: 1] [source_file: i0]
                                        NAME JSCompiler_stubMethod 1 [source_file: i0]
                                        NUMBER 0.0 1 [source_file: i0]
        VAR 1 [source_file: i1]
            NAME y 1 [source_file: i1]
                NEW 1 [source_file: i1]
                    NAME Foo 1 [source_file: i1]
        EXPR_RESULT 1 [source_file: i1]
            CALL 1 [source_file: i1]
                GETPROP 1 [source_file: i1]
                    NAME y 1 [source_file: i1]
                    STRING b1 1 [source_file: i1]
    SCRIPT 1 [synthetic: 1] [source_file: i2] [input_id: InputId: i2]
        EXPR_RESULT 1 [source_file: i0]
            ASSIGN 1 [source_file: i0]
                GETPROP 1 [source_file: i0]
                    GETPROP 1 [source_file: i0]
                        NAME Foo 1 [source_file: i0]
                        STRING prototype 1 [source_file: i0]
                    STRING b2 1 [source_file: i0]
                CALL 1 [free_call: 1] [source_file: i0]
                    NAME JSCompiler_unstubMethod 1 [source_file: i0]
                    NUMBER 0.0 1 [source_file: i0]
                    FUNCTION  1 [source_file: i0]
                        NAME  1 [source_file: i0]
                        PARAM_LIST 1 [source_file: i0]
                        BLOCK 1 [source_file: i0]
                            VAR 1 [source_file: i0]
                                NAME x 1 [source_file: i0]
                                    NUMBER 1.0 1 [source_file: i0]
                            EXPR_RESULT 1 [source_file: i0]
                                ASSIGN 1 [source_file: i0]
                                    GETPROP 1 [source_file: i0]
                                        GETPROP 1 [source_file: i0]
                                            NAME Foo 1 [source_file: i0]
                                            STRING prototype 1 [source_file: i0]
                                        STRING b3 1 [source_file: i0]
                                    FUNCTION  1 [source_file: i0]
                                        NAME  1 [source_file: i0]
                                        PARAM_LIST 1 [source_file: i0]
                                        BLOCK 1 [source_file: i0]
                                            EXPR_RESULT 1 [source_file: i0]
                                                NAME x 1 [source_file: i0]
        EXPR_RESULT 1 [source_file: i2]
            ASSIGN 1 [source_file: i2]
                NAME y 1 [source_file: i2]
                NEW 1 [source_file: i2]
                    NAME Foo 1 [source_file: i2]
        EXPR_RESULT 1 [source_file: i2]
            CALL 1 [source_file: i2]
                GETPROP 1 [source_file: i2]
                    NAME z 1 [source_file: i2]
                    STRING b2 1 [source_file: i2]
    SCRIPT 1 [synthetic: 1] [source_file: i3] [input_id: InputId: i3]
        EXPR_RESULT 1 [source_file: i3]
            ASSIGN 1 [source_file: i3]
                NAME y 1 [source_file: i3]
                NEW 1 [source_file: i3]
                    NAME Foo 1 [source_file: i3]
        EXPR_RESULT 1 [source_file: i3]
            CALL 1 [source_file: i3]
                GETPROP 1 [source_file: i3]
                    NAME z 1 [source_file: i3]
                    STRING b3 1 [source_file: i3]


Subtree1: NUMBER 0.0 1 [source_file: expected0]


Subtree2: NUMBER 1.0 1 [source_file: i0]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:928)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:736)

junit.framework.AssertionFailedError: 
Expected: function f(){b:try{throw 9;}finally{switch(x){case 1:break b}}return 1}
Result: function f(){b:try{throw 9;}finally{switch(x){case 1:}}return 1}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION f 1 [source_file: expected0]
            NAME f 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                LABEL 1 [source_file: expected0]
                    LABEL_NAME b 1 [source_file: expected0]
                    TRY 1 [source_file: expected0]
                        BLOCK 1 [source_file: expected0]
                            THROW 1 [source_file: expected0]
                                NUMBER 9.0 1 [source_file: expected0]
                        BLOCK 1 [source_file: expected0]
                        BLOCK 1 [source_file: expected0]
                            SWITCH 1 [source_file: expected0]
                                NAME x 1 [source_file: expected0]
                                CASE 1 [source_file: expected0]
                                    NUMBER 1.0 1 [source_file: expected0]
                                    BLOCK 1 [synthetic: 1] [source_file: expected0]
                                        BREAK 1 [source_file: expected0]
                                            LABEL_NAME b 1 [source_file: expected0]
                RETURN 1 [source_file: expected0]
                    NUMBER 1.0 1 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION f 1 [source_file: testcode]
            NAME f 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                LABEL 1 [source_file: testcode]
                    LABEL_NAME b 1 [source_file: testcode]
                    TRY 1 [source_file: testcode]
                        BLOCK 1 [source_file: testcode]
                            THROW 1 [source_file: testcode]
                                NUMBER 9.0 1 [source_file: testcode]
                        BLOCK 1 [source_file: testcode]
                        BLOCK 1 [source_file: testcode]
                            SWITCH 1 [source_file: testcode]
                                NAME x 1 [source_file: testcode]
                                CASE 1 [source_file: testcode]
                                    NUMBER 1.0 1 [source_file: testcode]
                                    BLOCK 1 [synthetic: 1] [source_file: testcode]
                RETURN 1 [source_file: testcode]
                    NUMBER 1.0 1 [source_file: testcode]


Subtree1: BLOCK 1 [synthetic: 1] [source_file: expected0]
    BREAK 1 [source_file: expected0]
        LABEL_NAME b 1 [source_file: expected0]


Subtree2: BLOCK 1 [synthetic: 1] [source_file: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:928)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:460)
19:29:46.925 [pool-13-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (10 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testDontRemoveBreakInTryFinallySwitch(com.google.javascript.jscomp.UnreachableCodeEliminationTest)
[
Expected: function f(){b:try{throw 9;}finally{switch(x){case 1:break b}}return 1}
Result: function f(){b:try{throw 9;}finally{switch(x){case 1:}}return 1}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION f 1 [source_file: expected0]
            NAME f 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                LABEL 1 [source_file: expected0]
                    LABEL_NAME b 1 [source_file: expected0]
                    TRY 1 [source_file: expected0]
                        BLOCK 1 [source_file: expected0]
                            THROW 1 [source_file: expected0]
                                NUMBER 9.0 1 [source_file: expected0]
                        BLOCK 1 [source_file: expected0]
                        BLOCK 1 [source_file: expected0]
                            SWITCH 1 [source_file: expected0]
                                NAME x 1 [source_file: expected0]
                                CASE 1 [source_file: expected0]
                                    NUMBER 1.0 1 [source_file: expected0]
                                    BLOCK 1 [synthetic: 1] [source_file: expected0]
                                        BREAK 1 [source_file: expected0]
                                            LABEL_NAME b 1 [source_file: expected0]
                RETURN 1 [source_file: expected0]
                    NUMBER 1.0 1 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION f 1 [source_file: testcode]
            NAME f 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                LABEL 1 [source_file: testcode]
                    LABEL_NAME b 1 [source_file: testcode]
                    TRY 1 [source_file: testcode]
                        BLOCK 1 [source_file: testcode]
                            THROW 1 [source_file: testcode]
                                NUMBER 9.0 1 [source_file: testcode]
                        BLOCK 1 [source_file: testcode]
                        BLOCK 1 [source_file: testcode]
                            SWITCH 1 [source_file: testcode]
                                NAME x 1 [source_file: testcode]
                                CASE 1 [source_file: testcode]
                                    NUMBER 1.0 1 [source_file: testcode]
                                    BLOCK 1 [synthetic: 1] [source_file: testcode]
                RETURN 1 [source_file: testcode]
                    NUMBER 1.0 1 [source_file: testcode]


Subtree1: BLOCK 1 [synthetic: 1] [source_file: expected0]
    BREAK 1 [source_file: expected0]
        LABEL_NAME b 1 [source_file: expected0]


Subtree2: BLOCK 1 [synthetic: 1] [source_file: testcode]
]
junit.framework.AssertionFailedError: 
Expected: function f(){b:try{throw 9;}finally{switch(x){case 1:break b}}return 1}
Result: function f(){b:try{throw 9;}finally{switch(x){case 1:}}return 1}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION f 1 [source_file: expected0]
            NAME f 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                LABEL 1 [source_file: expected0]
                    LABEL_NAME b 1 [source_file: expected0]
                    TRY 1 [source_file: expected0]
                        BLOCK 1 [source_file: expected0]
                            THROW 1 [source_file: expected0]
                                NUMBER 9.0 1 [source_file: expected0]
                        BLOCK 1 [source_file: expected0]
                        BLOCK 1 [source_file: expected0]
                            SWITCH 1 [source_file: expected0]
                                NAME x 1 [source_file: expected0]
                                CASE 1 [source_file: expected0]
                                    NUMBER 1.0 1 [source_file: expected0]
                                    BLOCK 1 [synthetic: 1] [source_file: expected0]
                                        BREAK 1 [source_file: expected0]
                                            LABEL_NAME b 1 [source_file: expected0]
                RETURN 1 [source_file: expected0]
                    NUMBER 1.0 1 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION f 1 [source_file: testcode]
            NAME f 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                LABEL 1 [source_file: testcode]
                    LABEL_NAME b 1 [source_file: testcode]
                    TRY 1 [source_file: testcode]
                        BLOCK 1 [source_file: testcode]
                            THROW 1 [source_file: testcode]
                                NUMBER 9.0 1 [source_file: testcode]
                        BLOCK 1 [source_file: testcode]
                        BLOCK 1 [source_file: testcode]
                            SWITCH 1 [source_file: testcode]
                                NAME x 1 [source_file: testcode]
                                CASE 1 [source_file: testcode]
                                    NUMBER 1.0 1 [source_file: testcode]
                                    BLOCK 1 [synthetic: 1] [source_file: testcode]
                RETURN 1 [source_file: testcode]
                    NUMBER 1.0 1 [source_file: testcode]


Subtree1: BLOCK 1 [synthetic: 1] [source_file: expected0]
    BREAK 1 [source_file: expected0]
        LABEL_NAME b 1 [source_file: expected0]


Subtree2: BLOCK 1 [synthetic: 1] [source_file: testcode]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:928)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:460)

junit.framework.AssertionFailedError: 
Expected: f=function(){var action;a:do{var proto=null;try{proto=new Proto}finally{action=proto;continue a}}while(false);alert(action)}
Result: f=function(){var action;a:do{var proto=null;try{proto=new Proto}finally{action=proto}}while(false);alert(action)}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            ASSIGN 1 [source_file: expected0]
                NAME f 1 [source_file: expected0]
                FUNCTION  1 [source_file: expected0]
                    NAME  1 [source_file: expected0]
                    PARAM_LIST 1 [source_file: expected0]
                    BLOCK 1 [source_file: expected0]
                        VAR 2 [source_file: expected0]
                            NAME action 2 [source_file: expected0]
                        LABEL 3 [source_file: expected0]
                            LABEL_NAME a 3 [source_file: expected0]
                            DO 3 [source_file: expected0]
                                BLOCK 3 [source_file: expected0]
                                    VAR 4 [source_file: expected0]
                                        NAME proto 4 [source_file: expected0]
                                            NULL 4 [source_file: expected0]
                                    TRY 5 [source_file: expected0]
                                        BLOCK 5 [source_file: expected0]
                                            EXPR_RESULT 6 [source_file: expected0]
                                                ASSIGN 6 [source_file: expected0]
                                                    NAME proto 6 [source_file: expected0]
                                                    NEW 6 [source_file: expected0]
                                                        NAME Proto 6 [source_file: expected0]
                                        BLOCK 7 [source_file: expected0]
                                        BLOCK 7 [source_file: expected0]
                                            EXPR_RESULT 8 [source_file: expected0]
                                                ASSIGN 8 [source_file: expected0]
                                                    NAME action 8 [source_file: expected0]
                                                    NAME proto 8 [source_file: expected0]
                                            CONTINUE 9 [source_file: expected0]
                                                LABEL_NAME a 9 [source_file: expected0]
                                FALSE 11 [source_file: expected0]
                        EXPR_RESULT 12 [source_file: expected0]
                            CALL 12 [free_call: 1] [source_file: expected0]
                                NAME alert 12 [source_file: expected0]
                                NAME action 12 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        EXPR_RESULT 1 [source_file: testcode]
            ASSIGN 1 [source_file: testcode]
                NAME f 1 [source_file: testcode]
                FUNCTION  1 [source_file: testcode]
                    NAME  1 [source_file: testcode]
                    PARAM_LIST 1 [source_file: testcode]
                    BLOCK 1 [source_file: testcode]
                        VAR 2 [source_file: testcode]
                            NAME action 2 [source_file: testcode]
                        LABEL 3 [source_file: testcode]
                            LABEL_NAME a 3 [source_file: testcode]
                            DO 3 [source_file: testcode]
                                BLOCK 3 [source_file: testcode]
                                    VAR 4 [source_file: testcode]
                                        NAME proto 4 [source_file: testcode]
                                            NULL 4 [source_file: testcode]
                                    TRY 5 [source_file: testcode]
                                        BLOCK 5 [source_file: testcode]
                                            EXPR_RESULT 6 [source_file: testcode]
                                                ASSIGN 6 [source_file: testcode]
                                                    NAME proto 6 [source_file: testcode]
                                                    NEW 6 [source_file: testcode]
                                                        NAME Proto 6 [source_file: testcode]
                                        BLOCK 7 [source_file: testcode]
                                        BLOCK 7 [source_file: testcode]
                                            EXPR_RESULT 8 [source_file: testcode]
                                                ASSIGN 8 [source_file: testcode]
                                                    NAME action 8 [source_file: testcode]
                                                    NAME proto 8 [source_file: testcode]
                                FALSE 11 [source_file: testcode]
                        EXPR_RESULT 12 [source_file: testcode]
                            CALL 12 [free_call: 1] [source_file: testcode]
                                NAME alert 12 [source_file: testcode]
                                NAME action 12 [source_file: testcode]


Subtree1: BLOCK 7 [source_file: expected0]
    EXPR_RESULT 8 [source_file: expected0]
        ASSIGN 8 [source_file: expected0]
            NAME action 8 [source_file: expected0]
            NAME proto 8 [source_file: expected0]
    CONTINUE 9 [source_file: expected0]
        LABEL_NAME a 9 [source_file: expected0]


Subtree2: BLOCK 7 [source_file: testcode]
    EXPR_RESULT 8 [source_file: testcode]
        ASSIGN 8 [source_file: testcode]
            NAME action 8 [source_file: testcode]
            NAME proto 8 [source_file: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:928)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:460)
19:29:46.938 [pool-14-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (10 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue4177428_continue(com.google.javascript.jscomp.UnreachableCodeEliminationTest)
[
Expected: f=function(){var action;a:do{var proto=null;try{proto=new Proto}finally{action=proto;continue a}}while(false);alert(action)}
Result: f=function(){var action;a:do{var proto=null;try{proto=new Proto}finally{action=proto}}while(false);alert(action)}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            ASSIGN 1 [source_file: expected0]
                NAME f 1 [source_file: expected0]
                FUNCTION  1 [source_file: expected0]
                    NAME  1 [source_file: expected0]
                    PARAM_LIST 1 [source_file: expected0]
                    BLOCK 1 [source_file: expected0]
                        VAR 2 [source_file: expected0]
                            NAME action 2 [source_file: expected0]
                        LABEL 3 [source_file: expected0]
                            LABEL_NAME a 3 [source_file: expected0]
                            DO 3 [source_file: expected0]
                                BLOCK 3 [source_file: expected0]
                                    VAR 4 [source_file: expected0]
                                        NAME proto 4 [source_file: expected0]
                                            NULL 4 [source_file: expected0]
                                    TRY 5 [source_file: expected0]
                                        BLOCK 5 [source_file: expected0]
                                            EXPR_RESULT 6 [source_file: expected0]
                                                ASSIGN 6 [source_file: expected0]
                                                    NAME proto 6 [source_file: expected0]
                                                    NEW 6 [source_file: expected0]
                                                        NAME Proto 6 [source_file: expected0]
                                        BLOCK 7 [source_file: expected0]
                                        BLOCK 7 [source_file: expected0]
                                            EXPR_RESULT 8 [source_file: expected0]
                                                ASSIGN 8 [source_file: expected0]
                                                    NAME action 8 [source_file: expected0]
                                                    NAME proto 8 [source_file: expected0]
                                            CONTINUE 9 [source_file: expected0]
                                                LABEL_NAME a 9 [source_file: expected0]
                                FALSE 11 [source_file: expected0]
                        EXPR_RESULT 12 [source_file: expected0]
                            CALL 12 [free_call: 1] [source_file: expected0]
                                NAME alert 12 [source_file: expected0]
                                NAME action 12 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        EXPR_RESULT 1 [source_file: testcode]
            ASSIGN 1 [source_file: testcode]
                NAME f 1 [source_file: testcode]
                FUNCTION  1 [source_file: testcode]
                    NAME  1 [source_file: testcode]
                    PARAM_LIST 1 [source_file: testcode]
                    BLOCK 1 [source_file: testcode]
                        VAR 2 [source_file: testcode]
                            NAME action 2 [source_file: testcode]
                        LABEL 3 [source_file: testcode]
                            LABEL_NAME a 3 [source_file: testcode]
                            DO 3 [source_file: testcode]
                                BLOCK 3 [source_file: testcode]
                                    VAR 4 [source_file: testcode]
                                        NAME proto 4 [source_file: testcode]
                                            NULL 4 [source_file: testcode]
                                    TRY 5 [source_file: testcode]
                                        BLOCK 5 [source_file: testcode]
                                            EXPR_RESULT 6 [source_file: testcode]
                                                ASSIGN 6 [source_file: testcode]
                                                    NAME proto 6 [source_file: testcode]
                                                    NEW 6 [source_file: testcode]
                                                        NAME Proto 6 [source_file: testcode]
                                        BLOCK 7 [source_file: testcode]
                                        BLOCK 7 [source_file: testcode]
                                            EXPR_RESULT 8 [source_file: testcode]
                                                ASSIGN 8 [source_file: testcode]
                                                    NAME action 8 [source_file: testcode]
                                                    NAME proto 8 [source_file: testcode]
                                FALSE 11 [source_file: testcode]
                        EXPR_RESULT 12 [source_file: testcode]
                            CALL 12 [free_call: 1] [source_file: testcode]
                                NAME alert 12 [source_file: testcode]
                                NAME action 12 [source_file: testcode]


Subtree1: BLOCK 7 [source_file: expected0]
    EXPR_RESULT 8 [source_file: expected0]
        ASSIGN 8 [source_file: expected0]
            NAME action 8 [source_file: expected0]
            NAME proto 8 [source_file: expected0]
    CONTINUE 9 [source_file: expected0]
        LABEL_NAME a 9 [source_file: expected0]


Subtree2: BLOCK 7 [source_file: testcode]
    EXPR_RESULT 8 [source_file: testcode]
        ASSIGN 8 [source_file: testcode]
            NAME action 8 [source_file: testcode]
            NAME proto 8 [source_file: testcode]
]
junit.framework.AssertionFailedError: 
Expected: f=function(){var action;a:do{var proto=null;try{proto=new Proto}finally{action=proto;continue a}}while(false);alert(action)}
Result: f=function(){var action;a:do{var proto=null;try{proto=new Proto}finally{action=proto}}while(false);alert(action)}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            ASSIGN 1 [source_file: expected0]
                NAME f 1 [source_file: expected0]
                FUNCTION  1 [source_file: expected0]
                    NAME  1 [source_file: expected0]
                    PARAM_LIST 1 [source_file: expected0]
                    BLOCK 1 [source_file: expected0]
                        VAR 2 [source_file: expected0]
                            NAME action 2 [source_file: expected0]
                        LABEL 3 [source_file: expected0]
                            LABEL_NAME a 3 [source_file: expected0]
                            DO 3 [source_file: expected0]
                                BLOCK 3 [source_file: expected0]
                                    VAR 4 [source_file: expected0]
                                        NAME proto 4 [source_file: expected0]
                                            NULL 4 [source_file: expected0]
                                    TRY 5 [source_file: expected0]
                                        BLOCK 5 [source_file: expected0]
                                            EXPR_RESULT 6 [source_file: expected0]
                                                ASSIGN 6 [source_file: expected0]
                                                    NAME proto 6 [source_file: expected0]
                                                    NEW 6 [source_file: expected0]
                                                        NAME Proto 6 [source_file: expected0]
                                        BLOCK 7 [source_file: expected0]
                                        BLOCK 7 [source_file: expected0]
                                            EXPR_RESULT 8 [source_file: expected0]
                                                ASSIGN 8 [source_file: expected0]
                                                    NAME action 8 [source_file: expected0]
                                                    NAME proto 8 [source_file: expected0]
                                            CONTINUE 9 [source_file: expected0]
                                                LABEL_NAME a 9 [source_file: expected0]
                                FALSE 11 [source_file: expected0]
                        EXPR_RESULT 12 [source_file: expected0]
                            CALL 12 [free_call: 1] [source_file: expected0]
                                NAME alert 12 [source_file: expected0]
                                NAME action 12 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        EXPR_RESULT 1 [source_file: testcode]
            ASSIGN 1 [source_file: testcode]
                NAME f 1 [source_file: testcode]
                FUNCTION  1 [source_file: testcode]
                    NAME  1 [source_file: testcode]
                    PARAM_LIST 1 [source_file: testcode]
                    BLOCK 1 [source_file: testcode]
                        VAR 2 [source_file: testcode]
                            NAME action 2 [source_file: testcode]
                        LABEL 3 [source_file: testcode]
                            LABEL_NAME a 3 [source_file: testcode]
                            DO 3 [source_file: testcode]
                                BLOCK 3 [source_file: testcode]
                                    VAR 4 [source_file: testcode]
                                        NAME proto 4 [source_file: testcode]
                                            NULL 4 [source_file: testcode]
                                    TRY 5 [source_file: testcode]
                                        BLOCK 5 [source_file: testcode]
                                            EXPR_RESULT 6 [source_file: testcode]
                                                ASSIGN 6 [source_file: testcode]
                                                    NAME proto 6 [source_file: testcode]
                                                    NEW 6 [source_file: testcode]
                                                        NAME Proto 6 [source_file: testcode]
                                        BLOCK 7 [source_file: testcode]
                                        BLOCK 7 [source_file: testcode]
                                            EXPR_RESULT 8 [source_file: testcode]
                                                ASSIGN 8 [source_file: testcode]
                                                    NAME action 8 [source_file: testcode]
                                                    NAME proto 8 [source_file: testcode]
                                FALSE 11 [source_file: testcode]
                        EXPR_RESULT 12 [source_file: testcode]
                            CALL 12 [free_call: 1] [source_file: testcode]
                                NAME alert 12 [source_file: testcode]
                                NAME action 12 [source_file: testcode]


Subtree1: BLOCK 7 [source_file: expected0]
    EXPR_RESULT 8 [source_file: expected0]
        ASSIGN 8 [source_file: expected0]
            NAME action 8 [source_file: expected0]
            NAME proto 8 [source_file: expected0]
    CONTINUE 9 [source_file: expected0]
        LABEL_NAME a 9 [source_file: expected0]


Subtree2: BLOCK 7 [source_file: testcode]
    EXPR_RESULT 8 [source_file: testcode]
        ASSIGN 8 [source_file: testcode]
            NAME action 8 [source_file: testcode]
            NAME proto 8 [source_file: testcode]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:928)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:460)

junit.framework.AssertionFailedError: 
Expected: f=function(){var action;a:{var proto=null;try{}finally{try{proto=new Proto}finally{action=proto;break a}}}alert(action)}
Result: f=function(){var action;a:{var proto=null;try{}finally{try{proto=new Proto}finally{action=proto}}}alert(action)}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            ASSIGN 1 [source_file: expected0]
                NAME f 1 [source_file: expected0]
                FUNCTION  1 [source_file: expected0]
                    NAME  1 [source_file: expected0]
                    PARAM_LIST 1 [source_file: expected0]
                    BLOCK 1 [source_file: expected0]
                        VAR 2 [source_file: expected0]
                            NAME action 2 [source_file: expected0]
                        LABEL 3 [source_file: expected0]
                            LABEL_NAME a 3 [source_file: expected0]
                            BLOCK 3 [source_file: expected0]
                                VAR 4 [source_file: expected0]
                                    NAME proto 4 [source_file: expected0]
                                        NULL 4 [source_file: expected0]
                                TRY 5 [source_file: expected0]
                                    BLOCK 5 [source_file: expected0]
                                    BLOCK 6 [source_file: expected0]
                                    BLOCK 6 [source_file: expected0]
                                        TRY 7 [source_file: expected0]
                                            BLOCK 7 [source_file: expected0]
                                                EXPR_RESULT 8 [source_file: expected0]
                                                    ASSIGN 8 [source_file: expected0]
                                                        NAME proto 8 [source_file: expected0]
                                                        NEW 8 [source_file: expected0]
                                                            NAME Proto 8 [source_file: expected0]
                                            BLOCK 9 [source_file: expected0]
                                            BLOCK 9 [source_file: expected0]
                                                EXPR_RESULT 10 [source_file: expected0]
                                                    ASSIGN 10 [source_file: expected0]
                                                        NAME action 10 [source_file: expected0]
                                                        NAME proto 10 [source_file: expected0]
                                                BREAK 11 [source_file: expected0]
                                                    LABEL_NAME a 11 [source_file: expected0]
                        EXPR_RESULT 15 [source_file: expected0]
                            CALL 15 [free_call: 1] [source_file: expected0]
                                NAME alert 15 [source_file: expected0]
                                NAME action 15 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        EXPR_RESULT 1 [source_file: testcode]
            ASSIGN 1 [source_file: testcode]
                NAME f 1 [source_file: testcode]
                FUNCTION  1 [source_file: testcode]
                    NAME  1 [source_file: testcode]
                    PARAM_LIST 1 [source_file: testcode]
                    BLOCK 1 [source_file: testcode]
                        VAR 2 [source_file: testcode]
                            NAME action 2 [source_file: testcode]
                        LABEL 3 [source_file: testcode]
                            LABEL_NAME a 3 [source_file: testcode]
                            BLOCK 3 [source_file: testcode]
                                VAR 4 [source_file: testcode]
                                    NAME proto 4 [source_file: testcode]
                                        NULL 4 [source_file: testcode]
                                TRY 5 [source_file: testcode]
                                    BLOCK 5 [source_file: testcode]
                                    BLOCK 6 [source_file: testcode]
                                    BLOCK 6 [source_file: testcode]
                                        TRY 7 [source_file: testcode]
                                            BLOCK 7 [source_file: testcode]
                                                EXPR_RESULT 8 [source_file: testcode]
                                                    ASSIGN 8 [source_file: testcode]
                                                        NAME proto 8 [source_file: testcode]
                                                        NEW 8 [source_file: testcode]
                                                            NAME Proto 8 [source_file: testcode]
                                            BLOCK 9 [source_file: testcode]
                                            BLOCK 9 [source_file: testcode]
                                                EXPR_RESULT 10 [source_file: testcode]
                                                    ASSIGN 10 [source_file: testcode]
                                                        NAME action 10 [source_file: testcode]
                                                        NAME proto 10 [source_file: testcode]
                        EXPR_RESULT 15 [source_file: testcode]
                            CALL 15 [free_call: 1] [source_file: testcode]
                                NAME alert 15 [source_file: testcode]
                                NAME action 15 [source_file: testcode]


Subtree1: BLOCK 9 [source_file: expected0]
    EXPR_RESULT 10 [source_file: expected0]
        ASSIGN 10 [source_file: expected0]
            NAME action 10 [source_file: expected0]
            NAME proto 10 [source_file: expected0]
    BREAK 11 [source_file: expected0]
        LABEL_NAME a 11 [source_file: expected0]


Subtree2: BLOCK 9 [source_file: testcode]
    EXPR_RESULT 10 [source_file: testcode]
        ASSIGN 10 [source_file: testcode]
            NAME action 10 [source_file: testcode]
            NAME proto 10 [source_file: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:928)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:460)
19:29:46.952 [pool-15-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (11 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue4177428c(com.google.javascript.jscomp.UnreachableCodeEliminationTest)
[
Expected: f=function(){var action;a:{var proto=null;try{}finally{try{proto=new Proto}finally{action=proto;break a}}}alert(action)}
Result: f=function(){var action;a:{var proto=null;try{}finally{try{proto=new Proto}finally{action=proto}}}alert(action)}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            ASSIGN 1 [source_file: expected0]
                NAME f 1 [source_file: expected0]
                FUNCTION  1 [source_file: expected0]
                    NAME  1 [source_file: expected0]
                    PARAM_LIST 1 [source_file: expected0]
                    BLOCK 1 [source_file: expected0]
                        VAR 2 [source_file: expected0]
                            NAME action 2 [source_file: expected0]
                        LABEL 3 [source_file: expected0]
                            LABEL_NAME a 3 [source_file: expected0]
                            BLOCK 3 [source_file: expected0]
                                VAR 4 [source_file: expected0]
                                    NAME proto 4 [source_file: expected0]
                                        NULL 4 [source_file: expected0]
                                TRY 5 [source_file: expected0]
                                    BLOCK 5 [source_file: expected0]
                                    BLOCK 6 [source_file: expected0]
                                    BLOCK 6 [source_file: expected0]
                                        TRY 7 [source_file: expected0]
                                            BLOCK 7 [source_file: expected0]
                                                EXPR_RESULT 8 [source_file: expected0]
                                                    ASSIGN 8 [source_file: expected0]
                                                        NAME proto 8 [source_file: expected0]
                                                        NEW 8 [source_file: expected0]
                                                            NAME Proto 8 [source_file: expected0]
                                            BLOCK 9 [source_file: expected0]
                                            BLOCK 9 [source_file: expected0]
                                                EXPR_RESULT 10 [source_file: expected0]
                                                    ASSIGN 10 [source_file: expected0]
                                                        NAME action 10 [source_file: expected0]
                                                        NAME proto 10 [source_file: expected0]
                                                BREAK 11 [source_file: expected0]
                                                    LABEL_NAME a 11 [source_file: expected0]
                        EXPR_RESULT 15 [source_file: expected0]
                            CALL 15 [free_call: 1] [source_file: expected0]
                                NAME alert 15 [source_file: expected0]
                                NAME action 15 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        EXPR_RESULT 1 [source_file: testcode]
            ASSIGN 1 [source_file: testcode]
                NAME f 1 [source_file: testcode]
                FUNCTION  1 [source_file: testcode]
                    NAME  1 [source_file: testcode]
                    PARAM_LIST 1 [source_file: testcode]
                    BLOCK 1 [source_file: testcode]
                        VAR 2 [source_file: testcode]
                            NAME action 2 [source_file: testcode]
                        LABEL 3 [source_file: testcode]
                            LABEL_NAME a 3 [source_file: testcode]
                            BLOCK 3 [source_file: testcode]
                                VAR 4 [source_file: testcode]
                                    NAME proto 4 [source_file: testcode]
                                        NULL 4 [source_file: testcode]
                                TRY 5 [source_file: testcode]
                                    BLOCK 5 [source_file: testcode]
                                    BLOCK 6 [source_file: testcode]
                                    BLOCK 6 [source_file: testcode]
                                        TRY 7 [source_file: testcode]
                                            BLOCK 7 [source_file: testcode]
                                                EXPR_RESULT 8 [source_file: testcode]
                                                    ASSIGN 8 [source_file: testcode]
                                                        NAME proto 8 [source_file: testcode]
                                                        NEW 8 [source_file: testcode]
                                                            NAME Proto 8 [source_file: testcode]
                                            BLOCK 9 [source_file: testcode]
                                            BLOCK 9 [source_file: testcode]
                                                EXPR_RESULT 10 [source_file: testcode]
                                                    ASSIGN 10 [source_file: testcode]
                                                        NAME action 10 [source_file: testcode]
                                                        NAME proto 10 [source_file: testcode]
                        EXPR_RESULT 15 [source_file: testcode]
                            CALL 15 [free_call: 1] [source_file: testcode]
                                NAME alert 15 [source_file: testcode]
                                NAME action 15 [source_file: testcode]


Subtree1: BLOCK 9 [source_file: expected0]
    EXPR_RESULT 10 [source_file: expected0]
        ASSIGN 10 [source_file: expected0]
            NAME action 10 [source_file: expected0]
            NAME proto 10 [source_file: expected0]
    BREAK 11 [source_file: expected0]
        LABEL_NAME a 11 [source_file: expected0]


Subtree2: BLOCK 9 [source_file: testcode]
    EXPR_RESULT 10 [source_file: testcode]
        ASSIGN 10 [source_file: testcode]
            NAME action 10 [source_file: testcode]
            NAME proto 10 [source_file: testcode]
]
junit.framework.AssertionFailedError: 
Expected: f=function(){var action;a:{var proto=null;try{}finally{try{proto=new Proto}finally{action=proto;break a}}}alert(action)}
Result: f=function(){var action;a:{var proto=null;try{}finally{try{proto=new Proto}finally{action=proto}}}alert(action)}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            ASSIGN 1 [source_file: expected0]
                NAME f 1 [source_file: expected0]
                FUNCTION  1 [source_file: expected0]
                    NAME  1 [source_file: expected0]
                    PARAM_LIST 1 [source_file: expected0]
                    BLOCK 1 [source_file: expected0]
                        VAR 2 [source_file: expected0]
                            NAME action 2 [source_file: expected0]
                        LABEL 3 [source_file: expected0]
                            LABEL_NAME a 3 [source_file: expected0]
                            BLOCK 3 [source_file: expected0]
                                VAR 4 [source_file: expected0]
                                    NAME proto 4 [source_file: expected0]
                                        NULL 4 [source_file: expected0]
                                TRY 5 [source_file: expected0]
                                    BLOCK 5 [source_file: expected0]
                                    BLOCK 6 [source_file: expected0]
                                    BLOCK 6 [source_file: expected0]
                                        TRY 7 [source_file: expected0]
                                            BLOCK 7 [source_file: expected0]
                                                EXPR_RESULT 8 [source_file: expected0]
                                                    ASSIGN 8 [source_file: expected0]
                                                        NAME proto 8 [source_file: expected0]
                                                        NEW 8 [source_file: expected0]
                                                            NAME Proto 8 [source_file: expected0]
                                            BLOCK 9 [source_file: expected0]
                                            BLOCK 9 [source_file: expected0]
                                                EXPR_RESULT 10 [source_file: expected0]
                                                    ASSIGN 10 [source_file: expected0]
                                                        NAME action 10 [source_file: expected0]
                                                        NAME proto 10 [source_file: expected0]
                                                BREAK 11 [source_file: expected0]
                                                    LABEL_NAME a 11 [source_file: expected0]
                        EXPR_RESULT 15 [source_file: expected0]
                            CALL 15 [free_call: 1] [source_file: expected0]
                                NAME alert 15 [source_file: expected0]
                                NAME action 15 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        EXPR_RESULT 1 [source_file: testcode]
            ASSIGN 1 [source_file: testcode]
                NAME f 1 [source_file: testcode]
                FUNCTION  1 [source_file: testcode]
                    NAME  1 [source_file: testcode]
                    PARAM_LIST 1 [source_file: testcode]
                    BLOCK 1 [source_file: testcode]
                        VAR 2 [source_file: testcode]
                            NAME action 2 [source_file: testcode]
                        LABEL 3 [source_file: testcode]
                            LABEL_NAME a 3 [source_file: testcode]
                            BLOCK 3 [source_file: testcode]
                                VAR 4 [source_file: testcode]
                                    NAME proto 4 [source_file: testcode]
                                        NULL 4 [source_file: testcode]
                                TRY 5 [source_file: testcode]
                                    BLOCK 5 [source_file: testcode]
                                    BLOCK 6 [source_file: testcode]
                                    BLOCK 6 [source_file: testcode]
                                        TRY 7 [source_file: testcode]
                                            BLOCK 7 [source_file: testcode]
                                                EXPR_RESULT 8 [source_file: testcode]
                                                    ASSIGN 8 [source_file: testcode]
                                                        NAME proto 8 [source_file: testcode]
                                                        NEW 8 [source_file: testcode]
                                                            NAME Proto 8 [source_file: testcode]
                                            BLOCK 9 [source_file: testcode]
                                            BLOCK 9 [source_file: testcode]
                                                EXPR_RESULT 10 [source_file: testcode]
                                                    ASSIGN 10 [source_file: testcode]
                                                        NAME action 10 [source_file: testcode]
                                                        NAME proto 10 [source_file: testcode]
                        EXPR_RESULT 15 [source_file: testcode]
                            CALL 15 [free_call: 1] [source_file: testcode]
                                NAME alert 15 [source_file: testcode]
                                NAME action 15 [source_file: testcode]


Subtree1: BLOCK 9 [source_file: expected0]
    EXPR_RESULT 10 [source_file: expected0]
        ASSIGN 10 [source_file: expected0]
            NAME action 10 [source_file: expected0]
            NAME proto 10 [source_file: expected0]
    BREAK 11 [source_file: expected0]
        LABEL_NAME a 11 [source_file: expected0]


Subtree2: BLOCK 9 [source_file: testcode]
    EXPR_RESULT 10 [source_file: testcode]
        ASSIGN 10 [source_file: testcode]
            NAME action 10 [source_file: testcode]
            NAME proto 10 [source_file: testcode]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:928)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:460)

junit.framework.AssertionFailedError: 
Expected: f=function(){var action;a:{var proto=null;try{proto=new Proto}finally{action=proto;return}}}
Result: f=function(){var action;a:{var proto=null;try{proto=new Proto}finally{action=proto}}}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            ASSIGN 1 [source_file: expected0]
                NAME f 1 [source_file: expected0]
                FUNCTION  1 [source_file: expected0]
                    NAME  1 [source_file: expected0]
                    PARAM_LIST 1 [source_file: expected0]
                    BLOCK 1 [source_file: expected0]
                        VAR 2 [source_file: expected0]
                            NAME action 2 [source_file: expected0]
                        LABEL 3 [source_file: expected0]
                            LABEL_NAME a 3 [source_file: expected0]
                            BLOCK 3 [source_file: expected0]
                                VAR 4 [source_file: expected0]
                                    NAME proto 4 [source_file: expected0]
                                        NULL 4 [source_file: expected0]
                                TRY 5 [source_file: expected0]
                                    BLOCK 5 [source_file: expected0]
                                        EXPR_RESULT 6 [source_file: expected0]
                                            ASSIGN 6 [source_file: expected0]
                                                NAME proto 6 [source_file: expected0]
                                                NEW 6 [source_file: expected0]
                                                    NAME Proto 6 [source_file: expected0]
                                    BLOCK 7 [source_file: expected0]
                                    BLOCK 7 [source_file: expected0]
                                        EXPR_RESULT 8 [source_file: expected0]
                                            ASSIGN 8 [source_file: expected0]
                                                NAME action 8 [source_file: expected0]
                                                NAME proto 8 [source_file: expected0]
                                        RETURN 9 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        EXPR_RESULT 1 [source_file: testcode]
            ASSIGN 1 [source_file: testcode]
                NAME f 1 [source_file: testcode]
                FUNCTION  1 [source_file: testcode]
                    NAME  1 [source_file: testcode]
                    PARAM_LIST 1 [source_file: testcode]
                    BLOCK 1 [source_file: testcode]
                        VAR 2 [source_file: testcode]
                            NAME action 2 [source_file: testcode]
                        LABEL 3 [source_file: testcode]
                            LABEL_NAME a 3 [source_file: testcode]
                            BLOCK 3 [source_file: testcode]
                                VAR 4 [source_file: testcode]
                                    NAME proto 4 [source_file: testcode]
                                        NULL 4 [source_file: testcode]
                                TRY 5 [source_file: testcode]
                                    BLOCK 5 [source_file: testcode]
                                        EXPR_RESULT 6 [source_file: testcode]
                                            ASSIGN 6 [source_file: testcode]
                                                NAME proto 6 [source_file: testcode]
                                                NEW 6 [source_file: testcode]
                                                    NAME Proto 6 [source_file: testcode]
                                    BLOCK 7 [source_file: testcode]
                                    BLOCK 7 [source_file: testcode]
                                        EXPR_RESULT 8 [source_file: testcode]
                                            ASSIGN 8 [source_file: testcode]
                                                NAME action 8 [source_file: testcode]
                                                NAME proto 8 [source_file: testcode]


Subtree1: BLOCK 7 [source_file: expected0]
    EXPR_RESULT 8 [source_file: expected0]
        ASSIGN 8 [source_file: expected0]
            NAME action 8 [source_file: expected0]
            NAME proto 8 [source_file: expected0]
    RETURN 9 [source_file: expected0]


Subtree2: BLOCK 7 [source_file: testcode]
    EXPR_RESULT 8 [source_file: testcode]
        ASSIGN 8 [source_file: testcode]
            NAME action 8 [source_file: testcode]
            NAME proto 8 [source_file: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:928)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:460)
19:29:46.967 [pool-16-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (12 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue4177428_return(com.google.javascript.jscomp.UnreachableCodeEliminationTest)
[
Expected: f=function(){var action;a:{var proto=null;try{proto=new Proto}finally{action=proto;return}}}
Result: f=function(){var action;a:{var proto=null;try{proto=new Proto}finally{action=proto}}}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            ASSIGN 1 [source_file: expected0]
                NAME f 1 [source_file: expected0]
                FUNCTION  1 [source_file: expected0]
                    NAME  1 [source_file: expected0]
                    PARAM_LIST 1 [source_file: expected0]
                    BLOCK 1 [source_file: expected0]
                        VAR 2 [source_file: expected0]
                            NAME action 2 [source_file: expected0]
                        LABEL 3 [source_file: expected0]
                            LABEL_NAME a 3 [source_file: expected0]
                            BLOCK 3 [source_file: expected0]
                                VAR 4 [source_file: expected0]
                                    NAME proto 4 [source_file: expected0]
                                        NULL 4 [source_file: expected0]
                                TRY 5 [source_file: expected0]
                                    BLOCK 5 [source_file: expected0]
                                        EXPR_RESULT 6 [source_file: expected0]
                                            ASSIGN 6 [source_file: expected0]
                                                NAME proto 6 [source_file: expected0]
                                                NEW 6 [source_file: expected0]
                                                    NAME Proto 6 [source_file: expected0]
                                    BLOCK 7 [source_file: expected0]
                                    BLOCK 7 [source_file: expected0]
                                        EXPR_RESULT 8 [source_file: expected0]
                                            ASSIGN 8 [source_file: expected0]
                                                NAME action 8 [source_file: expected0]
                                                NAME proto 8 [source_file: expected0]
                                        RETURN 9 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        EXPR_RESULT 1 [source_file: testcode]
            ASSIGN 1 [source_file: testcode]
                NAME f 1 [source_file: testcode]
                FUNCTION  1 [source_file: testcode]
                    NAME  1 [source_file: testcode]
                    PARAM_LIST 1 [source_file: testcode]
                    BLOCK 1 [source_file: testcode]
                        VAR 2 [source_file: testcode]
                            NAME action 2 [source_file: testcode]
                        LABEL 3 [source_file: testcode]
                            LABEL_NAME a 3 [source_file: testcode]
                            BLOCK 3 [source_file: testcode]
                                VAR 4 [source_file: testcode]
                                    NAME proto 4 [source_file: testcode]
                                        NULL 4 [source_file: testcode]
                                TRY 5 [source_file: testcode]
                                    BLOCK 5 [source_file: testcode]
                                        EXPR_RESULT 6 [source_file: testcode]
                                            ASSIGN 6 [source_file: testcode]
                                                NAME proto 6 [source_file: testcode]
                                                NEW 6 [source_file: testcode]
                                                    NAME Proto 6 [source_file: testcode]
                                    BLOCK 7 [source_file: testcode]
                                    BLOCK 7 [source_file: testcode]
                                        EXPR_RESULT 8 [source_file: testcode]
                                            ASSIGN 8 [source_file: testcode]
                                                NAME action 8 [source_file: testcode]
                                                NAME proto 8 [source_file: testcode]


Subtree1: BLOCK 7 [source_file: expected0]
    EXPR_RESULT 8 [source_file: expected0]
        ASSIGN 8 [source_file: expected0]
            NAME action 8 [source_file: expected0]
            NAME proto 8 [source_file: expected0]
    RETURN 9 [source_file: expected0]


Subtree2: BLOCK 7 [source_file: testcode]
    EXPR_RESULT 8 [source_file: testcode]
        ASSIGN 8 [source_file: testcode]
            NAME action 8 [source_file: testcode]
            NAME proto 8 [source_file: testcode]
]
junit.framework.AssertionFailedError: 
Expected: f=function(){var action;a:{var proto=null;try{proto=new Proto}finally{action=proto;return}}}
Result: f=function(){var action;a:{var proto=null;try{proto=new Proto}finally{action=proto}}}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            ASSIGN 1 [source_file: expected0]
                NAME f 1 [source_file: expected0]
                FUNCTION  1 [source_file: expected0]
                    NAME  1 [source_file: expected0]
                    PARAM_LIST 1 [source_file: expected0]
                    BLOCK 1 [source_file: expected0]
                        VAR 2 [source_file: expected0]
                            NAME action 2 [source_file: expected0]
                        LABEL 3 [source_file: expected0]
                            LABEL_NAME a 3 [source_file: expected0]
                            BLOCK 3 [source_file: expected0]
                                VAR 4 [source_file: expected0]
                                    NAME proto 4 [source_file: expected0]
                                        NULL 4 [source_file: expected0]
                                TRY 5 [source_file: expected0]
                                    BLOCK 5 [source_file: expected0]
                                        EXPR_RESULT 6 [source_file: expected0]
                                            ASSIGN 6 [source_file: expected0]
                                                NAME proto 6 [source_file: expected0]
                                                NEW 6 [source_file: expected0]
                                                    NAME Proto 6 [source_file: expected0]
                                    BLOCK 7 [source_file: expected0]
                                    BLOCK 7 [source_file: expected0]
                                        EXPR_RESULT 8 [source_file: expected0]
                                            ASSIGN 8 [source_file: expected0]
                                                NAME action 8 [source_file: expected0]
                                                NAME proto 8 [source_file: expected0]
                                        RETURN 9 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        EXPR_RESULT 1 [source_file: testcode]
            ASSIGN 1 [source_file: testcode]
                NAME f 1 [source_file: testcode]
                FUNCTION  1 [source_file: testcode]
                    NAME  1 [source_file: testcode]
                    PARAM_LIST 1 [source_file: testcode]
                    BLOCK 1 [source_file: testcode]
                        VAR 2 [source_file: testcode]
                            NAME action 2 [source_file: testcode]
                        LABEL 3 [source_file: testcode]
                            LABEL_NAME a 3 [source_file: testcode]
                            BLOCK 3 [source_file: testcode]
                                VAR 4 [source_file: testcode]
                                    NAME proto 4 [source_file: testcode]
                                        NULL 4 [source_file: testcode]
                                TRY 5 [source_file: testcode]
                                    BLOCK 5 [source_file: testcode]
                                        EXPR_RESULT 6 [source_file: testcode]
                                            ASSIGN 6 [source_file: testcode]
                                                NAME proto 6 [source_file: testcode]
                                                NEW 6 [source_file: testcode]
                                                    NAME Proto 6 [source_file: testcode]
                                    BLOCK 7 [source_file: testcode]
                                    BLOCK 7 [source_file: testcode]
                                        EXPR_RESULT 8 [source_file: testcode]
                                            ASSIGN 8 [source_file: testcode]
                                                NAME action 8 [source_file: testcode]
                                                NAME proto 8 [source_file: testcode]


Subtree1: BLOCK 7 [source_file: expected0]
    EXPR_RESULT 8 [source_file: expected0]
        ASSIGN 8 [source_file: expected0]
            NAME action 8 [source_file: expected0]
            NAME proto 8 [source_file: expected0]
    RETURN 9 [source_file: expected0]


Subtree2: BLOCK 7 [source_file: testcode]
    EXPR_RESULT 8 [source_file: testcode]
        ASSIGN 8 [source_file: testcode]
            NAME action 8 [source_file: testcode]
            NAME proto 8 [source_file: testcode]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:928)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:460)

junit.framework.AssertionFailedError: 
Expected: f=function(){var action;a:{var proto=null;try{proto=new Proto}finally{action=proto;break a}}alert(action)}
Result: f=function(){var action;a:{var proto=null;try{proto=new Proto}finally{action=proto}}alert(action)}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            ASSIGN 1 [source_file: expected0]
                NAME f 1 [source_file: expected0]
                FUNCTION  1 [source_file: expected0]
                    NAME  1 [source_file: expected0]
                    PARAM_LIST 1 [source_file: expected0]
                    BLOCK 1 [source_file: expected0]
                        VAR 2 [source_file: expected0]
                            NAME action 2 [source_file: expected0]
                        LABEL 3 [source_file: expected0]
                            LABEL_NAME a 3 [source_file: expected0]
                            BLOCK 3 [source_file: expected0]
                                VAR 4 [source_file: expected0]
                                    NAME proto 4 [source_file: expected0]
                                        NULL 4 [source_file: expected0]
                                TRY 5 [source_file: expected0]
                                    BLOCK 5 [source_file: expected0]
                                        EXPR_RESULT 6 [source_file: expected0]
                                            ASSIGN 6 [source_file: expected0]
                                                NAME proto 6 [source_file: expected0]
                                                NEW 6 [source_file: expected0]
                                                    NAME Proto 6 [source_file: expected0]
                                    BLOCK 7 [source_file: expected0]
                                    BLOCK 7 [source_file: expected0]
                                        EXPR_RESULT 8 [source_file: expected0]
                                            ASSIGN 8 [source_file: expected0]
                                                NAME action 8 [source_file: expected0]
                                                NAME proto 8 [source_file: expected0]
                                        BREAK 9 [source_file: expected0]
                                            LABEL_NAME a 9 [source_file: expected0]
                        EXPR_RESULT 12 [source_file: expected0]
                            CALL 12 [free_call: 1] [source_file: expected0]
                                NAME alert 12 [source_file: expected0]
                                NAME action 12 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        EXPR_RESULT 1 [source_file: testcode]
            ASSIGN 1 [source_file: testcode]
                NAME f 1 [source_file: testcode]
                FUNCTION  1 [source_file: testcode]
                    NAME  1 [source_file: testcode]
                    PARAM_LIST 1 [source_file: testcode]
                    BLOCK 1 [source_file: testcode]
                        VAR 2 [source_file: testcode]
                            NAME action 2 [source_file: testcode]
                        LABEL 3 [source_file: testcode]
                            LABEL_NAME a 3 [source_file: testcode]
                            BLOCK 3 [source_file: testcode]
                                VAR 4 [source_file: testcode]
                                    NAME proto 4 [source_file: testcode]
                                        NULL 4 [source_file: testcode]
                                TRY 5 [source_file: testcode]
                                    BLOCK 5 [source_file: testcode]
                                        EXPR_RESULT 6 [source_file: testcode]
                                            ASSIGN 6 [source_file: testcode]
                                                NAME proto 6 [source_file: testcode]
                                                NEW 6 [source_file: testcode]
                                                    NAME Proto 6 [source_file: testcode]
                                    BLOCK 7 [source_file: testcode]
                                    BLOCK 7 [source_file: testcode]
                                        EXPR_RESULT 8 [source_file: testcode]
                                            ASSIGN 8 [source_file: testcode]
                                                NAME action 8 [source_file: testcode]
                                                NAME proto 8 [source_file: testcode]
                        EXPR_RESULT 12 [source_file: testcode]
                            CALL 12 [free_call: 1] [source_file: testcode]
                                NAME alert 12 [source_file: testcode]
                                NAME action 12 [source_file: testcode]


Subtree1: BLOCK 7 [source_file: expected0]
    EXPR_RESULT 8 [source_file: expected0]
        ASSIGN 8 [source_file: expected0]
            NAME action 8 [source_file: expected0]
            NAME proto 8 [source_file: expected0]
    BREAK 9 [source_file: expected0]
        LABEL_NAME a 9 [source_file: expected0]


Subtree2: BLOCK 7 [source_file: testcode]
    EXPR_RESULT 8 [source_file: testcode]
        ASSIGN 8 [source_file: testcode]
            NAME action 8 [source_file: testcode]
            NAME proto 8 [source_file: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:928)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:460)
19:29:46.981 [pool-17-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (9 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue4177428a(com.google.javascript.jscomp.UnreachableCodeEliminationTest)
[
Expected: f=function(){var action;a:{var proto=null;try{proto=new Proto}finally{action=proto;break a}}alert(action)}
Result: f=function(){var action;a:{var proto=null;try{proto=new Proto}finally{action=proto}}alert(action)}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            ASSIGN 1 [source_file: expected0]
                NAME f 1 [source_file: expected0]
                FUNCTION  1 [source_file: expected0]
                    NAME  1 [source_file: expected0]
                    PARAM_LIST 1 [source_file: expected0]
                    BLOCK 1 [source_file: expected0]
                        VAR 2 [source_file: expected0]
                            NAME action 2 [source_file: expected0]
                        LABEL 3 [source_file: expected0]
                            LABEL_NAME a 3 [source_file: expected0]
                            BLOCK 3 [source_file: expected0]
                                VAR 4 [source_file: expected0]
                                    NAME proto 4 [source_file: expected0]
                                        NULL 4 [source_file: expected0]
                                TRY 5 [source_file: expected0]
                                    BLOCK 5 [source_file: expected0]
                                        EXPR_RESULT 6 [source_file: expected0]
                                            ASSIGN 6 [source_file: expected0]
                                                NAME proto 6 [source_file: expected0]
                                                NEW 6 [source_file: expected0]
                                                    NAME Proto 6 [source_file: expected0]
                                    BLOCK 7 [source_file: expected0]
                                    BLOCK 7 [source_file: expected0]
                                        EXPR_RESULT 8 [source_file: expected0]
                                            ASSIGN 8 [source_file: expected0]
                                                NAME action 8 [source_file: expected0]
                                                NAME proto 8 [source_file: expected0]
                                        BREAK 9 [source_file: expected0]
                                            LABEL_NAME a 9 [source_file: expected0]
                        EXPR_RESULT 12 [source_file: expected0]
                            CALL 12 [free_call: 1] [source_file: expected0]
                                NAME alert 12 [source_file: expected0]
                                NAME action 12 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        EXPR_RESULT 1 [source_file: testcode]
            ASSIGN 1 [source_file: testcode]
                NAME f 1 [source_file: testcode]
                FUNCTION  1 [source_file: testcode]
                    NAME  1 [source_file: testcode]
                    PARAM_LIST 1 [source_file: testcode]
                    BLOCK 1 [source_file: testcode]
                        VAR 2 [source_file: testcode]
                            NAME action 2 [source_file: testcode]
                        LABEL 3 [source_file: testcode]
                            LABEL_NAME a 3 [source_file: testcode]
                            BLOCK 3 [source_file: testcode]
                                VAR 4 [source_file: testcode]
                                    NAME proto 4 [source_file: testcode]
                                        NULL 4 [source_file: testcode]
                                TRY 5 [source_file: testcode]
                                    BLOCK 5 [source_file: testcode]
                                        EXPR_RESULT 6 [source_file: testcode]
                                            ASSIGN 6 [source_file: testcode]
                                                NAME proto 6 [source_file: testcode]
                                                NEW 6 [source_file: testcode]
                                                    NAME Proto 6 [source_file: testcode]
                                    BLOCK 7 [source_file: testcode]
                                    BLOCK 7 [source_file: testcode]
                                        EXPR_RESULT 8 [source_file: testcode]
                                            ASSIGN 8 [source_file: testcode]
                                                NAME action 8 [source_file: testcode]
                                                NAME proto 8 [source_file: testcode]
                        EXPR_RESULT 12 [source_file: testcode]
                            CALL 12 [free_call: 1] [source_file: testcode]
                                NAME alert 12 [source_file: testcode]
                                NAME action 12 [source_file: testcode]


Subtree1: BLOCK 7 [source_file: expected0]
    EXPR_RESULT 8 [source_file: expected0]
        ASSIGN 8 [source_file: expected0]
            NAME action 8 [source_file: expected0]
            NAME proto 8 [source_file: expected0]
    BREAK 9 [source_file: expected0]
        LABEL_NAME a 9 [source_file: expected0]


Subtree2: BLOCK 7 [source_file: testcode]
    EXPR_RESULT 8 [source_file: testcode]
        ASSIGN 8 [source_file: testcode]
            NAME action 8 [source_file: testcode]
            NAME proto 8 [source_file: testcode]
]
junit.framework.AssertionFailedError: 
Expected: f=function(){var action;a:{var proto=null;try{proto=new Proto}finally{action=proto;break a}}alert(action)}
Result: f=function(){var action;a:{var proto=null;try{proto=new Proto}finally{action=proto}}alert(action)}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            ASSIGN 1 [source_file: expected0]
                NAME f 1 [source_file: expected0]
                FUNCTION  1 [source_file: expected0]
                    NAME  1 [source_file: expected0]
                    PARAM_LIST 1 [source_file: expected0]
                    BLOCK 1 [source_file: expected0]
                        VAR 2 [source_file: expected0]
                            NAME action 2 [source_file: expected0]
                        LABEL 3 [source_file: expected0]
                            LABEL_NAME a 3 [source_file: expected0]
                            BLOCK 3 [source_file: expected0]
                                VAR 4 [source_file: expected0]
                                    NAME proto 4 [source_file: expected0]
                                        NULL 4 [source_file: expected0]
                                TRY 5 [source_file: expected0]
                                    BLOCK 5 [source_file: expected0]
                                        EXPR_RESULT 6 [source_file: expected0]
                                            ASSIGN 6 [source_file: expected0]
                                                NAME proto 6 [source_file: expected0]
                                                NEW 6 [source_file: expected0]
                                                    NAME Proto 6 [source_file: expected0]
                                    BLOCK 7 [source_file: expected0]
                                    BLOCK 7 [source_file: expected0]
                                        EXPR_RESULT 8 [source_file: expected0]
                                            ASSIGN 8 [source_file: expected0]
                                                NAME action 8 [source_file: expected0]
                                                NAME proto 8 [source_file: expected0]
                                        BREAK 9 [source_file: expected0]
                                            LABEL_NAME a 9 [source_file: expected0]
                        EXPR_RESULT 12 [source_file: expected0]
                            CALL 12 [free_call: 1] [source_file: expected0]
                                NAME alert 12 [source_file: expected0]
                                NAME action 12 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        EXPR_RESULT 1 [source_file: testcode]
            ASSIGN 1 [source_file: testcode]
                NAME f 1 [source_file: testcode]
                FUNCTION  1 [source_file: testcode]
                    NAME  1 [source_file: testcode]
                    PARAM_LIST 1 [source_file: testcode]
                    BLOCK 1 [source_file: testcode]
                        VAR 2 [source_file: testcode]
                            NAME action 2 [source_file: testcode]
                        LABEL 3 [source_file: testcode]
                            LABEL_NAME a 3 [source_file: testcode]
                            BLOCK 3 [source_file: testcode]
                                VAR 4 [source_file: testcode]
                                    NAME proto 4 [source_file: testcode]
                                        NULL 4 [source_file: testcode]
                                TRY 5 [source_file: testcode]
                                    BLOCK 5 [source_file: testcode]
                                        EXPR_RESULT 6 [source_file: testcode]
                                            ASSIGN 6 [source_file: testcode]
                                                NAME proto 6 [source_file: testcode]
                                                NEW 6 [source_file: testcode]
                                                    NAME Proto 6 [source_file: testcode]
                                    BLOCK 7 [source_file: testcode]
                                    BLOCK 7 [source_file: testcode]
                                        EXPR_RESULT 8 [source_file: testcode]
                                            ASSIGN 8 [source_file: testcode]
                                                NAME action 8 [source_file: testcode]
                                                NAME proto 8 [source_file: testcode]
                        EXPR_RESULT 12 [source_file: testcode]
                            CALL 12 [free_call: 1] [source_file: testcode]
                                NAME alert 12 [source_file: testcode]
                                NAME action 12 [source_file: testcode]


Subtree1: BLOCK 7 [source_file: expected0]
    EXPR_RESULT 8 [source_file: expected0]
        ASSIGN 8 [source_file: expected0]
            NAME action 8 [source_file: expected0]
            NAME proto 8 [source_file: expected0]
    BREAK 9 [source_file: expected0]
        LABEL_NAME a 9 [source_file: expected0]


Subtree2: BLOCK 7 [source_file: testcode]
    EXPR_RESULT 8 [source_file: testcode]
        ASSIGN 8 [source_file: testcode]
            NAME action 8 [source_file: testcode]
            NAME proto 8 [source_file: testcode]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:928)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:460)

junit.framework.AssertionFailedError: 
Expected: function f(){b:try{throw 9;}finally{break b}return 1}
Result: function f(){b:try{throw 9;}finally{}return 1}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION f 1 [source_file: expected0]
            NAME f 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                LABEL 1 [source_file: expected0]
                    LABEL_NAME b 1 [source_file: expected0]
                    TRY 1 [source_file: expected0]
                        BLOCK 1 [source_file: expected0]
                            THROW 1 [source_file: expected0]
                                NUMBER 9.0 1 [source_file: expected0]
                        BLOCK 1 [source_file: expected0]
                        BLOCK 1 [source_file: expected0]
                            BREAK 1 [source_file: expected0]
                                LABEL_NAME b 1 [source_file: expected0]
                RETURN 1 [source_file: expected0]
                    NUMBER 1.0 1 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION f 1 [source_file: testcode]
            NAME f 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                LABEL 1 [source_file: testcode]
                    LABEL_NAME b 1 [source_file: testcode]
                    TRY 1 [source_file: testcode]
                        BLOCK 1 [source_file: testcode]
                            THROW 1 [source_file: testcode]
                                NUMBER 9.0 1 [source_file: testcode]
                        BLOCK 1 [source_file: testcode]
                        BLOCK 1 [source_file: testcode]
                RETURN 1 [source_file: testcode]
                    NUMBER 1.0 1 [source_file: testcode]


Subtree1: BLOCK 1 [source_file: expected0]
    BREAK 1 [source_file: expected0]
        LABEL_NAME b 1 [source_file: expected0]


Subtree2: BLOCK 1 [source_file: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:928)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:460)
19:29:46.991 [pool-18-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (7 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testDontRemoveBreakInTryFinally(com.google.javascript.jscomp.UnreachableCodeEliminationTest)
[
Expected: function f(){b:try{throw 9;}finally{break b}return 1}
Result: function f(){b:try{throw 9;}finally{}return 1}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION f 1 [source_file: expected0]
            NAME f 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                LABEL 1 [source_file: expected0]
                    LABEL_NAME b 1 [source_file: expected0]
                    TRY 1 [source_file: expected0]
                        BLOCK 1 [source_file: expected0]
                            THROW 1 [source_file: expected0]
                                NUMBER 9.0 1 [source_file: expected0]
                        BLOCK 1 [source_file: expected0]
                        BLOCK 1 [source_file: expected0]
                            BREAK 1 [source_file: expected0]
                                LABEL_NAME b 1 [source_file: expected0]
                RETURN 1 [source_file: expected0]
                    NUMBER 1.0 1 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION f 1 [source_file: testcode]
            NAME f 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                LABEL 1 [source_file: testcode]
                    LABEL_NAME b 1 [source_file: testcode]
                    TRY 1 [source_file: testcode]
                        BLOCK 1 [source_file: testcode]
                            THROW 1 [source_file: testcode]
                                NUMBER 9.0 1 [source_file: testcode]
                        BLOCK 1 [source_file: testcode]
                        BLOCK 1 [source_file: testcode]
                RETURN 1 [source_file: testcode]
                    NUMBER 1.0 1 [source_file: testcode]


Subtree1: BLOCK 1 [source_file: expected0]
    BREAK 1 [source_file: expected0]
        LABEL_NAME b 1 [source_file: expected0]


Subtree2: BLOCK 1 [source_file: testcode]
]
junit.framework.AssertionFailedError: 
Expected: function f(){b:try{throw 9;}finally{break b}return 1}
Result: function f(){b:try{throw 9;}finally{}return 1}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION f 1 [source_file: expected0]
            NAME f 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                LABEL 1 [source_file: expected0]
                    LABEL_NAME b 1 [source_file: expected0]
                    TRY 1 [source_file: expected0]
                        BLOCK 1 [source_file: expected0]
                            THROW 1 [source_file: expected0]
                                NUMBER 9.0 1 [source_file: expected0]
                        BLOCK 1 [source_file: expected0]
                        BLOCK 1 [source_file: expected0]
                            BREAK 1 [source_file: expected0]
                                LABEL_NAME b 1 [source_file: expected0]
                RETURN 1 [source_file: expected0]
                    NUMBER 1.0 1 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION f 1 [source_file: testcode]
            NAME f 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                LABEL 1 [source_file: testcode]
                    LABEL_NAME b 1 [source_file: testcode]
                    TRY 1 [source_file: testcode]
                        BLOCK 1 [source_file: testcode]
                            THROW 1 [source_file: testcode]
                                NUMBER 9.0 1 [source_file: testcode]
                        BLOCK 1 [source_file: testcode]
                        BLOCK 1 [source_file: testcode]
                RETURN 1 [source_file: testcode]
                    NUMBER 1.0 1 [source_file: testcode]


Subtree1: BLOCK 1 [source_file: expected0]
    BREAK 1 [source_file: expected0]
        LABEL_NAME b 1 [source_file: expected0]


Subtree2: BLOCK 1 [source_file: testcode]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:928)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:460)

junit.framework.AssertionFailedError: 
Expected: var JSCompiler_stubMap=[];function JSCompiler_stubMethod(JSCompiler_stubMethod_id){return function(){return JSCompiler_stubMap[JSCompiler_stubMethod_id].apply(this,arguments)}}function JSCompiler_unstubMethod(JSCompiler_unstubMethod_id,JSCompiler_unstubMethod_body){return JSCompiler_stubMap[JSCompiler_unstubMethod_id]=JSCompiler_unstubMethod_body}function Foo(){}Foo.prototype.baz=JSCompiler_stubMethod(1);Foo.prototype.callBaz=JSCompiler_stubMethod(0);Foo.prototype.baz=JSCompiler_unstubMethod(1,function(){});
Foo.prototype.callBaz=JSCompiler_unstubMethod(0,function(){this.baz()});(new Foo).callBaz()
Result: var JSCompiler_stubMap=[];function JSCompiler_stubMethod(JSCompiler_stubMethod_id){return function(){return JSCompiler_stubMap[JSCompiler_stubMethod_id].apply(this,arguments)}}function JSCompiler_unstubMethod(JSCompiler_unstubMethod_id,JSCompiler_unstubMethod_body){return JSCompiler_stubMap[JSCompiler_unstubMethod_id]=JSCompiler_unstubMethod_body}function Foo(){}Foo.prototype.baz=JSCompiler_stubMethod(0);Foo.prototype.callBaz=JSCompiler_stubMethod(1);
Foo.prototype.callBaz=JSCompiler_unstubMethod(1,function(){this.baz()});Foo.prototype.baz=JSCompiler_unstubMethod(0,function(){});(new Foo).callBaz()
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        VAR 1 [source_file: expected0]
            NAME JSCompiler_stubMap 1 [source_file: expected0]
                ARRAYLIT 1 [source_file: expected0]
        FUNCTION JSCompiler_stubMethod 1 [source_file: expected0]
            NAME JSCompiler_stubMethod 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
                NAME JSCompiler_stubMethod_id 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                RETURN 1 [source_file: expected0]
                    FUNCTION  1 [source_file: expected0]
                        NAME  1 [source_file: expected0]
                        PARAM_LIST 1 [source_file: expected0]
                        BLOCK 1 [source_file: expected0]
                            RETURN 1 [source_file: expected0]
                                CALL 1 [source_file: expected0]
                                    GETPROP 1 [source_file: expected0]
                                        GETELEM 1 [source_file: expected0]
                                            NAME JSCompiler_stubMap 1 [source_file: expected0]
                                            NAME JSCompiler_stubMethod_id 1 [source_file: expected0]
                                        STRING apply 1 [source_file: expected0]
                                    THIS 1 [source_file: expected0]
                                    NAME arguments 1 [source_file: expected0]
        FUNCTION JSCompiler_unstubMethod 1 [source_file: expected0]
            NAME JSCompiler_unstubMethod 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
                NAME JSCompiler_unstubMethod_id 1 [source_file: expected0]
                NAME JSCompiler_unstubMethod_body 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                RETURN 1 [source_file: expected0]
                    ASSIGN 1 [source_file: expected0]
                        GETELEM 1 [source_file: expected0]
                            NAME JSCompiler_stubMap 1 [source_file: expected0]
                            NAME JSCompiler_unstubMethod_id 1 [source_file: expected0]
                        NAME JSCompiler_unstubMethod_body 1 [source_file: expected0]
        FUNCTION Foo 1 [source_file: expected0]
            NAME Foo 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            ASSIGN 1 [source_file: expected0]
                GETPROP 1 [source_file: expected0]
                    GETPROP 1 [source_file: expected0]
                        NAME Foo 1 [source_file: expected0]
                        STRING prototype 1 [source_file: expected0]
                    STRING baz 1 [source_file: expected0]
                CALL 1 [free_call: 1] [source_file: expected0]
                    NAME JSCompiler_stubMethod 1 [source_file: expected0]
                    NUMBER 1.0 1 [source_file: expected0]
    SCRIPT 1 [synthetic: 1] [source_file: expected1] [input_id: InputId: expected1]
        EXPR_RESULT 1 [source_file: expected1]
            ASSIGN 1 [source_file: expected1]
                GETPROP 1 [source_file: expected1]
                    GETPROP 1 [source_file: expected1]
                        NAME Foo 1 [source_file: expected1]
                        STRING prototype 1 [source_file: expected1]
                    STRING callBaz 1 [source_file: expected1]
                CALL 1 [free_call: 1] [source_file: expected1]
                    NAME JSCompiler_stubMethod 1 [source_file: expected1]
                    NUMBER 0.0 1 [source_file: expected1]
    SCRIPT 1 [synthetic: 1] [source_file: expected2] [input_id: InputId: expected2]
        EXPR_RESULT 1 [source_file: expected2]
            ASSIGN 1 [source_file: expected2]
                GETPROP 1 [source_file: expected2]
                    GETPROP 1 [source_file: expected2]
                        NAME Foo 1 [source_file: expected2]
                        STRING prototype 1 [source_file: expected2]
                    STRING baz 1 [source_file: expected2]
                CALL 1 [free_call: 1] [source_file: expected2]
                    NAME JSCompiler_unstubMethod 1 [source_file: expected2]
                    NUMBER 1.0 1 [source_file: expected2]
                    FUNCTION  1 [source_file: expected2]
                        NAME  1 [source_file: expected2]
                        PARAM_LIST 1 [source_file: expected2]
                        BLOCK 1 [source_file: expected2]
        EXPR_RESULT 1 [source_file: expected2]
            ASSIGN 1 [source_file: expected2]
                GETPROP 1 [source_file: expected2]
                    GETPROP 1 [source_file: expected2]
                        NAME Foo 1 [source_file: expected2]
                        STRING prototype 1 [source_file: expected2]
                    STRING callBaz 1 [source_file: expected2]
                CALL 1 [free_call: 1] [source_file: expected2]
                    NAME JSCompiler_unstubMethod 1 [source_file: expected2]
                    NUMBER 0.0 1 [source_file: expected2]
                    FUNCTION  1 [source_file: expected2]
                        NAME  1 [source_file: expected2]
                        PARAM_LIST 1 [source_file: expected2]
                        BLOCK 1 [source_file: expected2]
                            EXPR_RESULT 1 [source_file: expected2]
                                CALL 1 [source_file: expected2]
                                    GETPROP 1 [source_file: expected2]
                                        THIS 1 [source_file: expected2]
                                        STRING baz 1 [source_file: expected2]
        EXPR_RESULT 1 [source_file: expected2]
            CALL 1 [source_file: expected2]
                GETPROP 1 [source_file: expected2]
                    NEW 1 [source_file: expected2]
                        NAME Foo 1 [source_file: expected2]
                    STRING callBaz 1 [source_file: expected2]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: i0] [input_id: InputId: i0]
        VAR 1 [source_file:  [synthetic:1] ]
            NAME JSCompiler_stubMap 1 [source_file:  [synthetic:1] ]
                ARRAYLIT 1 [source_file:  [synthetic:1] ]
        FUNCTION JSCompiler_stubMethod 1 [source_file:  [synthetic:1] ]
            NAME JSCompiler_stubMethod 1 [source_file:  [synthetic:1] ]
            PARAM_LIST 1 [source_file:  [synthetic:1] ]
                NAME JSCompiler_stubMethod_id 1 [source_file:  [synthetic:1] ]
            BLOCK 1 [source_file:  [synthetic:1] ]
                RETURN 1 [source_file:  [synthetic:1] ]
                    FUNCTION  1 [source_file:  [synthetic:1] ]
                        NAME  1 [source_file:  [synthetic:1] ]
                        PARAM_LIST 1 [source_file:  [synthetic:1] ]
                        BLOCK 1 [source_file:  [synthetic:1] ]
                            RETURN 1 [source_file:  [synthetic:1] ]
                                CALL 1 [source_file:  [synthetic:1] ]
                                    GETPROP 1 [source_file:  [synthetic:1] ]
                                        GETELEM 1 [source_file:  [synthetic:1] ]
                                            NAME JSCompiler_stubMap 1 [source_file:  [synthetic:1] ]
                                            NAME JSCompiler_stubMethod_id 1 [source_file:  [synthetic:1] ]
                                        STRING apply 1 [source_file:  [synthetic:1] ]
                                    THIS 1 [source_file:  [synthetic:1] ]
                                    NAME arguments 1 [source_file:  [synthetic:1] ]
        FUNCTION JSCompiler_unstubMethod 1 [source_file:  [synthetic:1] ]
            NAME JSCompiler_unstubMethod 1 [source_file:  [synthetic:1] ]
            PARAM_LIST 1 [source_file:  [synthetic:1] ]
                NAME JSCompiler_unstubMethod_id 1 [source_file:  [synthetic:1] ]
                NAME JSCompiler_unstubMethod_body 1 [source_file:  [synthetic:1] ]
            BLOCK 1 [source_file:  [synthetic:1] ]
                RETURN 1 [source_file:  [synthetic:1] ]
                    ASSIGN 1 [source_file:  [synthetic:1] ]
                        GETELEM 1 [source_file:  [synthetic:1] ]
                            NAME JSCompiler_stubMap 1 [source_file:  [synthetic:1] ]
                            NAME JSCompiler_unstubMethod_id 1 [source_file:  [synthetic:1] ]
                        NAME JSCompiler_unstubMethod_body 1 [source_file:  [synthetic:1] ]
        FUNCTION Foo 1 [source_file: i0]
            NAME Foo 1 [source_file: i0]
            PARAM_LIST 1 [source_file: i0]
            BLOCK 1 [source_file: i0]
        EXPR_RESULT 1 [source_file: i0]
            ASSIGN 1 [source_file: i0]
                GETPROP 1 [source_file: i0]
                    GETPROP 1 [source_file: i0]
                        NAME Foo 1 [source_file: i0]
                        STRING prototype 1 [source_file: i0]
                    STRING baz 1 [source_file: i0]
                CALL 1 [free_call: 1] [source_file: i0]
                    NAME JSCompiler_stubMethod 1 [source_file: i0]
                    NUMBER 0.0 1 [source_file: i0]
    SCRIPT 1 [synthetic: 1] [source_file: i1] [input_id: InputId: i1]
        EXPR_RESULT 1 [source_file: i1]
            ASSIGN 1 [source_file: i1]
                GETPROP 1 [source_file: i1]
                    GETPROP 1 [source_file: i1]
                        NAME Foo 1 [source_file: i1]
                        STRING prototype 1 [source_file: i1]
                    STRING callBaz 1 [source_file: i1]
                CALL 1 [free_call: 1] [source_file: i1]
                    NAME JSCompiler_stubMethod 1 [source_file: i1]
                    NUMBER 1.0 1 [source_file: i1]
    SCRIPT 1 [synthetic: 1] [source_file: i2] [input_id: InputId: i2]
        EXPR_RESULT 1 [source_file: i1]
            ASSIGN 1 [source_file: i1]
                GETPROP 1 [source_file: i1]
                    GETPROP 1 [source_file: i1]
                        NAME Foo 1 [source_file: i1]
                        STRING prototype 1 [source_file: i1]
                    STRING callBaz 1 [source_file: i1]
                CALL 1 [free_call: 1] [source_file: i1]
                    NAME JSCompiler_unstubMethod 1 [source_file: i1]
                    NUMBER 1.0 1 [source_file: i1]
                    FUNCTION  1 [source_file: i1]
                        NAME  1 [source_file: i1]
                        PARAM_LIST 1 [source_file: i1]
                        BLOCK 1 [source_file: i1]
                            EXPR_RESULT 1 [source_file: i1]
                                CALL 1 [source_file: i1]
                                    GETPROP 1 [source_file: i1]
                                        THIS 1 [source_file: i1]
                                        STRING baz 1 [source_file: i1]
        EXPR_RESULT 1 [source_file: i0]
            ASSIGN 1 [source_file: i0]
                GETPROP 1 [source_file: i0]
                    GETPROP 1 [source_file: i0]
                        NAME Foo 1 [source_file: i0]
                        STRING prototype 1 [source_file: i0]
                    STRING baz 1 [source_file: i0]
                CALL 1 [free_call: 1] [source_file: i0]
                    NAME JSCompiler_unstubMethod 1 [source_file: i0]
                    NUMBER 0.0 1 [source_file: i0]
                    FUNCTION  1 [source_file: i0]
                        NAME  1 [source_file: i0]
                        PARAM_LIST 1 [source_file: i0]
                        BLOCK 1 [source_file: i0]
        EXPR_RESULT 1 [source_file: i2]
            CALL 1 [source_file: i2]
                GETPROP 1 [source_file: i2]
                    NEW 1 [source_file: i2]
                        NAME Foo 1 [source_file: i2]
                    STRING callBaz 1 [source_file: i2]


Subtree1: NUMBER 1.0 1 [source_file: expected0]


Subtree2: NUMBER 0.0 1 [source_file: i0]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:928)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:736)
19:29:47.004 [pool-19-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (9 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testTwoMethods(com.google.javascript.jscomp.CrossModuleMethodMotionTest)
[
Expected: var JSCompiler_stubMap=[];function JSCompiler_stubMethod(JSCompiler_stubMethod_id){return function(){return JSCompiler_stubMap[JSCompiler_stubMethod_id].apply(this,arguments)}}function JSCompiler_unstubMethod(JSCompiler_unstubMethod_id,JSCompiler_unstubMethod_body){return JSCompiler_stubMap[JSCompiler_unstubMethod_id]=JSCompiler_unstubMethod_body}function Foo(){}Foo.prototype.baz=JSCompiler_stubMethod(1);Foo.prototype.callBaz=JSCompiler_stubMethod(0);Foo.prototype.baz=JSCompiler_unstubMethod(1,function(){});
Foo.prototype.callBaz=JSCompiler_unstubMethod(0,function(){this.baz()});(new Foo).callBaz()
Result: var JSCompiler_stubMap=[];function JSCompiler_stubMethod(JSCompiler_stubMethod_id){return function(){return JSCompiler_stubMap[JSCompiler_stubMethod_id].apply(this,arguments)}}function JSCompiler_unstubMethod(JSCompiler_unstubMethod_id,JSCompiler_unstubMethod_body){return JSCompiler_stubMap[JSCompiler_unstubMethod_id]=JSCompiler_unstubMethod_body}function Foo(){}Foo.prototype.baz=JSCompiler_stubMethod(0);Foo.prototype.callBaz=JSCompiler_stubMethod(1);
Foo.prototype.callBaz=JSCompiler_unstubMethod(1,function(){this.baz()});Foo.prototype.baz=JSCompiler_unstubMethod(0,function(){});(new Foo).callBaz()
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        VAR 1 [source_file: expected0]
            NAME JSCompiler_stubMap 1 [source_file: expected0]
                ARRAYLIT 1 [source_file: expected0]
        FUNCTION JSCompiler_stubMethod 1 [source_file: expected0]
            NAME JSCompiler_stubMethod 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
                NAME JSCompiler_stubMethod_id 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                RETURN 1 [source_file: expected0]
                    FUNCTION  1 [source_file: expected0]
                        NAME  1 [source_file: expected0]
                        PARAM_LIST 1 [source_file: expected0]
                        BLOCK 1 [source_file: expected0]
                            RETURN 1 [source_file: expected0]
                                CALL 1 [source_file: expected0]
                                    GETPROP 1 [source_file: expected0]
                                        GETELEM 1 [source_file: expected0]
                                            NAME JSCompiler_stubMap 1 [source_file: expected0]
                                            NAME JSCompiler_stubMethod_id 1 [source_file: expected0]
                                        STRING apply 1 [source_file: expected0]
                                    THIS 1 [source_file: expected0]
                                    NAME arguments 1 [source_file: expected0]
        FUNCTION JSCompiler_unstubMethod 1 [source_file: expected0]
            NAME JSCompiler_unstubMethod 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
                NAME JSCompiler_unstubMethod_id 1 [source_file: expected0]
                NAME JSCompiler_unstubMethod_body 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                RETURN 1 [source_file: expected0]
                    ASSIGN 1 [source_file: expected0]
                        GETELEM 1 [source_file: expected0]
                            NAME JSCompiler_stubMap 1 [source_file: expected0]
                            NAME JSCompiler_unstubMethod_id 1 [source_file: expected0]
                        NAME JSCompiler_unstubMethod_body 1 [source_file: expected0]
        FUNCTION Foo 1 [source_file: expected0]
            NAME Foo 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            ASSIGN 1 [source_file: expected0]
                GETPROP 1 [source_file: expected0]
                    GETPROP 1 [source_file: expected0]
                        NAME Foo 1 [source_file: expected0]
                        STRING prototype 1 [source_file: expected0]
                    STRING baz 1 [source_file: expected0]
                CALL 1 [free_call: 1] [source_file: expected0]
                    NAME JSCompiler_stubMethod 1 [source_file: expected0]
                    NUMBER 1.0 1 [source_file: expected0]
    SCRIPT 1 [synthetic: 1] [source_file: expected1] [input_id: InputId: expected1]
        EXPR_RESULT 1 [source_file: expected1]
            ASSIGN 1 [source_file: expected1]
                GETPROP 1 [source_file: expected1]
                    GETPROP 1 [source_file: expected1]
                        NAME Foo 1 [source_file: expected1]
                        STRING prototype 1 [source_file: expected1]
                    STRING callBaz 1 [source_file: expected1]
                CALL 1 [free_call: 1] [source_file: expected1]
                    NAME JSCompiler_stubMethod 1 [source_file: expected1]
                    NUMBER 0.0 1 [source_file: expected1]
    SCRIPT 1 [synthetic: 1] [source_file: expected2] [input_id: InputId: expected2]
        EXPR_RESULT 1 [source_file: expected2]
            ASSIGN 1 [source_file: expected2]
                GETPROP 1 [source_file: expected2]
                    GETPROP 1 [source_file: expected2]
                        NAME Foo 1 [source_file: expected2]
                        STRING prototype 1 [source_file: expected2]
                    STRING baz 1 [source_file: expected2]
                CALL 1 [free_call: 1] [source_file: expected2]
                    NAME JSCompiler_unstubMethod 1 [source_file: expected2]
                    NUMBER 1.0 1 [source_file: expected2]
                    FUNCTION  1 [source_file: expected2]
                        NAME  1 [source_file: expected2]
                        PARAM_LIST 1 [source_file: expected2]
                        BLOCK 1 [source_file: expected2]
        EXPR_RESULT 1 [source_file: expected2]
            ASSIGN 1 [source_file: expected2]
                GETPROP 1 [source_file: expected2]
                    GETPROP 1 [source_file: expected2]
                        NAME Foo 1 [source_file: expected2]
                        STRING prototype 1 [source_file: expected2]
                    STRING callBaz 1 [source_file: expected2]
                CALL 1 [free_call: 1] [source_file: expected2]
                    NAME JSCompiler_unstubMethod 1 [source_file: expected2]
                    NUMBER 0.0 1 [source_file: expected2]
                    FUNCTION  1 [source_file: expected2]
                        NAME  1 [source_file: expected2]
                        PARAM_LIST 1 [source_file: expected2]
                        BLOCK 1 [source_file: expected2]
                            EXPR_RESULT 1 [source_file: expected2]
                                CALL 1 [source_file: expected2]
                                    GETPROP 1 [source_file: expected2]
                                        THIS 1 [source_file: expected2]
                                        STRING baz 1 [source_file: expected2]
        EXPR_RESULT 1 [source_file: expected2]
            CALL 1 [source_file: expected2]
                GETPROP 1 [source_file: expected2]
                    NEW 1 [source_file: expected2]
                        NAME Foo 1 [source_file: expected2]
                    STRING callBaz 1 [source_file: expected2]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: i0] [input_id: InputId: i0]
        VAR 1 [source_file:  [synthetic:1] ]
            NAME JSCompiler_stubMap 1 [source_file:  [synthetic:1] ]
                ARRAYLIT 1 [source_file:  [synthetic:1] ]
        FUNCTION JSCompiler_stubMethod 1 [source_file:  [synthetic:1] ]
            NAME JSCompiler_stubMethod 1 [source_file:  [synthetic:1] ]
            PARAM_LIST 1 [source_file:  [synthetic:1] ]
                NAME JSCompiler_stubMethod_id 1 [source_file:  [synthetic:1] ]
            BLOCK 1 [source_file:  [synthetic:1] ]
                RETURN 1 [source_file:  [synthetic:1] ]
                    FUNCTION  1 [source_file:  [synthetic:1] ]
                        NAME  1 [source_file:  [synthetic:1] ]
                        PARAM_LIST 1 [source_file:  [synthetic:1] ]
                        BLOCK 1 [source_file:  [synthetic:1] ]
                            RETURN 1 [source_file:  [synthetic:1] ]
                                CALL 1 [source_file:  [synthetic:1] ]
                                    GETPROP 1 [source_file:  [synthetic:1] ]
                                        GETELEM 1 [source_file:  [synthetic:1] ]
                                            NAME JSCompiler_stubMap 1 [source_file:  [synthetic:1] ]
                                            NAME JSCompiler_stubMethod_id 1 [source_file:  [synthetic:1] ]
                                        STRING apply 1 [source_file:  [synthetic:1] ]
                                    THIS 1 [source_file:  [synthetic:1] ]
                                    NAME arguments 1 [source_file:  [synthetic:1] ]
        FUNCTION JSCompiler_unstubMethod 1 [source_file:  [synthetic:1] ]
            NAME JSCompiler_unstubMethod 1 [source_file:  [synthetic:1] ]
            PARAM_LIST 1 [source_file:  [synthetic:1] ]
                NAME JSCompiler_unstubMethod_id 1 [source_file:  [synthetic:1] ]
                NAME JSCompiler_unstubMethod_body 1 [source_file:  [synthetic:1] ]
            BLOCK 1 [source_file:  [synthetic:1] ]
                RETURN 1 [source_file:  [synthetic:1] ]
                    ASSIGN 1 [source_file:  [synthetic:1] ]
                        GETELEM 1 [source_file:  [synthetic:1] ]
                            NAME JSCompiler_stubMap 1 [source_file:  [synthetic:1] ]
                            NAME JSCompiler_unstubMethod_id 1 [source_file:  [synthetic:1] ]
                        NAME JSCompiler_unstubMethod_body 1 [source_file:  [synthetic:1] ]
        FUNCTION Foo 1 [source_file: i0]
            NAME Foo 1 [source_file: i0]
            PARAM_LIST 1 [source_file: i0]
            BLOCK 1 [source_file: i0]
        EXPR_RESULT 1 [source_file: i0]
            ASSIGN 1 [source_file: i0]
                GETPROP 1 [source_file: i0]
                    GETPROP 1 [source_file: i0]
                        NAME Foo 1 [source_file: i0]
                        STRING prototype 1 [source_file: i0]
                    STRING baz 1 [source_file: i0]
                CALL 1 [free_call: 1] [source_file: i0]
                    NAME JSCompiler_stubMethod 1 [source_file: i0]
                    NUMBER 0.0 1 [source_file: i0]
    SCRIPT 1 [synthetic: 1] [source_file: i1] [input_id: InputId: i1]
        EXPR_RESULT 1 [source_file: i1]
            ASSIGN 1 [source_file: i1]
                GETPROP 1 [source_file: i1]
                    GETPROP 1 [source_file: i1]
                        NAME Foo 1 [source_file: i1]
                        STRING prototype 1 [source_file: i1]
                    STRING callBaz 1 [source_file: i1]
                CALL 1 [free_call: 1] [source_file: i1]
                    NAME JSCompiler_stubMethod 1 [source_file: i1]
                    NUMBER 1.0 1 [source_file: i1]
    SCRIPT 1 [synthetic: 1] [source_file: i2] [input_id: InputId: i2]
        EXPR_RESULT 1 [source_file: i1]
            ASSIGN 1 [source_file: i1]
                GETPROP 1 [source_file: i1]
                    GETPROP 1 [source_file: i1]
                        NAME Foo 1 [source_file: i1]
                        STRING prototype 1 [source_file: i1]
                    STRING callBaz 1 [source_file: i1]
                CALL 1 [free_call: 1] [source_file: i1]
                    NAME JSCompiler_unstubMethod 1 [source_file: i1]
                    NUMBER 1.0 1 [source_file: i1]
                    FUNCTION  1 [source_file: i1]
                        NAME  1 [source_file: i1]
                        PARAM_LIST 1 [source_file: i1]
                        BLOCK 1 [source_file: i1]
                            EXPR_RESULT 1 [source_file: i1]
                                CALL 1 [source_file: i1]
                                    GETPROP 1 [source_file: i1]
                                        THIS 1 [source_file: i1]
                                        STRING baz 1 [source_file: i1]
        EXPR_RESULT 1 [source_file: i0]
            ASSIGN 1 [source_file: i0]
                GETPROP 1 [source_file: i0]
                    GETPROP 1 [source_file: i0]
                        NAME Foo 1 [source_file: i0]
                        STRING prototype 1 [source_file: i0]
                    STRING baz 1 [source_file: i0]
                CALL 1 [free_call: 1] [source_file: i0]
                    NAME JSCompiler_unstubMethod 1 [source_file: i0]
                    NUMBER 0.0 1 [source_file: i0]
                    FUNCTION  1 [source_file: i0]
                        NAME  1 [source_file: i0]
                        PARAM_LIST 1 [source_file: i0]
                        BLOCK 1 [source_file: i0]
        EXPR_RESULT 1 [source_file: i2]
            CALL 1 [source_file: i2]
                GETPROP 1 [source_file: i2]
                    NEW 1 [source_file: i2]
                        NAME Foo 1 [source_file: i2]
                    STRING callBaz 1 [source_file: i2]


Subtree1: NUMBER 1.0 1 [source_file: expected0]


Subtree2: NUMBER 0.0 1 [source_file: i0]
]
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_stubMap=[];function JSCompiler_stubMethod(JSCompiler_stubMethod_id){return function(){return JSCompiler_stubMap[JSCompiler_stubMethod_id].apply(this,arguments)}}function JSCompiler_unstubMethod(JSCompiler_unstubMethod_id,JSCompiler_unstubMethod_body){return JSCompiler_stubMap[JSCompiler_unstubMethod_id]=JSCompiler_unstubMethod_body}function Foo(){}Foo.prototype.baz=JSCompiler_stubMethod(1);Foo.prototype.callBaz=JSCompiler_stubMethod(0);Foo.prototype.baz=JSCompiler_unstubMethod(1,function(){});
Foo.prototype.callBaz=JSCompiler_unstubMethod(0,function(){this.baz()});(new Foo).callBaz()
Result: var JSCompiler_stubMap=[];function JSCompiler_stubMethod(JSCompiler_stubMethod_id){return function(){return JSCompiler_stubMap[JSCompiler_stubMethod_id].apply(this,arguments)}}function JSCompiler_unstubMethod(JSCompiler_unstubMethod_id,JSCompiler_unstubMethod_body){return JSCompiler_stubMap[JSCompiler_unstubMethod_id]=JSCompiler_unstubMethod_body}function Foo(){}Foo.prototype.baz=JSCompiler_stubMethod(0);Foo.prototype.callBaz=JSCompiler_stubMethod(1);
Foo.prototype.callBaz=JSCompiler_unstubMethod(1,function(){this.baz()});Foo.prototype.baz=JSCompiler_unstubMethod(0,function(){});(new Foo).callBaz()
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        VAR 1 [source_file: expected0]
            NAME JSCompiler_stubMap 1 [source_file: expected0]
                ARRAYLIT 1 [source_file: expected0]
        FUNCTION JSCompiler_stubMethod 1 [source_file: expected0]
            NAME JSCompiler_stubMethod 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
                NAME JSCompiler_stubMethod_id 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                RETURN 1 [source_file: expected0]
                    FUNCTION  1 [source_file: expected0]
                        NAME  1 [source_file: expected0]
                        PARAM_LIST 1 [source_file: expected0]
                        BLOCK 1 [source_file: expected0]
                            RETURN 1 [source_file: expected0]
                                CALL 1 [source_file: expected0]
                                    GETPROP 1 [source_file: expected0]
                                        GETELEM 1 [source_file: expected0]
                                            NAME JSCompiler_stubMap 1 [source_file: expected0]
                                            NAME JSCompiler_stubMethod_id 1 [source_file: expected0]
                                        STRING apply 1 [source_file: expected0]
                                    THIS 1 [source_file: expected0]
                                    NAME arguments 1 [source_file: expected0]
        FUNCTION JSCompiler_unstubMethod 1 [source_file: expected0]
            NAME JSCompiler_unstubMethod 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
                NAME JSCompiler_unstubMethod_id 1 [source_file: expected0]
                NAME JSCompiler_unstubMethod_body 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                RETURN 1 [source_file: expected0]
                    ASSIGN 1 [source_file: expected0]
                        GETELEM 1 [source_file: expected0]
                            NAME JSCompiler_stubMap 1 [source_file: expected0]
                            NAME JSCompiler_unstubMethod_id 1 [source_file: expected0]
                        NAME JSCompiler_unstubMethod_body 1 [source_file: expected0]
        FUNCTION Foo 1 [source_file: expected0]
            NAME Foo 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            ASSIGN 1 [source_file: expected0]
                GETPROP 1 [source_file: expected0]
                    GETPROP 1 [source_file: expected0]
                        NAME Foo 1 [source_file: expected0]
                        STRING prototype 1 [source_file: expected0]
                    STRING baz 1 [source_file: expected0]
                CALL 1 [free_call: 1] [source_file: expected0]
                    NAME JSCompiler_stubMethod 1 [source_file: expected0]
                    NUMBER 1.0 1 [source_file: expected0]
    SCRIPT 1 [synthetic: 1] [source_file: expected1] [input_id: InputId: expected1]
        EXPR_RESULT 1 [source_file: expected1]
            ASSIGN 1 [source_file: expected1]
                GETPROP 1 [source_file: expected1]
                    GETPROP 1 [source_file: expected1]
                        NAME Foo 1 [source_file: expected1]
                        STRING prototype 1 [source_file: expected1]
                    STRING callBaz 1 [source_file: expected1]
                CALL 1 [free_call: 1] [source_file: expected1]
                    NAME JSCompiler_stubMethod 1 [source_file: expected1]
                    NUMBER 0.0 1 [source_file: expected1]
    SCRIPT 1 [synthetic: 1] [source_file: expected2] [input_id: InputId: expected2]
        EXPR_RESULT 1 [source_file: expected2]
            ASSIGN 1 [source_file: expected2]
                GETPROP 1 [source_file: expected2]
                    GETPROP 1 [source_file: expected2]
                        NAME Foo 1 [source_file: expected2]
                        STRING prototype 1 [source_file: expected2]
                    STRING baz 1 [source_file: expected2]
                CALL 1 [free_call: 1] [source_file: expected2]
                    NAME JSCompiler_unstubMethod 1 [source_file: expected2]
                    NUMBER 1.0 1 [source_file: expected2]
                    FUNCTION  1 [source_file: expected2]
                        NAME  1 [source_file: expected2]
                        PARAM_LIST 1 [source_file: expected2]
                        BLOCK 1 [source_file: expected2]
        EXPR_RESULT 1 [source_file: expected2]
            ASSIGN 1 [source_file: expected2]
                GETPROP 1 [source_file: expected2]
                    GETPROP 1 [source_file: expected2]
                        NAME Foo 1 [source_file: expected2]
                        STRING prototype 1 [source_file: expected2]
                    STRING callBaz 1 [source_file: expected2]
                CALL 1 [free_call: 1] [source_file: expected2]
                    NAME JSCompiler_unstubMethod 1 [source_file: expected2]
                    NUMBER 0.0 1 [source_file: expected2]
                    FUNCTION  1 [source_file: expected2]
                        NAME  1 [source_file: expected2]
                        PARAM_LIST 1 [source_file: expected2]
                        BLOCK 1 [source_file: expected2]
                            EXPR_RESULT 1 [source_file: expected2]
                                CALL 1 [source_file: expected2]
                                    GETPROP 1 [source_file: expected2]
                                        THIS 1 [source_file: expected2]
                                        STRING baz 1 [source_file: expected2]
        EXPR_RESULT 1 [source_file: expected2]
            CALL 1 [source_file: expected2]
                GETPROP 1 [source_file: expected2]
                    NEW 1 [source_file: expected2]
                        NAME Foo 1 [source_file: expected2]
                    STRING callBaz 1 [source_file: expected2]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: i0] [input_id: InputId: i0]
        VAR 1 [source_file:  [synthetic:1] ]
            NAME JSCompiler_stubMap 1 [source_file:  [synthetic:1] ]
                ARRAYLIT 1 [source_file:  [synthetic:1] ]
        FUNCTION JSCompiler_stubMethod 1 [source_file:  [synthetic:1] ]
            NAME JSCompiler_stubMethod 1 [source_file:  [synthetic:1] ]
            PARAM_LIST 1 [source_file:  [synthetic:1] ]
                NAME JSCompiler_stubMethod_id 1 [source_file:  [synthetic:1] ]
            BLOCK 1 [source_file:  [synthetic:1] ]
                RETURN 1 [source_file:  [synthetic:1] ]
                    FUNCTION  1 [source_file:  [synthetic:1] ]
                        NAME  1 [source_file:  [synthetic:1] ]
                        PARAM_LIST 1 [source_file:  [synthetic:1] ]
                        BLOCK 1 [source_file:  [synthetic:1] ]
                            RETURN 1 [source_file:  [synthetic:1] ]
                                CALL 1 [source_file:  [synthetic:1] ]
                                    GETPROP 1 [source_file:  [synthetic:1] ]
                                        GETELEM 1 [source_file:  [synthetic:1] ]
                                            NAME JSCompiler_stubMap 1 [source_file:  [synthetic:1] ]
                                            NAME JSCompiler_stubMethod_id 1 [source_file:  [synthetic:1] ]
                                        STRING apply 1 [source_file:  [synthetic:1] ]
                                    THIS 1 [source_file:  [synthetic:1] ]
                                    NAME arguments 1 [source_file:  [synthetic:1] ]
        FUNCTION JSCompiler_unstubMethod 1 [source_file:  [synthetic:1] ]
            NAME JSCompiler_unstubMethod 1 [source_file:  [synthetic:1] ]
            PARAM_LIST 1 [source_file:  [synthetic:1] ]
                NAME JSCompiler_unstubMethod_id 1 [source_file:  [synthetic:1] ]
                NAME JSCompiler_unstubMethod_body 1 [source_file:  [synthetic:1] ]
            BLOCK 1 [source_file:  [synthetic:1] ]
                RETURN 1 [source_file:  [synthetic:1] ]
                    ASSIGN 1 [source_file:  [synthetic:1] ]
                        GETELEM 1 [source_file:  [synthetic:1] ]
                            NAME JSCompiler_stubMap 1 [source_file:  [synthetic:1] ]
                            NAME JSCompiler_unstubMethod_id 1 [source_file:  [synthetic:1] ]
                        NAME JSCompiler_unstubMethod_body 1 [source_file:  [synthetic:1] ]
        FUNCTION Foo 1 [source_file: i0]
            NAME Foo 1 [source_file: i0]
            PARAM_LIST 1 [source_file: i0]
            BLOCK 1 [source_file: i0]
        EXPR_RESULT 1 [source_file: i0]
            ASSIGN 1 [source_file: i0]
                GETPROP 1 [source_file: i0]
                    GETPROP 1 [source_file: i0]
                        NAME Foo 1 [source_file: i0]
                        STRING prototype 1 [source_file: i0]
                    STRING baz 1 [source_file: i0]
                CALL 1 [free_call: 1] [source_file: i0]
                    NAME JSCompiler_stubMethod 1 [source_file: i0]
                    NUMBER 0.0 1 [source_file: i0]
    SCRIPT 1 [synthetic: 1] [source_file: i1] [input_id: InputId: i1]
        EXPR_RESULT 1 [source_file: i1]
            ASSIGN 1 [source_file: i1]
                GETPROP 1 [source_file: i1]
                    GETPROP 1 [source_file: i1]
                        NAME Foo 1 [source_file: i1]
                        STRING prototype 1 [source_file: i1]
                    STRING callBaz 1 [source_file: i1]
                CALL 1 [free_call: 1] [source_file: i1]
                    NAME JSCompiler_stubMethod 1 [source_file: i1]
                    NUMBER 1.0 1 [source_file: i1]
    SCRIPT 1 [synthetic: 1] [source_file: i2] [input_id: InputId: i2]
        EXPR_RESULT 1 [source_file: i1]
            ASSIGN 1 [source_file: i1]
                GETPROP 1 [source_file: i1]
                    GETPROP 1 [source_file: i1]
                        NAME Foo 1 [source_file: i1]
                        STRING prototype 1 [source_file: i1]
                    STRING callBaz 1 [source_file: i1]
                CALL 1 [free_call: 1] [source_file: i1]
                    NAME JSCompiler_unstubMethod 1 [source_file: i1]
                    NUMBER 1.0 1 [source_file: i1]
                    FUNCTION  1 [source_file: i1]
                        NAME  1 [source_file: i1]
                        PARAM_LIST 1 [source_file: i1]
                        BLOCK 1 [source_file: i1]
                            EXPR_RESULT 1 [source_file: i1]
                                CALL 1 [source_file: i1]
                                    GETPROP 1 [source_file: i1]
                                        THIS 1 [source_file: i1]
                                        STRING baz 1 [source_file: i1]
        EXPR_RESULT 1 [source_file: i0]
            ASSIGN 1 [source_file: i0]
                GETPROP 1 [source_file: i0]
                    GETPROP 1 [source_file: i0]
                        NAME Foo 1 [source_file: i0]
                        STRING prototype 1 [source_file: i0]
                    STRING baz 1 [source_file: i0]
                CALL 1 [free_call: 1] [source_file: i0]
                    NAME JSCompiler_unstubMethod 1 [source_file: i0]
                    NUMBER 0.0 1 [source_file: i0]
                    FUNCTION  1 [source_file: i0]
                        NAME  1 [source_file: i0]
                        PARAM_LIST 1 [source_file: i0]
                        BLOCK 1 [source_file: i0]
        EXPR_RESULT 1 [source_file: i2]
            CALL 1 [source_file: i2]
                GETPROP 1 [source_file: i2]
                    NEW 1 [source_file: i2]
                        NAME Foo 1 [source_file: i2]
                    STRING callBaz 1 [source_file: i2]


Subtree1: NUMBER 1.0 1 [source_file: expected0]


Subtree2: NUMBER 0.0 1 [source_file: i0]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:928)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:736)

junit.framework.AssertionFailedError: 
Expected: var JSCompiler_stubMap=[];function JSCompiler_stubMethod(JSCompiler_stubMethod_id){return function(){return JSCompiler_stubMap[JSCompiler_stubMethod_id].apply(this,arguments)}}function JSCompiler_unstubMethod(JSCompiler_unstubMethod_id,JSCompiler_unstubMethod_body){return JSCompiler_stubMap[JSCompiler_unstubMethod_id]=JSCompiler_unstubMethod_body}function Foo(){}Foo.prototype.b1=JSCompiler_stubMethod(0);Foo.prototype.b1=JSCompiler_unstubMethod(0,function(){Foo.prototype.b2=JSCompiler_stubMethod(1)});
var y=new Foo;y.b1();Foo.prototype.b2=JSCompiler_unstubMethod(1,function(){var x=1;Foo.prototype.b3=function(){x}});y=new Foo;z.b2();y=new Foo;z.b3()
Result: var JSCompiler_stubMap=[];function JSCompiler_stubMethod(JSCompiler_stubMethod_id){return function(){return JSCompiler_stubMap[JSCompiler_stubMethod_id].apply(this,arguments)}}function JSCompiler_unstubMethod(JSCompiler_unstubMethod_id,JSCompiler_unstubMethod_body){return JSCompiler_stubMap[JSCompiler_unstubMethod_id]=JSCompiler_unstubMethod_body}function Foo(){}Foo.prototype.b1=JSCompiler_stubMethod(1);Foo.prototype.b1=JSCompiler_unstubMethod(1,function(){Foo.prototype.b2=JSCompiler_stubMethod(0)});
var y=new Foo;y.b1();Foo.prototype.b2=JSCompiler_unstubMethod(0,function(){var x=1;Foo.prototype.b3=function(){x}});y=new Foo;z.b2();y=new Foo;z.b3()
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        VAR 1 [source_file: expected0]
            NAME JSCompiler_stubMap 1 [source_file: expected0]
                ARRAYLIT 1 [source_file: expected0]
        FUNCTION JSCompiler_stubMethod 1 [source_file: expected0]
            NAME JSCompiler_stubMethod 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
                NAME JSCompiler_stubMethod_id 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                RETURN 1 [source_file: expected0]
                    FUNCTION  1 [source_file: expected0]
                        NAME  1 [source_file: expected0]
                        PARAM_LIST 1 [source_file: expected0]
                        BLOCK 1 [source_file: expected0]
                            RETURN 1 [source_file: expected0]
                                CALL 1 [source_file: expected0]
                                    GETPROP 1 [source_file: expected0]
                                        GETELEM 1 [source_file: expected0]
                                            NAME JSCompiler_stubMap 1 [source_file: expected0]
                                            NAME JSCompiler_stubMethod_id 1 [source_file: expected0]
                                        STRING apply 1 [source_file: expected0]
                                    THIS 1 [source_file: expected0]
                                    NAME arguments 1 [source_file: expected0]
        FUNCTION JSCompiler_unstubMethod 1 [source_file: expected0]
            NAME JSCompiler_unstubMethod 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
                NAME JSCompiler_unstubMethod_id 1 [source_file: expected0]
                NAME JSCompiler_unstubMethod_body 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                RETURN 1 [source_file: expected0]
                    ASSIGN 1 [source_file: expected0]
                        GETELEM 1 [source_file: expected0]
                            NAME JSCompiler_stubMap 1 [source_file: expected0]
                            NAME JSCompiler_unstubMethod_id 1 [source_file: expected0]
                        NAME JSCompiler_unstubMethod_body 1 [source_file: expected0]
        FUNCTION Foo 1 [source_file: expected0]
            NAME Foo 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            ASSIGN 1 [source_file: expected0]
                GETPROP 1 [source_file: expected0]
                    GETPROP 1 [source_file: expected0]
                        NAME Foo 1 [source_file: expected0]
                        STRING prototype 1 [source_file: expected0]
                    STRING b1 1 [source_file: expected0]
                CALL 1 [free_call: 1] [source_file: expected0]
                    NAME JSCompiler_stubMethod 1 [source_file: expected0]
                    NUMBER 0.0 1 [source_file: expected0]
    SCRIPT 1 [synthetic: 1] [source_file: expected1] [input_id: InputId: expected1]
        EXPR_RESULT 1 [source_file: expected1]
            ASSIGN 1 [source_file: expected1]
                GETPROP 1 [source_file: expected1]
                    GETPROP 1 [source_file: expected1]
                        NAME Foo 1 [source_file: expected1]
                        STRING prototype 1 [source_file: expected1]
                    STRING b1 1 [source_file: expected1]
                CALL 1 [free_call: 1] [source_file: expected1]
                    NAME JSCompiler_unstubMethod 1 [source_file: expected1]
                    NUMBER 0.0 1 [source_file: expected1]
                    FUNCTION  1 [source_file: expected1]
                        NAME  1 [source_file: expected1]
                        PARAM_LIST 1 [source_file: expected1]
                        BLOCK 1 [source_file: expected1]
                            EXPR_RESULT 1 [source_file: expected1]
                                ASSIGN 1 [source_file: expected1]
                                    GETPROP 1 [source_file: expected1]
                                        GETPROP 1 [source_file: expected1]
                                            NAME Foo 1 [source_file: expected1]
                                            STRING prototype 1 [source_file: expected1]
                                        STRING b2 1 [source_file: expected1]
                                    CALL 1 [free_call: 1] [source_file: expected1]
                                        NAME JSCompiler_stubMethod 1 [source_file: expected1]
                                        NUMBER 1.0 1 [source_file: expected1]
        VAR 1 [source_file: expected1]
            NAME y 1 [source_file: expected1]
                NEW 1 [source_file: expected1]
                    NAME Foo 1 [source_file: expected1]
        EXPR_RESULT 1 [source_file: expected1]
            CALL 1 [source_file: expected1]
                GETPROP 1 [source_file: expected1]
                    NAME y 1 [source_file: expected1]
                    STRING b1 1 [source_file: expected1]
    SCRIPT 1 [synthetic: 1] [source_file: expected2] [input_id: InputId: expected2]
        EXPR_RESULT 1 [source_file: expected2]
            ASSIGN 1 [source_file: expected2]
                GETPROP 1 [source_file: expected2]
                    GETPROP 1 [source_file: expected2]
                        NAME Foo 1 [source_file: expected2]
                        STRING prototype 1 [source_file: expected2]
                    STRING b2 1 [source_file: expected2]
                CALL 1 [free_call: 1] [source_file: expected2]
                    NAME JSCompiler_unstubMethod 1 [source_file: expected2]
                    NUMBER 1.0 1 [source_file: expected2]
                    FUNCTION  1 [source_file: expected2]
                        NAME  1 [source_file: expected2]
                        PARAM_LIST 1 [source_file: expected2]
                        BLOCK 1 [source_file: expected2]
                            VAR 1 [source_file: expected2]
                                NAME x 1 [source_file: expected2]
                                    NUMBER 1.0 1 [source_file: expected2]
                            EXPR_RESULT 1 [source_file: expected2]
                                ASSIGN 1 [source_file: expected2]
                                    GETPROP 1 [source_file: expected2]
                                        GETPROP 1 [source_file: expected2]
                                            NAME Foo 1 [source_file: expected2]
                                            STRING prototype 1 [source_file: expected2]
                                        STRING b3 1 [source_file: expected2]
                                    FUNCTION  1 [source_file: expected2]
                                        NAME  1 [source_file: expected2]
                                        PARAM_LIST 1 [source_file: expected2]
                                        BLOCK 1 [source_file: expected2]
                                            EXPR_RESULT 1 [source_file: expected2]
                                                NAME x 1 [source_file: expected2]
        EXPR_RESULT 1 [source_file: expected2]
            ASSIGN 1 [source_file: expected2]
                NAME y 1 [source_file: expected2]
                NEW 1 [source_file: expected2]
                    NAME Foo 1 [source_file: expected2]
        EXPR_RESULT 1 [source_file: expected2]
            CALL 1 [source_file: expected2]
                GETPROP 1 [source_file: expected2]
                    NAME z 1 [source_file: expected2]
                    STRING b2 1 [source_file: expected2]
    SCRIPT 1 [synthetic: 1] [source_file: expected3] [input_id: InputId: expected3]
        EXPR_RESULT 1 [source_file: expected3]
            ASSIGN 1 [source_file: expected3]
                NAME y 1 [source_file: expected3]
                NEW 1 [source_file: expected3]
                    NAME Foo 1 [source_file: expected3]
        EXPR_RESULT 1 [source_file: expected3]
            CALL 1 [source_file: expected3]
                GETPROP 1 [source_file: expected3]
                    NAME z 1 [source_file: expected3]
                    STRING b3 1 [source_file: expected3]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: i0] [input_id: InputId: i0]
        VAR 1 [source_file:  [synthetic:1] ]
            NAME JSCompiler_stubMap 1 [source_file:  [synthetic:1] ]
                ARRAYLIT 1 [source_file:  [synthetic:1] ]
        FUNCTION JSCompiler_stubMethod 1 [source_file:  [synthetic:1] ]
            NAME JSCompiler_stubMethod 1 [source_file:  [synthetic:1] ]
            PARAM_LIST 1 [source_file:  [synthetic:1] ]
                NAME JSCompiler_stubMethod_id 1 [source_file:  [synthetic:1] ]
            BLOCK 1 [source_file:  [synthetic:1] ]
                RETURN 1 [source_file:  [synthetic:1] ]
                    FUNCTION  1 [source_file:  [synthetic:1] ]
                        NAME  1 [source_file:  [synthetic:1] ]
                        PARAM_LIST 1 [source_file:  [synthetic:1] ]
                        BLOCK 1 [source_file:  [synthetic:1] ]
                            RETURN 1 [source_file:  [synthetic:1] ]
                                CALL 1 [source_file:  [synthetic:1] ]
                                    GETPROP 1 [source_file:  [synthetic:1] ]
                                        GETELEM 1 [source_file:  [synthetic:1] ]
                                            NAME JSCompiler_stubMap 1 [source_file:  [synthetic:1] ]
                                            NAME JSCompiler_stubMethod_id 1 [source_file:  [synthetic:1] ]
                                        STRING apply 1 [source_file:  [synthetic:1] ]
                                    THIS 1 [source_file:  [synthetic:1] ]
                                    NAME arguments 1 [source_file:  [synthetic:1] ]
        FUNCTION JSCompiler_unstubMethod 1 [source_file:  [synthetic:1] ]
            NAME JSCompiler_unstubMethod 1 [source_file:  [synthetic:1] ]
            PARAM_LIST 1 [source_file:  [synthetic:1] ]
                NAME JSCompiler_unstubMethod_id 1 [source_file:  [synthetic:1] ]
                NAME JSCompiler_unstubMethod_body 1 [source_file:  [synthetic:1] ]
            BLOCK 1 [source_file:  [synthetic:1] ]
                RETURN 1 [source_file:  [synthetic:1] ]
                    ASSIGN 1 [source_file:  [synthetic:1] ]
                        GETELEM 1 [source_file:  [synthetic:1] ]
                            NAME JSCompiler_stubMap 1 [source_file:  [synthetic:1] ]
                            NAME JSCompiler_unstubMethod_id 1 [source_file:  [synthetic:1] ]
                        NAME JSCompiler_unstubMethod_body 1 [source_file:  [synthetic:1] ]
        FUNCTION Foo 1 [source_file: i0]
            NAME Foo 1 [source_file: i0]
            PARAM_LIST 1 [source_file: i0]
            BLOCK 1 [source_file: i0]
        EXPR_RESULT 1 [source_file: i0]
            ASSIGN 1 [source_file: i0]
                GETPROP 1 [source_file: i0]
                    GETPROP 1 [source_file: i0]
                        NAME Foo 1 [source_file: i0]
                        STRING prototype 1 [source_file: i0]
                    STRING b1 1 [source_file: i0]
                CALL 1 [free_call: 1] [source_file: i0]
                    NAME JSCompiler_stubMethod 1 [source_file: i0]
                    NUMBER 1.0 1 [source_file: i0]
    SCRIPT 1 [synthetic: 1] [source_file: i1] [input_id: InputId: i1]
        EXPR_RESULT 1 [source_file: i0]
            ASSIGN 1 [source_file: i0]
                GETPROP 1 [source_file: i0]
                    GETPROP 1 [source_file: i0]
                        NAME Foo 1 [source_file: i0]
                        STRING prototype 1 [source_file: i0]
                    STRING b1 1 [source_file: i0]
                CALL 1 [free_call: 1] [source_file: i0]
                    NAME JSCompiler_unstubMethod 1 [source_file: i0]
                    NUMBER 1.0 1 [source_file: i0]
                    FUNCTION  1 [source_file: i0]
                        NAME  1 [source_file: i0]
                        PARAM_LIST 1 [source_file: i0]
                        BLOCK 1 [source_file: i0]
                            EXPR_RESULT 1 [source_file: i0]
                                ASSIGN 1 [source_file: i0]
                                    GETPROP 1 [source_file: i0]
                                        GETPROP 1 [source_file: i0]
                                            NAME Foo 1 [source_file: i0]
                                            STRING prototype 1 [source_file: i0]
                                        STRING b2 1 [source_file: i0]
                                    CALL 1 [free_call: 1] [source_file: i0]
                                        NAME JSCompiler_stubMethod 1 [source_file: i0]
                                        NUMBER 0.0 1 [source_file: i0]
        VAR 1 [source_file: i1]
            NAME y 1 [source_file: i1]
                NEW 1 [source_file: i1]
                    NAME Foo 1 [source_file: i1]
        EXPR_RESULT 1 [source_file: i1]
            CALL 1 [source_file: i1]
                GETPROP 1 [source_file: i1]
                    NAME y 1 [source_file: i1]
                    STRING b1 1 [source_file: i1]
    SCRIPT 1 [synthetic: 1] [source_file: i2] [input_id: InputId: i2]
        EXPR_RESULT 1 [source_file: i0]
            ASSIGN 1 [source_file: i0]
                GETPROP 1 [source_file: i0]
                    GETPROP 1 [source_file: i0]
                        NAME Foo 1 [source_file: i0]
                        STRING prototype 1 [source_file: i0]
                    STRING b2 1 [source_file: i0]
                CALL 1 [free_call: 1] [source_file: i0]
                    NAME JSCompiler_unstubMethod 1 [source_file: i0]
                    NUMBER 0.0 1 [source_file: i0]
                    FUNCTION  1 [source_file: i0]
                        NAME  1 [source_file: i0]
                        PARAM_LIST 1 [source_file: i0]
                        BLOCK 1 [source_file: i0]
                            VAR 1 [source_file: i0]
                                NAME x 1 [source_file: i0]
                                    NUMBER 1.0 1 [source_file: i0]
                            EXPR_RESULT 1 [source_file: i0]
                                ASSIGN 1 [source_file: i0]
                                    GETPROP 1 [source_file: i0]
                                        GETPROP 1 [source_file: i0]
                                            NAME Foo 1 [source_file: i0]
                                            STRING prototype 1 [source_file: i0]
                                        STRING b3 1 [source_file: i0]
                                    FUNCTION  1 [source_file: i0]
                                        NAME  1 [source_file: i0]
                                        PARAM_LIST 1 [source_file: i0]
                                        BLOCK 1 [source_file: i0]
                                            EXPR_RESULT 1 [source_file: i0]
                                                NAME x 1 [source_file: i0]
        EXPR_RESULT 1 [source_file: i2]
            ASSIGN 1 [source_file: i2]
                NAME y 1 [source_file: i2]
                NEW 1 [source_file: i2]
                    NAME Foo 1 [source_file: i2]
        EXPR_RESULT 1 [source_file: i2]
            CALL 1 [source_file: i2]
                GETPROP 1 [source_file: i2]
                    NAME z 1 [source_file: i2]
                    STRING b2 1 [source_file: i2]
    SCRIPT 1 [synthetic: 1] [source_file: i3] [input_id: InputId: i3]
        EXPR_RESULT 1 [source_file: i3]
            ASSIGN 1 [source_file: i3]
                NAME y 1 [source_file: i3]
                NEW 1 [source_file: i3]
                    NAME Foo 1 [source_file: i3]
        EXPR_RESULT 1 [source_file: i3]
            CALL 1 [source_file: i3]
                GETPROP 1 [source_file: i3]
                    NAME z 1 [source_file: i3]
                    STRING b3 1 [source_file: i3]


Subtree1: NUMBER 0.0 1 [source_file: expected0]


Subtree2: NUMBER 1.0 1 [source_file: i0]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:928)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:736)
19:29:47.020 [pool-20-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (12 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testClosureVariableReads3(com.google.javascript.jscomp.CrossModuleMethodMotionTest)
[
Expected: var JSCompiler_stubMap=[];function JSCompiler_stubMethod(JSCompiler_stubMethod_id){return function(){return JSCompiler_stubMap[JSCompiler_stubMethod_id].apply(this,arguments)}}function JSCompiler_unstubMethod(JSCompiler_unstubMethod_id,JSCompiler_unstubMethod_body){return JSCompiler_stubMap[JSCompiler_unstubMethod_id]=JSCompiler_unstubMethod_body}function Foo(){}Foo.prototype.b1=JSCompiler_stubMethod(0);Foo.prototype.b1=JSCompiler_unstubMethod(0,function(){Foo.prototype.b2=JSCompiler_stubMethod(1)});
var y=new Foo;y.b1();Foo.prototype.b2=JSCompiler_unstubMethod(1,function(){var x=1;Foo.prototype.b3=function(){x}});y=new Foo;z.b2();y=new Foo;z.b3()
Result: var JSCompiler_stubMap=[];function JSCompiler_stubMethod(JSCompiler_stubMethod_id){return function(){return JSCompiler_stubMap[JSCompiler_stubMethod_id].apply(this,arguments)}}function JSCompiler_unstubMethod(JSCompiler_unstubMethod_id,JSCompiler_unstubMethod_body){return JSCompiler_stubMap[JSCompiler_unstubMethod_id]=JSCompiler_unstubMethod_body}function Foo(){}Foo.prototype.b1=JSCompiler_stubMethod(1);Foo.prototype.b1=JSCompiler_unstubMethod(1,function(){Foo.prototype.b2=JSCompiler_stubMethod(0)});
var y=new Foo;y.b1();Foo.prototype.b2=JSCompiler_unstubMethod(0,function(){var x=1;Foo.prototype.b3=function(){x}});y=new Foo;z.b2();y=new Foo;z.b3()
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        VAR 1 [source_file: expected0]
            NAME JSCompiler_stubMap 1 [source_file: expected0]
                ARRAYLIT 1 [source_file: expected0]
        FUNCTION JSCompiler_stubMethod 1 [source_file: expected0]
            NAME JSCompiler_stubMethod 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
                NAME JSCompiler_stubMethod_id 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                RETURN 1 [source_file: expected0]
                    FUNCTION  1 [source_file: expected0]
                        NAME  1 [source_file: expected0]
                        PARAM_LIST 1 [source_file: expected0]
                        BLOCK 1 [source_file: expected0]
                            RETURN 1 [source_file: expected0]
                                CALL 1 [source_file: expected0]
                                    GETPROP 1 [source_file: expected0]
                                        GETELEM 1 [source_file: expected0]
                                            NAME JSCompiler_stubMap 1 [source_file: expected0]
                                            NAME JSCompiler_stubMethod_id 1 [source_file: expected0]
                                        STRING apply 1 [source_file: expected0]
                                    THIS 1 [source_file: expected0]
                                    NAME arguments 1 [source_file: expected0]
        FUNCTION JSCompiler_unstubMethod 1 [source_file: expected0]
            NAME JSCompiler_unstubMethod 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
                NAME JSCompiler_unstubMethod_id 1 [source_file: expected0]
                NAME JSCompiler_unstubMethod_body 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                RETURN 1 [source_file: expected0]
                    ASSIGN 1 [source_file: expected0]
                        GETELEM 1 [source_file: expected0]
                            NAME JSCompiler_stubMap 1 [source_file: expected0]
                            NAME JSCompiler_unstubMethod_id 1 [source_file: expected0]
                        NAME JSCompiler_unstubMethod_body 1 [source_file: expected0]
        FUNCTION Foo 1 [source_file: expected0]
            NAME Foo 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            ASSIGN 1 [source_file: expected0]
                GETPROP 1 [source_file: expected0]
                    GETPROP 1 [source_file: expected0]
                        NAME Foo 1 [source_file: expected0]
                        STRING prototype 1 [source_file: expected0]
                    STRING b1 1 [source_file: expected0]
                CALL 1 [free_call: 1] [source_file: expected0]
                    NAME JSCompiler_stubMethod 1 [source_file: expected0]
                    NUMBER 0.0 1 [source_file: expected0]
    SCRIPT 1 [synthetic: 1] [source_file: expected1] [input_id: InputId: expected1]
        EXPR_RESULT 1 [source_file: expected1]
            ASSIGN 1 [source_file: expected1]
                GETPROP 1 [source_file: expected1]
                    GETPROP 1 [source_file: expected1]
                        NAME Foo 1 [source_file: expected1]
                        STRING prototype 1 [source_file: expected1]
                    STRING b1 1 [source_file: expected1]
                CALL 1 [free_call: 1] [source_file: expected1]
                    NAME JSCompiler_unstubMethod 1 [source_file: expected1]
                    NUMBER 0.0 1 [source_file: expected1]
                    FUNCTION  1 [source_file: expected1]
                        NAME  1 [source_file: expected1]
                        PARAM_LIST 1 [source_file: expected1]
                        BLOCK 1 [source_file: expected1]
                            EXPR_RESULT 1 [source_file: expected1]
                                ASSIGN 1 [source_file: expected1]
                                    GETPROP 1 [source_file: expected1]
                                        GETPROP 1 [source_file: expected1]
                                            NAME Foo 1 [source_file: expected1]
                                            STRING prototype 1 [source_file: expected1]
                                        STRING b2 1 [source_file: expected1]
                                    CALL 1 [free_call: 1] [source_file: expected1]
                                        NAME JSCompiler_stubMethod 1 [source_file: expected1]
                                        NUMBER 1.0 1 [source_file: expected1]
        VAR 1 [source_file: expected1]
            NAME y 1 [source_file: expected1]
                NEW 1 [source_file: expected1]
                    NAME Foo 1 [source_file: expected1]
        EXPR_RESULT 1 [source_file: expected1]
            CALL 1 [source_file: expected1]
                GETPROP 1 [source_file: expected1]
                    NAME y 1 [source_file: expected1]
                    STRING b1 1 [source_file: expected1]
    SCRIPT 1 [synthetic: 1] [source_file: expected2] [input_id: InputId: expected2]
        EXPR_RESULT 1 [source_file: expected2]
            ASSIGN 1 [source_file: expected2]
                GETPROP 1 [source_file: expected2]
                    GETPROP 1 [source_file: expected2]
                        NAME Foo 1 [source_file: expected2]
                        STRING prototype 1 [source_file: expected2]
                    STRING b2 1 [source_file: expected2]
                CALL 1 [free_call: 1] [source_file: expected2]
                    NAME JSCompiler_unstubMethod 1 [source_file: expected2]
                    NUMBER 1.0 1 [source_file: expected2]
                    FUNCTION  1 [source_file: expected2]
                        NAME  1 [source_file: expected2]
                        PARAM_LIST 1 [source_file: expected2]
                        BLOCK 1 [source_file: expected2]
                            VAR 1 [source_file: expected2]
                                NAME x 1 [source_file: expected2]
                                    NUMBER 1.0 1 [source_file: expected2]
                            EXPR_RESULT 1 [source_file: expected2]
                                ASSIGN 1 [source_file: expected2]
                                    GETPROP 1 [source_file: expected2]
                                        GETPROP 1 [source_file: expected2]
                                            NAME Foo 1 [source_file: expected2]
                                            STRING prototype 1 [source_file: expected2]
                                        STRING b3 1 [source_file: expected2]
                                    FUNCTION  1 [source_file: expected2]
                                        NAME  1 [source_file: expected2]
                                        PARAM_LIST 1 [source_file: expected2]
                                        BLOCK 1 [source_file: expected2]
                                            EXPR_RESULT 1 [source_file: expected2]
                                                NAME x 1 [source_file: expected2]
        EXPR_RESULT 1 [source_file: expected2]
            ASSIGN 1 [source_file: expected2]
                NAME y 1 [source_file: expected2]
                NEW 1 [source_file: expected2]
                    NAME Foo 1 [source_file: expected2]
        EXPR_RESULT 1 [source_file: expected2]
            CALL 1 [source_file: expected2]
                GETPROP 1 [source_file: expected2]
                    NAME z 1 [source_file: expected2]
                    STRING b2 1 [source_file: expected2]
    SCRIPT 1 [synthetic: 1] [source_file: expected3] [input_id: InputId: expected3]
        EXPR_RESULT 1 [source_file: expected3]
            ASSIGN 1 [source_file: expected3]
                NAME y 1 [source_file: expected3]
                NEW 1 [source_file: expected3]
                    NAME Foo 1 [source_file: expected3]
        EXPR_RESULT 1 [source_file: expected3]
            CALL 1 [source_file: expected3]
                GETPROP 1 [source_file: expected3]
                    NAME z 1 [source_file: expected3]
                    STRING b3 1 [source_file: expected3]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: i0] [input_id: InputId: i0]
        VAR 1 [source_file:  [synthetic:1] ]
            NAME JSCompiler_stubMap 1 [source_file:  [synthetic:1] ]
                ARRAYLIT 1 [source_file:  [synthetic:1] ]
        FUNCTION JSCompiler_stubMethod 1 [source_file:  [synthetic:1] ]
            NAME JSCompiler_stubMethod 1 [source_file:  [synthetic:1] ]
            PARAM_LIST 1 [source_file:  [synthetic:1] ]
                NAME JSCompiler_stubMethod_id 1 [source_file:  [synthetic:1] ]
            BLOCK 1 [source_file:  [synthetic:1] ]
                RETURN 1 [source_file:  [synthetic:1] ]
                    FUNCTION  1 [source_file:  [synthetic:1] ]
                        NAME  1 [source_file:  [synthetic:1] ]
                        PARAM_LIST 1 [source_file:  [synthetic:1] ]
                        BLOCK 1 [source_file:  [synthetic:1] ]
                            RETURN 1 [source_file:  [synthetic:1] ]
                                CALL 1 [source_file:  [synthetic:1] ]
                                    GETPROP 1 [source_file:  [synthetic:1] ]
                                        GETELEM 1 [source_file:  [synthetic:1] ]
                                            NAME JSCompiler_stubMap 1 [source_file:  [synthetic:1] ]
                                            NAME JSCompiler_stubMethod_id 1 [source_file:  [synthetic:1] ]
                                        STRING apply 1 [source_file:  [synthetic:1] ]
                                    THIS 1 [source_file:  [synthetic:1] ]
                                    NAME arguments 1 [source_file:  [synthetic:1] ]
        FUNCTION JSCompiler_unstubMethod 1 [source_file:  [synthetic:1] ]
            NAME JSCompiler_unstubMethod 1 [source_file:  [synthetic:1] ]
            PARAM_LIST 1 [source_file:  [synthetic:1] ]
                NAME JSCompiler_unstubMethod_id 1 [source_file:  [synthetic:1] ]
                NAME JSCompiler_unstubMethod_body 1 [source_file:  [synthetic:1] ]
            BLOCK 1 [source_file:  [synthetic:1] ]
                RETURN 1 [source_file:  [synthetic:1] ]
                    ASSIGN 1 [source_file:  [synthetic:1] ]
                        GETELEM 1 [source_file:  [synthetic:1] ]
                            NAME JSCompiler_stubMap 1 [source_file:  [synthetic:1] ]
                            NAME JSCompiler_unstubMethod_id 1 [source_file:  [synthetic:1] ]
                        NAME JSCompiler_unstubMethod_body 1 [source_file:  [synthetic:1] ]
        FUNCTION Foo 1 [source_file: i0]
            NAME Foo 1 [source_file: i0]
            PARAM_LIST 1 [source_file: i0]
            BLOCK 1 [source_file: i0]
        EXPR_RESULT 1 [source_file: i0]
            ASSIGN 1 [source_file: i0]
                GETPROP 1 [source_file: i0]
                    GETPROP 1 [source_file: i0]
                        NAME Foo 1 [source_file: i0]
                        STRING prototype 1 [source_file: i0]
                    STRING b1 1 [source_file: i0]
                CALL 1 [free_call: 1] [source_file: i0]
                    NAME JSCompiler_stubMethod 1 [source_file: i0]
                    NUMBER 1.0 1 [source_file: i0]
    SCRIPT 1 [synthetic: 1] [source_file: i1] [input_id: InputId: i1]
        EXPR_RESULT 1 [source_file: i0]
            ASSIGN 1 [source_file: i0]
                GETPROP 1 [source_file: i0]
                    GETPROP 1 [source_file: i0]
                        NAME Foo 1 [source_file: i0]
                        STRING prototype 1 [source_file: i0]
                    STRING b1 1 [source_file: i0]
                CALL 1 [free_call: 1] [source_file: i0]
                    NAME JSCompiler_unstubMethod 1 [source_file: i0]
                    NUMBER 1.0 1 [source_file: i0]
                    FUNCTION  1 [source_file: i0]
                        NAME  1 [source_file: i0]
                        PARAM_LIST 1 [source_file: i0]
                        BLOCK 1 [source_file: i0]
                            EXPR_RESULT 1 [source_file: i0]
                                ASSIGN 1 [source_file: i0]
                                    GETPROP 1 [source_file: i0]
                                        GETPROP 1 [source_file: i0]
                                            NAME Foo 1 [source_file: i0]
                                            STRING prototype 1 [source_file: i0]
                                        STRING b2 1 [source_file: i0]
                                    CALL 1 [free_call: 1] [source_file: i0]
                                        NAME JSCompiler_stubMethod 1 [source_file: i0]
                                        NUMBER 0.0 1 [source_file: i0]
        VAR 1 [source_file: i1]
            NAME y 1 [source_file: i1]
                NEW 1 [source_file: i1]
                    NAME Foo 1 [source_file: i1]
        EXPR_RESULT 1 [source_file: i1]
            CALL 1 [source_file: i1]
                GETPROP 1 [source_file: i1]
                    NAME y 1 [source_file: i1]
                    STRING b1 1 [source_file: i1]
    SCRIPT 1 [synthetic: 1] [source_file: i2] [input_id: InputId: i2]
        EXPR_RESULT 1 [source_file: i0]
            ASSIGN 1 [source_file: i0]
                GETPROP 1 [source_file: i0]
                    GETPROP 1 [source_file: i0]
                        NAME Foo 1 [source_file: i0]
                        STRING prototype 1 [source_file: i0]
                    STRING b2 1 [source_file: i0]
                CALL 1 [free_call: 1] [source_file: i0]
                    NAME JSCompiler_unstubMethod 1 [source_file: i0]
                    NUMBER 0.0 1 [source_file: i0]
                    FUNCTION  1 [source_file: i0]
                        NAME  1 [source_file: i0]
                        PARAM_LIST 1 [source_file: i0]
                        BLOCK 1 [source_file: i0]
                            VAR 1 [source_file: i0]
                                NAME x 1 [source_file: i0]
                                    NUMBER 1.0 1 [source_file: i0]
                            EXPR_RESULT 1 [source_file: i0]
                                ASSIGN 1 [source_file: i0]
                                    GETPROP 1 [source_file: i0]
                                        GETPROP 1 [source_file: i0]
                                            NAME Foo 1 [source_file: i0]
                                            STRING prototype 1 [source_file: i0]
                                        STRING b3 1 [source_file: i0]
                                    FUNCTION  1 [source_file: i0]
                                        NAME  1 [source_file: i0]
                                        PARAM_LIST 1 [source_file: i0]
                                        BLOCK 1 [source_file: i0]
                                            EXPR_RESULT 1 [source_file: i0]
                                                NAME x 1 [source_file: i0]
        EXPR_RESULT 1 [source_file: i2]
            ASSIGN 1 [source_file: i2]
                NAME y 1 [source_file: i2]
                NEW 1 [source_file: i2]
                    NAME Foo 1 [source_file: i2]
        EXPR_RESULT 1 [source_file: i2]
            CALL 1 [source_file: i2]
                GETPROP 1 [source_file: i2]
                    NAME z 1 [source_file: i2]
                    STRING b2 1 [source_file: i2]
    SCRIPT 1 [synthetic: 1] [source_file: i3] [input_id: InputId: i3]
        EXPR_RESULT 1 [source_file: i3]
            ASSIGN 1 [source_file: i3]
                NAME y 1 [source_file: i3]
                NEW 1 [source_file: i3]
                    NAME Foo 1 [source_file: i3]
        EXPR_RESULT 1 [source_file: i3]
            CALL 1 [source_file: i3]
                GETPROP 1 [source_file: i3]
                    NAME z 1 [source_file: i3]
                    STRING b3 1 [source_file: i3]


Subtree1: NUMBER 0.0 1 [source_file: expected0]


Subtree2: NUMBER 1.0 1 [source_file: i0]
]
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_stubMap=[];function JSCompiler_stubMethod(JSCompiler_stubMethod_id){return function(){return JSCompiler_stubMap[JSCompiler_stubMethod_id].apply(this,arguments)}}function JSCompiler_unstubMethod(JSCompiler_unstubMethod_id,JSCompiler_unstubMethod_body){return JSCompiler_stubMap[JSCompiler_unstubMethod_id]=JSCompiler_unstubMethod_body}function Foo(){}Foo.prototype.b1=JSCompiler_stubMethod(0);Foo.prototype.b1=JSCompiler_unstubMethod(0,function(){Foo.prototype.b2=JSCompiler_stubMethod(1)});
var y=new Foo;y.b1();Foo.prototype.b2=JSCompiler_unstubMethod(1,function(){var x=1;Foo.prototype.b3=function(){x}});y=new Foo;z.b2();y=new Foo;z.b3()
Result: var JSCompiler_stubMap=[];function JSCompiler_stubMethod(JSCompiler_stubMethod_id){return function(){return JSCompiler_stubMap[JSCompiler_stubMethod_id].apply(this,arguments)}}function JSCompiler_unstubMethod(JSCompiler_unstubMethod_id,JSCompiler_unstubMethod_body){return JSCompiler_stubMap[JSCompiler_unstubMethod_id]=JSCompiler_unstubMethod_body}function Foo(){}Foo.prototype.b1=JSCompiler_stubMethod(1);Foo.prototype.b1=JSCompiler_unstubMethod(1,function(){Foo.prototype.b2=JSCompiler_stubMethod(0)});
var y=new Foo;y.b1();Foo.prototype.b2=JSCompiler_unstubMethod(0,function(){var x=1;Foo.prototype.b3=function(){x}});y=new Foo;z.b2();y=new Foo;z.b3()
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        VAR 1 [source_file: expected0]
            NAME JSCompiler_stubMap 1 [source_file: expected0]
                ARRAYLIT 1 [source_file: expected0]
        FUNCTION JSCompiler_stubMethod 1 [source_file: expected0]
            NAME JSCompiler_stubMethod 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
                NAME JSCompiler_stubMethod_id 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                RETURN 1 [source_file: expected0]
                    FUNCTION  1 [source_file: expected0]
                        NAME  1 [source_file: expected0]
                        PARAM_LIST 1 [source_file: expected0]
                        BLOCK 1 [source_file: expected0]
                            RETURN 1 [source_file: expected0]
                                CALL 1 [source_file: expected0]
                                    GETPROP 1 [source_file: expected0]
                                        GETELEM 1 [source_file: expected0]
                                            NAME JSCompiler_stubMap 1 [source_file: expected0]
                                            NAME JSCompiler_stubMethod_id 1 [source_file: expected0]
                                        STRING apply 1 [source_file: expected0]
                                    THIS 1 [source_file: expected0]
                                    NAME arguments 1 [source_file: expected0]
        FUNCTION JSCompiler_unstubMethod 1 [source_file: expected0]
            NAME JSCompiler_unstubMethod 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
                NAME JSCompiler_unstubMethod_id 1 [source_file: expected0]
                NAME JSCompiler_unstubMethod_body 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                RETURN 1 [source_file: expected0]
                    ASSIGN 1 [source_file: expected0]
                        GETELEM 1 [source_file: expected0]
                            NAME JSCompiler_stubMap 1 [source_file: expected0]
                            NAME JSCompiler_unstubMethod_id 1 [source_file: expected0]
                        NAME JSCompiler_unstubMethod_body 1 [source_file: expected0]
        FUNCTION Foo 1 [source_file: expected0]
            NAME Foo 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            ASSIGN 1 [source_file: expected0]
                GETPROP 1 [source_file: expected0]
                    GETPROP 1 [source_file: expected0]
                        NAME Foo 1 [source_file: expected0]
                        STRING prototype 1 [source_file: expected0]
                    STRING b1 1 [source_file: expected0]
                CALL 1 [free_call: 1] [source_file: expected0]
                    NAME JSCompiler_stubMethod 1 [source_file: expected0]
                    NUMBER 0.0 1 [source_file: expected0]
    SCRIPT 1 [synthetic: 1] [source_file: expected1] [input_id: InputId: expected1]
        EXPR_RESULT 1 [source_file: expected1]
            ASSIGN 1 [source_file: expected1]
                GETPROP 1 [source_file: expected1]
                    GETPROP 1 [source_file: expected1]
                        NAME Foo 1 [source_file: expected1]
                        STRING prototype 1 [source_file: expected1]
                    STRING b1 1 [source_file: expected1]
                CALL 1 [free_call: 1] [source_file: expected1]
                    NAME JSCompiler_unstubMethod 1 [source_file: expected1]
                    NUMBER 0.0 1 [source_file: expected1]
                    FUNCTION  1 [source_file: expected1]
                        NAME  1 [source_file: expected1]
                        PARAM_LIST 1 [source_file: expected1]
                        BLOCK 1 [source_file: expected1]
                            EXPR_RESULT 1 [source_file: expected1]
                                ASSIGN 1 [source_file: expected1]
                                    GETPROP 1 [source_file: expected1]
                                        GETPROP 1 [source_file: expected1]
                                            NAME Foo 1 [source_file: expected1]
                                            STRING prototype 1 [source_file: expected1]
                                        STRING b2 1 [source_file: expected1]
                                    CALL 1 [free_call: 1] [source_file: expected1]
                                        NAME JSCompiler_stubMethod 1 [source_file: expected1]
                                        NUMBER 1.0 1 [source_file: expected1]
        VAR 1 [source_file: expected1]
            NAME y 1 [source_file: expected1]
                NEW 1 [source_file: expected1]
                    NAME Foo 1 [source_file: expected1]
        EXPR_RESULT 1 [source_file: expected1]
            CALL 1 [source_file: expected1]
                GETPROP 1 [source_file: expected1]
                    NAME y 1 [source_file: expected1]
                    STRING b1 1 [source_file: expected1]
    SCRIPT 1 [synthetic: 1] [source_file: expected2] [input_id: InputId: expected2]
        EXPR_RESULT 1 [source_file: expected2]
            ASSIGN 1 [source_file: expected2]
                GETPROP 1 [source_file: expected2]
                    GETPROP 1 [source_file: expected2]
                        NAME Foo 1 [source_file: expected2]
                        STRING prototype 1 [source_file: expected2]
                    STRING b2 1 [source_file: expected2]
                CALL 1 [free_call: 1] [source_file: expected2]
                    NAME JSCompiler_unstubMethod 1 [source_file: expected2]
                    NUMBER 1.0 1 [source_file: expected2]
                    FUNCTION  1 [source_file: expected2]
                        NAME  1 [source_file: expected2]
                        PARAM_LIST 1 [source_file: expected2]
                        BLOCK 1 [source_file: expected2]
                            VAR 1 [source_file: expected2]
                                NAME x 1 [source_file: expected2]
                                    NUMBER 1.0 1 [source_file: expected2]
                            EXPR_RESULT 1 [source_file: expected2]
                                ASSIGN 1 [source_file: expected2]
                                    GETPROP 1 [source_file: expected2]
                                        GETPROP 1 [source_file: expected2]
                                            NAME Foo 1 [source_file: expected2]
                                            STRING prototype 1 [source_file: expected2]
                                        STRING b3 1 [source_file: expected2]
                                    FUNCTION  1 [source_file: expected2]
                                        NAME  1 [source_file: expected2]
                                        PARAM_LIST 1 [source_file: expected2]
                                        BLOCK 1 [source_file: expected2]
                                            EXPR_RESULT 1 [source_file: expected2]
                                                NAME x 1 [source_file: expected2]
        EXPR_RESULT 1 [source_file: expected2]
            ASSIGN 1 [source_file: expected2]
                NAME y 1 [source_file: expected2]
                NEW 1 [source_file: expected2]
                    NAME Foo 1 [source_file: expected2]
        EXPR_RESULT 1 [source_file: expected2]
            CALL 1 [source_file: expected2]
                GETPROP 1 [source_file: expected2]
                    NAME z 1 [source_file: expected2]
                    STRING b2 1 [source_file: expected2]
    SCRIPT 1 [synthetic: 1] [source_file: expected3] [input_id: InputId: expected3]
        EXPR_RESULT 1 [source_file: expected3]
            ASSIGN 1 [source_file: expected3]
                NAME y 1 [source_file: expected3]
                NEW 1 [source_file: expected3]
                    NAME Foo 1 [source_file: expected3]
        EXPR_RESULT 1 [source_file: expected3]
            CALL 1 [source_file: expected3]
                GETPROP 1 [source_file: expected3]
                    NAME z 1 [source_file: expected3]
                    STRING b3 1 [source_file: expected3]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: i0] [input_id: InputId: i0]
        VAR 1 [source_file:  [synthetic:1] ]
            NAME JSCompiler_stubMap 1 [source_file:  [synthetic:1] ]
                ARRAYLIT 1 [source_file:  [synthetic:1] ]
        FUNCTION JSCompiler_stubMethod 1 [source_file:  [synthetic:1] ]
            NAME JSCompiler_stubMethod 1 [source_file:  [synthetic:1] ]
            PARAM_LIST 1 [source_file:  [synthetic:1] ]
                NAME JSCompiler_stubMethod_id 1 [source_file:  [synthetic:1] ]
            BLOCK 1 [source_file:  [synthetic:1] ]
                RETURN 1 [source_file:  [synthetic:1] ]
                    FUNCTION  1 [source_file:  [synthetic:1] ]
                        NAME  1 [source_file:  [synthetic:1] ]
                        PARAM_LIST 1 [source_file:  [synthetic:1] ]
                        BLOCK 1 [source_file:  [synthetic:1] ]
                            RETURN 1 [source_file:  [synthetic:1] ]
                                CALL 1 [source_file:  [synthetic:1] ]
                                    GETPROP 1 [source_file:  [synthetic:1] ]
                                        GETELEM 1 [source_file:  [synthetic:1] ]
                                            NAME JSCompiler_stubMap 1 [source_file:  [synthetic:1] ]
                                            NAME JSCompiler_stubMethod_id 1 [source_file:  [synthetic:1] ]
                                        STRING apply 1 [source_file:  [synthetic:1] ]
                                    THIS 1 [source_file:  [synthetic:1] ]
                                    NAME arguments 1 [source_file:  [synthetic:1] ]
        FUNCTION JSCompiler_unstubMethod 1 [source_file:  [synthetic:1] ]
            NAME JSCompiler_unstubMethod 1 [source_file:  [synthetic:1] ]
            PARAM_LIST 1 [source_file:  [synthetic:1] ]
                NAME JSCompiler_unstubMethod_id 1 [source_file:  [synthetic:1] ]
                NAME JSCompiler_unstubMethod_body 1 [source_file:  [synthetic:1] ]
            BLOCK 1 [source_file:  [synthetic:1] ]
                RETURN 1 [source_file:  [synthetic:1] ]
                    ASSIGN 1 [source_file:  [synthetic:1] ]
                        GETELEM 1 [source_file:  [synthetic:1] ]
                            NAME JSCompiler_stubMap 1 [source_file:  [synthetic:1] ]
                            NAME JSCompiler_unstubMethod_id 1 [source_file:  [synthetic:1] ]
                        NAME JSCompiler_unstubMethod_body 1 [source_file:  [synthetic:1] ]
        FUNCTION Foo 1 [source_file: i0]
            NAME Foo 1 [source_file: i0]
            PARAM_LIST 1 [source_file: i0]
            BLOCK 1 [source_file: i0]
        EXPR_RESULT 1 [source_file: i0]
            ASSIGN 1 [source_file: i0]
                GETPROP 1 [source_file: i0]
                    GETPROP 1 [source_file: i0]
                        NAME Foo 1 [source_file: i0]
                        STRING prototype 1 [source_file: i0]
                    STRING b1 1 [source_file: i0]
                CALL 1 [free_call: 1] [source_file: i0]
                    NAME JSCompiler_stubMethod 1 [source_file: i0]
                    NUMBER 1.0 1 [source_file: i0]
    SCRIPT 1 [synthetic: 1] [source_file: i1] [input_id: InputId: i1]
        EXPR_RESULT 1 [source_file: i0]
            ASSIGN 1 [source_file: i0]
                GETPROP 1 [source_file: i0]
                    GETPROP 1 [source_file: i0]
                        NAME Foo 1 [source_file: i0]
                        STRING prototype 1 [source_file: i0]
                    STRING b1 1 [source_file: i0]
                CALL 1 [free_call: 1] [source_file: i0]
                    NAME JSCompiler_unstubMethod 1 [source_file: i0]
                    NUMBER 1.0 1 [source_file: i0]
                    FUNCTION  1 [source_file: i0]
                        NAME  1 [source_file: i0]
                        PARAM_LIST 1 [source_file: i0]
                        BLOCK 1 [source_file: i0]
                            EXPR_RESULT 1 [source_file: i0]
                                ASSIGN 1 [source_file: i0]
                                    GETPROP 1 [source_file: i0]
                                        GETPROP 1 [source_file: i0]
                                            NAME Foo 1 [source_file: i0]
                                            STRING prototype 1 [source_file: i0]
                                        STRING b2 1 [source_file: i0]
                                    CALL 1 [free_call: 1] [source_file: i0]
                                        NAME JSCompiler_stubMethod 1 [source_file: i0]
                                        NUMBER 0.0 1 [source_file: i0]
        VAR 1 [source_file: i1]
            NAME y 1 [source_file: i1]
                NEW 1 [source_file: i1]
                    NAME Foo 1 [source_file: i1]
        EXPR_RESULT 1 [source_file: i1]
            CALL 1 [source_file: i1]
                GETPROP 1 [source_file: i1]
                    NAME y 1 [source_file: i1]
                    STRING b1 1 [source_file: i1]
    SCRIPT 1 [synthetic: 1] [source_file: i2] [input_id: InputId: i2]
        EXPR_RESULT 1 [source_file: i0]
            ASSIGN 1 [source_file: i0]
                GETPROP 1 [source_file: i0]
                    GETPROP 1 [source_file: i0]
                        NAME Foo 1 [source_file: i0]
                        STRING prototype 1 [source_file: i0]
                    STRING b2 1 [source_file: i0]
                CALL 1 [free_call: 1] [source_file: i0]
                    NAME JSCompiler_unstubMethod 1 [source_file: i0]
                    NUMBER 0.0 1 [source_file: i0]
                    FUNCTION  1 [source_file: i0]
                        NAME  1 [source_file: i0]
                        PARAM_LIST 1 [source_file: i0]
                        BLOCK 1 [source_file: i0]
                            VAR 1 [source_file: i0]
                                NAME x 1 [source_file: i0]
                                    NUMBER 1.0 1 [source_file: i0]
                            EXPR_RESULT 1 [source_file: i0]
                                ASSIGN 1 [source_file: i0]
                                    GETPROP 1 [source_file: i0]
                                        GETPROP 1 [source_file: i0]
                                            NAME Foo 1 [source_file: i0]
                                            STRING prototype 1 [source_file: i0]
                                        STRING b3 1 [source_file: i0]
                                    FUNCTION  1 [source_file: i0]
                                        NAME  1 [source_file: i0]
                                        PARAM_LIST 1 [source_file: i0]
                                        BLOCK 1 [source_file: i0]
                                            EXPR_RESULT 1 [source_file: i0]
                                                NAME x 1 [source_file: i0]
        EXPR_RESULT 1 [source_file: i2]
            ASSIGN 1 [source_file: i2]
                NAME y 1 [source_file: i2]
                NEW 1 [source_file: i2]
                    NAME Foo 1 [source_file: i2]
        EXPR_RESULT 1 [source_file: i2]
            CALL 1 [source_file: i2]
                GETPROP 1 [source_file: i2]
                    NAME z 1 [source_file: i2]
                    STRING b2 1 [source_file: i2]
    SCRIPT 1 [synthetic: 1] [source_file: i3] [input_id: InputId: i3]
        EXPR_RESULT 1 [source_file: i3]
            ASSIGN 1 [source_file: i3]
                NAME y 1 [source_file: i3]
                NEW 1 [source_file: i3]
                    NAME Foo 1 [source_file: i3]
        EXPR_RESULT 1 [source_file: i3]
            CALL 1 [source_file: i3]
                GETPROP 1 [source_file: i3]
                    NAME z 1 [source_file: i3]
                    STRING b3 1 [source_file: i3]


Subtree1: NUMBER 0.0 1 [source_file: expected0]


Subtree2: NUMBER 1.0 1 [source_file: i0]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:928)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:736)

19:29:47.025 [pool-3-thread-1] DEBUG tests.output - Failing tests with false: 
[testDontRemoveBreakInTryFinallySwitch(com.google.javascript.jscomp.UnreachableCodeEliminationTest): 
Expected: function f(){b:try{throw 9;}finally{switch(x){case 1:break b}}return 1}
Result: function f(){b:try{throw 9;}finally{switch(x){case 1:}}return 1}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION f 1 [source_file: expected0]
            NAME f 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                LABEL 1 [source_file: expected0]
                    LABEL_NAME b 1 [source_file: expected0]
                    TRY 1 [source_file: expected0]
                        BLOCK 1 [source_file: expected0]
                            THROW 1 [source_file: expected0]
                                NUMBER 9.0 1 [source_file: expected0]
                        BLOCK 1 [source_file: expected0]
                        BLOCK 1 [source_file: expected0]
                            SWITCH 1 [source_file: expected0]
                                NAME x 1 [source_file: expected0]
                                CASE 1 [source_file: expected0]
                                    NUMBER 1.0 1 [source_file: expected0]
                                    BLOCK 1 [synthetic: 1] [source_file: expected0]
                                        BREAK 1 [source_file: expected0]
                                            LABEL_NAME b 1 [source_file: expected0]
                RETURN 1 [source_file: expected0]
                    NUMBER 1.0 1 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION f 1 [source_file: testcode]
            NAME f 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                LABEL 1 [source_file: testcode]
                    LABEL_NAME b 1 [source_file: testcode]
                    TRY 1 [source_file: testcode]
                        BLOCK 1 [source_file: testcode]
                            THROW 1 [source_file: testcode]
                                NUMBER 9.0 1 [source_file: testcode]
                        BLOCK 1 [source_file: testcode]
                        BLOCK 1 [source_file: testcode]
                            SWITCH 1 [source_file: testcode]
                                NAME x 1 [source_file: testcode]
                                CASE 1 [source_file: testcode]
                                    NUMBER 1.0 1 [source_file: testcode]
                                    BLOCK 1 [synthetic: 1] [source_file: testcode]
                RETURN 1 [source_file: testcode]
                    NUMBER 1.0 1 [source_file: testcode]


Subtree1: BLOCK 1 [synthetic: 1] [source_file: expected0]
    BREAK 1 [source_file: expected0]
        LABEL_NAME b 1 [source_file: expected0]


Subtree2: BLOCK 1 [synthetic: 1] [source_file: testcode]
, testIssue4177428_continue(com.google.javascript.jscomp.UnreachableCodeEliminationTest): 
Expected: f=function(){var action;a:do{var proto=null;try{proto=new Proto}finally{action=proto;continue a}}while(false);alert(action)}
Result: f=function(){var action;a:do{var proto=null;try{proto=new Proto}finally{action=proto}}while(false);alert(action)}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            ASSIGN 1 [source_file: expected0]
                NAME f 1 [source_file: expected0]
                FUNCTION  1 [source_file: expected0]
                    NAME  1 [source_file: expected0]
                    PARAM_LIST 1 [source_file: expected0]
                    BLOCK 1 [source_file: expected0]
                        VAR 2 [source_file: expected0]
                            NAME action 2 [source_file: expected0]
                        LABEL 3 [source_file: expected0]
                            LABEL_NAME a 3 [source_file: expected0]
                            DO 3 [source_file: expected0]
                                BLOCK 3 [source_file: expected0]
                                    VAR 4 [source_file: expected0]
                                        NAME proto 4 [source_file: expected0]
                                            NULL 4 [source_file: expected0]
                                    TRY 5 [source_file: expected0]
                                        BLOCK 5 [source_file: expected0]
                                            EXPR_RESULT 6 [source_file: expected0]
                                                ASSIGN 6 [source_file: expected0]
                                                    NAME proto 6 [source_file: expected0]
                                                    NEW 6 [source_file: expected0]
                                                        NAME Proto 6 [source_file: expected0]
                                        BLOCK 7 [source_file: expected0]
                                        BLOCK 7 [source_file: expected0]
                                            EXPR_RESULT 8 [source_file: expected0]
                                                ASSIGN 8 [source_file: expected0]
                                                    NAME action 8 [source_file: expected0]
                                                    NAME proto 8 [source_file: expected0]
                                            CONTINUE 9 [source_file: expected0]
                                                LABEL_NAME a 9 [source_file: expected0]
                                FALSE 11 [source_file: expected0]
                        EXPR_RESULT 12 [source_file: expected0]
                            CALL 12 [free_call: 1] [source_file: expected0]
                                NAME alert 12 [source_file: expected0]
                                NAME action 12 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        EXPR_RESULT 1 [source_file: testcode]
            ASSIGN 1 [source_file: testcode]
                NAME f 1 [source_file: testcode]
                FUNCTION  1 [source_file: testcode]
                    NAME  1 [source_file: testcode]
                    PARAM_LIST 1 [source_file: testcode]
                    BLOCK 1 [source_file: testcode]
                        VAR 2 [source_file: testcode]
                            NAME action 2 [source_file: testcode]
                        LABEL 3 [source_file: testcode]
                            LABEL_NAME a 3 [source_file: testcode]
                            DO 3 [source_file: testcode]
                                BLOCK 3 [source_file: testcode]
                                    VAR 4 [source_file: testcode]
                                        NAME proto 4 [source_file: testcode]
                                            NULL 4 [source_file: testcode]
                                    TRY 5 [source_file: testcode]
                                        BLOCK 5 [source_file: testcode]
                                            EXPR_RESULT 6 [source_file: testcode]
                                                ASSIGN 6 [source_file: testcode]
                                                    NAME proto 6 [source_file: testcode]
                                                    NEW 6 [source_file: testcode]
                                                        NAME Proto 6 [source_file: testcode]
                                        BLOCK 7 [source_file: testcode]
                                        BLOCK 7 [source_file: testcode]
                                            EXPR_RESULT 8 [source_file: testcode]
                                                ASSIGN 8 [source_file: testcode]
                                                    NAME action 8 [source_file: testcode]
                                                    NAME proto 8 [source_file: testcode]
                                FALSE 11 [source_file: testcode]
                        EXPR_RESULT 12 [source_file: testcode]
                            CALL 12 [free_call: 1] [source_file: testcode]
                                NAME alert 12 [source_file: testcode]
                                NAME action 12 [source_file: testcode]


Subtree1: BLOCK 7 [source_file: expected0]
    EXPR_RESULT 8 [source_file: expected0]
        ASSIGN 8 [source_file: expected0]
            NAME action 8 [source_file: expected0]
            NAME proto 8 [source_file: expected0]
    CONTINUE 9 [source_file: expected0]
        LABEL_NAME a 9 [source_file: expected0]


Subtree2: BLOCK 7 [source_file: testcode]
    EXPR_RESULT 8 [source_file: testcode]
        ASSIGN 8 [source_file: testcode]
            NAME action 8 [source_file: testcode]
            NAME proto 8 [source_file: testcode]
, testIssue4177428c(com.google.javascript.jscomp.UnreachableCodeEliminationTest): 
Expected: f=function(){var action;a:{var proto=null;try{}finally{try{proto=new Proto}finally{action=proto;break a}}}alert(action)}
Result: f=function(){var action;a:{var proto=null;try{}finally{try{proto=new Proto}finally{action=proto}}}alert(action)}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            ASSIGN 1 [source_file: expected0]
                NAME f 1 [source_file: expected0]
                FUNCTION  1 [source_file: expected0]
                    NAME  1 [source_file: expected0]
                    PARAM_LIST 1 [source_file: expected0]
                    BLOCK 1 [source_file: expected0]
                        VAR 2 [source_file: expected0]
                            NAME action 2 [source_file: expected0]
                        LABEL 3 [source_file: expected0]
                            LABEL_NAME a 3 [source_file: expected0]
                            BLOCK 3 [source_file: expected0]
                                VAR 4 [source_file: expected0]
                                    NAME proto 4 [source_file: expected0]
                                        NULL 4 [source_file: expected0]
                                TRY 5 [source_file: expected0]
                                    BLOCK 5 [source_file: expected0]
                                    BLOCK 6 [source_file: expected0]
                                    BLOCK 6 [source_file: expected0]
                                        TRY 7 [source_file: expected0]
                                            BLOCK 7 [source_file: expected0]
                                                EXPR_RESULT 8 [source_file: expected0]
                                                    ASSIGN 8 [source_file: expected0]
                                                        NAME proto 8 [source_file: expected0]
                                                        NEW 8 [source_file: expected0]
                                                            NAME Proto 8 [source_file: expected0]
                                            BLOCK 9 [source_file: expected0]
                                            BLOCK 9 [source_file: expected0]
                                                EXPR_RESULT 10 [source_file: expected0]
                                                    ASSIGN 10 [source_file: expected0]
                                                        NAME action 10 [source_file: expected0]
                                                        NAME proto 10 [source_file: expected0]
                                                BREAK 11 [source_file: expected0]
                                                    LABEL_NAME a 11 [source_file: expected0]
                        EXPR_RESULT 15 [source_file: expected0]
                            CALL 15 [free_call: 1] [source_file: expected0]
                                NAME alert 15 [source_file: expected0]
                                NAME action 15 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        EXPR_RESULT 1 [source_file: testcode]
            ASSIGN 1 [source_file: testcode]
                NAME f 1 [source_file: testcode]
                FUNCTION  1 [source_file: testcode]
                    NAME  1 [source_file: testcode]
                    PARAM_LIST 1 [source_file: testcode]
                    BLOCK 1 [source_file: testcode]
                        VAR 2 [source_file: testcode]
                            NAME action 2 [source_file: testcode]
                        LABEL 3 [source_file: testcode]
                            LABEL_NAME a 3 [source_file: testcode]
                            BLOCK 3 [source_file: testcode]
                                VAR 4 [source_file: testcode]
                                    NAME proto 4 [source_file: testcode]
                                        NULL 4 [source_file: testcode]
                                TRY 5 [source_file: testcode]
                                    BLOCK 5 [source_file: testcode]
                                    BLOCK 6 [source_file: testcode]
                                    BLOCK 6 [source_file: testcode]
                                        TRY 7 [source_file: testcode]
                                            BLOCK 7 [source_file: testcode]
                                                EXPR_RESULT 8 [source_file: testcode]
                                                    ASSIGN 8 [source_file: testcode]
                                                        NAME proto 8 [source_file: testcode]
                                                        NEW 8 [source_file: testcode]
                                                            NAME Proto 8 [source_file: testcode]
                                            BLOCK 9 [source_file: testcode]
                                            BLOCK 9 [source_file: testcode]
                                                EXPR_RESULT 10 [source_file: testcode]
                                                    ASSIGN 10 [source_file: testcode]
                                                        NAME action 10 [source_file: testcode]
                                                        NAME proto 10 [source_file: testcode]
                        EXPR_RESULT 15 [source_file: testcode]
                            CALL 15 [free_call: 1] [source_file: testcode]
                                NAME alert 15 [source_file: testcode]
                                NAME action 15 [source_file: testcode]


Subtree1: BLOCK 9 [source_file: expected0]
    EXPR_RESULT 10 [source_file: expected0]
        ASSIGN 10 [source_file: expected0]
            NAME action 10 [source_file: expected0]
            NAME proto 10 [source_file: expected0]
    BREAK 11 [source_file: expected0]
        LABEL_NAME a 11 [source_file: expected0]


Subtree2: BLOCK 9 [source_file: testcode]
    EXPR_RESULT 10 [source_file: testcode]
        ASSIGN 10 [source_file: testcode]
            NAME action 10 [source_file: testcode]
            NAME proto 10 [source_file: testcode]
, testIssue4177428_return(com.google.javascript.jscomp.UnreachableCodeEliminationTest): 
Expected: f=function(){var action;a:{var proto=null;try{proto=new Proto}finally{action=proto;return}}}
Result: f=function(){var action;a:{var proto=null;try{proto=new Proto}finally{action=proto}}}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            ASSIGN 1 [source_file: expected0]
                NAME f 1 [source_file: expected0]
                FUNCTION  1 [source_file: expected0]
                    NAME  1 [source_file: expected0]
                    PARAM_LIST 1 [source_file: expected0]
                    BLOCK 1 [source_file: expected0]
                        VAR 2 [source_file: expected0]
                            NAME action 2 [source_file: expected0]
                        LABEL 3 [source_file: expected0]
                            LABEL_NAME a 3 [source_file: expected0]
                            BLOCK 3 [source_file: expected0]
                                VAR 4 [source_file: expected0]
                                    NAME proto 4 [source_file: expected0]
                                        NULL 4 [source_file: expected0]
                                TRY 5 [source_file: expected0]
                                    BLOCK 5 [source_file: expected0]
                                        EXPR_RESULT 6 [source_file: expected0]
                                            ASSIGN 6 [source_file: expected0]
                                                NAME proto 6 [source_file: expected0]
                                                NEW 6 [source_file: expected0]
                                                    NAME Proto 6 [source_file: expected0]
                                    BLOCK 7 [source_file: expected0]
                                    BLOCK 7 [source_file: expected0]
                                        EXPR_RESULT 8 [source_file: expected0]
                                            ASSIGN 8 [source_file: expected0]
                                                NAME action 8 [source_file: expected0]
                                                NAME proto 8 [source_file: expected0]
                                        RETURN 9 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        EXPR_RESULT 1 [source_file: testcode]
            ASSIGN 1 [source_file: testcode]
                NAME f 1 [source_file: testcode]
                FUNCTION  1 [source_file: testcode]
                    NAME  1 [source_file: testcode]
                    PARAM_LIST 1 [source_file: testcode]
                    BLOCK 1 [source_file: testcode]
                        VAR 2 [source_file: testcode]
                            NAME action 2 [source_file: testcode]
                        LABEL 3 [source_file: testcode]
                            LABEL_NAME a 3 [source_file: testcode]
                            BLOCK 3 [source_file: testcode]
                                VAR 4 [source_file: testcode]
                                    NAME proto 4 [source_file: testcode]
                                        NULL 4 [source_file: testcode]
                                TRY 5 [source_file: testcode]
                                    BLOCK 5 [source_file: testcode]
                                        EXPR_RESULT 6 [source_file: testcode]
                                            ASSIGN 6 [source_file: testcode]
                                                NAME proto 6 [source_file: testcode]
                                                NEW 6 [source_file: testcode]
                                                    NAME Proto 6 [source_file: testcode]
                                    BLOCK 7 [source_file: testcode]
                                    BLOCK 7 [source_file: testcode]
                                        EXPR_RESULT 8 [source_file: testcode]
                                            ASSIGN 8 [source_file: testcode]
                                                NAME action 8 [source_file: testcode]
                                                NAME proto 8 [source_file: testcode]


Subtree1: BLOCK 7 [source_file: expected0]
    EXPR_RESULT 8 [source_file: expected0]
        ASSIGN 8 [source_file: expected0]
            NAME action 8 [source_file: expected0]
            NAME proto 8 [source_file: expected0]
    RETURN 9 [source_file: expected0]


Subtree2: BLOCK 7 [source_file: testcode]
    EXPR_RESULT 8 [source_file: testcode]
        ASSIGN 8 [source_file: testcode]
            NAME action 8 [source_file: testcode]
            NAME proto 8 [source_file: testcode]
, testIssue4177428a(com.google.javascript.jscomp.UnreachableCodeEliminationTest): 
Expected: f=function(){var action;a:{var proto=null;try{proto=new Proto}finally{action=proto;break a}}alert(action)}
Result: f=function(){var action;a:{var proto=null;try{proto=new Proto}finally{action=proto}}alert(action)}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            ASSIGN 1 [source_file: expected0]
                NAME f 1 [source_file: expected0]
                FUNCTION  1 [source_file: expected0]
                    NAME  1 [source_file: expected0]
                    PARAM_LIST 1 [source_file: expected0]
                    BLOCK 1 [source_file: expected0]
                        VAR 2 [source_file: expected0]
                            NAME action 2 [source_file: expected0]
                        LABEL 3 [source_file: expected0]
                            LABEL_NAME a 3 [source_file: expected0]
                            BLOCK 3 [source_file: expected0]
                                VAR 4 [source_file: expected0]
                                    NAME proto 4 [source_file: expected0]
                                        NULL 4 [source_file: expected0]
                                TRY 5 [source_file: expected0]
                                    BLOCK 5 [source_file: expected0]
                                        EXPR_RESULT 6 [source_file: expected0]
                                            ASSIGN 6 [source_file: expected0]
                                                NAME proto 6 [source_file: expected0]
                                                NEW 6 [source_file: expected0]
                                                    NAME Proto 6 [source_file: expected0]
                                    BLOCK 7 [source_file: expected0]
                                    BLOCK 7 [source_file: expected0]
                                        EXPR_RESULT 8 [source_file: expected0]
                                            ASSIGN 8 [source_file: expected0]
                                                NAME action 8 [source_file: expected0]
                                                NAME proto 8 [source_file: expected0]
                                        BREAK 9 [source_file: expected0]
                                            LABEL_NAME a 9 [source_file: expected0]
                        EXPR_RESULT 12 [source_file: expected0]
                            CALL 12 [free_call: 1] [source_file: expected0]
                                NAME alert 12 [source_file: expected0]
                                NAME action 12 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        EXPR_RESULT 1 [source_file: testcode]
            ASSIGN 1 [source_file: testcode]
                NAME f 1 [source_file: testcode]
                FUNCTION  1 [source_file: testcode]
                    NAME  1 [source_file: testcode]
                    PARAM_LIST 1 [source_file: testcode]
                    BLOCK 1 [source_file: testcode]
                        VAR 2 [source_file: testcode]
                            NAME action 2 [source_file: testcode]
                        LABEL 3 [source_file: testcode]
                            LABEL_NAME a 3 [source_file: testcode]
                            BLOCK 3 [source_file: testcode]
                                VAR 4 [source_file: testcode]
                                    NAME proto 4 [source_file: testcode]
                                        NULL 4 [source_file: testcode]
                                TRY 5 [source_file: testcode]
                                    BLOCK 5 [source_file: testcode]
                                        EXPR_RESULT 6 [source_file: testcode]
                                            ASSIGN 6 [source_file: testcode]
                                                NAME proto 6 [source_file: testcode]
                                                NEW 6 [source_file: testcode]
                                                    NAME Proto 6 [source_file: testcode]
                                    BLOCK 7 [source_file: testcode]
                                    BLOCK 7 [source_file: testcode]
                                        EXPR_RESULT 8 [source_file: testcode]
                                            ASSIGN 8 [source_file: testcode]
                                                NAME action 8 [source_file: testcode]
                                                NAME proto 8 [source_file: testcode]
                        EXPR_RESULT 12 [source_file: testcode]
                            CALL 12 [free_call: 1] [source_file: testcode]
                                NAME alert 12 [source_file: testcode]
                                NAME action 12 [source_file: testcode]


Subtree1: BLOCK 7 [source_file: expected0]
    EXPR_RESULT 8 [source_file: expected0]
        ASSIGN 8 [source_file: expected0]
            NAME action 8 [source_file: expected0]
            NAME proto 8 [source_file: expected0]
    BREAK 9 [source_file: expected0]
        LABEL_NAME a 9 [source_file: expected0]


Subtree2: BLOCK 7 [source_file: testcode]
    EXPR_RESULT 8 [source_file: testcode]
        ASSIGN 8 [source_file: testcode]
            NAME action 8 [source_file: testcode]
            NAME proto 8 [source_file: testcode]
, testDontRemoveBreakInTryFinally(com.google.javascript.jscomp.UnreachableCodeEliminationTest): 
Expected: function f(){b:try{throw 9;}finally{break b}return 1}
Result: function f(){b:try{throw 9;}finally{}return 1}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION f 1 [source_file: expected0]
            NAME f 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                LABEL 1 [source_file: expected0]
                    LABEL_NAME b 1 [source_file: expected0]
                    TRY 1 [source_file: expected0]
                        BLOCK 1 [source_file: expected0]
                            THROW 1 [source_file: expected0]
                                NUMBER 9.0 1 [source_file: expected0]
                        BLOCK 1 [source_file: expected0]
                        BLOCK 1 [source_file: expected0]
                            BREAK 1 [source_file: expected0]
                                LABEL_NAME b 1 [source_file: expected0]
                RETURN 1 [source_file: expected0]
                    NUMBER 1.0 1 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION f 1 [source_file: testcode]
            NAME f 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                LABEL 1 [source_file: testcode]
                    LABEL_NAME b 1 [source_file: testcode]
                    TRY 1 [source_file: testcode]
                        BLOCK 1 [source_file: testcode]
                            THROW 1 [source_file: testcode]
                                NUMBER 9.0 1 [source_file: testcode]
                        BLOCK 1 [source_file: testcode]
                        BLOCK 1 [source_file: testcode]
                RETURN 1 [source_file: testcode]
                    NUMBER 1.0 1 [source_file: testcode]


Subtree1: BLOCK 1 [source_file: expected0]
    BREAK 1 [source_file: expected0]
        LABEL_NAME b 1 [source_file: expected0]


Subtree2: BLOCK 1 [source_file: testcode]
, testTwoMethods(com.google.javascript.jscomp.CrossModuleMethodMotionTest): 
Expected: var JSCompiler_stubMap=[];function JSCompiler_stubMethod(JSCompiler_stubMethod_id){return function(){return JSCompiler_stubMap[JSCompiler_stubMethod_id].apply(this,arguments)}}function JSCompiler_unstubMethod(JSCompiler_unstubMethod_id,JSCompiler_unstubMethod_body){return JSCompiler_stubMap[JSCompiler_unstubMethod_id]=JSCompiler_unstubMethod_body}function Foo(){}Foo.prototype.baz=JSCompiler_stubMethod(1);Foo.prototype.callBaz=JSCompiler_stubMethod(0);Foo.prototype.baz=JSCompiler_unstubMethod(1,function(){});
Foo.prototype.callBaz=JSCompiler_unstubMethod(0,function(){this.baz()});(new Foo).callBaz()
Result: var JSCompiler_stubMap=[];function JSCompiler_stubMethod(JSCompiler_stubMethod_id){return function(){return JSCompiler_stubMap[JSCompiler_stubMethod_id].apply(this,arguments)}}function JSCompiler_unstubMethod(JSCompiler_unstubMethod_id,JSCompiler_unstubMethod_body){return JSCompiler_stubMap[JSCompiler_unstubMethod_id]=JSCompiler_unstubMethod_body}function Foo(){}Foo.prototype.baz=JSCompiler_stubMethod(0);Foo.prototype.callBaz=JSCompiler_stubMethod(1);
Foo.prototype.callBaz=JSCompiler_unstubMethod(1,function(){this.baz()});Foo.prototype.baz=JSCompiler_unstubMethod(0,function(){});(new Foo).callBaz()
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        VAR 1 [source_file: expected0]
            NAME JSCompiler_stubMap 1 [source_file: expected0]
                ARRAYLIT 1 [source_file: expected0]
        FUNCTION JSCompiler_stubMethod 1 [source_file: expected0]
            NAME JSCompiler_stubMethod 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
                NAME JSCompiler_stubMethod_id 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                RETURN 1 [source_file: expected0]
                    FUNCTION  1 [source_file: expected0]
                        NAME  1 [source_file: expected0]
                        PARAM_LIST 1 [source_file: expected0]
                        BLOCK 1 [source_file: expected0]
                            RETURN 1 [source_file: expected0]
                                CALL 1 [source_file: expected0]
                                    GETPROP 1 [source_file: expected0]
                                        GETELEM 1 [source_file: expected0]
                                            NAME JSCompiler_stubMap 1 [source_file: expected0]
                                            NAME JSCompiler_stubMethod_id 1 [source_file: expected0]
                                        STRING apply 1 [source_file: expected0]
                                    THIS 1 [source_file: expected0]
                                    NAME arguments 1 [source_file: expected0]
        FUNCTION JSCompiler_unstubMethod 1 [source_file: expected0]
            NAME JSCompiler_unstubMethod 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
                NAME JSCompiler_unstubMethod_id 1 [source_file: expected0]
                NAME JSCompiler_unstubMethod_body 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                RETURN 1 [source_file: expected0]
                    ASSIGN 1 [source_file: expected0]
                        GETELEM 1 [source_file: expected0]
                            NAME JSCompiler_stubMap 1 [source_file: expected0]
                            NAME JSCompiler_unstubMethod_id 1 [source_file: expected0]
                        NAME JSCompiler_unstubMethod_body 1 [source_file: expected0]
        FUNCTION Foo 1 [source_file: expected0]
            NAME Foo 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            ASSIGN 1 [source_file: expected0]
                GETPROP 1 [source_file: expected0]
                    GETPROP 1 [source_file: expected0]
                        NAME Foo 1 [source_file: expected0]
                        STRING prototype 1 [source_file: expected0]
                    STRING baz 1 [source_file: expected0]
                CALL 1 [free_call: 1] [source_file: expected0]
                    NAME JSCompiler_stubMethod 1 [source_file: expected0]
                    NUMBER 1.0 1 [source_file: expected0]
    SCRIPT 1 [synthetic: 1] [source_file: expected1] [input_id: InputId: expected1]
        EXPR_RESULT 1 [source_file: expected1]
            ASSIGN 1 [source_file: expected1]
                GETPROP 1 [source_file: expected1]
                    GETPROP 1 [source_file: expected1]
                        NAME Foo 1 [source_file: expected1]
                        STRING prototype 1 [source_file: expected1]
                    STRING callBaz 1 [source_file: expected1]
                CALL 1 [free_call: 1] [source_file: expected1]
                    NAME JSCompiler_stubMethod 1 [source_file: expected1]
                    NUMBER 0.0 1 [source_file: expected1]
    SCRIPT 1 [synthetic: 1] [source_file: expected2] [input_id: InputId: expected2]
        EXPR_RESULT 1 [source_file: expected2]
            ASSIGN 1 [source_file: expected2]
                GETPROP 1 [source_file: expected2]
                    GETPROP 1 [source_file: expected2]
                        NAME Foo 1 [source_file: expected2]
                        STRING prototype 1 [source_file: expected2]
                    STRING baz 1 [source_file: expected2]
                CALL 1 [free_call: 1] [source_file: expected2]
                    NAME JSCompiler_unstubMethod 1 [source_file: expected2]
                    NUMBER 1.0 1 [source_file: expected2]
                    FUNCTION  1 [source_file: expected2]
                        NAME  1 [source_file: expected2]
                        PARAM_LIST 1 [source_file: expected2]
                        BLOCK 1 [source_file: expected2]
        EXPR_RESULT 1 [source_file: expected2]
            ASSIGN 1 [source_file: expected2]
                GETPROP 1 [source_file: expected2]
                    GETPROP 1 [source_file: expected2]
                        NAME Foo 1 [source_file: expected2]
                        STRING prototype 1 [source_file: expected2]
                    STRING callBaz 1 [source_file: expected2]
                CALL 1 [free_call: 1] [source_file: expected2]
                    NAME JSCompiler_unstubMethod 1 [source_file: expected2]
                    NUMBER 0.0 1 [source_file: expected2]
                    FUNCTION  1 [source_file: expected2]
                        NAME  1 [source_file: expected2]
                        PARAM_LIST 1 [source_file: expected2]
                        BLOCK 1 [source_file: expected2]
                            EXPR_RESULT 1 [source_file: expected2]
                                CALL 1 [source_file: expected2]
                                    GETPROP 1 [source_file: expected2]
                                        THIS 1 [source_file: expected2]
                                        STRING baz 1 [source_file: expected2]
        EXPR_RESULT 1 [source_file: expected2]
            CALL 1 [source_file: expected2]
                GETPROP 1 [source_file: expected2]
                    NEW 1 [source_file: expected2]
                        NAME Foo 1 [source_file: expected2]
                    STRING callBaz 1 [source_file: expected2]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: i0] [input_id: InputId: i0]
        VAR 1 [source_file:  [synthetic:1] ]
            NAME JSCompiler_stubMap 1 [source_file:  [synthetic:1] ]
                ARRAYLIT 1 [source_file:  [synthetic:1] ]
        FUNCTION JSCompiler_stubMethod 1 [source_file:  [synthetic:1] ]
            NAME JSCompiler_stubMethod 1 [source_file:  [synthetic:1] ]
            PARAM_LIST 1 [source_file:  [synthetic:1] ]
                NAME JSCompiler_stubMethod_id 1 [source_file:  [synthetic:1] ]
            BLOCK 1 [source_file:  [synthetic:1] ]
                RETURN 1 [source_file:  [synthetic:1] ]
                    FUNCTION  1 [source_file:  [synthetic:1] ]
                        NAME  1 [source_file:  [synthetic:1] ]
                        PARAM_LIST 1 [source_file:  [synthetic:1] ]
                        BLOCK 1 [source_file:  [synthetic:1] ]
                            RETURN 1 [source_file:  [synthetic:1] ]
                                CALL 1 [source_file:  [synthetic:1] ]
                                    GETPROP 1 [source_file:  [synthetic:1] ]
                                        GETELEM 1 [source_file:  [synthetic:1] ]
                                            NAME JSCompiler_stubMap 1 [source_file:  [synthetic:1] ]
                                            NAME JSCompiler_stubMethod_id 1 [source_file:  [synthetic:1] ]
                                        STRING apply 1 [source_file:  [synthetic:1] ]
                                    THIS 1 [source_file:  [synthetic:1] ]
                                    NAME arguments 1 [source_file:  [synthetic:1] ]
        FUNCTION JSCompiler_unstubMethod 1 [source_file:  [synthetic:1] ]
            NAME JSCompiler_unstubMethod 1 [source_file:  [synthetic:1] ]
            PARAM_LIST 1 [source_file:  [synthetic:1] ]
                NAME JSCompiler_unstubMethod_id 1 [source_file:  [synthetic:1] ]
                NAME JSCompiler_unstubMethod_body 1 [source_file:  [synthetic:1] ]
            BLOCK 1 [source_file:  [synthetic:1] ]
                RETURN 1 [source_file:  [synthetic:1] ]
                    ASSIGN 1 [source_file:  [synthetic:1] ]
                        GETELEM 1 [source_file:  [synthetic:1] ]
                            NAME JSCompiler_stubMap 1 [source_file:  [synthetic:1] ]
                            NAME JSCompiler_unstubMethod_id 1 [source_file:  [synthetic:1] ]
                        NAME JSCompiler_unstubMethod_body 1 [source_file:  [synthetic:1] ]
        FUNCTION Foo 1 [source_file: i0]
            NAME Foo 1 [source_file: i0]
            PARAM_LIST 1 [source_file: i0]
            BLOCK 1 [source_file: i0]
        EXPR_RESULT 1 [source_file: i0]
            ASSIGN 1 [source_file: i0]
                GETPROP 1 [source_file: i0]
                    GETPROP 1 [source_file: i0]
                        NAME Foo 1 [source_file: i0]
                        STRING prototype 1 [source_file: i0]
                    STRING baz 1 [source_file: i0]
                CALL 1 [free_call: 1] [source_file: i0]
                    NAME JSCompiler_stubMethod 1 [source_file: i0]
                    NUMBER 0.0 1 [source_file: i0]
    SCRIPT 1 [synthetic: 1] [source_file: i1] [input_id: InputId: i1]
        EXPR_RESULT 1 [source_file: i1]
            ASSIGN 1 [source_file: i1]
                GETPROP 1 [source_file: i1]
                    GETPROP 1 [source_file: i1]
                        NAME Foo 1 [source_file: i1]
                        STRING prototype 1 [source_file: i1]
                    STRING callBaz 1 [source_file: i1]
                CALL 1 [free_call: 1] [source_file: i1]
                    NAME JSCompiler_stubMethod 1 [source_file: i1]
                    NUMBER 1.0 1 [source_file: i1]
    SCRIPT 1 [synthetic: 1] [source_file: i2] [input_id: InputId: i2]
        EXPR_RESULT 1 [source_file: i1]
            ASSIGN 1 [source_file: i1]
                GETPROP 1 [source_file: i1]
                    GETPROP 1 [source_file: i1]
                        NAME Foo 1 [source_file: i1]
                        STRING prototype 1 [source_file: i1]
                    STRING callBaz 1 [source_file: i1]
                CALL 1 [free_call: 1] [source_file: i1]
                    NAME JSCompiler_unstubMethod 1 [source_file: i1]
                    NUMBER 1.0 1 [source_file: i1]
                    FUNCTION  1 [source_file: i1]
                        NAME  1 [source_file: i1]
                        PARAM_LIST 1 [source_file: i1]
                        BLOCK 1 [source_file: i1]
                            EXPR_RESULT 1 [source_file: i1]
                                CALL 1 [source_file: i1]
                                    GETPROP 1 [source_file: i1]
                                        THIS 1 [source_file: i1]
                                        STRING baz 1 [source_file: i1]
        EXPR_RESULT 1 [source_file: i0]
            ASSIGN 1 [source_file: i0]
                GETPROP 1 [source_file: i0]
                    GETPROP 1 [source_file: i0]
                        NAME Foo 1 [source_file: i0]
                        STRING prototype 1 [source_file: i0]
                    STRING baz 1 [source_file: i0]
                CALL 1 [free_call: 1] [source_file: i0]
                    NAME JSCompiler_unstubMethod 1 [source_file: i0]
                    NUMBER 0.0 1 [source_file: i0]
                    FUNCTION  1 [source_file: i0]
                        NAME  1 [source_file: i0]
                        PARAM_LIST 1 [source_file: i0]
                        BLOCK 1 [source_file: i0]
        EXPR_RESULT 1 [source_file: i2]
            CALL 1 [source_file: i2]
                GETPROP 1 [source_file: i2]
                    NEW 1 [source_file: i2]
                        NAME Foo 1 [source_file: i2]
                    STRING callBaz 1 [source_file: i2]


Subtree1: NUMBER 1.0 1 [source_file: expected0]


Subtree2: NUMBER 0.0 1 [source_file: i0]
, testClosureVariableReads3(com.google.javascript.jscomp.CrossModuleMethodMotionTest): 
Expected: var JSCompiler_stubMap=[];function JSCompiler_stubMethod(JSCompiler_stubMethod_id){return function(){return JSCompiler_stubMap[JSCompiler_stubMethod_id].apply(this,arguments)}}function JSCompiler_unstubMethod(JSCompiler_unstubMethod_id,JSCompiler_unstubMethod_body){return JSCompiler_stubMap[JSCompiler_unstubMethod_id]=JSCompiler_unstubMethod_body}function Foo(){}Foo.prototype.b1=JSCompiler_stubMethod(0);Foo.prototype.b1=JSCompiler_unstubMethod(0,function(){Foo.prototype.b2=JSCompiler_stubMethod(1)});
var y=new Foo;y.b1();Foo.prototype.b2=JSCompiler_unstubMethod(1,function(){var x=1;Foo.prototype.b3=function(){x}});y=new Foo;z.b2();y=new Foo;z.b3()
Result: var JSCompiler_stubMap=[];function JSCompiler_stubMethod(JSCompiler_stubMethod_id){return function(){return JSCompiler_stubMap[JSCompiler_stubMethod_id].apply(this,arguments)}}function JSCompiler_unstubMethod(JSCompiler_unstubMethod_id,JSCompiler_unstubMethod_body){return JSCompiler_stubMap[JSCompiler_unstubMethod_id]=JSCompiler_unstubMethod_body}function Foo(){}Foo.prototype.b1=JSCompiler_stubMethod(1);Foo.prototype.b1=JSCompiler_unstubMethod(1,function(){Foo.prototype.b2=JSCompiler_stubMethod(0)});
var y=new Foo;y.b1();Foo.prototype.b2=JSCompiler_unstubMethod(0,function(){var x=1;Foo.prototype.b3=function(){x}});y=new Foo;z.b2();y=new Foo;z.b3()
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        VAR 1 [source_file: expected0]
            NAME JSCompiler_stubMap 1 [source_file: expected0]
                ARRAYLIT 1 [source_file: expected0]
        FUNCTION JSCompiler_stubMethod 1 [source_file: expected0]
            NAME JSCompiler_stubMethod 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
                NAME JSCompiler_stubMethod_id 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                RETURN 1 [source_file: expected0]
                    FUNCTION  1 [source_file: expected0]
                        NAME  1 [source_file: expected0]
                        PARAM_LIST 1 [source_file: expected0]
                        BLOCK 1 [source_file: expected0]
                            RETURN 1 [source_file: expected0]
                                CALL 1 [source_file: expected0]
                                    GETPROP 1 [source_file: expected0]
                                        GETELEM 1 [source_file: expected0]
                                            NAME JSCompiler_stubMap 1 [source_file: expected0]
                                            NAME JSCompiler_stubMethod_id 1 [source_file: expected0]
                                        STRING apply 1 [source_file: expected0]
                                    THIS 1 [source_file: expected0]
                                    NAME arguments 1 [source_file: expected0]
        FUNCTION JSCompiler_unstubMethod 1 [source_file: expected0]
            NAME JSCompiler_unstubMethod 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
                NAME JSCompiler_unstubMethod_id 1 [source_file: expected0]
                NAME JSCompiler_unstubMethod_body 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                RETURN 1 [source_file: expected0]
                    ASSIGN 1 [source_file: expected0]
                        GETELEM 1 [source_file: expected0]
                            NAME JSCompiler_stubMap 1 [source_file: expected0]
                            NAME JSCompiler_unstubMethod_id 1 [source_file: expected0]
                        NAME JSCompiler_unstubMethod_body 1 [source_file: expected0]
        FUNCTION Foo 1 [source_file: expected0]
            NAME Foo 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            ASSIGN 1 [source_file: expected0]
                GETPROP 1 [source_file: expected0]
                    GETPROP 1 [source_file: expected0]
                        NAME Foo 1 [source_file: expected0]
                        STRING prototype 1 [source_file: expected0]
                    STRING b1 1 [source_file: expected0]
                CALL 1 [free_call: 1] [source_file: expected0]
                    NAME JSCompiler_stubMethod 1 [source_file: expected0]
                    NUMBER 0.0 1 [source_file: expected0]
    SCRIPT 1 [synthetic: 1] [source_file: expected1] [input_id: InputId: expected1]
        EXPR_RESULT 1 [source_file: expected1]
            ASSIGN 1 [source_file: expected1]
                GETPROP 1 [source_file: expected1]
                    GETPROP 1 [source_file: expected1]
                        NAME Foo 1 [source_file: expected1]
                        STRING prototype 1 [source_file: expected1]
                    STRING b1 1 [source_file: expected1]
                CALL 1 [free_call: 1] [source_file: expected1]
                    NAME JSCompiler_unstubMethod 1 [source_file: expected1]
                    NUMBER 0.0 1 [source_file: expected1]
                    FUNCTION  1 [source_file: expected1]
                        NAME  1 [source_file: expected1]
                        PARAM_LIST 1 [source_file: expected1]
                        BLOCK 1 [source_file: expected1]
                            EXPR_RESULT 1 [source_file: expected1]
                                ASSIGN 1 [source_file: expected1]
                                    GETPROP 1 [source_file: expected1]
                                        GETPROP 1 [source_file: expected1]
                                            NAME Foo 1 [source_file: expected1]
                                            STRING prototype 1 [source_file: expected1]
                                        STRING b2 1 [source_file: expected1]
                                    CALL 1 [free_call: 1] [source_file: expected1]
                                        NAME JSCompiler_stubMethod 1 [source_file: expected1]
                                        NUMBER 1.0 1 [source_file: expected1]
        VAR 1 [source_file: expected1]
            NAME y 1 [source_file: expected1]
                NEW 1 [source_file: expected1]
                    NAME Foo 1 [source_file: expected1]
        EXPR_RESULT 1 [source_file: expected1]
            CALL 1 [source_file: expected1]
                GETPROP 1 [source_file: expected1]
                    NAME y 1 [source_file: expected1]
                    STRING b1 1 [source_file: expected1]
    SCRIPT 1 [synthetic: 1] [source_file: expected2] [input_id: InputId: expected2]
        EXPR_RESULT 1 [source_file: expected2]
            ASSIGN 1 [source_file: expected2]
                GETPROP 1 [source_file: expected2]
                    GETPROP 1 [source_file: expected2]
                        NAME Foo 1 [source_file: expected2]
                        STRING prototype 1 [source_file: expected2]
                    STRING b2 1 [source_file: expected2]
                CALL 1 [free_call: 1] [source_file: expected2]
                    NAME JSCompiler_unstubMethod 1 [source_file: expected2]
                    NUMBER 1.0 1 [source_file: expected2]
                    FUNCTION  1 [source_file: expected2]
                        NAME  1 [source_file: expected2]
                        PARAM_LIST 1 [source_file: expected2]
                        BLOCK 1 [source_file: expected2]
                            VAR 1 [source_file: expected2]
                                NAME x 1 [source_file: expected2]
                                    NUMBER 1.0 1 [source_file: expected2]
                            EXPR_RESULT 1 [source_file: expected2]
                                ASSIGN 1 [source_file: expected2]
                                    GETPROP 1 [source_file: expected2]
                                        GETPROP 1 [source_file: expected2]
                                            NAME Foo 1 [source_file: expected2]
                                            STRING prototype 1 [source_file: expected2]
                                        STRING b3 1 [source_file: expected2]
                                    FUNCTION  1 [source_file: expected2]
                                        NAME  1 [source_file: expected2]
                                        PARAM_LIST 1 [source_file: expected2]
                                        BLOCK 1 [source_file: expected2]
                                            EXPR_RESULT 1 [source_file: expected2]
                                                NAME x 1 [source_file: expected2]
        EXPR_RESULT 1 [source_file: expected2]
            ASSIGN 1 [source_file: expected2]
                NAME y 1 [source_file: expected2]
                NEW 1 [source_file: expected2]
                    NAME Foo 1 [source_file: expected2]
        EXPR_RESULT 1 [source_file: expected2]
            CALL 1 [source_file: expected2]
                GETPROP 1 [source_file: expected2]
                    NAME z 1 [source_file: expected2]
                    STRING b2 1 [source_file: expected2]
    SCRIPT 1 [synthetic: 1] [source_file: expected3] [input_id: InputId: expected3]
        EXPR_RESULT 1 [source_file: expected3]
            ASSIGN 1 [source_file: expected3]
                NAME y 1 [source_file: expected3]
                NEW 1 [source_file: expected3]
                    NAME Foo 1 [source_file: expected3]
        EXPR_RESULT 1 [source_file: expected3]
            CALL 1 [source_file: expected3]
                GETPROP 1 [source_file: expected3]
                    NAME z 1 [source_file: expected3]
                    STRING b3 1 [source_file: expected3]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: i0] [input_id: InputId: i0]
        VAR 1 [source_file:  [synthetic:1] ]
            NAME JSCompiler_stubMap 1 [source_file:  [synthetic:1] ]
                ARRAYLIT 1 [source_file:  [synthetic:1] ]
        FUNCTION JSCompiler_stubMethod 1 [source_file:  [synthetic:1] ]
            NAME JSCompiler_stubMethod 1 [source_file:  [synthetic:1] ]
            PARAM_LIST 1 [source_file:  [synthetic:1] ]
                NAME JSCompiler_stubMethod_id 1 [source_file:  [synthetic:1] ]
            BLOCK 1 [source_file:  [synthetic:1] ]
                RETURN 1 [source_file:  [synthetic:1] ]
                    FUNCTION  1 [source_file:  [synthetic:1] ]
                        NAME  1 [source_file:  [synthetic:1] ]
                        PARAM_LIST 1 [source_file:  [synthetic:1] ]
                        BLOCK 1 [source_file:  [synthetic:1] ]
                            RETURN 1 [source_file:  [synthetic:1] ]
                                CALL 1 [source_file:  [synthetic:1] ]
                                    GETPROP 1 [source_file:  [synthetic:1] ]
                                        GETELEM 1 [source_file:  [synthetic:1] ]
                                            NAME JSCompiler_stubMap 1 [source_file:  [synthetic:1] ]
                                            NAME JSCompiler_stubMethod_id 1 [source_file:  [synthetic:1] ]
                                        STRING apply 1 [source_file:  [synthetic:1] ]
                                    THIS 1 [source_file:  [synthetic:1] ]
                                    NAME arguments 1 [source_file:  [synthetic:1] ]
        FUNCTION JSCompiler_unstubMethod 1 [source_file:  [synthetic:1] ]
            NAME JSCompiler_unstubMethod 1 [source_file:  [synthetic:1] ]
            PARAM_LIST 1 [source_file:  [synthetic:1] ]
                NAME JSCompiler_unstubMethod_id 1 [source_file:  [synthetic:1] ]
                NAME JSCompiler_unstubMethod_body 1 [source_file:  [synthetic:1] ]
            BLOCK 1 [source_file:  [synthetic:1] ]
                RETURN 1 [source_file:  [synthetic:1] ]
                    ASSIGN 1 [source_file:  [synthetic:1] ]
                        GETELEM 1 [source_file:  [synthetic:1] ]
                            NAME JSCompiler_stubMap 1 [source_file:  [synthetic:1] ]
                            NAME JSCompiler_unstubMethod_id 1 [source_file:  [synthetic:1] ]
                        NAME JSCompiler_unstubMethod_body 1 [source_file:  [synthetic:1] ]
        FUNCTION Foo 1 [source_file: i0]
            NAME Foo 1 [source_file: i0]
            PARAM_LIST 1 [source_file: i0]
            BLOCK 1 [source_file: i0]
        EXPR_RESULT 1 [source_file: i0]
            ASSIGN 1 [source_file: i0]
                GETPROP 1 [source_file: i0]
                    GETPROP 1 [source_file: i0]
                        NAME Foo 1 [source_file: i0]
                        STRING prototype 1 [source_file: i0]
                    STRING b1 1 [source_file: i0]
                CALL 1 [free_call: 1] [source_file: i0]
                    NAME JSCompiler_stubMethod 1 [source_file: i0]
                    NUMBER 1.0 1 [source_file: i0]
    SCRIPT 1 [synthetic: 1] [source_file: i1] [input_id: InputId: i1]
        EXPR_RESULT 1 [source_file: i0]
            ASSIGN 1 [source_file: i0]
                GETPROP 1 [source_file: i0]
                    GETPROP 1 [source_file: i0]
                        NAME Foo 1 [source_file: i0]
                        STRING prototype 1 [source_file: i0]
                    STRING b1 1 [source_file: i0]
                CALL 1 [free_call: 1] [source_file: i0]
                    NAME JSCompiler_unstubMethod 1 [source_file: i0]
                    NUMBER 1.0 1 [source_file: i0]
                    FUNCTION  1 [source_file: i0]
                        NAME  1 [source_file: i0]
                        PARAM_LIST 1 [source_file: i0]
                        BLOCK 1 [source_file: i0]
                            EXPR_RESULT 1 [source_file: i0]
                                ASSIGN 1 [source_file: i0]
                                    GETPROP 1 [source_file: i0]
                                        GETPROP 1 [source_file: i0]
                                            NAME Foo 1 [source_file: i0]
                                            STRING prototype 1 [source_file: i0]
                                        STRING b2 1 [source_file: i0]
                                    CALL 1 [free_call: 1] [source_file: i0]
                                        NAME JSCompiler_stubMethod 1 [source_file: i0]
                                        NUMBER 0.0 1 [source_file: i0]
        VAR 1 [source_file: i1]
            NAME y 1 [source_file: i1]
                NEW 1 [source_file: i1]
                    NAME Foo 1 [source_file: i1]
        EXPR_RESULT 1 [source_file: i1]
            CALL 1 [source_file: i1]
                GETPROP 1 [source_file: i1]
                    NAME y 1 [source_file: i1]
                    STRING b1 1 [source_file: i1]
    SCRIPT 1 [synthetic: 1] [source_file: i2] [input_id: InputId: i2]
        EXPR_RESULT 1 [source_file: i0]
            ASSIGN 1 [source_file: i0]
                GETPROP 1 [source_file: i0]
                    GETPROP 1 [source_file: i0]
                        NAME Foo 1 [source_file: i0]
                        STRING prototype 1 [source_file: i0]
                    STRING b2 1 [source_file: i0]
                CALL 1 [free_call: 1] [source_file: i0]
                    NAME JSCompiler_unstubMethod 1 [source_file: i0]
                    NUMBER 0.0 1 [source_file: i0]
                    FUNCTION  1 [source_file: i0]
                        NAME  1 [source_file: i0]
                        PARAM_LIST 1 [source_file: i0]
                        BLOCK 1 [source_file: i0]
                            VAR 1 [source_file: i0]
                                NAME x 1 [source_file: i0]
                                    NUMBER 1.0 1 [source_file: i0]
                            EXPR_RESULT 1 [source_file: i0]
                                ASSIGN 1 [source_file: i0]
                                    GETPROP 1 [source_file: i0]
                                        GETPROP 1 [source_file: i0]
                                            NAME Foo 1 [source_file: i0]
                                            STRING prototype 1 [source_file: i0]
                                        STRING b3 1 [source_file: i0]
                                    FUNCTION  1 [source_file: i0]
                                        NAME  1 [source_file: i0]
                                        PARAM_LIST 1 [source_file: i0]
                                        BLOCK 1 [source_file: i0]
                                            EXPR_RESULT 1 [source_file: i0]
                                                NAME x 1 [source_file: i0]
        EXPR_RESULT 1 [source_file: i2]
            ASSIGN 1 [source_file: i2]
                NAME y 1 [source_file: i2]
                NEW 1 [source_file: i2]
                    NAME Foo 1 [source_file: i2]
        EXPR_RESULT 1 [source_file: i2]
            CALL 1 [source_file: i2]
                GETPROP 1 [source_file: i2]
                    NAME z 1 [source_file: i2]
                    STRING b2 1 [source_file: i2]
    SCRIPT 1 [synthetic: 1] [source_file: i3] [input_id: InputId: i3]
        EXPR_RESULT 1 [source_file: i3]
            ASSIGN 1 [source_file: i3]
                NAME y 1 [source_file: i3]
                NEW 1 [source_file: i3]
                    NAME Foo 1 [source_file: i3]
        EXPR_RESULT 1 [source_file: i3]
            CALL 1 [source_file: i3]
                GETPROP 1 [source_file: i3]
                    NAME z 1 [source_file: i3]
                    STRING b3 1 [source_file: i3]


Subtree1: NUMBER 0.0 1 [source_file: expected0]


Subtree2: NUMBER 1.0 1 [source_file: i0]
]
19:29:47.028 [pool-3-thread-1] DEBUG tests.output - Failing tests with true: 
[testDontRemoveBreakInTryFinallySwitch(com.google.javascript.jscomp.UnreachableCodeEliminationTest): 
Expected: function f(){b:try{throw 9;}finally{switch(x){case 1:break b}}return 1}
Result: function f(){b:try{throw 9;}finally{switch(x){case 1:}}return 1}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION f 1 [source_file: expected0]
            NAME f 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                LABEL 1 [source_file: expected0]
                    LABEL_NAME b 1 [source_file: expected0]
                    TRY 1 [source_file: expected0]
                        BLOCK 1 [source_file: expected0]
                            THROW 1 [source_file: expected0]
                                NUMBER 9.0 1 [source_file: expected0]
                        BLOCK 1 [source_file: expected0]
                        BLOCK 1 [source_file: expected0]
                            SWITCH 1 [source_file: expected0]
                                NAME x 1 [source_file: expected0]
                                CASE 1 [source_file: expected0]
                                    NUMBER 1.0 1 [source_file: expected0]
                                    BLOCK 1 [synthetic: 1] [source_file: expected0]
                                        BREAK 1 [source_file: expected0]
                                            LABEL_NAME b 1 [source_file: expected0]
                RETURN 1 [source_file: expected0]
                    NUMBER 1.0 1 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION f 1 [source_file: testcode]
            NAME f 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                LABEL 1 [source_file: testcode]
                    LABEL_NAME b 1 [source_file: testcode]
                    TRY 1 [source_file: testcode]
                        BLOCK 1 [source_file: testcode]
                            THROW 1 [source_file: testcode]
                                NUMBER 9.0 1 [source_file: testcode]
                        BLOCK 1 [source_file: testcode]
                        BLOCK 1 [source_file: testcode]
                            SWITCH 1 [source_file: testcode]
                                NAME x 1 [source_file: testcode]
                                CASE 1 [source_file: testcode]
                                    NUMBER 1.0 1 [source_file: testcode]
                                    BLOCK 1 [synthetic: 1] [source_file: testcode]
                RETURN 1 [source_file: testcode]
                    NUMBER 1.0 1 [source_file: testcode]


Subtree1: BLOCK 1 [synthetic: 1] [source_file: expected0]
    BREAK 1 [source_file: expected0]
        LABEL_NAME b 1 [source_file: expected0]


Subtree2: BLOCK 1 [synthetic: 1] [source_file: testcode]
, testIssue4177428_continue(com.google.javascript.jscomp.UnreachableCodeEliminationTest): 
Expected: f=function(){var action;a:do{var proto=null;try{proto=new Proto}finally{action=proto;continue a}}while(false);alert(action)}
Result: f=function(){var action;a:do{var proto=null;try{proto=new Proto}finally{action=proto}}while(false);alert(action)}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            ASSIGN 1 [source_file: expected0]
                NAME f 1 [source_file: expected0]
                FUNCTION  1 [source_file: expected0]
                    NAME  1 [source_file: expected0]
                    PARAM_LIST 1 [source_file: expected0]
                    BLOCK 1 [source_file: expected0]
                        VAR 2 [source_file: expected0]
                            NAME action 2 [source_file: expected0]
                        LABEL 3 [source_file: expected0]
                            LABEL_NAME a 3 [source_file: expected0]
                            DO 3 [source_file: expected0]
                                BLOCK 3 [source_file: expected0]
                                    VAR 4 [source_file: expected0]
                                        NAME proto 4 [source_file: expected0]
                                            NULL 4 [source_file: expected0]
                                    TRY 5 [source_file: expected0]
                                        BLOCK 5 [source_file: expected0]
                                            EXPR_RESULT 6 [source_file: expected0]
                                                ASSIGN 6 [source_file: expected0]
                                                    NAME proto 6 [source_file: expected0]
                                                    NEW 6 [source_file: expected0]
                                                        NAME Proto 6 [source_file: expected0]
                                        BLOCK 7 [source_file: expected0]
                                        BLOCK 7 [source_file: expected0]
                                            EXPR_RESULT 8 [source_file: expected0]
                                                ASSIGN 8 [source_file: expected0]
                                                    NAME action 8 [source_file: expected0]
                                                    NAME proto 8 [source_file: expected0]
                                            CONTINUE 9 [source_file: expected0]
                                                LABEL_NAME a 9 [source_file: expected0]
                                FALSE 11 [source_file: expected0]
                        EXPR_RESULT 12 [source_file: expected0]
                            CALL 12 [free_call: 1] [source_file: expected0]
                                NAME alert 12 [source_file: expected0]
                                NAME action 12 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        EXPR_RESULT 1 [source_file: testcode]
            ASSIGN 1 [source_file: testcode]
                NAME f 1 [source_file: testcode]
                FUNCTION  1 [source_file: testcode]
                    NAME  1 [source_file: testcode]
                    PARAM_LIST 1 [source_file: testcode]
                    BLOCK 1 [source_file: testcode]
                        VAR 2 [source_file: testcode]
                            NAME action 2 [source_file: testcode]
                        LABEL 3 [source_file: testcode]
                            LABEL_NAME a 3 [source_file: testcode]
                            DO 3 [source_file: testcode]
                                BLOCK 3 [source_file: testcode]
                                    VAR 4 [source_file: testcode]
                                        NAME proto 4 [source_file: testcode]
                                            NULL 4 [source_file: testcode]
                                    TRY 5 [source_file: testcode]
                                        BLOCK 5 [source_file: testcode]
                                            EXPR_RESULT 6 [source_file: testcode]
                                                ASSIGN 6 [source_file: testcode]
                                                    NAME proto 6 [source_file: testcode]
                                                    NEW 6 [source_file: testcode]
                                                        NAME Proto 6 [source_file: testcode]
                                        BLOCK 7 [source_file: testcode]
                                        BLOCK 7 [source_file: testcode]
                                            EXPR_RESULT 8 [source_file: testcode]
                                                ASSIGN 8 [source_file: testcode]
                                                    NAME action 8 [source_file: testcode]
                                                    NAME proto 8 [source_file: testcode]
                                FALSE 11 [source_file: testcode]
                        EXPR_RESULT 12 [source_file: testcode]
                            CALL 12 [free_call: 1] [source_file: testcode]
                                NAME alert 12 [source_file: testcode]
                                NAME action 12 [source_file: testcode]


Subtree1: BLOCK 7 [source_file: expected0]
    EXPR_RESULT 8 [source_file: expected0]
        ASSIGN 8 [source_file: expected0]
            NAME action 8 [source_file: expected0]
            NAME proto 8 [source_file: expected0]
    CONTINUE 9 [source_file: expected0]
        LABEL_NAME a 9 [source_file: expected0]


Subtree2: BLOCK 7 [source_file: testcode]
    EXPR_RESULT 8 [source_file: testcode]
        ASSIGN 8 [source_file: testcode]
            NAME action 8 [source_file: testcode]
            NAME proto 8 [source_file: testcode]
, testIssue4177428c(com.google.javascript.jscomp.UnreachableCodeEliminationTest): 
Expected: f=function(){var action;a:{var proto=null;try{}finally{try{proto=new Proto}finally{action=proto;break a}}}alert(action)}
Result: f=function(){var action;a:{var proto=null;try{}finally{try{proto=new Proto}finally{action=proto}}}alert(action)}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            ASSIGN 1 [source_file: expected0]
                NAME f 1 [source_file: expected0]
                FUNCTION  1 [source_file: expected0]
                    NAME  1 [source_file: expected0]
                    PARAM_LIST 1 [source_file: expected0]
                    BLOCK 1 [source_file: expected0]
                        VAR 2 [source_file: expected0]
                            NAME action 2 [source_file: expected0]
                        LABEL 3 [source_file: expected0]
                            LABEL_NAME a 3 [source_file: expected0]
                            BLOCK 3 [source_file: expected0]
                                VAR 4 [source_file: expected0]
                                    NAME proto 4 [source_file: expected0]
                                        NULL 4 [source_file: expected0]
                                TRY 5 [source_file: expected0]
                                    BLOCK 5 [source_file: expected0]
                                    BLOCK 6 [source_file: expected0]
                                    BLOCK 6 [source_file: expected0]
                                        TRY 7 [source_file: expected0]
                                            BLOCK 7 [source_file: expected0]
                                                EXPR_RESULT 8 [source_file: expected0]
                                                    ASSIGN 8 [source_file: expected0]
                                                        NAME proto 8 [source_file: expected0]
                                                        NEW 8 [source_file: expected0]
                                                            NAME Proto 8 [source_file: expected0]
                                            BLOCK 9 [source_file: expected0]
                                            BLOCK 9 [source_file: expected0]
                                                EXPR_RESULT 10 [source_file: expected0]
                                                    ASSIGN 10 [source_file: expected0]
                                                        NAME action 10 [source_file: expected0]
                                                        NAME proto 10 [source_file: expected0]
                                                BREAK 11 [source_file: expected0]
                                                    LABEL_NAME a 11 [source_file: expected0]
                        EXPR_RESULT 15 [source_file: expected0]
                            CALL 15 [free_call: 1] [source_file: expected0]
                                NAME alert 15 [source_file: expected0]
                                NAME action 15 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        EXPR_RESULT 1 [source_file: testcode]
            ASSIGN 1 [source_file: testcode]
                NAME f 1 [source_file: testcode]
                FUNCTION  1 [source_file: testcode]
                    NAME  1 [source_file: testcode]
                    PARAM_LIST 1 [source_file: testcode]
                    BLOCK 1 [source_file: testcode]
                        VAR 2 [source_file: testcode]
                            NAME action 2 [source_file: testcode]
                        LABEL 3 [source_file: testcode]
                            LABEL_NAME a 3 [source_file: testcode]
                            BLOCK 3 [source_file: testcode]
                                VAR 4 [source_file: testcode]
                                    NAME proto 4 [source_file: testcode]
                                        NULL 4 [source_file: testcode]
                                TRY 5 [source_file: testcode]
                                    BLOCK 5 [source_file: testcode]
                                    BLOCK 6 [source_file: testcode]
                                    BLOCK 6 [source_file: testcode]
                                        TRY 7 [source_file: testcode]
                                            BLOCK 7 [source_file: testcode]
                                                EXPR_RESULT 8 [source_file: testcode]
                                                    ASSIGN 8 [source_file: testcode]
                                                        NAME proto 8 [source_file: testcode]
                                                        NEW 8 [source_file: testcode]
                                                            NAME Proto 8 [source_file: testcode]
                                            BLOCK 9 [source_file: testcode]
                                            BLOCK 9 [source_file: testcode]
                                                EXPR_RESULT 10 [source_file: testcode]
                                                    ASSIGN 10 [source_file: testcode]
                                                        NAME action 10 [source_file: testcode]
                                                        NAME proto 10 [source_file: testcode]
                        EXPR_RESULT 15 [source_file: testcode]
                            CALL 15 [free_call: 1] [source_file: testcode]
                                NAME alert 15 [source_file: testcode]
                                NAME action 15 [source_file: testcode]


Subtree1: BLOCK 9 [source_file: expected0]
    EXPR_RESULT 10 [source_file: expected0]
        ASSIGN 10 [source_file: expected0]
            NAME action 10 [source_file: expected0]
            NAME proto 10 [source_file: expected0]
    BREAK 11 [source_file: expected0]
        LABEL_NAME a 11 [source_file: expected0]


Subtree2: BLOCK 9 [source_file: testcode]
    EXPR_RESULT 10 [source_file: testcode]
        ASSIGN 10 [source_file: testcode]
            NAME action 10 [source_file: testcode]
            NAME proto 10 [source_file: testcode]
, testIssue4177428_return(com.google.javascript.jscomp.UnreachableCodeEliminationTest): 
Expected: f=function(){var action;a:{var proto=null;try{proto=new Proto}finally{action=proto;return}}}
Result: f=function(){var action;a:{var proto=null;try{proto=new Proto}finally{action=proto}}}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            ASSIGN 1 [source_file: expected0]
                NAME f 1 [source_file: expected0]
                FUNCTION  1 [source_file: expected0]
                    NAME  1 [source_file: expected0]
                    PARAM_LIST 1 [source_file: expected0]
                    BLOCK 1 [source_file: expected0]
                        VAR 2 [source_file: expected0]
                            NAME action 2 [source_file: expected0]
                        LABEL 3 [source_file: expected0]
                            LABEL_NAME a 3 [source_file: expected0]
                            BLOCK 3 [source_file: expected0]
                                VAR 4 [source_file: expected0]
                                    NAME proto 4 [source_file: expected0]
                                        NULL 4 [source_file: expected0]
                                TRY 5 [source_file: expected0]
                                    BLOCK 5 [source_file: expected0]
                                        EXPR_RESULT 6 [source_file: expected0]
                                            ASSIGN 6 [source_file: expected0]
                                                NAME proto 6 [source_file: expected0]
                                                NEW 6 [source_file: expected0]
                                                    NAME Proto 6 [source_file: expected0]
                                    BLOCK 7 [source_file: expected0]
                                    BLOCK 7 [source_file: expected0]
                                        EXPR_RESULT 8 [source_file: expected0]
                                            ASSIGN 8 [source_file: expected0]
                                                NAME action 8 [source_file: expected0]
                                                NAME proto 8 [source_file: expected0]
                                        RETURN 9 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        EXPR_RESULT 1 [source_file: testcode]
            ASSIGN 1 [source_file: testcode]
                NAME f 1 [source_file: testcode]
                FUNCTION  1 [source_file: testcode]
                    NAME  1 [source_file: testcode]
                    PARAM_LIST 1 [source_file: testcode]
                    BLOCK 1 [source_file: testcode]
                        VAR 2 [source_file: testcode]
                            NAME action 2 [source_file: testcode]
                        LABEL 3 [source_file: testcode]
                            LABEL_NAME a 3 [source_file: testcode]
                            BLOCK 3 [source_file: testcode]
                                VAR 4 [source_file: testcode]
                                    NAME proto 4 [source_file: testcode]
                                        NULL 4 [source_file: testcode]
                                TRY 5 [source_file: testcode]
                                    BLOCK 5 [source_file: testcode]
                                        EXPR_RESULT 6 [source_file: testcode]
                                            ASSIGN 6 [source_file: testcode]
                                                NAME proto 6 [source_file: testcode]
                                                NEW 6 [source_file: testcode]
                                                    NAME Proto 6 [source_file: testcode]
                                    BLOCK 7 [source_file: testcode]
                                    BLOCK 7 [source_file: testcode]
                                        EXPR_RESULT 8 [source_file: testcode]
                                            ASSIGN 8 [source_file: testcode]
                                                NAME action 8 [source_file: testcode]
                                                NAME proto 8 [source_file: testcode]


Subtree1: BLOCK 7 [source_file: expected0]
    EXPR_RESULT 8 [source_file: expected0]
        ASSIGN 8 [source_file: expected0]
            NAME action 8 [source_file: expected0]
            NAME proto 8 [source_file: expected0]
    RETURN 9 [source_file: expected0]


Subtree2: BLOCK 7 [source_file: testcode]
    EXPR_RESULT 8 [source_file: testcode]
        ASSIGN 8 [source_file: testcode]
            NAME action 8 [source_file: testcode]
            NAME proto 8 [source_file: testcode]
, testIssue4177428a(com.google.javascript.jscomp.UnreachableCodeEliminationTest): 
Expected: f=function(){var action;a:{var proto=null;try{proto=new Proto}finally{action=proto;break a}}alert(action)}
Result: f=function(){var action;a:{var proto=null;try{proto=new Proto}finally{action=proto}}alert(action)}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            ASSIGN 1 [source_file: expected0]
                NAME f 1 [source_file: expected0]
                FUNCTION  1 [source_file: expected0]
                    NAME  1 [source_file: expected0]
                    PARAM_LIST 1 [source_file: expected0]
                    BLOCK 1 [source_file: expected0]
                        VAR 2 [source_file: expected0]
                            NAME action 2 [source_file: expected0]
                        LABEL 3 [source_file: expected0]
                            LABEL_NAME a 3 [source_file: expected0]
                            BLOCK 3 [source_file: expected0]
                                VAR 4 [source_file: expected0]
                                    NAME proto 4 [source_file: expected0]
                                        NULL 4 [source_file: expected0]
                                TRY 5 [source_file: expected0]
                                    BLOCK 5 [source_file: expected0]
                                        EXPR_RESULT 6 [source_file: expected0]
                                            ASSIGN 6 [source_file: expected0]
                                                NAME proto 6 [source_file: expected0]
                                                NEW 6 [source_file: expected0]
                                                    NAME Proto 6 [source_file: expected0]
                                    BLOCK 7 [source_file: expected0]
                                    BLOCK 7 [source_file: expected0]
                                        EXPR_RESULT 8 [source_file: expected0]
                                            ASSIGN 8 [source_file: expected0]
                                                NAME action 8 [source_file: expected0]
                                                NAME proto 8 [source_file: expected0]
                                        BREAK 9 [source_file: expected0]
                                            LABEL_NAME a 9 [source_file: expected0]
                        EXPR_RESULT 12 [source_file: expected0]
                            CALL 12 [free_call: 1] [source_file: expected0]
                                NAME alert 12 [source_file: expected0]
                                NAME action 12 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        EXPR_RESULT 1 [source_file: testcode]
            ASSIGN 1 [source_file: testcode]
                NAME f 1 [source_file: testcode]
                FUNCTION  1 [source_file: testcode]
                    NAME  1 [source_file: testcode]
                    PARAM_LIST 1 [source_file: testcode]
                    BLOCK 1 [source_file: testcode]
                        VAR 2 [source_file: testcode]
                            NAME action 2 [source_file: testcode]
                        LABEL 3 [source_file: testcode]
                            LABEL_NAME a 3 [source_file: testcode]
                            BLOCK 3 [source_file: testcode]
                                VAR 4 [source_file: testcode]
                                    NAME proto 4 [source_file: testcode]
                                        NULL 4 [source_file: testcode]
                                TRY 5 [source_file: testcode]
                                    BLOCK 5 [source_file: testcode]
                                        EXPR_RESULT 6 [source_file: testcode]
                                            ASSIGN 6 [source_file: testcode]
                                                NAME proto 6 [source_file: testcode]
                                                NEW 6 [source_file: testcode]
                                                    NAME Proto 6 [source_file: testcode]
                                    BLOCK 7 [source_file: testcode]
                                    BLOCK 7 [source_file: testcode]
                                        EXPR_RESULT 8 [source_file: testcode]
                                            ASSIGN 8 [source_file: testcode]
                                                NAME action 8 [source_file: testcode]
                                                NAME proto 8 [source_file: testcode]
                        EXPR_RESULT 12 [source_file: testcode]
                            CALL 12 [free_call: 1] [source_file: testcode]
                                NAME alert 12 [source_file: testcode]
                                NAME action 12 [source_file: testcode]


Subtree1: BLOCK 7 [source_file: expected0]
    EXPR_RESULT 8 [source_file: expected0]
        ASSIGN 8 [source_file: expected0]
            NAME action 8 [source_file: expected0]
            NAME proto 8 [source_file: expected0]
    BREAK 9 [source_file: expected0]
        LABEL_NAME a 9 [source_file: expected0]


Subtree2: BLOCK 7 [source_file: testcode]
    EXPR_RESULT 8 [source_file: testcode]
        ASSIGN 8 [source_file: testcode]
            NAME action 8 [source_file: testcode]
            NAME proto 8 [source_file: testcode]
, testDontRemoveBreakInTryFinally(com.google.javascript.jscomp.UnreachableCodeEliminationTest): 
Expected: function f(){b:try{throw 9;}finally{break b}return 1}
Result: function f(){b:try{throw 9;}finally{}return 1}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION f 1 [source_file: expected0]
            NAME f 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                LABEL 1 [source_file: expected0]
                    LABEL_NAME b 1 [source_file: expected0]
                    TRY 1 [source_file: expected0]
                        BLOCK 1 [source_file: expected0]
                            THROW 1 [source_file: expected0]
                                NUMBER 9.0 1 [source_file: expected0]
                        BLOCK 1 [source_file: expected0]
                        BLOCK 1 [source_file: expected0]
                            BREAK 1 [source_file: expected0]
                                LABEL_NAME b 1 [source_file: expected0]
                RETURN 1 [source_file: expected0]
                    NUMBER 1.0 1 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION f 1 [source_file: testcode]
            NAME f 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                LABEL 1 [source_file: testcode]
                    LABEL_NAME b 1 [source_file: testcode]
                    TRY 1 [source_file: testcode]
                        BLOCK 1 [source_file: testcode]
                            THROW 1 [source_file: testcode]
                                NUMBER 9.0 1 [source_file: testcode]
                        BLOCK 1 [source_file: testcode]
                        BLOCK 1 [source_file: testcode]
                RETURN 1 [source_file: testcode]
                    NUMBER 1.0 1 [source_file: testcode]


Subtree1: BLOCK 1 [source_file: expected0]
    BREAK 1 [source_file: expected0]
        LABEL_NAME b 1 [source_file: expected0]


Subtree2: BLOCK 1 [source_file: testcode]
, testTwoMethods(com.google.javascript.jscomp.CrossModuleMethodMotionTest): 
Expected: var JSCompiler_stubMap=[];function JSCompiler_stubMethod(JSCompiler_stubMethod_id){return function(){return JSCompiler_stubMap[JSCompiler_stubMethod_id].apply(this,arguments)}}function JSCompiler_unstubMethod(JSCompiler_unstubMethod_id,JSCompiler_unstubMethod_body){return JSCompiler_stubMap[JSCompiler_unstubMethod_id]=JSCompiler_unstubMethod_body}function Foo(){}Foo.prototype.baz=JSCompiler_stubMethod(1);Foo.prototype.callBaz=JSCompiler_stubMethod(0);Foo.prototype.baz=JSCompiler_unstubMethod(1,function(){});
Foo.prototype.callBaz=JSCompiler_unstubMethod(0,function(){this.baz()});(new Foo).callBaz()
Result: var JSCompiler_stubMap=[];function JSCompiler_stubMethod(JSCompiler_stubMethod_id){return function(){return JSCompiler_stubMap[JSCompiler_stubMethod_id].apply(this,arguments)}}function JSCompiler_unstubMethod(JSCompiler_unstubMethod_id,JSCompiler_unstubMethod_body){return JSCompiler_stubMap[JSCompiler_unstubMethod_id]=JSCompiler_unstubMethod_body}function Foo(){}Foo.prototype.baz=JSCompiler_stubMethod(0);Foo.prototype.callBaz=JSCompiler_stubMethod(1);
Foo.prototype.callBaz=JSCompiler_unstubMethod(1,function(){this.baz()});Foo.prototype.baz=JSCompiler_unstubMethod(0,function(){});(new Foo).callBaz()
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        VAR 1 [source_file: expected0]
            NAME JSCompiler_stubMap 1 [source_file: expected0]
                ARRAYLIT 1 [source_file: expected0]
        FUNCTION JSCompiler_stubMethod 1 [source_file: expected0]
            NAME JSCompiler_stubMethod 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
                NAME JSCompiler_stubMethod_id 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                RETURN 1 [source_file: expected0]
                    FUNCTION  1 [source_file: expected0]
                        NAME  1 [source_file: expected0]
                        PARAM_LIST 1 [source_file: expected0]
                        BLOCK 1 [source_file: expected0]
                            RETURN 1 [source_file: expected0]
                                CALL 1 [source_file: expected0]
                                    GETPROP 1 [source_file: expected0]
                                        GETELEM 1 [source_file: expected0]
                                            NAME JSCompiler_stubMap 1 [source_file: expected0]
                                            NAME JSCompiler_stubMethod_id 1 [source_file: expected0]
                                        STRING apply 1 [source_file: expected0]
                                    THIS 1 [source_file: expected0]
                                    NAME arguments 1 [source_file: expected0]
        FUNCTION JSCompiler_unstubMethod 1 [source_file: expected0]
            NAME JSCompiler_unstubMethod 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
                NAME JSCompiler_unstubMethod_id 1 [source_file: expected0]
                NAME JSCompiler_unstubMethod_body 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                RETURN 1 [source_file: expected0]
                    ASSIGN 1 [source_file: expected0]
                        GETELEM 1 [source_file: expected0]
                            NAME JSCompiler_stubMap 1 [source_file: expected0]
                            NAME JSCompiler_unstubMethod_id 1 [source_file: expected0]
                        NAME JSCompiler_unstubMethod_body 1 [source_file: expected0]
        FUNCTION Foo 1 [source_file: expected0]
            NAME Foo 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            ASSIGN 1 [source_file: expected0]
                GETPROP 1 [source_file: expected0]
                    GETPROP 1 [source_file: expected0]
                        NAME Foo 1 [source_file: expected0]
                        STRING prototype 1 [source_file: expected0]
                    STRING baz 1 [source_file: expected0]
                CALL 1 [free_call: 1] [source_file: expected0]
                    NAME JSCompiler_stubMethod 1 [source_file: expected0]
                    NUMBER 1.0 1 [source_file: expected0]
    SCRIPT 1 [synthetic: 1] [source_file: expected1] [input_id: InputId: expected1]
        EXPR_RESULT 1 [source_file: expected1]
            ASSIGN 1 [source_file: expected1]
                GETPROP 1 [source_file: expected1]
                    GETPROP 1 [source_file: expected1]
                        NAME Foo 1 [source_file: expected1]
                        STRING prototype 1 [source_file: expected1]
                    STRING callBaz 1 [source_file: expected1]
                CALL 1 [free_call: 1] [source_file: expected1]
                    NAME JSCompiler_stubMethod 1 [source_file: expected1]
                    NUMBER 0.0 1 [source_file: expected1]
    SCRIPT 1 [synthetic: 1] [source_file: expected2] [input_id: InputId: expected2]
        EXPR_RESULT 1 [source_file: expected2]
            ASSIGN 1 [source_file: expected2]
                GETPROP 1 [source_file: expected2]
                    GETPROP 1 [source_file: expected2]
                        NAME Foo 1 [source_file: expected2]
                        STRING prototype 1 [source_file: expected2]
                    STRING baz 1 [source_file: expected2]
                CALL 1 [free_call: 1] [source_file: expected2]
                    NAME JSCompiler_unstubMethod 1 [source_file: expected2]
                    NUMBER 1.0 1 [source_file: expected2]
                    FUNCTION  1 [source_file: expected2]
                        NAME  1 [source_file: expected2]
                        PARAM_LIST 1 [source_file: expected2]
                        BLOCK 1 [source_file: expected2]
        EXPR_RESULT 1 [source_file: expected2]
            ASSIGN 1 [source_file: expected2]
                GETPROP 1 [source_file: expected2]
                    GETPROP 1 [source_file: expected2]
                        NAME Foo 1 [source_file: expected2]
                        STRING prototype 1 [source_file: expected2]
                    STRING callBaz 1 [source_file: expected2]
                CALL 1 [free_call: 1] [source_file: expected2]
                    NAME JSCompiler_unstubMethod 1 [source_file: expected2]
                    NUMBER 0.0 1 [source_file: expected2]
                    FUNCTION  1 [source_file: expected2]
                        NAME  1 [source_file: expected2]
                        PARAM_LIST 1 [source_file: expected2]
                        BLOCK 1 [source_file: expected2]
                            EXPR_RESULT 1 [source_file: expected2]
                                CALL 1 [source_file: expected2]
                                    GETPROP 1 [source_file: expected2]
                                        THIS 1 [source_file: expected2]
                                        STRING baz 1 [source_file: expected2]
        EXPR_RESULT 1 [source_file: expected2]
            CALL 1 [source_file: expected2]
                GETPROP 1 [source_file: expected2]
                    NEW 1 [source_file: expected2]
                        NAME Foo 1 [source_file: expected2]
                    STRING callBaz 1 [source_file: expected2]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: i0] [input_id: InputId: i0]
        VAR 1 [source_file:  [synthetic:1] ]
            NAME JSCompiler_stubMap 1 [source_file:  [synthetic:1] ]
                ARRAYLIT 1 [source_file:  [synthetic:1] ]
        FUNCTION JSCompiler_stubMethod 1 [source_file:  [synthetic:1] ]
            NAME JSCompiler_stubMethod 1 [source_file:  [synthetic:1] ]
            PARAM_LIST 1 [source_file:  [synthetic:1] ]
                NAME JSCompiler_stubMethod_id 1 [source_file:  [synthetic:1] ]
            BLOCK 1 [source_file:  [synthetic:1] ]
                RETURN 1 [source_file:  [synthetic:1] ]
                    FUNCTION  1 [source_file:  [synthetic:1] ]
                        NAME  1 [source_file:  [synthetic:1] ]
                        PARAM_LIST 1 [source_file:  [synthetic:1] ]
                        BLOCK 1 [source_file:  [synthetic:1] ]
                            RETURN 1 [source_file:  [synthetic:1] ]
                                CALL 1 [source_file:  [synthetic:1] ]
                                    GETPROP 1 [source_file:  [synthetic:1] ]
                                        GETELEM 1 [source_file:  [synthetic:1] ]
                                            NAME JSCompiler_stubMap 1 [source_file:  [synthetic:1] ]
                                            NAME JSCompiler_stubMethod_id 1 [source_file:  [synthetic:1] ]
                                        STRING apply 1 [source_file:  [synthetic:1] ]
                                    THIS 1 [source_file:  [synthetic:1] ]
                                    NAME arguments 1 [source_file:  [synthetic:1] ]
        FUNCTION JSCompiler_unstubMethod 1 [source_file:  [synthetic:1] ]
            NAME JSCompiler_unstubMethod 1 [source_file:  [synthetic:1] ]
            PARAM_LIST 1 [source_file:  [synthetic:1] ]
                NAME JSCompiler_unstubMethod_id 1 [source_file:  [synthetic:1] ]
                NAME JSCompiler_unstubMethod_body 1 [source_file:  [synthetic:1] ]
            BLOCK 1 [source_file:  [synthetic:1] ]
                RETURN 1 [source_file:  [synthetic:1] ]
                    ASSIGN 1 [source_file:  [synthetic:1] ]
                        GETELEM 1 [source_file:  [synthetic:1] ]
                            NAME JSCompiler_stubMap 1 [source_file:  [synthetic:1] ]
                            NAME JSCompiler_unstubMethod_id 1 [source_file:  [synthetic:1] ]
                        NAME JSCompiler_unstubMethod_body 1 [source_file:  [synthetic:1] ]
        FUNCTION Foo 1 [source_file: i0]
            NAME Foo 1 [source_file: i0]
            PARAM_LIST 1 [source_file: i0]
            BLOCK 1 [source_file: i0]
        EXPR_RESULT 1 [source_file: i0]
            ASSIGN 1 [source_file: i0]
                GETPROP 1 [source_file: i0]
                    GETPROP 1 [source_file: i0]
                        NAME Foo 1 [source_file: i0]
                        STRING prototype 1 [source_file: i0]
                    STRING baz 1 [source_file: i0]
                CALL 1 [free_call: 1] [source_file: i0]
                    NAME JSCompiler_stubMethod 1 [source_file: i0]
                    NUMBER 0.0 1 [source_file: i0]
    SCRIPT 1 [synthetic: 1] [source_file: i1] [input_id: InputId: i1]
        EXPR_RESULT 1 [source_file: i1]
            ASSIGN 1 [source_file: i1]
                GETPROP 1 [source_file: i1]
                    GETPROP 1 [source_file: i1]
                        NAME Foo 1 [source_file: i1]
                        STRING prototype 1 [source_file: i1]
                    STRING callBaz 1 [source_file: i1]
                CALL 1 [free_call: 1] [source_file: i1]
                    NAME JSCompiler_stubMethod 1 [source_file: i1]
                    NUMBER 1.0 1 [source_file: i1]
    SCRIPT 1 [synthetic: 1] [source_file: i2] [input_id: InputId: i2]
        EXPR_RESULT 1 [source_file: i1]
            ASSIGN 1 [source_file: i1]
                GETPROP 1 [source_file: i1]
                    GETPROP 1 [source_file: i1]
                        NAME Foo 1 [source_file: i1]
                        STRING prototype 1 [source_file: i1]
                    STRING callBaz 1 [source_file: i1]
                CALL 1 [free_call: 1] [source_file: i1]
                    NAME JSCompiler_unstubMethod 1 [source_file: i1]
                    NUMBER 1.0 1 [source_file: i1]
                    FUNCTION  1 [source_file: i1]
                        NAME  1 [source_file: i1]
                        PARAM_LIST 1 [source_file: i1]
                        BLOCK 1 [source_file: i1]
                            EXPR_RESULT 1 [source_file: i1]
                                CALL 1 [source_file: i1]
                                    GETPROP 1 [source_file: i1]
                                        THIS 1 [source_file: i1]
                                        STRING baz 1 [source_file: i1]
        EXPR_RESULT 1 [source_file: i0]
            ASSIGN 1 [source_file: i0]
                GETPROP 1 [source_file: i0]
                    GETPROP 1 [source_file: i0]
                        NAME Foo 1 [source_file: i0]
                        STRING prototype 1 [source_file: i0]
                    STRING baz 1 [source_file: i0]
                CALL 1 [free_call: 1] [source_file: i0]
                    NAME JSCompiler_unstubMethod 1 [source_file: i0]
                    NUMBER 0.0 1 [source_file: i0]
                    FUNCTION  1 [source_file: i0]
                        NAME  1 [source_file: i0]
                        PARAM_LIST 1 [source_file: i0]
                        BLOCK 1 [source_file: i0]
        EXPR_RESULT 1 [source_file: i2]
            CALL 1 [source_file: i2]
                GETPROP 1 [source_file: i2]
                    NEW 1 [source_file: i2]
                        NAME Foo 1 [source_file: i2]
                    STRING callBaz 1 [source_file: i2]


Subtree1: NUMBER 1.0 1 [source_file: expected0]


Subtree2: NUMBER 0.0 1 [source_file: i0]
, testClosureVariableReads3(com.google.javascript.jscomp.CrossModuleMethodMotionTest): 
Expected: var JSCompiler_stubMap=[];function JSCompiler_stubMethod(JSCompiler_stubMethod_id){return function(){return JSCompiler_stubMap[JSCompiler_stubMethod_id].apply(this,arguments)}}function JSCompiler_unstubMethod(JSCompiler_unstubMethod_id,JSCompiler_unstubMethod_body){return JSCompiler_stubMap[JSCompiler_unstubMethod_id]=JSCompiler_unstubMethod_body}function Foo(){}Foo.prototype.b1=JSCompiler_stubMethod(0);Foo.prototype.b1=JSCompiler_unstubMethod(0,function(){Foo.prototype.b2=JSCompiler_stubMethod(1)});
var y=new Foo;y.b1();Foo.prototype.b2=JSCompiler_unstubMethod(1,function(){var x=1;Foo.prototype.b3=function(){x}});y=new Foo;z.b2();y=new Foo;z.b3()
Result: var JSCompiler_stubMap=[];function JSCompiler_stubMethod(JSCompiler_stubMethod_id){return function(){return JSCompiler_stubMap[JSCompiler_stubMethod_id].apply(this,arguments)}}function JSCompiler_unstubMethod(JSCompiler_unstubMethod_id,JSCompiler_unstubMethod_body){return JSCompiler_stubMap[JSCompiler_unstubMethod_id]=JSCompiler_unstubMethod_body}function Foo(){}Foo.prototype.b1=JSCompiler_stubMethod(1);Foo.prototype.b1=JSCompiler_unstubMethod(1,function(){Foo.prototype.b2=JSCompiler_stubMethod(0)});
var y=new Foo;y.b1();Foo.prototype.b2=JSCompiler_unstubMethod(0,function(){var x=1;Foo.prototype.b3=function(){x}});y=new Foo;z.b2();y=new Foo;z.b3()
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        VAR 1 [source_file: expected0]
            NAME JSCompiler_stubMap 1 [source_file: expected0]
                ARRAYLIT 1 [source_file: expected0]
        FUNCTION JSCompiler_stubMethod 1 [source_file: expected0]
            NAME JSCompiler_stubMethod 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
                NAME JSCompiler_stubMethod_id 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                RETURN 1 [source_file: expected0]
                    FUNCTION  1 [source_file: expected0]
                        NAME  1 [source_file: expected0]
                        PARAM_LIST 1 [source_file: expected0]
                        BLOCK 1 [source_file: expected0]
                            RETURN 1 [source_file: expected0]
                                CALL 1 [source_file: expected0]
                                    GETPROP 1 [source_file: expected0]
                                        GETELEM 1 [source_file: expected0]
                                            NAME JSCompiler_stubMap 1 [source_file: expected0]
                                            NAME JSCompiler_stubMethod_id 1 [source_file: expected0]
                                        STRING apply 1 [source_file: expected0]
                                    THIS 1 [source_file: expected0]
                                    NAME arguments 1 [source_file: expected0]
        FUNCTION JSCompiler_unstubMethod 1 [source_file: expected0]
            NAME JSCompiler_unstubMethod 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
                NAME JSCompiler_unstubMethod_id 1 [source_file: expected0]
                NAME JSCompiler_unstubMethod_body 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                RETURN 1 [source_file: expected0]
                    ASSIGN 1 [source_file: expected0]
                        GETELEM 1 [source_file: expected0]
                            NAME JSCompiler_stubMap 1 [source_file: expected0]
                            NAME JSCompiler_unstubMethod_id 1 [source_file: expected0]
                        NAME JSCompiler_unstubMethod_body 1 [source_file: expected0]
        FUNCTION Foo 1 [source_file: expected0]
            NAME Foo 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            ASSIGN 1 [source_file: expected0]
                GETPROP 1 [source_file: expected0]
                    GETPROP 1 [source_file: expected0]
                        NAME Foo 1 [source_file: expected0]
                        STRING prototype 1 [source_file: expected0]
                    STRING b1 1 [source_file: expected0]
                CALL 1 [free_call: 1] [source_file: expected0]
                    NAME JSCompiler_stubMethod 1 [source_file: expected0]
                    NUMBER 0.0 1 [source_file: expected0]
    SCRIPT 1 [synthetic: 1] [source_file: expected1] [input_id: InputId: expected1]
        EXPR_RESULT 1 [source_file: expected1]
            ASSIGN 1 [source_file: expected1]
                GETPROP 1 [source_file: expected1]
                    GETPROP 1 [source_file: expected1]
                        NAME Foo 1 [source_file: expected1]
                        STRING prototype 1 [source_file: expected1]
                    STRING b1 1 [source_file: expected1]
                CALL 1 [free_call: 1] [source_file: expected1]
                    NAME JSCompiler_unstubMethod 1 [source_file: expected1]
                    NUMBER 0.0 1 [source_file: expected1]
                    FUNCTION  1 [source_file: expected1]
                        NAME  1 [source_file: expected1]
                        PARAM_LIST 1 [source_file: expected1]
                        BLOCK 1 [source_file: expected1]
                            EXPR_RESULT 1 [source_file: expected1]
                                ASSIGN 1 [source_file: expected1]
                                    GETPROP 1 [source_file: expected1]
                                        GETPROP 1 [source_file: expected1]
                                            NAME Foo 1 [source_file: expected1]
                                            STRING prototype 1 [source_file: expected1]
                                        STRING b2 1 [source_file: expected1]
                                    CALL 1 [free_call: 1] [source_file: expected1]
                                        NAME JSCompiler_stubMethod 1 [source_file: expected1]
                                        NUMBER 1.0 1 [source_file: expected1]
        VAR 1 [source_file: expected1]
            NAME y 1 [source_file: expected1]
                NEW 1 [source_file: expected1]
                    NAME Foo 1 [source_file: expected1]
        EXPR_RESULT 1 [source_file: expected1]
            CALL 1 [source_file: expected1]
                GETPROP 1 [source_file: expected1]
                    NAME y 1 [source_file: expected1]
                    STRING b1 1 [source_file: expected1]
    SCRIPT 1 [synthetic: 1] [source_file: expected2] [input_id: InputId: expected2]
        EXPR_RESULT 1 [source_file: expected2]
            ASSIGN 1 [source_file: expected2]
                GETPROP 1 [source_file: expected2]
                    GETPROP 1 [source_file: expected2]
                        NAME Foo 1 [source_file: expected2]
                        STRING prototype 1 [source_file: expected2]
                    STRING b2 1 [source_file: expected2]
                CALL 1 [free_call: 1] [source_file: expected2]
                    NAME JSCompiler_unstubMethod 1 [source_file: expected2]
                    NUMBER 1.0 1 [source_file: expected2]
                    FUNCTION  1 [source_file: expected2]
                        NAME  1 [source_file: expected2]
                        PARAM_LIST 1 [source_file: expected2]
                        BLOCK 1 [source_file: expected2]
                            VAR 1 [source_file: expected2]
                                NAME x 1 [source_file: expected2]
                                    NUMBER 1.0 1 [source_file: expected2]
                            EXPR_RESULT 1 [source_file: expected2]
                                ASSIGN 1 [source_file: expected2]
                                    GETPROP 1 [source_file: expected2]
                                        GETPROP 1 [source_file: expected2]
                                            NAME Foo 1 [source_file: expected2]
                                            STRING prototype 1 [source_file: expected2]
                                        STRING b3 1 [source_file: expected2]
                                    FUNCTION  1 [source_file: expected2]
                                        NAME  1 [source_file: expected2]
                                        PARAM_LIST 1 [source_file: expected2]
                                        BLOCK 1 [source_file: expected2]
                                            EXPR_RESULT 1 [source_file: expected2]
                                                NAME x 1 [source_file: expected2]
        EXPR_RESULT 1 [source_file: expected2]
            ASSIGN 1 [source_file: expected2]
                NAME y 1 [source_file: expected2]
                NEW 1 [source_file: expected2]
                    NAME Foo 1 [source_file: expected2]
        EXPR_RESULT 1 [source_file: expected2]
            CALL 1 [source_file: expected2]
                GETPROP 1 [source_file: expected2]
                    NAME z 1 [source_file: expected2]
                    STRING b2 1 [source_file: expected2]
    SCRIPT 1 [synthetic: 1] [source_file: expected3] [input_id: InputId: expected3]
        EXPR_RESULT 1 [source_file: expected3]
            ASSIGN 1 [source_file: expected3]
                NAME y 1 [source_file: expected3]
                NEW 1 [source_file: expected3]
                    NAME Foo 1 [source_file: expected3]
        EXPR_RESULT 1 [source_file: expected3]
            CALL 1 [source_file: expected3]
                GETPROP 1 [source_file: expected3]
                    NAME z 1 [source_file: expected3]
                    STRING b3 1 [source_file: expected3]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: i0] [input_id: InputId: i0]
        VAR 1 [source_file:  [synthetic:1] ]
            NAME JSCompiler_stubMap 1 [source_file:  [synthetic:1] ]
                ARRAYLIT 1 [source_file:  [synthetic:1] ]
        FUNCTION JSCompiler_stubMethod 1 [source_file:  [synthetic:1] ]
            NAME JSCompiler_stubMethod 1 [source_file:  [synthetic:1] ]
            PARAM_LIST 1 [source_file:  [synthetic:1] ]
                NAME JSCompiler_stubMethod_id 1 [source_file:  [synthetic:1] ]
            BLOCK 1 [source_file:  [synthetic:1] ]
                RETURN 1 [source_file:  [synthetic:1] ]
                    FUNCTION  1 [source_file:  [synthetic:1] ]
                        NAME  1 [source_file:  [synthetic:1] ]
                        PARAM_LIST 1 [source_file:  [synthetic:1] ]
                        BLOCK 1 [source_file:  [synthetic:1] ]
                            RETURN 1 [source_file:  [synthetic:1] ]
                                CALL 1 [source_file:  [synthetic:1] ]
                                    GETPROP 1 [source_file:  [synthetic:1] ]
                                        GETELEM 1 [source_file:  [synthetic:1] ]
                                            NAME JSCompiler_stubMap 1 [source_file:  [synthetic:1] ]
                                            NAME JSCompiler_stubMethod_id 1 [source_file:  [synthetic:1] ]
                                        STRING apply 1 [source_file:  [synthetic:1] ]
                                    THIS 1 [source_file:  [synthetic:1] ]
                                    NAME arguments 1 [source_file:  [synthetic:1] ]
        FUNCTION JSCompiler_unstubMethod 1 [source_file:  [synthetic:1] ]
            NAME JSCompiler_unstubMethod 1 [source_file:  [synthetic:1] ]
            PARAM_LIST 1 [source_file:  [synthetic:1] ]
                NAME JSCompiler_unstubMethod_id 1 [source_file:  [synthetic:1] ]
                NAME JSCompiler_unstubMethod_body 1 [source_file:  [synthetic:1] ]
            BLOCK 1 [source_file:  [synthetic:1] ]
                RETURN 1 [source_file:  [synthetic:1] ]
                    ASSIGN 1 [source_file:  [synthetic:1] ]
                        GETELEM 1 [source_file:  [synthetic:1] ]
                            NAME JSCompiler_stubMap 1 [source_file:  [synthetic:1] ]
                            NAME JSCompiler_unstubMethod_id 1 [source_file:  [synthetic:1] ]
                        NAME JSCompiler_unstubMethod_body 1 [source_file:  [synthetic:1] ]
        FUNCTION Foo 1 [source_file: i0]
            NAME Foo 1 [source_file: i0]
            PARAM_LIST 1 [source_file: i0]
            BLOCK 1 [source_file: i0]
        EXPR_RESULT 1 [source_file: i0]
            ASSIGN 1 [source_file: i0]
                GETPROP 1 [source_file: i0]
                    GETPROP 1 [source_file: i0]
                        NAME Foo 1 [source_file: i0]
                        STRING prototype 1 [source_file: i0]
                    STRING b1 1 [source_file: i0]
                CALL 1 [free_call: 1] [source_file: i0]
                    NAME JSCompiler_stubMethod 1 [source_file: i0]
                    NUMBER 1.0 1 [source_file: i0]
    SCRIPT 1 [synthetic: 1] [source_file: i1] [input_id: InputId: i1]
        EXPR_RESULT 1 [source_file: i0]
            ASSIGN 1 [source_file: i0]
                GETPROP 1 [source_file: i0]
                    GETPROP 1 [source_file: i0]
                        NAME Foo 1 [source_file: i0]
                        STRING prototype 1 [source_file: i0]
                    STRING b1 1 [source_file: i0]
                CALL 1 [free_call: 1] [source_file: i0]
                    NAME JSCompiler_unstubMethod 1 [source_file: i0]
                    NUMBER 1.0 1 [source_file: i0]
                    FUNCTION  1 [source_file: i0]
                        NAME  1 [source_file: i0]
                        PARAM_LIST 1 [source_file: i0]
                        BLOCK 1 [source_file: i0]
                            EXPR_RESULT 1 [source_file: i0]
                                ASSIGN 1 [source_file: i0]
                                    GETPROP 1 [source_file: i0]
                                        GETPROP 1 [source_file: i0]
                                            NAME Foo 1 [source_file: i0]
                                            STRING prototype 1 [source_file: i0]
                                        STRING b2 1 [source_file: i0]
                                    CALL 1 [free_call: 1] [source_file: i0]
                                        NAME JSCompiler_stubMethod 1 [source_file: i0]
                                        NUMBER 0.0 1 [source_file: i0]
        VAR 1 [source_file: i1]
            NAME y 1 [source_file: i1]
                NEW 1 [source_file: i1]
                    NAME Foo 1 [source_file: i1]
        EXPR_RESULT 1 [source_file: i1]
            CALL 1 [source_file: i1]
                GETPROP 1 [source_file: i1]
                    NAME y 1 [source_file: i1]
                    STRING b1 1 [source_file: i1]
    SCRIPT 1 [synthetic: 1] [source_file: i2] [input_id: InputId: i2]
        EXPR_RESULT 1 [source_file: i0]
            ASSIGN 1 [source_file: i0]
                GETPROP 1 [source_file: i0]
                    GETPROP 1 [source_file: i0]
                        NAME Foo 1 [source_file: i0]
                        STRING prototype 1 [source_file: i0]
                    STRING b2 1 [source_file: i0]
                CALL 1 [free_call: 1] [source_file: i0]
                    NAME JSCompiler_unstubMethod 1 [source_file: i0]
                    NUMBER 0.0 1 [source_file: i0]
                    FUNCTION  1 [source_file: i0]
                        NAME  1 [source_file: i0]
                        PARAM_LIST 1 [source_file: i0]
                        BLOCK 1 [source_file: i0]
                            VAR 1 [source_file: i0]
                                NAME x 1 [source_file: i0]
                                    NUMBER 1.0 1 [source_file: i0]
                            EXPR_RESULT 1 [source_file: i0]
                                ASSIGN 1 [source_file: i0]
                                    GETPROP 1 [source_file: i0]
                                        GETPROP 1 [source_file: i0]
                                            NAME Foo 1 [source_file: i0]
                                            STRING prototype 1 [source_file: i0]
                                        STRING b3 1 [source_file: i0]
                                    FUNCTION  1 [source_file: i0]
                                        NAME  1 [source_file: i0]
                                        PARAM_LIST 1 [source_file: i0]
                                        BLOCK 1 [source_file: i0]
                                            EXPR_RESULT 1 [source_file: i0]
                                                NAME x 1 [source_file: i0]
        EXPR_RESULT 1 [source_file: i2]
            ASSIGN 1 [source_file: i2]
                NAME y 1 [source_file: i2]
                NEW 1 [source_file: i2]
                    NAME Foo 1 [source_file: i2]
        EXPR_RESULT 1 [source_file: i2]
            CALL 1 [source_file: i2]
                GETPROP 1 [source_file: i2]
                    NAME z 1 [source_file: i2]
                    STRING b2 1 [source_file: i2]
    SCRIPT 1 [synthetic: 1] [source_file: i3] [input_id: InputId: i3]
        EXPR_RESULT 1 [source_file: i3]
            ASSIGN 1 [source_file: i3]
                NAME y 1 [source_file: i3]
                NEW 1 [source_file: i3]
                    NAME Foo 1 [source_file: i3]
        EXPR_RESULT 1 [source_file: i3]
            CALL 1 [source_file: i3]
                GETPROP 1 [source_file: i3]
                    NAME z 1 [source_file: i3]
                    STRING b3 1 [source_file: i3]


Subtree1: NUMBER 0.0 1 [source_file: expected0]


Subtree2: NUMBER 1.0 1 [source_file: i0]
]
19:29:47.030 [pool-3-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation com.google.javascript.rhino.Node:1457.
19:29:47.030 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #2
19:29:47.030 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.google.javascript.rhino.Node:1428 which is executed by 15 tests
2433571
19:29:47.573 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_stubMap=[];function JSCompiler_stubMethod(JSCompiler_stubMethod_id){return function(){return JSCompiler_stubMap[JSCompiler_stubMethod_id].apply(this,arguments)}}function JSCompiler_unstubMethod(JSCompiler_unstubMethod_id,JSCompiler_unstubMethod_body){return JSCompiler_stubMap[JSCompiler_unstubMethod_id]=JSCompiler_unstubMethod_body}function Foo(){}Foo.prototype.baz=JSCompiler_stubMethod(1);Foo.prototype.callBaz=JSCompiler_stubMethod(0);Foo.prototype.baz=JSCompiler_unstubMethod(1,function(){});
Foo.prototype.callBaz=JSCompiler_unstubMethod(0,function(){this.baz()});(new Foo).callBaz()
Result: var JSCompiler_stubMap=[];function JSCompiler_stubMethod(JSCompiler_stubMethod_id){return function(){return JSCompiler_stubMap[JSCompiler_stubMethod_id].apply(this,arguments)}}function JSCompiler_unstubMethod(JSCompiler_unstubMethod_id,JSCompiler_unstubMethod_body){return JSCompiler_stubMap[JSCompiler_unstubMethod_id]=JSCompiler_unstubMethod_body}function Foo(){}Foo.prototype.baz=JSCompiler_stubMethod(0);Foo.prototype.callBaz=JSCompiler_stubMethod(1);
Foo.prototype.callBaz=JSCompiler_unstubMethod(1,function(){this.baz()});Foo.prototype.baz=JSCompiler_unstubMethod(0,function(){});(new Foo).callBaz()
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        VAR 1 [source_file: expected0]
            NAME JSCompiler_stubMap 1 [source_file: expected0]
                ARRAYLIT 1 [source_file: expected0]
        FUNCTION JSCompiler_stubMethod 1 [source_file: expected0]
            NAME JSCompiler_stubMethod 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
                NAME JSCompiler_stubMethod_id 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                RETURN 1 [source_file: expected0]
                    FUNCTION  1 [source_file: expected0]
                        NAME  1 [source_file: expected0]
                        PARAM_LIST 1 [source_file: expected0]
                        BLOCK 1 [source_file: expected0]
                            RETURN 1 [source_file: expected0]
                                CALL 1 [source_file: expected0]
                                    GETPROP 1 [source_file: expected0]
                                        GETELEM 1 [source_file: expected0]
                                            NAME JSCompiler_stubMap 1 [source_file: expected0]
                                            NAME JSCompiler_stubMethod_id 1 [source_file: expected0]
                                        STRING apply 1 [source_file: expected0]
                                    THIS 1 [source_file: expected0]
                                    NAME arguments 1 [source_file: expected0]
        FUNCTION JSCompiler_unstubMethod 1 [source_file: expected0]
            NAME JSCompiler_unstubMethod 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
                NAME JSCompiler_unstubMethod_id 1 [source_file: expected0]
                NAME JSCompiler_unstubMethod_body 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                RETURN 1 [source_file: expected0]
                    ASSIGN 1 [source_file: expected0]
                        GETELEM 1 [source_file: expected0]
                            NAME JSCompiler_stubMap 1 [source_file: expected0]
                            NAME JSCompiler_unstubMethod_id 1 [source_file: expected0]
                        NAME JSCompiler_unstubMethod_body 1 [source_file: expected0]
        FUNCTION Foo 1 [source_file: expected0]
            NAME Foo 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            ASSIGN 1 [source_file: expected0]
                GETPROP 1 [source_file: expected0]
                    GETPROP 1 [source_file: expected0]
                        NAME Foo 1 [source_file: expected0]
                        STRING prototype 1 [source_file: expected0]
                    STRING baz 1 [source_file: expected0]
                CALL 1 [free_call: 1] [source_file: expected0]
                    NAME JSCompiler_stubMethod 1 [source_file: expected0]
                    NUMBER 1.0 1 [source_file: expected0]
    SCRIPT 1 [synthetic: 1] [source_file: expected1] [input_id: InputId: expected1]
        EXPR_RESULT 1 [source_file: expected1]
            ASSIGN 1 [source_file: expected1]
                GETPROP 1 [source_file: expected1]
                    GETPROP 1 [source_file: expected1]
                        NAME Foo 1 [source_file: expected1]
                        STRING prototype 1 [source_file: expected1]
                    STRING callBaz 1 [source_file: expected1]
                CALL 1 [free_call: 1] [source_file: expected1]
                    NAME JSCompiler_stubMethod 1 [source_file: expected1]
                    NUMBER 0.0 1 [source_file: expected1]
    SCRIPT 1 [synthetic: 1] [source_file: expected2] [input_id: InputId: expected2]
        EXPR_RESULT 1 [source_file: expected2]
            ASSIGN 1 [source_file: expected2]
                GETPROP 1 [source_file: expected2]
                    GETPROP 1 [source_file: expected2]
                        NAME Foo 1 [source_file: expected2]
                        STRING prototype 1 [source_file: expected2]
                    STRING baz 1 [source_file: expected2]
                CALL 1 [free_call: 1] [source_file: expected2]
                    NAME JSCompiler_unstubMethod 1 [source_file: expected2]
                    NUMBER 1.0 1 [source_file: expected2]
                    FUNCTION  1 [source_file: expected2]
                        NAME  1 [source_file: expected2]
                        PARAM_LIST 1 [source_file: expected2]
                        BLOCK 1 [source_file: expected2]
        EXPR_RESULT 1 [source_file: expected2]
            ASSIGN 1 [source_file: expected2]
                GETPROP 1 [source_file: expected2]
                    GETPROP 1 [source_file: expected2]
                        NAME Foo 1 [source_file: expected2]
                        STRING prototype 1 [source_file: expected2]
                    STRING callBaz 1 [source_file: expected2]
                CALL 1 [free_call: 1] [source_file: expected2]
                    NAME JSCompiler_unstubMethod 1 [source_file: expected2]
                    NUMBER 0.0 1 [source_file: expected2]
                    FUNCTION  1 [source_file: expected2]
                        NAME  1 [source_file: expected2]
                        PARAM_LIST 1 [source_file: expected2]
                        BLOCK 1 [source_file: expected2]
                            EXPR_RESULT 1 [source_file: expected2]
                                CALL 1 [source_file: expected2]
                                    GETPROP 1 [source_file: expected2]
                                        THIS 1 [source_file: expected2]
                                        STRING baz 1 [source_file: expected2]
        EXPR_RESULT 1 [source_file: expected2]
            CALL 1 [source_file: expected2]
                GETPROP 1 [source_file: expected2]
                    NEW 1 [source_file: expected2]
                        NAME Foo 1 [source_file: expected2]
                    STRING callBaz 1 [source_file: expected2]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: i0] [input_id: InputId: i0]
        VAR 1 [source_file:  [synthetic:1] ]
            NAME JSCompiler_stubMap 1 [source_file:  [synthetic:1] ]
                ARRAYLIT 1 [source_file:  [synthetic:1] ]
        FUNCTION JSCompiler_stubMethod 1 [source_file:  [synthetic:1] ]
            NAME JSCompiler_stubMethod 1 [source_file:  [synthetic:1] ]
            PARAM_LIST 1 [source_file:  [synthetic:1] ]
                NAME JSCompiler_stubMethod_id 1 [source_file:  [synthetic:1] ]
            BLOCK 1 [source_file:  [synthetic:1] ]
                RETURN 1 [source_file:  [synthetic:1] ]
                    FUNCTION  1 [source_file:  [synthetic:1] ]
                        NAME  1 [source_file:  [synthetic:1] ]
                        PARAM_LIST 1 [source_file:  [synthetic:1] ]
                        BLOCK 1 [source_file:  [synthetic:1] ]
                            RETURN 1 [source_file:  [synthetic:1] ]
                                CALL 1 [source_file:  [synthetic:1] ]
                                    GETPROP 1 [source_file:  [synthetic:1] ]
                                        GETELEM 1 [source_file:  [synthetic:1] ]
                                            NAME JSCompiler_stubMap 1 [source_file:  [synthetic:1] ]
                                            NAME JSCompiler_stubMethod_id 1 [source_file:  [synthetic:1] ]
                                        STRING apply 1 [source_file:  [synthetic:1] ]
                                    THIS 1 [source_file:  [synthetic:1] ]
                                    NAME arguments 1 [source_file:  [synthetic:1] ]
        FUNCTION JSCompiler_unstubMethod 1 [source_file:  [synthetic:1] ]
            NAME JSCompiler_unstubMethod 1 [source_file:  [synthetic:1] ]
            PARAM_LIST 1 [source_file:  [synthetic:1] ]
                NAME JSCompiler_unstubMethod_id 1 [source_file:  [synthetic:1] ]
                NAME JSCompiler_unstubMethod_body 1 [source_file:  [synthetic:1] ]
            BLOCK 1 [source_file:  [synthetic:1] ]
                RETURN 1 [source_file:  [synthetic:1] ]
                    ASSIGN 1 [source_file:  [synthetic:1] ]
                        GETELEM 1 [source_file:  [synthetic:1] ]
                            NAME JSCompiler_stubMap 1 [source_file:  [synthetic:1] ]
                            NAME JSCompiler_unstubMethod_id 1 [source_file:  [synthetic:1] ]
                        NAME JSCompiler_unstubMethod_body 1 [source_file:  [synthetic:1] ]
        FUNCTION Foo 1 [source_file: i0]
            NAME Foo 1 [source_file: i0]
            PARAM_LIST 1 [source_file: i0]
            BLOCK 1 [source_file: i0]
        EXPR_RESULT 1 [source_file: i0]
            ASSIGN 1 [source_file: i0]
                GETPROP 1 [source_file: i0]
                    GETPROP 1 [source_file: i0]
                        NAME Foo 1 [source_file: i0]
                        STRING prototype 1 [source_file: i0]
                    STRING baz 1 [source_file: i0]
                CALL 1 [free_call: 1] [source_file: i0]
                    NAME JSCompiler_stubMethod 1 [source_file: i0]
                    NUMBER 0.0 1 [source_file: i0]
    SCRIPT 1 [synthetic: 1] [source_file: i1] [input_id: InputId: i1]
        EXPR_RESULT 1 [source_file: i1]
            ASSIGN 1 [source_file: i1]
                GETPROP 1 [source_file: i1]
                    GETPROP 1 [source_file: i1]
                        NAME Foo 1 [source_file: i1]
                        STRING prototype 1 [source_file: i1]
                    STRING callBaz 1 [source_file: i1]
                CALL 1 [free_call: 1] [source_file: i1]
                    NAME JSCompiler_stubMethod 1 [source_file: i1]
                    NUMBER 1.0 1 [source_file: i1]
    SCRIPT 1 [synthetic: 1] [source_file: i2] [input_id: InputId: i2]
        EXPR_RESULT 1 [source_file: i1]
            ASSIGN 1 [source_file: i1]
                GETPROP 1 [source_file: i1]
                    GETPROP 1 [source_file: i1]
                        NAME Foo 1 [source_file: i1]
                        STRING prototype 1 [source_file: i1]
                    STRING callBaz 1 [source_file: i1]
                CALL 1 [free_call: 1] [source_file: i1]
                    NAME JSCompiler_unstubMethod 1 [source_file: i1]
                    NUMBER 1.0 1 [source_file: i1]
                    FUNCTION  1 [source_file: i1]
                        NAME  1 [source_file: i1]
                        PARAM_LIST 1 [source_file: i1]
                        BLOCK 1 [source_file: i1]
                            EXPR_RESULT 1 [source_file: i1]
                                CALL 1 [source_file: i1]
                                    GETPROP 1 [source_file: i1]
                                        THIS 1 [source_file: i1]
                                        STRING baz 1 [source_file: i1]
        EXPR_RESULT 1 [source_file: i0]
            ASSIGN 1 [source_file: i0]
                GETPROP 1 [source_file: i0]
                    GETPROP 1 [source_file: i0]
                        NAME Foo 1 [source_file: i0]
                        STRING prototype 1 [source_file: i0]
                    STRING baz 1 [source_file: i0]
                CALL 1 [free_call: 1] [source_file: i0]
                    NAME JSCompiler_unstubMethod 1 [source_file: i0]
                    NUMBER 0.0 1 [source_file: i0]
                    FUNCTION  1 [source_file: i0]
                        NAME  1 [source_file: i0]
                        PARAM_LIST 1 [source_file: i0]
                        BLOCK 1 [source_file: i0]
        EXPR_RESULT 1 [source_file: i2]
            CALL 1 [source_file: i2]
                GETPROP 1 [source_file: i2]
                    NEW 1 [source_file: i2]
                        NAME Foo 1 [source_file: i2]
                    STRING callBaz 1 [source_file: i2]


Subtree1: NUMBER 1.0 1 [source_file: expected0]


Subtree2: NUMBER 0.0 1 [source_file: i0]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:928)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:736)
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_stubMap=[];function JSCompiler_stubMethod(JSCompiler_stubMethod_id){return function(){return JSCompiler_stubMap[JSCompiler_stubMethod_id].apply(this,arguments)}}function JSCompiler_unstubMethod(JSCompiler_unstubMethod_id,JSCompiler_unstubMethod_body){return JSCompiler_stubMap[JSCompiler_unstubMethod_id]=JSCompiler_unstubMethod_body}function Foo(){}Foo.prototype.b1=JSCompiler_stubMethod(0);Foo.prototype.b1=JSCompiler_unstubMethod(0,function(){Foo.prototype.b2=JSCompiler_stubMethod(1)});
var y=new Foo;y.b1();Foo.prototype.b2=JSCompiler_unstubMethod(1,function(){var x=1;Foo.prototype.b3=function(){x}});y=new Foo;z.b2();y=new Foo;z.b3()
Result: var JSCompiler_stubMap=[];function JSCompiler_stubMethod(JSCompiler_stubMethod_id){return function(){return JSCompiler_stubMap[JSCompiler_stubMethod_id].apply(this,arguments)}}function JSCompiler_unstubMethod(JSCompiler_unstubMethod_id,JSCompiler_unstubMethod_body){return JSCompiler_stubMap[JSCompiler_unstubMethod_id]=JSCompiler_unstubMethod_body}function Foo(){}Foo.prototype.b1=JSCompiler_stubMethod(1);Foo.prototype.b1=JSCompiler_unstubMethod(1,function(){Foo.prototype.b2=JSCompiler_stubMethod(0)});
var y=new Foo;y.b1();Foo.prototype.b2=JSCompiler_unstubMethod(0,function(){var x=1;Foo.prototype.b3=function(){x}});y=new Foo;z.b2();y=new Foo;z.b3()
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        VAR 1 [source_file: expected0]
            NAME JSCompiler_stubMap 1 [source_file: expected0]
                ARRAYLIT 1 [source_file: expected0]
        FUNCTION JSCompiler_stubMethod 1 [source_file: expected0]
            NAME JSCompiler_stubMethod 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
                NAME JSCompiler_stubMethod_id 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                RETURN 1 [source_file: expected0]
                    FUNCTION  1 [source_file: expected0]
                        NAME  1 [source_file: expected0]
                        PARAM_LIST 1 [source_file: expected0]
                        BLOCK 1 [source_file: expected0]
                            RETURN 1 [source_file: expected0]
                                CALL 1 [source_file: expected0]
                                    GETPROP 1 [source_file: expected0]
                                        GETELEM 1 [source_file: expected0]
                                            NAME JSCompiler_stubMap 1 [source_file: expected0]
                                            NAME JSCompiler_stubMethod_id 1 [source_file: expected0]
                                        STRING apply 1 [source_file: expected0]
                                    THIS 1 [source_file: expected0]
                                    NAME arguments 1 [source_file: expected0]
        FUNCTION JSCompiler_unstubMethod 1 [source_file: expected0]
            NAME JSCompiler_unstubMethod 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
                NAME JSCompiler_unstubMethod_id 1 [source_file: expected0]
                NAME JSCompiler_unstubMethod_body 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                RETURN 1 [source_file: expected0]
                    ASSIGN 1 [source_file: expected0]
                        GETELEM 1 [source_file: expected0]
                            NAME JSCompiler_stubMap 1 [source_file: expected0]
                            NAME JSCompiler_unstubMethod_id 1 [source_file: expected0]
                        NAME JSCompiler_unstubMethod_body 1 [source_file: expected0]
        FUNCTION Foo 1 [source_file: expected0]
            NAME Foo 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            ASSIGN 1 [source_file: expected0]
                GETPROP 1 [source_file: expected0]
                    GETPROP 1 [source_file: expected0]
                        NAME Foo 1 [source_file: expected0]
                        STRING prototype 1 [source_file: expected0]
                    STRING b1 1 [source_file: expected0]
                CALL 1 [free_call: 1] [source_file: expected0]
                    NAME JSCompiler_stubMethod 1 [source_file: expected0]
                    NUMBER 0.0 1 [source_file: expected0]
    SCRIPT 1 [synthetic: 1] [source_file: expected1] [input_id: InputId: expected1]
        EXPR_RESULT 1 [source_file: expected1]
            ASSIGN 1 [source_file: expected1]
                GETPROP 1 [source_file: expected1]
                    GETPROP 1 [source_file: expected1]
                        NAME Foo 1 [source_file: expected1]
                        STRING prototype 1 [source_file: expected1]
                    STRING b1 1 [source_file: expected1]
                CALL 1 [free_call: 1] [source_file: expected1]
                    NAME JSCompiler_unstubMethod 1 [source_file: expected1]
                    NUMBER 0.0 1 [source_file: expected1]
                    FUNCTION  1 [source_file: expected1]
                        NAME  1 [source_file: expected1]
                        PARAM_LIST 1 [source_file: expected1]
                        BLOCK 1 [source_file: expected1]
                            EXPR_RESULT 1 [source_file: expected1]
                                ASSIGN 1 [source_file: expected1]
                                    GETPROP 1 [source_file: expected1]
                                        GETPROP 1 [source_file: expected1]
                                            NAME Foo 1 [source_file: expected1]
                                            STRING prototype 1 [source_file: expected1]
                                        STRING b2 1 [source_file: expected1]
                                    CALL 1 [free_call: 1] [source_file: expected1]
                                        NAME JSCompiler_stubMethod 1 [source_file: expected1]
                                        NUMBER 1.0 1 [source_file: expected1]
        VAR 1 [source_file: expected1]
            NAME y 1 [source_file: expected1]
                NEW 1 [source_file: expected1]
                    NAME Foo 1 [source_file: expected1]
        EXPR_RESULT 1 [source_file: expected1]
            CALL 1 [source_file: expected1]
                GETPROP 1 [source_file: expected1]
                    NAME y 1 [source_file: expected1]
                    STRING b1 1 [source_file: expected1]
    SCRIPT 1 [synthetic: 1] [source_file: expected2] [input_id: InputId: expected2]
        EXPR_RESULT 1 [source_file: expected2]
            ASSIGN 1 [source_file: expected2]
                GETPROP 1 [source_file: expected2]
                    GETPROP 1 [source_file: expected2]
                        NAME Foo 1 [source_file: expected2]
                        STRING prototype 1 [source_file: expected2]
                    STRING b2 1 [source_file: expected2]
                CALL 1 [free_call: 1] [source_file: expected2]
                    NAME JSCompiler_unstubMethod 1 [source_file: expected2]
                    NUMBER 1.0 1 [source_file: expected2]
                    FUNCTION  1 [source_file: expected2]
                        NAME  1 [source_file: expected2]
                        PARAM_LIST 1 [source_file: expected2]
                        BLOCK 1 [source_file: expected2]
                            VAR 1 [source_file: expected2]
                                NAME x 1 [source_file: expected2]
                                    NUMBER 1.0 1 [source_file: expected2]
                            EXPR_RESULT 1 [source_file: expected2]
                                ASSIGN 1 [source_file: expected2]
                                    GETPROP 1 [source_file: expected2]
                                        GETPROP 1 [source_file: expected2]
                                            NAME Foo 1 [source_file: expected2]
                                            STRING prototype 1 [source_file: expected2]
                                        STRING b3 1 [source_file: expected2]
                                    FUNCTION  1 [source_file: expected2]
                                        NAME  1 [source_file: expected2]
                                        PARAM_LIST 1 [source_file: expected2]
                                        BLOCK 1 [source_file: expected2]
                                            EXPR_RESULT 1 [source_file: expected2]
                                                NAME x 1 [source_file: expected2]
        EXPR_RESULT 1 [source_file: expected2]
            ASSIGN 1 [source_file: expected2]
                NAME y 1 [source_file: expected2]
                NEW 1 [source_file: expected2]
                    NAME Foo 1 [source_file: expected2]
        EXPR_RESULT 1 [source_file: expected2]
            CALL 1 [source_file: expected2]
                GETPROP 1 [source_file: expected2]
                    NAME z 1 [source_file: expected2]
                    STRING b2 1 [source_file: expected2]
    SCRIPT 1 [synthetic: 1] [source_file: expected3] [input_id: InputId: expected3]
        EXPR_RESULT 1 [source_file: expected3]
            ASSIGN 1 [source_file: expected3]
                NAME y 1 [source_file: expected3]
                NEW 1 [source_file: expected3]
                    NAME Foo 1 [source_file: expected3]
        EXPR_RESULT 1 [source_file: expected3]
            CALL 1 [source_file: expected3]
                GETPROP 1 [source_file: expected3]
                    NAME z 1 [source_file: expected3]
                    STRING b3 1 [source_file: expected3]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: i0] [input_id: InputId: i0]
        VAR 1 [source_file:  [synthetic:1] ]
            NAME JSCompiler_stubMap 1 [source_file:  [synthetic:1] ]
                ARRAYLIT 1 [source_file:  [synthetic:1] ]
        FUNCTION JSCompiler_stubMethod 1 [source_file:  [synthetic:1] ]
            NAME JSCompiler_stubMethod 1 [source_file:  [synthetic:1] ]
            PARAM_LIST 1 [source_file:  [synthetic:1] ]
                NAME JSCompiler_stubMethod_id 1 [source_file:  [synthetic:1] ]
            BLOCK 1 [source_file:  [synthetic:1] ]
                RETURN 1 [source_file:  [synthetic:1] ]
                    FUNCTION  1 [source_file:  [synthetic:1] ]
                        NAME  1 [source_file:  [synthetic:1] ]
                        PARAM_LIST 1 [source_file:  [synthetic:1] ]
                        BLOCK 1 [source_file:  [synthetic:1] ]
                            RETURN 1 [source_file:  [synthetic:1] ]
                                CALL 1 [source_file:  [synthetic:1] ]
                                    GETPROP 1 [source_file:  [synthetic:1] ]
                                        GETELEM 1 [source_file:  [synthetic:1] ]
                                            NAME JSCompiler_stubMap 1 [source_file:  [synthetic:1] ]
                                            NAME JSCompiler_stubMethod_id 1 [source_file:  [synthetic:1] ]
                                        STRING apply 1 [source_file:  [synthetic:1] ]
                                    THIS 1 [source_file:  [synthetic:1] ]
                                    NAME arguments 1 [source_file:  [synthetic:1] ]
        FUNCTION JSCompiler_unstubMethod 1 [source_file:  [synthetic:1] ]
            NAME JSCompiler_unstubMethod 1 [source_file:  [synthetic:1] ]
            PARAM_LIST 1 [source_file:  [synthetic:1] ]
                NAME JSCompiler_unstubMethod_id 1 [source_file:  [synthetic:1] ]
                NAME JSCompiler_unstubMethod_body 1 [source_file:  [synthetic:1] ]
            BLOCK 1 [source_file:  [synthetic:1] ]
                RETURN 1 [source_file:  [synthetic:1] ]
                    ASSIGN 1 [source_file:  [synthetic:1] ]
                        GETELEM 1 [source_file:  [synthetic:1] ]
                            NAME JSCompiler_stubMap 1 [source_file:  [synthetic:1] ]
                            NAME JSCompiler_unstubMethod_id 1 [source_file:  [synthetic:1] ]
                        NAME JSCompiler_unstubMethod_body 1 [source_file:  [synthetic:1] ]
        FUNCTION Foo 1 [source_file: i0]
            NAME Foo 1 [source_file: i0]
            PARAM_LIST 1 [source_file: i0]
            BLOCK 1 [source_file: i0]
        EXPR_RESULT 1 [source_file: i0]
            ASSIGN 1 [source_file: i0]
                GETPROP 1 [source_file: i0]
                    GETPROP 1 [source_file: i0]
                        NAME Foo 1 [source_file: i0]
                        STRING prototype 1 [source_file: i0]
                    STRING b1 1 [source_file: i0]
                CALL 1 [free_call: 1] [source_file: i0]
                    NAME JSCompiler_stubMethod 1 [source_file: i0]
                    NUMBER 1.0 1 [source_file: i0]
    SCRIPT 1 [synthetic: 1] [source_file: i1] [input_id: InputId: i1]
        EXPR_RESULT 1 [source_file: i0]
            ASSIGN 1 [source_file: i0]
                GETPROP 1 [source_file: i0]
                    GETPROP 1 [source_file: i0]
                        NAME Foo 1 [source_file: i0]
                        STRING prototype 1 [source_file: i0]
                    STRING b1 1 [source_file: i0]
                CALL 1 [free_call: 1] [source_file: i0]
                    NAME JSCompiler_unstubMethod 1 [source_file: i0]
                    NUMBER 1.0 1 [source_file: i0]
                    FUNCTION  1 [source_file: i0]
                        NAME  1 [source_file: i0]
                        PARAM_LIST 1 [source_file: i0]
                        BLOCK 1 [source_file: i0]
                            EXPR_RESULT 1 [source_file: i0]
                                ASSIGN 1 [source_file: i0]
                                    GETPROP 1 [source_file: i0]
                                        GETPROP 1 [source_file: i0]
                                            NAME Foo 1 [source_file: i0]
                                            STRING prototype 1 [source_file: i0]
                                        STRING b2 1 [source_file: i0]
                                    CALL 1 [free_call: 1] [source_file: i0]
                                        NAME JSCompiler_stubMethod 1 [source_file: i0]
                                        NUMBER 0.0 1 [source_file: i0]
        VAR 1 [source_file: i1]
            NAME y 1 [source_file: i1]
                NEW 1 [source_file: i1]
                    NAME Foo 1 [source_file: i1]
        EXPR_RESULT 1 [source_file: i1]
            CALL 1 [source_file: i1]
                GETPROP 1 [source_file: i1]
                    NAME y 1 [source_file: i1]
                    STRING b1 1 [source_file: i1]
    SCRIPT 1 [synthetic: 1] [source_file: i2] [input_id: InputId: i2]
        EXPR_RESULT 1 [source_file: i0]
            ASSIGN 1 [source_file: i0]
                GETPROP 1 [source_file: i0]
                    GETPROP 1 [source_file: i0]
                        NAME Foo 1 [source_file: i0]
                        STRING prototype 1 [source_file: i0]
                    STRING b2 1 [source_file: i0]
                CALL 1 [free_call: 1] [source_file: i0]
                    NAME JSCompiler_unstubMethod 1 [source_file: i0]
                    NUMBER 0.0 1 [source_file: i0]
                    FUNCTION  1 [source_file: i0]
                        NAME  1 [source_file: i0]
                        PARAM_LIST 1 [source_file: i0]
                        BLOCK 1 [source_file: i0]
                            VAR 1 [source_file: i0]
                                NAME x 1 [source_file: i0]
                                    NUMBER 1.0 1 [source_file: i0]
                            EXPR_RESULT 1 [source_file: i0]
                                ASSIGN 1 [source_file: i0]
                                    GETPROP 1 [source_file: i0]
                                        GETPROP 1 [source_file: i0]
                                            NAME Foo 1 [source_file: i0]
                                            STRING prototype 1 [source_file: i0]
                                        STRING b3 1 [source_file: i0]
                                    FUNCTION  1 [source_file: i0]
                                        NAME  1 [source_file: i0]
                                        PARAM_LIST 1 [source_file: i0]
                                        BLOCK 1 [source_file: i0]
                                            EXPR_RESULT 1 [source_file: i0]
                                                NAME x 1 [source_file: i0]
        EXPR_RESULT 1 [source_file: i2]
            ASSIGN 1 [source_file: i2]
                NAME y 1 [source_file: i2]
                NEW 1 [source_file: i2]
                    NAME Foo 1 [source_file: i2]
        EXPR_RESULT 1 [source_file: i2]
            CALL 1 [source_file: i2]
                GETPROP 1 [source_file: i2]
                    NAME z 1 [source_file: i2]
                    STRING b2 1 [source_file: i2]
    SCRIPT 1 [synthetic: 1] [source_file: i3] [input_id: InputId: i3]
        EXPR_RESULT 1 [source_file: i3]
            ASSIGN 1 [source_file: i3]
                NAME y 1 [source_file: i3]
                NEW 1 [source_file: i3]
                    NAME Foo 1 [source_file: i3]
        EXPR_RESULT 1 [source_file: i3]
            CALL 1 [source_file: i3]
                GETPROP 1 [source_file: i3]
                    NAME z 1 [source_file: i3]
                    STRING b3 1 [source_file: i3]


Subtree1: NUMBER 0.0 1 [source_file: expected0]


Subtree2: NUMBER 1.0 1 [source_file: i0]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:928)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:736)
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_stubMap=[];function JSCompiler_stubMethod(JSCompiler_stubMethod_id){return function(){return JSCompiler_stubMap[JSCompiler_stubMethod_id].apply(this,arguments)}}function JSCompiler_unstubMethod(JSCompiler_unstubMethod_id,JSCompiler_unstubMethod_body){return JSCompiler_stubMap[JSCompiler_unstubMethod_id]=JSCompiler_unstubMethod_body}function Foo(){}Foo.prototype.baz=JSCompiler_stubMethod(1);Foo.prototype.callBaz=JSCompiler_stubMethod(0);Foo.prototype.baz=JSCompiler_unstubMethod(1,function(){});
Foo.prototype.callBaz=JSCompiler_unstubMethod(0,function(){this.baz()});(new Foo).callBaz()
Result: var JSCompiler_stubMap=[];function JSCompiler_stubMethod(JSCompiler_stubMethod_id){return function(){return JSCompiler_stubMap[JSCompiler_stubMethod_id].apply(this,arguments)}}function JSCompiler_unstubMethod(JSCompiler_unstubMethod_id,JSCompiler_unstubMethod_body){return JSCompiler_stubMap[JSCompiler_unstubMethod_id]=JSCompiler_unstubMethod_body}function Foo(){}Foo.prototype.baz=JSCompiler_stubMethod(0);Foo.prototype.callBaz=JSCompiler_stubMethod(1);
Foo.prototype.callBaz=JSCompiler_unstubMethod(1,function(){this.baz()});Foo.prototype.baz=JSCompiler_unstubMethod(0,function(){});(new Foo).callBaz()
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        VAR 1 [source_file: expected0]
            NAME JSCompiler_stubMap 1 [source_file: expected0]
                ARRAYLIT 1 [source_file: expected0]
        FUNCTION JSCompiler_stubMethod 1 [source_file: expected0]
            NAME JSCompiler_stubMethod 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
                NAME JSCompiler_stubMethod_id 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                RETURN 1 [source_file: expected0]
                    FUNCTION  1 [source_file: expected0]
                        NAME  1 [source_file: expected0]
                        PARAM_LIST 1 [source_file: expected0]
                        BLOCK 1 [source_file: expected0]
                            RETURN 1 [source_file: expected0]
                                CALL 1 [source_file: expected0]
                                    GETPROP 1 [source_file: expected0]
                                        GETELEM 1 [source_file: expected0]
                                            NAME JSCompiler_stubMap 1 [source_file: expected0]
                                            NAME JSCompiler_stubMethod_id 1 [source_file: expected0]
                                        STRING apply 1 [source_file: expected0]
                                    THIS 1 [source_file: expected0]
                                    NAME arguments 1 [source_file: expected0]
        FUNCTION JSCompiler_unstubMethod 1 [source_file: expected0]
            NAME JSCompiler_unstubMethod 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
                NAME JSCompiler_unstubMethod_id 1 [source_file: expected0]
                NAME JSCompiler_unstubMethod_body 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                RETURN 1 [source_file: expected0]
                    ASSIGN 1 [source_file: expected0]
                        GETELEM 1 [source_file: expected0]
                            NAME JSCompiler_stubMap 1 [source_file: expected0]
                            NAME JSCompiler_unstubMethod_id 1 [source_file: expected0]
                        NAME JSCompiler_unstubMethod_body 1 [source_file: expected0]
        FUNCTION Foo 1 [source_file: expected0]
            NAME Foo 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            ASSIGN 1 [source_file: expected0]
                GETPROP 1 [source_file: expected0]
                    GETPROP 1 [source_file: expected0]
                        NAME Foo 1 [source_file: expected0]
                        STRING prototype 1 [source_file: expected0]
                    STRING baz 1 [source_file: expected0]
                CALL 1 [free_call: 1] [source_file: expected0]
                    NAME JSCompiler_stubMethod 1 [source_file: expected0]
                    NUMBER 1.0 1 [source_file: expected0]
    SCRIPT 1 [synthetic: 1] [source_file: expected1] [input_id: InputId: expected1]
        EXPR_RESULT 1 [source_file: expected1]
            ASSIGN 1 [source_file: expected1]
                GETPROP 1 [source_file: expected1]
                    GETPROP 1 [source_file: expected1]
                        NAME Foo 1 [source_file: expected1]
                        STRING prototype 1 [source_file: expected1]
                    STRING callBaz 1 [source_file: expected1]
                CALL 1 [free_call: 1] [source_file: expected1]
                    NAME JSCompiler_stubMethod 1 [source_file: expected1]
                    NUMBER 0.0 1 [source_file: expected1]
    SCRIPT 1 [synthetic: 1] [source_file: expected2] [input_id: InputId: expected2]
        EXPR_RESULT 1 [source_file: expected2]
            ASSIGN 1 [source_file: expected2]
                GETPROP 1 [source_file: expected2]
                    GETPROP 1 [source_file: expected2]
                        NAME Foo 1 [source_file: expected2]
                        STRING prototype 1 [source_file: expected2]
                    STRING baz 1 [source_file: expected2]
                CALL 1 [free_call: 1] [source_file: expected2]
                    NAME JSCompiler_unstubMethod 1 [source_file: expected2]
                    NUMBER 1.0 1 [source_file: expected2]
                    FUNCTION  1 [source_file: expected2]
                        NAME  1 [source_file: expected2]
                        PARAM_LIST 1 [source_file: expected2]
                        BLOCK 1 [source_file: expected2]
        EXPR_RESULT 1 [source_file: expected2]
            ASSIGN 1 [source_file: expected2]
                GETPROP 1 [source_file: expected2]
                    GETPROP 1 [source_file: expected2]
                        NAME Foo 1 [source_file: expected2]
                        STRING prototype 1 [source_file: expected2]
                    STRING callBaz 1 [source_file: expected2]
                CALL 1 [free_call: 1] [source_file: expected2]
                    NAME JSCompiler_unstubMethod 1 [source_file: expected2]
                    NUMBER 0.0 1 [source_file: expected2]
                    FUNCTION  1 [source_file: expected2]
                        NAME  1 [source_file: expected2]
                        PARAM_LIST 1 [source_file: expected2]
                        BLOCK 1 [source_file: expected2]
                            EXPR_RESULT 1 [source_file: expected2]
                                CALL 1 [source_file: expected2]
                                    GETPROP 1 [source_file: expected2]
                                        THIS 1 [source_file: expected2]
                                        STRING baz 1 [source_file: expected2]
        EXPR_RESULT 1 [source_file: expected2]
            CALL 1 [source_file: expected2]
                GETPROP 1 [source_file: expected2]
                    NEW 1 [source_file: expected2]
                        NAME Foo 1 [source_file: expected2]
                    STRING callBaz 1 [source_file: expected2]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: i0] [input_id: InputId: i0]
        VAR 1 [source_file:  [synthetic:1] ]
            NAME JSCompiler_stubMap 1 [source_file:  [synthetic:1] ]
                ARRAYLIT 1 [source_file:  [synthetic:1] ]
        FUNCTION JSCompiler_stubMethod 1 [source_file:  [synthetic:1] ]
            NAME JSCompiler_stubMethod 1 [source_file:  [synthetic:1] ]
            PARAM_LIST 1 [source_file:  [synthetic:1] ]
                NAME JSCompiler_stubMethod_id 1 [source_file:  [synthetic:1] ]
            BLOCK 1 [source_file:  [synthetic:1] ]
                RETURN 1 [source_file:  [synthetic:1] ]
                    FUNCTION  1 [source_file:  [synthetic:1] ]
                        NAME  1 [source_file:  [synthetic:1] ]
                        PARAM_LIST 1 [source_file:  [synthetic:1] ]
                        BLOCK 1 [source_file:  [synthetic:1] ]
                            RETURN 1 [source_file:  [synthetic:1] ]
                                CALL 1 [source_file:  [synthetic:1] ]
                                    GETPROP 1 [source_file:  [synthetic:1] ]
                                        GETELEM 1 [source_file:  [synthetic:1] ]
                                            NAME JSCompiler_stubMap 1 [source_file:  [synthetic:1] ]
                                            NAME JSCompiler_stubMethod_id 1 [source_file:  [synthetic:1] ]
                                        STRING apply 1 [source_file:  [synthetic:1] ]
                                    THIS 1 [source_file:  [synthetic:1] ]
                                    NAME arguments 1 [source_file:  [synthetic:1] ]
        FUNCTION JSCompiler_unstubMethod 1 [source_file:  [synthetic:1] ]
            NAME JSCompiler_unstubMethod 1 [source_file:  [synthetic:1] ]
            PARAM_LIST 1 [source_file:  [synthetic:1] ]
                NAME JSCompiler_unstubMethod_id 1 [source_file:  [synthetic:1] ]
                NAME JSCompiler_unstubMethod_body 1 [source_file:  [synthetic:1] ]
            BLOCK 1 [source_file:  [synthetic:1] ]
                RETURN 1 [source_file:  [synthetic:1] ]
                    ASSIGN 1 [source_file:  [synthetic:1] ]
                        GETELEM 1 [source_file:  [synthetic:1] ]
                            NAME JSCompiler_stubMap 1 [source_file:  [synthetic:1] ]
                            NAME JSCompiler_unstubMethod_id 1 [source_file:  [synthetic:1] ]
                        NAME JSCompiler_unstubMethod_body 1 [source_file:  [synthetic:1] ]
        FUNCTION Foo 1 [source_file: i0]
            NAME Foo 1 [source_file: i0]
            PARAM_LIST 1 [source_file: i0]
            BLOCK 1 [source_file: i0]
        EXPR_RESULT 1 [source_file: i0]
            ASSIGN 1 [source_file: i0]
                GETPROP 1 [source_file: i0]
                    GETPROP 1 [source_file: i0]
                        NAME Foo 1 [source_file: i0]
                        STRING prototype 1 [source_file: i0]
                    STRING baz 1 [source_file: i0]
                CALL 1 [free_call: 1] [source_file: i0]
                    NAME JSCompiler_stubMethod 1 [source_file: i0]
                    NUMBER 0.0 1 [source_file: i0]
    SCRIPT 1 [synthetic: 1] [source_file: i1] [input_id: InputId: i1]
        EXPR_RESULT 1 [source_file: i1]
            ASSIGN 1 [source_file: i1]
                GETPROP 1 [source_file: i1]
                    GETPROP 1 [source_file: i1]
                        NAME Foo 1 [source_file: i1]
                        STRING prototype 1 [source_file: i1]
                    STRING callBaz 1 [source_file: i1]
                CALL 1 [free_call: 1] [source_file: i1]
                    NAME JSCompiler_stubMethod 1 [source_file: i1]
                    NUMBER 1.0 1 [source_file: i1]
    SCRIPT 1 [synthetic: 1] [source_file: i2] [input_id: InputId: i2]
        EXPR_RESULT 1 [source_file: i1]
            ASSIGN 1 [source_file: i1]
                GETPROP 1 [source_file: i1]
                    GETPROP 1 [source_file: i1]
                        NAME Foo 1 [source_file: i1]
                        STRING prototype 1 [source_file: i1]
                    STRING callBaz 1 [source_file: i1]
                CALL 1 [free_call: 1] [source_file: i1]
                    NAME JSCompiler_unstubMethod 1 [source_file: i1]
                    NUMBER 1.0 1 [source_file: i1]
                    FUNCTION  1 [source_file: i1]
                        NAME  1 [source_file: i1]
                        PARAM_LIST 1 [source_file: i1]
                        BLOCK 1 [source_file: i1]
                            EXPR_RESULT 1 [source_file: i1]
                                CALL 1 [source_file: i1]
                                    GETPROP 1 [source_file: i1]
                                        THIS 1 [source_file: i1]
                                        STRING baz 1 [source_file: i1]
        EXPR_RESULT 1 [source_file: i0]
            ASSIGN 1 [source_file: i0]
                GETPROP 1 [source_file: i0]
                    GETPROP 1 [source_file: i0]
                        NAME Foo 1 [source_file: i0]
                        STRING prototype 1 [source_file: i0]
                    STRING baz 1 [source_file: i0]
                CALL 1 [free_call: 1] [source_file: i0]
                    NAME JSCompiler_unstubMethod 1 [source_file: i0]
                    NUMBER 0.0 1 [source_file: i0]
                    FUNCTION  1 [source_file: i0]
                        NAME  1 [source_file: i0]
                        PARAM_LIST 1 [source_file: i0]
                        BLOCK 1 [source_file: i0]
        EXPR_RESULT 1 [source_file: i2]
            CALL 1 [source_file: i2]
                GETPROP 1 [source_file: i2]
                    NEW 1 [source_file: i2]
                        NAME Foo 1 [source_file: i2]
                    STRING callBaz 1 [source_file: i2]


Subtree1: NUMBER 1.0 1 [source_file: expected0]


Subtree2: NUMBER 0.0 1 [source_file: i0]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:928)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:736)
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_stubMap=[];function JSCompiler_stubMethod(JSCompiler_stubMethod_id){return function(){return JSCompiler_stubMap[JSCompiler_stubMethod_id].apply(this,arguments)}}function JSCompiler_unstubMethod(JSCompiler_unstubMethod_id,JSCompiler_unstubMethod_body){return JSCompiler_stubMap[JSCompiler_unstubMethod_id]=JSCompiler_unstubMethod_body}function Foo(){}Foo.prototype.b1=JSCompiler_stubMethod(0);Foo.prototype.b1=JSCompiler_unstubMethod(0,function(){Foo.prototype.b2=JSCompiler_stubMethod(1)});
var y=new Foo;y.b1();Foo.prototype.b2=JSCompiler_unstubMethod(1,function(){var x=1;Foo.prototype.b3=function(){x}});y=new Foo;z.b2();y=new Foo;z.b3()
Result: var JSCompiler_stubMap=[];function JSCompiler_stubMethod(JSCompiler_stubMethod_id){return function(){return JSCompiler_stubMap[JSCompiler_stubMethod_id].apply(this,arguments)}}function JSCompiler_unstubMethod(JSCompiler_unstubMethod_id,JSCompiler_unstubMethod_body){return JSCompiler_stubMap[JSCompiler_unstubMethod_id]=JSCompiler_unstubMethod_body}function Foo(){}Foo.prototype.b1=JSCompiler_stubMethod(1);Foo.prototype.b1=JSCompiler_unstubMethod(1,function(){Foo.prototype.b2=JSCompiler_stubMethod(0)});
var y=new Foo;y.b1();Foo.prototype.b2=JSCompiler_unstubMethod(0,function(){var x=1;Foo.prototype.b3=function(){x}});y=new Foo;z.b2();y=new Foo;z.b3()
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        VAR 1 [source_file: expected0]
            NAME JSCompiler_stubMap 1 [source_file: expected0]
                ARRAYLIT 1 [source_file: expected0]
        FUNCTION JSCompiler_stubMethod 1 [source_file: expected0]
            NAME JSCompiler_stubMethod 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
                NAME JSCompiler_stubMethod_id 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                RETURN 1 [source_file: expected0]
                    FUNCTION  1 [source_file: expected0]
                        NAME  1 [source_file: expected0]
                        PARAM_LIST 1 [source_file: expected0]
                        BLOCK 1 [source_file: expected0]
                            RETURN 1 [source_file: expected0]
                                CALL 1 [source_file: expected0]
                                    GETPROP 1 [source_file: expected0]
                                        GETELEM 1 [source_file: expected0]
                                            NAME JSCompiler_stubMap 1 [source_file: expected0]
                                            NAME JSCompiler_stubMethod_id 1 [source_file: expected0]
                                        STRING apply 1 [source_file: expected0]
                                    THIS 1 [source_file: expected0]
                                    NAME arguments 1 [source_file: expected0]
        FUNCTION JSCompiler_unstubMethod 1 [source_file: expected0]
            NAME JSCompiler_unstubMethod 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
                NAME JSCompiler_unstubMethod_id 1 [source_file: expected0]
                NAME JSCompiler_unstubMethod_body 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                RETURN 1 [source_file: expected0]
                    ASSIGN 1 [source_file: expected0]
                        GETELEM 1 [source_file: expected0]
                            NAME JSCompiler_stubMap 1 [source_file: expected0]
                            NAME JSCompiler_unstubMethod_id 1 [source_file: expected0]
                        NAME JSCompiler_unstubMethod_body 1 [source_file: expected0]
        FUNCTION Foo 1 [source_file: expected0]
            NAME Foo 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            ASSIGN 1 [source_file: expected0]
                GETPROP 1 [source_file: expected0]
                    GETPROP 1 [source_file: expected0]
                        NAME Foo 1 [source_file: expected0]
                        STRING prototype 1 [source_file: expected0]
                    STRING b1 1 [source_file: expected0]
                CALL 1 [free_call: 1] [source_file: expected0]
                    NAME JSCompiler_stubMethod 1 [source_file: expected0]
                    NUMBER 0.0 1 [source_file: expected0]
    SCRIPT 1 [synthetic: 1] [source_file: expected1] [input_id: InputId: expected1]
        EXPR_RESULT 1 [source_file: expected1]
            ASSIGN 1 [source_file: expected1]
                GETPROP 1 [source_file: expected1]
                    GETPROP 1 [source_file: expected1]
                        NAME Foo 1 [source_file: expected1]
                        STRING prototype 1 [source_file: expected1]
                    STRING b1 1 [source_file: expected1]
                CALL 1 [free_call: 1] [source_file: expected1]
                    NAME JSCompiler_unstubMethod 1 [source_file: expected1]
                    NUMBER 0.0 1 [source_file: expected1]
                    FUNCTION  1 [source_file: expected1]
                        NAME  1 [source_file: expected1]
                        PARAM_LIST 1 [source_file: expected1]
                        BLOCK 1 [source_file: expected1]
                            EXPR_RESULT 1 [source_file: expected1]
                                ASSIGN 1 [source_file: expected1]
                                    GETPROP 1 [source_file: expected1]
                                        GETPROP 1 [source_file: expected1]
                                            NAME Foo 1 [source_file: expected1]
                                            STRING prototype 1 [source_file: expected1]
                                        STRING b2 1 [source_file: expected1]
                                    CALL 1 [free_call: 1] [source_file: expected1]
                                        NAME JSCompiler_stubMethod 1 [source_file: expected1]
                                        NUMBER 1.0 1 [source_file: expected1]
        VAR 1 [source_file: expected1]
            NAME y 1 [source_file: expected1]
                NEW 1 [source_file: expected1]
                    NAME Foo 1 [source_file: expected1]
        EXPR_RESULT 1 [source_file: expected1]
            CALL 1 [source_file: expected1]
                GETPROP 1 [source_file: expected1]
                    NAME y 1 [source_file: expected1]
                    STRING b1 1 [source_file: expected1]
    SCRIPT 1 [synthetic: 1] [source_file: expected2] [input_id: InputId: expected2]
        EXPR_RESULT 1 [source_file: expected2]
            ASSIGN 1 [source_file: expected2]
                GETPROP 1 [source_file: expected2]
                    GETPROP 1 [source_file: expected2]
                        NAME Foo 1 [source_file: expected2]
                        STRING prototype 1 [source_file: expected2]
                    STRING b2 1 [source_file: expected2]
                CALL 1 [free_call: 1] [source_file: expected2]
                    NAME JSCompiler_unstubMethod 1 [source_file: expected2]
                    NUMBER 1.0 1 [source_file: expected2]
                    FUNCTION  1 [source_file: expected2]
                        NAME  1 [source_file: expected2]
                        PARAM_LIST 1 [source_file: expected2]
                        BLOCK 1 [source_file: expected2]
                            VAR 1 [source_file: expected2]
                                NAME x 1 [source_file: expected2]
                                    NUMBER 1.0 1 [source_file: expected2]
                            EXPR_RESULT 1 [source_file: expected2]
                                ASSIGN 1 [source_file: expected2]
                                    GETPROP 1 [source_file: expected2]
                                        GETPROP 1 [source_file: expected2]
                                            NAME Foo 1 [source_file: expected2]
                                            STRING prototype 1 [source_file: expected2]
                                        STRING b3 1 [source_file: expected2]
                                    FUNCTION  1 [source_file: expected2]
                                        NAME  1 [source_file: expected2]
                                        PARAM_LIST 1 [source_file: expected2]
                                        BLOCK 1 [source_file: expected2]
                                            EXPR_RESULT 1 [source_file: expected2]
                                                NAME x 1 [source_file: expected2]
        EXPR_RESULT 1 [source_file: expected2]
            ASSIGN 1 [source_file: expected2]
                NAME y 1 [source_file: expected2]
                NEW 1 [source_file: expected2]
                    NAME Foo 1 [source_file: expected2]
        EXPR_RESULT 1 [source_file: expected2]
            CALL 1 [source_file: expected2]
                GETPROP 1 [source_file: expected2]
                    NAME z 1 [source_file: expected2]
                    STRING b2 1 [source_file: expected2]
    SCRIPT 1 [synthetic: 1] [source_file: expected3] [input_id: InputId: expected3]
        EXPR_RESULT 1 [source_file: expected3]
            ASSIGN 1 [source_file: expected3]
                NAME y 1 [source_file: expected3]
                NEW 1 [source_file: expected3]
                    NAME Foo 1 [source_file: expected3]
        EXPR_RESULT 1 [source_file: expected3]
            CALL 1 [source_file: expected3]
                GETPROP 1 [source_file: expected3]
                    NAME z 1 [source_file: expected3]
                    STRING b3 1 [source_file: expected3]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: i0] [input_id: InputId: i0]
        VAR 1 [source_file:  [synthetic:1] ]
            NAME JSCompiler_stubMap 1 [source_file:  [synthetic:1] ]
                ARRAYLIT 1 [source_file:  [synthetic:1] ]
        FUNCTION JSCompiler_stubMethod 1 [source_file:  [synthetic:1] ]
            NAME JSCompiler_stubMethod 1 [source_file:  [synthetic:1] ]
            PARAM_LIST 1 [source_file:  [synthetic:1] ]
                NAME JSCompiler_stubMethod_id 1 [source_file:  [synthetic:1] ]
            BLOCK 1 [source_file:  [synthetic:1] ]
                RETURN 1 [source_file:  [synthetic:1] ]
                    FUNCTION  1 [source_file:  [synthetic:1] ]
                        NAME  1 [source_file:  [synthetic:1] ]
                        PARAM_LIST 1 [source_file:  [synthetic:1] ]
                        BLOCK 1 [source_file:  [synthetic:1] ]
                            RETURN 1 [source_file:  [synthetic:1] ]
                                CALL 1 [source_file:  [synthetic:1] ]
                                    GETPROP 1 [source_file:  [synthetic:1] ]
                                        GETELEM 1 [source_file:  [synthetic:1] ]
                                            NAME JSCompiler_stubMap 1 [source_file:  [synthetic:1] ]
                                            NAME JSCompiler_stubMethod_id 1 [source_file:  [synthetic:1] ]
                                        STRING apply 1 [source_file:  [synthetic:1] ]
                                    THIS 1 [source_file:  [synthetic:1] ]
                                    NAME arguments 1 [source_file:  [synthetic:1] ]
        FUNCTION JSCompiler_unstubMethod 1 [source_file:  [synthetic:1] ]
            NAME JSCompiler_unstubMethod 1 [source_file:  [synthetic:1] ]
            PARAM_LIST 1 [source_file:  [synthetic:1] ]
                NAME JSCompiler_unstubMethod_id 1 [source_file:  [synthetic:1] ]
                NAME JSCompiler_unstubMethod_body 1 [source_file:  [synthetic:1] ]
            BLOCK 1 [source_file:  [synthetic:1] ]
                RETURN 1 [source_file:  [synthetic:1] ]
                    ASSIGN 1 [source_file:  [synthetic:1] ]
                        GETELEM 1 [source_file:  [synthetic:1] ]
                            NAME JSCompiler_stubMap 1 [source_file:  [synthetic:1] ]
                            NAME JSCompiler_unstubMethod_id 1 [source_file:  [synthetic:1] ]
                        NAME JSCompiler_unstubMethod_body 1 [source_file:  [synthetic:1] ]
        FUNCTION Foo 1 [source_file: i0]
            NAME Foo 1 [source_file: i0]
            PARAM_LIST 1 [source_file: i0]
            BLOCK 1 [source_file: i0]
        EXPR_RESULT 1 [source_file: i0]
            ASSIGN 1 [source_file: i0]
                GETPROP 1 [source_file: i0]
                    GETPROP 1 [source_file: i0]
                        NAME Foo 1 [source_file: i0]
                        STRING prototype 1 [source_file: i0]
                    STRING b1 1 [source_file: i0]
                CALL 1 [free_call: 1] [source_file: i0]
                    NAME JSCompiler_stubMethod 1 [source_file: i0]
                    NUMBER 1.0 1 [source_file: i0]
    SCRIPT 1 [synthetic: 1] [source_file: i1] [input_id: InputId: i1]
        EXPR_RESULT 1 [source_file: i0]
            ASSIGN 1 [source_file: i0]
                GETPROP 1 [source_file: i0]
                    GETPROP 1 [source_file: i0]
                        NAME Foo 1 [source_file: i0]
                        STRING prototype 1 [source_file: i0]
                    STRING b1 1 [source_file: i0]
                CALL 1 [free_call: 1] [source_file: i0]
                    NAME JSCompiler_unstubMethod 1 [source_file: i0]
                    NUMBER 1.0 1 [source_file: i0]
                    FUNCTION  1 [source_file: i0]
                        NAME  1 [source_file: i0]
                        PARAM_LIST 1 [source_file: i0]
                        BLOCK 1 [source_file: i0]
                            EXPR_RESULT 1 [source_file: i0]
                                ASSIGN 1 [source_file: i0]
                                    GETPROP 1 [source_file: i0]
                                        GETPROP 1 [source_file: i0]
                                            NAME Foo 1 [source_file: i0]
                                            STRING prototype 1 [source_file: i0]
                                        STRING b2 1 [source_file: i0]
                                    CALL 1 [free_call: 1] [source_file: i0]
                                        NAME JSCompiler_stubMethod 1 [source_file: i0]
                                        NUMBER 0.0 1 [source_file: i0]
        VAR 1 [source_file: i1]
            NAME y 1 [source_file: i1]
                NEW 1 [source_file: i1]
                    NAME Foo 1 [source_file: i1]
        EXPR_RESULT 1 [source_file: i1]
            CALL 1 [source_file: i1]
                GETPROP 1 [source_file: i1]
                    NAME y 1 [source_file: i1]
                    STRING b1 1 [source_file: i1]
    SCRIPT 1 [synthetic: 1] [source_file: i2] [input_id: InputId: i2]
        EXPR_RESULT 1 [source_file: i0]
            ASSIGN 1 [source_file: i0]
                GETPROP 1 [source_file: i0]
                    GETPROP 1 [source_file: i0]
                        NAME Foo 1 [source_file: i0]
                        STRING prototype 1 [source_file: i0]
                    STRING b2 1 [source_file: i0]
                CALL 1 [free_call: 1] [source_file: i0]
                    NAME JSCompiler_unstubMethod 1 [source_file: i0]
                    NUMBER 0.0 1 [source_file: i0]
                    FUNCTION  1 [source_file: i0]
                        NAME  1 [source_file: i0]
                        PARAM_LIST 1 [source_file: i0]
                        BLOCK 1 [source_file: i0]
                            VAR 1 [source_file: i0]
                                NAME x 1 [source_file: i0]
                                    NUMBER 1.0 1 [source_file: i0]
                            EXPR_RESULT 1 [source_file: i0]
                                ASSIGN 1 [source_file: i0]
                                    GETPROP 1 [source_file: i0]
                                        GETPROP 1 [source_file: i0]
                                            NAME Foo 1 [source_file: i0]
                                            STRING prototype 1 [source_file: i0]
                                        STRING b3 1 [source_file: i0]
                                    FUNCTION  1 [source_file: i0]
                                        NAME  1 [source_file: i0]
                                        PARAM_LIST 1 [source_file: i0]
                                        BLOCK 1 [source_file: i0]
                                            EXPR_RESULT 1 [source_file: i0]
                                                NAME x 1 [source_file: i0]
        EXPR_RESULT 1 [source_file: i2]
            ASSIGN 1 [source_file: i2]
                NAME y 1 [source_file: i2]
                NEW 1 [source_file: i2]
                    NAME Foo 1 [source_file: i2]
        EXPR_RESULT 1 [source_file: i2]
            CALL 1 [source_file: i2]
                GETPROP 1 [source_file: i2]
                    NAME z 1 [source_file: i2]
                    STRING b2 1 [source_file: i2]
    SCRIPT 1 [synthetic: 1] [source_file: i3] [input_id: InputId: i3]
        EXPR_RESULT 1 [source_file: i3]
            ASSIGN 1 [source_file: i3]
                NAME y 1 [source_file: i3]
                NEW 1 [source_file: i3]
                    NAME Foo 1 [source_file: i3]
        EXPR_RESULT 1 [source_file: i3]
            CALL 1 [source_file: i3]
                GETPROP 1 [source_file: i3]
                    NAME z 1 [source_file: i3]
                    STRING b3 1 [source_file: i3]


Subtree1: NUMBER 0.0 1 [source_file: expected0]


Subtree2: NUMBER 1.0 1 [source_file: i0]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:928)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:736)
junit.framework.AssertionFailedError: 
Expected: f=function(){var action;a:{var proto=null;try{proto=new Proto}finally{action=proto;return}}}
Result: f=function(){var action;a:{var proto=null;try{proto=new Proto}finally{action=proto}}}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            ASSIGN 1 [source_file: expected0]
                NAME f 1 [source_file: expected0]
                FUNCTION  1 [source_file: expected0]
                    NAME  1 [source_file: expected0]
                    PARAM_LIST 1 [source_file: expected0]
                    BLOCK 1 [source_file: expected0]
                        VAR 2 [source_file: expected0]
                            NAME action 2 [source_file: expected0]
                        LABEL 3 [source_file: expected0]
                            LABEL_NAME a 3 [source_file: expected0]
                            BLOCK 3 [source_file: expected0]
                                VAR 4 [source_file: expected0]
                                    NAME proto 4 [source_file: expected0]
                                        NULL 4 [source_file: expected0]
                                TRY 5 [source_file: expected0]
                                    BLOCK 5 [source_file: expected0]
                                        EXPR_RESULT 6 [source_file: expected0]
                                            ASSIGN 6 [source_file: expected0]
                                                NAME proto 6 [source_file: expected0]
                                                NEW 6 [source_file: expected0]
                                                    NAME Proto 6 [source_file: expected0]
                                    BLOCK 7 [source_file: expected0]
                                    BLOCK 7 [source_file: expected0]
                                        EXPR_RESULT 8 [source_file: expected0]
                                            ASSIGN 8 [source_file: expected0]
                                                NAME action 8 [source_file: expected0]
                                                NAME proto 8 [source_file: expected0]
                                        RETURN 9 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        EXPR_RESULT 1 [source_file: testcode]
            ASSIGN 1 [source_file: testcode]
                NAME f 1 [source_file: testcode]
                FUNCTION  1 [source_file: testcode]
                    NAME  1 [source_file: testcode]
                    PARAM_LIST 1 [source_file: testcode]
                    BLOCK 1 [source_file: testcode]
                        VAR 2 [source_file: testcode]
                            NAME action 2 [source_file: testcode]
                        LABEL 3 [source_file: testcode]
                            LABEL_NAME a 3 [source_file: testcode]
                            BLOCK 3 [source_file: testcode]
                                VAR 4 [source_file: testcode]
                                    NAME proto 4 [source_file: testcode]
                                        NULL 4 [source_file: testcode]
                                TRY 5 [source_file: testcode]
                                    BLOCK 5 [source_file: testcode]
                                        EXPR_RESULT 6 [source_file: testcode]
                                            ASSIGN 6 [source_file: testcode]
                                                NAME proto 6 [source_file: testcode]
                                                NEW 6 [source_file: testcode]
                                                    NAME Proto 6 [source_file: testcode]
                                    BLOCK 7 [source_file: testcode]
                                    BLOCK 7 [source_file: testcode]
                                        EXPR_RESULT 8 [source_file: testcode]
                                            ASSIGN 8 [source_file: testcode]
                                                NAME action 8 [source_file: testcode]
                                                NAME proto 8 [source_file: testcode]


Subtree1: BLOCK 7 [source_file: expected0]
    EXPR_RESULT 8 [source_file: expected0]
        ASSIGN 8 [source_file: expected0]
            NAME action 8 [source_file: expected0]
            NAME proto 8 [source_file: expected0]
    RETURN 9 [source_file: expected0]


Subtree2: BLOCK 7 [source_file: testcode]
    EXPR_RESULT 8 [source_file: testcode]
        ASSIGN 8 [source_file: testcode]
            NAME action 8 [source_file: testcode]
            NAME proto 8 [source_file: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:928)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:460)
junit.framework.AssertionFailedError: 
Expected: function f(){b:try{throw 9;}finally{break b}return 1}
Result: function f(){b:try{throw 9;}finally{}return 1}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION f 1 [source_file: expected0]
            NAME f 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                LABEL 1 [source_file: expected0]
                    LABEL_NAME b 1 [source_file: expected0]
                    TRY 1 [source_file: expected0]
                        BLOCK 1 [source_file: expected0]
                            THROW 1 [source_file: expected0]
                                NUMBER 9.0 1 [source_file: expected0]
                        BLOCK 1 [source_file: expected0]
                        BLOCK 1 [source_file: expected0]
                            BREAK 1 [source_file: expected0]
                                LABEL_NAME b 1 [source_file: expected0]
                RETURN 1 [source_file: expected0]
                    NUMBER 1.0 1 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION f 1 [source_file: testcode]
            NAME f 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                LABEL 1 [source_file: testcode]
                    LABEL_NAME b 1 [source_file: testcode]
                    TRY 1 [source_file: testcode]
                        BLOCK 1 [source_file: testcode]
                            THROW 1 [source_file: testcode]
                                NUMBER 9.0 1 [source_file: testcode]
                        BLOCK 1 [source_file: testcode]
                        BLOCK 1 [source_file: testcode]
                RETURN 1 [source_file: testcode]
                    NUMBER 1.0 1 [source_file: testcode]


Subtree1: BLOCK 1 [source_file: expected0]
    BREAK 1 [source_file: expected0]
        LABEL_NAME b 1 [source_file: expected0]


Subtree2: BLOCK 1 [source_file: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:928)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:460)
junit.framework.AssertionFailedError: 
Expected: f=function(){var action;a:do{var proto=null;try{proto=new Proto}finally{action=proto;continue a}}while(false);alert(action)}
Result: f=function(){var action;a:do{var proto=null;try{proto=new Proto}finally{action=proto}}while(false);alert(action)}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            ASSIGN 1 [source_file: expected0]
                NAME f 1 [source_file: expected0]
                FUNCTION  1 [source_file: expected0]
                    NAME  1 [source_file: expected0]
                    PARAM_LIST 1 [source_file: expected0]
                    BLOCK 1 [source_file: expected0]
                        VAR 2 [source_file: expected0]
                            NAME action 2 [source_file: expected0]
                        LABEL 3 [source_file: expected0]
                            LABEL_NAME a 3 [source_file: expected0]
                            DO 3 [source_file: expected0]
                                BLOCK 3 [source_file: expected0]
                                    VAR 4 [source_file: expected0]
                                        NAME proto 4 [source_file: expected0]
                                            NULL 4 [source_file: expected0]
                                    TRY 5 [source_file: expected0]
                                        BLOCK 5 [source_file: expected0]
                                            EXPR_RESULT 6 [source_file: expected0]
                                                ASSIGN 6 [source_file: expected0]
                                                    NAME proto 6 [source_file: expected0]
                                                    NEW 6 [source_file: expected0]
                                                        NAME Proto 6 [source_file: expected0]
                                        BLOCK 7 [source_file: expected0]
                                        BLOCK 7 [source_file: expected0]
                                            EXPR_RESULT 8 [source_file: expected0]
                                                ASSIGN 8 [source_file: expected0]
                                                    NAME action 8 [source_file: expected0]
                                                    NAME proto 8 [source_file: expected0]
                                            CONTINUE 9 [source_file: expected0]
                                                LABEL_NAME a 9 [source_file: expected0]
                                FALSE 11 [source_file: expected0]
                        EXPR_RESULT 12 [source_file: expected0]
                            CALL 12 [free_call: 1] [source_file: expected0]
                                NAME alert 12 [source_file: expected0]
                                NAME action 12 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        EXPR_RESULT 1 [source_file: testcode]
            ASSIGN 1 [source_file: testcode]
                NAME f 1 [source_file: testcode]
                FUNCTION  1 [source_file: testcode]
                    NAME  1 [source_file: testcode]
                    PARAM_LIST 1 [source_file: testcode]
                    BLOCK 1 [source_file: testcode]
                        VAR 2 [source_file: testcode]
                            NAME action 2 [source_file: testcode]
                        LABEL 3 [source_file: testcode]
                            LABEL_NAME a 3 [source_file: testcode]
                            DO 3 [source_file: testcode]
                                BLOCK 3 [source_file: testcode]
                                    VAR 4 [source_file: testcode]
                                        NAME proto 4 [source_file: testcode]
                                            NULL 4 [source_file: testcode]
                                    TRY 5 [source_file: testcode]
                                        BLOCK 5 [source_file: testcode]
                                            EXPR_RESULT 6 [source_file: testcode]
                                                ASSIGN 6 [source_file: testcode]
                                                    NAME proto 6 [source_file: testcode]
                                                    NEW 6 [source_file: testcode]
                                                        NAME Proto 6 [source_file: testcode]
                                        BLOCK 7 [source_file: testcode]
                                        BLOCK 7 [source_file: testcode]
                                            EXPR_RESULT 8 [source_file: testcode]
                                                ASSIGN 8 [source_file: testcode]
                                                    NAME action 8 [source_file: testcode]
                                                    NAME proto 8 [source_file: testcode]
                                FALSE 11 [source_file: testcode]
                        EXPR_RESULT 12 [source_file: testcode]
                            CALL 12 [free_call: 1] [source_file: testcode]
                                NAME alert 12 [source_file: testcode]
                                NAME action 12 [source_file: testcode]


Subtree1: BLOCK 7 [source_file: expected0]
    EXPR_RESULT 8 [source_file: expected0]
        ASSIGN 8 [source_file: expected0]
            NAME action 8 [source_file: expected0]
            NAME proto 8 [source_file: expected0]
    CONTINUE 9 [source_file: expected0]
        LABEL_NAME a 9 [source_file: expected0]


Subtree2: BLOCK 7 [source_file: testcode]
    EXPR_RESULT 8 [source_file: testcode]
        ASSIGN 8 [source_file: testcode]
            NAME action 8 [source_file: testcode]
            NAME proto 8 [source_file: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:928)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:460)
junit.framework.AssertionFailedError: 
Expected: function f(){b:try{throw 9;}finally{switch(x){case 1:break b}}return 1}
Result: function f(){b:try{throw 9;}finally{switch(x){case 1:}}return 1}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION f 1 [source_file: expected0]
            NAME f 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                LABEL 1 [source_file: expected0]
                    LABEL_NAME b 1 [source_file: expected0]
                    TRY 1 [source_file: expected0]
                        BLOCK 1 [source_file: expected0]
                            THROW 1 [source_file: expected0]
                                NUMBER 9.0 1 [source_file: expected0]
                        BLOCK 1 [source_file: expected0]
                        BLOCK 1 [source_file: expected0]
                            SWITCH 1 [source_file: expected0]
                                NAME x 1 [source_file: expected0]
                                CASE 1 [source_file: expected0]
                                    NUMBER 1.0 1 [source_file: expected0]
                                    BLOCK 1 [synthetic: 1] [source_file: expected0]
                                        BREAK 1 [source_file: expected0]
                                            LABEL_NAME b 1 [source_file: expected0]
                RETURN 1 [source_file: expected0]
                    NUMBER 1.0 1 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION f 1 [source_file: testcode]
            NAME f 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                LABEL 1 [source_file: testcode]
                    LABEL_NAME b 1 [source_file: testcode]
                    TRY 1 [source_file: testcode]
                        BLOCK 1 [source_file: testcode]
                            THROW 1 [source_file: testcode]
                                NUMBER 9.0 1 [source_file: testcode]
                        BLOCK 1 [source_file: testcode]
                        BLOCK 1 [source_file: testcode]
                            SWITCH 1 [source_file: testcode]
                                NAME x 1 [source_file: testcode]
                                CASE 1 [source_file: testcode]
                                    NUMBER 1.0 1 [source_file: testcode]
                                    BLOCK 1 [synthetic: 1] [source_file: testcode]
                RETURN 1 [source_file: testcode]
                    NUMBER 1.0 1 [source_file: testcode]


Subtree1: BLOCK 1 [synthetic: 1] [source_file: expected0]
    BREAK 1 [source_file: expected0]
        LABEL_NAME b 1 [source_file: expected0]


Subtree2: BLOCK 1 [synthetic: 1] [source_file: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:928)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:460)
junit.framework.AssertionFailedError: 
Expected: f=function(){var action;a:{var proto=null;try{proto=new Proto}finally{action=proto;break a}}alert(action)}
Result: f=function(){var action;a:{var proto=null;try{proto=new Proto}finally{action=proto}}alert(action)}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            ASSIGN 1 [source_file: expected0]
                NAME f 1 [source_file: expected0]
                FUNCTION  1 [source_file: expected0]
                    NAME  1 [source_file: expected0]
                    PARAM_LIST 1 [source_file: expected0]
                    BLOCK 1 [source_file: expected0]
                        VAR 2 [source_file: expected0]
                            NAME action 2 [source_file: expected0]
                        LABEL 3 [source_file: expected0]
                            LABEL_NAME a 3 [source_file: expected0]
                            BLOCK 3 [source_file: expected0]
                                VAR 4 [source_file: expected0]
                                    NAME proto 4 [source_file: expected0]
                                        NULL 4 [source_file: expected0]
                                TRY 5 [source_file: expected0]
                                    BLOCK 5 [source_file: expected0]
                                        EXPR_RESULT 6 [source_file: expected0]
                                            ASSIGN 6 [source_file: expected0]
                                                NAME proto 6 [source_file: expected0]
                                                NEW 6 [source_file: expected0]
                                                    NAME Proto 6 [source_file: expected0]
                                    BLOCK 7 [source_file: expected0]
                                    BLOCK 7 [source_file: expected0]
                                        EXPR_RESULT 8 [source_file: expected0]
                                            ASSIGN 8 [source_file: expected0]
                                                NAME action 8 [source_file: expected0]
                                                NAME proto 8 [source_file: expected0]
                                        BREAK 9 [source_file: expected0]
                                            LABEL_NAME a 9 [source_file: expected0]
                        EXPR_RESULT 12 [source_file: expected0]
                            CALL 12 [free_call: 1] [source_file: expected0]
                                NAME alert 12 [source_file: expected0]
                                NAME action 12 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        EXPR_RESULT 1 [source_file: testcode]
            ASSIGN 1 [source_file: testcode]
                NAME f 1 [source_file: testcode]
                FUNCTION  1 [source_file: testcode]
                    NAME  1 [source_file: testcode]
                    PARAM_LIST 1 [source_file: testcode]
                    BLOCK 1 [source_file: testcode]
                        VAR 2 [source_file: testcode]
                            NAME action 2 [source_file: testcode]
                        LABEL 3 [source_file: testcode]
                            LABEL_NAME a 3 [source_file: testcode]
                            BLOCK 3 [source_file: testcode]
                                VAR 4 [source_file: testcode]
                                    NAME proto 4 [source_file: testcode]
                                        NULL 4 [source_file: testcode]
                                TRY 5 [source_file: testcode]
                                    BLOCK 5 [source_file: testcode]
                                        EXPR_RESULT 6 [source_file: testcode]
                                            ASSIGN 6 [source_file: testcode]
                                                NAME proto 6 [source_file: testcode]
                                                NEW 6 [source_file: testcode]
                                                    NAME Proto 6 [source_file: testcode]
                                    BLOCK 7 [source_file: testcode]
                                    BLOCK 7 [source_file: testcode]
                                        EXPR_RESULT 8 [source_file: testcode]
                                            ASSIGN 8 [source_file: testcode]
                                                NAME action 8 [source_file: testcode]
                                                NAME proto 8 [source_file: testcode]
                        EXPR_RESULT 12 [source_file: testcode]
                            CALL 12 [free_call: 1] [source_file: testcode]
                                NAME alert 12 [source_file: testcode]
                                NAME action 12 [source_file: testcode]


Subtree1: BLOCK 7 [source_file: expected0]
    EXPR_RESULT 8 [source_file: expected0]
        ASSIGN 8 [source_file: expected0]
            NAME action 8 [source_file: expected0]
            NAME proto 8 [source_file: expected0]
    BREAK 9 [source_file: expected0]
        LABEL_NAME a 9 [source_file: expected0]


Subtree2: BLOCK 7 [source_file: testcode]
    EXPR_RESULT 8 [source_file: testcode]
        ASSIGN 8 [source_file: testcode]
            NAME action 8 [source_file: testcode]
            NAME proto 8 [source_file: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:928)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:460)
junit.framework.AssertionFailedError: 
Expected: f=function(){var action;a:{var proto=null;try{}finally{try{proto=new Proto}finally{action=proto;break a}}}alert(action)}
Result: f=function(){var action;a:{var proto=null;try{}finally{try{proto=new Proto}finally{action=proto}}}alert(action)}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            ASSIGN 1 [source_file: expected0]
                NAME f 1 [source_file: expected0]
                FUNCTION  1 [source_file: expected0]
                    NAME  1 [source_file: expected0]
                    PARAM_LIST 1 [source_file: expected0]
                    BLOCK 1 [source_file: expected0]
                        VAR 2 [source_file: expected0]
                            NAME action 2 [source_file: expected0]
                        LABEL 3 [source_file: expected0]
                            LABEL_NAME a 3 [source_file: expected0]
                            BLOCK 3 [source_file: expected0]
                                VAR 4 [source_file: expected0]
                                    NAME proto 4 [source_file: expected0]
                                        NULL 4 [source_file: expected0]
                                TRY 5 [source_file: expected0]
                                    BLOCK 5 [source_file: expected0]
                                    BLOCK 6 [source_file: expected0]
                                    BLOCK 6 [source_file: expected0]
                                        TRY 7 [source_file: expected0]
                                            BLOCK 7 [source_file: expected0]
                                                EXPR_RESULT 8 [source_file: expected0]
                                                    ASSIGN 8 [source_file: expected0]
                                                        NAME proto 8 [source_file: expected0]
                                                        NEW 8 [source_file: expected0]
                                                            NAME Proto 8 [source_file: expected0]
                                            BLOCK 9 [source_file: expected0]
                                            BLOCK 9 [source_file: expected0]
                                                EXPR_RESULT 10 [source_file: expected0]
                                                    ASSIGN 10 [source_file: expected0]
                                                        NAME action 10 [source_file: expected0]
                                                        NAME proto 10 [source_file: expected0]
                                                BREAK 11 [source_file: expected0]
                                                    LABEL_NAME a 11 [source_file: expected0]
                        EXPR_RESULT 15 [source_file: expected0]
                            CALL 15 [free_call: 1] [source_file: expected0]
                                NAME alert 15 [source_file: expected0]
                                NAME action 15 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        EXPR_RESULT 1 [source_file: testcode]
            ASSIGN 1 [source_file: testcode]
                NAME f 1 [source_file: testcode]
                FUNCTION  1 [source_file: testcode]
                    NAME  1 [source_file: testcode]
                    PARAM_LIST 1 [source_file: testcode]
                    BLOCK 1 [source_file: testcode]
                        VAR 2 [source_file: testcode]
                            NAME action 2 [source_file: testcode]
                        LABEL 3 [source_file: testcode]
                            LABEL_NAME a 3 [source_file: testcode]
                            BLOCK 3 [source_file: testcode]
                                VAR 4 [source_file: testcode]
                                    NAME proto 4 [source_file: testcode]
                                        NULL 4 [source_file: testcode]
                                TRY 5 [source_file: testcode]
                                    BLOCK 5 [source_file: testcode]
                                    BLOCK 6 [source_file: testcode]
                                    BLOCK 6 [source_file: testcode]
                                        TRY 7 [source_file: testcode]
                                            BLOCK 7 [source_file: testcode]
                                                EXPR_RESULT 8 [source_file: testcode]
                                                    ASSIGN 8 [source_file: testcode]
                                                        NAME proto 8 [source_file: testcode]
                                                        NEW 8 [source_file: testcode]
                                                            NAME Proto 8 [source_file: testcode]
                                            BLOCK 9 [source_file: testcode]
                                            BLOCK 9 [source_file: testcode]
                                                EXPR_RESULT 10 [source_file: testcode]
                                                    ASSIGN 10 [source_file: testcode]
                                                        NAME action 10 [source_file: testcode]
                                                        NAME proto 10 [source_file: testcode]
                        EXPR_RESULT 15 [source_file: testcode]
                            CALL 15 [free_call: 1] [source_file: testcode]
                                NAME alert 15 [source_file: testcode]
                                NAME action 15 [source_file: testcode]


Subtree1: BLOCK 9 [source_file: expected0]
    EXPR_RESULT 10 [source_file: expected0]
        ASSIGN 10 [source_file: expected0]
            NAME action 10 [source_file: expected0]
            NAME proto 10 [source_file: expected0]
    BREAK 11 [source_file: expected0]
        LABEL_NAME a 11 [source_file: expected0]


Subtree2: BLOCK 9 [source_file: testcode]
    EXPR_RESULT 10 [source_file: testcode]
        ASSIGN 10 [source_file: testcode]
            NAME action 10 [source_file: testcode]
            NAME proto 10 [source_file: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:928)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:460)
junit.framework.AssertionFailedError: 
Expected: f=function(){var action;a:{var proto=null;try{proto=new Proto}finally{action=proto;return}}}
Result: f=function(){var action;a:{var proto=null;try{proto=new Proto}finally{action=proto}}}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            ASSIGN 1 [source_file: expected0]
                NAME f 1 [source_file: expected0]
                FUNCTION  1 [source_file: expected0]
                    NAME  1 [source_file: expected0]
                    PARAM_LIST 1 [source_file: expected0]
                    BLOCK 1 [source_file: expected0]
                        VAR 2 [source_file: expected0]
                            NAME action 2 [source_file: expected0]
                        LABEL 3 [source_file: expected0]
                            LABEL_NAME a 3 [source_file: expected0]
                            BLOCK 3 [source_file: expected0]
                                VAR 4 [source_file: expected0]
                                    NAME proto 4 [source_file: expected0]
                                        NULL 4 [source_file: expected0]
                                TRY 5 [source_file: expected0]
                                    BLOCK 5 [source_file: expected0]
                                        EXPR_RESULT 6 [source_file: expected0]
                                            ASSIGN 6 [source_file: expected0]
                                                NAME proto 6 [source_file: expected0]
                                                NEW 6 [source_file: expected0]
                                                    NAME Proto 6 [source_file: expected0]
                                    BLOCK 7 [source_file: expected0]
                                    BLOCK 7 [source_file: expected0]
                                        EXPR_RESULT 8 [source_file: expected0]
                                            ASSIGN 8 [source_file: expected0]
                                                NAME action 8 [source_file: expected0]
                                                NAME proto 8 [source_file: expected0]
                                        RETURN 9 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        EXPR_RESULT 1 [source_file: testcode]
            ASSIGN 1 [source_file: testcode]
                NAME f 1 [source_file: testcode]
                FUNCTION  1 [source_file: testcode]
                    NAME  1 [source_file: testcode]
                    PARAM_LIST 1 [source_file: testcode]
                    BLOCK 1 [source_file: testcode]
                        VAR 2 [source_file: testcode]
                            NAME action 2 [source_file: testcode]
                        LABEL 3 [source_file: testcode]
                            LABEL_NAME a 3 [source_file: testcode]
                            BLOCK 3 [source_file: testcode]
                                VAR 4 [source_file: testcode]
                                    NAME proto 4 [source_file: testcode]
                                        NULL 4 [source_file: testcode]
                                TRY 5 [source_file: testcode]
                                    BLOCK 5 [source_file: testcode]
                                        EXPR_RESULT 6 [source_file: testcode]
                                            ASSIGN 6 [source_file: testcode]
                                                NAME proto 6 [source_file: testcode]
                                                NEW 6 [source_file: testcode]
                                                    NAME Proto 6 [source_file: testcode]
                                    BLOCK 7 [source_file: testcode]
                                    BLOCK 7 [source_file: testcode]
                                        EXPR_RESULT 8 [source_file: testcode]
                                            ASSIGN 8 [source_file: testcode]
                                                NAME action 8 [source_file: testcode]
                                                NAME proto 8 [source_file: testcode]


Subtree1: BLOCK 7 [source_file: expected0]
    EXPR_RESULT 8 [source_file: expected0]
        ASSIGN 8 [source_file: expected0]
            NAME action 8 [source_file: expected0]
            NAME proto 8 [source_file: expected0]
    RETURN 9 [source_file: expected0]


Subtree2: BLOCK 7 [source_file: testcode]
    EXPR_RESULT 8 [source_file: testcode]
        ASSIGN 8 [source_file: testcode]
            NAME action 8 [source_file: testcode]
            NAME proto 8 [source_file: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:928)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:460)
junit.framework.AssertionFailedError: 
Expected: function f(){b:try{throw 9;}finally{break b}return 1}
Result: function f(){b:try{throw 9;}finally{}return 1}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION f 1 [source_file: expected0]
            NAME f 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                LABEL 1 [source_file: expected0]
                    LABEL_NAME b 1 [source_file: expected0]
                    TRY 1 [source_file: expected0]
                        BLOCK 1 [source_file: expected0]
                            THROW 1 [source_file: expected0]
                                NUMBER 9.0 1 [source_file: expected0]
                        BLOCK 1 [source_file: expected0]
                        BLOCK 1 [source_file: expected0]
                            BREAK 1 [source_file: expected0]
                                LABEL_NAME b 1 [source_file: expected0]
                RETURN 1 [source_file: expected0]
                    NUMBER 1.0 1 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION f 1 [source_file: testcode]
            NAME f 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                LABEL 1 [source_file: testcode]
                    LABEL_NAME b 1 [source_file: testcode]
                    TRY 1 [source_file: testcode]
                        BLOCK 1 [source_file: testcode]
                            THROW 1 [source_file: testcode]
                                NUMBER 9.0 1 [source_file: testcode]
                        BLOCK 1 [source_file: testcode]
                        BLOCK 1 [source_file: testcode]
                RETURN 1 [source_file: testcode]
                    NUMBER 1.0 1 [source_file: testcode]


Subtree1: BLOCK 1 [source_file: expected0]
    BREAK 1 [source_file: expected0]
        LABEL_NAME b 1 [source_file: expected0]


Subtree2: BLOCK 1 [source_file: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:928)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:460)
junit.framework.AssertionFailedError: 
Expected: f=function(){var action;a:do{var proto=null;try{proto=new Proto}finally{action=proto;continue a}}while(false);alert(action)}
Result: f=function(){var action;a:do{var proto=null;try{proto=new Proto}finally{action=proto}}while(false);alert(action)}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            ASSIGN 1 [source_file: expected0]
                NAME f 1 [source_file: expected0]
                FUNCTION  1 [source_file: expected0]
                    NAME  1 [source_file: expected0]
                    PARAM_LIST 1 [source_file: expected0]
                    BLOCK 1 [source_file: expected0]
                        VAR 2 [source_file: expected0]
                            NAME action 2 [source_file: expected0]
                        LABEL 3 [source_file: expected0]
                            LABEL_NAME a 3 [source_file: expected0]
                            DO 3 [source_file: expected0]
                                BLOCK 3 [source_file: expected0]
                                    VAR 4 [source_file: expected0]
                                        NAME proto 4 [source_file: expected0]
                                            NULL 4 [source_file: expected0]
                                    TRY 5 [source_file: expected0]
                                        BLOCK 5 [source_file: expected0]
                                            EXPR_RESULT 6 [source_file: expected0]
                                                ASSIGN 6 [source_file: expected0]
                                                    NAME proto 6 [source_file: expected0]
                                                    NEW 6 [source_file: expected0]
                                                        NAME Proto 6 [source_file: expected0]
                                        BLOCK 7 [source_file: expected0]
                                        BLOCK 7 [source_file: expected0]
                                            EXPR_RESULT 8 [source_file: expected0]
                                                ASSIGN 8 [source_file: expected0]
                                                    NAME action 8 [source_file: expected0]
                                                    NAME proto 8 [source_file: expected0]
                                            CONTINUE 9 [source_file: expected0]
                                                LABEL_NAME a 9 [source_file: expected0]
                                FALSE 11 [source_file: expected0]
                        EXPR_RESULT 12 [source_file: expected0]
                            CALL 12 [free_call: 1] [source_file: expected0]
                                NAME alert 12 [source_file: expected0]
                                NAME action 12 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        EXPR_RESULT 1 [source_file: testcode]
            ASSIGN 1 [source_file: testcode]
                NAME f 1 [source_file: testcode]
                FUNCTION  1 [source_file: testcode]
                    NAME  1 [source_file: testcode]
                    PARAM_LIST 1 [source_file: testcode]
                    BLOCK 1 [source_file: testcode]
                        VAR 2 [source_file: testcode]
                            NAME action 2 [source_file: testcode]
                        LABEL 3 [source_file: testcode]
                            LABEL_NAME a 3 [source_file: testcode]
                            DO 3 [source_file: testcode]
                                BLOCK 3 [source_file: testcode]
                                    VAR 4 [source_file: testcode]
                                        NAME proto 4 [source_file: testcode]
                                            NULL 4 [source_file: testcode]
                                    TRY 5 [source_file: testcode]
                                        BLOCK 5 [source_file: testcode]
                                            EXPR_RESULT 6 [source_file: testcode]
                                                ASSIGN 6 [source_file: testcode]
                                                    NAME proto 6 [source_file: testcode]
                                                    NEW 6 [source_file: testcode]
                                                        NAME Proto 6 [source_file: testcode]
                                        BLOCK 7 [source_file: testcode]
                                        BLOCK 7 [source_file: testcode]
                                            EXPR_RESULT 8 [source_file: testcode]
                                                ASSIGN 8 [source_file: testcode]
                                                    NAME action 8 [source_file: testcode]
                                                    NAME proto 8 [source_file: testcode]
                                FALSE 11 [source_file: testcode]
                        EXPR_RESULT 12 [source_file: testcode]
                            CALL 12 [free_call: 1] [source_file: testcode]
                                NAME alert 12 [source_file: testcode]
                                NAME action 12 [source_file: testcode]


Subtree1: BLOCK 7 [source_file: expected0]
    EXPR_RESULT 8 [source_file: expected0]
        ASSIGN 8 [source_file: expected0]
            NAME action 8 [source_file: expected0]
            NAME proto 8 [source_file: expected0]
    CONTINUE 9 [source_file: expected0]
        LABEL_NAME a 9 [source_file: expected0]


Subtree2: BLOCK 7 [source_file: testcode]
    EXPR_RESULT 8 [source_file: testcode]
        ASSIGN 8 [source_file: testcode]
            NAME action 8 [source_file: testcode]
            NAME proto 8 [source_file: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:928)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:460)
junit.framework.AssertionFailedError: 
Expected: function f(){b:try{throw 9;}finally{switch(x){case 1:break b}}return 1}
Result: function f(){b:try{throw 9;}finally{switch(x){case 1:}}return 1}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION f 1 [source_file: expected0]
            NAME f 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                LABEL 1 [source_file: expected0]
                    LABEL_NAME b 1 [source_file: expected0]
                    TRY 1 [source_file: expected0]
                        BLOCK 1 [source_file: expected0]
                            THROW 1 [source_file: expected0]
                                NUMBER 9.0 1 [source_file: expected0]
                        BLOCK 1 [source_file: expected0]
                        BLOCK 1 [source_file: expected0]
                            SWITCH 1 [source_file: expected0]
                                NAME x 1 [source_file: expected0]
                                CASE 1 [source_file: expected0]
                                    NUMBER 1.0 1 [source_file: expected0]
                                    BLOCK 1 [synthetic: 1] [source_file: expected0]
                                        BREAK 1 [source_file: expected0]
                                            LABEL_NAME b 1 [source_file: expected0]
                RETURN 1 [source_file: expected0]
                    NUMBER 1.0 1 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION f 1 [source_file: testcode]
            NAME f 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                LABEL 1 [source_file: testcode]
                    LABEL_NAME b 1 [source_file: testcode]
                    TRY 1 [source_file: testcode]
                        BLOCK 1 [source_file: testcode]
                            THROW 1 [source_file: testcode]
                                NUMBER 9.0 1 [source_file: testcode]
                        BLOCK 1 [source_file: testcode]
                        BLOCK 1 [source_file: testcode]
                            SWITCH 1 [source_file: testcode]
                                NAME x 1 [source_file: testcode]
                                CASE 1 [source_file: testcode]
                                    NUMBER 1.0 1 [source_file: testcode]
                                    BLOCK 1 [synthetic: 1] [source_file: testcode]
                RETURN 1 [source_file: testcode]
                    NUMBER 1.0 1 [source_file: testcode]


Subtree1: BLOCK 1 [synthetic: 1] [source_file: expected0]
    BREAK 1 [source_file: expected0]
        LABEL_NAME b 1 [source_file: expected0]


Subtree2: BLOCK 1 [synthetic: 1] [source_file: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:928)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:460)
junit.framework.AssertionFailedError: 
Expected: f=function(){var action;a:{var proto=null;try{proto=new Proto}finally{action=proto;break a}}alert(action)}
Result: f=function(){var action;a:{var proto=null;try{proto=new Proto}finally{action=proto}}alert(action)}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            ASSIGN 1 [source_file: expected0]
                NAME f 1 [source_file: expected0]
                FUNCTION  1 [source_file: expected0]
                    NAME  1 [source_file: expected0]
                    PARAM_LIST 1 [source_file: expected0]
                    BLOCK 1 [source_file: expected0]
                        VAR 2 [source_file: expected0]
                            NAME action 2 [source_file: expected0]
                        LABEL 3 [source_file: expected0]
                            LABEL_NAME a 3 [source_file: expected0]
                            BLOCK 3 [source_file: expected0]
                                VAR 4 [source_file: expected0]
                                    NAME proto 4 [source_file: expected0]
                                        NULL 4 [source_file: expected0]
                                TRY 5 [source_file: expected0]
                                    BLOCK 5 [source_file: expected0]
                                        EXPR_RESULT 6 [source_file: expected0]
                                            ASSIGN 6 [source_file: expected0]
                                                NAME proto 6 [source_file: expected0]
                                                NEW 6 [source_file: expected0]
                                                    NAME Proto 6 [source_file: expected0]
                                    BLOCK 7 [source_file: expected0]
                                    BLOCK 7 [source_file: expected0]
                                        EXPR_RESULT 8 [source_file: expected0]
                                            ASSIGN 8 [source_file: expected0]
                                                NAME action 8 [source_file: expected0]
                                                NAME proto 8 [source_file: expected0]
                                        BREAK 9 [source_file: expected0]
                                            LABEL_NAME a 9 [source_file: expected0]
                        EXPR_RESULT 12 [source_file: expected0]
                            CALL 12 [free_call: 1] [source_file: expected0]
                                NAME alert 12 [source_file: expected0]
                                NAME action 12 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        EXPR_RESULT 1 [source_file: testcode]
            ASSIGN 1 [source_file: testcode]
                NAME f 1 [source_file: testcode]
                FUNCTION  1 [source_file: testcode]
                    NAME  1 [source_file: testcode]
                    PARAM_LIST 1 [source_file: testcode]
                    BLOCK 1 [source_file: testcode]
                        VAR 2 [source_file: testcode]
                            NAME action 2 [source_file: testcode]
                        LABEL 3 [source_file: testcode]
                            LABEL_NAME a 3 [source_file: testcode]
                            BLOCK 3 [source_file: testcode]
                                VAR 4 [source_file: testcode]
                                    NAME proto 4 [source_file: testcode]
                                        NULL 4 [source_file: testcode]
                                TRY 5 [source_file: testcode]
                                    BLOCK 5 [source_file: testcode]
                                        EXPR_RESULT 6 [source_file: testcode]
                                            ASSIGN 6 [source_file: testcode]
                                                NAME proto 6 [source_file: testcode]
                                                NEW 6 [source_file: testcode]
                                                    NAME Proto 6 [source_file: testcode]
                                    BLOCK 7 [source_file: testcode]
                                    BLOCK 7 [source_file: testcode]
                                        EXPR_RESULT 8 [source_file: testcode]
                                            ASSIGN 8 [source_file: testcode]
                                                NAME action 8 [source_file: testcode]
                                                NAME proto 8 [source_file: testcode]
                        EXPR_RESULT 12 [source_file: testcode]
                            CALL 12 [free_call: 1] [source_file: testcode]
                                NAME alert 12 [source_file: testcode]
                                NAME action 12 [source_file: testcode]


Subtree1: BLOCK 7 [source_file: expected0]
    EXPR_RESULT 8 [source_file: expected0]
        ASSIGN 8 [source_file: expected0]
            NAME action 8 [source_file: expected0]
            NAME proto 8 [source_file: expected0]
    BREAK 9 [source_file: expected0]
        LABEL_NAME a 9 [source_file: expected0]


Subtree2: BLOCK 7 [source_file: testcode]
    EXPR_RESULT 8 [source_file: testcode]
        ASSIGN 8 [source_file: testcode]
            NAME action 8 [source_file: testcode]
            NAME proto 8 [source_file: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:928)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:460)
junit.framework.AssertionFailedError: 
Expected: f=function(){var action;a:{var proto=null;try{}finally{try{proto=new Proto}finally{action=proto;break a}}}alert(action)}
Result: f=function(){var action;a:{var proto=null;try{}finally{try{proto=new Proto}finally{action=proto}}}alert(action)}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            ASSIGN 1 [source_file: expected0]
                NAME f 1 [source_file: expected0]
                FUNCTION  1 [source_file: expected0]
                    NAME  1 [source_file: expected0]
                    PARAM_LIST 1 [source_file: expected0]
                    BLOCK 1 [source_file: expected0]
                        VAR 2 [source_file: expected0]
                            NAME action 2 [source_file: expected0]
                        LABEL 3 [source_file: expected0]
                            LABEL_NAME a 3 [source_file: expected0]
                            BLOCK 3 [source_file: expected0]
                                VAR 4 [source_file: expected0]
                                    NAME proto 4 [source_file: expected0]
                                        NULL 4 [source_file: expected0]
                                TRY 5 [source_file: expected0]
                                    BLOCK 5 [source_file: expected0]
                                    BLOCK 6 [source_file: expected0]
                                    BLOCK 6 [source_file: expected0]
                                        TRY 7 [source_file: expected0]
                                            BLOCK 7 [source_file: expected0]
                                                EXPR_RESULT 8 [source_file: expected0]
                                                    ASSIGN 8 [source_file: expected0]
                                                        NAME proto 8 [source_file: expected0]
                                                        NEW 8 [source_file: expected0]
                                                            NAME Proto 8 [source_file: expected0]
                                            BLOCK 9 [source_file: expected0]
                                            BLOCK 9 [source_file: expected0]
                                                EXPR_RESULT 10 [source_file: expected0]
                                                    ASSIGN 10 [source_file: expected0]
                                                        NAME action 10 [source_file: expected0]
                                                        NAME proto 10 [source_file: expected0]
                                                BREAK 11 [source_file: expected0]
                                                    LABEL_NAME a 11 [source_file: expected0]
                        EXPR_RESULT 15 [source_file: expected0]
                            CALL 15 [free_call: 1] [source_file: expected0]
                                NAME alert 15 [source_file: expected0]
                                NAME action 15 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        EXPR_RESULT 1 [source_file: testcode]
            ASSIGN 1 [source_file: testcode]
                NAME f 1 [source_file: testcode]
                FUNCTION  1 [source_file: testcode]
                    NAME  1 [source_file: testcode]
                    PARAM_LIST 1 [source_file: testcode]
                    BLOCK 1 [source_file: testcode]
                        VAR 2 [source_file: testcode]
                            NAME action 2 [source_file: testcode]
                        LABEL 3 [source_file: testcode]
                            LABEL_NAME a 3 [source_file: testcode]
                            BLOCK 3 [source_file: testcode]
                                VAR 4 [source_file: testcode]
                                    NAME proto 4 [source_file: testcode]
                                        NULL 4 [source_file: testcode]
                                TRY 5 [source_file: testcode]
                                    BLOCK 5 [source_file: testcode]
                                    BLOCK 6 [source_file: testcode]
                                    BLOCK 6 [source_file: testcode]
                                        TRY 7 [source_file: testcode]
                                            BLOCK 7 [source_file: testcode]
                                                EXPR_RESULT 8 [source_file: testcode]
                                                    ASSIGN 8 [source_file: testcode]
                                                        NAME proto 8 [source_file: testcode]
                                                        NEW 8 [source_file: testcode]
                                                            NAME Proto 8 [source_file: testcode]
                                            BLOCK 9 [source_file: testcode]
                                            BLOCK 9 [source_file: testcode]
                                                EXPR_RESULT 10 [source_file: testcode]
                                                    ASSIGN 10 [source_file: testcode]
                                                        NAME action 10 [source_file: testcode]
                                                        NAME proto 10 [source_file: testcode]
                        EXPR_RESULT 15 [source_file: testcode]
                            CALL 15 [free_call: 1] [source_file: testcode]
                                NAME alert 15 [source_file: testcode]
                                NAME action 15 [source_file: testcode]


Subtree1: BLOCK 9 [source_file: expected0]
    EXPR_RESULT 10 [source_file: expected0]
        ASSIGN 10 [source_file: expected0]
            NAME action 10 [source_file: expected0]
            NAME proto 10 [source_file: expected0]
    BREAK 11 [source_file: expected0]
        LABEL_NAME a 11 [source_file: expected0]


Subtree2: BLOCK 9 [source_file: testcode]
    EXPR_RESULT 10 [source_file: testcode]
        ASSIGN 10 [source_file: testcode]
            NAME action 10 [source_file: testcode]
            NAME proto 10 [source_file: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:928)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:460)
junit.framework.AssertionFailedError: 
Expected: f=function(){var action;a:{var proto=null;try{proto=new Proto}finally{action=proto;return}}}
Result: f=function(){var action;a:{var proto=null;try{proto=new Proto}finally{action=proto}}}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            ASSIGN 1 [source_file: expected0]
                NAME f 1 [source_file: expected0]
                FUNCTION  1 [source_file: expected0]
                    NAME  1 [source_file: expected0]
                    PARAM_LIST 1 [source_file: expected0]
                    BLOCK 1 [source_file: expected0]
                        VAR 2 [source_file: expected0]
                            NAME action 2 [source_file: expected0]
                        LABEL 3 [source_file: expected0]
                            LABEL_NAME a 3 [source_file: expected0]
                            BLOCK 3 [source_file: expected0]
                                VAR 4 [source_file: expected0]
                                    NAME proto 4 [source_file: expected0]
                                        NULL 4 [source_file: expected0]
                                TRY 5 [source_file: expected0]
                                    BLOCK 5 [source_file: expected0]
                                        EXPR_RESULT 6 [source_file: expected0]
                                            ASSIGN 6 [source_file: expected0]
                                                NAME proto 6 [source_file: expected0]
                                                NEW 6 [source_file: expected0]
                                                    NAME Proto 6 [source_file: expected0]
                                    BLOCK 7 [source_file: expected0]
                                    BLOCK 7 [source_file: expected0]
                                        EXPR_RESULT 8 [source_file: expected0]
                                            ASSIGN 8 [source_file: expected0]
                                                NAME action 8 [source_file: expected0]
                                                NAME proto 8 [source_file: expected0]
                                        RETURN 9 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        EXPR_RESULT 1 [source_file: testcode]
            ASSIGN 1 [source_file: testcode]
                NAME f 1 [source_file: testcode]
                FUNCTION  1 [source_file: testcode]
                    NAME  1 [source_file: testcode]
                    PARAM_LIST 1 [source_file: testcode]
                    BLOCK 1 [source_file: testcode]
                        VAR 2 [source_file: testcode]
                            NAME action 2 [source_file: testcode]
                        LABEL 3 [source_file: testcode]
                            LABEL_NAME a 3 [source_file: testcode]
                            BLOCK 3 [source_file: testcode]
                                VAR 4 [source_file: testcode]
                                    NAME proto 4 [source_file: testcode]
                                        NULL 4 [source_file: testcode]
                                TRY 5 [source_file: testcode]
                                    BLOCK 5 [source_file: testcode]
                                        EXPR_RESULT 6 [source_file: testcode]
                                            ASSIGN 6 [source_file: testcode]
                                                NAME proto 6 [source_file: testcode]
                                                NEW 6 [source_file: testcode]
                                                    NAME Proto 6 [source_file: testcode]
                                    BLOCK 7 [source_file: testcode]
                                    BLOCK 7 [source_file: testcode]
                                        EXPR_RESULT 8 [source_file: testcode]
                                            ASSIGN 8 [source_file: testcode]
                                                NAME action 8 [source_file: testcode]
                                                NAME proto 8 [source_file: testcode]


Subtree1: BLOCK 7 [source_file: expected0]
    EXPR_RESULT 8 [source_file: expected0]
        ASSIGN 8 [source_file: expected0]
            NAME action 8 [source_file: expected0]
            NAME proto 8 [source_file: expected0]
    RETURN 9 [source_file: expected0]


Subtree2: BLOCK 7 [source_file: testcode]
    EXPR_RESULT 8 [source_file: testcode]
        ASSIGN 8 [source_file: testcode]
            NAME action 8 [source_file: testcode]
            NAME proto 8 [source_file: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:928)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:460)
junit.framework.AssertionFailedError: 
Expected: function f(){b:try{throw 9;}finally{break b}return 1}
Result: function f(){b:try{throw 9;}finally{}return 1}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION f 1 [source_file: expected0]
            NAME f 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                LABEL 1 [source_file: expected0]
                    LABEL_NAME b 1 [source_file: expected0]
                    TRY 1 [source_file: expected0]
                        BLOCK 1 [source_file: expected0]
                            THROW 1 [source_file: expected0]
                                NUMBER 9.0 1 [source_file: expected0]
                        BLOCK 1 [source_file: expected0]
                        BLOCK 1 [source_file: expected0]
                            BREAK 1 [source_file: expected0]
                                LABEL_NAME b 1 [source_file: expected0]
                RETURN 1 [source_file: expected0]
                    NUMBER 1.0 1 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION f 1 [source_file: testcode]
            NAME f 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                LABEL 1 [source_file: testcode]
                    LABEL_NAME b 1 [source_file: testcode]
                    TRY 1 [source_file: testcode]
                        BLOCK 1 [source_file: testcode]
                            THROW 1 [source_file: testcode]
                                NUMBER 9.0 1 [source_file: testcode]
                        BLOCK 1 [source_file: testcode]
                        BLOCK 1 [source_file: testcode]
                RETURN 1 [source_file: testcode]
                    NUMBER 1.0 1 [source_file: testcode]


Subtree1: BLOCK 1 [source_file: expected0]
    BREAK 1 [source_file: expected0]
        LABEL_NAME b 1 [source_file: expected0]


Subtree2: BLOCK 1 [source_file: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:928)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:460)
junit.framework.AssertionFailedError: 
Expected: f=function(){var action;a:do{var proto=null;try{proto=new Proto}finally{action=proto;continue a}}while(false);alert(action)}
Result: f=function(){var action;a:do{var proto=null;try{proto=new Proto}finally{action=proto}}while(false);alert(action)}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            ASSIGN 1 [source_file: expected0]
                NAME f 1 [source_file: expected0]
                FUNCTION  1 [source_file: expected0]
                    NAME  1 [source_file: expected0]
                    PARAM_LIST 1 [source_file: expected0]
                    BLOCK 1 [source_file: expected0]
                        VAR 2 [source_file: expected0]
                            NAME action 2 [source_file: expected0]
                        LABEL 3 [source_file: expected0]
                            LABEL_NAME a 3 [source_file: expected0]
                            DO 3 [source_file: expected0]
                                BLOCK 3 [source_file: expected0]
                                    VAR 4 [source_file: expected0]
                                        NAME proto 4 [source_file: expected0]
                                            NULL 4 [source_file: expected0]
                                    TRY 5 [source_file: expected0]
                                        BLOCK 5 [source_file: expected0]
                                            EXPR_RESULT 6 [source_file: expected0]
                                                ASSIGN 6 [source_file: expected0]
                                                    NAME proto 6 [source_file: expected0]
                                                    NEW 6 [source_file: expected0]
                                                        NAME Proto 6 [source_file: expected0]
                                        BLOCK 7 [source_file: expected0]
                                        BLOCK 7 [source_file: expected0]
                                            EXPR_RESULT 8 [source_file: expected0]
                                                ASSIGN 8 [source_file: expected0]
                                                    NAME action 8 [source_file: expected0]
                                                    NAME proto 8 [source_file: expected0]
                                            CONTINUE 9 [source_file: expected0]
                                                LABEL_NAME a 9 [source_file: expected0]
                                FALSE 11 [source_file: expected0]
                        EXPR_RESULT 12 [source_file: expected0]
                            CALL 12 [free_call: 1] [source_file: expected0]
                                NAME alert 12 [source_file: expected0]
                                NAME action 12 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        EXPR_RESULT 1 [source_file: testcode]
            ASSIGN 1 [source_file: testcode]
                NAME f 1 [source_file: testcode]
                FUNCTION  1 [source_file: testcode]
                    NAME  1 [source_file: testcode]
                    PARAM_LIST 1 [source_file: testcode]
                    BLOCK 1 [source_file: testcode]
                        VAR 2 [source_file: testcode]
                            NAME action 2 [source_file: testcode]
                        LABEL 3 [source_file: testcode]
                            LABEL_NAME a 3 [source_file: testcode]
                            DO 3 [source_file: testcode]
                                BLOCK 3 [source_file: testcode]
                                    VAR 4 [source_file: testcode]
                                        NAME proto 4 [source_file: testcode]
                                            NULL 4 [source_file: testcode]
                                    TRY 5 [source_file: testcode]
                                        BLOCK 5 [source_file: testcode]
                                            EXPR_RESULT 6 [source_file: testcode]
                                                ASSIGN 6 [source_file: testcode]
                                                    NAME proto 6 [source_file: testcode]
                                                    NEW 6 [source_file: testcode]
                                                        NAME Proto 6 [source_file: testcode]
                                        BLOCK 7 [source_file: testcode]
                                        BLOCK 7 [source_file: testcode]
                                            EXPR_RESULT 8 [source_file: testcode]
                                                ASSIGN 8 [source_file: testcode]
                                                    NAME action 8 [source_file: testcode]
                                                    NAME proto 8 [source_file: testcode]
                                FALSE 11 [source_file: testcode]
                        EXPR_RESULT 12 [source_file: testcode]
                            CALL 12 [free_call: 1] [source_file: testcode]
                                NAME alert 12 [source_file: testcode]
                                NAME action 12 [source_file: testcode]


Subtree1: BLOCK 7 [source_file: expected0]
    EXPR_RESULT 8 [source_file: expected0]
        ASSIGN 8 [source_file: expected0]
            NAME action 8 [source_file: expected0]
            NAME proto 8 [source_file: expected0]
    CONTINUE 9 [source_file: expected0]
        LABEL_NAME a 9 [source_file: expected0]


Subtree2: BLOCK 7 [source_file: testcode]
    EXPR_RESULT 8 [source_file: testcode]
        ASSIGN 8 [source_file: testcode]
            NAME action 8 [source_file: testcode]
            NAME proto 8 [source_file: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:928)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:460)
junit.framework.AssertionFailedError: 
Expected: function f(){b:try{throw 9;}finally{switch(x){case 1:break b}}return 1}
Result: function f(){b:try{throw 9;}finally{switch(x){case 1:}}return 1}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION f 1 [source_file: expected0]
            NAME f 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                LABEL 1 [source_file: expected0]
                    LABEL_NAME b 1 [source_file: expected0]
                    TRY 1 [source_file: expected0]
                        BLOCK 1 [source_file: expected0]
                            THROW 1 [source_file: expected0]
                                NUMBER 9.0 1 [source_file: expected0]
                        BLOCK 1 [source_file: expected0]
                        BLOCK 1 [source_file: expected0]
                            SWITCH 1 [source_file: expected0]
                                NAME x 1 [source_file: expected0]
                                CASE 1 [source_file: expected0]
                                    NUMBER 1.0 1 [source_file: expected0]
                                    BLOCK 1 [synthetic: 1] [source_file: expected0]
                                        BREAK 1 [source_file: expected0]
                                            LABEL_NAME b 1 [source_file: expected0]
                RETURN 1 [source_file: expected0]
                    NUMBER 1.0 1 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION f 1 [source_file: testcode]
            NAME f 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                LABEL 1 [source_file: testcode]
                    LABEL_NAME b 1 [source_file: testcode]
                    TRY 1 [source_file: testcode]
                        BLOCK 1 [source_file: testcode]
                            THROW 1 [source_file: testcode]
                                NUMBER 9.0 1 [source_file: testcode]
                        BLOCK 1 [source_file: testcode]
                        BLOCK 1 [source_file: testcode]
                            SWITCH 1 [source_file: testcode]
                                NAME x 1 [source_file: testcode]
                                CASE 1 [source_file: testcode]
                                    NUMBER 1.0 1 [source_file: testcode]
                                    BLOCK 1 [synthetic: 1] [source_file: testcode]
                RETURN 1 [source_file: testcode]
                    NUMBER 1.0 1 [source_file: testcode]


Subtree1: BLOCK 1 [synthetic: 1] [source_file: expected0]
    BREAK 1 [source_file: expected0]
        LABEL_NAME b 1 [source_file: expected0]


Subtree2: BLOCK 1 [synthetic: 1] [source_file: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:928)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:460)
junit.framework.AssertionFailedError: 
Expected: f=function(){var action;a:{var proto=null;try{proto=new Proto}finally{action=proto;break a}}alert(action)}
Result: f=function(){var action;a:{var proto=null;try{proto=new Proto}finally{action=proto}}alert(action)}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            ASSIGN 1 [source_file: expected0]
                NAME f 1 [source_file: expected0]
                FUNCTION  1 [source_file: expected0]
                    NAME  1 [source_file: expected0]
                    PARAM_LIST 1 [source_file: expected0]
                    BLOCK 1 [source_file: expected0]
                        VAR 2 [source_file: expected0]
                            NAME action 2 [source_file: expected0]
                        LABEL 3 [source_file: expected0]
                            LABEL_NAME a 3 [source_file: expected0]
                            BLOCK 3 [source_file: expected0]
                                VAR 4 [source_file: expected0]
                                    NAME proto 4 [source_file: expected0]
                                        NULL 4 [source_file: expected0]
                                TRY 5 [source_file: expected0]
                                    BLOCK 5 [source_file: expected0]
                                        EXPR_RESULT 6 [source_file: expected0]
                                            ASSIGN 6 [source_file: expected0]
                                                NAME proto 6 [source_file: expected0]
                                                NEW 6 [source_file: expected0]
                                                    NAME Proto 6 [source_file: expected0]
                                    BLOCK 7 [source_file: expected0]
                                    BLOCK 7 [source_file: expected0]
                                        EXPR_RESULT 8 [source_file: expected0]
                                            ASSIGN 8 [source_file: expected0]
                                                NAME action 8 [source_file: expected0]
                                                NAME proto 8 [source_file: expected0]
                                        BREAK 9 [source_file: expected0]
                                            LABEL_NAME a 9 [source_file: expected0]
                        EXPR_RESULT 12 [source_file: expected0]
                            CALL 12 [free_call: 1] [source_file: expected0]
                                NAME alert 12 [source_file: expected0]
                                NAME action 12 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        EXPR_RESULT 1 [source_file: testcode]
            ASSIGN 1 [source_file: testcode]
                NAME f 1 [source_file: testcode]
                FUNCTION  1 [source_file: testcode]
                    NAME  1 [source_file: testcode]
                    PARAM_LIST 1 [source_file: testcode]
                    BLOCK 1 [source_file: testcode]
                        VAR 2 [source_file: testcode]
                            NAME action 2 [source_file: testcode]
                        LABEL 3 [source_file: testcode]
                            LABEL_NAME a 3 [source_file: testcode]
                            BLOCK 3 [source_file: testcode]
                                VAR 4 [source_file: testcode]
                                    NAME proto 4 [source_file: testcode]
                                        NULL 4 [source_file: testcode]
                                TRY 5 [source_file: testcode]
                                    BLOCK 5 [source_file: testcode]
                                        EXPR_RESULT 6 [source_file: testcode]
                                            ASSIGN 6 [source_file: testcode]
                                                NAME proto 6 [source_file: testcode]
                                                NEW 6 [source_file: testcode]
                                                    NAME Proto 6 [source_file: testcode]
                                    BLOCK 7 [source_file: testcode]
                                    BLOCK 7 [source_file: testcode]
                                        EXPR_RESULT 8 [source_file: testcode]
                                            ASSIGN 8 [source_file: testcode]
                                                NAME action 8 [source_file: testcode]
                                                NAME proto 8 [source_file: testcode]
                        EXPR_RESULT 12 [source_file: testcode]
                            CALL 12 [free_call: 1] [source_file: testcode]
                                NAME alert 12 [source_file: testcode]
                                NAME action 12 [source_file: testcode]


Subtree1: BLOCK 7 [source_file: expected0]
    EXPR_RESULT 8 [source_file: expected0]
        ASSIGN 8 [source_file: expected0]
            NAME action 8 [source_file: expected0]
            NAME proto 8 [source_file: expected0]
    BREAK 9 [source_file: expected0]
        LABEL_NAME a 9 [source_file: expected0]


Subtree2: BLOCK 7 [source_file: testcode]
    EXPR_RESULT 8 [source_file: testcode]
        ASSIGN 8 [source_file: testcode]
            NAME action 8 [source_file: testcode]
            NAME proto 8 [source_file: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:928)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:460)
junit.framework.AssertionFailedError: 
Expected: f=function(){var action;a:{var proto=null;try{}finally{try{proto=new Proto}finally{action=proto;break a}}}alert(action)}
Result: f=function(){var action;a:{var proto=null;try{}finally{try{proto=new Proto}finally{action=proto}}}alert(action)}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            ASSIGN 1 [source_file: expected0]
                NAME f 1 [source_file: expected0]
                FUNCTION  1 [source_file: expected0]
                    NAME  1 [source_file: expected0]
                    PARAM_LIST 1 [source_file: expected0]
                    BLOCK 1 [source_file: expected0]
                        VAR 2 [source_file: expected0]
                            NAME action 2 [source_file: expected0]
                        LABEL 3 [source_file: expected0]
                            LABEL_NAME a 3 [source_file: expected0]
                            BLOCK 3 [source_file: expected0]
                                VAR 4 [source_file: expected0]
                                    NAME proto 4 [source_file: expected0]
                                        NULL 4 [source_file: expected0]
                                TRY 5 [source_file: expected0]
                                    BLOCK 5 [source_file: expected0]
                                    BLOCK 6 [source_file: expected0]
                                    BLOCK 6 [source_file: expected0]
                                        TRY 7 [source_file: expected0]
                                            BLOCK 7 [source_file: expected0]
                                                EXPR_RESULT 8 [source_file: expected0]
                                                    ASSIGN 8 [source_file: expected0]
                                                        NAME proto 8 [source_file: expected0]
                                                        NEW 8 [source_file: expected0]
                                                            NAME Proto 8 [source_file: expected0]
                                            BLOCK 9 [source_file: expected0]
                                            BLOCK 9 [source_file: expected0]
                                                EXPR_RESULT 10 [source_file: expected0]
                                                    ASSIGN 10 [source_file: expected0]
                                                        NAME action 10 [source_file: expected0]
                                                        NAME proto 10 [source_file: expected0]
                                                BREAK 11 [source_file: expected0]
                                                    LABEL_NAME a 11 [source_file: expected0]
                        EXPR_RESULT 15 [source_file: expected0]
                            CALL 15 [free_call: 1] [source_file: expected0]
                                NAME alert 15 [source_file: expected0]
                                NAME action 15 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        EXPR_RESULT 1 [source_file: testcode]
            ASSIGN 1 [source_file: testcode]
                NAME f 1 [source_file: testcode]
                FUNCTION  1 [source_file: testcode]
                    NAME  1 [source_file: testcode]
                    PARAM_LIST 1 [source_file: testcode]
                    BLOCK 1 [source_file: testcode]
                        VAR 2 [source_file: testcode]
                            NAME action 2 [source_file: testcode]
                        LABEL 3 [source_file: testcode]
                            LABEL_NAME a 3 [source_file: testcode]
                            BLOCK 3 [source_file: testcode]
                                VAR 4 [source_file: testcode]
                                    NAME proto 4 [source_file: testcode]
                                        NULL 4 [source_file: testcode]
                                TRY 5 [source_file: testcode]
                                    BLOCK 5 [source_file: testcode]
                                    BLOCK 6 [source_file: testcode]
                                    BLOCK 6 [source_file: testcode]
                                        TRY 7 [source_file: testcode]
                                            BLOCK 7 [source_file: testcode]
                                                EXPR_RESULT 8 [source_file: testcode]
                                                    ASSIGN 8 [source_file: testcode]
                                                        NAME proto 8 [source_file: testcode]
                                                        NEW 8 [source_file: testcode]
                                                            NAME Proto 8 [source_file: testcode]
                                            BLOCK 9 [source_file: testcode]
                                            BLOCK 9 [source_file: testcode]
                                                EXPR_RESULT 10 [source_file: testcode]
                                                    ASSIGN 10 [source_file: testcode]
                                                        NAME action 10 [source_file: testcode]
                                                        NAME proto 10 [source_file: testcode]
                        EXPR_RESULT 15 [source_file: testcode]
                            CALL 15 [free_call: 1] [source_file: testcode]
                                NAME alert 15 [source_file: testcode]
                                NAME action 15 [source_file: testcode]


Subtree1: BLOCK 9 [source_file: expected0]
    EXPR_RESULT 10 [source_file: expected0]
        ASSIGN 10 [source_file: expected0]
            NAME action 10 [source_file: expected0]
            NAME proto 10 [source_file: expected0]
    BREAK 11 [source_file: expected0]
        LABEL_NAME a 11 [source_file: expected0]


Subtree2: BLOCK 9 [source_file: testcode]
    EXPR_RESULT 10 [source_file: testcode]
        ASSIGN 10 [source_file: testcode]
            NAME action 10 [source_file: testcode]
            NAME proto 10 [source_file: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:928)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:460)
junit.framework.AssertionFailedError: 
Expected: f=function(){var action;a:{var proto=null;try{proto=new Proto}finally{action=proto;return}}}
Result: f=function(){var action;a:{var proto=null;try{proto=new Proto}finally{action=proto}}}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            ASSIGN 1 [source_file: expected0]
                NAME f 1 [source_file: expected0]
                FUNCTION  1 [source_file: expected0]
                    NAME  1 [source_file: expected0]
                    PARAM_LIST 1 [source_file: expected0]
                    BLOCK 1 [source_file: expected0]
                        VAR 2 [source_file: expected0]
                            NAME action 2 [source_file: expected0]
                        LABEL 3 [source_file: expected0]
                            LABEL_NAME a 3 [source_file: expected0]
                            BLOCK 3 [source_file: expected0]
                                VAR 4 [source_file: expected0]
                                    NAME proto 4 [source_file: expected0]
                                        NULL 4 [source_file: expected0]
                                TRY 5 [source_file: expected0]
                                    BLOCK 5 [source_file: expected0]
                                        EXPR_RESULT 6 [source_file: expected0]
                                            ASSIGN 6 [source_file: expected0]
                                                NAME proto 6 [source_file: expected0]
                                                NEW 6 [source_file: expected0]
                                                    NAME Proto 6 [source_file: expected0]
                                    BLOCK 7 [source_file: expected0]
                                    BLOCK 7 [source_file: expected0]
                                        EXPR_RESULT 8 [source_file: expected0]
                                            ASSIGN 8 [source_file: expected0]
                                                NAME action 8 [source_file: expected0]
                                                NAME proto 8 [source_file: expected0]
                                        RETURN 9 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        EXPR_RESULT 1 [source_file: testcode]
            ASSIGN 1 [source_file: testcode]
                NAME f 1 [source_file: testcode]
                FUNCTION  1 [source_file: testcode]
                    NAME  1 [source_file: testcode]
                    PARAM_LIST 1 [source_file: testcode]
                    BLOCK 1 [source_file: testcode]
                        VAR 2 [source_file: testcode]
                            NAME action 2 [source_file: testcode]
                        LABEL 3 [source_file: testcode]
                            LABEL_NAME a 3 [source_file: testcode]
                            BLOCK 3 [source_file: testcode]
                                VAR 4 [source_file: testcode]
                                    NAME proto 4 [source_file: testcode]
                                        NULL 4 [source_file: testcode]
                                TRY 5 [source_file: testcode]
                                    BLOCK 5 [source_file: testcode]
                                        EXPR_RESULT 6 [source_file: testcode]
                                            ASSIGN 6 [source_file: testcode]
                                                NAME proto 6 [source_file: testcode]
                                                NEW 6 [source_file: testcode]
                                                    NAME Proto 6 [source_file: testcode]
                                    BLOCK 7 [source_file: testcode]
                                    BLOCK 7 [source_file: testcode]
                                        EXPR_RESULT 8 [source_file: testcode]
                                            ASSIGN 8 [source_file: testcode]
                                                NAME action 8 [source_file: testcode]
                                                NAME proto 8 [source_file: testcode]


Subtree1: BLOCK 7 [source_file: expected0]
    EXPR_RESULT 8 [source_file: expected0]
        ASSIGN 8 [source_file: expected0]
            NAME action 8 [source_file: expected0]
            NAME proto 8 [source_file: expected0]
    RETURN 9 [source_file: expected0]


Subtree2: BLOCK 7 [source_file: testcode]
    EXPR_RESULT 8 [source_file: testcode]
        ASSIGN 8 [source_file: testcode]
            NAME action 8 [source_file: testcode]
            NAME proto 8 [source_file: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:928)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:460)
junit.framework.AssertionFailedError: 
Expected: function f(){b:try{throw 9;}finally{break b}return 1}
Result: function f(){b:try{throw 9;}finally{}return 1}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION f 1 [source_file: expected0]
            NAME f 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                LABEL 1 [source_file: expected0]
                    LABEL_NAME b 1 [source_file: expected0]
                    TRY 1 [source_file: expected0]
                        BLOCK 1 [source_file: expected0]
                            THROW 1 [source_file: expected0]
                                NUMBER 9.0 1 [source_file: expected0]
                        BLOCK 1 [source_file: expected0]
                        BLOCK 1 [source_file: expected0]
                            BREAK 1 [source_file: expected0]
                                LABEL_NAME b 1 [source_file: expected0]
                RETURN 1 [source_file: expected0]
                    NUMBER 1.0 1 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION f 1 [source_file: testcode]
            NAME f 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                LABEL 1 [source_file: testcode]
                    LABEL_NAME b 1 [source_file: testcode]
                    TRY 1 [source_file: testcode]
                        BLOCK 1 [source_file: testcode]
                            THROW 1 [source_file: testcode]
                                NUMBER 9.0 1 [source_file: testcode]
                        BLOCK 1 [source_file: testcode]
                        BLOCK 1 [source_file: testcode]
                RETURN 1 [source_file: testcode]
                    NUMBER 1.0 1 [source_file: testcode]


Subtree1: BLOCK 1 [source_file: expected0]
    BREAK 1 [source_file: expected0]
        LABEL_NAME b 1 [source_file: expected0]


Subtree2: BLOCK 1 [source_file: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:928)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:460)
junit.framework.AssertionFailedError: 
Expected: f=function(){var action;a:do{var proto=null;try{proto=new Proto}finally{action=proto;continue a}}while(false);alert(action)}
Result: f=function(){var action;a:do{var proto=null;try{proto=new Proto}finally{action=proto}}while(false);alert(action)}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            ASSIGN 1 [source_file: expected0]
                NAME f 1 [source_file: expected0]
                FUNCTION  1 [source_file: expected0]
                    NAME  1 [source_file: expected0]
                    PARAM_LIST 1 [source_file: expected0]
                    BLOCK 1 [source_file: expected0]
                        VAR 2 [source_file: expected0]
                            NAME action 2 [source_file: expected0]
                        LABEL 3 [source_file: expected0]
                            LABEL_NAME a 3 [source_file: expected0]
                            DO 3 [source_file: expected0]
                                BLOCK 3 [source_file: expected0]
                                    VAR 4 [source_file: expected0]
                                        NAME proto 4 [source_file: expected0]
                                            NULL 4 [source_file: expected0]
                                    TRY 5 [source_file: expected0]
                                        BLOCK 5 [source_file: expected0]
                                            EXPR_RESULT 6 [source_file: expected0]
                                                ASSIGN 6 [source_file: expected0]
                                                    NAME proto 6 [source_file: expected0]
                                                    NEW 6 [source_file: expected0]
                                                        NAME Proto 6 [source_file: expected0]
                                        BLOCK 7 [source_file: expected0]
                                        BLOCK 7 [source_file: expected0]
                                            EXPR_RESULT 8 [source_file: expected0]
                                                ASSIGN 8 [source_file: expected0]
                                                    NAME action 8 [source_file: expected0]
                                                    NAME proto 8 [source_file: expected0]
                                            CONTINUE 9 [source_file: expected0]
                                                LABEL_NAME a 9 [source_file: expected0]
                                FALSE 11 [source_file: expected0]
                        EXPR_RESULT 12 [source_file: expected0]
                            CALL 12 [free_call: 1] [source_file: expected0]
                                NAME alert 12 [source_file: expected0]
                                NAME action 12 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        EXPR_RESULT 1 [source_file: testcode]
            ASSIGN 1 [source_file: testcode]
                NAME f 1 [source_file: testcode]
                FUNCTION  1 [source_file: testcode]
                    NAME  1 [source_file: testcode]
                    PARAM_LIST 1 [source_file: testcode]
                    BLOCK 1 [source_file: testcode]
                        VAR 2 [source_file: testcode]
                            NAME action 2 [source_file: testcode]
                        LABEL 3 [source_file: testcode]
                            LABEL_NAME a 3 [source_file: testcode]
                            DO 3 [source_file: testcode]
                                BLOCK 3 [source_file: testcode]
                                    VAR 4 [source_file: testcode]
                                        NAME proto 4 [source_file: testcode]
                                            NULL 4 [source_file: testcode]
                                    TRY 5 [source_file: testcode]
                                        BLOCK 5 [source_file: testcode]
                                            EXPR_RESULT 6 [source_file: testcode]
                                                ASSIGN 6 [source_file: testcode]
                                                    NAME proto 6 [source_file: testcode]
                                                    NEW 6 [source_file: testcode]
                                                        NAME Proto 6 [source_file: testcode]
                                        BLOCK 7 [source_file: testcode]
                                        BLOCK 7 [source_file: testcode]
                                            EXPR_RESULT 8 [source_file: testcode]
                                                ASSIGN 8 [source_file: testcode]
                                                    NAME action 8 [source_file: testcode]
                                                    NAME proto 8 [source_file: testcode]
                                FALSE 11 [source_file: testcode]
                        EXPR_RESULT 12 [source_file: testcode]
                            CALL 12 [free_call: 1] [source_file: testcode]
                                NAME alert 12 [source_file: testcode]
                                NAME action 12 [source_file: testcode]


Subtree1: BLOCK 7 [source_file: expected0]
    EXPR_RESULT 8 [source_file: expected0]
        ASSIGN 8 [source_file: expected0]
            NAME action 8 [source_file: expected0]
            NAME proto 8 [source_file: expected0]
    CONTINUE 9 [source_file: expected0]
        LABEL_NAME a 9 [source_file: expected0]


Subtree2: BLOCK 7 [source_file: testcode]
    EXPR_RESULT 8 [source_file: testcode]
        ASSIGN 8 [source_file: testcode]
            NAME action 8 [source_file: testcode]
            NAME proto 8 [source_file: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:928)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:460)
junit.framework.AssertionFailedError: 
Expected: function f(){b:try{throw 9;}finally{switch(x){case 1:break b}}return 1}
Result: function f(){b:try{throw 9;}finally{switch(x){case 1:}}return 1}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION f 1 [source_file: expected0]
            NAME f 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                LABEL 1 [source_file: expected0]
                    LABEL_NAME b 1 [source_file: expected0]
                    TRY 1 [source_file: expected0]
                        BLOCK 1 [source_file: expected0]
                            THROW 1 [source_file: expected0]
                                NUMBER 9.0 1 [source_file: expected0]
                        BLOCK 1 [source_file: expected0]
                        BLOCK 1 [source_file: expected0]
                            SWITCH 1 [source_file: expected0]
                                NAME x 1 [source_file: expected0]
                                CASE 1 [source_file: expected0]
                                    NUMBER 1.0 1 [source_file: expected0]
                                    BLOCK 1 [synthetic: 1] [source_file: expected0]
                                        BREAK 1 [source_file: expected0]
                                            LABEL_NAME b 1 [source_file: expected0]
                RETURN 1 [source_file: expected0]
                    NUMBER 1.0 1 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION f 1 [source_file: testcode]
            NAME f 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                LABEL 1 [source_file: testcode]
                    LABEL_NAME b 1 [source_file: testcode]
                    TRY 1 [source_file: testcode]
                        BLOCK 1 [source_file: testcode]
                            THROW 1 [source_file: testcode]
                                NUMBER 9.0 1 [source_file: testcode]
                        BLOCK 1 [source_file: testcode]
                        BLOCK 1 [source_file: testcode]
                            SWITCH 1 [source_file: testcode]
                                NAME x 1 [source_file: testcode]
                                CASE 1 [source_file: testcode]
                                    NUMBER 1.0 1 [source_file: testcode]
                                    BLOCK 1 [synthetic: 1] [source_file: testcode]
                RETURN 1 [source_file: testcode]
                    NUMBER 1.0 1 [source_file: testcode]


Subtree1: BLOCK 1 [synthetic: 1] [source_file: expected0]
    BREAK 1 [source_file: expected0]
        LABEL_NAME b 1 [source_file: expected0]


Subtree2: BLOCK 1 [synthetic: 1] [source_file: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:928)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:460)
junit.framework.AssertionFailedError: 
Expected: f=function(){var action;a:{var proto=null;try{proto=new Proto}finally{action=proto;break a}}alert(action)}
Result: f=function(){var action;a:{var proto=null;try{proto=new Proto}finally{action=proto}}alert(action)}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            ASSIGN 1 [source_file: expected0]
                NAME f 1 [source_file: expected0]
                FUNCTION  1 [source_file: expected0]
                    NAME  1 [source_file: expected0]
                    PARAM_LIST 1 [source_file: expected0]
                    BLOCK 1 [source_file: expected0]
                        VAR 2 [source_file: expected0]
                            NAME action 2 [source_file: expected0]
                        LABEL 3 [source_file: expected0]
                            LABEL_NAME a 3 [source_file: expected0]
                            BLOCK 3 [source_file: expected0]
                                VAR 4 [source_file: expected0]
                                    NAME proto 4 [source_file: expected0]
                                        NULL 4 [source_file: expected0]
                                TRY 5 [source_file: expected0]
                                    BLOCK 5 [source_file: expected0]
                                        EXPR_RESULT 6 [source_file: expected0]
                                            ASSIGN 6 [source_file: expected0]
                                                NAME proto 6 [source_file: expected0]
                                                NEW 6 [source_file: expected0]
                                                    NAME Proto 6 [source_file: expected0]
                                    BLOCK 7 [source_file: expected0]
                                    BLOCK 7 [source_file: expected0]
                                        EXPR_RESULT 8 [source_file: expected0]
                                            ASSIGN 8 [source_file: expected0]
                                                NAME action 8 [source_file: expected0]
                                                NAME proto 8 [source_file: expected0]
                                        BREAK 9 [source_file: expected0]
                                            LABEL_NAME a 9 [source_file: expected0]
                        EXPR_RESULT 12 [source_file: expected0]
                            CALL 12 [free_call: 1] [source_file: expected0]
                                NAME alert 12 [source_file: expected0]
                                NAME action 12 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        EXPR_RESULT 1 [source_file: testcode]
            ASSIGN 1 [source_file: testcode]
                NAME f 1 [source_file: testcode]
                FUNCTION  1 [source_file: testcode]
                    NAME  1 [source_file: testcode]
                    PARAM_LIST 1 [source_file: testcode]
                    BLOCK 1 [source_file: testcode]
                        VAR 2 [source_file: testcode]
                            NAME action 2 [source_file: testcode]
                        LABEL 3 [source_file: testcode]
                            LABEL_NAME a 3 [source_file: testcode]
                            BLOCK 3 [source_file: testcode]
                                VAR 4 [source_file: testcode]
                                    NAME proto 4 [source_file: testcode]
                                        NULL 4 [source_file: testcode]
                                TRY 5 [source_file: testcode]
                                    BLOCK 5 [source_file: testcode]
                                        EXPR_RESULT 6 [source_file: testcode]
                                            ASSIGN 6 [source_file: testcode]
                                                NAME proto 6 [source_file: testcode]
                                                NEW 6 [source_file: testcode]
                                                    NAME Proto 6 [source_file: testcode]
                                    BLOCK 7 [source_file: testcode]
                                    BLOCK 7 [source_file: testcode]
                                        EXPR_RESULT 8 [source_file: testcode]
                                            ASSIGN 8 [source_file: testcode]
                                                NAME action 8 [source_file: testcode]
                                                NAME proto 8 [source_file: testcode]
                        EXPR_RESULT 12 [source_file: testcode]
                            CALL 12 [free_call: 1] [source_file: testcode]
                                NAME alert 12 [source_file: testcode]
                                NAME action 12 [source_file: testcode]


Subtree1: BLOCK 7 [source_file: expected0]
    EXPR_RESULT 8 [source_file: expected0]
        ASSIGN 8 [source_file: expected0]
            NAME action 8 [source_file: expected0]
            NAME proto 8 [source_file: expected0]
    BREAK 9 [source_file: expected0]
        LABEL_NAME a 9 [source_file: expected0]


Subtree2: BLOCK 7 [source_file: testcode]
    EXPR_RESULT 8 [source_file: testcode]
        ASSIGN 8 [source_file: testcode]
            NAME action 8 [source_file: testcode]
            NAME proto 8 [source_file: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:928)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:460)
junit.framework.AssertionFailedError: 
Expected: f=function(){var action;a:{var proto=null;try{}finally{try{proto=new Proto}finally{action=proto;break a}}}alert(action)}
Result: f=function(){var action;a:{var proto=null;try{}finally{try{proto=new Proto}finally{action=proto}}}alert(action)}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            ASSIGN 1 [source_file: expected0]
                NAME f 1 [source_file: expected0]
                FUNCTION  1 [source_file: expected0]
                    NAME  1 [source_file: expected0]
                    PARAM_LIST 1 [source_file: expected0]
                    BLOCK 1 [source_file: expected0]
                        VAR 2 [source_file: expected0]
                            NAME action 2 [source_file: expected0]
                        LABEL 3 [source_file: expected0]
                            LABEL_NAME a 3 [source_file: expected0]
                            BLOCK 3 [source_file: expected0]
                                VAR 4 [source_file: expected0]
                                    NAME proto 4 [source_file: expected0]
                                        NULL 4 [source_file: expected0]
                                TRY 5 [source_file: expected0]
                                    BLOCK 5 [source_file: expected0]
                                    BLOCK 6 [source_file: expected0]
                                    BLOCK 6 [source_file: expected0]
                                        TRY 7 [source_file: expected0]
                                            BLOCK 7 [source_file: expected0]
                                                EXPR_RESULT 8 [source_file: expected0]
                                                    ASSIGN 8 [source_file: expected0]
                                                        NAME proto 8 [source_file: expected0]
                                                        NEW 8 [source_file: expected0]
                                                            NAME Proto 8 [source_file: expected0]
                                            BLOCK 9 [source_file: expected0]
                                            BLOCK 9 [source_file: expected0]
                                                EXPR_RESULT 10 [source_file: expected0]
                                                    ASSIGN 10 [source_file: expected0]
                                                        NAME action 10 [source_file: expected0]
                                                        NAME proto 10 [source_file: expected0]
                                                BREAK 11 [source_file: expected0]
                                                    LABEL_NAME a 11 [source_file: expected0]
                        EXPR_RESULT 15 [source_file: expected0]
                            CALL 15 [free_call: 1] [source_file: expected0]
                                NAME alert 15 [source_file: expected0]
                                NAME action 15 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        EXPR_RESULT 1 [source_file: testcode]
            ASSIGN 1 [source_file: testcode]
                NAME f 1 [source_file: testcode]
                FUNCTION  1 [source_file: testcode]
                    NAME  1 [source_file: testcode]
                    PARAM_LIST 1 [source_file: testcode]
                    BLOCK 1 [source_file: testcode]
                        VAR 2 [source_file: testcode]
                            NAME action 2 [source_file: testcode]
                        LABEL 3 [source_file: testcode]
                            LABEL_NAME a 3 [source_file: testcode]
                            BLOCK 3 [source_file: testcode]
                                VAR 4 [source_file: testcode]
                                    NAME proto 4 [source_file: testcode]
                                        NULL 4 [source_file: testcode]
                                TRY 5 [source_file: testcode]
                                    BLOCK 5 [source_file: testcode]
                                    BLOCK 6 [source_file: testcode]
                                    BLOCK 6 [source_file: testcode]
                                        TRY 7 [source_file: testcode]
                                            BLOCK 7 [source_file: testcode]
                                                EXPR_RESULT 8 [source_file: testcode]
                                                    ASSIGN 8 [source_file: testcode]
                                                        NAME proto 8 [source_file: testcode]
                                                        NEW 8 [source_file: testcode]
                                                            NAME Proto 8 [source_file: testcode]
                                            BLOCK 9 [source_file: testcode]
                                            BLOCK 9 [source_file: testcode]
                                                EXPR_RESULT 10 [source_file: testcode]
                                                    ASSIGN 10 [source_file: testcode]
                                                        NAME action 10 [source_file: testcode]
                                                        NAME proto 10 [source_file: testcode]
                        EXPR_RESULT 15 [source_file: testcode]
                            CALL 15 [free_call: 1] [source_file: testcode]
                                NAME alert 15 [source_file: testcode]
                                NAME action 15 [source_file: testcode]


Subtree1: BLOCK 9 [source_file: expected0]
    EXPR_RESULT 10 [source_file: expected0]
        ASSIGN 10 [source_file: expected0]
            NAME action 10 [source_file: expected0]
            NAME proto 10 [source_file: expected0]
    BREAK 11 [source_file: expected0]
        LABEL_NAME a 11 [source_file: expected0]


Subtree2: BLOCK 9 [source_file: testcode]
    EXPR_RESULT 10 [source_file: testcode]
        ASSIGN 10 [source_file: testcode]
            NAME action 10 [source_file: testcode]
            NAME proto 10 [source_file: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:928)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:460)
junit.framework.AssertionFailedError: 
Expected: f=function(){var action;a:{var proto=null;try{proto=new Proto}finally{action=proto;return}}}
Result: f=function(){var action;a:{var proto=null;try{proto=new Proto}finally{action=proto}}}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            ASSIGN 1 [source_file: expected0]
                NAME f 1 [source_file: expected0]
                FUNCTION  1 [source_file: expected0]
                    NAME  1 [source_file: expected0]
                    PARAM_LIST 1 [source_file: expected0]
                    BLOCK 1 [source_file: expected0]
                        VAR 2 [source_file: expected0]
                            NAME action 2 [source_file: expected0]
                        LABEL 3 [source_file: expected0]
                            LABEL_NAME a 3 [source_file: expected0]
                            BLOCK 3 [source_file: expected0]
                                VAR 4 [source_file: expected0]
                                    NAME proto 4 [source_file: expected0]
                                        NULL 4 [source_file: expected0]
                                TRY 5 [source_file: expected0]
                                    BLOCK 5 [source_file: expected0]
                                        EXPR_RESULT 6 [source_file: expected0]
                                            ASSIGN 6 [source_file: expected0]
                                                NAME proto 6 [source_file: expected0]
                                                NEW 6 [source_file: expected0]
                                                    NAME Proto 6 [source_file: expected0]
                                    BLOCK 7 [source_file: expected0]
                                    BLOCK 7 [source_file: expected0]
                                        EXPR_RESULT 8 [source_file: expected0]
                                            ASSIGN 8 [source_file: expected0]
                                                NAME action 8 [source_file: expected0]
                                                NAME proto 8 [source_file: expected0]
                                        RETURN 9 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        EXPR_RESULT 1 [source_file: testcode]
            ASSIGN 1 [source_file: testcode]
                NAME f 1 [source_file: testcode]
                FUNCTION  1 [source_file: testcode]
                    NAME  1 [source_file: testcode]
                    PARAM_LIST 1 [source_file: testcode]
                    BLOCK 1 [source_file: testcode]
                        VAR 2 [source_file: testcode]
                            NAME action 2 [source_file: testcode]
                        LABEL 3 [source_file: testcode]
                            LABEL_NAME a 3 [source_file: testcode]
                            BLOCK 3 [source_file: testcode]
                                VAR 4 [source_file: testcode]
                                    NAME proto 4 [source_file: testcode]
                                        NULL 4 [source_file: testcode]
                                TRY 5 [source_file: testcode]
                                    BLOCK 5 [source_file: testcode]
                                        EXPR_RESULT 6 [source_file: testcode]
                                            ASSIGN 6 [source_file: testcode]
                                                NAME proto 6 [source_file: testcode]
                                                NEW 6 [source_file: testcode]
                                                    NAME Proto 6 [source_file: testcode]
                                    BLOCK 7 [source_file: testcode]
                                    BLOCK 7 [source_file: testcode]
                                        EXPR_RESULT 8 [source_file: testcode]
                                            ASSIGN 8 [source_file: testcode]
                                                NAME action 8 [source_file: testcode]
                                                NAME proto 8 [source_file: testcode]


Subtree1: BLOCK 7 [source_file: expected0]
    EXPR_RESULT 8 [source_file: expected0]
        ASSIGN 8 [source_file: expected0]
            NAME action 8 [source_file: expected0]
            NAME proto 8 [source_file: expected0]
    RETURN 9 [source_file: expected0]


Subtree2: BLOCK 7 [source_file: testcode]
    EXPR_RESULT 8 [source_file: testcode]
        ASSIGN 8 [source_file: testcode]
            NAME action 8 [source_file: testcode]
            NAME proto 8 [source_file: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:928)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:460)
junit.framework.AssertionFailedError: 
Expected: function f(){b:try{throw 9;}finally{break b}return 1}
Result: function f(){b:try{throw 9;}finally{}return 1}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION f 1 [source_file: expected0]
            NAME f 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                LABEL 1 [source_file: expected0]
                    LABEL_NAME b 1 [source_file: expected0]
                    TRY 1 [source_file: expected0]
                        BLOCK 1 [source_file: expected0]
                            THROW 1 [source_file: expected0]
                                NUMBER 9.0 1 [source_file: expected0]
                        BLOCK 1 [source_file: expected0]
                        BLOCK 1 [source_file: expected0]
                            BREAK 1 [source_file: expected0]
                                LABEL_NAME b 1 [source_file: expected0]
                RETURN 1 [source_file: expected0]
                    NUMBER 1.0 1 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION f 1 [source_file: testcode]
            NAME f 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                LABEL 1 [source_file: testcode]
                    LABEL_NAME b 1 [source_file: testcode]
                    TRY 1 [source_file: testcode]
                        BLOCK 1 [source_file: testcode]
                            THROW 1 [source_file: testcode]
                                NUMBER 9.0 1 [source_file: testcode]
                        BLOCK 1 [source_file: testcode]
                        BLOCK 1 [source_file: testcode]
                RETURN 1 [source_file: testcode]
                    NUMBER 1.0 1 [source_file: testcode]


Subtree1: BLOCK 1 [source_file: expected0]
    BREAK 1 [source_file: expected0]
        LABEL_NAME b 1 [source_file: expected0]


Subtree2: BLOCK 1 [source_file: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:928)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:460)
junit.framework.AssertionFailedError: 
Expected: f=function(){var action;a:do{var proto=null;try{proto=new Proto}finally{action=proto;continue a}}while(false);alert(action)}
Result: f=function(){var action;a:do{var proto=null;try{proto=new Proto}finally{action=proto}}while(false);alert(action)}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            ASSIGN 1 [source_file: expected0]
                NAME f 1 [source_file: expected0]
                FUNCTION  1 [source_file: expected0]
                    NAME  1 [source_file: expected0]
                    PARAM_LIST 1 [source_file: expected0]
                    BLOCK 1 [source_file: expected0]
                        VAR 2 [source_file: expected0]
                            NAME action 2 [source_file: expected0]
                        LABEL 3 [source_file: expected0]
                            LABEL_NAME a 3 [source_file: expected0]
                            DO 3 [source_file: expected0]
                                BLOCK 3 [source_file: expected0]
                                    VAR 4 [source_file: expected0]
                                        NAME proto 4 [source_file: expected0]
                                            NULL 4 [source_file: expected0]
                                    TRY 5 [source_file: expected0]
                                        BLOCK 5 [source_file: expected0]
                                            EXPR_RESULT 6 [source_file: expected0]
                                                ASSIGN 6 [source_file: expected0]
                                                    NAME proto 6 [source_file: expected0]
                                                    NEW 6 [source_file: expected0]
                                                        NAME Proto 6 [source_file: expected0]
                                        BLOCK 7 [source_file: expected0]
                                        BLOCK 7 [source_file: expected0]
                                            EXPR_RESULT 8 [source_file: expected0]
                                                ASSIGN 8 [source_file: expected0]
                                                    NAME action 8 [source_file: expected0]
                                                    NAME proto 8 [source_file: expected0]
                                            CONTINUE 9 [source_file: expected0]
                                                LABEL_NAME a 9 [source_file: expected0]
                                FALSE 11 [source_file: expected0]
                        EXPR_RESULT 12 [source_file: expected0]
                            CALL 12 [free_call: 1] [source_file: expected0]
                                NAME alert 12 [source_file: expected0]
                                NAME action 12 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        EXPR_RESULT 1 [source_file: testcode]
            ASSIGN 1 [source_file: testcode]
                NAME f 1 [source_file: testcode]
                FUNCTION  1 [source_file: testcode]
                    NAME  1 [source_file: testcode]
                    PARAM_LIST 1 [source_file: testcode]
                    BLOCK 1 [source_file: testcode]
                        VAR 2 [source_file: testcode]
                            NAME action 2 [source_file: testcode]
                        LABEL 3 [source_file: testcode]
                            LABEL_NAME a 3 [source_file: testcode]
                            DO 3 [source_file: testcode]
                                BLOCK 3 [source_file: testcode]
                                    VAR 4 [source_file: testcode]
                                        NAME proto 4 [source_file: testcode]
                                            NULL 4 [source_file: testcode]
                                    TRY 5 [source_file: testcode]
                                        BLOCK 5 [source_file: testcode]
                                            EXPR_RESULT 6 [source_file: testcode]
                                                ASSIGN 6 [source_file: testcode]
                                                    NAME proto 6 [source_file: testcode]
                                                    NEW 6 [source_file: testcode]
                                                        NAME Proto 6 [source_file: testcode]
                                        BLOCK 7 [source_file: testcode]
                                        BLOCK 7 [source_file: testcode]
                                            EXPR_RESULT 8 [source_file: testcode]
                                                ASSIGN 8 [source_file: testcode]
                                                    NAME action 8 [source_file: testcode]
                                                    NAME proto 8 [source_file: testcode]
                                FALSE 11 [source_file: testcode]
                        EXPR_RESULT 12 [source_file: testcode]
                            CALL 12 [free_call: 1] [source_file: testcode]
                                NAME alert 12 [source_file: testcode]
                                NAME action 12 [source_file: testcode]


Subtree1: BLOCK 7 [source_file: expected0]
    EXPR_RESULT 8 [source_file: expected0]
        ASSIGN 8 [source_file: expected0]
            NAME action 8 [source_file: expected0]
            NAME proto 8 [source_file: expected0]
    CONTINUE 9 [source_file: expected0]
        LABEL_NAME a 9 [source_file: expected0]


Subtree2: BLOCK 7 [source_file: testcode]
    EXPR_RESULT 8 [source_file: testcode]
        ASSIGN 8 [source_file: testcode]
            NAME action 8 [source_file: testcode]
            NAME proto 8 [source_file: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:928)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:460)
junit.framework.AssertionFailedError: 
Expected: function f(){b:try{throw 9;}finally{switch(x){case 1:break b}}return 1}
Result: function f(){b:try{throw 9;}finally{switch(x){case 1:}}return 1}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION f 1 [source_file: expected0]
            NAME f 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                LABEL 1 [source_file: expected0]
                    LABEL_NAME b 1 [source_file: expected0]
                    TRY 1 [source_file: expected0]
                        BLOCK 1 [source_file: expected0]
                            THROW 1 [source_file: expected0]
                                NUMBER 9.0 1 [source_file: expected0]
                        BLOCK 1 [source_file: expected0]
                        BLOCK 1 [source_file: expected0]
                            SWITCH 1 [source_file: expected0]
                                NAME x 1 [source_file: expected0]
                                CASE 1 [source_file: expected0]
                                    NUMBER 1.0 1 [source_file: expected0]
                                    BLOCK 1 [synthetic: 1] [source_file: expected0]
                                        BREAK 1 [source_file: expected0]
                                            LABEL_NAME b 1 [source_file: expected0]
                RETURN 1 [source_file: expected0]
                    NUMBER 1.0 1 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION f 1 [source_file: testcode]
            NAME f 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                LABEL 1 [source_file: testcode]
                    LABEL_NAME b 1 [source_file: testcode]
                    TRY 1 [source_file: testcode]
                        BLOCK 1 [source_file: testcode]
                            THROW 1 [source_file: testcode]
                                NUMBER 9.0 1 [source_file: testcode]
                        BLOCK 1 [source_file: testcode]
                        BLOCK 1 [source_file: testcode]
                            SWITCH 1 [source_file: testcode]
                                NAME x 1 [source_file: testcode]
                                CASE 1 [source_file: testcode]
                                    NUMBER 1.0 1 [source_file: testcode]
                                    BLOCK 1 [synthetic: 1] [source_file: testcode]
                RETURN 1 [source_file: testcode]
                    NUMBER 1.0 1 [source_file: testcode]


Subtree1: BLOCK 1 [synthetic: 1] [source_file: expected0]
    BREAK 1 [source_file: expected0]
        LABEL_NAME b 1 [source_file: expected0]


Subtree2: BLOCK 1 [synthetic: 1] [source_file: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:928)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:460)
junit.framework.AssertionFailedError: 
Expected: f=function(){var action;a:{var proto=null;try{proto=new Proto}finally{action=proto;break a}}alert(action)}
Result: f=function(){var action;a:{var proto=null;try{proto=new Proto}finally{action=proto}}alert(action)}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            ASSIGN 1 [source_file: expected0]
                NAME f 1 [source_file: expected0]
                FUNCTION  1 [source_file: expected0]
                    NAME  1 [source_file: expected0]
                    PARAM_LIST 1 [source_file: expected0]
                    BLOCK 1 [source_file: expected0]
                        VAR 2 [source_file: expected0]
                            NAME action 2 [source_file: expected0]
                        LABEL 3 [source_file: expected0]
                            LABEL_NAME a 3 [source_file: expected0]
                            BLOCK 3 [source_file: expected0]
                                VAR 4 [source_file: expected0]
                                    NAME proto 4 [source_file: expected0]
                                        NULL 4 [source_file: expected0]
                                TRY 5 [source_file: expected0]
                                    BLOCK 5 [source_file: expected0]
                                        EXPR_RESULT 6 [source_file: expected0]
                                            ASSIGN 6 [source_file: expected0]
                                                NAME proto 6 [source_file: expected0]
                                                NEW 6 [source_file: expected0]
                                                    NAME Proto 6 [source_file: expected0]
                                    BLOCK 7 [source_file: expected0]
                                    BLOCK 7 [source_file: expected0]
                                        EXPR_RESULT 8 [source_file: expected0]
                                            ASSIGN 8 [source_file: expected0]
                                                NAME action 8 [source_file: expected0]
                                                NAME proto 8 [source_file: expected0]
                                        BREAK 9 [source_file: expected0]
                                            LABEL_NAME a 9 [source_file: expected0]
                        EXPR_RESULT 12 [source_file: expected0]
                            CALL 12 [free_call: 1] [source_file: expected0]
                                NAME alert 12 [source_file: expected0]
                                NAME action 12 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        EXPR_RESULT 1 [source_file: testcode]
            ASSIGN 1 [source_file: testcode]
                NAME f 1 [source_file: testcode]
                FUNCTION  1 [source_file: testcode]
                    NAME  1 [source_file: testcode]
                    PARAM_LIST 1 [source_file: testcode]
                    BLOCK 1 [source_file: testcode]
                        VAR 2 [source_file: testcode]
                            NAME action 2 [source_file: testcode]
                        LABEL 3 [source_file: testcode]
                            LABEL_NAME a 3 [source_file: testcode]
                            BLOCK 3 [source_file: testcode]
                                VAR 4 [source_file: testcode]
                                    NAME proto 4 [source_file: testcode]
                                        NULL 4 [source_file: testcode]
                                TRY 5 [source_file: testcode]
                                    BLOCK 5 [source_file: testcode]
                                        EXPR_RESULT 6 [source_file: testcode]
                                            ASSIGN 6 [source_file: testcode]
                                                NAME proto 6 [source_file: testcode]
                                                NEW 6 [source_file: testcode]
                                                    NAME Proto 6 [source_file: testcode]
                                    BLOCK 7 [source_file: testcode]
                                    BLOCK 7 [source_file: testcode]
                                        EXPR_RESULT 8 [source_file: testcode]
                                            ASSIGN 8 [source_file: testcode]
                                                NAME action 8 [source_file: testcode]
                                                NAME proto 8 [source_file: testcode]
                        EXPR_RESULT 12 [source_file: testcode]
                            CALL 12 [free_call: 1] [source_file: testcode]
                                NAME alert 12 [source_file: testcode]
                                NAME action 12 [source_file: testcode]


Subtree1: BLOCK 7 [source_file: expected0]
    EXPR_RESULT 8 [source_file: expected0]
        ASSIGN 8 [source_file: expected0]
            NAME action 8 [source_file: expected0]
            NAME proto 8 [source_file: expected0]
    BREAK 9 [source_file: expected0]
        LABEL_NAME a 9 [source_file: expected0]


Subtree2: BLOCK 7 [source_file: testcode]
    EXPR_RESULT 8 [source_file: testcode]
        ASSIGN 8 [source_file: testcode]
            NAME action 8 [source_file: testcode]
            NAME proto 8 [source_file: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:928)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:460)
junit.framework.AssertionFailedError: 
Expected: f=function(){var action;a:{var proto=null;try{}finally{try{proto=new Proto}finally{action=proto;break a}}}alert(action)}
Result: f=function(){var action;a:{var proto=null;try{}finally{try{proto=new Proto}finally{action=proto}}}alert(action)}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            ASSIGN 1 [source_file: expected0]
                NAME f 1 [source_file: expected0]
                FUNCTION  1 [source_file: expected0]
                    NAME  1 [source_file: expected0]
                    PARAM_LIST 1 [source_file: expected0]
                    BLOCK 1 [source_file: expected0]
                        VAR 2 [source_file: expected0]
                            NAME action 2 [source_file: expected0]
                        LABEL 3 [source_file: expected0]
                            LABEL_NAME a 3 [source_file: expected0]
                            BLOCK 3 [source_file: expected0]
                                VAR 4 [source_file: expected0]
                                    NAME proto 4 [source_file: expected0]
                                        NULL 4 [source_file: expected0]
                                TRY 5 [source_file: expected0]
                                    BLOCK 5 [source_file: expected0]
                                    BLOCK 6 [source_file: expected0]
                                    BLOCK 6 [source_file: expected0]
                                        TRY 7 [source_file: expected0]
                                            BLOCK 7 [source_file: expected0]
                                                EXPR_RESULT 8 [source_file: expected0]
                                                    ASSIGN 8 [source_file: expected0]
                                                        NAME proto 8 [source_file: expected0]
                                                        NEW 8 [source_file: expected0]
                                                            NAME Proto 8 [source_file: expected0]
                                            BLOCK 9 [source_file: expected0]
                                            BLOCK 9 [source_file: expected0]
                                                EXPR_RESULT 10 [source_file: expected0]
                                                    ASSIGN 10 [source_file: expected0]
                                                        NAME action 10 [source_file: expected0]
                                                        NAME proto 10 [source_file: expected0]
                                                BREAK 11 [source_file: expected0]
                                                    LABEL_NAME a 11 [source_file: expected0]
                        EXPR_RESULT 15 [source_file: expected0]
                            CALL 15 [free_call: 1] [source_file: expected0]
                                NAME alert 15 [source_file: expected0]
                                NAME action 15 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        EXPR_RESULT 1 [source_file: testcode]
            ASSIGN 1 [source_file: testcode]
                NAME f 1 [source_file: testcode]
                FUNCTION  1 [source_file: testcode]
                    NAME  1 [source_file: testcode]
                    PARAM_LIST 1 [source_file: testcode]
                    BLOCK 1 [source_file: testcode]
                        VAR 2 [source_file: testcode]
                            NAME action 2 [source_file: testcode]
                        LABEL 3 [source_file: testcode]
                            LABEL_NAME a 3 [source_file: testcode]
                            BLOCK 3 [source_file: testcode]
                                VAR 4 [source_file: testcode]
                                    NAME proto 4 [source_file: testcode]
                                        NULL 4 [source_file: testcode]
                                TRY 5 [source_file: testcode]
                                    BLOCK 5 [source_file: testcode]
                                    BLOCK 6 [source_file: testcode]
                                    BLOCK 6 [source_file: testcode]
                                        TRY 7 [source_file: testcode]
                                            BLOCK 7 [source_file: testcode]
                                                EXPR_RESULT 8 [source_file: testcode]
                                                    ASSIGN 8 [source_file: testcode]
                                                        NAME proto 8 [source_file: testcode]
                                                        NEW 8 [source_file: testcode]
                                                            NAME Proto 8 [source_file: testcode]
                                            BLOCK 9 [source_file: testcode]
                                            BLOCK 9 [source_file: testcode]
                                                EXPR_RESULT 10 [source_file: testcode]
                                                    ASSIGN 10 [source_file: testcode]
                                                        NAME action 10 [source_file: testcode]
                                                        NAME proto 10 [source_file: testcode]
                        EXPR_RESULT 15 [source_file: testcode]
                            CALL 15 [free_call: 1] [source_file: testcode]
                                NAME alert 15 [source_file: testcode]
                                NAME action 15 [source_file: testcode]


Subtree1: BLOCK 9 [source_file: expected0]
    EXPR_RESULT 10 [source_file: expected0]
        ASSIGN 10 [source_file: expected0]
            NAME action 10 [source_file: expected0]
            NAME proto 10 [source_file: expected0]
    BREAK 11 [source_file: expected0]
        LABEL_NAME a 11 [source_file: expected0]


Subtree2: BLOCK 9 [source_file: testcode]
    EXPR_RESULT 10 [source_file: testcode]
        ASSIGN 10 [source_file: testcode]
            NAME action 10 [source_file: testcode]
            NAME proto 10 [source_file: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:928)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:460)
junit.framework.AssertionFailedError: 
Expected: f=function(){var action;a:{var proto=null;try{proto=new Proto}finally{action=proto;return}}}
Result: f=function(){var action;a:{var proto=null;try{proto=new Proto}finally{action=proto}}}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            ASSIGN 1 [source_file: expected0]
                NAME f 1 [source_file: expected0]
                FUNCTION  1 [source_file: expected0]
                    NAME  1 [source_file: expected0]
                    PARAM_LIST 1 [source_file: expected0]
                    BLOCK 1 [source_file: expected0]
                        VAR 2 [source_file: expected0]
                            NAME action 2 [source_file: expected0]
                        LABEL 3 [source_file: expected0]
                            LABEL_NAME a 3 [source_file: expected0]
                            BLOCK 3 [source_file: expected0]
                                VAR 4 [source_file: expected0]
                                    NAME proto 4 [source_file: expected0]
                                        NULL 4 [source_file: expected0]
                                TRY 5 [source_file: expected0]
                                    BLOCK 5 [source_file: expected0]
                                        EXPR_RESULT 6 [source_file: expected0]
                                            ASSIGN 6 [source_file: expected0]
                                                NAME proto 6 [source_file: expected0]
                                                NEW 6 [source_file: expected0]
                                                    NAME Proto 6 [source_file: expected0]
                                    BLOCK 7 [source_file: expected0]
                                    BLOCK 7 [source_file: expected0]
                                        EXPR_RESULT 8 [source_file: expected0]
                                            ASSIGN 8 [source_file: expected0]
                                                NAME action 8 [source_file: expected0]
                                                NAME proto 8 [source_file: expected0]
                                        RETURN 9 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        EXPR_RESULT 1 [source_file: testcode]
            ASSIGN 1 [source_file: testcode]
                NAME f 1 [source_file: testcode]
                FUNCTION  1 [source_file: testcode]
                    NAME  1 [source_file: testcode]
                    PARAM_LIST 1 [source_file: testcode]
                    BLOCK 1 [source_file: testcode]
                        VAR 2 [source_file: testcode]
                            NAME action 2 [source_file: testcode]
                        LABEL 3 [source_file: testcode]
                            LABEL_NAME a 3 [source_file: testcode]
                            BLOCK 3 [source_file: testcode]
                                VAR 4 [source_file: testcode]
                                    NAME proto 4 [source_file: testcode]
                                        NULL 4 [source_file: testcode]
                                TRY 5 [source_file: testcode]
                                    BLOCK 5 [source_file: testcode]
                                        EXPR_RESULT 6 [source_file: testcode]
                                            ASSIGN 6 [source_file: testcode]
                                                NAME proto 6 [source_file: testcode]
                                                NEW 6 [source_file: testcode]
                                                    NAME Proto 6 [source_file: testcode]
                                    BLOCK 7 [source_file: testcode]
                                    BLOCK 7 [source_file: testcode]
                                        EXPR_RESULT 8 [source_file: testcode]
                                            ASSIGN 8 [source_file: testcode]
                                                NAME action 8 [source_file: testcode]
                                                NAME proto 8 [source_file: testcode]


Subtree1: BLOCK 7 [source_file: expected0]
    EXPR_RESULT 8 [source_file: expected0]
        ASSIGN 8 [source_file: expected0]
            NAME action 8 [source_file: expected0]
            NAME proto 8 [source_file: expected0]
    RETURN 9 [source_file: expected0]


Subtree2: BLOCK 7 [source_file: testcode]
    EXPR_RESULT 8 [source_file: testcode]
        ASSIGN 8 [source_file: testcode]
            NAME action 8 [source_file: testcode]
            NAME proto 8 [source_file: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:928)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:460)
junit.framework.AssertionFailedError: 
Expected: function f(){b:try{throw 9;}finally{break b}return 1}
Result: function f(){b:try{throw 9;}finally{}return 1}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION f 1 [source_file: expected0]
            NAME f 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                LABEL 1 [source_file: expected0]
                    LABEL_NAME b 1 [source_file: expected0]
                    TRY 1 [source_file: expected0]
                        BLOCK 1 [source_file: expected0]
                            THROW 1 [source_file: expected0]
                                NUMBER 9.0 1 [source_file: expected0]
                        BLOCK 1 [source_file: expected0]
                        BLOCK 1 [source_file: expected0]
                            BREAK 1 [source_file: expected0]
                                LABEL_NAME b 1 [source_file: expected0]
                RETURN 1 [source_file: expected0]
                    NUMBER 1.0 1 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION f 1 [source_file: testcode]
            NAME f 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                LABEL 1 [source_file: testcode]
                    LABEL_NAME b 1 [source_file: testcode]
                    TRY 1 [source_file: testcode]
                        BLOCK 1 [source_file: testcode]
                            THROW 1 [source_file: testcode]
                                NUMBER 9.0 1 [source_file: testcode]
                        BLOCK 1 [source_file: testcode]
                        BLOCK 1 [source_file: testcode]
                RETURN 1 [source_file: testcode]
                    NUMBER 1.0 1 [source_file: testcode]


Subtree1: BLOCK 1 [source_file: expected0]
    BREAK 1 [source_file: expected0]
        LABEL_NAME b 1 [source_file: expected0]


Subtree2: BLOCK 1 [source_file: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:928)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:460)
junit.framework.AssertionFailedError: 
Expected: f=function(){var action;a:do{var proto=null;try{proto=new Proto}finally{action=proto;continue a}}while(false);alert(action)}
Result: f=function(){var action;a:do{var proto=null;try{proto=new Proto}finally{action=proto}}while(false);alert(action)}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            ASSIGN 1 [source_file: expected0]
                NAME f 1 [source_file: expected0]
                FUNCTION  1 [source_file: expected0]
                    NAME  1 [source_file: expected0]
                    PARAM_LIST 1 [source_file: expected0]
                    BLOCK 1 [source_file: expected0]
                        VAR 2 [source_file: expected0]
                            NAME action 2 [source_file: expected0]
                        LABEL 3 [source_file: expected0]
                            LABEL_NAME a 3 [source_file: expected0]
                            DO 3 [source_file: expected0]
                                BLOCK 3 [source_file: expected0]
                                    VAR 4 [source_file: expected0]
                                        NAME proto 4 [source_file: expected0]
                                            NULL 4 [source_file: expected0]
                                    TRY 5 [source_file: expected0]
                                        BLOCK 5 [source_file: expected0]
                                            EXPR_RESULT 6 [source_file: expected0]
                                                ASSIGN 6 [source_file: expected0]
                                                    NAME proto 6 [source_file: expected0]
                                                    NEW 6 [source_file: expected0]
                                                        NAME Proto 6 [source_file: expected0]
                                        BLOCK 7 [source_file: expected0]
                                        BLOCK 7 [source_file: expected0]
                                            EXPR_RESULT 8 [source_file: expected0]
                                                ASSIGN 8 [source_file: expected0]
                                                    NAME action 8 [source_file: expected0]
                                                    NAME proto 8 [source_file: expected0]
                                            CONTINUE 9 [source_file: expected0]
                                                LABEL_NAME a 9 [source_file: expected0]
                                FALSE 11 [source_file: expected0]
                        EXPR_RESULT 12 [source_file: expected0]
                            CALL 12 [free_call: 1] [source_file: expected0]
                                NAME alert 12 [source_file: expected0]
                                NAME action 12 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        EXPR_RESULT 1 [source_file: testcode]
            ASSIGN 1 [source_file: testcode]
                NAME f 1 [source_file: testcode]
                FUNCTION  1 [source_file: testcode]
                    NAME  1 [source_file: testcode]
                    PARAM_LIST 1 [source_file: testcode]
                    BLOCK 1 [source_file: testcode]
                        VAR 2 [source_file: testcode]
                            NAME action 2 [source_file: testcode]
                        LABEL 3 [source_file: testcode]
                            LABEL_NAME a 3 [source_file: testcode]
                            DO 3 [source_file: testcode]
                                BLOCK 3 [source_file: testcode]
                                    VAR 4 [source_file: testcode]
                                        NAME proto 4 [source_file: testcode]
                                            NULL 4 [source_file: testcode]
                                    TRY 5 [source_file: testcode]
                                        BLOCK 5 [source_file: testcode]
                                            EXPR_RESULT 6 [source_file: testcode]
                                                ASSIGN 6 [source_file: testcode]
                                                    NAME proto 6 [source_file: testcode]
                                                    NEW 6 [source_file: testcode]
                                                        NAME Proto 6 [source_file: testcode]
                                        BLOCK 7 [source_file: testcode]
                                        BLOCK 7 [source_file: testcode]
                                            EXPR_RESULT 8 [source_file: testcode]
                                                ASSIGN 8 [source_file: testcode]
                                                    NAME action 8 [source_file: testcode]
                                                    NAME proto 8 [source_file: testcode]
                                FALSE 11 [source_file: testcode]
                        EXPR_RESULT 12 [source_file: testcode]
                            CALL 12 [free_call: 1] [source_file: testcode]
                                NAME alert 12 [source_file: testcode]
                                NAME action 12 [source_file: testcode]


Subtree1: BLOCK 7 [source_file: expected0]
    EXPR_RESULT 8 [source_file: expected0]
        ASSIGN 8 [source_file: expected0]
            NAME action 8 [source_file: expected0]
            NAME proto 8 [source_file: expected0]
    CONTINUE 9 [source_file: expected0]
        LABEL_NAME a 9 [source_file: expected0]


Subtree2: BLOCK 7 [source_file: testcode]
    EXPR_RESULT 8 [source_file: testcode]
        ASSIGN 8 [source_file: testcode]
            NAME action 8 [source_file: testcode]
            NAME proto 8 [source_file: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:928)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:460)
junit.framework.AssertionFailedError: 
Expected: function f(){b:try{throw 9;}finally{switch(x){case 1:break b}}return 1}
Result: function f(){b:try{throw 9;}finally{switch(x){case 1:}}return 1}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION f 1 [source_file: expected0]
            NAME f 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                LABEL 1 [source_file: expected0]
                    LABEL_NAME b 1 [source_file: expected0]
                    TRY 1 [source_file: expected0]
                        BLOCK 1 [source_file: expected0]
                            THROW 1 [source_file: expected0]
                                NUMBER 9.0 1 [source_file: expected0]
                        BLOCK 1 [source_file: expected0]
                        BLOCK 1 [source_file: expected0]
                            SWITCH 1 [source_file: expected0]
                                NAME x 1 [source_file: expected0]
                                CASE 1 [source_file: expected0]
                                    NUMBER 1.0 1 [source_file: expected0]
                                    BLOCK 1 [synthetic: 1] [source_file: expected0]
                                        BREAK 1 [source_file: expected0]
                                            LABEL_NAME b 1 [source_file: expected0]
                RETURN 1 [source_file: expected0]
                    NUMBER 1.0 1 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION f 1 [source_file: testcode]
            NAME f 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                LABEL 1 [source_file: testcode]
                    LABEL_NAME b 1 [source_file: testcode]
                    TRY 1 [source_file: testcode]
                        BLOCK 1 [source_file: testcode]
                            THROW 1 [source_file: testcode]
                                NUMBER 9.0 1 [source_file: testcode]
                        BLOCK 1 [source_file: testcode]
                        BLOCK 1 [source_file: testcode]
                            SWITCH 1 [source_file: testcode]
                                NAME x 1 [source_file: testcode]
                                CASE 1 [source_file: testcode]
                                    NUMBER 1.0 1 [source_file: testcode]
                                    BLOCK 1 [synthetic: 1] [source_file: testcode]
                RETURN 1 [source_file: testcode]
                    NUMBER 1.0 1 [source_file: testcode]


Subtree1: BLOCK 1 [synthetic: 1] [source_file: expected0]
    BREAK 1 [source_file: expected0]
        LABEL_NAME b 1 [source_file: expected0]


Subtree2: BLOCK 1 [synthetic: 1] [source_file: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:928)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:460)
junit.framework.AssertionFailedError: 
Expected: f=function(){var action;a:{var proto=null;try{proto=new Proto}finally{action=proto;break a}}alert(action)}
Result: f=function(){var action;a:{var proto=null;try{proto=new Proto}finally{action=proto}}alert(action)}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            ASSIGN 1 [source_file: expected0]
                NAME f 1 [source_file: expected0]
                FUNCTION  1 [source_file: expected0]
                    NAME  1 [source_file: expected0]
                    PARAM_LIST 1 [source_file: expected0]
                    BLOCK 1 [source_file: expected0]
                        VAR 2 [source_file: expected0]
                            NAME action 2 [source_file: expected0]
                        LABEL 3 [source_file: expected0]
                            LABEL_NAME a 3 [source_file: expected0]
                            BLOCK 3 [source_file: expected0]
                                VAR 4 [source_file: expected0]
                                    NAME proto 4 [source_file: expected0]
                                        NULL 4 [source_file: expected0]
                                TRY 5 [source_file: expected0]
                                    BLOCK 5 [source_file: expected0]
                                        EXPR_RESULT 6 [source_file: expected0]
                                            ASSIGN 6 [source_file: expected0]
                                                NAME proto 6 [source_file: expected0]
                                                NEW 6 [source_file: expected0]
                                                    NAME Proto 6 [source_file: expected0]
                                    BLOCK 7 [source_file: expected0]
                                    BLOCK 7 [source_file: expected0]
                                        EXPR_RESULT 8 [source_file: expected0]
                                            ASSIGN 8 [source_file: expected0]
                                                NAME action 8 [source_file: expected0]
                                                NAME proto 8 [source_file: expected0]
                                        BREAK 9 [source_file: expected0]
                                            LABEL_NAME a 9 [source_file: expected0]
                        EXPR_RESULT 12 [source_file: expected0]
                            CALL 12 [free_call: 1] [source_file: expected0]
                                NAME alert 12 [source_file: expected0]
                                NAME action 12 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        EXPR_RESULT 1 [source_file: testcode]
            ASSIGN 1 [source_file: testcode]
                NAME f 1 [source_file: testcode]
                FUNCTION  1 [source_file: testcode]
                    NAME  1 [source_file: testcode]
                    PARAM_LIST 1 [source_file: testcode]
                    BLOCK 1 [source_file: testcode]
                        VAR 2 [source_file: testcode]
                            NAME action 2 [source_file: testcode]
                        LABEL 3 [source_file: testcode]
                            LABEL_NAME a 3 [source_file: testcode]
                            BLOCK 3 [source_file: testcode]
                                VAR 4 [source_file: testcode]
                                    NAME proto 4 [source_file: testcode]
                                        NULL 4 [source_file: testcode]
                                TRY 5 [source_file: testcode]
                                    BLOCK 5 [source_file: testcode]
                                        EXPR_RESULT 6 [source_file: testcode]
                                            ASSIGN 6 [source_file: testcode]
                                                NAME proto 6 [source_file: testcode]
                                                NEW 6 [source_file: testcode]
                                                    NAME Proto 6 [source_file: testcode]
                                    BLOCK 7 [source_file: testcode]
                                    BLOCK 7 [source_file: testcode]
                                        EXPR_RESULT 8 [source_file: testcode]
                                            ASSIGN 8 [source_file: testcode]
                                                NAME action 8 [source_file: testcode]
                                                NAME proto 8 [source_file: testcode]
                        EXPR_RESULT 12 [source_file: testcode]
                            CALL 12 [free_call: 1] [source_file: testcode]
                                NAME alert 12 [source_file: testcode]
                                NAME action 12 [source_file: testcode]


Subtree1: BLOCK 7 [source_file: expected0]
    EXPR_RESULT 8 [source_file: expected0]
        ASSIGN 8 [source_file: expected0]
            NAME action 8 [source_file: expected0]
            NAME proto 8 [source_file: expected0]
    BREAK 9 [source_file: expected0]
        LABEL_NAME a 9 [source_file: expected0]


Subtree2: BLOCK 7 [source_file: testcode]
    EXPR_RESULT 8 [source_file: testcode]
        ASSIGN 8 [source_file: testcode]
            NAME action 8 [source_file: testcode]
            NAME proto 8 [source_file: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:928)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:460)
junit.framework.AssertionFailedError: 
Expected: f=function(){var action;a:{var proto=null;try{}finally{try{proto=new Proto}finally{action=proto;break a}}}alert(action)}
Result: f=function(){var action;a:{var proto=null;try{}finally{try{proto=new Proto}finally{action=proto}}}alert(action)}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            ASSIGN 1 [source_file: expected0]
                NAME f 1 [source_file: expected0]
                FUNCTION  1 [source_file: expected0]
                    NAME  1 [source_file: expected0]
                    PARAM_LIST 1 [source_file: expected0]
                    BLOCK 1 [source_file: expected0]
                        VAR 2 [source_file: expected0]
                            NAME action 2 [source_file: expected0]
                        LABEL 3 [source_file: expected0]
                            LABEL_NAME a 3 [source_file: expected0]
                            BLOCK 3 [source_file: expected0]
                                VAR 4 [source_file: expected0]
                                    NAME proto 4 [source_file: expected0]
                                        NULL 4 [source_file: expected0]
                                TRY 5 [source_file: expected0]
                                    BLOCK 5 [source_file: expected0]
                                    BLOCK 6 [source_file: expected0]
                                    BLOCK 6 [source_file: expected0]
                                        TRY 7 [source_file: expected0]
                                            BLOCK 7 [source_file: expected0]
                                                EXPR_RESULT 8 [source_file: expected0]
                                                    ASSIGN 8 [source_file: expected0]
                                                        NAME proto 8 [source_file: expected0]
                                                        NEW 8 [source_file: expected0]
                                                            NAME Proto 8 [source_file: expected0]
                                            BLOCK 9 [source_file: expected0]
                                            BLOCK 9 [source_file: expected0]
                                                EXPR_RESULT 10 [source_file: expected0]
                                                    ASSIGN 10 [source_file: expected0]
                                                        NAME action 10 [source_file: expected0]
                                                        NAME proto 10 [source_file: expected0]
                                                BREAK 11 [source_file: expected0]
                                                    LABEL_NAME a 11 [source_file: expected0]
                        EXPR_RESULT 15 [source_file: expected0]
                            CALL 15 [free_call: 1] [source_file: expected0]
                                NAME alert 15 [source_file: expected0]
                                NAME action 15 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        EXPR_RESULT 1 [source_file: testcode]
            ASSIGN 1 [source_file: testcode]
                NAME f 1 [source_file: testcode]
                FUNCTION  1 [source_file: testcode]
                    NAME  1 [source_file: testcode]
                    PARAM_LIST 1 [source_file: testcode]
                    BLOCK 1 [source_file: testcode]
                        VAR 2 [source_file: testcode]
                            NAME action 2 [source_file: testcode]
                        LABEL 3 [source_file: testcode]
                            LABEL_NAME a 3 [source_file: testcode]
                            BLOCK 3 [source_file: testcode]
                                VAR 4 [source_file: testcode]
                                    NAME proto 4 [source_file: testcode]
                                        NULL 4 [source_file: testcode]
                                TRY 5 [source_file: testcode]
                                    BLOCK 5 [source_file: testcode]
                                    BLOCK 6 [source_file: testcode]
                                    BLOCK 6 [source_file: testcode]
                                        TRY 7 [source_file: testcode]
                                            BLOCK 7 [source_file: testcode]
                                                EXPR_RESULT 8 [source_file: testcode]
                                                    ASSIGN 8 [source_file: testcode]
                                                        NAME proto 8 [source_file: testcode]
                                                        NEW 8 [source_file: testcode]
                                                            NAME Proto 8 [source_file: testcode]
                                            BLOCK 9 [source_file: testcode]
                                            BLOCK 9 [source_file: testcode]
                                                EXPR_RESULT 10 [source_file: testcode]
                                                    ASSIGN 10 [source_file: testcode]
                                                        NAME action 10 [source_file: testcode]
                                                        NAME proto 10 [source_file: testcode]
                        EXPR_RESULT 15 [source_file: testcode]
                            CALL 15 [free_call: 1] [source_file: testcode]
                                NAME alert 15 [source_file: testcode]
                                NAME action 15 [source_file: testcode]


Subtree1: BLOCK 9 [source_file: expected0]
    EXPR_RESULT 10 [source_file: expected0]
        ASSIGN 10 [source_file: expected0]
            NAME action 10 [source_file: expected0]
            NAME proto 10 [source_file: expected0]
    BREAK 11 [source_file: expected0]
        LABEL_NAME a 11 [source_file: expected0]


Subtree2: BLOCK 9 [source_file: testcode]
    EXPR_RESULT 10 [source_file: testcode]
        ASSIGN 10 [source_file: testcode]
            NAME action 10 [source_file: testcode]
            NAME proto 10 [source_file: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:928)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:460)
19:29:59.946 [pool-22-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (12330 ms)
<> Total tests run: 210
<> Ignored tests: 0
<> Failed tests: 40
~ testTwoMethods(com.google.javascript.jscomp.CrossModuleMethodMotionTest)
[
Expected: var JSCompiler_stubMap=[];function JSCompiler_stubMethod(JSCompiler_stubMethod_id){return function(){return JSCompiler_stubMap[JSCompiler_stubMethod_id].apply(this,arguments)}}function JSCompiler_unstubMethod(JSCompiler_unstubMethod_id,JSCompiler_unstubMethod_body){return JSCompiler_stubMap[JSCompiler_unstubMethod_id]=JSCompiler_unstubMethod_body}function Foo(){}Foo.prototype.baz=JSCompiler_stubMethod(1);Foo.prototype.callBaz=JSCompiler_stubMethod(0);Foo.prototype.baz=JSCompiler_unstubMethod(1,function(){});
Foo.prototype.callBaz=JSCompiler_unstubMethod(0,function(){this.baz()});(new Foo).callBaz()
Result: var JSCompiler_stubMap=[];function JSCompiler_stubMethod(JSCompiler_stubMethod_id){return function(){return JSCompiler_stubMap[JSCompiler_stubMethod_id].apply(this,arguments)}}function JSCompiler_unstubMethod(JSCompiler_unstubMethod_id,JSCompiler_unstubMethod_body){return JSCompiler_stubMap[JSCompiler_unstubMethod_id]=JSCompiler_unstubMethod_body}function Foo(){}Foo.prototype.baz=JSCompiler_stubMethod(0);Foo.prototype.callBaz=JSCompiler_stubMethod(1);
Foo.prototype.callBaz=JSCompiler_unstubMethod(1,function(){this.baz()});Foo.prototype.baz=JSCompiler_unstubMethod(0,function(){});(new Foo).callBaz()
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        VAR 1 [source_file: expected0]
            NAME JSCompiler_stubMap 1 [source_file: expected0]
                ARRAYLIT 1 [source_file: expected0]
        FUNCTION JSCompiler_stubMethod 1 [source_file: expected0]
            NAME JSCompiler_stubMethod 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
                NAME JSCompiler_stubMethod_id 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                RETURN 1 [source_file: expected0]
                    FUNCTION  1 [source_file: expected0]
                        NAME  1 [source_file: expected0]
                        PARAM_LIST 1 [source_file: expected0]
                        BLOCK 1 [source_file: expected0]
                            RETURN 1 [source_file: expected0]
                                CALL 1 [source_file: expected0]
                                    GETPROP 1 [source_file: expected0]
                                        GETELEM 1 [source_file: expected0]
                                            NAME JSCompiler_stubMap 1 [source_file: expected0]
                                            NAME JSCompiler_stubMethod_id 1 [source_file: expected0]
                                        STRING apply 1 [source_file: expected0]
                                    THIS 1 [source_file: expected0]
                                    NAME arguments 1 [source_file: expected0]
        FUNCTION JSCompiler_unstubMethod 1 [source_file: expected0]
            NAME JSCompiler_unstubMethod 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
                NAME JSCompiler_unstubMethod_id 1 [source_file: expected0]
                NAME JSCompiler_unstubMethod_body 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                RETURN 1 [source_file: expected0]
                    ASSIGN 1 [source_file: expected0]
                        GETELEM 1 [source_file: expected0]
                            NAME JSCompiler_stubMap 1 [source_file: expected0]
                            NAME JSCompiler_unstubMethod_id 1 [source_file: expected0]
                        NAME JSCompiler_unstubMethod_body 1 [source_file: expected0]
        FUNCTION Foo 1 [source_file: expected0]
            NAME Foo 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            ASSIGN 1 [source_file: expected0]
                GETPROP 1 [source_file: expected0]
                    GETPROP 1 [source_file: expected0]
                        NAME Foo 1 [source_file: expected0]
                        STRING prototype 1 [source_file: expected0]
                    STRING baz 1 [source_file: expected0]
                CALL 1 [free_call: 1] [source_file: expected0]
                    NAME JSCompiler_stubMethod 1 [source_file: expected0]
                    NUMBER 1.0 1 [source_file: expected0]
    SCRIPT 1 [synthetic: 1] [source_file: expected1] [input_id: InputId: expected1]
        EXPR_RESULT 1 [source_file: expected1]
            ASSIGN 1 [source_file: expected1]
                GETPROP 1 [source_file: expected1]
                    GETPROP 1 [source_file: expected1]
                        NAME Foo 1 [source_file: expected1]
                        STRING prototype 1 [source_file: expected1]
                    STRING callBaz 1 [source_file: expected1]
                CALL 1 [free_call: 1] [source_file: expected1]
                    NAME JSCompiler_stubMethod 1 [source_file: expected1]
                    NUMBER 0.0 1 [source_file: expected1]
    SCRIPT 1 [synthetic: 1] [source_file: expected2] [input_id: InputId: expected2]
        EXPR_RESULT 1 [source_file: expected2]
            ASSIGN 1 [source_file: expected2]
                GETPROP 1 [source_file: expected2]
                    GETPROP 1 [source_file: expected2]
                        NAME Foo 1 [source_file: expected2]
                        STRING prototype 1 [source_file: expected2]
                    STRING baz 1 [source_file: expected2]
                CALL 1 [free_call: 1] [source_file: expected2]
                    NAME JSCompiler_unstubMethod 1 [source_file: expected2]
                    NUMBER 1.0 1 [source_file: expected2]
                    FUNCTION  1 [source_file: expected2]
                        NAME  1 [source_file: expected2]
                        PARAM_LIST 1 [source_file: expected2]
                        BLOCK 1 [source_file: expected2]
        EXPR_RESULT 1 [source_file: expected2]
            ASSIGN 1 [source_file: expected2]
                GETPROP 1 [source_file: expected2]
                    GETPROP 1 [source_file: expected2]
                        NAME Foo 1 [source_file: expected2]
                        STRING prototype 1 [source_file: expected2]
                    STRING callBaz 1 [source_file: expected2]
                CALL 1 [free_call: 1] [source_file: expected2]
                    NAME JSCompiler_unstubMethod 1 [source_file: expected2]
                    NUMBER 0.0 1 [source_file: expected2]
                    FUNCTION  1 [source_file: expected2]
                        NAME  1 [source_file: expected2]
                        PARAM_LIST 1 [source_file: expected2]
                        BLOCK 1 [source_file: expected2]
                            EXPR_RESULT 1 [source_file: expected2]
                                CALL 1 [source_file: expected2]
                                    GETPROP 1 [source_file: expected2]
                                        THIS 1 [source_file: expected2]
                                        STRING baz 1 [source_file: expected2]
        EXPR_RESULT 1 [source_file: expected2]
            CALL 1 [source_file: expected2]
                GETPROP 1 [source_file: expected2]
                    NEW 1 [source_file: expected2]
                        NAME Foo 1 [source_file: expected2]
                    STRING callBaz 1 [source_file: expected2]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: i0] [input_id: InputId: i0]
        VAR 1 [source_file:  [synthetic:1] ]
            NAME JSCompiler_stubMap 1 [source_file:  [synthetic:1] ]
                ARRAYLIT 1 [source_file:  [synthetic:1] ]
        FUNCTION JSCompiler_stubMethod 1 [source_file:  [synthetic:1] ]
            NAME JSCompiler_stubMethod 1 [source_file:  [synthetic:1] ]
            PARAM_LIST 1 [source_file:  [synthetic:1] ]
                NAME JSCompiler_stubMethod_id 1 [source_file:  [synthetic:1] ]
            BLOCK 1 [source_file:  [synthetic:1] ]
                RETURN 1 [source_file:  [synthetic:1] ]
                    FUNCTION  1 [source_file:  [synthetic:1] ]
                        NAME  1 [source_file:  [synthetic:1] ]
                        PARAM_LIST 1 [source_file:  [synthetic:1] ]
                        BLOCK 1 [source_file:  [synthetic:1] ]
                            RETURN 1 [source_file:  [synthetic:1] ]
                                CALL 1 [source_file:  [synthetic:1] ]
                                    GETPROP 1 [source_file:  [synthetic:1] ]
                                        GETELEM 1 [source_file:  [synthetic:1] ]
                                            NAME JSCompiler_stubMap 1 [source_file:  [synthetic:1] ]
                                            NAME JSCompiler_stubMethod_id 1 [source_file:  [synthetic:1] ]
                                        STRING apply 1 [source_file:  [synthetic:1] ]
                                    THIS 1 [source_file:  [synthetic:1] ]
                                    NAME arguments 1 [source_file:  [synthetic:1] ]
        FUNCTION JSCompiler_unstubMethod 1 [source_file:  [synthetic:1] ]
            NAME JSCompiler_unstubMethod 1 [source_file:  [synthetic:1] ]
            PARAM_LIST 1 [source_file:  [synthetic:1] ]
                NAME JSCompiler_unstubMethod_id 1 [source_file:  [synthetic:1] ]
                NAME JSCompiler_unstubMethod_body 1 [source_file:  [synthetic:1] ]
            BLOCK 1 [source_file:  [synthetic:1] ]
                RETURN 1 [source_file:  [synthetic:1] ]
                    ASSIGN 1 [source_file:  [synthetic:1] ]
                        GETELEM 1 [source_file:  [synthetic:1] ]
                            NAME JSCompiler_stubMap 1 [source_file:  [synthetic:1] ]
                            NAME JSCompiler_unstubMethod_id 1 [source_file:  [synthetic:1] ]
                        NAME JSCompiler_unstubMethod_body 1 [source_file:  [synthetic:1] ]
        FUNCTION Foo 1 [source_file: i0]
            NAME Foo 1 [source_file: i0]
            PARAM_LIST 1 [source_file: i0]
            BLOCK 1 [source_file: i0]
        EXPR_RESULT 1 [source_file: i0]
            ASSIGN 1 [source_file: i0]
                GETPROP 1 [source_file: i0]
                    GETPROP 1 [source_file: i0]
                        NAME Foo 1 [source_file: i0]
                        STRING prototype 1 [source_file: i0]
                    STRING baz 1 [source_file: i0]
                CALL 1 [free_call: 1] [source_file: i0]
                    NAME JSCompiler_stubMethod 1 [source_file: i0]
                    NUMBER 0.0 1 [source_file: i0]
    SCRIPT 1 [synthetic: 1] [source_file: i1] [input_id: InputId: i1]
        EXPR_RESULT 1 [source_file: i1]
            ASSIGN 1 [source_file: i1]
                GETPROP 1 [source_file: i1]
                    GETPROP 1 [source_file: i1]
                        NAME Foo 1 [source_file: i1]
                        STRING prototype 1 [source_file: i1]
                    STRING callBaz 1 [source_file: i1]
                CALL 1 [free_call: 1] [source_file: i1]
                    NAME JSCompiler_stubMethod 1 [source_file: i1]
                    NUMBER 1.0 1 [source_file: i1]
    SCRIPT 1 [synthetic: 1] [source_file: i2] [input_id: InputId: i2]
        EXPR_RESULT 1 [source_file: i1]
            ASSIGN 1 [source_file: i1]
                GETPROP 1 [source_file: i1]
                    GETPROP 1 [source_file: i1]
                        NAME Foo 1 [source_file: i1]
                        STRING prototype 1 [source_file: i1]
                    STRING callBaz 1 [source_file: i1]
                CALL 1 [free_call: 1] [source_file: i1]
                    NAME JSCompiler_unstubMethod 1 [source_file: i1]
                    NUMBER 1.0 1 [source_file: i1]
                    FUNCTION  1 [source_file: i1]
                        NAME  1 [source_file: i1]
                        PARAM_LIST 1 [source_file: i1]
                        BLOCK 1 [source_file: i1]
                            EXPR_RESULT 1 [source_file: i1]
                                CALL 1 [source_file: i1]
                                    GETPROP 1 [source_file: i1]
                                        THIS 1 [source_file: i1]
                                        STRING baz 1 [source_file: i1]
        EXPR_RESULT 1 [source_file: i0]
            ASSIGN 1 [source_file: i0]
                GETPROP 1 [source_file: i0]
                    GETPROP 1 [source_file: i0]
                        NAME Foo 1 [source_file: i0]
                        STRING prototype 1 [source_file: i0]
                    STRING baz 1 [source_file: i0]
                CALL 1 [free_call: 1] [source_file: i0]
                    NAME JSCompiler_unstubMethod 1 [source_file: i0]
                    NUMBER 0.0 1 [source_file: i0]
                    FUNCTION  1 [source_file: i0]
                        NAME  1 [source_file: i0]
                        PARAM_LIST 1 [source_file: i0]
                        BLOCK 1 [source_file: i0]
        EXPR_RESULT 1 [source_file: i2]
            CALL 1 [source_file: i2]
                GETPROP 1 [source_file: i2]
                    NEW 1 [source_file: i2]
                        NAME Foo 1 [source_file: i2]
                    STRING callBaz 1 [source_file: i2]


Subtree1: NUMBER 1.0 1 [source_file: expected0]


Subtree2: NUMBER 0.0 1 [source_file: i0]
]
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_stubMap=[];function JSCompiler_stubMethod(JSCompiler_stubMethod_id){return function(){return JSCompiler_stubMap[JSCompiler_stubMethod_id].apply(this,arguments)}}function JSCompiler_unstubMethod(JSCompiler_unstubMethod_id,JSCompiler_unstubMethod_body){return JSCompiler_stubMap[JSCompiler_unstubMethod_id]=JSCompiler_unstubMethod_body}function Foo(){}Foo.prototype.baz=JSCompiler_stubMethod(1);Foo.prototype.callBaz=JSCompiler_stubMethod(0);Foo.prototype.baz=JSCompiler_unstubMethod(1,function(){});
Foo.prototype.callBaz=JSCompiler_unstubMethod(0,function(){this.baz()});(new Foo).callBaz()
Result: var JSCompiler_stubMap=[];function JSCompiler_stubMethod(JSCompiler_stubMethod_id){return function(){return JSCompiler_stubMap[JSCompiler_stubMethod_id].apply(this,arguments)}}function JSCompiler_unstubMethod(JSCompiler_unstubMethod_id,JSCompiler_unstubMethod_body){return JSCompiler_stubMap[JSCompiler_unstubMethod_id]=JSCompiler_unstubMethod_body}function Foo(){}Foo.prototype.baz=JSCompiler_stubMethod(0);Foo.prototype.callBaz=JSCompiler_stubMethod(1);
Foo.prototype.callBaz=JSCompiler_unstubMethod(1,function(){this.baz()});Foo.prototype.baz=JSCompiler_unstubMethod(0,function(){});(new Foo).callBaz()
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        VAR 1 [source_file: expected0]
            NAME JSCompiler_stubMap 1 [source_file: expected0]
                ARRAYLIT 1 [source_file: expected0]
        FUNCTION JSCompiler_stubMethod 1 [source_file: expected0]
            NAME JSCompiler_stubMethod 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
                NAME JSCompiler_stubMethod_id 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                RETURN 1 [source_file: expected0]
                    FUNCTION  1 [source_file: expected0]
                        NAME  1 [source_file: expected0]
                        PARAM_LIST 1 [source_file: expected0]
                        BLOCK 1 [source_file: expected0]
                            RETURN 1 [source_file: expected0]
                                CALL 1 [source_file: expected0]
                                    GETPROP 1 [source_file: expected0]
                                        GETELEM 1 [source_file: expected0]
                                            NAME JSCompiler_stubMap 1 [source_file: expected0]
                                            NAME JSCompiler_stubMethod_id 1 [source_file: expected0]
                                        STRING apply 1 [source_file: expected0]
                                    THIS 1 [source_file: expected0]
                                    NAME arguments 1 [source_file: expected0]
        FUNCTION JSCompiler_unstubMethod 1 [source_file: expected0]
            NAME JSCompiler_unstubMethod 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
                NAME JSCompiler_unstubMethod_id 1 [source_file: expected0]
                NAME JSCompiler_unstubMethod_body 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                RETURN 1 [source_file: expected0]
                    ASSIGN 1 [source_file: expected0]
                        GETELEM 1 [source_file: expected0]
                            NAME JSCompiler_stubMap 1 [source_file: expected0]
                            NAME JSCompiler_unstubMethod_id 1 [source_file: expected0]
                        NAME JSCompiler_unstubMethod_body 1 [source_file: expected0]
        FUNCTION Foo 1 [source_file: expected0]
            NAME Foo 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            ASSIGN 1 [source_file: expected0]
                GETPROP 1 [source_file: expected0]
                    GETPROP 1 [source_file: expected0]
                        NAME Foo 1 [source_file: expected0]
                        STRING prototype 1 [source_file: expected0]
                    STRING baz 1 [source_file: expected0]
                CALL 1 [free_call: 1] [source_file: expected0]
                    NAME JSCompiler_stubMethod 1 [source_file: expected0]
                    NUMBER 1.0 1 [source_file: expected0]
    SCRIPT 1 [synthetic: 1] [source_file: expected1] [input_id: InputId: expected1]
        EXPR_RESULT 1 [source_file: expected1]
            ASSIGN 1 [source_file: expected1]
                GETPROP 1 [source_file: expected1]
                    GETPROP 1 [source_file: expected1]
                        NAME Foo 1 [source_file: expected1]
                        STRING prototype 1 [source_file: expected1]
                    STRING callBaz 1 [source_file: expected1]
                CALL 1 [free_call: 1] [source_file: expected1]
                    NAME JSCompiler_stubMethod 1 [source_file: expected1]
                    NUMBER 0.0 1 [source_file: expected1]
    SCRIPT 1 [synthetic: 1] [source_file: expected2] [input_id: InputId: expected2]
        EXPR_RESULT 1 [source_file: expected2]
            ASSIGN 1 [source_file: expected2]
                GETPROP 1 [source_file: expected2]
                    GETPROP 1 [source_file: expected2]
                        NAME Foo 1 [source_file: expected2]
                        STRING prototype 1 [source_file: expected2]
                    STRING baz 1 [source_file: expected2]
                CALL 1 [free_call: 1] [source_file: expected2]
                    NAME JSCompiler_unstubMethod 1 [source_file: expected2]
                    NUMBER 1.0 1 [source_file: expected2]
                    FUNCTION  1 [source_file: expected2]
                        NAME  1 [source_file: expected2]
                        PARAM_LIST 1 [source_file: expected2]
                        BLOCK 1 [source_file: expected2]
        EXPR_RESULT 1 [source_file: expected2]
            ASSIGN 1 [source_file: expected2]
                GETPROP 1 [source_file: expected2]
                    GETPROP 1 [source_file: expected2]
                        NAME Foo 1 [source_file: expected2]
                        STRING prototype 1 [source_file: expected2]
                    STRING callBaz 1 [source_file: expected2]
                CALL 1 [free_call: 1] [source_file: expected2]
                    NAME JSCompiler_unstubMethod 1 [source_file: expected2]
                    NUMBER 0.0 1 [source_file: expected2]
                    FUNCTION  1 [source_file: expected2]
                        NAME  1 [source_file: expected2]
                        PARAM_LIST 1 [source_file: expected2]
                        BLOCK 1 [source_file: expected2]
                            EXPR_RESULT 1 [source_file: expected2]
                                CALL 1 [source_file: expected2]
                                    GETPROP 1 [source_file: expected2]
                                        THIS 1 [source_file: expected2]
                                        STRING baz 1 [source_file: expected2]
        EXPR_RESULT 1 [source_file: expected2]
            CALL 1 [source_file: expected2]
                GETPROP 1 [source_file: expected2]
                    NEW 1 [source_file: expected2]
                        NAME Foo 1 [source_file: expected2]
                    STRING callBaz 1 [source_file: expected2]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: i0] [input_id: InputId: i0]
        VAR 1 [source_file:  [synthetic:1] ]
            NAME JSCompiler_stubMap 1 [source_file:  [synthetic:1] ]
                ARRAYLIT 1 [source_file:  [synthetic:1] ]
        FUNCTION JSCompiler_stubMethod 1 [source_file:  [synthetic:1] ]
            NAME JSCompiler_stubMethod 1 [source_file:  [synthetic:1] ]
            PARAM_LIST 1 [source_file:  [synthetic:1] ]
                NAME JSCompiler_stubMethod_id 1 [source_file:  [synthetic:1] ]
            BLOCK 1 [source_file:  [synthetic:1] ]
                RETURN 1 [source_file:  [synthetic:1] ]
                    FUNCTION  1 [source_file:  [synthetic:1] ]
                        NAME  1 [source_file:  [synthetic:1] ]
                        PARAM_LIST 1 [source_file:  [synthetic:1] ]
                        BLOCK 1 [source_file:  [synthetic:1] ]
                            RETURN 1 [source_file:  [synthetic:1] ]
                                CALL 1 [source_file:  [synthetic:1] ]
                                    GETPROP 1 [source_file:  [synthetic:1] ]
                                        GETELEM 1 [source_file:  [synthetic:1] ]
                                            NAME JSCompiler_stubMap 1 [source_file:  [synthetic:1] ]
                                            NAME JSCompiler_stubMethod_id 1 [source_file:  [synthetic:1] ]
                                        STRING apply 1 [source_file:  [synthetic:1] ]
                                    THIS 1 [source_file:  [synthetic:1] ]
                                    NAME arguments 1 [source_file:  [synthetic:1] ]
        FUNCTION JSCompiler_unstubMethod 1 [source_file:  [synthetic:1] ]
            NAME JSCompiler_unstubMethod 1 [source_file:  [synthetic:1] ]
            PARAM_LIST 1 [source_file:  [synthetic:1] ]
                NAME JSCompiler_unstubMethod_id 1 [source_file:  [synthetic:1] ]
                NAME JSCompiler_unstubMethod_body 1 [source_file:  [synthetic:1] ]
            BLOCK 1 [source_file:  [synthetic:1] ]
                RETURN 1 [source_file:  [synthetic:1] ]
                    ASSIGN 1 [source_file:  [synthetic:1] ]
                        GETELEM 1 [source_file:  [synthetic:1] ]
                            NAME JSCompiler_stubMap 1 [source_file:  [synthetic:1] ]
                            NAME JSCompiler_unstubMethod_id 1 [source_file:  [synthetic:1] ]
                        NAME JSCompiler_unstubMethod_body 1 [source_file:  [synthetic:1] ]
        FUNCTION Foo 1 [source_file: i0]
            NAME Foo 1 [source_file: i0]
            PARAM_LIST 1 [source_file: i0]
            BLOCK 1 [source_file: i0]
        EXPR_RESULT 1 [source_file: i0]
            ASSIGN 1 [source_file: i0]
                GETPROP 1 [source_file: i0]
                    GETPROP 1 [source_file: i0]
                        NAME Foo 1 [source_file: i0]
                        STRING prototype 1 [source_file: i0]
                    STRING baz 1 [source_file: i0]
                CALL 1 [free_call: 1] [source_file: i0]
                    NAME JSCompiler_stubMethod 1 [source_file: i0]
                    NUMBER 0.0 1 [source_file: i0]
    SCRIPT 1 [synthetic: 1] [source_file: i1] [input_id: InputId: i1]
        EXPR_RESULT 1 [source_file: i1]
            ASSIGN 1 [source_file: i1]
                GETPROP 1 [source_file: i1]
                    GETPROP 1 [source_file: i1]
                        NAME Foo 1 [source_file: i1]
                        STRING prototype 1 [source_file: i1]
                    STRING callBaz 1 [source_file: i1]
                CALL 1 [free_call: 1] [source_file: i1]
                    NAME JSCompiler_stubMethod 1 [source_file: i1]
                    NUMBER 1.0 1 [source_file: i1]
    SCRIPT 1 [synthetic: 1] [source_file: i2] [input_id: InputId: i2]
        EXPR_RESULT 1 [source_file: i1]
            ASSIGN 1 [source_file: i1]
                GETPROP 1 [source_file: i1]
                    GETPROP 1 [source_file: i1]
                        NAME Foo 1 [source_file: i1]
                        STRING prototype 1 [source_file: i1]
                    STRING callBaz 1 [source_file: i1]
                CALL 1 [free_call: 1] [source_file: i1]
                    NAME JSCompiler_unstubMethod 1 [source_file: i1]
                    NUMBER 1.0 1 [source_file: i1]
                    FUNCTION  1 [source_file: i1]
                        NAME  1 [source_file: i1]
                        PARAM_LIST 1 [source_file: i1]
                        BLOCK 1 [source_file: i1]
                            EXPR_RESULT 1 [source_file: i1]
                                CALL 1 [source_file: i1]
                                    GETPROP 1 [source_file: i1]
                                        THIS 1 [source_file: i1]
                                        STRING baz 1 [source_file: i1]
        EXPR_RESULT 1 [source_file: i0]
            ASSIGN 1 [source_file: i0]
                GETPROP 1 [source_file: i0]
                    GETPROP 1 [source_file: i0]
                        NAME Foo 1 [source_file: i0]
                        STRING prototype 1 [source_file: i0]
                    STRING baz 1 [source_file: i0]
                CALL 1 [free_call: 1] [source_file: i0]
                    NAME JSCompiler_unstubMethod 1 [source_file: i0]
                    NUMBER 0.0 1 [source_file: i0]
                    FUNCTION  1 [source_file: i0]
                        NAME  1 [source_file: i0]
                        PARAM_LIST 1 [source_file: i0]
                        BLOCK 1 [source_file: i0]
        EXPR_RESULT 1 [source_file: i2]
            CALL 1 [source_file: i2]
                GETPROP 1 [source_file: i2]
                    NEW 1 [source_file: i2]
                        NAME Foo 1 [source_file: i2]
                    STRING callBaz 1 [source_file: i2]


Subtree1: NUMBER 1.0 1 [source_file: expected0]


Subtree2: NUMBER 0.0 1 [source_file: i0]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:928)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:736)
~ testClosureVariableReads3(com.google.javascript.jscomp.CrossModuleMethodMotionTest)
[
Expected: var JSCompiler_stubMap=[];function JSCompiler_stubMethod(JSCompiler_stubMethod_id){return function(){return JSCompiler_stubMap[JSCompiler_stubMethod_id].apply(this,arguments)}}function JSCompiler_unstubMethod(JSCompiler_unstubMethod_id,JSCompiler_unstubMethod_body){return JSCompiler_stubMap[JSCompiler_unstubMethod_id]=JSCompiler_unstubMethod_body}function Foo(){}Foo.prototype.b1=JSCompiler_stubMethod(0);Foo.prototype.b1=JSCompiler_unstubMethod(0,function(){Foo.prototype.b2=JSCompiler_stubMethod(1)});
var y=new Foo;y.b1();Foo.prototype.b2=JSCompiler_unstubMethod(1,function(){var x=1;Foo.prototype.b3=function(){x}});y=new Foo;z.b2();y=new Foo;z.b3()
Result: var JSCompiler_stubMap=[];function JSCompiler_stubMethod(JSCompiler_stubMethod_id){return function(){return JSCompiler_stubMap[JSCompiler_stubMethod_id].apply(this,arguments)}}function JSCompiler_unstubMethod(JSCompiler_unstubMethod_id,JSCompiler_unstubMethod_body){return JSCompiler_stubMap[JSCompiler_unstubMethod_id]=JSCompiler_unstubMethod_body}function Foo(){}Foo.prototype.b1=JSCompiler_stubMethod(1);Foo.prototype.b1=JSCompiler_unstubMethod(1,function(){Foo.prototype.b2=JSCompiler_stubMethod(0)});
var y=new Foo;y.b1();Foo.prototype.b2=JSCompiler_unstubMethod(0,function(){var x=1;Foo.prototype.b3=function(){x}});y=new Foo;z.b2();y=new Foo;z.b3()
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        VAR 1 [source_file: expected0]
            NAME JSCompiler_stubMap 1 [source_file: expected0]
                ARRAYLIT 1 [source_file: expected0]
        FUNCTION JSCompiler_stubMethod 1 [source_file: expected0]
            NAME JSCompiler_stubMethod 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
                NAME JSCompiler_stubMethod_id 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                RETURN 1 [source_file: expected0]
                    FUNCTION  1 [source_file: expected0]
                        NAME  1 [source_file: expected0]
                        PARAM_LIST 1 [source_file: expected0]
                        BLOCK 1 [source_file: expected0]
                            RETURN 1 [source_file: expected0]
                                CALL 1 [source_file: expected0]
                                    GETPROP 1 [source_file: expected0]
                                        GETELEM 1 [source_file: expected0]
                                            NAME JSCompiler_stubMap 1 [source_file: expected0]
                                            NAME JSCompiler_stubMethod_id 1 [source_file: expected0]
                                        STRING apply 1 [source_file: expected0]
                                    THIS 1 [source_file: expected0]
                                    NAME arguments 1 [source_file: expected0]
        FUNCTION JSCompiler_unstubMethod 1 [source_file: expected0]
            NAME JSCompiler_unstubMethod 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
                NAME JSCompiler_unstubMethod_id 1 [source_file: expected0]
                NAME JSCompiler_unstubMethod_body 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                RETURN 1 [source_file: expected0]
                    ASSIGN 1 [source_file: expected0]
                        GETELEM 1 [source_file: expected0]
                            NAME JSCompiler_stubMap 1 [source_file: expected0]
                            NAME JSCompiler_unstubMethod_id 1 [source_file: expected0]
                        NAME JSCompiler_unstubMethod_body 1 [source_file: expected0]
        FUNCTION Foo 1 [source_file: expected0]
            NAME Foo 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            ASSIGN 1 [source_file: expected0]
                GETPROP 1 [source_file: expected0]
                    GETPROP 1 [source_file: expected0]
                        NAME Foo 1 [source_file: expected0]
                        STRING prototype 1 [source_file: expected0]
                    STRING b1 1 [source_file: expected0]
                CALL 1 [free_call: 1] [source_file: expected0]
                    NAME JSCompiler_stubMethod 1 [source_file: expected0]
                    NUMBER 0.0 1 [source_file: expected0]
    SCRIPT 1 [synthetic: 1] [source_file: expected1] [input_id: InputId: expected1]
        EXPR_RESULT 1 [source_file: expected1]
            ASSIGN 1 [source_file: expected1]
                GETPROP 1 [source_file: expected1]
                    GETPROP 1 [source_file: expected1]
                        NAME Foo 1 [source_file: expected1]
                        STRING prototype 1 [source_file: expected1]
                    STRING b1 1 [source_file: expected1]
                CALL 1 [free_call: 1] [source_file: expected1]
                    NAME JSCompiler_unstubMethod 1 [source_file: expected1]
                    NUMBER 0.0 1 [source_file: expected1]
                    FUNCTION  1 [source_file: expected1]
                        NAME  1 [source_file: expected1]
                        PARAM_LIST 1 [source_file: expected1]
                        BLOCK 1 [source_file: expected1]
                            EXPR_RESULT 1 [source_file: expected1]
                                ASSIGN 1 [source_file: expected1]
                                    GETPROP 1 [source_file: expected1]
                                        GETPROP 1 [source_file: expected1]
                                            NAME Foo 1 [source_file: expected1]
                                            STRING prototype 1 [source_file: expected1]
                                        STRING b2 1 [source_file: expected1]
                                    CALL 1 [free_call: 1] [source_file: expected1]
                                        NAME JSCompiler_stubMethod 1 [source_file: expected1]
                                        NUMBER 1.0 1 [source_file: expected1]
        VAR 1 [source_file: expected1]
            NAME y 1 [source_file: expected1]
                NEW 1 [source_file: expected1]
                    NAME Foo 1 [source_file: expected1]
        EXPR_RESULT 1 [source_file: expected1]
            CALL 1 [source_file: expected1]
                GETPROP 1 [source_file: expected1]
                    NAME y 1 [source_file: expected1]
                    STRING b1 1 [source_file: expected1]
    SCRIPT 1 [synthetic: 1] [source_file: expected2] [input_id: InputId: expected2]
        EXPR_RESULT 1 [source_file: expected2]
            ASSIGN 1 [source_file: expected2]
                GETPROP 1 [source_file: expected2]
                    GETPROP 1 [source_file: expected2]
                        NAME Foo 1 [source_file: expected2]
                        STRING prototype 1 [source_file: expected2]
                    STRING b2 1 [source_file: expected2]
                CALL 1 [free_call: 1] [source_file: expected2]
                    NAME JSCompiler_unstubMethod 1 [source_file: expected2]
                    NUMBER 1.0 1 [source_file: expected2]
                    FUNCTION  1 [source_file: expected2]
                        NAME  1 [source_file: expected2]
                        PARAM_LIST 1 [source_file: expected2]
                        BLOCK 1 [source_file: expected2]
                            VAR 1 [source_file: expected2]
                                NAME x 1 [source_file: expected2]
                                    NUMBER 1.0 1 [source_file: expected2]
                            EXPR_RESULT 1 [source_file: expected2]
                                ASSIGN 1 [source_file: expected2]
                                    GETPROP 1 [source_file: expected2]
                                        GETPROP 1 [source_file: expected2]
                                            NAME Foo 1 [source_file: expected2]
                                            STRING prototype 1 [source_file: expected2]
                                        STRING b3 1 [source_file: expected2]
                                    FUNCTION  1 [source_file: expected2]
                                        NAME  1 [source_file: expected2]
                                        PARAM_LIST 1 [source_file: expected2]
                                        BLOCK 1 [source_file: expected2]
                                            EXPR_RESULT 1 [source_file: expected2]
                                                NAME x 1 [source_file: expected2]
        EXPR_RESULT 1 [source_file: expected2]
            ASSIGN 1 [source_file: expected2]
                NAME y 1 [source_file: expected2]
                NEW 1 [source_file: expected2]
                    NAME Foo 1 [source_file: expected2]
        EXPR_RESULT 1 [source_file: expected2]
            CALL 1 [source_file: expected2]
                GETPROP 1 [source_file: expected2]
                    NAME z 1 [source_file: expected2]
                    STRING b2 1 [source_file: expected2]
    SCRIPT 1 [synthetic: 1] [source_file: expected3] [input_id: InputId: expected3]
        EXPR_RESULT 1 [source_file: expected3]
            ASSIGN 1 [source_file: expected3]
                NAME y 1 [source_file: expected3]
                NEW 1 [source_file: expected3]
                    NAME Foo 1 [source_file: expected3]
        EXPR_RESULT 1 [source_file: expected3]
            CALL 1 [source_file: expected3]
                GETPROP 1 [source_file: expected3]
                    NAME z 1 [source_file: expected3]
                    STRING b3 1 [source_file: expected3]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: i0] [input_id: InputId: i0]
        VAR 1 [source_file:  [synthetic:1] ]
            NAME JSCompiler_stubMap 1 [source_file:  [synthetic:1] ]
                ARRAYLIT 1 [source_file:  [synthetic:1] ]
        FUNCTION JSCompiler_stubMethod 1 [source_file:  [synthetic:1] ]
            NAME JSCompiler_stubMethod 1 [source_file:  [synthetic:1] ]
            PARAM_LIST 1 [source_file:  [synthetic:1] ]
                NAME JSCompiler_stubMethod_id 1 [source_file:  [synthetic:1] ]
            BLOCK 1 [source_file:  [synthetic:1] ]
                RETURN 1 [source_file:  [synthetic:1] ]
                    FUNCTION  1 [source_file:  [synthetic:1] ]
                        NAME  1 [source_file:  [synthetic:1] ]
                        PARAM_LIST 1 [source_file:  [synthetic:1] ]
                        BLOCK 1 [source_file:  [synthetic:1] ]
                            RETURN 1 [source_file:  [synthetic:1] ]
                                CALL 1 [source_file:  [synthetic:1] ]
                                    GETPROP 1 [source_file:  [synthetic:1] ]
                                        GETELEM 1 [source_file:  [synthetic:1] ]
                                            NAME JSCompiler_stubMap 1 [source_file:  [synthetic:1] ]
                                            NAME JSCompiler_stubMethod_id 1 [source_file:  [synthetic:1] ]
                                        STRING apply 1 [source_file:  [synthetic:1] ]
                                    THIS 1 [source_file:  [synthetic:1] ]
                                    NAME arguments 1 [source_file:  [synthetic:1] ]
        FUNCTION JSCompiler_unstubMethod 1 [source_file:  [synthetic:1] ]
            NAME JSCompiler_unstubMethod 1 [source_file:  [synthetic:1] ]
            PARAM_LIST 1 [source_file:  [synthetic:1] ]
                NAME JSCompiler_unstubMethod_id 1 [source_file:  [synthetic:1] ]
                NAME JSCompiler_unstubMethod_body 1 [source_file:  [synthetic:1] ]
            BLOCK 1 [source_file:  [synthetic:1] ]
                RETURN 1 [source_file:  [synthetic:1] ]
                    ASSIGN 1 [source_file:  [synthetic:1] ]
                        GETELEM 1 [source_file:  [synthetic:1] ]
                            NAME JSCompiler_stubMap 1 [source_file:  [synthetic:1] ]
                            NAME JSCompiler_unstubMethod_id 1 [source_file:  [synthetic:1] ]
                        NAME JSCompiler_unstubMethod_body 1 [source_file:  [synthetic:1] ]
        FUNCTION Foo 1 [source_file: i0]
            NAME Foo 1 [source_file: i0]
            PARAM_LIST 1 [source_file: i0]
            BLOCK 1 [source_file: i0]
        EXPR_RESULT 1 [source_file: i0]
            ASSIGN 1 [source_file: i0]
                GETPROP 1 [source_file: i0]
                    GETPROP 1 [source_file: i0]
                        NAME Foo 1 [source_file: i0]
                        STRING prototype 1 [source_file: i0]
                    STRING b1 1 [source_file: i0]
                CALL 1 [free_call: 1] [source_file: i0]
                    NAME JSCompiler_stubMethod 1 [source_file: i0]
                    NUMBER 1.0 1 [source_file: i0]
    SCRIPT 1 [synthetic: 1] [source_file: i1] [input_id: InputId: i1]
        EXPR_RESULT 1 [source_file: i0]
            ASSIGN 1 [source_file: i0]
                GETPROP 1 [source_file: i0]
                    GETPROP 1 [source_file: i0]
                        NAME Foo 1 [source_file: i0]
                        STRING prototype 1 [source_file: i0]
                    STRING b1 1 [source_file: i0]
                CALL 1 [free_call: 1] [source_file: i0]
                    NAME JSCompiler_unstubMethod 1 [source_file: i0]
                    NUMBER 1.0 1 [source_file: i0]
                    FUNCTION  1 [source_file: i0]
                        NAME  1 [source_file: i0]
                        PARAM_LIST 1 [source_file: i0]
                        BLOCK 1 [source_file: i0]
                            EXPR_RESULT 1 [source_file: i0]
                                ASSIGN 1 [source_file: i0]
                                    GETPROP 1 [source_file: i0]
                                        GETPROP 1 [source_file: i0]
                                            NAME Foo 1 [source_file: i0]
                                            STRING prototype 1 [source_file: i0]
                                        STRING b2 1 [source_file: i0]
                                    CALL 1 [free_call: 1] [source_file: i0]
                                        NAME JSCompiler_stubMethod 1 [source_file: i0]
                                        NUMBER 0.0 1 [source_file: i0]
        VAR 1 [source_file: i1]
            NAME y 1 [source_file: i1]
                NEW 1 [source_file: i1]
                    NAME Foo 1 [source_file: i1]
        EXPR_RESULT 1 [source_file: i1]
            CALL 1 [source_file: i1]
                GETPROP 1 [source_file: i1]
                    NAME y 1 [source_file: i1]
                    STRING b1 1 [source_file: i1]
    SCRIPT 1 [synthetic: 1] [source_file: i2] [input_id: InputId: i2]
        EXPR_RESULT 1 [source_file: i0]
            ASSIGN 1 [source_file: i0]
                GETPROP 1 [source_file: i0]
                    GETPROP 1 [source_file: i0]
                        NAME Foo 1 [source_file: i0]
                        STRING prototype 1 [source_file: i0]
                    STRING b2 1 [source_file: i0]
                CALL 1 [free_call: 1] [source_file: i0]
                    NAME JSCompiler_unstubMethod 1 [source_file: i0]
                    NUMBER 0.0 1 [source_file: i0]
                    FUNCTION  1 [source_file: i0]
                        NAME  1 [source_file: i0]
                        PARAM_LIST 1 [source_file: i0]
                        BLOCK 1 [source_file: i0]
                            VAR 1 [source_file: i0]
                                NAME x 1 [source_file: i0]
                                    NUMBER 1.0 1 [source_file: i0]
                            EXPR_RESULT 1 [source_file: i0]
                                ASSIGN 1 [source_file: i0]
                                    GETPROP 1 [source_file: i0]
                                        GETPROP 1 [source_file: i0]
                                            NAME Foo 1 [source_file: i0]
                                            STRING prototype 1 [source_file: i0]
                                        STRING b3 1 [source_file: i0]
                                    FUNCTION  1 [source_file: i0]
                                        NAME  1 [source_file: i0]
                                        PARAM_LIST 1 [source_file: i0]
                                        BLOCK 1 [source_file: i0]
                                            EXPR_RESULT 1 [source_file: i0]
                                                NAME x 1 [source_file: i0]
        EXPR_RESULT 1 [source_file: i2]
            ASSIGN 1 [source_file: i2]
                NAME y 1 [source_file: i2]
                NEW 1 [source_file: i2]
                    NAME Foo 1 [source_file: i2]
        EXPR_RESULT 1 [source_file: i2]
            CALL 1 [source_file: i2]
                GETPROP 1 [source_file: i2]
                    NAME z 1 [source_file: i2]
                    STRING b2 1 [source_file: i2]
    SCRIPT 1 [synthetic: 1] [source_file: i3] [input_id: InputId: i3]
        EXPR_RESULT 1 [source_file: i3]
            ASSIGN 1 [source_file: i3]
                NAME y 1 [source_file: i3]
                NEW 1 [source_file: i3]
                    NAME Foo 1 [source_file: i3]
        EXPR_RESULT 1 [source_file: i3]
            CALL 1 [source_file: i3]
                GETPROP 1 [source_file: i3]
                    NAME z 1 [source_file: i3]
                    STRING b3 1 [source_file: i3]


Subtree1: NUMBER 0.0 1 [source_file: expected0]


Subtree2: NUMBER 1.0 1 [source_file: i0]
]
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_stubMap=[];function JSCompiler_stubMethod(JSCompiler_stubMethod_id){return function(){return JSCompiler_stubMap[JSCompiler_stubMethod_id].apply(this,arguments)}}function JSCompiler_unstubMethod(JSCompiler_unstubMethod_id,JSCompiler_unstubMethod_body){return JSCompiler_stubMap[JSCompiler_unstubMethod_id]=JSCompiler_unstubMethod_body}function Foo(){}Foo.prototype.b1=JSCompiler_stubMethod(0);Foo.prototype.b1=JSCompiler_unstubMethod(0,function(){Foo.prototype.b2=JSCompiler_stubMethod(1)});
var y=new Foo;y.b1();Foo.prototype.b2=JSCompiler_unstubMethod(1,function(){var x=1;Foo.prototype.b3=function(){x}});y=new Foo;z.b2();y=new Foo;z.b3()
Result: var JSCompiler_stubMap=[];function JSCompiler_stubMethod(JSCompiler_stubMethod_id){return function(){return JSCompiler_stubMap[JSCompiler_stubMethod_id].apply(this,arguments)}}function JSCompiler_unstubMethod(JSCompiler_unstubMethod_id,JSCompiler_unstubMethod_body){return JSCompiler_stubMap[JSCompiler_unstubMethod_id]=JSCompiler_unstubMethod_body}function Foo(){}Foo.prototype.b1=JSCompiler_stubMethod(1);Foo.prototype.b1=JSCompiler_unstubMethod(1,function(){Foo.prototype.b2=JSCompiler_stubMethod(0)});
var y=new Foo;y.b1();Foo.prototype.b2=JSCompiler_unstubMethod(0,function(){var x=1;Foo.prototype.b3=function(){x}});y=new Foo;z.b2();y=new Foo;z.b3()
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        VAR 1 [source_file: expected0]
            NAME JSCompiler_stubMap 1 [source_file: expected0]
                ARRAYLIT 1 [source_file: expected0]
        FUNCTION JSCompiler_stubMethod 1 [source_file: expected0]
            NAME JSCompiler_stubMethod 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
                NAME JSCompiler_stubMethod_id 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                RETURN 1 [source_file: expected0]
                    FUNCTION  1 [source_file: expected0]
                        NAME  1 [source_file: expected0]
                        PARAM_LIST 1 [source_file: expected0]
                        BLOCK 1 [source_file: expected0]
                            RETURN 1 [source_file: expected0]
                                CALL 1 [source_file: expected0]
                                    GETPROP 1 [source_file: expected0]
                                        GETELEM 1 [source_file: expected0]
                                            NAME JSCompiler_stubMap 1 [source_file: expected0]
                                            NAME JSCompiler_stubMethod_id 1 [source_file: expected0]
                                        STRING apply 1 [source_file: expected0]
                                    THIS 1 [source_file: expected0]
                                    NAME arguments 1 [source_file: expected0]
        FUNCTION JSCompiler_unstubMethod 1 [source_file: expected0]
            NAME JSCompiler_unstubMethod 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
                NAME JSCompiler_unstubMethod_id 1 [source_file: expected0]
                NAME JSCompiler_unstubMethod_body 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                RETURN 1 [source_file: expected0]
                    ASSIGN 1 [source_file: expected0]
                        GETELEM 1 [source_file: expected0]
                            NAME JSCompiler_stubMap 1 [source_file: expected0]
                            NAME JSCompiler_unstubMethod_id 1 [source_file: expected0]
                        NAME JSCompiler_unstubMethod_body 1 [source_file: expected0]
        FUNCTION Foo 1 [source_file: expected0]
            NAME Foo 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            ASSIGN 1 [source_file: expected0]
                GETPROP 1 [source_file: expected0]
                    GETPROP 1 [source_file: expected0]
                        NAME Foo 1 [source_file: expected0]
                        STRING prototype 1 [source_file: expected0]
                    STRING b1 1 [source_file: expected0]
                CALL 1 [free_call: 1] [source_file: expected0]
                    NAME JSCompiler_stubMethod 1 [source_file: expected0]
                    NUMBER 0.0 1 [source_file: expected0]
    SCRIPT 1 [synthetic: 1] [source_file: expected1] [input_id: InputId: expected1]
        EXPR_RESULT 1 [source_file: expected1]
            ASSIGN 1 [source_file: expected1]
                GETPROP 1 [source_file: expected1]
                    GETPROP 1 [source_file: expected1]
                        NAME Foo 1 [source_file: expected1]
                        STRING prototype 1 [source_file: expected1]
                    STRING b1 1 [source_file: expected1]
                CALL 1 [free_call: 1] [source_file: expected1]
                    NAME JSCompiler_unstubMethod 1 [source_file: expected1]
                    NUMBER 0.0 1 [source_file: expected1]
                    FUNCTION  1 [source_file: expected1]
                        NAME  1 [source_file: expected1]
                        PARAM_LIST 1 [source_file: expected1]
                        BLOCK 1 [source_file: expected1]
                            EXPR_RESULT 1 [source_file: expected1]
                                ASSIGN 1 [source_file: expected1]
                                    GETPROP 1 [source_file: expected1]
                                        GETPROP 1 [source_file: expected1]
                                            NAME Foo 1 [source_file: expected1]
                                            STRING prototype 1 [source_file: expected1]
                                        STRING b2 1 [source_file: expected1]
                                    CALL 1 [free_call: 1] [source_file: expected1]
                                        NAME JSCompiler_stubMethod 1 [source_file: expected1]
                                        NUMBER 1.0 1 [source_file: expected1]
        VAR 1 [source_file: expected1]
            NAME y 1 [source_file: expected1]
                NEW 1 [source_file: expected1]
                    NAME Foo 1 [source_file: expected1]
        EXPR_RESULT 1 [source_file: expected1]
            CALL 1 [source_file: expected1]
                GETPROP 1 [source_file: expected1]
                    NAME y 1 [source_file: expected1]
                    STRING b1 1 [source_file: expected1]
    SCRIPT 1 [synthetic: 1] [source_file: expected2] [input_id: InputId: expected2]
        EXPR_RESULT 1 [source_file: expected2]
            ASSIGN 1 [source_file: expected2]
                GETPROP 1 [source_file: expected2]
                    GETPROP 1 [source_file: expected2]
                        NAME Foo 1 [source_file: expected2]
                        STRING prototype 1 [source_file: expected2]
                    STRING b2 1 [source_file: expected2]
                CALL 1 [free_call: 1] [source_file: expected2]
                    NAME JSCompiler_unstubMethod 1 [source_file: expected2]
                    NUMBER 1.0 1 [source_file: expected2]
                    FUNCTION  1 [source_file: expected2]
                        NAME  1 [source_file: expected2]
                        PARAM_LIST 1 [source_file: expected2]
                        BLOCK 1 [source_file: expected2]
                            VAR 1 [source_file: expected2]
                                NAME x 1 [source_file: expected2]
                                    NUMBER 1.0 1 [source_file: expected2]
                            EXPR_RESULT 1 [source_file: expected2]
                                ASSIGN 1 [source_file: expected2]
                                    GETPROP 1 [source_file: expected2]
                                        GETPROP 1 [source_file: expected2]
                                            NAME Foo 1 [source_file: expected2]
                                            STRING prototype 1 [source_file: expected2]
                                        STRING b3 1 [source_file: expected2]
                                    FUNCTION  1 [source_file: expected2]
                                        NAME  1 [source_file: expected2]
                                        PARAM_LIST 1 [source_file: expected2]
                                        BLOCK 1 [source_file: expected2]
                                            EXPR_RESULT 1 [source_file: expected2]
                                                NAME x 1 [source_file: expected2]
        EXPR_RESULT 1 [source_file: expected2]
            ASSIGN 1 [source_file: expected2]
                NAME y 1 [source_file: expected2]
                NEW 1 [source_file: expected2]
                    NAME Foo 1 [source_file: expected2]
        EXPR_RESULT 1 [source_file: expected2]
            CALL 1 [source_file: expected2]
                GETPROP 1 [source_file: expected2]
                    NAME z 1 [source_file: expected2]
                    STRING b2 1 [source_file: expected2]
    SCRIPT 1 [synthetic: 1] [source_file: expected3] [input_id: InputId: expected3]
        EXPR_RESULT 1 [source_file: expected3]
            ASSIGN 1 [source_file: expected3]
                NAME y 1 [source_file: expected3]
                NEW 1 [source_file: expected3]
                    NAME Foo 1 [source_file: expected3]
        EXPR_RESULT 1 [source_file: expected3]
            CALL 1 [source_file: expected3]
                GETPROP 1 [source_file: expected3]
                    NAME z 1 [source_file: expected3]
                    STRING b3 1 [source_file: expected3]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: i0] [input_id: InputId: i0]
        VAR 1 [source_file:  [synthetic:1] ]
            NAME JSCompiler_stubMap 1 [source_file:  [synthetic:1] ]
                ARRAYLIT 1 [source_file:  [synthetic:1] ]
        FUNCTION JSCompiler_stubMethod 1 [source_file:  [synthetic:1] ]
            NAME JSCompiler_stubMethod 1 [source_file:  [synthetic:1] ]
            PARAM_LIST 1 [source_file:  [synthetic:1] ]
                NAME JSCompiler_stubMethod_id 1 [source_file:  [synthetic:1] ]
            BLOCK 1 [source_file:  [synthetic:1] ]
                RETURN 1 [source_file:  [synthetic:1] ]
                    FUNCTION  1 [source_file:  [synthetic:1] ]
                        NAME  1 [source_file:  [synthetic:1] ]
                        PARAM_LIST 1 [source_file:  [synthetic:1] ]
                        BLOCK 1 [source_file:  [synthetic:1] ]
                            RETURN 1 [source_file:  [synthetic:1] ]
                                CALL 1 [source_file:  [synthetic:1] ]
                                    GETPROP 1 [source_file:  [synthetic:1] ]
                                        GETELEM 1 [source_file:  [synthetic:1] ]
                                            NAME JSCompiler_stubMap 1 [source_file:  [synthetic:1] ]
                                            NAME JSCompiler_stubMethod_id 1 [source_file:  [synthetic:1] ]
                                        STRING apply 1 [source_file:  [synthetic:1] ]
                                    THIS 1 [source_file:  [synthetic:1] ]
                                    NAME arguments 1 [source_file:  [synthetic:1] ]
        FUNCTION JSCompiler_unstubMethod 1 [source_file:  [synthetic:1] ]
            NAME JSCompiler_unstubMethod 1 [source_file:  [synthetic:1] ]
            PARAM_LIST 1 [source_file:  [synthetic:1] ]
                NAME JSCompiler_unstubMethod_id 1 [source_file:  [synthetic:1] ]
                NAME JSCompiler_unstubMethod_body 1 [source_file:  [synthetic:1] ]
            BLOCK 1 [source_file:  [synthetic:1] ]
                RETURN 1 [source_file:  [synthetic:1] ]
                    ASSIGN 1 [source_file:  [synthetic:1] ]
                        GETELEM 1 [source_file:  [synthetic:1] ]
                            NAME JSCompiler_stubMap 1 [source_file:  [synthetic:1] ]
                            NAME JSCompiler_unstubMethod_id 1 [source_file:  [synthetic:1] ]
                        NAME JSCompiler_unstubMethod_body 1 [source_file:  [synthetic:1] ]
        FUNCTION Foo 1 [source_file: i0]
            NAME Foo 1 [source_file: i0]
            PARAM_LIST 1 [source_file: i0]
            BLOCK 1 [source_file: i0]
        EXPR_RESULT 1 [source_file: i0]
            ASSIGN 1 [source_file: i0]
                GETPROP 1 [source_file: i0]
                    GETPROP 1 [source_file: i0]
                        NAME Foo 1 [source_file: i0]
                        STRING prototype 1 [source_file: i0]
                    STRING b1 1 [source_file: i0]
                CALL 1 [free_call: 1] [source_file: i0]
                    NAME JSCompiler_stubMethod 1 [source_file: i0]
                    NUMBER 1.0 1 [source_file: i0]
    SCRIPT 1 [synthetic: 1] [source_file: i1] [input_id: InputId: i1]
        EXPR_RESULT 1 [source_file: i0]
            ASSIGN 1 [source_file: i0]
                GETPROP 1 [source_file: i0]
                    GETPROP 1 [source_file: i0]
                        NAME Foo 1 [source_file: i0]
                        STRING prototype 1 [source_file: i0]
                    STRING b1 1 [source_file: i0]
                CALL 1 [free_call: 1] [source_file: i0]
                    NAME JSCompiler_unstubMethod 1 [source_file: i0]
                    NUMBER 1.0 1 [source_file: i0]
                    FUNCTION  1 [source_file: i0]
                        NAME  1 [source_file: i0]
                        PARAM_LIST 1 [source_file: i0]
                        BLOCK 1 [source_file: i0]
                            EXPR_RESULT 1 [source_file: i0]
                                ASSIGN 1 [source_file: i0]
                                    GETPROP 1 [source_file: i0]
                                        GETPROP 1 [source_file: i0]
                                            NAME Foo 1 [source_file: i0]
                                            STRING prototype 1 [source_file: i0]
                                        STRING b2 1 [source_file: i0]
                                    CALL 1 [free_call: 1] [source_file: i0]
                                        NAME JSCompiler_stubMethod 1 [source_file: i0]
                                        NUMBER 0.0 1 [source_file: i0]
        VAR 1 [source_file: i1]
            NAME y 1 [source_file: i1]
                NEW 1 [source_file: i1]
                    NAME Foo 1 [source_file: i1]
        EXPR_RESULT 1 [source_file: i1]
            CALL 1 [source_file: i1]
                GETPROP 1 [source_file: i1]
                    NAME y 1 [source_file: i1]
                    STRING b1 1 [source_file: i1]
    SCRIPT 1 [synthetic: 1] [source_file: i2] [input_id: InputId: i2]
        EXPR_RESULT 1 [source_file: i0]
            ASSIGN 1 [source_file: i0]
                GETPROP 1 [source_file: i0]
                    GETPROP 1 [source_file: i0]
                        NAME Foo 1 [source_file: i0]
                        STRING prototype 1 [source_file: i0]
                    STRING b2 1 [source_file: i0]
                CALL 1 [free_call: 1] [source_file: i0]
                    NAME JSCompiler_unstubMethod 1 [source_file: i0]
                    NUMBER 0.0 1 [source_file: i0]
                    FUNCTION  1 [source_file: i0]
                        NAME  1 [source_file: i0]
                        PARAM_LIST 1 [source_file: i0]
                        BLOCK 1 [source_file: i0]
                            VAR 1 [source_file: i0]
                                NAME x 1 [source_file: i0]
                                    NUMBER 1.0 1 [source_file: i0]
                            EXPR_RESULT 1 [source_file: i0]
                                ASSIGN 1 [source_file: i0]
                                    GETPROP 1 [source_file: i0]
                                        GETPROP 1 [source_file: i0]
                                            NAME Foo 1 [source_file: i0]
                                            STRING prototype 1 [source_file: i0]
                                        STRING b3 1 [source_file: i0]
                                    FUNCTION  1 [source_file: i0]
                                        NAME  1 [source_file: i0]
                                        PARAM_LIST 1 [source_file: i0]
                                        BLOCK 1 [source_file: i0]
                                            EXPR_RESULT 1 [source_file: i0]
                                                NAME x 1 [source_file: i0]
        EXPR_RESULT 1 [source_file: i2]
            ASSIGN 1 [source_file: i2]
                NAME y 1 [source_file: i2]
                NEW 1 [source_file: i2]
                    NAME Foo 1 [source_file: i2]
        EXPR_RESULT 1 [source_file: i2]
            CALL 1 [source_file: i2]
                GETPROP 1 [source_file: i2]
                    NAME z 1 [source_file: i2]
                    STRING b2 1 [source_file: i2]
    SCRIPT 1 [synthetic: 1] [source_file: i3] [input_id: InputId: i3]
        EXPR_RESULT 1 [source_file: i3]
            ASSIGN 1 [source_file: i3]
                NAME y 1 [source_file: i3]
                NEW 1 [source_file: i3]
                    NAME Foo 1 [source_file: i3]
        EXPR_RESULT 1 [source_file: i3]
            CALL 1 [source_file: i3]
                GETPROP 1 [source_file: i3]
                    NAME z 1 [source_file: i3]
                    STRING b3 1 [source_file: i3]


Subtree1: NUMBER 0.0 1 [source_file: expected0]


Subtree2: NUMBER 1.0 1 [source_file: i0]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:928)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:736)
~ testTwoMethods(com.google.javascript.jscomp.CrossModuleMethodMotionTest)
[
Expected: var JSCompiler_stubMap=[];function JSCompiler_stubMethod(JSCompiler_stubMethod_id){return function(){return JSCompiler_stubMap[JSCompiler_stubMethod_id].apply(this,arguments)}}function JSCompiler_unstubMethod(JSCompiler_unstubMethod_id,JSCompiler_unstubMethod_body){return JSCompiler_stubMap[JSCompiler_unstubMethod_id]=JSCompiler_unstubMethod_body}function Foo(){}Foo.prototype.baz=JSCompiler_stubMethod(1);Foo.prototype.callBaz=JSCompiler_stubMethod(0);Foo.prototype.baz=JSCompiler_unstubMethod(1,function(){});
Foo.prototype.callBaz=JSCompiler_unstubMethod(0,function(){this.baz()});(new Foo).callBaz()
Result: var JSCompiler_stubMap=[];function JSCompiler_stubMethod(JSCompiler_stubMethod_id){return function(){return JSCompiler_stubMap[JSCompiler_stubMethod_id].apply(this,arguments)}}function JSCompiler_unstubMethod(JSCompiler_unstubMethod_id,JSCompiler_unstubMethod_body){return JSCompiler_stubMap[JSCompiler_unstubMethod_id]=JSCompiler_unstubMethod_body}function Foo(){}Foo.prototype.baz=JSCompiler_stubMethod(0);Foo.prototype.callBaz=JSCompiler_stubMethod(1);
Foo.prototype.callBaz=JSCompiler_unstubMethod(1,function(){this.baz()});Foo.prototype.baz=JSCompiler_unstubMethod(0,function(){});(new Foo).callBaz()
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        VAR 1 [source_file: expected0]
            NAME JSCompiler_stubMap 1 [source_file: expected0]
                ARRAYLIT 1 [source_file: expected0]
        FUNCTION JSCompiler_stubMethod 1 [source_file: expected0]
            NAME JSCompiler_stubMethod 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
                NAME JSCompiler_stubMethod_id 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                RETURN 1 [source_file: expected0]
                    FUNCTION  1 [source_file: expected0]
                        NAME  1 [source_file: expected0]
                        PARAM_LIST 1 [source_file: expected0]
                        BLOCK 1 [source_file: expected0]
                            RETURN 1 [source_file: expected0]
                                CALL 1 [source_file: expected0]
                                    GETPROP 1 [source_file: expected0]
                                        GETELEM 1 [source_file: expected0]
                                            NAME JSCompiler_stubMap 1 [source_file: expected0]
                                            NAME JSCompiler_stubMethod_id 1 [source_file: expected0]
                                        STRING apply 1 [source_file: expected0]
                                    THIS 1 [source_file: expected0]
                                    NAME arguments 1 [source_file: expected0]
        FUNCTION JSCompiler_unstubMethod 1 [source_file: expected0]
            NAME JSCompiler_unstubMethod 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
                NAME JSCompiler_unstubMethod_id 1 [source_file: expected0]
                NAME JSCompiler_unstubMethod_body 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                RETURN 1 [source_file: expected0]
                    ASSIGN 1 [source_file: expected0]
                        GETELEM 1 [source_file: expected0]
                            NAME JSCompiler_stubMap 1 [source_file: expected0]
                            NAME JSCompiler_unstubMethod_id 1 [source_file: expected0]
                        NAME JSCompiler_unstubMethod_body 1 [source_file: expected0]
        FUNCTION Foo 1 [source_file: expected0]
            NAME Foo 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            ASSIGN 1 [source_file: expected0]
                GETPROP 1 [source_file: expected0]
                    GETPROP 1 [source_file: expected0]
                        NAME Foo 1 [source_file: expected0]
                        STRING prototype 1 [source_file: expected0]
                    STRING baz 1 [source_file: expected0]
                CALL 1 [free_call: 1] [source_file: expected0]
                    NAME JSCompiler_stubMethod 1 [source_file: expected0]
                    NUMBER 1.0 1 [source_file: expected0]
    SCRIPT 1 [synthetic: 1] [source_file: expected1] [input_id: InputId: expected1]
        EXPR_RESULT 1 [source_file: expected1]
            ASSIGN 1 [source_file: expected1]
                GETPROP 1 [source_file: expected1]
                    GETPROP 1 [source_file: expected1]
                        NAME Foo 1 [source_file: expected1]
                        STRING prototype 1 [source_file: expected1]
                    STRING callBaz 1 [source_file: expected1]
                CALL 1 [free_call: 1] [source_file: expected1]
                    NAME JSCompiler_stubMethod 1 [source_file: expected1]
                    NUMBER 0.0 1 [source_file: expected1]
    SCRIPT 1 [synthetic: 1] [source_file: expected2] [input_id: InputId: expected2]
        EXPR_RESULT 1 [source_file: expected2]
            ASSIGN 1 [source_file: expected2]
                GETPROP 1 [source_file: expected2]
                    GETPROP 1 [source_file: expected2]
                        NAME Foo 1 [source_file: expected2]
                        STRING prototype 1 [source_file: expected2]
                    STRING baz 1 [source_file: expected2]
                CALL 1 [free_call: 1] [source_file: expected2]
                    NAME JSCompiler_unstubMethod 1 [source_file: expected2]
                    NUMBER 1.0 1 [source_file: expected2]
                    FUNCTION  1 [source_file: expected2]
                        NAME  1 [source_file: expected2]
                        PARAM_LIST 1 [source_file: expected2]
                        BLOCK 1 [source_file: expected2]
        EXPR_RESULT 1 [source_file: expected2]
            ASSIGN 1 [source_file: expected2]
                GETPROP 1 [source_file: expected2]
                    GETPROP 1 [source_file: expected2]
                        NAME Foo 1 [source_file: expected2]
                        STRING prototype 1 [source_file: expected2]
                    STRING callBaz 1 [source_file: expected2]
                CALL 1 [free_call: 1] [source_file: expected2]
                    NAME JSCompiler_unstubMethod 1 [source_file: expected2]
                    NUMBER 0.0 1 [source_file: expected2]
                    FUNCTION  1 [source_file: expected2]
                        NAME  1 [source_file: expected2]
                        PARAM_LIST 1 [source_file: expected2]
                        BLOCK 1 [source_file: expected2]
                            EXPR_RESULT 1 [source_file: expected2]
                                CALL 1 [source_file: expected2]
                                    GETPROP 1 [source_file: expected2]
                                        THIS 1 [source_file: expected2]
                                        STRING baz 1 [source_file: expected2]
        EXPR_RESULT 1 [source_file: expected2]
            CALL 1 [source_file: expected2]
                GETPROP 1 [source_file: expected2]
                    NEW 1 [source_file: expected2]
                        NAME Foo 1 [source_file: expected2]
                    STRING callBaz 1 [source_file: expected2]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: i0] [input_id: InputId: i0]
        VAR 1 [source_file:  [synthetic:1] ]
            NAME JSCompiler_stubMap 1 [source_file:  [synthetic:1] ]
                ARRAYLIT 1 [source_file:  [synthetic:1] ]
        FUNCTION JSCompiler_stubMethod 1 [source_file:  [synthetic:1] ]
            NAME JSCompiler_stubMethod 1 [source_file:  [synthetic:1] ]
            PARAM_LIST 1 [source_file:  [synthetic:1] ]
                NAME JSCompiler_stubMethod_id 1 [source_file:  [synthetic:1] ]
            BLOCK 1 [source_file:  [synthetic:1] ]
                RETURN 1 [source_file:  [synthetic:1] ]
                    FUNCTION  1 [source_file:  [synthetic:1] ]
                        NAME  1 [source_file:  [synthetic:1] ]
                        PARAM_LIST 1 [source_file:  [synthetic:1] ]
                        BLOCK 1 [source_file:  [synthetic:1] ]
                            RETURN 1 [source_file:  [synthetic:1] ]
                                CALL 1 [source_file:  [synthetic:1] ]
                                    GETPROP 1 [source_file:  [synthetic:1] ]
                                        GETELEM 1 [source_file:  [synthetic:1] ]
                                            NAME JSCompiler_stubMap 1 [source_file:  [synthetic:1] ]
                                            NAME JSCompiler_stubMethod_id 1 [source_file:  [synthetic:1] ]
                                        STRING apply 1 [source_file:  [synthetic:1] ]
                                    THIS 1 [source_file:  [synthetic:1] ]
                                    NAME arguments 1 [source_file:  [synthetic:1] ]
        FUNCTION JSCompiler_unstubMethod 1 [source_file:  [synthetic:1] ]
            NAME JSCompiler_unstubMethod 1 [source_file:  [synthetic:1] ]
            PARAM_LIST 1 [source_file:  [synthetic:1] ]
                NAME JSCompiler_unstubMethod_id 1 [source_file:  [synthetic:1] ]
                NAME JSCompiler_unstubMethod_body 1 [source_file:  [synthetic:1] ]
            BLOCK 1 [source_file:  [synthetic:1] ]
                RETURN 1 [source_file:  [synthetic:1] ]
                    ASSIGN 1 [source_file:  [synthetic:1] ]
                        GETELEM 1 [source_file:  [synthetic:1] ]
                            NAME JSCompiler_stubMap 1 [source_file:  [synthetic:1] ]
                            NAME JSCompiler_unstubMethod_id 1 [source_file:  [synthetic:1] ]
                        NAME JSCompiler_unstubMethod_body 1 [source_file:  [synthetic:1] ]
        FUNCTION Foo 1 [source_file: i0]
            NAME Foo 1 [source_file: i0]
            PARAM_LIST 1 [source_file: i0]
            BLOCK 1 [source_file: i0]
        EXPR_RESULT 1 [source_file: i0]
            ASSIGN 1 [source_file: i0]
                GETPROP 1 [source_file: i0]
                    GETPROP 1 [source_file: i0]
                        NAME Foo 1 [source_file: i0]
                        STRING prototype 1 [source_file: i0]
                    STRING baz 1 [source_file: i0]
                CALL 1 [free_call: 1] [source_file: i0]
                    NAME JSCompiler_stubMethod 1 [source_file: i0]
                    NUMBER 0.0 1 [source_file: i0]
    SCRIPT 1 [synthetic: 1] [source_file: i1] [input_id: InputId: i1]
        EXPR_RESULT 1 [source_file: i1]
            ASSIGN 1 [source_file: i1]
                GETPROP 1 [source_file: i1]
                    GETPROP 1 [source_file: i1]
                        NAME Foo 1 [source_file: i1]
                        STRING prototype 1 [source_file: i1]
                    STRING callBaz 1 [source_file: i1]
                CALL 1 [free_call: 1] [source_file: i1]
                    NAME JSCompiler_stubMethod 1 [source_file: i1]
                    NUMBER 1.0 1 [source_file: i1]
    SCRIPT 1 [synthetic: 1] [source_file: i2] [input_id: InputId: i2]
        EXPR_RESULT 1 [source_file: i1]
            ASSIGN 1 [source_file: i1]
                GETPROP 1 [source_file: i1]
                    GETPROP 1 [source_file: i1]
                        NAME Foo 1 [source_file: i1]
                        STRING prototype 1 [source_file: i1]
                    STRING callBaz 1 [source_file: i1]
                CALL 1 [free_call: 1] [source_file: i1]
                    NAME JSCompiler_unstubMethod 1 [source_file: i1]
                    NUMBER 1.0 1 [source_file: i1]
                    FUNCTION  1 [source_file: i1]
                        NAME  1 [source_file: i1]
                        PARAM_LIST 1 [source_file: i1]
                        BLOCK 1 [source_file: i1]
                            EXPR_RESULT 1 [source_file: i1]
                                CALL 1 [source_file: i1]
                                    GETPROP 1 [source_file: i1]
                                        THIS 1 [source_file: i1]
                                        STRING baz 1 [source_file: i1]
        EXPR_RESULT 1 [source_file: i0]
            ASSIGN 1 [source_file: i0]
                GETPROP 1 [source_file: i0]
                    GETPROP 1 [source_file: i0]
                        NAME Foo 1 [source_file: i0]
                        STRING prototype 1 [source_file: i0]
                    STRING baz 1 [source_file: i0]
                CALL 1 [free_call: 1] [source_file: i0]
                    NAME JSCompiler_unstubMethod 1 [source_file: i0]
                    NUMBER 0.0 1 [source_file: i0]
                    FUNCTION  1 [source_file: i0]
                        NAME  1 [source_file: i0]
                        PARAM_LIST 1 [source_file: i0]
                        BLOCK 1 [source_file: i0]
        EXPR_RESULT 1 [source_file: i2]
            CALL 1 [source_file: i2]
                GETPROP 1 [source_file: i2]
                    NEW 1 [source_file: i2]
                        NAME Foo 1 [source_file: i2]
                    STRING callBaz 1 [source_file: i2]


Subtree1: NUMBER 1.0 1 [source_file: expected0]


Subtree2: NUMBER 0.0 1 [source_file: i0]
]
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_stubMap=[];function JSCompiler_stubMethod(JSCompiler_stubMethod_id){return function(){return JSCompiler_stubMap[JSCompiler_stubMethod_id].apply(this,arguments)}}function JSCompiler_unstubMethod(JSCompiler_unstubMethod_id,JSCompiler_unstubMethod_body){return JSCompiler_stubMap[JSCompiler_unstubMethod_id]=JSCompiler_unstubMethod_body}function Foo(){}Foo.prototype.baz=JSCompiler_stubMethod(1);Foo.prototype.callBaz=JSCompiler_stubMethod(0);Foo.prototype.baz=JSCompiler_unstubMethod(1,function(){});
Foo.prototype.callBaz=JSCompiler_unstubMethod(0,function(){this.baz()});(new Foo).callBaz()
Result: var JSCompiler_stubMap=[];function JSCompiler_stubMethod(JSCompiler_stubMethod_id){return function(){return JSCompiler_stubMap[JSCompiler_stubMethod_id].apply(this,arguments)}}function JSCompiler_unstubMethod(JSCompiler_unstubMethod_id,JSCompiler_unstubMethod_body){return JSCompiler_stubMap[JSCompiler_unstubMethod_id]=JSCompiler_unstubMethod_body}function Foo(){}Foo.prototype.baz=JSCompiler_stubMethod(0);Foo.prototype.callBaz=JSCompiler_stubMethod(1);
Foo.prototype.callBaz=JSCompiler_unstubMethod(1,function(){this.baz()});Foo.prototype.baz=JSCompiler_unstubMethod(0,function(){});(new Foo).callBaz()
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        VAR 1 [source_file: expected0]
            NAME JSCompiler_stubMap 1 [source_file: expected0]
                ARRAYLIT 1 [source_file: expected0]
        FUNCTION JSCompiler_stubMethod 1 [source_file: expected0]
            NAME JSCompiler_stubMethod 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
                NAME JSCompiler_stubMethod_id 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                RETURN 1 [source_file: expected0]
                    FUNCTION  1 [source_file: expected0]
                        NAME  1 [source_file: expected0]
                        PARAM_LIST 1 [source_file: expected0]
                        BLOCK 1 [source_file: expected0]
                            RETURN 1 [source_file: expected0]
                                CALL 1 [source_file: expected0]
                                    GETPROP 1 [source_file: expected0]
                                        GETELEM 1 [source_file: expected0]
                                            NAME JSCompiler_stubMap 1 [source_file: expected0]
                                            NAME JSCompiler_stubMethod_id 1 [source_file: expected0]
                                        STRING apply 1 [source_file: expected0]
                                    THIS 1 [source_file: expected0]
                                    NAME arguments 1 [source_file: expected0]
        FUNCTION JSCompiler_unstubMethod 1 [source_file: expected0]
            NAME JSCompiler_unstubMethod 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
                NAME JSCompiler_unstubMethod_id 1 [source_file: expected0]
                NAME JSCompiler_unstubMethod_body 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                RETURN 1 [source_file: expected0]
                    ASSIGN 1 [source_file: expected0]
                        GETELEM 1 [source_file: expected0]
                            NAME JSCompiler_stubMap 1 [source_file: expected0]
                            NAME JSCompiler_unstubMethod_id 1 [source_file: expected0]
                        NAME JSCompiler_unstubMethod_body 1 [source_file: expected0]
        FUNCTION Foo 1 [source_file: expected0]
            NAME Foo 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            ASSIGN 1 [source_file: expected0]
                GETPROP 1 [source_file: expected0]
                    GETPROP 1 [source_file: expected0]
                        NAME Foo 1 [source_file: expected0]
                        STRING prototype 1 [source_file: expected0]
                    STRING baz 1 [source_file: expected0]
                CALL 1 [free_call: 1] [source_file: expected0]
                    NAME JSCompiler_stubMethod 1 [source_file: expected0]
                    NUMBER 1.0 1 [source_file: expected0]
    SCRIPT 1 [synthetic: 1] [source_file: expected1] [input_id: InputId: expected1]
        EXPR_RESULT 1 [source_file: expected1]
            ASSIGN 1 [source_file: expected1]
                GETPROP 1 [source_file: expected1]
                    GETPROP 1 [source_file: expected1]
                        NAME Foo 1 [source_file: expected1]
                        STRING prototype 1 [source_file: expected1]
                    STRING callBaz 1 [source_file: expected1]
                CALL 1 [free_call: 1] [source_file: expected1]
                    NAME JSCompiler_stubMethod 1 [source_file: expected1]
                    NUMBER 0.0 1 [source_file: expected1]
    SCRIPT 1 [synthetic: 1] [source_file: expected2] [input_id: InputId: expected2]
        EXPR_RESULT 1 [source_file: expected2]
            ASSIGN 1 [source_file: expected2]
                GETPROP 1 [source_file: expected2]
                    GETPROP 1 [source_file: expected2]
                        NAME Foo 1 [source_file: expected2]
                        STRING prototype 1 [source_file: expected2]
                    STRING baz 1 [source_file: expected2]
                CALL 1 [free_call: 1] [source_file: expected2]
                    NAME JSCompiler_unstubMethod 1 [source_file: expected2]
                    NUMBER 1.0 1 [source_file: expected2]
                    FUNCTION  1 [source_file: expected2]
                        NAME  1 [source_file: expected2]
                        PARAM_LIST 1 [source_file: expected2]
                        BLOCK 1 [source_file: expected2]
        EXPR_RESULT 1 [source_file: expected2]
            ASSIGN 1 [source_file: expected2]
                GETPROP 1 [source_file: expected2]
                    GETPROP 1 [source_file: expected2]
                        NAME Foo 1 [source_file: expected2]
                        STRING prototype 1 [source_file: expected2]
                    STRING callBaz 1 [source_file: expected2]
                CALL 1 [free_call: 1] [source_file: expected2]
                    NAME JSCompiler_unstubMethod 1 [source_file: expected2]
                    NUMBER 0.0 1 [source_file: expected2]
                    FUNCTION  1 [source_file: expected2]
                        NAME  1 [source_file: expected2]
                        PARAM_LIST 1 [source_file: expected2]
                        BLOCK 1 [source_file: expected2]
                            EXPR_RESULT 1 [source_file: expected2]
                                CALL 1 [source_file: expected2]
                                    GETPROP 1 [source_file: expected2]
                                        THIS 1 [source_file: expected2]
                                        STRING baz 1 [source_file: expected2]
        EXPR_RESULT 1 [source_file: expected2]
            CALL 1 [source_file: expected2]
                GETPROP 1 [source_file: expected2]
                    NEW 1 [source_file: expected2]
                        NAME Foo 1 [source_file: expected2]
                    STRING callBaz 1 [source_file: expected2]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: i0] [input_id: InputId: i0]
        VAR 1 [source_file:  [synthetic:1] ]
            NAME JSCompiler_stubMap 1 [source_file:  [synthetic:1] ]
                ARRAYLIT 1 [source_file:  [synthetic:1] ]
        FUNCTION JSCompiler_stubMethod 1 [source_file:  [synthetic:1] ]
            NAME JSCompiler_stubMethod 1 [source_file:  [synthetic:1] ]
            PARAM_LIST 1 [source_file:  [synthetic:1] ]
                NAME JSCompiler_stubMethod_id 1 [source_file:  [synthetic:1] ]
            BLOCK 1 [source_file:  [synthetic:1] ]
                RETURN 1 [source_file:  [synthetic:1] ]
                    FUNCTION  1 [source_file:  [synthetic:1] ]
                        NAME  1 [source_file:  [synthetic:1] ]
                        PARAM_LIST 1 [source_file:  [synthetic:1] ]
                        BLOCK 1 [source_file:  [synthetic:1] ]
                            RETURN 1 [source_file:  [synthetic:1] ]
                                CALL 1 [source_file:  [synthetic:1] ]
                                    GETPROP 1 [source_file:  [synthetic:1] ]
                                        GETELEM 1 [source_file:  [synthetic:1] ]
                                            NAME JSCompiler_stubMap 1 [source_file:  [synthetic:1] ]
                                            NAME JSCompiler_stubMethod_id 1 [source_file:  [synthetic:1] ]
                                        STRING apply 1 [source_file:  [synthetic:1] ]
                                    THIS 1 [source_file:  [synthetic:1] ]
                                    NAME arguments 1 [source_file:  [synthetic:1] ]
        FUNCTION JSCompiler_unstubMethod 1 [source_file:  [synthetic:1] ]
            NAME JSCompiler_unstubMethod 1 [source_file:  [synthetic:1] ]
            PARAM_LIST 1 [source_file:  [synthetic:1] ]
                NAME JSCompiler_unstubMethod_id 1 [source_file:  [synthetic:1] ]
                NAME JSCompiler_unstubMethod_body 1 [source_file:  [synthetic:1] ]
            BLOCK 1 [source_file:  [synthetic:1] ]
                RETURN 1 [source_file:  [synthetic:1] ]
                    ASSIGN 1 [source_file:  [synthetic:1] ]
                        GETELEM 1 [source_file:  [synthetic:1] ]
                            NAME JSCompiler_stubMap 1 [source_file:  [synthetic:1] ]
                            NAME JSCompiler_unstubMethod_id 1 [source_file:  [synthetic:1] ]
                        NAME JSCompiler_unstubMethod_body 1 [source_file:  [synthetic:1] ]
        FUNCTION Foo 1 [source_file: i0]
            NAME Foo 1 [source_file: i0]
            PARAM_LIST 1 [source_file: i0]
            BLOCK 1 [source_file: i0]
        EXPR_RESULT 1 [source_file: i0]
            ASSIGN 1 [source_file: i0]
                GETPROP 1 [source_file: i0]
                    GETPROP 1 [source_file: i0]
                        NAME Foo 1 [source_file: i0]
                        STRING prototype 1 [source_file: i0]
                    STRING baz 1 [source_file: i0]
                CALL 1 [free_call: 1] [source_file: i0]
                    NAME JSCompiler_stubMethod 1 [source_file: i0]
                    NUMBER 0.0 1 [source_file: i0]
    SCRIPT 1 [synthetic: 1] [source_file: i1] [input_id: InputId: i1]
        EXPR_RESULT 1 [source_file: i1]
            ASSIGN 1 [source_file: i1]
                GETPROP 1 [source_file: i1]
                    GETPROP 1 [source_file: i1]
                        NAME Foo 1 [source_file: i1]
                        STRING prototype 1 [source_file: i1]
                    STRING callBaz 1 [source_file: i1]
                CALL 1 [free_call: 1] [source_file: i1]
                    NAME JSCompiler_stubMethod 1 [source_file: i1]
                    NUMBER 1.0 1 [source_file: i1]
    SCRIPT 1 [synthetic: 1] [source_file: i2] [input_id: InputId: i2]
        EXPR_RESULT 1 [source_file: i1]
            ASSIGN 1 [source_file: i1]
                GETPROP 1 [source_file: i1]
                    GETPROP 1 [source_file: i1]
                        NAME Foo 1 [source_file: i1]
                        STRING prototype 1 [source_file: i1]
                    STRING callBaz 1 [source_file: i1]
                CALL 1 [free_call: 1] [source_file: i1]
                    NAME JSCompiler_unstubMethod 1 [source_file: i1]
                    NUMBER 1.0 1 [source_file: i1]
                    FUNCTION  1 [source_file: i1]
                        NAME  1 [source_file: i1]
                        PARAM_LIST 1 [source_file: i1]
                        BLOCK 1 [source_file: i1]
                            EXPR_RESULT 1 [source_file: i1]
                                CALL 1 [source_file: i1]
                                    GETPROP 1 [source_file: i1]
                                        THIS 1 [source_file: i1]
                                        STRING baz 1 [source_file: i1]
        EXPR_RESULT 1 [source_file: i0]
            ASSIGN 1 [source_file: i0]
                GETPROP 1 [source_file: i0]
                    GETPROP 1 [source_file: i0]
                        NAME Foo 1 [source_file: i0]
                        STRING prototype 1 [source_file: i0]
                    STRING baz 1 [source_file: i0]
                CALL 1 [free_call: 1] [source_file: i0]
                    NAME JSCompiler_unstubMethod 1 [source_file: i0]
                    NUMBER 0.0 1 [source_file: i0]
                    FUNCTION  1 [source_file: i0]
                        NAME  1 [source_file: i0]
                        PARAM_LIST 1 [source_file: i0]
                        BLOCK 1 [source_file: i0]
        EXPR_RESULT 1 [source_file: i2]
            CALL 1 [source_file: i2]
                GETPROP 1 [source_file: i2]
                    NEW 1 [source_file: i2]
                        NAME Foo 1 [source_file: i2]
                    STRING callBaz 1 [source_file: i2]


Subtree1: NUMBER 1.0 1 [source_file: expected0]


Subtree2: NUMBER 0.0 1 [source_file: i0]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:928)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:736)
~ testClosureVariableReads3(com.google.javascript.jscomp.CrossModuleMethodMotionTest)
[
Expected: var JSCompiler_stubMap=[];function JSCompiler_stubMethod(JSCompiler_stubMethod_id){return function(){return JSCompiler_stubMap[JSCompiler_stubMethod_id].apply(this,arguments)}}function JSCompiler_unstubMethod(JSCompiler_unstubMethod_id,JSCompiler_unstubMethod_body){return JSCompiler_stubMap[JSCompiler_unstubMethod_id]=JSCompiler_unstubMethod_body}function Foo(){}Foo.prototype.b1=JSCompiler_stubMethod(0);Foo.prototype.b1=JSCompiler_unstubMethod(0,function(){Foo.prototype.b2=JSCompiler_stubMethod(1)});
var y=new Foo;y.b1();Foo.prototype.b2=JSCompiler_unstubMethod(1,function(){var x=1;Foo.prototype.b3=function(){x}});y=new Foo;z.b2();y=new Foo;z.b3()
Result: var JSCompiler_stubMap=[];function JSCompiler_stubMethod(JSCompiler_stubMethod_id){return function(){return JSCompiler_stubMap[JSCompiler_stubMethod_id].apply(this,arguments)}}function JSCompiler_unstubMethod(JSCompiler_unstubMethod_id,JSCompiler_unstubMethod_body){return JSCompiler_stubMap[JSCompiler_unstubMethod_id]=JSCompiler_unstubMethod_body}function Foo(){}Foo.prototype.b1=JSCompiler_stubMethod(1);Foo.prototype.b1=JSCompiler_unstubMethod(1,function(){Foo.prototype.b2=JSCompiler_stubMethod(0)});
var y=new Foo;y.b1();Foo.prototype.b2=JSCompiler_unstubMethod(0,function(){var x=1;Foo.prototype.b3=function(){x}});y=new Foo;z.b2();y=new Foo;z.b3()
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        VAR 1 [source_file: expected0]
            NAME JSCompiler_stubMap 1 [source_file: expected0]
                ARRAYLIT 1 [source_file: expected0]
        FUNCTION JSCompiler_stubMethod 1 [source_file: expected0]
            NAME JSCompiler_stubMethod 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
                NAME JSCompiler_stubMethod_id 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                RETURN 1 [source_file: expected0]
                    FUNCTION  1 [source_file: expected0]
                        NAME  1 [source_file: expected0]
                        PARAM_LIST 1 [source_file: expected0]
                        BLOCK 1 [source_file: expected0]
                            RETURN 1 [source_file: expected0]
                                CALL 1 [source_file: expected0]
                                    GETPROP 1 [source_file: expected0]
                                        GETELEM 1 [source_file: expected0]
                                            NAME JSCompiler_stubMap 1 [source_file: expected0]
                                            NAME JSCompiler_stubMethod_id 1 [source_file: expected0]
                                        STRING apply 1 [source_file: expected0]
                                    THIS 1 [source_file: expected0]
                                    NAME arguments 1 [source_file: expected0]
        FUNCTION JSCompiler_unstubMethod 1 [source_file: expected0]
            NAME JSCompiler_unstubMethod 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
                NAME JSCompiler_unstubMethod_id 1 [source_file: expected0]
                NAME JSCompiler_unstubMethod_body 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                RETURN 1 [source_file: expected0]
                    ASSIGN 1 [source_file: expected0]
                        GETELEM 1 [source_file: expected0]
                            NAME JSCompiler_stubMap 1 [source_file: expected0]
                            NAME JSCompiler_unstubMethod_id 1 [source_file: expected0]
                        NAME JSCompiler_unstubMethod_body 1 [source_file: expected0]
        FUNCTION Foo 1 [source_file: expected0]
            NAME Foo 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            ASSIGN 1 [source_file: expected0]
                GETPROP 1 [source_file: expected0]
                    GETPROP 1 [source_file: expected0]
                        NAME Foo 1 [source_file: expected0]
                        STRING prototype 1 [source_file: expected0]
                    STRING b1 1 [source_file: expected0]
                CALL 1 [free_call: 1] [source_file: expected0]
                    NAME JSCompiler_stubMethod 1 [source_file: expected0]
                    NUMBER 0.0 1 [source_file: expected0]
    SCRIPT 1 [synthetic: 1] [source_file: expected1] [input_id: InputId: expected1]
        EXPR_RESULT 1 [source_file: expected1]
            ASSIGN 1 [source_file: expected1]
                GETPROP 1 [source_file: expected1]
                    GETPROP 1 [source_file: expected1]
                        NAME Foo 1 [source_file: expected1]
                        STRING prototype 1 [source_file: expected1]
                    STRING b1 1 [source_file: expected1]
                CALL 1 [free_call: 1] [source_file: expected1]
                    NAME JSCompiler_unstubMethod 1 [source_file: expected1]
                    NUMBER 0.0 1 [source_file: expected1]
                    FUNCTION  1 [source_file: expected1]
                        NAME  1 [source_file: expected1]
                        PARAM_LIST 1 [source_file: expected1]
                        BLOCK 1 [source_file: expected1]
                            EXPR_RESULT 1 [source_file: expected1]
                                ASSIGN 1 [source_file: expected1]
                                    GETPROP 1 [source_file: expected1]
                                        GETPROP 1 [source_file: expected1]
                                            NAME Foo 1 [source_file: expected1]
                                            STRING prototype 1 [source_file: expected1]
                                        STRING b2 1 [source_file: expected1]
                                    CALL 1 [free_call: 1] [source_file: expected1]
                                        NAME JSCompiler_stubMethod 1 [source_file: expected1]
                                        NUMBER 1.0 1 [source_file: expected1]
        VAR 1 [source_file: expected1]
            NAME y 1 [source_file: expected1]
                NEW 1 [source_file: expected1]
                    NAME Foo 1 [source_file: expected1]
        EXPR_RESULT 1 [source_file: expected1]
            CALL 1 [source_file: expected1]
                GETPROP 1 [source_file: expected1]
                    NAME y 1 [source_file: expected1]
                    STRING b1 1 [source_file: expected1]
    SCRIPT 1 [synthetic: 1] [source_file: expected2] [input_id: InputId: expected2]
        EXPR_RESULT 1 [source_file: expected2]
            ASSIGN 1 [source_file: expected2]
                GETPROP 1 [source_file: expected2]
                    GETPROP 1 [source_file: expected2]
                        NAME Foo 1 [source_file: expected2]
                        STRING prototype 1 [source_file: expected2]
                    STRING b2 1 [source_file: expected2]
                CALL 1 [free_call: 1] [source_file: expected2]
                    NAME JSCompiler_unstubMethod 1 [source_file: expected2]
                    NUMBER 1.0 1 [source_file: expected2]
                    FUNCTION  1 [source_file: expected2]
                        NAME  1 [source_file: expected2]
                        PARAM_LIST 1 [source_file: expected2]
                        BLOCK 1 [source_file: expected2]
                            VAR 1 [source_file: expected2]
                                NAME x 1 [source_file: expected2]
                                    NUMBER 1.0 1 [source_file: expected2]
                            EXPR_RESULT 1 [source_file: expected2]
                                ASSIGN 1 [source_file: expected2]
                                    GETPROP 1 [source_file: expected2]
                                        GETPROP 1 [source_file: expected2]
                                            NAME Foo 1 [source_file: expected2]
                                            STRING prototype 1 [source_file: expected2]
                                        STRING b3 1 [source_file: expected2]
                                    FUNCTION  1 [source_file: expected2]
                                        NAME  1 [source_file: expected2]
                                        PARAM_LIST 1 [source_file: expected2]
                                        BLOCK 1 [source_file: expected2]
                                            EXPR_RESULT 1 [source_file: expected2]
                                                NAME x 1 [source_file: expected2]
        EXPR_RESULT 1 [source_file: expected2]
            ASSIGN 1 [source_file: expected2]
                NAME y 1 [source_file: expected2]
                NEW 1 [source_file: expected2]
                    NAME Foo 1 [source_file: expected2]
        EXPR_RESULT 1 [source_file: expected2]
            CALL 1 [source_file: expected2]
                GETPROP 1 [source_file: expected2]
                    NAME z 1 [source_file: expected2]
                    STRING b2 1 [source_file: expected2]
    SCRIPT 1 [synthetic: 1] [source_file: expected3] [input_id: InputId: expected3]
        EXPR_RESULT 1 [source_file: expected3]
            ASSIGN 1 [source_file: expected3]
                NAME y 1 [source_file: expected3]
                NEW 1 [source_file: expected3]
                    NAME Foo 1 [source_file: expected3]
        EXPR_RESULT 1 [source_file: expected3]
            CALL 1 [source_file: expected3]
                GETPROP 1 [source_file: expected3]
                    NAME z 1 [source_file: expected3]
                    STRING b3 1 [source_file: expected3]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: i0] [input_id: InputId: i0]
        VAR 1 [source_file:  [synthetic:1] ]
            NAME JSCompiler_stubMap 1 [source_file:  [synthetic:1] ]
                ARRAYLIT 1 [source_file:  [synthetic:1] ]
        FUNCTION JSCompiler_stubMethod 1 [source_file:  [synthetic:1] ]
            NAME JSCompiler_stubMethod 1 [source_file:  [synthetic:1] ]
            PARAM_LIST 1 [source_file:  [synthetic:1] ]
                NAME JSCompiler_stubMethod_id 1 [source_file:  [synthetic:1] ]
            BLOCK 1 [source_file:  [synthetic:1] ]
                RETURN 1 [source_file:  [synthetic:1] ]
                    FUNCTION  1 [source_file:  [synthetic:1] ]
                        NAME  1 [source_file:  [synthetic:1] ]
                        PARAM_LIST 1 [source_file:  [synthetic:1] ]
                        BLOCK 1 [source_file:  [synthetic:1] ]
                            RETURN 1 [source_file:  [synthetic:1] ]
                                CALL 1 [source_file:  [synthetic:1] ]
                                    GETPROP 1 [source_file:  [synthetic:1] ]
                                        GETELEM 1 [source_file:  [synthetic:1] ]
                                            NAME JSCompiler_stubMap 1 [source_file:  [synthetic:1] ]
                                            NAME JSCompiler_stubMethod_id 1 [source_file:  [synthetic:1] ]
                                        STRING apply 1 [source_file:  [synthetic:1] ]
                                    THIS 1 [source_file:  [synthetic:1] ]
                                    NAME arguments 1 [source_file:  [synthetic:1] ]
        FUNCTION JSCompiler_unstubMethod 1 [source_file:  [synthetic:1] ]
            NAME JSCompiler_unstubMethod 1 [source_file:  [synthetic:1] ]
            PARAM_LIST 1 [source_file:  [synthetic:1] ]
                NAME JSCompiler_unstubMethod_id 1 [source_file:  [synthetic:1] ]
                NAME JSCompiler_unstubMethod_body 1 [source_file:  [synthetic:1] ]
            BLOCK 1 [source_file:  [synthetic:1] ]
                RETURN 1 [source_file:  [synthetic:1] ]
                    ASSIGN 1 [source_file:  [synthetic:1] ]
                        GETELEM 1 [source_file:  [synthetic:1] ]
                            NAME JSCompiler_stubMap 1 [source_file:  [synthetic:1] ]
                            NAME JSCompiler_unstubMethod_id 1 [source_file:  [synthetic:1] ]
                        NAME JSCompiler_unstubMethod_body 1 [source_file:  [synthetic:1] ]
        FUNCTION Foo 1 [source_file: i0]
            NAME Foo 1 [source_file: i0]
            PARAM_LIST 1 [source_file: i0]
            BLOCK 1 [source_file: i0]
        EXPR_RESULT 1 [source_file: i0]
            ASSIGN 1 [source_file: i0]
                GETPROP 1 [source_file: i0]
                    GETPROP 1 [source_file: i0]
                        NAME Foo 1 [source_file: i0]
                        STRING prototype 1 [source_file: i0]
                    STRING b1 1 [source_file: i0]
                CALL 1 [free_call: 1] [source_file: i0]
                    NAME JSCompiler_stubMethod 1 [source_file: i0]
                    NUMBER 1.0 1 [source_file: i0]
    SCRIPT 1 [synthetic: 1] [source_file: i1] [input_id: InputId: i1]
        EXPR_RESULT 1 [source_file: i0]
            ASSIGN 1 [source_file: i0]
                GETPROP 1 [source_file: i0]
                    GETPROP 1 [source_file: i0]
                        NAME Foo 1 [source_file: i0]
                        STRING prototype 1 [source_file: i0]
                    STRING b1 1 [source_file: i0]
                CALL 1 [free_call: 1] [source_file: i0]
                    NAME JSCompiler_unstubMethod 1 [source_file: i0]
                    NUMBER 1.0 1 [source_file: i0]
                    FUNCTION  1 [source_file: i0]
                        NAME  1 [source_file: i0]
                        PARAM_LIST 1 [source_file: i0]
                        BLOCK 1 [source_file: i0]
                            EXPR_RESULT 1 [source_file: i0]
                                ASSIGN 1 [source_file: i0]
                                    GETPROP 1 [source_file: i0]
                                        GETPROP 1 [source_file: i0]
                                            NAME Foo 1 [source_file: i0]
                                            STRING prototype 1 [source_file: i0]
                                        STRING b2 1 [source_file: i0]
                                    CALL 1 [free_call: 1] [source_file: i0]
                                        NAME JSCompiler_stubMethod 1 [source_file: i0]
                                        NUMBER 0.0 1 [source_file: i0]
        VAR 1 [source_file: i1]
            NAME y 1 [source_file: i1]
                NEW 1 [source_file: i1]
                    NAME Foo 1 [source_file: i1]
        EXPR_RESULT 1 [source_file: i1]
            CALL 1 [source_file: i1]
                GETPROP 1 [source_file: i1]
                    NAME y 1 [source_file: i1]
                    STRING b1 1 [source_file: i1]
    SCRIPT 1 [synthetic: 1] [source_file: i2] [input_id: InputId: i2]
        EXPR_RESULT 1 [source_file: i0]
            ASSIGN 1 [source_file: i0]
                GETPROP 1 [source_file: i0]
                    GETPROP 1 [source_file: i0]
                        NAME Foo 1 [source_file: i0]
                        STRING prototype 1 [source_file: i0]
                    STRING b2 1 [source_file: i0]
                CALL 1 [free_call: 1] [source_file: i0]
                    NAME JSCompiler_unstubMethod 1 [source_file: i0]
                    NUMBER 0.0 1 [source_file: i0]
                    FUNCTION  1 [source_file: i0]
                        NAME  1 [source_file: i0]
                        PARAM_LIST 1 [source_file: i0]
                        BLOCK 1 [source_file: i0]
                            VAR 1 [source_file: i0]
                                NAME x 1 [source_file: i0]
                                    NUMBER 1.0 1 [source_file: i0]
                            EXPR_RESULT 1 [source_file: i0]
                                ASSIGN 1 [source_file: i0]
                                    GETPROP 1 [source_file: i0]
                                        GETPROP 1 [source_file: i0]
                                            NAME Foo 1 [source_file: i0]
                                            STRING prototype 1 [source_file: i0]
                                        STRING b3 1 [source_file: i0]
                                    FUNCTION  1 [source_file: i0]
                                        NAME  1 [source_file: i0]
                                        PARAM_LIST 1 [source_file: i0]
                                        BLOCK 1 [source_file: i0]
                                            EXPR_RESULT 1 [source_file: i0]
                                                NAME x 1 [source_file: i0]
        EXPR_RESULT 1 [source_file: i2]
            ASSIGN 1 [source_file: i2]
                NAME y 1 [source_file: i2]
                NEW 1 [source_file: i2]
                    NAME Foo 1 [source_file: i2]
        EXPR_RESULT 1 [source_file: i2]
            CALL 1 [source_file: i2]
                GETPROP 1 [source_file: i2]
                    NAME z 1 [source_file: i2]
                    STRING b2 1 [source_file: i2]
    SCRIPT 1 [synthetic: 1] [source_file: i3] [input_id: InputId: i3]
        EXPR_RESULT 1 [source_file: i3]
            ASSIGN 1 [source_file: i3]
                NAME y 1 [source_file: i3]
                NEW 1 [source_file: i3]
                    NAME Foo 1 [source_file: i3]
        EXPR_RESULT 1 [source_file: i3]
            CALL 1 [source_file: i3]
                GETPROP 1 [source_file: i3]
                    NAME z 1 [source_file: i3]
                    STRING b3 1 [source_file: i3]


Subtree1: NUMBER 0.0 1 [source_file: expected0]


Subtree2: NUMBER 1.0 1 [source_file: i0]
]
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_stubMap=[];function JSCompiler_stubMethod(JSCompiler_stubMethod_id){return function(){return JSCompiler_stubMap[JSCompiler_stubMethod_id].apply(this,arguments)}}function JSCompiler_unstubMethod(JSCompiler_unstubMethod_id,JSCompiler_unstubMethod_body){return JSCompiler_stubMap[JSCompiler_unstubMethod_id]=JSCompiler_unstubMethod_body}function Foo(){}Foo.prototype.b1=JSCompiler_stubMethod(0);Foo.prototype.b1=JSCompiler_unstubMethod(0,function(){Foo.prototype.b2=JSCompiler_stubMethod(1)});
var y=new Foo;y.b1();Foo.prototype.b2=JSCompiler_unstubMethod(1,function(){var x=1;Foo.prototype.b3=function(){x}});y=new Foo;z.b2();y=new Foo;z.b3()
Result: var JSCompiler_stubMap=[];function JSCompiler_stubMethod(JSCompiler_stubMethod_id){return function(){return JSCompiler_stubMap[JSCompiler_stubMethod_id].apply(this,arguments)}}function JSCompiler_unstubMethod(JSCompiler_unstubMethod_id,JSCompiler_unstubMethod_body){return JSCompiler_stubMap[JSCompiler_unstubMethod_id]=JSCompiler_unstubMethod_body}function Foo(){}Foo.prototype.b1=JSCompiler_stubMethod(1);Foo.prototype.b1=JSCompiler_unstubMethod(1,function(){Foo.prototype.b2=JSCompiler_stubMethod(0)});
var y=new Foo;y.b1();Foo.prototype.b2=JSCompiler_unstubMethod(0,function(){var x=1;Foo.prototype.b3=function(){x}});y=new Foo;z.b2();y=new Foo;z.b3()
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        VAR 1 [source_file: expected0]
            NAME JSCompiler_stubMap 1 [source_file: expected0]
                ARRAYLIT 1 [source_file: expected0]
        FUNCTION JSCompiler_stubMethod 1 [source_file: expected0]
            NAME JSCompiler_stubMethod 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
                NAME JSCompiler_stubMethod_id 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                RETURN 1 [source_file: expected0]
                    FUNCTION  1 [source_file: expected0]
                        NAME  1 [source_file: expected0]
                        PARAM_LIST 1 [source_file: expected0]
                        BLOCK 1 [source_file: expected0]
                            RETURN 1 [source_file: expected0]
                                CALL 1 [source_file: expected0]
                                    GETPROP 1 [source_file: expected0]
                                        GETELEM 1 [source_file: expected0]
                                            NAME JSCompiler_stubMap 1 [source_file: expected0]
                                            NAME JSCompiler_stubMethod_id 1 [source_file: expected0]
                                        STRING apply 1 [source_file: expected0]
                                    THIS 1 [source_file: expected0]
                                    NAME arguments 1 [source_file: expected0]
        FUNCTION JSCompiler_unstubMethod 1 [source_file: expected0]
            NAME JSCompiler_unstubMethod 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
                NAME JSCompiler_unstubMethod_id 1 [source_file: expected0]
                NAME JSCompiler_unstubMethod_body 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                RETURN 1 [source_file: expected0]
                    ASSIGN 1 [source_file: expected0]
                        GETELEM 1 [source_file: expected0]
                            NAME JSCompiler_stubMap 1 [source_file: expected0]
                            NAME JSCompiler_unstubMethod_id 1 [source_file: expected0]
                        NAME JSCompiler_unstubMethod_body 1 [source_file: expected0]
        FUNCTION Foo 1 [source_file: expected0]
            NAME Foo 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            ASSIGN 1 [source_file: expected0]
                GETPROP 1 [source_file: expected0]
                    GETPROP 1 [source_file: expected0]
                        NAME Foo 1 [source_file: expected0]
                        STRING prototype 1 [source_file: expected0]
                    STRING b1 1 [source_file: expected0]
                CALL 1 [free_call: 1] [source_file: expected0]
                    NAME JSCompiler_stubMethod 1 [source_file: expected0]
                    NUMBER 0.0 1 [source_file: expected0]
    SCRIPT 1 [synthetic: 1] [source_file: expected1] [input_id: InputId: expected1]
        EXPR_RESULT 1 [source_file: expected1]
            ASSIGN 1 [source_file: expected1]
                GETPROP 1 [source_file: expected1]
                    GETPROP 1 [source_file: expected1]
                        NAME Foo 1 [source_file: expected1]
                        STRING prototype 1 [source_file: expected1]
                    STRING b1 1 [source_file: expected1]
                CALL 1 [free_call: 1] [source_file: expected1]
                    NAME JSCompiler_unstubMethod 1 [source_file: expected1]
                    NUMBER 0.0 1 [source_file: expected1]
                    FUNCTION  1 [source_file: expected1]
                        NAME  1 [source_file: expected1]
                        PARAM_LIST 1 [source_file: expected1]
                        BLOCK 1 [source_file: expected1]
                            EXPR_RESULT 1 [source_file: expected1]
                                ASSIGN 1 [source_file: expected1]
                                    GETPROP 1 [source_file: expected1]
                                        GETPROP 1 [source_file: expected1]
                                            NAME Foo 1 [source_file: expected1]
                                            STRING prototype 1 [source_file: expected1]
                                        STRING b2 1 [source_file: expected1]
                                    CALL 1 [free_call: 1] [source_file: expected1]
                                        NAME JSCompiler_stubMethod 1 [source_file: expected1]
                                        NUMBER 1.0 1 [source_file: expected1]
        VAR 1 [source_file: expected1]
            NAME y 1 [source_file: expected1]
                NEW 1 [source_file: expected1]
                    NAME Foo 1 [source_file: expected1]
        EXPR_RESULT 1 [source_file: expected1]
            CALL 1 [source_file: expected1]
                GETPROP 1 [source_file: expected1]
                    NAME y 1 [source_file: expected1]
                    STRING b1 1 [source_file: expected1]
    SCRIPT 1 [synthetic: 1] [source_file: expected2] [input_id: InputId: expected2]
        EXPR_RESULT 1 [source_file: expected2]
            ASSIGN 1 [source_file: expected2]
                GETPROP 1 [source_file: expected2]
                    GETPROP 1 [source_file: expected2]
                        NAME Foo 1 [source_file: expected2]
                        STRING prototype 1 [source_file: expected2]
                    STRING b2 1 [source_file: expected2]
                CALL 1 [free_call: 1] [source_file: expected2]
                    NAME JSCompiler_unstubMethod 1 [source_file: expected2]
                    NUMBER 1.0 1 [source_file: expected2]
                    FUNCTION  1 [source_file: expected2]
                        NAME  1 [source_file: expected2]
                        PARAM_LIST 1 [source_file: expected2]
                        BLOCK 1 [source_file: expected2]
                            VAR 1 [source_file: expected2]
                                NAME x 1 [source_file: expected2]
                                    NUMBER 1.0 1 [source_file: expected2]
                            EXPR_RESULT 1 [source_file: expected2]
                                ASSIGN 1 [source_file: expected2]
                                    GETPROP 1 [source_file: expected2]
                                        GETPROP 1 [source_file: expected2]
                                            NAME Foo 1 [source_file: expected2]
                                            STRING prototype 1 [source_file: expected2]
                                        STRING b3 1 [source_file: expected2]
                                    FUNCTION  1 [source_file: expected2]
                                        NAME  1 [source_file: expected2]
                                        PARAM_LIST 1 [source_file: expected2]
                                        BLOCK 1 [source_file: expected2]
                                            EXPR_RESULT 1 [source_file: expected2]
                                                NAME x 1 [source_file: expected2]
        EXPR_RESULT 1 [source_file: expected2]
            ASSIGN 1 [source_file: expected2]
                NAME y 1 [source_file: expected2]
                NEW 1 [source_file: expected2]
                    NAME Foo 1 [source_file: expected2]
        EXPR_RESULT 1 [source_file: expected2]
            CALL 1 [source_file: expected2]
                GETPROP 1 [source_file: expected2]
                    NAME z 1 [source_file: expected2]
                    STRING b2 1 [source_file: expected2]
    SCRIPT 1 [synthetic: 1] [source_file: expected3] [input_id: InputId: expected3]
        EXPR_RESULT 1 [source_file: expected3]
            ASSIGN 1 [source_file: expected3]
                NAME y 1 [source_file: expected3]
                NEW 1 [source_file: expected3]
                    NAME Foo 1 [source_file: expected3]
        EXPR_RESULT 1 [source_file: expected3]
            CALL 1 [source_file: expected3]
                GETPROP 1 [source_file: expected3]
                    NAME z 1 [source_file: expected3]
                    STRING b3 1 [source_file: expected3]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: i0] [input_id: InputId: i0]
        VAR 1 [source_file:  [synthetic:1] ]
            NAME JSCompiler_stubMap 1 [source_file:  [synthetic:1] ]
                ARRAYLIT 1 [source_file:  [synthetic:1] ]
        FUNCTION JSCompiler_stubMethod 1 [source_file:  [synthetic:1] ]
            NAME JSCompiler_stubMethod 1 [source_file:  [synthetic:1] ]
            PARAM_LIST 1 [source_file:  [synthetic:1] ]
                NAME JSCompiler_stubMethod_id 1 [source_file:  [synthetic:1] ]
            BLOCK 1 [source_file:  [synthetic:1] ]
                RETURN 1 [source_file:  [synthetic:1] ]
                    FUNCTION  1 [source_file:  [synthetic:1] ]
                        NAME  1 [source_file:  [synthetic:1] ]
                        PARAM_LIST 1 [source_file:  [synthetic:1] ]
                        BLOCK 1 [source_file:  [synthetic:1] ]
                            RETURN 1 [source_file:  [synthetic:1] ]
                                CALL 1 [source_file:  [synthetic:1] ]
                                    GETPROP 1 [source_file:  [synthetic:1] ]
                                        GETELEM 1 [source_file:  [synthetic:1] ]
                                            NAME JSCompiler_stubMap 1 [source_file:  [synthetic:1] ]
                                            NAME JSCompiler_stubMethod_id 1 [source_file:  [synthetic:1] ]
                                        STRING apply 1 [source_file:  [synthetic:1] ]
                                    THIS 1 [source_file:  [synthetic:1] ]
                                    NAME arguments 1 [source_file:  [synthetic:1] ]
        FUNCTION JSCompiler_unstubMethod 1 [source_file:  [synthetic:1] ]
            NAME JSCompiler_unstubMethod 1 [source_file:  [synthetic:1] ]
            PARAM_LIST 1 [source_file:  [synthetic:1] ]
                NAME JSCompiler_unstubMethod_id 1 [source_file:  [synthetic:1] ]
                NAME JSCompiler_unstubMethod_body 1 [source_file:  [synthetic:1] ]
            BLOCK 1 [source_file:  [synthetic:1] ]
                RETURN 1 [source_file:  [synthetic:1] ]
                    ASSIGN 1 [source_file:  [synthetic:1] ]
                        GETELEM 1 [source_file:  [synthetic:1] ]
                            NAME JSCompiler_stubMap 1 [source_file:  [synthetic:1] ]
                            NAME JSCompiler_unstubMethod_id 1 [source_file:  [synthetic:1] ]
                        NAME JSCompiler_unstubMethod_body 1 [source_file:  [synthetic:1] ]
        FUNCTION Foo 1 [source_file: i0]
            NAME Foo 1 [source_file: i0]
            PARAM_LIST 1 [source_file: i0]
            BLOCK 1 [source_file: i0]
        EXPR_RESULT 1 [source_file: i0]
            ASSIGN 1 [source_file: i0]
                GETPROP 1 [source_file: i0]
                    GETPROP 1 [source_file: i0]
                        NAME Foo 1 [source_file: i0]
                        STRING prototype 1 [source_file: i0]
                    STRING b1 1 [source_file: i0]
                CALL 1 [free_call: 1] [source_file: i0]
                    NAME JSCompiler_stubMethod 1 [source_file: i0]
                    NUMBER 1.0 1 [source_file: i0]
    SCRIPT 1 [synthetic: 1] [source_file: i1] [input_id: InputId: i1]
        EXPR_RESULT 1 [source_file: i0]
            ASSIGN 1 [source_file: i0]
                GETPROP 1 [source_file: i0]
                    GETPROP 1 [source_file: i0]
                        NAME Foo 1 [source_file: i0]
                        STRING prototype 1 [source_file: i0]
                    STRING b1 1 [source_file: i0]
                CALL 1 [free_call: 1] [source_file: i0]
                    NAME JSCompiler_unstubMethod 1 [source_file: i0]
                    NUMBER 1.0 1 [source_file: i0]
                    FUNCTION  1 [source_file: i0]
                        NAME  1 [source_file: i0]
                        PARAM_LIST 1 [source_file: i0]
                        BLOCK 1 [source_file: i0]
                            EXPR_RESULT 1 [source_file: i0]
                                ASSIGN 1 [source_file: i0]
                                    GETPROP 1 [source_file: i0]
                                        GETPROP 1 [source_file: i0]
                                            NAME Foo 1 [source_file: i0]
                                            STRING prototype 1 [source_file: i0]
                                        STRING b2 1 [source_file: i0]
                                    CALL 1 [free_call: 1] [source_file: i0]
                                        NAME JSCompiler_stubMethod 1 [source_file: i0]
                                        NUMBER 0.0 1 [source_file: i0]
        VAR 1 [source_file: i1]
            NAME y 1 [source_file: i1]
                NEW 1 [source_file: i1]
                    NAME Foo 1 [source_file: i1]
        EXPR_RESULT 1 [source_file: i1]
            CALL 1 [source_file: i1]
                GETPROP 1 [source_file: i1]
                    NAME y 1 [source_file: i1]
                    STRING b1 1 [source_file: i1]
    SCRIPT 1 [synthetic: 1] [source_file: i2] [input_id: InputId: i2]
        EXPR_RESULT 1 [source_file: i0]
            ASSIGN 1 [source_file: i0]
                GETPROP 1 [source_file: i0]
                    GETPROP 1 [source_file: i0]
                        NAME Foo 1 [source_file: i0]
                        STRING prototype 1 [source_file: i0]
                    STRING b2 1 [source_file: i0]
                CALL 1 [free_call: 1] [source_file: i0]
                    NAME JSCompiler_unstubMethod 1 [source_file: i0]
                    NUMBER 0.0 1 [source_file: i0]
                    FUNCTION  1 [source_file: i0]
                        NAME  1 [source_file: i0]
                        PARAM_LIST 1 [source_file: i0]
                        BLOCK 1 [source_file: i0]
                            VAR 1 [source_file: i0]
                                NAME x 1 [source_file: i0]
                                    NUMBER 1.0 1 [source_file: i0]
                            EXPR_RESULT 1 [source_file: i0]
                                ASSIGN 1 [source_file: i0]
                                    GETPROP 1 [source_file: i0]
                                        GETPROP 1 [source_file: i0]
                                            NAME Foo 1 [source_file: i0]
                                            STRING prototype 1 [source_file: i0]
                                        STRING b3 1 [source_file: i0]
                                    FUNCTION  1 [source_file: i0]
                                        NAME  1 [source_file: i0]
                                        PARAM_LIST 1 [source_file: i0]
                                        BLOCK 1 [source_file: i0]
                                            EXPR_RESULT 1 [source_file: i0]
                                                NAME x 1 [source_file: i0]
        EXPR_RESULT 1 [source_file: i2]
            ASSIGN 1 [source_file: i2]
                NAME y 1 [source_file: i2]
                NEW 1 [source_file: i2]
                    NAME Foo 1 [source_file: i2]
        EXPR_RESULT 1 [source_file: i2]
            CALL 1 [source_file: i2]
                GETPROP 1 [source_file: i2]
                    NAME z 1 [source_file: i2]
                    STRING b2 1 [source_file: i2]
    SCRIPT 1 [synthetic: 1] [source_file: i3] [input_id: InputId: i3]
        EXPR_RESULT 1 [source_file: i3]
            ASSIGN 1 [source_file: i3]
                NAME y 1 [source_file: i3]
                NEW 1 [source_file: i3]
                    NAME Foo 1 [source_file: i3]
        EXPR_RESULT 1 [source_file: i3]
            CALL 1 [source_file: i3]
                GETPROP 1 [source_file: i3]
                    NAME z 1 [source_file: i3]
                    STRING b3 1 [source_file: i3]


Subtree1: NUMBER 0.0 1 [source_file: expected0]


Subtree2: NUMBER 1.0 1 [source_file: i0]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:928)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:736)
~ testIssue4177428_return(com.google.javascript.jscomp.UnreachableCodeEliminationTest)
[
Expected: f=function(){var action;a:{var proto=null;try{proto=new Proto}finally{action=proto;return}}}
Result: f=function(){var action;a:{var proto=null;try{proto=new Proto}finally{action=proto}}}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            ASSIGN 1 [source_file: expected0]
                NAME f 1 [source_file: expected0]
                FUNCTION  1 [source_file: expected0]
                    NAME  1 [source_file: expected0]
                    PARAM_LIST 1 [source_file: expected0]
                    BLOCK 1 [source_file: expected0]
                        VAR 2 [source_file: expected0]
                            NAME action 2 [source_file: expected0]
                        LABEL 3 [source_file: expected0]
                            LABEL_NAME a 3 [source_file: expected0]
                            BLOCK 3 [source_file: expected0]
                                VAR 4 [source_file: expected0]
                                    NAME proto 4 [source_file: expected0]
                                        NULL 4 [source_file: expected0]
                                TRY 5 [source_file: expected0]
                                    BLOCK 5 [source_file: expected0]
                                        EXPR_RESULT 6 [source_file: expected0]
                                            ASSIGN 6 [source_file: expected0]
                                                NAME proto 6 [source_file: expected0]
                                                NEW 6 [source_file: expected0]
                                                    NAME Proto 6 [source_file: expected0]
                                    BLOCK 7 [source_file: expected0]
                                    BLOCK 7 [source_file: expected0]
                                        EXPR_RESULT 8 [source_file: expected0]
                                            ASSIGN 8 [source_file: expected0]
                                                NAME action 8 [source_file: expected0]
                                                NAME proto 8 [source_file: expected0]
                                        RETURN 9 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        EXPR_RESULT 1 [source_file: testcode]
            ASSIGN 1 [source_file: testcode]
                NAME f 1 [source_file: testcode]
                FUNCTION  1 [source_file: testcode]
                    NAME  1 [source_file: testcode]
                    PARAM_LIST 1 [source_file: testcode]
                    BLOCK 1 [source_file: testcode]
                        VAR 2 [source_file: testcode]
                            NAME action 2 [source_file: testcode]
                        LABEL 3 [source_file: testcode]
                            LABEL_NAME a 3 [source_file: testcode]
                            BLOCK 3 [source_file: testcode]
                                VAR 4 [source_file: testcode]
                                    NAME proto 4 [source_file: testcode]
                                        NULL 4 [source_file: testcode]
                                TRY 5 [source_file: testcode]
                                    BLOCK 5 [source_file: testcode]
                                        EXPR_RESULT 6 [source_file: testcode]
                                            ASSIGN 6 [source_file: testcode]
                                                NAME proto 6 [source_file: testcode]
                                                NEW 6 [source_file: testcode]
                                                    NAME Proto 6 [source_file: testcode]
                                    BLOCK 7 [source_file: testcode]
                                    BLOCK 7 [source_file: testcode]
                                        EXPR_RESULT 8 [source_file: testcode]
                                            ASSIGN 8 [source_file: testcode]
                                                NAME action 8 [source_file: testcode]
                                                NAME proto 8 [source_file: testcode]


Subtree1: BLOCK 7 [source_file: expected0]
    EXPR_RESULT 8 [source_file: expected0]
        ASSIGN 8 [source_file: expected0]
            NAME action 8 [source_file: expected0]
            NAME proto 8 [source_file: expected0]
    RETURN 9 [source_file: expected0]


Subtree2: BLOCK 7 [source_file: testcode]
    EXPR_RESULT 8 [source_file: testcode]
        ASSIGN 8 [source_file: testcode]
            NAME action 8 [source_file: testcode]
            NAME proto 8 [source_file: testcode]
]
junit.framework.AssertionFailedError: 
Expected: f=function(){var action;a:{var proto=null;try{proto=new Proto}finally{action=proto;return}}}
Result: f=function(){var action;a:{var proto=null;try{proto=new Proto}finally{action=proto}}}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            ASSIGN 1 [source_file: expected0]
                NAME f 1 [source_file: expected0]
                FUNCTION  1 [source_file: expected0]
                    NAME  1 [source_file: expected0]
                    PARAM_LIST 1 [source_file: expected0]
                    BLOCK 1 [source_file: expected0]
                        VAR 2 [source_file: expected0]
                            NAME action 2 [source_file: expected0]
                        LABEL 3 [source_file: expected0]
                            LABEL_NAME a 3 [source_file: expected0]
                            BLOCK 3 [source_file: expected0]
                                VAR 4 [source_file: expected0]
                                    NAME proto 4 [source_file: expected0]
                                        NULL 4 [source_file: expected0]
                                TRY 5 [source_file: expected0]
                                    BLOCK 5 [source_file: expected0]
                                        EXPR_RESULT 6 [source_file: expected0]
                                            ASSIGN 6 [source_file: expected0]
                                                NAME proto 6 [source_file: expected0]
                                                NEW 6 [source_file: expected0]
                                                    NAME Proto 6 [source_file: expected0]
                                    BLOCK 7 [source_file: expected0]
                                    BLOCK 7 [source_file: expected0]
                                        EXPR_RESULT 8 [source_file: expected0]
                                            ASSIGN 8 [source_file: expected0]
                                                NAME action 8 [source_file: expected0]
                                                NAME proto 8 [source_file: expected0]
                                        RETURN 9 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        EXPR_RESULT 1 [source_file: testcode]
            ASSIGN 1 [source_file: testcode]
                NAME f 1 [source_file: testcode]
                FUNCTION  1 [source_file: testcode]
                    NAME  1 [source_file: testcode]
                    PARAM_LIST 1 [source_file: testcode]
                    BLOCK 1 [source_file: testcode]
                        VAR 2 [source_file: testcode]
                            NAME action 2 [source_file: testcode]
                        LABEL 3 [source_file: testcode]
                            LABEL_NAME a 3 [source_file: testcode]
                            BLOCK 3 [source_file: testcode]
                                VAR 4 [source_file: testcode]
                                    NAME proto 4 [source_file: testcode]
                                        NULL 4 [source_file: testcode]
                                TRY 5 [source_file: testcode]
                                    BLOCK 5 [source_file: testcode]
                                        EXPR_RESULT 6 [source_file: testcode]
                                            ASSIGN 6 [source_file: testcode]
                                                NAME proto 6 [source_file: testcode]
                                                NEW 6 [source_file: testcode]
                                                    NAME Proto 6 [source_file: testcode]
                                    BLOCK 7 [source_file: testcode]
                                    BLOCK 7 [source_file: testcode]
                                        EXPR_RESULT 8 [source_file: testcode]
                                            ASSIGN 8 [source_file: testcode]
                                                NAME action 8 [source_file: testcode]
                                                NAME proto 8 [source_file: testcode]


Subtree1: BLOCK 7 [source_file: expected0]
    EXPR_RESULT 8 [source_file: expected0]
        ASSIGN 8 [source_file: expected0]
            NAME action 8 [source_file: expected0]
            NAME proto 8 [source_file: expected0]
    RETURN 9 [source_file: expected0]


Subtree2: BLOCK 7 [source_file: testcode]
    EXPR_RESULT 8 [source_file: testcode]
        ASSIGN 8 [source_file: testcode]
            NAME action 8 [source_file: testcode]
            NAME proto 8 [source_file: testcode]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:928)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:460)
~ testDontRemoveBreakInTryFinally(com.google.javascript.jscomp.UnreachableCodeEliminationTest)
[
Expected: function f(){b:try{throw 9;}finally{break b}return 1}
Result: function f(){b:try{throw 9;}finally{}return 1}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION f 1 [source_file: expected0]
            NAME f 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                LABEL 1 [source_file: expected0]
                    LABEL_NAME b 1 [source_file: expected0]
                    TRY 1 [source_file: expected0]
                        BLOCK 1 [source_file: expected0]
                            THROW 1 [source_file: expected0]
                                NUMBER 9.0 1 [source_file: expected0]
                        BLOCK 1 [source_file: expected0]
                        BLOCK 1 [source_file: expected0]
                            BREAK 1 [source_file: expected0]
                                LABEL_NAME b 1 [source_file: expected0]
                RETURN 1 [source_file: expected0]
                    NUMBER 1.0 1 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION f 1 [source_file: testcode]
            NAME f 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                LABEL 1 [source_file: testcode]
                    LABEL_NAME b 1 [source_file: testcode]
                    TRY 1 [source_file: testcode]
                        BLOCK 1 [source_file: testcode]
                            THROW 1 [source_file: testcode]
                                NUMBER 9.0 1 [source_file: testcode]
                        BLOCK 1 [source_file: testcode]
                        BLOCK 1 [source_file: testcode]
                RETURN 1 [source_file: testcode]
                    NUMBER 1.0 1 [source_file: testcode]


Subtree1: BLOCK 1 [source_file: expected0]
    BREAK 1 [source_file: expected0]
        LABEL_NAME b 1 [source_file: expected0]


Subtree2: BLOCK 1 [source_file: testcode]
]
junit.framework.AssertionFailedError: 
Expected: function f(){b:try{throw 9;}finally{break b}return 1}
Result: function f(){b:try{throw 9;}finally{}return 1}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION f 1 [source_file: expected0]
            NAME f 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                LABEL 1 [source_file: expected0]
                    LABEL_NAME b 1 [source_file: expected0]
                    TRY 1 [source_file: expected0]
                        BLOCK 1 [source_file: expected0]
                            THROW 1 [source_file: expected0]
                                NUMBER 9.0 1 [source_file: expected0]
                        BLOCK 1 [source_file: expected0]
                        BLOCK 1 [source_file: expected0]
                            BREAK 1 [source_file: expected0]
                                LABEL_NAME b 1 [source_file: expected0]
                RETURN 1 [source_file: expected0]
                    NUMBER 1.0 1 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION f 1 [source_file: testcode]
            NAME f 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                LABEL 1 [source_file: testcode]
                    LABEL_NAME b 1 [source_file: testcode]
                    TRY 1 [source_file: testcode]
                        BLOCK 1 [source_file: testcode]
                            THROW 1 [source_file: testcode]
                                NUMBER 9.0 1 [source_file: testcode]
                        BLOCK 1 [source_file: testcode]
                        BLOCK 1 [source_file: testcode]
                RETURN 1 [source_file: testcode]
                    NUMBER 1.0 1 [source_file: testcode]


Subtree1: BLOCK 1 [source_file: expected0]
    BREAK 1 [source_file: expected0]
        LABEL_NAME b 1 [source_file: expected0]


Subtree2: BLOCK 1 [source_file: testcode]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:928)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:460)
~ testIssue4177428_continue(com.google.javascript.jscomp.UnreachableCodeEliminationTest)
[
Expected: f=function(){var action;a:do{var proto=null;try{proto=new Proto}finally{action=proto;continue a}}while(false);alert(action)}
Result: f=function(){var action;a:do{var proto=null;try{proto=new Proto}finally{action=proto}}while(false);alert(action)}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            ASSIGN 1 [source_file: expected0]
                NAME f 1 [source_file: expected0]
                FUNCTION  1 [source_file: expected0]
                    NAME  1 [source_file: expected0]
                    PARAM_LIST 1 [source_file: expected0]
                    BLOCK 1 [source_file: expected0]
                        VAR 2 [source_file: expected0]
                            NAME action 2 [source_file: expected0]
                        LABEL 3 [source_file: expected0]
                            LABEL_NAME a 3 [source_file: expected0]
                            DO 3 [source_file: expected0]
                                BLOCK 3 [source_file: expected0]
                                    VAR 4 [source_file: expected0]
                                        NAME proto 4 [source_file: expected0]
                                            NULL 4 [source_file: expected0]
                                    TRY 5 [source_file: expected0]
                                        BLOCK 5 [source_file: expected0]
                                            EXPR_RESULT 6 [source_file: expected0]
                                                ASSIGN 6 [source_file: expected0]
                                                    NAME proto 6 [source_file: expected0]
                                                    NEW 6 [source_file: expected0]
                                                        NAME Proto 6 [source_file: expected0]
                                        BLOCK 7 [source_file: expected0]
                                        BLOCK 7 [source_file: expected0]
                                            EXPR_RESULT 8 [source_file: expected0]
                                                ASSIGN 8 [source_file: expected0]
                                                    NAME action 8 [source_file: expected0]
                                                    NAME proto 8 [source_file: expected0]
                                            CONTINUE 9 [source_file: expected0]
                                                LABEL_NAME a 9 [source_file: expected0]
                                FALSE 11 [source_file: expected0]
                        EXPR_RESULT 12 [source_file: expected0]
                            CALL 12 [free_call: 1] [source_file: expected0]
                                NAME alert 12 [source_file: expected0]
                                NAME action 12 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        EXPR_RESULT 1 [source_file: testcode]
            ASSIGN 1 [source_file: testcode]
                NAME f 1 [source_file: testcode]
                FUNCTION  1 [source_file: testcode]
                    NAME  1 [source_file: testcode]
                    PARAM_LIST 1 [source_file: testcode]
                    BLOCK 1 [source_file: testcode]
                        VAR 2 [source_file: testcode]
                            NAME action 2 [source_file: testcode]
                        LABEL 3 [source_file: testcode]
                            LABEL_NAME a 3 [source_file: testcode]
                            DO 3 [source_file: testcode]
                                BLOCK 3 [source_file: testcode]
                                    VAR 4 [source_file: testcode]
                                        NAME proto 4 [source_file: testcode]
                                            NULL 4 [source_file: testcode]
                                    TRY 5 [source_file: testcode]
                                        BLOCK 5 [source_file: testcode]
                                            EXPR_RESULT 6 [source_file: testcode]
                                                ASSIGN 6 [source_file: testcode]
                                                    NAME proto 6 [source_file: testcode]
                                                    NEW 6 [source_file: testcode]
                                                        NAME Proto 6 [source_file: testcode]
                                        BLOCK 7 [source_file: testcode]
                                        BLOCK 7 [source_file: testcode]
                                            EXPR_RESULT 8 [source_file: testcode]
                                                ASSIGN 8 [source_file: testcode]
                                                    NAME action 8 [source_file: testcode]
                                                    NAME proto 8 [source_file: testcode]
                                FALSE 11 [source_file: testcode]
                        EXPR_RESULT 12 [source_file: testcode]
                            CALL 12 [free_call: 1] [source_file: testcode]
                                NAME alert 12 [source_file: testcode]
                                NAME action 12 [source_file: testcode]


Subtree1: BLOCK 7 [source_file: expected0]
    EXPR_RESULT 8 [source_file: expected0]
        ASSIGN 8 [source_file: expected0]
            NAME action 8 [source_file: expected0]
            NAME proto 8 [source_file: expected0]
    CONTINUE 9 [source_file: expected0]
        LABEL_NAME a 9 [source_file: expected0]


Subtree2: BLOCK 7 [source_file: testcode]
    EXPR_RESULT 8 [source_file: testcode]
        ASSIGN 8 [source_file: testcode]
            NAME action 8 [source_file: testcode]
            NAME proto 8 [source_file: testcode]
]
junit.framework.AssertionFailedError: 
Expected: f=function(){var action;a:do{var proto=null;try{proto=new Proto}finally{action=proto;continue a}}while(false);alert(action)}
Result: f=function(){var action;a:do{var proto=null;try{proto=new Proto}finally{action=proto}}while(false);alert(action)}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            ASSIGN 1 [source_file: expected0]
                NAME f 1 [source_file: expected0]
                FUNCTION  1 [source_file: expected0]
                    NAME  1 [source_file: expected0]
                    PARAM_LIST 1 [source_file: expected0]
                    BLOCK 1 [source_file: expected0]
                        VAR 2 [source_file: expected0]
                            NAME action 2 [source_file: expected0]
                        LABEL 3 [source_file: expected0]
                            LABEL_NAME a 3 [source_file: expected0]
                            DO 3 [source_file: expected0]
                                BLOCK 3 [source_file: expected0]
                                    VAR 4 [source_file: expected0]
                                        NAME proto 4 [source_file: expected0]
                                            NULL 4 [source_file: expected0]
                                    TRY 5 [source_file: expected0]
                                        BLOCK 5 [source_file: expected0]
                                            EXPR_RESULT 6 [source_file: expected0]
                                                ASSIGN 6 [source_file: expected0]
                                                    NAME proto 6 [source_file: expected0]
                                                    NEW 6 [source_file: expected0]
                                                        NAME Proto 6 [source_file: expected0]
                                        BLOCK 7 [source_file: expected0]
                                        BLOCK 7 [source_file: expected0]
                                            EXPR_RESULT 8 [source_file: expected0]
                                                ASSIGN 8 [source_file: expected0]
                                                    NAME action 8 [source_file: expected0]
                                                    NAME proto 8 [source_file: expected0]
                                            CONTINUE 9 [source_file: expected0]
                                                LABEL_NAME a 9 [source_file: expected0]
                                FALSE 11 [source_file: expected0]
                        EXPR_RESULT 12 [source_file: expected0]
                            CALL 12 [free_call: 1] [source_file: expected0]
                                NAME alert 12 [source_file: expected0]
                                NAME action 12 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        EXPR_RESULT 1 [source_file: testcode]
            ASSIGN 1 [source_file: testcode]
                NAME f 1 [source_file: testcode]
                FUNCTION  1 [source_file: testcode]
                    NAME  1 [source_file: testcode]
                    PARAM_LIST 1 [source_file: testcode]
                    BLOCK 1 [source_file: testcode]
                        VAR 2 [source_file: testcode]
                            NAME action 2 [source_file: testcode]
                        LABEL 3 [source_file: testcode]
                            LABEL_NAME a 3 [source_file: testcode]
                            DO 3 [source_file: testcode]
                                BLOCK 3 [source_file: testcode]
                                    VAR 4 [source_file: testcode]
                                        NAME proto 4 [source_file: testcode]
                                            NULL 4 [source_file: testcode]
                                    TRY 5 [source_file: testcode]
                                        BLOCK 5 [source_file: testcode]
                                            EXPR_RESULT 6 [source_file: testcode]
                                                ASSIGN 6 [source_file: testcode]
                                                    NAME proto 6 [source_file: testcode]
                                                    NEW 6 [source_file: testcode]
                                                        NAME Proto 6 [source_file: testcode]
                                        BLOCK 7 [source_file: testcode]
                                        BLOCK 7 [source_file: testcode]
                                            EXPR_RESULT 8 [source_file: testcode]
                                                ASSIGN 8 [source_file: testcode]
                                                    NAME action 8 [source_file: testcode]
                                                    NAME proto 8 [source_file: testcode]
                                FALSE 11 [source_file: testcode]
                        EXPR_RESULT 12 [source_file: testcode]
                            CALL 12 [free_call: 1] [source_file: testcode]
                                NAME alert 12 [source_file: testcode]
                                NAME action 12 [source_file: testcode]


Subtree1: BLOCK 7 [source_file: expected0]
    EXPR_RESULT 8 [source_file: expected0]
        ASSIGN 8 [source_file: expected0]
            NAME action 8 [source_file: expected0]
            NAME proto 8 [source_file: expected0]
    CONTINUE 9 [source_file: expected0]
        LABEL_NAME a 9 [source_file: expected0]


Subtree2: BLOCK 7 [source_file: testcode]
    EXPR_RESULT 8 [source_file: testcode]
        ASSIGN 8 [source_file: testcode]
            NAME action 8 [source_file: testcode]
            NAME proto 8 [source_file: testcode]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:928)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:460)
~ testDontRemoveBreakInTryFinallySwitch(com.google.javascript.jscomp.UnreachableCodeEliminationTest)
[
Expected: function f(){b:try{throw 9;}finally{switch(x){case 1:break b}}return 1}
Result: function f(){b:try{throw 9;}finally{switch(x){case 1:}}return 1}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION f 1 [source_file: expected0]
            NAME f 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                LABEL 1 [source_file: expected0]
                    LABEL_NAME b 1 [source_file: expected0]
                    TRY 1 [source_file: expected0]
                        BLOCK 1 [source_file: expected0]
                            THROW 1 [source_file: expected0]
                                NUMBER 9.0 1 [source_file: expected0]
                        BLOCK 1 [source_file: expected0]
                        BLOCK 1 [source_file: expected0]
                            SWITCH 1 [source_file: expected0]
                                NAME x 1 [source_file: expected0]
                                CASE 1 [source_file: expected0]
                                    NUMBER 1.0 1 [source_file: expected0]
                                    BLOCK 1 [synthetic: 1] [source_file: expected0]
                                        BREAK 1 [source_file: expected0]
                                            LABEL_NAME b 1 [source_file: expected0]
                RETURN 1 [source_file: expected0]
                    NUMBER 1.0 1 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION f 1 [source_file: testcode]
            NAME f 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                LABEL 1 [source_file: testcode]
                    LABEL_NAME b 1 [source_file: testcode]
                    TRY 1 [source_file: testcode]
                        BLOCK 1 [source_file: testcode]
                            THROW 1 [source_file: testcode]
                                NUMBER 9.0 1 [source_file: testcode]
                        BLOCK 1 [source_file: testcode]
                        BLOCK 1 [source_file: testcode]
                            SWITCH 1 [source_file: testcode]
                                NAME x 1 [source_file: testcode]
                                CASE 1 [source_file: testcode]
                                    NUMBER 1.0 1 [source_file: testcode]
                                    BLOCK 1 [synthetic: 1] [source_file: testcode]
                RETURN 1 [source_file: testcode]
                    NUMBER 1.0 1 [source_file: testcode]


Subtree1: BLOCK 1 [synthetic: 1] [source_file: expected0]
    BREAK 1 [source_file: expected0]
        LABEL_NAME b 1 [source_file: expected0]


Subtree2: BLOCK 1 [synthetic: 1] [source_file: testcode]
]
junit.framework.AssertionFailedError: 
Expected: function f(){b:try{throw 9;}finally{switch(x){case 1:break b}}return 1}
Result: function f(){b:try{throw 9;}finally{switch(x){case 1:}}return 1}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION f 1 [source_file: expected0]
            NAME f 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                LABEL 1 [source_file: expected0]
                    LABEL_NAME b 1 [source_file: expected0]
                    TRY 1 [source_file: expected0]
                        BLOCK 1 [source_file: expected0]
                            THROW 1 [source_file: expected0]
                                NUMBER 9.0 1 [source_file: expected0]
                        BLOCK 1 [source_file: expected0]
                        BLOCK 1 [source_file: expected0]
                            SWITCH 1 [source_file: expected0]
                                NAME x 1 [source_file: expected0]
                                CASE 1 [source_file: expected0]
                                    NUMBER 1.0 1 [source_file: expected0]
                                    BLOCK 1 [synthetic: 1] [source_file: expected0]
                                        BREAK 1 [source_file: expected0]
                                            LABEL_NAME b 1 [source_file: expected0]
                RETURN 1 [source_file: expected0]
                    NUMBER 1.0 1 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION f 1 [source_file: testcode]
            NAME f 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                LABEL 1 [source_file: testcode]
                    LABEL_NAME b 1 [source_file: testcode]
                    TRY 1 [source_file: testcode]
                        BLOCK 1 [source_file: testcode]
                            THROW 1 [source_file: testcode]
                                NUMBER 9.0 1 [source_file: testcode]
                        BLOCK 1 [source_file: testcode]
                        BLOCK 1 [source_file: testcode]
                            SWITCH 1 [source_file: testcode]
                                NAME x 1 [source_file: testcode]
                                CASE 1 [source_file: testcode]
                                    NUMBER 1.0 1 [source_file: testcode]
                                    BLOCK 1 [synthetic: 1] [source_file: testcode]
                RETURN 1 [source_file: testcode]
                    NUMBER 1.0 1 [source_file: testcode]


Subtree1: BLOCK 1 [synthetic: 1] [source_file: expected0]
    BREAK 1 [source_file: expected0]
        LABEL_NAME b 1 [source_file: expected0]


Subtree2: BLOCK 1 [synthetic: 1] [source_file: testcode]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:928)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:460)
~ testIssue4177428a(com.google.javascript.jscomp.UnreachableCodeEliminationTest)
[
Expected: f=function(){var action;a:{var proto=null;try{proto=new Proto}finally{action=proto;break a}}alert(action)}
Result: f=function(){var action;a:{var proto=null;try{proto=new Proto}finally{action=proto}}alert(action)}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            ASSIGN 1 [source_file: expected0]
                NAME f 1 [source_file: expected0]
                FUNCTION  1 [source_file: expected0]
                    NAME  1 [source_file: expected0]
                    PARAM_LIST 1 [source_file: expected0]
                    BLOCK 1 [source_file: expected0]
                        VAR 2 [source_file: expected0]
                            NAME action 2 [source_file: expected0]
                        LABEL 3 [source_file: expected0]
                            LABEL_NAME a 3 [source_file: expected0]
                            BLOCK 3 [source_file: expected0]
                                VAR 4 [source_file: expected0]
                                    NAME proto 4 [source_file: expected0]
                                        NULL 4 [source_file: expected0]
                                TRY 5 [source_file: expected0]
                                    BLOCK 5 [source_file: expected0]
                                        EXPR_RESULT 6 [source_file: expected0]
                                            ASSIGN 6 [source_file: expected0]
                                                NAME proto 6 [source_file: expected0]
                                                NEW 6 [source_file: expected0]
                                                    NAME Proto 6 [source_file: expected0]
                                    BLOCK 7 [source_file: expected0]
                                    BLOCK 7 [source_file: expected0]
                                        EXPR_RESULT 8 [source_file: expected0]
                                            ASSIGN 8 [source_file: expected0]
                                                NAME action 8 [source_file: expected0]
                                                NAME proto 8 [source_file: expected0]
                                        BREAK 9 [source_file: expected0]
                                            LABEL_NAME a 9 [source_file: expected0]
                        EXPR_RESULT 12 [source_file: expected0]
                            CALL 12 [free_call: 1] [source_file: expected0]
                                NAME alert 12 [source_file: expected0]
                                NAME action 12 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        EXPR_RESULT 1 [source_file: testcode]
            ASSIGN 1 [source_file: testcode]
                NAME f 1 [source_file: testcode]
                FUNCTION  1 [source_file: testcode]
                    NAME  1 [source_file: testcode]
                    PARAM_LIST 1 [source_file: testcode]
                    BLOCK 1 [source_file: testcode]
                        VAR 2 [source_file: testcode]
                            NAME action 2 [source_file: testcode]
                        LABEL 3 [source_file: testcode]
                            LABEL_NAME a 3 [source_file: testcode]
                            BLOCK 3 [source_file: testcode]
                                VAR 4 [source_file: testcode]
                                    NAME proto 4 [source_file: testcode]
                                        NULL 4 [source_file: testcode]
                                TRY 5 [source_file: testcode]
                                    BLOCK 5 [source_file: testcode]
                                        EXPR_RESULT 6 [source_file: testcode]
                                            ASSIGN 6 [source_file: testcode]
                                                NAME proto 6 [source_file: testcode]
                                                NEW 6 [source_file: testcode]
                                                    NAME Proto 6 [source_file: testcode]
                                    BLOCK 7 [source_file: testcode]
                                    BLOCK 7 [source_file: testcode]
                                        EXPR_RESULT 8 [source_file: testcode]
                                            ASSIGN 8 [source_file: testcode]
                                                NAME action 8 [source_file: testcode]
                                                NAME proto 8 [source_file: testcode]
                        EXPR_RESULT 12 [source_file: testcode]
                            CALL 12 [free_call: 1] [source_file: testcode]
                                NAME alert 12 [source_file: testcode]
                                NAME action 12 [source_file: testcode]


Subtree1: BLOCK 7 [source_file: expected0]
    EXPR_RESULT 8 [source_file: expected0]
        ASSIGN 8 [source_file: expected0]
            NAME action 8 [source_file: expected0]
            NAME proto 8 [source_file: expected0]
    BREAK 9 [source_file: expected0]
        LABEL_NAME a 9 [source_file: expected0]


Subtree2: BLOCK 7 [source_file: testcode]
    EXPR_RESULT 8 [source_file: testcode]
        ASSIGN 8 [source_file: testcode]
            NAME action 8 [source_file: testcode]
            NAME proto 8 [source_file: testcode]
]
junit.framework.AssertionFailedError: 
Expected: f=function(){var action;a:{var proto=null;try{proto=new Proto}finally{action=proto;break a}}alert(action)}
Result: f=function(){var action;a:{var proto=null;try{proto=new Proto}finally{action=proto}}alert(action)}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            ASSIGN 1 [source_file: expected0]
                NAME f 1 [source_file: expected0]
                FUNCTION  1 [source_file: expected0]
                    NAME  1 [source_file: expected0]
                    PARAM_LIST 1 [source_file: expected0]
                    BLOCK 1 [source_file: expected0]
                        VAR 2 [source_file: expected0]
                            NAME action 2 [source_file: expected0]
                        LABEL 3 [source_file: expected0]
                            LABEL_NAME a 3 [source_file: expected0]
                            BLOCK 3 [source_file: expected0]
                                VAR 4 [source_file: expected0]
                                    NAME proto 4 [source_file: expected0]
                                        NULL 4 [source_file: expected0]
                                TRY 5 [source_file: expected0]
                                    BLOCK 5 [source_file: expected0]
                                        EXPR_RESULT 6 [source_file: expected0]
                                            ASSIGN 6 [source_file: expected0]
                                                NAME proto 6 [source_file: expected0]
                                                NEW 6 [source_file: expected0]
                                                    NAME Proto 6 [source_file: expected0]
                                    BLOCK 7 [source_file: expected0]
                                    BLOCK 7 [source_file: expected0]
                                        EXPR_RESULT 8 [source_file: expected0]
                                            ASSIGN 8 [source_file: expected0]
                                                NAME action 8 [source_file: expected0]
                                                NAME proto 8 [source_file: expected0]
                                        BREAK 9 [source_file: expected0]
                                            LABEL_NAME a 9 [source_file: expected0]
                        EXPR_RESULT 12 [source_file: expected0]
                            CALL 12 [free_call: 1] [source_file: expected0]
                                NAME alert 12 [source_file: expected0]
                                NAME action 12 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        EXPR_RESULT 1 [source_file: testcode]
            ASSIGN 1 [source_file: testcode]
                NAME f 1 [source_file: testcode]
                FUNCTION  1 [source_file: testcode]
                    NAME  1 [source_file: testcode]
                    PARAM_LIST 1 [source_file: testcode]
                    BLOCK 1 [source_file: testcode]
                        VAR 2 [source_file: testcode]
                            NAME action 2 [source_file: testcode]
                        LABEL 3 [source_file: testcode]
                            LABEL_NAME a 3 [source_file: testcode]
                            BLOCK 3 [source_file: testcode]
                                VAR 4 [source_file: testcode]
                                    NAME proto 4 [source_file: testcode]
                                        NULL 4 [source_file: testcode]
                                TRY 5 [source_file: testcode]
                                    BLOCK 5 [source_file: testcode]
                                        EXPR_RESULT 6 [source_file: testcode]
                                            ASSIGN 6 [source_file: testcode]
                                                NAME proto 6 [source_file: testcode]
                                                NEW 6 [source_file: testcode]
                                                    NAME Proto 6 [source_file: testcode]
                                    BLOCK 7 [source_file: testcode]
                                    BLOCK 7 [source_file: testcode]
                                        EXPR_RESULT 8 [source_file: testcode]
                                            ASSIGN 8 [source_file: testcode]
                                                NAME action 8 [source_file: testcode]
                                                NAME proto 8 [source_file: testcode]
                        EXPR_RESULT 12 [source_file: testcode]
                            CALL 12 [free_call: 1] [source_file: testcode]
                                NAME alert 12 [source_file: testcode]
                                NAME action 12 [source_file: testcode]


Subtree1: BLOCK 7 [source_file: expected0]
    EXPR_RESULT 8 [source_file: expected0]
        ASSIGN 8 [source_file: expected0]
            NAME action 8 [source_file: expected0]
            NAME proto 8 [source_file: expected0]
    BREAK 9 [source_file: expected0]
        LABEL_NAME a 9 [source_file: expected0]


Subtree2: BLOCK 7 [source_file: testcode]
    EXPR_RESULT 8 [source_file: testcode]
        ASSIGN 8 [source_file: testcode]
            NAME action 8 [source_file: testcode]
            NAME proto 8 [source_file: testcode]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:928)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:460)
~ testIssue4177428c(com.google.javascript.jscomp.UnreachableCodeEliminationTest)
[
Expected: f=function(){var action;a:{var proto=null;try{}finally{try{proto=new Proto}finally{action=proto;break a}}}alert(action)}
Result: f=function(){var action;a:{var proto=null;try{}finally{try{proto=new Proto}finally{action=proto}}}alert(action)}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            ASSIGN 1 [source_file: expected0]
                NAME f 1 [source_file: expected0]
                FUNCTION  1 [source_file: expected0]
                    NAME  1 [source_file: expected0]
                    PARAM_LIST 1 [source_file: expected0]
                    BLOCK 1 [source_file: expected0]
                        VAR 2 [source_file: expected0]
                            NAME action 2 [source_file: expected0]
                        LABEL 3 [source_file: expected0]
                            LABEL_NAME a 3 [source_file: expected0]
                            BLOCK 3 [source_file: expected0]
                                VAR 4 [source_file: expected0]
                                    NAME proto 4 [source_file: expected0]
                                        NULL 4 [source_file: expected0]
                                TRY 5 [source_file: expected0]
                                    BLOCK 5 [source_file: expected0]
                                    BLOCK 6 [source_file: expected0]
                                    BLOCK 6 [source_file: expected0]
                                        TRY 7 [source_file: expected0]
                                            BLOCK 7 [source_file: expected0]
                                                EXPR_RESULT 8 [source_file: expected0]
                                                    ASSIGN 8 [source_file: expected0]
                                                        NAME proto 8 [source_file: expected0]
                                                        NEW 8 [source_file: expected0]
                                                            NAME Proto 8 [source_file: expected0]
                                            BLOCK 9 [source_file: expected0]
                                            BLOCK 9 [source_file: expected0]
                                                EXPR_RESULT 10 [source_file: expected0]
                                                    ASSIGN 10 [source_file: expected0]
                                                        NAME action 10 [source_file: expected0]
                                                        NAME proto 10 [source_file: expected0]
                                                BREAK 11 [source_file: expected0]
                                                    LABEL_NAME a 11 [source_file: expected0]
                        EXPR_RESULT 15 [source_file: expected0]
                            CALL 15 [free_call: 1] [source_file: expected0]
                                NAME alert 15 [source_file: expected0]
                                NAME action 15 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        EXPR_RESULT 1 [source_file: testcode]
            ASSIGN 1 [source_file: testcode]
                NAME f 1 [source_file: testcode]
                FUNCTION  1 [source_file: testcode]
                    NAME  1 [source_file: testcode]
                    PARAM_LIST 1 [source_file: testcode]
                    BLOCK 1 [source_file: testcode]
                        VAR 2 [source_file: testcode]
                            NAME action 2 [source_file: testcode]
                        LABEL 3 [source_file: testcode]
                            LABEL_NAME a 3 [source_file: testcode]
                            BLOCK 3 [source_file: testcode]
                                VAR 4 [source_file: testcode]
                                    NAME proto 4 [source_file: testcode]
                                        NULL 4 [source_file: testcode]
                                TRY 5 [source_file: testcode]
                                    BLOCK 5 [source_file: testcode]
                                    BLOCK 6 [source_file: testcode]
                                    BLOCK 6 [source_file: testcode]
                                        TRY 7 [source_file: testcode]
                                            BLOCK 7 [source_file: testcode]
                                                EXPR_RESULT 8 [source_file: testcode]
                                                    ASSIGN 8 [source_file: testcode]
                                                        NAME proto 8 [source_file: testcode]
                                                        NEW 8 [source_file: testcode]
                                                            NAME Proto 8 [source_file: testcode]
                                            BLOCK 9 [source_file: testcode]
                                            BLOCK 9 [source_file: testcode]
                                                EXPR_RESULT 10 [source_file: testcode]
                                                    ASSIGN 10 [source_file: testcode]
                                                        NAME action 10 [source_file: testcode]
                                                        NAME proto 10 [source_file: testcode]
                        EXPR_RESULT 15 [source_file: testcode]
                            CALL 15 [free_call: 1] [source_file: testcode]
                                NAME alert 15 [source_file: testcode]
                                NAME action 15 [source_file: testcode]


Subtree1: BLOCK 9 [source_file: expected0]
    EXPR_RESULT 10 [source_file: expected0]
        ASSIGN 10 [source_file: expected0]
            NAME action 10 [source_file: expected0]
            NAME proto 10 [source_file: expected0]
    BREAK 11 [source_file: expected0]
        LABEL_NAME a 11 [source_file: expected0]


Subtree2: BLOCK 9 [source_file: testcode]
    EXPR_RESULT 10 [source_file: testcode]
        ASSIGN 10 [source_file: testcode]
            NAME action 10 [source_file: testcode]
            NAME proto 10 [source_file: testcode]
]
junit.framework.AssertionFailedError: 
Expected: f=function(){var action;a:{var proto=null;try{}finally{try{proto=new Proto}finally{action=proto;break a}}}alert(action)}
Result: f=function(){var action;a:{var proto=null;try{}finally{try{proto=new Proto}finally{action=proto}}}alert(action)}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            ASSIGN 1 [source_file: expected0]
                NAME f 1 [source_file: expected0]
                FUNCTION  1 [source_file: expected0]
                    NAME  1 [source_file: expected0]
                    PARAM_LIST 1 [source_file: expected0]
                    BLOCK 1 [source_file: expected0]
                        VAR 2 [source_file: expected0]
                            NAME action 2 [source_file: expected0]
                        LABEL 3 [source_file: expected0]
                            LABEL_NAME a 3 [source_file: expected0]
                            BLOCK 3 [source_file: expected0]
                                VAR 4 [source_file: expected0]
                                    NAME proto 4 [source_file: expected0]
                                        NULL 4 [source_file: expected0]
                                TRY 5 [source_file: expected0]
                                    BLOCK 5 [source_file: expected0]
                                    BLOCK 6 [source_file: expected0]
                                    BLOCK 6 [source_file: expected0]
                                        TRY 7 [source_file: expected0]
                                            BLOCK 7 [source_file: expected0]
                                                EXPR_RESULT 8 [source_file: expected0]
                                                    ASSIGN 8 [source_file: expected0]
                                                        NAME proto 8 [source_file: expected0]
                                                        NEW 8 [source_file: expected0]
                                                            NAME Proto 8 [source_file: expected0]
                                            BLOCK 9 [source_file: expected0]
                                            BLOCK 9 [source_file: expected0]
                                                EXPR_RESULT 10 [source_file: expected0]
                                                    ASSIGN 10 [source_file: expected0]
                                                        NAME action 10 [source_file: expected0]
                                                        NAME proto 10 [source_file: expected0]
                                                BREAK 11 [source_file: expected0]
                                                    LABEL_NAME a 11 [source_file: expected0]
                        EXPR_RESULT 15 [source_file: expected0]
                            CALL 15 [free_call: 1] [source_file: expected0]
                                NAME alert 15 [source_file: expected0]
                                NAME action 15 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        EXPR_RESULT 1 [source_file: testcode]
            ASSIGN 1 [source_file: testcode]
                NAME f 1 [source_file: testcode]
                FUNCTION  1 [source_file: testcode]
                    NAME  1 [source_file: testcode]
                    PARAM_LIST 1 [source_file: testcode]
                    BLOCK 1 [source_file: testcode]
                        VAR 2 [source_file: testcode]
                            NAME action 2 [source_file: testcode]
                        LABEL 3 [source_file: testcode]
                            LABEL_NAME a 3 [source_file: testcode]
                            BLOCK 3 [source_file: testcode]
                                VAR 4 [source_file: testcode]
                                    NAME proto 4 [source_file: testcode]
                                        NULL 4 [source_file: testcode]
                                TRY 5 [source_file: testcode]
                                    BLOCK 5 [source_file: testcode]
                                    BLOCK 6 [source_file: testcode]
                                    BLOCK 6 [source_file: testcode]
                                        TRY 7 [source_file: testcode]
                                            BLOCK 7 [source_file: testcode]
                                                EXPR_RESULT 8 [source_file: testcode]
                                                    ASSIGN 8 [source_file: testcode]
                                                        NAME proto 8 [source_file: testcode]
                                                        NEW 8 [source_file: testcode]
                                                            NAME Proto 8 [source_file: testcode]
                                            BLOCK 9 [source_file: testcode]
                                            BLOCK 9 [source_file: testcode]
                                                EXPR_RESULT 10 [source_file: testcode]
                                                    ASSIGN 10 [source_file: testcode]
                                                        NAME action 10 [source_file: testcode]
                                                        NAME proto 10 [source_file: testcode]
                        EXPR_RESULT 15 [source_file: testcode]
                            CALL 15 [free_call: 1] [source_file: testcode]
                                NAME alert 15 [source_file: testcode]
                                NAME action 15 [source_file: testcode]


Subtree1: BLOCK 9 [source_file: expected0]
    EXPR_RESULT 10 [source_file: expected0]
        ASSIGN 10 [source_file: expected0]
            NAME action 10 [source_file: expected0]
            NAME proto 10 [source_file: expected0]
    BREAK 11 [source_file: expected0]
        LABEL_NAME a 11 [source_file: expected0]


Subtree2: BLOCK 9 [source_file: testcode]
    EXPR_RESULT 10 [source_file: testcode]
        ASSIGN 10 [source_file: testcode]
            NAME action 10 [source_file: testcode]
            NAME proto 10 [source_file: testcode]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:928)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:460)
~ testIssue4177428_return(com.google.javascript.jscomp.UnreachableCodeEliminationTest)
[
Expected: f=function(){var action;a:{var proto=null;try{proto=new Proto}finally{action=proto;return}}}
Result: f=function(){var action;a:{var proto=null;try{proto=new Proto}finally{action=proto}}}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            ASSIGN 1 [source_file: expected0]
                NAME f 1 [source_file: expected0]
                FUNCTION  1 [source_file: expected0]
                    NAME  1 [source_file: expected0]
                    PARAM_LIST 1 [source_file: expected0]
                    BLOCK 1 [source_file: expected0]
                        VAR 2 [source_file: expected0]
                            NAME action 2 [source_file: expected0]
                        LABEL 3 [source_file: expected0]
                            LABEL_NAME a 3 [source_file: expected0]
                            BLOCK 3 [source_file: expected0]
                                VAR 4 [source_file: expected0]
                                    NAME proto 4 [source_file: expected0]
                                        NULL 4 [source_file: expected0]
                                TRY 5 [source_file: expected0]
                                    BLOCK 5 [source_file: expected0]
                                        EXPR_RESULT 6 [source_file: expected0]
                                            ASSIGN 6 [source_file: expected0]
                                                NAME proto 6 [source_file: expected0]
                                                NEW 6 [source_file: expected0]
                                                    NAME Proto 6 [source_file: expected0]
                                    BLOCK 7 [source_file: expected0]
                                    BLOCK 7 [source_file: expected0]
                                        EXPR_RESULT 8 [source_file: expected0]
                                            ASSIGN 8 [source_file: expected0]
                                                NAME action 8 [source_file: expected0]
                                                NAME proto 8 [source_file: expected0]
                                        RETURN 9 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        EXPR_RESULT 1 [source_file: testcode]
            ASSIGN 1 [source_file: testcode]
                NAME f 1 [source_file: testcode]
                FUNCTION  1 [source_file: testcode]
                    NAME  1 [source_file: testcode]
                    PARAM_LIST 1 [source_file: testcode]
                    BLOCK 1 [source_file: testcode]
                        VAR 2 [source_file: testcode]
                            NAME action 2 [source_file: testcode]
                        LABEL 3 [source_file: testcode]
                            LABEL_NAME a 3 [source_file: testcode]
                            BLOCK 3 [source_file: testcode]
                                VAR 4 [source_file: testcode]
                                    NAME proto 4 [source_file: testcode]
                                        NULL 4 [source_file: testcode]
                                TRY 5 [source_file: testcode]
                                    BLOCK 5 [source_file: testcode]
                                        EXPR_RESULT 6 [source_file: testcode]
                                            ASSIGN 6 [source_file: testcode]
                                                NAME proto 6 [source_file: testcode]
                                                NEW 6 [source_file: testcode]
                                                    NAME Proto 6 [source_file: testcode]
                                    BLOCK 7 [source_file: testcode]
                                    BLOCK 7 [source_file: testcode]
                                        EXPR_RESULT 8 [source_file: testcode]
                                            ASSIGN 8 [source_file: testcode]
                                                NAME action 8 [source_file: testcode]
                                                NAME proto 8 [source_file: testcode]


Subtree1: BLOCK 7 [source_file: expected0]
    EXPR_RESULT 8 [source_file: expected0]
        ASSIGN 8 [source_file: expected0]
            NAME action 8 [source_file: expected0]
            NAME proto 8 [source_file: expected0]
    RETURN 9 [source_file: expected0]


Subtree2: BLOCK 7 [source_file: testcode]
    EXPR_RESULT 8 [source_file: testcode]
        ASSIGN 8 [source_file: testcode]
            NAME action 8 [source_file: testcode]
            NAME proto 8 [source_file: testcode]
]
junit.framework.AssertionFailedError: 
Expected: f=function(){var action;a:{var proto=null;try{proto=new Proto}finally{action=proto;return}}}
Result: f=function(){var action;a:{var proto=null;try{proto=new Proto}finally{action=proto}}}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            ASSIGN 1 [source_file: expected0]
                NAME f 1 [source_file: expected0]
                FUNCTION  1 [source_file: expected0]
                    NAME  1 [source_file: expected0]
                    PARAM_LIST 1 [source_file: expected0]
                    BLOCK 1 [source_file: expected0]
                        VAR 2 [source_file: expected0]
                            NAME action 2 [source_file: expected0]
                        LABEL 3 [source_file: expected0]
                            LABEL_NAME a 3 [source_file: expected0]
                            BLOCK 3 [source_file: expected0]
                                VAR 4 [source_file: expected0]
                                    NAME proto 4 [source_file: expected0]
                                        NULL 4 [source_file: expected0]
                                TRY 5 [source_file: expected0]
                                    BLOCK 5 [source_file: expected0]
                                        EXPR_RESULT 6 [source_file: expected0]
                                            ASSIGN 6 [source_file: expected0]
                                                NAME proto 6 [source_file: expected0]
                                                NEW 6 [source_file: expected0]
                                                    NAME Proto 6 [source_file: expected0]
                                    BLOCK 7 [source_file: expected0]
                                    BLOCK 7 [source_file: expected0]
                                        EXPR_RESULT 8 [source_file: expected0]
                                            ASSIGN 8 [source_file: expected0]
                                                NAME action 8 [source_file: expected0]
                                                NAME proto 8 [source_file: expected0]
                                        RETURN 9 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        EXPR_RESULT 1 [source_file: testcode]
            ASSIGN 1 [source_file: testcode]
                NAME f 1 [source_file: testcode]
                FUNCTION  1 [source_file: testcode]
                    NAME  1 [source_file: testcode]
                    PARAM_LIST 1 [source_file: testcode]
                    BLOCK 1 [source_file: testcode]
                        VAR 2 [source_file: testcode]
                            NAME action 2 [source_file: testcode]
                        LABEL 3 [source_file: testcode]
                            LABEL_NAME a 3 [source_file: testcode]
                            BLOCK 3 [source_file: testcode]
                                VAR 4 [source_file: testcode]
                                    NAME proto 4 [source_file: testcode]
                                        NULL 4 [source_file: testcode]
                                TRY 5 [source_file: testcode]
                                    BLOCK 5 [source_file: testcode]
                                        EXPR_RESULT 6 [source_file: testcode]
                                            ASSIGN 6 [source_file: testcode]
                                                NAME proto 6 [source_file: testcode]
                                                NEW 6 [source_file: testcode]
                                                    NAME Proto 6 [source_file: testcode]
                                    BLOCK 7 [source_file: testcode]
                                    BLOCK 7 [source_file: testcode]
                                        EXPR_RESULT 8 [source_file: testcode]
                                            ASSIGN 8 [source_file: testcode]
                                                NAME action 8 [source_file: testcode]
                                                NAME proto 8 [source_file: testcode]


Subtree1: BLOCK 7 [source_file: expected0]
    EXPR_RESULT 8 [source_file: expected0]
        ASSIGN 8 [source_file: expected0]
            NAME action 8 [source_file: expected0]
            NAME proto 8 [source_file: expected0]
    RETURN 9 [source_file: expected0]


Subtree2: BLOCK 7 [source_file: testcode]
    EXPR_RESULT 8 [source_file: testcode]
        ASSIGN 8 [source_file: testcode]
            NAME action 8 [source_file: testcode]
            NAME proto 8 [source_file: testcode]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:928)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:460)
~ testDontRemoveBreakInTryFinally(com.google.javascript.jscomp.UnreachableCodeEliminationTest)
[
Expected: function f(){b:try{throw 9;}finally{break b}return 1}
Result: function f(){b:try{throw 9;}finally{}return 1}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION f 1 [source_file: expected0]
            NAME f 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                LABEL 1 [source_file: expected0]
                    LABEL_NAME b 1 [source_file: expected0]
                    TRY 1 [source_file: expected0]
                        BLOCK 1 [source_file: expected0]
                            THROW 1 [source_file: expected0]
                                NUMBER 9.0 1 [source_file: expected0]
                        BLOCK 1 [source_file: expected0]
                        BLOCK 1 [source_file: expected0]
                            BREAK 1 [source_file: expected0]
                                LABEL_NAME b 1 [source_file: expected0]
                RETURN 1 [source_file: expected0]
                    NUMBER 1.0 1 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION f 1 [source_file: testcode]
            NAME f 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                LABEL 1 [source_file: testcode]
                    LABEL_NAME b 1 [source_file: testcode]
                    TRY 1 [source_file: testcode]
                        BLOCK 1 [source_file: testcode]
                            THROW 1 [source_file: testcode]
                                NUMBER 9.0 1 [source_file: testcode]
                        BLOCK 1 [source_file: testcode]
                        BLOCK 1 [source_file: testcode]
                RETURN 1 [source_file: testcode]
                    NUMBER 1.0 1 [source_file: testcode]


Subtree1: BLOCK 1 [source_file: expected0]
    BREAK 1 [source_file: expected0]
        LABEL_NAME b 1 [source_file: expected0]


Subtree2: BLOCK 1 [source_file: testcode]
]
junit.framework.AssertionFailedError: 
Expected: function f(){b:try{throw 9;}finally{break b}return 1}
Result: function f(){b:try{throw 9;}finally{}return 1}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION f 1 [source_file: expected0]
            NAME f 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                LABEL 1 [source_file: expected0]
                    LABEL_NAME b 1 [source_file: expected0]
                    TRY 1 [source_file: expected0]
                        BLOCK 1 [source_file: expected0]
                            THROW 1 [source_file: expected0]
                                NUMBER 9.0 1 [source_file: expected0]
                        BLOCK 1 [source_file: expected0]
                        BLOCK 1 [source_file: expected0]
                            BREAK 1 [source_file: expected0]
                                LABEL_NAME b 1 [source_file: expected0]
                RETURN 1 [source_file: expected0]
                    NUMBER 1.0 1 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION f 1 [source_file: testcode]
            NAME f 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                LABEL 1 [source_file: testcode]
                    LABEL_NAME b 1 [source_file: testcode]
                    TRY 1 [source_file: testcode]
                        BLOCK 1 [source_file: testcode]
                            THROW 1 [source_file: testcode]
                                NUMBER 9.0 1 [source_file: testcode]
                        BLOCK 1 [source_file: testcode]
                        BLOCK 1 [source_file: testcode]
                RETURN 1 [source_file: testcode]
                    NUMBER 1.0 1 [source_file: testcode]


Subtree1: BLOCK 1 [source_file: expected0]
    BREAK 1 [source_file: expected0]
        LABEL_NAME b 1 [source_file: expected0]


Subtree2: BLOCK 1 [source_file: testcode]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:928)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:460)
~ testIssue4177428_continue(com.google.javascript.jscomp.UnreachableCodeEliminationTest)
[
Expected: f=function(){var action;a:do{var proto=null;try{proto=new Proto}finally{action=proto;continue a}}while(false);alert(action)}
Result: f=function(){var action;a:do{var proto=null;try{proto=new Proto}finally{action=proto}}while(false);alert(action)}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            ASSIGN 1 [source_file: expected0]
                NAME f 1 [source_file: expected0]
                FUNCTION  1 [source_file: expected0]
                    NAME  1 [source_file: expected0]
                    PARAM_LIST 1 [source_file: expected0]
                    BLOCK 1 [source_file: expected0]
                        VAR 2 [source_file: expected0]
                            NAME action 2 [source_file: expected0]
                        LABEL 3 [source_file: expected0]
                            LABEL_NAME a 3 [source_file: expected0]
                            DO 3 [source_file: expected0]
                                BLOCK 3 [source_file: expected0]
                                    VAR 4 [source_file: expected0]
                                        NAME proto 4 [source_file: expected0]
                                            NULL 4 [source_file: expected0]
                                    TRY 5 [source_file: expected0]
                                        BLOCK 5 [source_file: expected0]
                                            EXPR_RESULT 6 [source_file: expected0]
                                                ASSIGN 6 [source_file: expected0]
                                                    NAME proto 6 [source_file: expected0]
                                                    NEW 6 [source_file: expected0]
                                                        NAME Proto 6 [source_file: expected0]
                                        BLOCK 7 [source_file: expected0]
                                        BLOCK 7 [source_file: expected0]
                                            EXPR_RESULT 8 [source_file: expected0]
                                                ASSIGN 8 [source_file: expected0]
                                                    NAME action 8 [source_file: expected0]
                                                    NAME proto 8 [source_file: expected0]
                                            CONTINUE 9 [source_file: expected0]
                                                LABEL_NAME a 9 [source_file: expected0]
                                FALSE 11 [source_file: expected0]
                        EXPR_RESULT 12 [source_file: expected0]
                            CALL 12 [free_call: 1] [source_file: expected0]
                                NAME alert 12 [source_file: expected0]
                                NAME action 12 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        EXPR_RESULT 1 [source_file: testcode]
            ASSIGN 1 [source_file: testcode]
                NAME f 1 [source_file: testcode]
                FUNCTION  1 [source_file: testcode]
                    NAME  1 [source_file: testcode]
                    PARAM_LIST 1 [source_file: testcode]
                    BLOCK 1 [source_file: testcode]
                        VAR 2 [source_file: testcode]
                            NAME action 2 [source_file: testcode]
                        LABEL 3 [source_file: testcode]
                            LABEL_NAME a 3 [source_file: testcode]
                            DO 3 [source_file: testcode]
                                BLOCK 3 [source_file: testcode]
                                    VAR 4 [source_file: testcode]
                                        NAME proto 4 [source_file: testcode]
                                            NULL 4 [source_file: testcode]
                                    TRY 5 [source_file: testcode]
                                        BLOCK 5 [source_file: testcode]
                                            EXPR_RESULT 6 [source_file: testcode]
                                                ASSIGN 6 [source_file: testcode]
                                                    NAME proto 6 [source_file: testcode]
                                                    NEW 6 [source_file: testcode]
                                                        NAME Proto 6 [source_file: testcode]
                                        BLOCK 7 [source_file: testcode]
                                        BLOCK 7 [source_file: testcode]
                                            EXPR_RESULT 8 [source_file: testcode]
                                                ASSIGN 8 [source_file: testcode]
                                                    NAME action 8 [source_file: testcode]
                                                    NAME proto 8 [source_file: testcode]
                                FALSE 11 [source_file: testcode]
                        EXPR_RESULT 12 [source_file: testcode]
                            CALL 12 [free_call: 1] [source_file: testcode]
                                NAME alert 12 [source_file: testcode]
                                NAME action 12 [source_file: testcode]


Subtree1: BLOCK 7 [source_file: expected0]
    EXPR_RESULT 8 [source_file: expected0]
        ASSIGN 8 [source_file: expected0]
            NAME action 8 [source_file: expected0]
            NAME proto 8 [source_file: expected0]
    CONTINUE 9 [source_file: expected0]
        LABEL_NAME a 9 [source_file: expected0]


Subtree2: BLOCK 7 [source_file: testcode]
    EXPR_RESULT 8 [source_file: testcode]
        ASSIGN 8 [source_file: testcode]
            NAME action 8 [source_file: testcode]
            NAME proto 8 [source_file: testcode]
]
junit.framework.AssertionFailedError: 
Expected: f=function(){var action;a:do{var proto=null;try{proto=new Proto}finally{action=proto;continue a}}while(false);alert(action)}
Result: f=function(){var action;a:do{var proto=null;try{proto=new Proto}finally{action=proto}}while(false);alert(action)}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            ASSIGN 1 [source_file: expected0]
                NAME f 1 [source_file: expected0]
                FUNCTION  1 [source_file: expected0]
                    NAME  1 [source_file: expected0]
                    PARAM_LIST 1 [source_file: expected0]
                    BLOCK 1 [source_file: expected0]
                        VAR 2 [source_file: expected0]
                            NAME action 2 [source_file: expected0]
                        LABEL 3 [source_file: expected0]
                            LABEL_NAME a 3 [source_file: expected0]
                            DO 3 [source_file: expected0]
                                BLOCK 3 [source_file: expected0]
                                    VAR 4 [source_file: expected0]
                                        NAME proto 4 [source_file: expected0]
                                            NULL 4 [source_file: expected0]
                                    TRY 5 [source_file: expected0]
                                        BLOCK 5 [source_file: expected0]
                                            EXPR_RESULT 6 [source_file: expected0]
                                                ASSIGN 6 [source_file: expected0]
                                                    NAME proto 6 [source_file: expected0]
                                                    NEW 6 [source_file: expected0]
                                                        NAME Proto 6 [source_file: expected0]
                                        BLOCK 7 [source_file: expected0]
                                        BLOCK 7 [source_file: expected0]
                                            EXPR_RESULT 8 [source_file: expected0]
                                                ASSIGN 8 [source_file: expected0]
                                                    NAME action 8 [source_file: expected0]
                                                    NAME proto 8 [source_file: expected0]
                                            CONTINUE 9 [source_file: expected0]
                                                LABEL_NAME a 9 [source_file: expected0]
                                FALSE 11 [source_file: expected0]
                        EXPR_RESULT 12 [source_file: expected0]
                            CALL 12 [free_call: 1] [source_file: expected0]
                                NAME alert 12 [source_file: expected0]
                                NAME action 12 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        EXPR_RESULT 1 [source_file: testcode]
            ASSIGN 1 [source_file: testcode]
                NAME f 1 [source_file: testcode]
                FUNCTION  1 [source_file: testcode]
                    NAME  1 [source_file: testcode]
                    PARAM_LIST 1 [source_file: testcode]
                    BLOCK 1 [source_file: testcode]
                        VAR 2 [source_file: testcode]
                            NAME action 2 [source_file: testcode]
                        LABEL 3 [source_file: testcode]
                            LABEL_NAME a 3 [source_file: testcode]
                            DO 3 [source_file: testcode]
                                BLOCK 3 [source_file: testcode]
                                    VAR 4 [source_file: testcode]
                                        NAME proto 4 [source_file: testcode]
                                            NULL 4 [source_file: testcode]
                                    TRY 5 [source_file: testcode]
                                        BLOCK 5 [source_file: testcode]
                                            EXPR_RESULT 6 [source_file: testcode]
                                                ASSIGN 6 [source_file: testcode]
                                                    NAME proto 6 [source_file: testcode]
                                                    NEW 6 [source_file: testcode]
                                                        NAME Proto 6 [source_file: testcode]
                                        BLOCK 7 [source_file: testcode]
                                        BLOCK 7 [source_file: testcode]
                                            EXPR_RESULT 8 [source_file: testcode]
                                                ASSIGN 8 [source_file: testcode]
                                                    NAME action 8 [source_file: testcode]
                                                    NAME proto 8 [source_file: testcode]
                                FALSE 11 [source_file: testcode]
                        EXPR_RESULT 12 [source_file: testcode]
                            CALL 12 [free_call: 1] [source_file: testcode]
                                NAME alert 12 [source_file: testcode]
                                NAME action 12 [source_file: testcode]


Subtree1: BLOCK 7 [source_file: expected0]
    EXPR_RESULT 8 [source_file: expected0]
        ASSIGN 8 [source_file: expected0]
            NAME action 8 [source_file: expected0]
            NAME proto 8 [source_file: expected0]
    CONTINUE 9 [source_file: expected0]
        LABEL_NAME a 9 [source_file: expected0]


Subtree2: BLOCK 7 [source_file: testcode]
    EXPR_RESULT 8 [source_file: testcode]
        ASSIGN 8 [source_file: testcode]
            NAME action 8 [source_file: testcode]
            NAME proto 8 [source_file: testcode]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:928)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:460)
~ testDontRemoveBreakInTryFinallySwitch(com.google.javascript.jscomp.UnreachableCodeEliminationTest)
[
Expected: function f(){b:try{throw 9;}finally{switch(x){case 1:break b}}return 1}
Result: function f(){b:try{throw 9;}finally{switch(x){case 1:}}return 1}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION f 1 [source_file: expected0]
            NAME f 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                LABEL 1 [source_file: expected0]
                    LABEL_NAME b 1 [source_file: expected0]
                    TRY 1 [source_file: expected0]
                        BLOCK 1 [source_file: expected0]
                            THROW 1 [source_file: expected0]
                                NUMBER 9.0 1 [source_file: expected0]
                        BLOCK 1 [source_file: expected0]
                        BLOCK 1 [source_file: expected0]
                            SWITCH 1 [source_file: expected0]
                                NAME x 1 [source_file: expected0]
                                CASE 1 [source_file: expected0]
                                    NUMBER 1.0 1 [source_file: expected0]
                                    BLOCK 1 [synthetic: 1] [source_file: expected0]
                                        BREAK 1 [source_file: expected0]
                                            LABEL_NAME b 1 [source_file: expected0]
                RETURN 1 [source_file: expected0]
                    NUMBER 1.0 1 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION f 1 [source_file: testcode]
            NAME f 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                LABEL 1 [source_file: testcode]
                    LABEL_NAME b 1 [source_file: testcode]
                    TRY 1 [source_file: testcode]
                        BLOCK 1 [source_file: testcode]
                            THROW 1 [source_file: testcode]
                                NUMBER 9.0 1 [source_file: testcode]
                        BLOCK 1 [source_file: testcode]
                        BLOCK 1 [source_file: testcode]
                            SWITCH 1 [source_file: testcode]
                                NAME x 1 [source_file: testcode]
                                CASE 1 [source_file: testcode]
                                    NUMBER 1.0 1 [source_file: testcode]
                                    BLOCK 1 [synthetic: 1] [source_file: testcode]
                RETURN 1 [source_file: testcode]
                    NUMBER 1.0 1 [source_file: testcode]


Subtree1: BLOCK 1 [synthetic: 1] [source_file: expected0]
    BREAK 1 [source_file: expected0]
        LABEL_NAME b 1 [source_file: expected0]


Subtree2: BLOCK 1 [synthetic: 1] [source_file: testcode]
]
junit.framework.AssertionFailedError: 
Expected: function f(){b:try{throw 9;}finally{switch(x){case 1:break b}}return 1}
Result: function f(){b:try{throw 9;}finally{switch(x){case 1:}}return 1}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION f 1 [source_file: expected0]
            NAME f 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                LABEL 1 [source_file: expected0]
                    LABEL_NAME b 1 [source_file: expected0]
                    TRY 1 [source_file: expected0]
                        BLOCK 1 [source_file: expected0]
                            THROW 1 [source_file: expected0]
                                NUMBER 9.0 1 [source_file: expected0]
                        BLOCK 1 [source_file: expected0]
                        BLOCK 1 [source_file: expected0]
                            SWITCH 1 [source_file: expected0]
                                NAME x 1 [source_file: expected0]
                                CASE 1 [source_file: expected0]
                                    NUMBER 1.0 1 [source_file: expected0]
                                    BLOCK 1 [synthetic: 1] [source_file: expected0]
                                        BREAK 1 [source_file: expected0]
                                            LABEL_NAME b 1 [source_file: expected0]
                RETURN 1 [source_file: expected0]
                    NUMBER 1.0 1 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION f 1 [source_file: testcode]
            NAME f 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                LABEL 1 [source_file: testcode]
                    LABEL_NAME b 1 [source_file: testcode]
                    TRY 1 [source_file: testcode]
                        BLOCK 1 [source_file: testcode]
                            THROW 1 [source_file: testcode]
                                NUMBER 9.0 1 [source_file: testcode]
                        BLOCK 1 [source_file: testcode]
                        BLOCK 1 [source_file: testcode]
                            SWITCH 1 [source_file: testcode]
                                NAME x 1 [source_file: testcode]
                                CASE 1 [source_file: testcode]
                                    NUMBER 1.0 1 [source_file: testcode]
                                    BLOCK 1 [synthetic: 1] [source_file: testcode]
                RETURN 1 [source_file: testcode]
                    NUMBER 1.0 1 [source_file: testcode]


Subtree1: BLOCK 1 [synthetic: 1] [source_file: expected0]
    BREAK 1 [source_file: expected0]
        LABEL_NAME b 1 [source_file: expected0]


Subtree2: BLOCK 1 [synthetic: 1] [source_file: testcode]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:928)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:460)
~ testIssue4177428a(com.google.javascript.jscomp.UnreachableCodeEliminationTest)
[
Expected: f=function(){var action;a:{var proto=null;try{proto=new Proto}finally{action=proto;break a}}alert(action)}
Result: f=function(){var action;a:{var proto=null;try{proto=new Proto}finally{action=proto}}alert(action)}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            ASSIGN 1 [source_file: expected0]
                NAME f 1 [source_file: expected0]
                FUNCTION  1 [source_file: expected0]
                    NAME  1 [source_file: expected0]
                    PARAM_LIST 1 [source_file: expected0]
                    BLOCK 1 [source_file: expected0]
                        VAR 2 [source_file: expected0]
                            NAME action 2 [source_file: expected0]
                        LABEL 3 [source_file: expected0]
                            LABEL_NAME a 3 [source_file: expected0]
                            BLOCK 3 [source_file: expected0]
                                VAR 4 [source_file: expected0]
                                    NAME proto 4 [source_file: expected0]
                                        NULL 4 [source_file: expected0]
                                TRY 5 [source_file: expected0]
                                    BLOCK 5 [source_file: expected0]
                                        EXPR_RESULT 6 [source_file: expected0]
                                            ASSIGN 6 [source_file: expected0]
                                                NAME proto 6 [source_file: expected0]
                                                NEW 6 [source_file: expected0]
                                                    NAME Proto 6 [source_file: expected0]
                                    BLOCK 7 [source_file: expected0]
                                    BLOCK 7 [source_file: expected0]
                                        EXPR_RESULT 8 [source_file: expected0]
                                            ASSIGN 8 [source_file: expected0]
                                                NAME action 8 [source_file: expected0]
                                                NAME proto 8 [source_file: expected0]
                                        BREAK 9 [source_file: expected0]
                                            LABEL_NAME a 9 [source_file: expected0]
                        EXPR_RESULT 12 [source_file: expected0]
                            CALL 12 [free_call: 1] [source_file: expected0]
                                NAME alert 12 [source_file: expected0]
                                NAME action 12 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        EXPR_RESULT 1 [source_file: testcode]
            ASSIGN 1 [source_file: testcode]
                NAME f 1 [source_file: testcode]
                FUNCTION  1 [source_file: testcode]
                    NAME  1 [source_file: testcode]
                    PARAM_LIST 1 [source_file: testcode]
                    BLOCK 1 [source_file: testcode]
                        VAR 2 [source_file: testcode]
                            NAME action 2 [source_file: testcode]
                        LABEL 3 [source_file: testcode]
                            LABEL_NAME a 3 [source_file: testcode]
                            BLOCK 3 [source_file: testcode]
                                VAR 4 [source_file: testcode]
                                    NAME proto 4 [source_file: testcode]
                                        NULL 4 [source_file: testcode]
                                TRY 5 [source_file: testcode]
                                    BLOCK 5 [source_file: testcode]
                                        EXPR_RESULT 6 [source_file: testcode]
                                            ASSIGN 6 [source_file: testcode]
                                                NAME proto 6 [source_file: testcode]
                                                NEW 6 [source_file: testcode]
                                                    NAME Proto 6 [source_file: testcode]
                                    BLOCK 7 [source_file: testcode]
                                    BLOCK 7 [source_file: testcode]
                                        EXPR_RESULT 8 [source_file: testcode]
                                            ASSIGN 8 [source_file: testcode]
                                                NAME action 8 [source_file: testcode]
                                                NAME proto 8 [source_file: testcode]
                        EXPR_RESULT 12 [source_file: testcode]
                            CALL 12 [free_call: 1] [source_file: testcode]
                                NAME alert 12 [source_file: testcode]
                                NAME action 12 [source_file: testcode]


Subtree1: BLOCK 7 [source_file: expected0]
    EXPR_RESULT 8 [source_file: expected0]
        ASSIGN 8 [source_file: expected0]
            NAME action 8 [source_file: expected0]
            NAME proto 8 [source_file: expected0]
    BREAK 9 [source_file: expected0]
        LABEL_NAME a 9 [source_file: expected0]


Subtree2: BLOCK 7 [source_file: testcode]
    EXPR_RESULT 8 [source_file: testcode]
        ASSIGN 8 [source_file: testcode]
            NAME action 8 [source_file: testcode]
            NAME proto 8 [source_file: testcode]
]
junit.framework.AssertionFailedError: 
Expected: f=function(){var action;a:{var proto=null;try{proto=new Proto}finally{action=proto;break a}}alert(action)}
Result: f=function(){var action;a:{var proto=null;try{proto=new Proto}finally{action=proto}}alert(action)}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            ASSIGN 1 [source_file: expected0]
                NAME f 1 [source_file: expected0]
                FUNCTION  1 [source_file: expected0]
                    NAME  1 [source_file: expected0]
                    PARAM_LIST 1 [source_file: expected0]
                    BLOCK 1 [source_file: expected0]
                        VAR 2 [source_file: expected0]
                            NAME action 2 [source_file: expected0]
                        LABEL 3 [source_file: expected0]
                            LABEL_NAME a 3 [source_file: expected0]
                            BLOCK 3 [source_file: expected0]
                                VAR 4 [source_file: expected0]
                                    NAME proto 4 [source_file: expected0]
                                        NULL 4 [source_file: expected0]
                                TRY 5 [source_file: expected0]
                                    BLOCK 5 [source_file: expected0]
                                        EXPR_RESULT 6 [source_file: expected0]
                                            ASSIGN 6 [source_file: expected0]
                                                NAME proto 6 [source_file: expected0]
                                                NEW 6 [source_file: expected0]
                                                    NAME Proto 6 [source_file: expected0]
                                    BLOCK 7 [source_file: expected0]
                                    BLOCK 7 [source_file: expected0]
                                        EXPR_RESULT 8 [source_file: expected0]
                                            ASSIGN 8 [source_file: expected0]
                                                NAME action 8 [source_file: expected0]
                                                NAME proto 8 [source_file: expected0]
                                        BREAK 9 [source_file: expected0]
                                            LABEL_NAME a 9 [source_file: expected0]
                        EXPR_RESULT 12 [source_file: expected0]
                            CALL 12 [free_call: 1] [source_file: expected0]
                                NAME alert 12 [source_file: expected0]
                                NAME action 12 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        EXPR_RESULT 1 [source_file: testcode]
            ASSIGN 1 [source_file: testcode]
                NAME f 1 [source_file: testcode]
                FUNCTION  1 [source_file: testcode]
                    NAME  1 [source_file: testcode]
                    PARAM_LIST 1 [source_file: testcode]
                    BLOCK 1 [source_file: testcode]
                        VAR 2 [source_file: testcode]
                            NAME action 2 [source_file: testcode]
                        LABEL 3 [source_file: testcode]
                            LABEL_NAME a 3 [source_file: testcode]
                            BLOCK 3 [source_file: testcode]
                                VAR 4 [source_file: testcode]
                                    NAME proto 4 [source_file: testcode]
                                        NULL 4 [source_file: testcode]
                                TRY 5 [source_file: testcode]
                                    BLOCK 5 [source_file: testcode]
                                        EXPR_RESULT 6 [source_file: testcode]
                                            ASSIGN 6 [source_file: testcode]
                                                NAME proto 6 [source_file: testcode]
                                                NEW 6 [source_file: testcode]
                                                    NAME Proto 6 [source_file: testcode]
                                    BLOCK 7 [source_file: testcode]
                                    BLOCK 7 [source_file: testcode]
                                        EXPR_RESULT 8 [source_file: testcode]
                                            ASSIGN 8 [source_file: testcode]
                                                NAME action 8 [source_file: testcode]
                                                NAME proto 8 [source_file: testcode]
                        EXPR_RESULT 12 [source_file: testcode]
                            CALL 12 [free_call: 1] [source_file: testcode]
                                NAME alert 12 [source_file: testcode]
                                NAME action 12 [source_file: testcode]


Subtree1: BLOCK 7 [source_file: expected0]
    EXPR_RESULT 8 [source_file: expected0]
        ASSIGN 8 [source_file: expected0]
            NAME action 8 [source_file: expected0]
            NAME proto 8 [source_file: expected0]
    BREAK 9 [source_file: expected0]
        LABEL_NAME a 9 [source_file: expected0]


Subtree2: BLOCK 7 [source_file: testcode]
    EXPR_RESULT 8 [source_file: testcode]
        ASSIGN 8 [source_file: testcode]
            NAME action 8 [source_file: testcode]
            NAME proto 8 [source_file: testcode]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:928)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:460)
~ testIssue4177428c(com.google.javascript.jscomp.UnreachableCodeEliminationTest)
[
Expected: f=function(){var action;a:{var proto=null;try{}finally{try{proto=new Proto}finally{action=proto;break a}}}alert(action)}
Result: f=function(){var action;a:{var proto=null;try{}finally{try{proto=new Proto}finally{action=proto}}}alert(action)}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            ASSIGN 1 [source_file: expected0]
                NAME f 1 [source_file: expected0]
                FUNCTION  1 [source_file: expected0]
                    NAME  1 [source_file: expected0]
                    PARAM_LIST 1 [source_file: expected0]
                    BLOCK 1 [source_file: expected0]
                        VAR 2 [source_file: expected0]
                            NAME action 2 [source_file: expected0]
                        LABEL 3 [source_file: expected0]
                            LABEL_NAME a 3 [source_file: expected0]
                            BLOCK 3 [source_file: expected0]
                                VAR 4 [source_file: expected0]
                                    NAME proto 4 [source_file: expected0]
                                        NULL 4 [source_file: expected0]
                                TRY 5 [source_file: expected0]
                                    BLOCK 5 [source_file: expected0]
                                    BLOCK 6 [source_file: expected0]
                                    BLOCK 6 [source_file: expected0]
                                        TRY 7 [source_file: expected0]
                                            BLOCK 7 [source_file: expected0]
                                                EXPR_RESULT 8 [source_file: expected0]
                                                    ASSIGN 8 [source_file: expected0]
                                                        NAME proto 8 [source_file: expected0]
                                                        NEW 8 [source_file: expected0]
                                                            NAME Proto 8 [source_file: expected0]
                                            BLOCK 9 [source_file: expected0]
                                            BLOCK 9 [source_file: expected0]
                                                EXPR_RESULT 10 [source_file: expected0]
                                                    ASSIGN 10 [source_file: expected0]
                                                        NAME action 10 [source_file: expected0]
                                                        NAME proto 10 [source_file: expected0]
                                                BREAK 11 [source_file: expected0]
                                                    LABEL_NAME a 11 [source_file: expected0]
                        EXPR_RESULT 15 [source_file: expected0]
                            CALL 15 [free_call: 1] [source_file: expected0]
                                NAME alert 15 [source_file: expected0]
                                NAME action 15 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        EXPR_RESULT 1 [source_file: testcode]
            ASSIGN 1 [source_file: testcode]
                NAME f 1 [source_file: testcode]
                FUNCTION  1 [source_file: testcode]
                    NAME  1 [source_file: testcode]
                    PARAM_LIST 1 [source_file: testcode]
                    BLOCK 1 [source_file: testcode]
                        VAR 2 [source_file: testcode]
                            NAME action 2 [source_file: testcode]
                        LABEL 3 [source_file: testcode]
                            LABEL_NAME a 3 [source_file: testcode]
                            BLOCK 3 [source_file: testcode]
                                VAR 4 [source_file: testcode]
                                    NAME proto 4 [source_file: testcode]
                                        NULL 4 [source_file: testcode]
                                TRY 5 [source_file: testcode]
                                    BLOCK 5 [source_file: testcode]
                                    BLOCK 6 [source_file: testcode]
                                    BLOCK 6 [source_file: testcode]
                                        TRY 7 [source_file: testcode]
                                            BLOCK 7 [source_file: testcode]
                                                EXPR_RESULT 8 [source_file: testcode]
                                                    ASSIGN 8 [source_file: testcode]
                                                        NAME proto 8 [source_file: testcode]
                                                        NEW 8 [source_file: testcode]
                                                            NAME Proto 8 [source_file: testcode]
                                            BLOCK 9 [source_file: testcode]
                                            BLOCK 9 [source_file: testcode]
                                                EXPR_RESULT 10 [source_file: testcode]
                                                    ASSIGN 10 [source_file: testcode]
                                                        NAME action 10 [source_file: testcode]
                                                        NAME proto 10 [source_file: testcode]
                        EXPR_RESULT 15 [source_file: testcode]
                            CALL 15 [free_call: 1] [source_file: testcode]
                                NAME alert 15 [source_file: testcode]
                                NAME action 15 [source_file: testcode]


Subtree1: BLOCK 9 [source_file: expected0]
    EXPR_RESULT 10 [source_file: expected0]
        ASSIGN 10 [source_file: expected0]
            NAME action 10 [source_file: expected0]
            NAME proto 10 [source_file: expected0]
    BREAK 11 [source_file: expected0]
        LABEL_NAME a 11 [source_file: expected0]


Subtree2: BLOCK 9 [source_file: testcode]
    EXPR_RESULT 10 [source_file: testcode]
        ASSIGN 10 [source_file: testcode]
            NAME action 10 [source_file: testcode]
            NAME proto 10 [source_file: testcode]
]
junit.framework.AssertionFailedError: 
Expected: f=function(){var action;a:{var proto=null;try{}finally{try{proto=new Proto}finally{action=proto;break a}}}alert(action)}
Result: f=function(){var action;a:{var proto=null;try{}finally{try{proto=new Proto}finally{action=proto}}}alert(action)}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            ASSIGN 1 [source_file: expected0]
                NAME f 1 [source_file: expected0]
                FUNCTION  1 [source_file: expected0]
                    NAME  1 [source_file: expected0]
                    PARAM_LIST 1 [source_file: expected0]
                    BLOCK 1 [source_file: expected0]
                        VAR 2 [source_file: expected0]
                            NAME action 2 [source_file: expected0]
                        LABEL 3 [source_file: expected0]
                            LABEL_NAME a 3 [source_file: expected0]
                            BLOCK 3 [source_file: expected0]
                                VAR 4 [source_file: expected0]
                                    NAME proto 4 [source_file: expected0]
                                        NULL 4 [source_file: expected0]
                                TRY 5 [source_file: expected0]
                                    BLOCK 5 [source_file: expected0]
                                    BLOCK 6 [source_file: expected0]
                                    BLOCK 6 [source_file: expected0]
                                        TRY 7 [source_file: expected0]
                                            BLOCK 7 [source_file: expected0]
                                                EXPR_RESULT 8 [source_file: expected0]
                                                    ASSIGN 8 [source_file: expected0]
                                                        NAME proto 8 [source_file: expected0]
                                                        NEW 8 [source_file: expected0]
                                                            NAME Proto 8 [source_file: expected0]
                                            BLOCK 9 [source_file: expected0]
                                            BLOCK 9 [source_file: expected0]
                                                EXPR_RESULT 10 [source_file: expected0]
                                                    ASSIGN 10 [source_file: expected0]
                                                        NAME action 10 [source_file: expected0]
                                                        NAME proto 10 [source_file: expected0]
                                                BREAK 11 [source_file: expected0]
                                                    LABEL_NAME a 11 [source_file: expected0]
                        EXPR_RESULT 15 [source_file: expected0]
                            CALL 15 [free_call: 1] [source_file: expected0]
                                NAME alert 15 [source_file: expected0]
                                NAME action 15 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        EXPR_RESULT 1 [source_file: testcode]
            ASSIGN 1 [source_file: testcode]
                NAME f 1 [source_file: testcode]
                FUNCTION  1 [source_file: testcode]
                    NAME  1 [source_file: testcode]
                    PARAM_LIST 1 [source_file: testcode]
                    BLOCK 1 [source_file: testcode]
                        VAR 2 [source_file: testcode]
                            NAME action 2 [source_file: testcode]
                        LABEL 3 [source_file: testcode]
                            LABEL_NAME a 3 [source_file: testcode]
                            BLOCK 3 [source_file: testcode]
                                VAR 4 [source_file: testcode]
                                    NAME proto 4 [source_file: testcode]
                                        NULL 4 [source_file: testcode]
                                TRY 5 [source_file: testcode]
                                    BLOCK 5 [source_file: testcode]
                                    BLOCK 6 [source_file: testcode]
                                    BLOCK 6 [source_file: testcode]
                                        TRY 7 [source_file: testcode]
                                            BLOCK 7 [source_file: testcode]
                                                EXPR_RESULT 8 [source_file: testcode]
                                                    ASSIGN 8 [source_file: testcode]
                                                        NAME proto 8 [source_file: testcode]
                                                        NEW 8 [source_file: testcode]
                                                            NAME Proto 8 [source_file: testcode]
                                            BLOCK 9 [source_file: testcode]
                                            BLOCK 9 [source_file: testcode]
                                                EXPR_RESULT 10 [source_file: testcode]
                                                    ASSIGN 10 [source_file: testcode]
                                                        NAME action 10 [source_file: testcode]
                                                        NAME proto 10 [source_file: testcode]
                        EXPR_RESULT 15 [source_file: testcode]
                            CALL 15 [free_call: 1] [source_file: testcode]
                                NAME alert 15 [source_file: testcode]
                                NAME action 15 [source_file: testcode]


Subtree1: BLOCK 9 [source_file: expected0]
    EXPR_RESULT 10 [source_file: expected0]
        ASSIGN 10 [source_file: expected0]
            NAME action 10 [source_file: expected0]
            NAME proto 10 [source_file: expected0]
    BREAK 11 [source_file: expected0]
        LABEL_NAME a 11 [source_file: expected0]


Subtree2: BLOCK 9 [source_file: testcode]
    EXPR_RESULT 10 [source_file: testcode]
        ASSIGN 10 [source_file: testcode]
            NAME action 10 [source_file: testcode]
            NAME proto 10 [source_file: testcode]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:928)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:460)
~ testIssue4177428_return(com.google.javascript.jscomp.UnreachableCodeEliminationTest)
[
Expected: f=function(){var action;a:{var proto=null;try{proto=new Proto}finally{action=proto;return}}}
Result: f=function(){var action;a:{var proto=null;try{proto=new Proto}finally{action=proto}}}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            ASSIGN 1 [source_file: expected0]
                NAME f 1 [source_file: expected0]
                FUNCTION  1 [source_file: expected0]
                    NAME  1 [source_file: expected0]
                    PARAM_LIST 1 [source_file: expected0]
                    BLOCK 1 [source_file: expected0]
                        VAR 2 [source_file: expected0]
                            NAME action 2 [source_file: expected0]
                        LABEL 3 [source_file: expected0]
                            LABEL_NAME a 3 [source_file: expected0]
                            BLOCK 3 [source_file: expected0]
                                VAR 4 [source_file: expected0]
                                    NAME proto 4 [source_file: expected0]
                                        NULL 4 [source_file: expected0]
                                TRY 5 [source_file: expected0]
                                    BLOCK 5 [source_file: expected0]
                                        EXPR_RESULT 6 [source_file: expected0]
                                            ASSIGN 6 [source_file: expected0]
                                                NAME proto 6 [source_file: expected0]
                                                NEW 6 [source_file: expected0]
                                                    NAME Proto 6 [source_file: expected0]
                                    BLOCK 7 [source_file: expected0]
                                    BLOCK 7 [source_file: expected0]
                                        EXPR_RESULT 8 [source_file: expected0]
                                            ASSIGN 8 [source_file: expected0]
                                                NAME action 8 [source_file: expected0]
                                                NAME proto 8 [source_file: expected0]
                                        RETURN 9 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        EXPR_RESULT 1 [source_file: testcode]
            ASSIGN 1 [source_file: testcode]
                NAME f 1 [source_file: testcode]
                FUNCTION  1 [source_file: testcode]
                    NAME  1 [source_file: testcode]
                    PARAM_LIST 1 [source_file: testcode]
                    BLOCK 1 [source_file: testcode]
                        VAR 2 [source_file: testcode]
                            NAME action 2 [source_file: testcode]
                        LABEL 3 [source_file: testcode]
                            LABEL_NAME a 3 [source_file: testcode]
                            BLOCK 3 [source_file: testcode]
                                VAR 4 [source_file: testcode]
                                    NAME proto 4 [source_file: testcode]
                                        NULL 4 [source_file: testcode]
                                TRY 5 [source_file: testcode]
                                    BLOCK 5 [source_file: testcode]
                                        EXPR_RESULT 6 [source_file: testcode]
                                            ASSIGN 6 [source_file: testcode]
                                                NAME proto 6 [source_file: testcode]
                                                NEW 6 [source_file: testcode]
                                                    NAME Proto 6 [source_file: testcode]
                                    BLOCK 7 [source_file: testcode]
                                    BLOCK 7 [source_file: testcode]
                                        EXPR_RESULT 8 [source_file: testcode]
                                            ASSIGN 8 [source_file: testcode]
                                                NAME action 8 [source_file: testcode]
                                                NAME proto 8 [source_file: testcode]


Subtree1: BLOCK 7 [source_file: expected0]
    EXPR_RESULT 8 [source_file: expected0]
        ASSIGN 8 [source_file: expected0]
            NAME action 8 [source_file: expected0]
            NAME proto 8 [source_file: expected0]
    RETURN 9 [source_file: expected0]


Subtree2: BLOCK 7 [source_file: testcode]
    EXPR_RESULT 8 [source_file: testcode]
        ASSIGN 8 [source_file: testcode]
            NAME action 8 [source_file: testcode]
            NAME proto 8 [source_file: testcode]
]
junit.framework.AssertionFailedError: 
Expected: f=function(){var action;a:{var proto=null;try{proto=new Proto}finally{action=proto;return}}}
Result: f=function(){var action;a:{var proto=null;try{proto=new Proto}finally{action=proto}}}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            ASSIGN 1 [source_file: expected0]
                NAME f 1 [source_file: expected0]
                FUNCTION  1 [source_file: expected0]
                    NAME  1 [source_file: expected0]
                    PARAM_LIST 1 [source_file: expected0]
                    BLOCK 1 [source_file: expected0]
                        VAR 2 [source_file: expected0]
                            NAME action 2 [source_file: expected0]
                        LABEL 3 [source_file: expected0]
                            LABEL_NAME a 3 [source_file: expected0]
                            BLOCK 3 [source_file: expected0]
                                VAR 4 [source_file: expected0]
                                    NAME proto 4 [source_file: expected0]
                                        NULL 4 [source_file: expected0]
                                TRY 5 [source_file: expected0]
                                    BLOCK 5 [source_file: expected0]
                                        EXPR_RESULT 6 [source_file: expected0]
                                            ASSIGN 6 [source_file: expected0]
                                                NAME proto 6 [source_file: expected0]
                                                NEW 6 [source_file: expected0]
                                                    NAME Proto 6 [source_file: expected0]
                                    BLOCK 7 [source_file: expected0]
                                    BLOCK 7 [source_file: expected0]
                                        EXPR_RESULT 8 [source_file: expected0]
                                            ASSIGN 8 [source_file: expected0]
                                                NAME action 8 [source_file: expected0]
                                                NAME proto 8 [source_file: expected0]
                                        RETURN 9 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        EXPR_RESULT 1 [source_file: testcode]
            ASSIGN 1 [source_file: testcode]
                NAME f 1 [source_file: testcode]
                FUNCTION  1 [source_file: testcode]
                    NAME  1 [source_file: testcode]
                    PARAM_LIST 1 [source_file: testcode]
                    BLOCK 1 [source_file: testcode]
                        VAR 2 [source_file: testcode]
                            NAME action 2 [source_file: testcode]
                        LABEL 3 [source_file: testcode]
                            LABEL_NAME a 3 [source_file: testcode]
                            BLOCK 3 [source_file: testcode]
                                VAR 4 [source_file: testcode]
                                    NAME proto 4 [source_file: testcode]
                                        NULL 4 [source_file: testcode]
                                TRY 5 [source_file: testcode]
                                    BLOCK 5 [source_file: testcode]
                                        EXPR_RESULT 6 [source_file: testcode]
                                            ASSIGN 6 [source_file: testcode]
                                                NAME proto 6 [source_file: testcode]
                                                NEW 6 [source_file: testcode]
                                                    NAME Proto 6 [source_file: testcode]
                                    BLOCK 7 [source_file: testcode]
                                    BLOCK 7 [source_file: testcode]
                                        EXPR_RESULT 8 [source_file: testcode]
                                            ASSIGN 8 [source_file: testcode]
                                                NAME action 8 [source_file: testcode]
                                                NAME proto 8 [source_file: testcode]


Subtree1: BLOCK 7 [source_file: expected0]
    EXPR_RESULT 8 [source_file: expected0]
        ASSIGN 8 [source_file: expected0]
            NAME action 8 [source_file: expected0]
            NAME proto 8 [source_file: expected0]
    RETURN 9 [source_file: expected0]


Subtree2: BLOCK 7 [source_file: testcode]
    EXPR_RESULT 8 [source_file: testcode]
        ASSIGN 8 [source_file: testcode]
            NAME action 8 [source_file: testcode]
            NAME proto 8 [source_file: testcode]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:928)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:460)
~ testDontRemoveBreakInTryFinally(com.google.javascript.jscomp.UnreachableCodeEliminationTest)
[
Expected: function f(){b:try{throw 9;}finally{break b}return 1}
Result: function f(){b:try{throw 9;}finally{}return 1}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION f 1 [source_file: expected0]
            NAME f 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                LABEL 1 [source_file: expected0]
                    LABEL_NAME b 1 [source_file: expected0]
                    TRY 1 [source_file: expected0]
                        BLOCK 1 [source_file: expected0]
                            THROW 1 [source_file: expected0]
                                NUMBER 9.0 1 [source_file: expected0]
                        BLOCK 1 [source_file: expected0]
                        BLOCK 1 [source_file: expected0]
                            BREAK 1 [source_file: expected0]
                                LABEL_NAME b 1 [source_file: expected0]
                RETURN 1 [source_file: expected0]
                    NUMBER 1.0 1 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION f 1 [source_file: testcode]
            NAME f 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                LABEL 1 [source_file: testcode]
                    LABEL_NAME b 1 [source_file: testcode]
                    TRY 1 [source_file: testcode]
                        BLOCK 1 [source_file: testcode]
                            THROW 1 [source_file: testcode]
                                NUMBER 9.0 1 [source_file: testcode]
                        BLOCK 1 [source_file: testcode]
                        BLOCK 1 [source_file: testcode]
                RETURN 1 [source_file: testcode]
                    NUMBER 1.0 1 [source_file: testcode]


Subtree1: BLOCK 1 [source_file: expected0]
    BREAK 1 [source_file: expected0]
        LABEL_NAME b 1 [source_file: expected0]


Subtree2: BLOCK 1 [source_file: testcode]
]
junit.framework.AssertionFailedError: 
Expected: function f(){b:try{throw 9;}finally{break b}return 1}
Result: function f(){b:try{throw 9;}finally{}return 1}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION f 1 [source_file: expected0]
            NAME f 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                LABEL 1 [source_file: expected0]
                    LABEL_NAME b 1 [source_file: expected0]
                    TRY 1 [source_file: expected0]
                        BLOCK 1 [source_file: expected0]
                            THROW 1 [source_file: expected0]
                                NUMBER 9.0 1 [source_file: expected0]
                        BLOCK 1 [source_file: expected0]
                        BLOCK 1 [source_file: expected0]
                            BREAK 1 [source_file: expected0]
                                LABEL_NAME b 1 [source_file: expected0]
                RETURN 1 [source_file: expected0]
                    NUMBER 1.0 1 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION f 1 [source_file: testcode]
            NAME f 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                LABEL 1 [source_file: testcode]
                    LABEL_NAME b 1 [source_file: testcode]
                    TRY 1 [source_file: testcode]
                        BLOCK 1 [source_file: testcode]
                            THROW 1 [source_file: testcode]
                                NUMBER 9.0 1 [source_file: testcode]
                        BLOCK 1 [source_file: testcode]
                        BLOCK 1 [source_file: testcode]
                RETURN 1 [source_file: testcode]
                    NUMBER 1.0 1 [source_file: testcode]


Subtree1: BLOCK 1 [source_file: expected0]
    BREAK 1 [source_file: expected0]
        LABEL_NAME b 1 [source_file: expected0]


Subtree2: BLOCK 1 [source_file: testcode]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:928)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:460)
~ testIssue4177428_continue(com.google.javascript.jscomp.UnreachableCodeEliminationTest)
[
Expected: f=function(){var action;a:do{var proto=null;try{proto=new Proto}finally{action=proto;continue a}}while(false);alert(action)}
Result: f=function(){var action;a:do{var proto=null;try{proto=new Proto}finally{action=proto}}while(false);alert(action)}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            ASSIGN 1 [source_file: expected0]
                NAME f 1 [source_file: expected0]
                FUNCTION  1 [source_file: expected0]
                    NAME  1 [source_file: expected0]
                    PARAM_LIST 1 [source_file: expected0]
                    BLOCK 1 [source_file: expected0]
                        VAR 2 [source_file: expected0]
                            NAME action 2 [source_file: expected0]
                        LABEL 3 [source_file: expected0]
                            LABEL_NAME a 3 [source_file: expected0]
                            DO 3 [source_file: expected0]
                                BLOCK 3 [source_file: expected0]
                                    VAR 4 [source_file: expected0]
                                        NAME proto 4 [source_file: expected0]
                                            NULL 4 [source_file: expected0]
                                    TRY 5 [source_file: expected0]
                                        BLOCK 5 [source_file: expected0]
                                            EXPR_RESULT 6 [source_file: expected0]
                                                ASSIGN 6 [source_file: expected0]
                                                    NAME proto 6 [source_file: expected0]
                                                    NEW 6 [source_file: expected0]
                                                        NAME Proto 6 [source_file: expected0]
                                        BLOCK 7 [source_file: expected0]
                                        BLOCK 7 [source_file: expected0]
                                            EXPR_RESULT 8 [source_file: expected0]
                                                ASSIGN 8 [source_file: expected0]
                                                    NAME action 8 [source_file: expected0]
                                                    NAME proto 8 [source_file: expected0]
                                            CONTINUE 9 [source_file: expected0]
                                                LABEL_NAME a 9 [source_file: expected0]
                                FALSE 11 [source_file: expected0]
                        EXPR_RESULT 12 [source_file: expected0]
                            CALL 12 [free_call: 1] [source_file: expected0]
                                NAME alert 12 [source_file: expected0]
                                NAME action 12 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        EXPR_RESULT 1 [source_file: testcode]
            ASSIGN 1 [source_file: testcode]
                NAME f 1 [source_file: testcode]
                FUNCTION  1 [source_file: testcode]
                    NAME  1 [source_file: testcode]
                    PARAM_LIST 1 [source_file: testcode]
                    BLOCK 1 [source_file: testcode]
                        VAR 2 [source_file: testcode]
                            NAME action 2 [source_file: testcode]
                        LABEL 3 [source_file: testcode]
                            LABEL_NAME a 3 [source_file: testcode]
                            DO 3 [source_file: testcode]
                                BLOCK 3 [source_file: testcode]
                                    VAR 4 [source_file: testcode]
                                        NAME proto 4 [source_file: testcode]
                                            NULL 4 [source_file: testcode]
                                    TRY 5 [source_file: testcode]
                                        BLOCK 5 [source_file: testcode]
                                            EXPR_RESULT 6 [source_file: testcode]
                                                ASSIGN 6 [source_file: testcode]
                                                    NAME proto 6 [source_file: testcode]
                                                    NEW 6 [source_file: testcode]
                                                        NAME Proto 6 [source_file: testcode]
                                        BLOCK 7 [source_file: testcode]
                                        BLOCK 7 [source_file: testcode]
                                            EXPR_RESULT 8 [source_file: testcode]
                                                ASSIGN 8 [source_file: testcode]
                                                    NAME action 8 [source_file: testcode]
                                                    NAME proto 8 [source_file: testcode]
                                FALSE 11 [source_file: testcode]
                        EXPR_RESULT 12 [source_file: testcode]
                            CALL 12 [free_call: 1] [source_file: testcode]
                                NAME alert 12 [source_file: testcode]
                                NAME action 12 [source_file: testcode]


Subtree1: BLOCK 7 [source_file: expected0]
    EXPR_RESULT 8 [source_file: expected0]
        ASSIGN 8 [source_file: expected0]
            NAME action 8 [source_file: expected0]
            NAME proto 8 [source_file: expected0]
    CONTINUE 9 [source_file: expected0]
        LABEL_NAME a 9 [source_file: expected0]


Subtree2: BLOCK 7 [source_file: testcode]
    EXPR_RESULT 8 [source_file: testcode]
        ASSIGN 8 [source_file: testcode]
            NAME action 8 [source_file: testcode]
            NAME proto 8 [source_file: testcode]
]
junit.framework.AssertionFailedError: 
Expected: f=function(){var action;a:do{var proto=null;try{proto=new Proto}finally{action=proto;continue a}}while(false);alert(action)}
Result: f=function(){var action;a:do{var proto=null;try{proto=new Proto}finally{action=proto}}while(false);alert(action)}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            ASSIGN 1 [source_file: expected0]
                NAME f 1 [source_file: expected0]
                FUNCTION  1 [source_file: expected0]
                    NAME  1 [source_file: expected0]
                    PARAM_LIST 1 [source_file: expected0]
                    BLOCK 1 [source_file: expected0]
                        VAR 2 [source_file: expected0]
                            NAME action 2 [source_file: expected0]
                        LABEL 3 [source_file: expected0]
                            LABEL_NAME a 3 [source_file: expected0]
                            DO 3 [source_file: expected0]
                                BLOCK 3 [source_file: expected0]
                                    VAR 4 [source_file: expected0]
                                        NAME proto 4 [source_file: expected0]
                                            NULL 4 [source_file: expected0]
                                    TRY 5 [source_file: expected0]
                                        BLOCK 5 [source_file: expected0]
                                            EXPR_RESULT 6 [source_file: expected0]
                                                ASSIGN 6 [source_file: expected0]
                                                    NAME proto 6 [source_file: expected0]
                                                    NEW 6 [source_file: expected0]
                                                        NAME Proto 6 [source_file: expected0]
                                        BLOCK 7 [source_file: expected0]
                                        BLOCK 7 [source_file: expected0]
                                            EXPR_RESULT 8 [source_file: expected0]
                                                ASSIGN 8 [source_file: expected0]
                                                    NAME action 8 [source_file: expected0]
                                                    NAME proto 8 [source_file: expected0]
                                            CONTINUE 9 [source_file: expected0]
                                                LABEL_NAME a 9 [source_file: expected0]
                                FALSE 11 [source_file: expected0]
                        EXPR_RESULT 12 [source_file: expected0]
                            CALL 12 [free_call: 1] [source_file: expected0]
                                NAME alert 12 [source_file: expected0]
                                NAME action 12 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        EXPR_RESULT 1 [source_file: testcode]
            ASSIGN 1 [source_file: testcode]
                NAME f 1 [source_file: testcode]
                FUNCTION  1 [source_file: testcode]
                    NAME  1 [source_file: testcode]
                    PARAM_LIST 1 [source_file: testcode]
                    BLOCK 1 [source_file: testcode]
                        VAR 2 [source_file: testcode]
                            NAME action 2 [source_file: testcode]
                        LABEL 3 [source_file: testcode]
                            LABEL_NAME a 3 [source_file: testcode]
                            DO 3 [source_file: testcode]
                                BLOCK 3 [source_file: testcode]
                                    VAR 4 [source_file: testcode]
                                        NAME proto 4 [source_file: testcode]
                                            NULL 4 [source_file: testcode]
                                    TRY 5 [source_file: testcode]
                                        BLOCK 5 [source_file: testcode]
                                            EXPR_RESULT 6 [source_file: testcode]
                                                ASSIGN 6 [source_file: testcode]
                                                    NAME proto 6 [source_file: testcode]
                                                    NEW 6 [source_file: testcode]
                                                        NAME Proto 6 [source_file: testcode]
                                        BLOCK 7 [source_file: testcode]
                                        BLOCK 7 [source_file: testcode]
                                            EXPR_RESULT 8 [source_file: testcode]
                                                ASSIGN 8 [source_file: testcode]
                                                    NAME action 8 [source_file: testcode]
                                                    NAME proto 8 [source_file: testcode]
                                FALSE 11 [source_file: testcode]
                        EXPR_RESULT 12 [source_file: testcode]
                            CALL 12 [free_call: 1] [source_file: testcode]
                                NAME alert 12 [source_file: testcode]
                                NAME action 12 [source_file: testcode]


Subtree1: BLOCK 7 [source_file: expected0]
    EXPR_RESULT 8 [source_file: expected0]
        ASSIGN 8 [source_file: expected0]
            NAME action 8 [source_file: expected0]
            NAME proto 8 [source_file: expected0]
    CONTINUE 9 [source_file: expected0]
        LABEL_NAME a 9 [source_file: expected0]


Subtree2: BLOCK 7 [source_file: testcode]
    EXPR_RESULT 8 [source_file: testcode]
        ASSIGN 8 [source_file: testcode]
            NAME action 8 [source_file: testcode]
            NAME proto 8 [source_file: testcode]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:928)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:460)
~ testDontRemoveBreakInTryFinallySwitch(com.google.javascript.jscomp.UnreachableCodeEliminationTest)
[
Expected: function f(){b:try{throw 9;}finally{switch(x){case 1:break b}}return 1}
Result: function f(){b:try{throw 9;}finally{switch(x){case 1:}}return 1}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION f 1 [source_file: expected0]
            NAME f 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                LABEL 1 [source_file: expected0]
                    LABEL_NAME b 1 [source_file: expected0]
                    TRY 1 [source_file: expected0]
                        BLOCK 1 [source_file: expected0]
                            THROW 1 [source_file: expected0]
                                NUMBER 9.0 1 [source_file: expected0]
                        BLOCK 1 [source_file: expected0]
                        BLOCK 1 [source_file: expected0]
                            SWITCH 1 [source_file: expected0]
                                NAME x 1 [source_file: expected0]
                                CASE 1 [source_file: expected0]
                                    NUMBER 1.0 1 [source_file: expected0]
                                    BLOCK 1 [synthetic: 1] [source_file: expected0]
                                        BREAK 1 [source_file: expected0]
                                            LABEL_NAME b 1 [source_file: expected0]
                RETURN 1 [source_file: expected0]
                    NUMBER 1.0 1 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION f 1 [source_file: testcode]
            NAME f 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                LABEL 1 [source_file: testcode]
                    LABEL_NAME b 1 [source_file: testcode]
                    TRY 1 [source_file: testcode]
                        BLOCK 1 [source_file: testcode]
                            THROW 1 [source_file: testcode]
                                NUMBER 9.0 1 [source_file: testcode]
                        BLOCK 1 [source_file: testcode]
                        BLOCK 1 [source_file: testcode]
                            SWITCH 1 [source_file: testcode]
                                NAME x 1 [source_file: testcode]
                                CASE 1 [source_file: testcode]
                                    NUMBER 1.0 1 [source_file: testcode]
                                    BLOCK 1 [synthetic: 1] [source_file: testcode]
                RETURN 1 [source_file: testcode]
                    NUMBER 1.0 1 [source_file: testcode]


Subtree1: BLOCK 1 [synthetic: 1] [source_file: expected0]
    BREAK 1 [source_file: expected0]
        LABEL_NAME b 1 [source_file: expected0]


Subtree2: BLOCK 1 [synthetic: 1] [source_file: testcode]
]
junit.framework.AssertionFailedError: 
Expected: function f(){b:try{throw 9;}finally{switch(x){case 1:break b}}return 1}
Result: function f(){b:try{throw 9;}finally{switch(x){case 1:}}return 1}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION f 1 [source_file: expected0]
            NAME f 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                LABEL 1 [source_file: expected0]
                    LABEL_NAME b 1 [source_file: expected0]
                    TRY 1 [source_file: expected0]
                        BLOCK 1 [source_file: expected0]
                            THROW 1 [source_file: expected0]
                                NUMBER 9.0 1 [source_file: expected0]
                        BLOCK 1 [source_file: expected0]
                        BLOCK 1 [source_file: expected0]
                            SWITCH 1 [source_file: expected0]
                                NAME x 1 [source_file: expected0]
                                CASE 1 [source_file: expected0]
                                    NUMBER 1.0 1 [source_file: expected0]
                                    BLOCK 1 [synthetic: 1] [source_file: expected0]
                                        BREAK 1 [source_file: expected0]
                                            LABEL_NAME b 1 [source_file: expected0]
                RETURN 1 [source_file: expected0]
                    NUMBER 1.0 1 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION f 1 [source_file: testcode]
            NAME f 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                LABEL 1 [source_file: testcode]
                    LABEL_NAME b 1 [source_file: testcode]
                    TRY 1 [source_file: testcode]
                        BLOCK 1 [source_file: testcode]
                            THROW 1 [source_file: testcode]
                                NUMBER 9.0 1 [source_file: testcode]
                        BLOCK 1 [source_file: testcode]
                        BLOCK 1 [source_file: testcode]
                            SWITCH 1 [source_file: testcode]
                                NAME x 1 [source_file: testcode]
                                CASE 1 [source_file: testcode]
                                    NUMBER 1.0 1 [source_file: testcode]
                                    BLOCK 1 [synthetic: 1] [source_file: testcode]
                RETURN 1 [source_file: testcode]
                    NUMBER 1.0 1 [source_file: testcode]


Subtree1: BLOCK 1 [synthetic: 1] [source_file: expected0]
    BREAK 1 [source_file: expected0]
        LABEL_NAME b 1 [source_file: expected0]


Subtree2: BLOCK 1 [synthetic: 1] [source_file: testcode]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:928)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:460)
~ testIssue4177428a(com.google.javascript.jscomp.UnreachableCodeEliminationTest)
[
Expected: f=function(){var action;a:{var proto=null;try{proto=new Proto}finally{action=proto;break a}}alert(action)}
Result: f=function(){var action;a:{var proto=null;try{proto=new Proto}finally{action=proto}}alert(action)}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            ASSIGN 1 [source_file: expected0]
                NAME f 1 [source_file: expected0]
                FUNCTION  1 [source_file: expected0]
                    NAME  1 [source_file: expected0]
                    PARAM_LIST 1 [source_file: expected0]
                    BLOCK 1 [source_file: expected0]
                        VAR 2 [source_file: expected0]
                            NAME action 2 [source_file: expected0]
                        LABEL 3 [source_file: expected0]
                            LABEL_NAME a 3 [source_file: expected0]
                            BLOCK 3 [source_file: expected0]
                                VAR 4 [source_file: expected0]
                                    NAME proto 4 [source_file: expected0]
                                        NULL 4 [source_file: expected0]
                                TRY 5 [source_file: expected0]
                                    BLOCK 5 [source_file: expected0]
                                        EXPR_RESULT 6 [source_file: expected0]
                                            ASSIGN 6 [source_file: expected0]
                                                NAME proto 6 [source_file: expected0]
                                                NEW 6 [source_file: expected0]
                                                    NAME Proto 6 [source_file: expected0]
                                    BLOCK 7 [source_file: expected0]
                                    BLOCK 7 [source_file: expected0]
                                        EXPR_RESULT 8 [source_file: expected0]
                                            ASSIGN 8 [source_file: expected0]
                                                NAME action 8 [source_file: expected0]
                                                NAME proto 8 [source_file: expected0]
                                        BREAK 9 [source_file: expected0]
                                            LABEL_NAME a 9 [source_file: expected0]
                        EXPR_RESULT 12 [source_file: expected0]
                            CALL 12 [free_call: 1] [source_file: expected0]
                                NAME alert 12 [source_file: expected0]
                                NAME action 12 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        EXPR_RESULT 1 [source_file: testcode]
            ASSIGN 1 [source_file: testcode]
                NAME f 1 [source_file: testcode]
                FUNCTION  1 [source_file: testcode]
                    NAME  1 [source_file: testcode]
                    PARAM_LIST 1 [source_file: testcode]
                    BLOCK 1 [source_file: testcode]
                        VAR 2 [source_file: testcode]
                            NAME action 2 [source_file: testcode]
                        LABEL 3 [source_file: testcode]
                            LABEL_NAME a 3 [source_file: testcode]
                            BLOCK 3 [source_file: testcode]
                                VAR 4 [source_file: testcode]
                                    NAME proto 4 [source_file: testcode]
                                        NULL 4 [source_file: testcode]
                                TRY 5 [source_file: testcode]
                                    BLOCK 5 [source_file: testcode]
                                        EXPR_RESULT 6 [source_file: testcode]
                                            ASSIGN 6 [source_file: testcode]
                                                NAME proto 6 [source_file: testcode]
                                                NEW 6 [source_file: testcode]
                                                    NAME Proto 6 [source_file: testcode]
                                    BLOCK 7 [source_file: testcode]
                                    BLOCK 7 [source_file: testcode]
                                        EXPR_RESULT 8 [source_file: testcode]
                                            ASSIGN 8 [source_file: testcode]
                                                NAME action 8 [source_file: testcode]
                                                NAME proto 8 [source_file: testcode]
                        EXPR_RESULT 12 [source_file: testcode]
                            CALL 12 [free_call: 1] [source_file: testcode]
                                NAME alert 12 [source_file: testcode]
                                NAME action 12 [source_file: testcode]


Subtree1: BLOCK 7 [source_file: expected0]
    EXPR_RESULT 8 [source_file: expected0]
        ASSIGN 8 [source_file: expected0]
            NAME action 8 [source_file: expected0]
            NAME proto 8 [source_file: expected0]
    BREAK 9 [source_file: expected0]
        LABEL_NAME a 9 [source_file: expected0]


Subtree2: BLOCK 7 [source_file: testcode]
    EXPR_RESULT 8 [source_file: testcode]
        ASSIGN 8 [source_file: testcode]
            NAME action 8 [source_file: testcode]
            NAME proto 8 [source_file: testcode]
]
junit.framework.AssertionFailedError: 
Expected: f=function(){var action;a:{var proto=null;try{proto=new Proto}finally{action=proto;break a}}alert(action)}
Result: f=function(){var action;a:{var proto=null;try{proto=new Proto}finally{action=proto}}alert(action)}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            ASSIGN 1 [source_file: expected0]
                NAME f 1 [source_file: expected0]
                FUNCTION  1 [source_file: expected0]
                    NAME  1 [source_file: expected0]
                    PARAM_LIST 1 [source_file: expected0]
                    BLOCK 1 [source_file: expected0]
                        VAR 2 [source_file: expected0]
                            NAME action 2 [source_file: expected0]
                        LABEL 3 [source_file: expected0]
                            LABEL_NAME a 3 [source_file: expected0]
                            BLOCK 3 [source_file: expected0]
                                VAR 4 [source_file: expected0]
                                    NAME proto 4 [source_file: expected0]
                                        NULL 4 [source_file: expected0]
                                TRY 5 [source_file: expected0]
                                    BLOCK 5 [source_file: expected0]
                                        EXPR_RESULT 6 [source_file: expected0]
                                            ASSIGN 6 [source_file: expected0]
                                                NAME proto 6 [source_file: expected0]
                                                NEW 6 [source_file: expected0]
                                                    NAME Proto 6 [source_file: expected0]
                                    BLOCK 7 [source_file: expected0]
                                    BLOCK 7 [source_file: expected0]
                                        EXPR_RESULT 8 [source_file: expected0]
                                            ASSIGN 8 [source_file: expected0]
                                                NAME action 8 [source_file: expected0]
                                                NAME proto 8 [source_file: expected0]
                                        BREAK 9 [source_file: expected0]
                                            LABEL_NAME a 9 [source_file: expected0]
                        EXPR_RESULT 12 [source_file: expected0]
                            CALL 12 [free_call: 1] [source_file: expected0]
                                NAME alert 12 [source_file: expected0]
                                NAME action 12 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        EXPR_RESULT 1 [source_file: testcode]
            ASSIGN 1 [source_file: testcode]
                NAME f 1 [source_file: testcode]
                FUNCTION  1 [source_file: testcode]
                    NAME  1 [source_file: testcode]
                    PARAM_LIST 1 [source_file: testcode]
                    BLOCK 1 [source_file: testcode]
                        VAR 2 [source_file: testcode]
                            NAME action 2 [source_file: testcode]
                        LABEL 3 [source_file: testcode]
                            LABEL_NAME a 3 [source_file: testcode]
                            BLOCK 3 [source_file: testcode]
                                VAR 4 [source_file: testcode]
                                    NAME proto 4 [source_file: testcode]
                                        NULL 4 [source_file: testcode]
                                TRY 5 [source_file: testcode]
                                    BLOCK 5 [source_file: testcode]
                                        EXPR_RESULT 6 [source_file: testcode]
                                            ASSIGN 6 [source_file: testcode]
                                                NAME proto 6 [source_file: testcode]
                                                NEW 6 [source_file: testcode]
                                                    NAME Proto 6 [source_file: testcode]
                                    BLOCK 7 [source_file: testcode]
                                    BLOCK 7 [source_file: testcode]
                                        EXPR_RESULT 8 [source_file: testcode]
                                            ASSIGN 8 [source_file: testcode]
                                                NAME action 8 [source_file: testcode]
                                                NAME proto 8 [source_file: testcode]
                        EXPR_RESULT 12 [source_file: testcode]
                            CALL 12 [free_call: 1] [source_file: testcode]
                                NAME alert 12 [source_file: testcode]
                                NAME action 12 [source_file: testcode]


Subtree1: BLOCK 7 [source_file: expected0]
    EXPR_RESULT 8 [source_file: expected0]
        ASSIGN 8 [source_file: expected0]
            NAME action 8 [source_file: expected0]
            NAME proto 8 [source_file: expected0]
    BREAK 9 [source_file: expected0]
        LABEL_NAME a 9 [source_file: expected0]


Subtree2: BLOCK 7 [source_file: testcode]
    EXPR_RESULT 8 [source_file: testcode]
        ASSIGN 8 [source_file: testcode]
            NAME action 8 [source_file: testcode]
            NAME proto 8 [source_file: testcode]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:928)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:460)
~ testIssue4177428c(com.google.javascript.jscomp.UnreachableCodeEliminationTest)
[
Expected: f=function(){var action;a:{var proto=null;try{}finally{try{proto=new Proto}finally{action=proto;break a}}}alert(action)}
Result: f=function(){var action;a:{var proto=null;try{}finally{try{proto=new Proto}finally{action=proto}}}alert(action)}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            ASSIGN 1 [source_file: expected0]
                NAME f 1 [source_file: expected0]
                FUNCTION  1 [source_file: expected0]
                    NAME  1 [source_file: expected0]
                    PARAM_LIST 1 [source_file: expected0]
                    BLOCK 1 [source_file: expected0]
                        VAR 2 [source_file: expected0]
                            NAME action 2 [source_file: expected0]
                        LABEL 3 [source_file: expected0]
                            LABEL_NAME a 3 [source_file: expected0]
                            BLOCK 3 [source_file: expected0]
                                VAR 4 [source_file: expected0]
                                    NAME proto 4 [source_file: expected0]
                                        NULL 4 [source_file: expected0]
                                TRY 5 [source_file: expected0]
                                    BLOCK 5 [source_file: expected0]
                                    BLOCK 6 [source_file: expected0]
                                    BLOCK 6 [source_file: expected0]
                                        TRY 7 [source_file: expected0]
                                            BLOCK 7 [source_file: expected0]
                                                EXPR_RESULT 8 [source_file: expected0]
                                                    ASSIGN 8 [source_file: expected0]
                                                        NAME proto 8 [source_file: expected0]
                                                        NEW 8 [source_file: expected0]
                                                            NAME Proto 8 [source_file: expected0]
                                            BLOCK 9 [source_file: expected0]
                                            BLOCK 9 [source_file: expected0]
                                                EXPR_RESULT 10 [source_file: expected0]
                                                    ASSIGN 10 [source_file: expected0]
                                                        NAME action 10 [source_file: expected0]
                                                        NAME proto 10 [source_file: expected0]
                                                BREAK 11 [source_file: expected0]
                                                    LABEL_NAME a 11 [source_file: expected0]
                        EXPR_RESULT 15 [source_file: expected0]
                            CALL 15 [free_call: 1] [source_file: expected0]
                                NAME alert 15 [source_file: expected0]
                                NAME action 15 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        EXPR_RESULT 1 [source_file: testcode]
            ASSIGN 1 [source_file: testcode]
                NAME f 1 [source_file: testcode]
                FUNCTION  1 [source_file: testcode]
                    NAME  1 [source_file: testcode]
                    PARAM_LIST 1 [source_file: testcode]
                    BLOCK 1 [source_file: testcode]
                        VAR 2 [source_file: testcode]
                            NAME action 2 [source_file: testcode]
                        LABEL 3 [source_file: testcode]
                            LABEL_NAME a 3 [source_file: testcode]
                            BLOCK 3 [source_file: testcode]
                                VAR 4 [source_file: testcode]
                                    NAME proto 4 [source_file: testcode]
                                        NULL 4 [source_file: testcode]
                                TRY 5 [source_file: testcode]
                                    BLOCK 5 [source_file: testcode]
                                    BLOCK 6 [source_file: testcode]
                                    BLOCK 6 [source_file: testcode]
                                        TRY 7 [source_file: testcode]
                                            BLOCK 7 [source_file: testcode]
                                                EXPR_RESULT 8 [source_file: testcode]
                                                    ASSIGN 8 [source_file: testcode]
                                                        NAME proto 8 [source_file: testcode]
                                                        NEW 8 [source_file: testcode]
                                                            NAME Proto 8 [source_file: testcode]
                                            BLOCK 9 [source_file: testcode]
                                            BLOCK 9 [source_file: testcode]
                                                EXPR_RESULT 10 [source_file: testcode]
                                                    ASSIGN 10 [source_file: testcode]
                                                        NAME action 10 [source_file: testcode]
                                                        NAME proto 10 [source_file: testcode]
                        EXPR_RESULT 15 [source_file: testcode]
                            CALL 15 [free_call: 1] [source_file: testcode]
                                NAME alert 15 [source_file: testcode]
                                NAME action 15 [source_file: testcode]


Subtree1: BLOCK 9 [source_file: expected0]
    EXPR_RESULT 10 [source_file: expected0]
        ASSIGN 10 [source_file: expected0]
            NAME action 10 [source_file: expected0]
            NAME proto 10 [source_file: expected0]
    BREAK 11 [source_file: expected0]
        LABEL_NAME a 11 [source_file: expected0]


Subtree2: BLOCK 9 [source_file: testcode]
    EXPR_RESULT 10 [source_file: testcode]
        ASSIGN 10 [source_file: testcode]
            NAME action 10 [source_file: testcode]
            NAME proto 10 [source_file: testcode]
]
junit.framework.AssertionFailedError: 
Expected: f=function(){var action;a:{var proto=null;try{}finally{try{proto=new Proto}finally{action=proto;break a}}}alert(action)}
Result: f=function(){var action;a:{var proto=null;try{}finally{try{proto=new Proto}finally{action=proto}}}alert(action)}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            ASSIGN 1 [source_file: expected0]
                NAME f 1 [source_file: expected0]
                FUNCTION  1 [source_file: expected0]
                    NAME  1 [source_file: expected0]
                    PARAM_LIST 1 [source_file: expected0]
                    BLOCK 1 [source_file: expected0]
                        VAR 2 [source_file: expected0]
                            NAME action 2 [source_file: expected0]
                        LABEL 3 [source_file: expected0]
                            LABEL_NAME a 3 [source_file: expected0]
                            BLOCK 3 [source_file: expected0]
                                VAR 4 [source_file: expected0]
                                    NAME proto 4 [source_file: expected0]
                                        NULL 4 [source_file: expected0]
                                TRY 5 [source_file: expected0]
                                    BLOCK 5 [source_file: expected0]
                                    BLOCK 6 [source_file: expected0]
                                    BLOCK 6 [source_file: expected0]
                                        TRY 7 [source_file: expected0]
                                            BLOCK 7 [source_file: expected0]
                                                EXPR_RESULT 8 [source_file: expected0]
                                                    ASSIGN 8 [source_file: expected0]
                                                        NAME proto 8 [source_file: expected0]
                                                        NEW 8 [source_file: expected0]
                                                            NAME Proto 8 [source_file: expected0]
                                            BLOCK 9 [source_file: expected0]
                                            BLOCK 9 [source_file: expected0]
                                                EXPR_RESULT 10 [source_file: expected0]
                                                    ASSIGN 10 [source_file: expected0]
                                                        NAME action 10 [source_file: expected0]
                                                        NAME proto 10 [source_file: expected0]
                                                BREAK 11 [source_file: expected0]
                                                    LABEL_NAME a 11 [source_file: expected0]
                        EXPR_RESULT 15 [source_file: expected0]
                            CALL 15 [free_call: 1] [source_file: expected0]
                                NAME alert 15 [source_file: expected0]
                                NAME action 15 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        EXPR_RESULT 1 [source_file: testcode]
            ASSIGN 1 [source_file: testcode]
                NAME f 1 [source_file: testcode]
                FUNCTION  1 [source_file: testcode]
                    NAME  1 [source_file: testcode]
                    PARAM_LIST 1 [source_file: testcode]
                    BLOCK 1 [source_file: testcode]
                        VAR 2 [source_file: testcode]
                            NAME action 2 [source_file: testcode]
                        LABEL 3 [source_file: testcode]
                            LABEL_NAME a 3 [source_file: testcode]
                            BLOCK 3 [source_file: testcode]
                                VAR 4 [source_file: testcode]
                                    NAME proto 4 [source_file: testcode]
                                        NULL 4 [source_file: testcode]
                                TRY 5 [source_file: testcode]
                                    BLOCK 5 [source_file: testcode]
                                    BLOCK 6 [source_file: testcode]
                                    BLOCK 6 [source_file: testcode]
                                        TRY 7 [source_file: testcode]
                                            BLOCK 7 [source_file: testcode]
                                                EXPR_RESULT 8 [source_file: testcode]
                                                    ASSIGN 8 [source_file: testcode]
                                                        NAME proto 8 [source_file: testcode]
                                                        NEW 8 [source_file: testcode]
                                                            NAME Proto 8 [source_file: testcode]
                                            BLOCK 9 [source_file: testcode]
                                            BLOCK 9 [source_file: testcode]
                                                EXPR_RESULT 10 [source_file: testcode]
                                                    ASSIGN 10 [source_file: testcode]
                                                        NAME action 10 [source_file: testcode]
                                                        NAME proto 10 [source_file: testcode]
                        EXPR_RESULT 15 [source_file: testcode]
                            CALL 15 [free_call: 1] [source_file: testcode]
                                NAME alert 15 [source_file: testcode]
                                NAME action 15 [source_file: testcode]


Subtree1: BLOCK 9 [source_file: expected0]
    EXPR_RESULT 10 [source_file: expected0]
        ASSIGN 10 [source_file: expected0]
            NAME action 10 [source_file: expected0]
            NAME proto 10 [source_file: expected0]
    BREAK 11 [source_file: expected0]
        LABEL_NAME a 11 [source_file: expected0]


Subtree2: BLOCK 9 [source_file: testcode]
    EXPR_RESULT 10 [source_file: testcode]
        ASSIGN 10 [source_file: testcode]
            NAME action 10 [source_file: testcode]
            NAME proto 10 [source_file: testcode]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:928)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:460)
~ testIssue4177428_return(com.google.javascript.jscomp.UnreachableCodeEliminationTest)
[
Expected: f=function(){var action;a:{var proto=null;try{proto=new Proto}finally{action=proto;return}}}
Result: f=function(){var action;a:{var proto=null;try{proto=new Proto}finally{action=proto}}}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            ASSIGN 1 [source_file: expected0]
                NAME f 1 [source_file: expected0]
                FUNCTION  1 [source_file: expected0]
                    NAME  1 [source_file: expected0]
                    PARAM_LIST 1 [source_file: expected0]
                    BLOCK 1 [source_file: expected0]
                        VAR 2 [source_file: expected0]
                            NAME action 2 [source_file: expected0]
                        LABEL 3 [source_file: expected0]
                            LABEL_NAME a 3 [source_file: expected0]
                            BLOCK 3 [source_file: expected0]
                                VAR 4 [source_file: expected0]
                                    NAME proto 4 [source_file: expected0]
                                        NULL 4 [source_file: expected0]
                                TRY 5 [source_file: expected0]
                                    BLOCK 5 [source_file: expected0]
                                        EXPR_RESULT 6 [source_file: expected0]
                                            ASSIGN 6 [source_file: expected0]
                                                NAME proto 6 [source_file: expected0]
                                                NEW 6 [source_file: expected0]
                                                    NAME Proto 6 [source_file: expected0]
                                    BLOCK 7 [source_file: expected0]
                                    BLOCK 7 [source_file: expected0]
                                        EXPR_RESULT 8 [source_file: expected0]
                                            ASSIGN 8 [source_file: expected0]
                                                NAME action 8 [source_file: expected0]
                                                NAME proto 8 [source_file: expected0]
                                        RETURN 9 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        EXPR_RESULT 1 [source_file: testcode]
            ASSIGN 1 [source_file: testcode]
                NAME f 1 [source_file: testcode]
                FUNCTION  1 [source_file: testcode]
                    NAME  1 [source_file: testcode]
                    PARAM_LIST 1 [source_file: testcode]
                    BLOCK 1 [source_file: testcode]
                        VAR 2 [source_file: testcode]
                            NAME action 2 [source_file: testcode]
                        LABEL 3 [source_file: testcode]
                            LABEL_NAME a 3 [source_file: testcode]
                            BLOCK 3 [source_file: testcode]
                                VAR 4 [source_file: testcode]
                                    NAME proto 4 [source_file: testcode]
                                        NULL 4 [source_file: testcode]
                                TRY 5 [source_file: testcode]
                                    BLOCK 5 [source_file: testcode]
                                        EXPR_RESULT 6 [source_file: testcode]
                                            ASSIGN 6 [source_file: testcode]
                                                NAME proto 6 [source_file: testcode]
                                                NEW 6 [source_file: testcode]
                                                    NAME Proto 6 [source_file: testcode]
                                    BLOCK 7 [source_file: testcode]
                                    BLOCK 7 [source_file: testcode]
                                        EXPR_RESULT 8 [source_file: testcode]
                                            ASSIGN 8 [source_file: testcode]
                                                NAME action 8 [source_file: testcode]
                                                NAME proto 8 [source_file: testcode]


Subtree1: BLOCK 7 [source_file: expected0]
    EXPR_RESULT 8 [source_file: expected0]
        ASSIGN 8 [source_file: expected0]
            NAME action 8 [source_file: expected0]
            NAME proto 8 [source_file: expected0]
    RETURN 9 [source_file: expected0]


Subtree2: BLOCK 7 [source_file: testcode]
    EXPR_RESULT 8 [source_file: testcode]
        ASSIGN 8 [source_file: testcode]
            NAME action 8 [source_file: testcode]
            NAME proto 8 [source_file: testcode]
]
junit.framework.AssertionFailedError: 
Expected: f=function(){var action;a:{var proto=null;try{proto=new Proto}finally{action=proto;return}}}
Result: f=function(){var action;a:{var proto=null;try{proto=new Proto}finally{action=proto}}}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            ASSIGN 1 [source_file: expected0]
                NAME f 1 [source_file: expected0]
                FUNCTION  1 [source_file: expected0]
                    NAME  1 [source_file: expected0]
                    PARAM_LIST 1 [source_file: expected0]
                    BLOCK 1 [source_file: expected0]
                        VAR 2 [source_file: expected0]
                            NAME action 2 [source_file: expected0]
                        LABEL 3 [source_file: expected0]
                            LABEL_NAME a 3 [source_file: expected0]
                            BLOCK 3 [source_file: expected0]
                                VAR 4 [source_file: expected0]
                                    NAME proto 4 [source_file: expected0]
                                        NULL 4 [source_file: expected0]
                                TRY 5 [source_file: expected0]
                                    BLOCK 5 [source_file: expected0]
                                        EXPR_RESULT 6 [source_file: expected0]
                                            ASSIGN 6 [source_file: expected0]
                                                NAME proto 6 [source_file: expected0]
                                                NEW 6 [source_file: expected0]
                                                    NAME Proto 6 [source_file: expected0]
                                    BLOCK 7 [source_file: expected0]
                                    BLOCK 7 [source_file: expected0]
                                        EXPR_RESULT 8 [source_file: expected0]
                                            ASSIGN 8 [source_file: expected0]
                                                NAME action 8 [source_file: expected0]
                                                NAME proto 8 [source_file: expected0]
                                        RETURN 9 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        EXPR_RESULT 1 [source_file: testcode]
            ASSIGN 1 [source_file: testcode]
                NAME f 1 [source_file: testcode]
                FUNCTION  1 [source_file: testcode]
                    NAME  1 [source_file: testcode]
                    PARAM_LIST 1 [source_file: testcode]
                    BLOCK 1 [source_file: testcode]
                        VAR 2 [source_file: testcode]
                            NAME action 2 [source_file: testcode]
                        LABEL 3 [source_file: testcode]
                            LABEL_NAME a 3 [source_file: testcode]
                            BLOCK 3 [source_file: testcode]
                                VAR 4 [source_file: testcode]
                                    NAME proto 4 [source_file: testcode]
                                        NULL 4 [source_file: testcode]
                                TRY 5 [source_file: testcode]
                                    BLOCK 5 [source_file: testcode]
                                        EXPR_RESULT 6 [source_file: testcode]
                                            ASSIGN 6 [source_file: testcode]
                                                NAME proto 6 [source_file: testcode]
                                                NEW 6 [source_file: testcode]
                                                    NAME Proto 6 [source_file: testcode]
                                    BLOCK 7 [source_file: testcode]
                                    BLOCK 7 [source_file: testcode]
                                        EXPR_RESULT 8 [source_file: testcode]
                                            ASSIGN 8 [source_file: testcode]
                                                NAME action 8 [source_file: testcode]
                                                NAME proto 8 [source_file: testcode]


Subtree1: BLOCK 7 [source_file: expected0]
    EXPR_RESULT 8 [source_file: expected0]
        ASSIGN 8 [source_file: expected0]
            NAME action 8 [source_file: expected0]
            NAME proto 8 [source_file: expected0]
    RETURN 9 [source_file: expected0]


Subtree2: BLOCK 7 [source_file: testcode]
    EXPR_RESULT 8 [source_file: testcode]
        ASSIGN 8 [source_file: testcode]
            NAME action 8 [source_file: testcode]
            NAME proto 8 [source_file: testcode]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:928)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:460)
~ testDontRemoveBreakInTryFinally(com.google.javascript.jscomp.UnreachableCodeEliminationTest)
[
Expected: function f(){b:try{throw 9;}finally{break b}return 1}
Result: function f(){b:try{throw 9;}finally{}return 1}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION f 1 [source_file: expected0]
            NAME f 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                LABEL 1 [source_file: expected0]
                    LABEL_NAME b 1 [source_file: expected0]
                    TRY 1 [source_file: expected0]
                        BLOCK 1 [source_file: expected0]
                            THROW 1 [source_file: expected0]
                                NUMBER 9.0 1 [source_file: expected0]
                        BLOCK 1 [source_file: expected0]
                        BLOCK 1 [source_file: expected0]
                            BREAK 1 [source_file: expected0]
                                LABEL_NAME b 1 [source_file: expected0]
                RETURN 1 [source_file: expected0]
                    NUMBER 1.0 1 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION f 1 [source_file: testcode]
            NAME f 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                LABEL 1 [source_file: testcode]
                    LABEL_NAME b 1 [source_file: testcode]
                    TRY 1 [source_file: testcode]
                        BLOCK 1 [source_file: testcode]
                            THROW 1 [source_file: testcode]
                                NUMBER 9.0 1 [source_file: testcode]
                        BLOCK 1 [source_file: testcode]
                        BLOCK 1 [source_file: testcode]
                RETURN 1 [source_file: testcode]
                    NUMBER 1.0 1 [source_file: testcode]


Subtree1: BLOCK 1 [source_file: expected0]
    BREAK 1 [source_file: expected0]
        LABEL_NAME b 1 [source_file: expected0]


Subtree2: BLOCK 1 [source_file: testcode]
]
junit.framework.AssertionFailedError: 
Expected: function f(){b:try{throw 9;}finally{break b}return 1}
Result: function f(){b:try{throw 9;}finally{}return 1}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION f 1 [source_file: expected0]
            NAME f 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                LABEL 1 [source_file: expected0]
                    LABEL_NAME b 1 [source_file: expected0]
                    TRY 1 [source_file: expected0]
                        BLOCK 1 [source_file: expected0]
                            THROW 1 [source_file: expected0]
                                NUMBER 9.0 1 [source_file: expected0]
                        BLOCK 1 [source_file: expected0]
                        BLOCK 1 [source_file: expected0]
                            BREAK 1 [source_file: expected0]
                                LABEL_NAME b 1 [source_file: expected0]
                RETURN 1 [source_file: expected0]
                    NUMBER 1.0 1 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION f 1 [source_file: testcode]
            NAME f 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                LABEL 1 [source_file: testcode]
                    LABEL_NAME b 1 [source_file: testcode]
                    TRY 1 [source_file: testcode]
                        BLOCK 1 [source_file: testcode]
                            THROW 1 [source_file: testcode]
                                NUMBER 9.0 1 [source_file: testcode]
                        BLOCK 1 [source_file: testcode]
                        BLOCK 1 [source_file: testcode]
                RETURN 1 [source_file: testcode]
                    NUMBER 1.0 1 [source_file: testcode]


Subtree1: BLOCK 1 [source_file: expected0]
    BREAK 1 [source_file: expected0]
        LABEL_NAME b 1 [source_file: expected0]


Subtree2: BLOCK 1 [source_file: testcode]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:928)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:460)
~ testIssue4177428_continue(com.google.javascript.jscomp.UnreachableCodeEliminationTest)
[
Expected: f=function(){var action;a:do{var proto=null;try{proto=new Proto}finally{action=proto;continue a}}while(false);alert(action)}
Result: f=function(){var action;a:do{var proto=null;try{proto=new Proto}finally{action=proto}}while(false);alert(action)}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            ASSIGN 1 [source_file: expected0]
                NAME f 1 [source_file: expected0]
                FUNCTION  1 [source_file: expected0]
                    NAME  1 [source_file: expected0]
                    PARAM_LIST 1 [source_file: expected0]
                    BLOCK 1 [source_file: expected0]
                        VAR 2 [source_file: expected0]
                            NAME action 2 [source_file: expected0]
                        LABEL 3 [source_file: expected0]
                            LABEL_NAME a 3 [source_file: expected0]
                            DO 3 [source_file: expected0]
                                BLOCK 3 [source_file: expected0]
                                    VAR 4 [source_file: expected0]
                                        NAME proto 4 [source_file: expected0]
                                            NULL 4 [source_file: expected0]
                                    TRY 5 [source_file: expected0]
                                        BLOCK 5 [source_file: expected0]
                                            EXPR_RESULT 6 [source_file: expected0]
                                                ASSIGN 6 [source_file: expected0]
                                                    NAME proto 6 [source_file: expected0]
                                                    NEW 6 [source_file: expected0]
                                                        NAME Proto 6 [source_file: expected0]
                                        BLOCK 7 [source_file: expected0]
                                        BLOCK 7 [source_file: expected0]
                                            EXPR_RESULT 8 [source_file: expected0]
                                                ASSIGN 8 [source_file: expected0]
                                                    NAME action 8 [source_file: expected0]
                                                    NAME proto 8 [source_file: expected0]
                                            CONTINUE 9 [source_file: expected0]
                                                LABEL_NAME a 9 [source_file: expected0]
                                FALSE 11 [source_file: expected0]
                        EXPR_RESULT 12 [source_file: expected0]
                            CALL 12 [free_call: 1] [source_file: expected0]
                                NAME alert 12 [source_file: expected0]
                                NAME action 12 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        EXPR_RESULT 1 [source_file: testcode]
            ASSIGN 1 [source_file: testcode]
                NAME f 1 [source_file: testcode]
                FUNCTION  1 [source_file: testcode]
                    NAME  1 [source_file: testcode]
                    PARAM_LIST 1 [source_file: testcode]
                    BLOCK 1 [source_file: testcode]
                        VAR 2 [source_file: testcode]
                            NAME action 2 [source_file: testcode]
                        LABEL 3 [source_file: testcode]
                            LABEL_NAME a 3 [source_file: testcode]
                            DO 3 [source_file: testcode]
                                BLOCK 3 [source_file: testcode]
                                    VAR 4 [source_file: testcode]
                                        NAME proto 4 [source_file: testcode]
                                            NULL 4 [source_file: testcode]
                                    TRY 5 [source_file: testcode]
                                        BLOCK 5 [source_file: testcode]
                                            EXPR_RESULT 6 [source_file: testcode]
                                                ASSIGN 6 [source_file: testcode]
                                                    NAME proto 6 [source_file: testcode]
                                                    NEW 6 [source_file: testcode]
                                                        NAME Proto 6 [source_file: testcode]
                                        BLOCK 7 [source_file: testcode]
                                        BLOCK 7 [source_file: testcode]
                                            EXPR_RESULT 8 [source_file: testcode]
                                                ASSIGN 8 [source_file: testcode]
                                                    NAME action 8 [source_file: testcode]
                                                    NAME proto 8 [source_file: testcode]
                                FALSE 11 [source_file: testcode]
                        EXPR_RESULT 12 [source_file: testcode]
                            CALL 12 [free_call: 1] [source_file: testcode]
                                NAME alert 12 [source_file: testcode]
                                NAME action 12 [source_file: testcode]


Subtree1: BLOCK 7 [source_file: expected0]
    EXPR_RESULT 8 [source_file: expected0]
        ASSIGN 8 [source_file: expected0]
            NAME action 8 [source_file: expected0]
            NAME proto 8 [source_file: expected0]
    CONTINUE 9 [source_file: expected0]
        LABEL_NAME a 9 [source_file: expected0]


Subtree2: BLOCK 7 [source_file: testcode]
    EXPR_RESULT 8 [source_file: testcode]
        ASSIGN 8 [source_file: testcode]
            NAME action 8 [source_file: testcode]
            NAME proto 8 [source_file: testcode]
]
junit.framework.AssertionFailedError: 
Expected: f=function(){var action;a:do{var proto=null;try{proto=new Proto}finally{action=proto;continue a}}while(false);alert(action)}
Result: f=function(){var action;a:do{var proto=null;try{proto=new Proto}finally{action=proto}}while(false);alert(action)}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            ASSIGN 1 [source_file: expected0]
                NAME f 1 [source_file: expected0]
                FUNCTION  1 [source_file: expected0]
                    NAME  1 [source_file: expected0]
                    PARAM_LIST 1 [source_file: expected0]
                    BLOCK 1 [source_file: expected0]
                        VAR 2 [source_file: expected0]
                            NAME action 2 [source_file: expected0]
                        LABEL 3 [source_file: expected0]
                            LABEL_NAME a 3 [source_file: expected0]
                            DO 3 [source_file: expected0]
                                BLOCK 3 [source_file: expected0]
                                    VAR 4 [source_file: expected0]
                                        NAME proto 4 [source_file: expected0]
                                            NULL 4 [source_file: expected0]
                                    TRY 5 [source_file: expected0]
                                        BLOCK 5 [source_file: expected0]
                                            EXPR_RESULT 6 [source_file: expected0]
                                                ASSIGN 6 [source_file: expected0]
                                                    NAME proto 6 [source_file: expected0]
                                                    NEW 6 [source_file: expected0]
                                                        NAME Proto 6 [source_file: expected0]
                                        BLOCK 7 [source_file: expected0]
                                        BLOCK 7 [source_file: expected0]
                                            EXPR_RESULT 8 [source_file: expected0]
                                                ASSIGN 8 [source_file: expected0]
                                                    NAME action 8 [source_file: expected0]
                                                    NAME proto 8 [source_file: expected0]
                                            CONTINUE 9 [source_file: expected0]
                                                LABEL_NAME a 9 [source_file: expected0]
                                FALSE 11 [source_file: expected0]
                        EXPR_RESULT 12 [source_file: expected0]
                            CALL 12 [free_call: 1] [source_file: expected0]
                                NAME alert 12 [source_file: expected0]
                                NAME action 12 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        EXPR_RESULT 1 [source_file: testcode]
            ASSIGN 1 [source_file: testcode]
                NAME f 1 [source_file: testcode]
                FUNCTION  1 [source_file: testcode]
                    NAME  1 [source_file: testcode]
                    PARAM_LIST 1 [source_file: testcode]
                    BLOCK 1 [source_file: testcode]
                        VAR 2 [source_file: testcode]
                            NAME action 2 [source_file: testcode]
                        LABEL 3 [source_file: testcode]
                            LABEL_NAME a 3 [source_file: testcode]
                            DO 3 [source_file: testcode]
                                BLOCK 3 [source_file: testcode]
                                    VAR 4 [source_file: testcode]
                                        NAME proto 4 [source_file: testcode]
                                            NULL 4 [source_file: testcode]
                                    TRY 5 [source_file: testcode]
                                        BLOCK 5 [source_file: testcode]
                                            EXPR_RESULT 6 [source_file: testcode]
                                                ASSIGN 6 [source_file: testcode]
                                                    NAME proto 6 [source_file: testcode]
                                                    NEW 6 [source_file: testcode]
                                                        NAME Proto 6 [source_file: testcode]
                                        BLOCK 7 [source_file: testcode]
                                        BLOCK 7 [source_file: testcode]
                                            EXPR_RESULT 8 [source_file: testcode]
                                                ASSIGN 8 [source_file: testcode]
                                                    NAME action 8 [source_file: testcode]
                                                    NAME proto 8 [source_file: testcode]
                                FALSE 11 [source_file: testcode]
                        EXPR_RESULT 12 [source_file: testcode]
                            CALL 12 [free_call: 1] [source_file: testcode]
                                NAME alert 12 [source_file: testcode]
                                NAME action 12 [source_file: testcode]


Subtree1: BLOCK 7 [source_file: expected0]
    EXPR_RESULT 8 [source_file: expected0]
        ASSIGN 8 [source_file: expected0]
            NAME action 8 [source_file: expected0]
            NAME proto 8 [source_file: expected0]
    CONTINUE 9 [source_file: expected0]
        LABEL_NAME a 9 [source_file: expected0]


Subtree2: BLOCK 7 [source_file: testcode]
    EXPR_RESULT 8 [source_file: testcode]
        ASSIGN 8 [source_file: testcode]
            NAME action 8 [source_file: testcode]
            NAME proto 8 [source_file: testcode]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:928)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:460)
~ testDontRemoveBreakInTryFinallySwitch(com.google.javascript.jscomp.UnreachableCodeEliminationTest)
[
Expected: function f(){b:try{throw 9;}finally{switch(x){case 1:break b}}return 1}
Result: function f(){b:try{throw 9;}finally{switch(x){case 1:}}return 1}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION f 1 [source_file: expected0]
            NAME f 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                LABEL 1 [source_file: expected0]
                    LABEL_NAME b 1 [source_file: expected0]
                    TRY 1 [source_file: expected0]
                        BLOCK 1 [source_file: expected0]
                            THROW 1 [source_file: expected0]
                                NUMBER 9.0 1 [source_file: expected0]
                        BLOCK 1 [source_file: expected0]
                        BLOCK 1 [source_file: expected0]
                            SWITCH 1 [source_file: expected0]
                                NAME x 1 [source_file: expected0]
                                CASE 1 [source_file: expected0]
                                    NUMBER 1.0 1 [source_file: expected0]
                                    BLOCK 1 [synthetic: 1] [source_file: expected0]
                                        BREAK 1 [source_file: expected0]
                                            LABEL_NAME b 1 [source_file: expected0]
                RETURN 1 [source_file: expected0]
                    NUMBER 1.0 1 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION f 1 [source_file: testcode]
            NAME f 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                LABEL 1 [source_file: testcode]
                    LABEL_NAME b 1 [source_file: testcode]
                    TRY 1 [source_file: testcode]
                        BLOCK 1 [source_file: testcode]
                            THROW 1 [source_file: testcode]
                                NUMBER 9.0 1 [source_file: testcode]
                        BLOCK 1 [source_file: testcode]
                        BLOCK 1 [source_file: testcode]
                            SWITCH 1 [source_file: testcode]
                                NAME x 1 [source_file: testcode]
                                CASE 1 [source_file: testcode]
                                    NUMBER 1.0 1 [source_file: testcode]
                                    BLOCK 1 [synthetic: 1] [source_file: testcode]
                RETURN 1 [source_file: testcode]
                    NUMBER 1.0 1 [source_file: testcode]


Subtree1: BLOCK 1 [synthetic: 1] [source_file: expected0]
    BREAK 1 [source_file: expected0]
        LABEL_NAME b 1 [source_file: expected0]


Subtree2: BLOCK 1 [synthetic: 1] [source_file: testcode]
]
junit.framework.AssertionFailedError: 
Expected: function f(){b:try{throw 9;}finally{switch(x){case 1:break b}}return 1}
Result: function f(){b:try{throw 9;}finally{switch(x){case 1:}}return 1}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION f 1 [source_file: expected0]
            NAME f 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                LABEL 1 [source_file: expected0]
                    LABEL_NAME b 1 [source_file: expected0]
                    TRY 1 [source_file: expected0]
                        BLOCK 1 [source_file: expected0]
                            THROW 1 [source_file: expected0]
                                NUMBER 9.0 1 [source_file: expected0]
                        BLOCK 1 [source_file: expected0]
                        BLOCK 1 [source_file: expected0]
                            SWITCH 1 [source_file: expected0]
                                NAME x 1 [source_file: expected0]
                                CASE 1 [source_file: expected0]
                                    NUMBER 1.0 1 [source_file: expected0]
                                    BLOCK 1 [synthetic: 1] [source_file: expected0]
                                        BREAK 1 [source_file: expected0]
                                            LABEL_NAME b 1 [source_file: expected0]
                RETURN 1 [source_file: expected0]
                    NUMBER 1.0 1 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION f 1 [source_file: testcode]
            NAME f 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                LABEL 1 [source_file: testcode]
                    LABEL_NAME b 1 [source_file: testcode]
                    TRY 1 [source_file: testcode]
                        BLOCK 1 [source_file: testcode]
                            THROW 1 [source_file: testcode]
                                NUMBER 9.0 1 [source_file: testcode]
                        BLOCK 1 [source_file: testcode]
                        BLOCK 1 [source_file: testcode]
                            SWITCH 1 [source_file: testcode]
                                NAME x 1 [source_file: testcode]
                                CASE 1 [source_file: testcode]
                                    NUMBER 1.0 1 [source_file: testcode]
                                    BLOCK 1 [synthetic: 1] [source_file: testcode]
                RETURN 1 [source_file: testcode]
                    NUMBER 1.0 1 [source_file: testcode]


Subtree1: BLOCK 1 [synthetic: 1] [source_file: expected0]
    BREAK 1 [source_file: expected0]
        LABEL_NAME b 1 [source_file: expected0]


Subtree2: BLOCK 1 [synthetic: 1] [source_file: testcode]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:928)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:460)
~ testIssue4177428a(com.google.javascript.jscomp.UnreachableCodeEliminationTest)
[
Expected: f=function(){var action;a:{var proto=null;try{proto=new Proto}finally{action=proto;break a}}alert(action)}
Result: f=function(){var action;a:{var proto=null;try{proto=new Proto}finally{action=proto}}alert(action)}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            ASSIGN 1 [source_file: expected0]
                NAME f 1 [source_file: expected0]
                FUNCTION  1 [source_file: expected0]
                    NAME  1 [source_file: expected0]
                    PARAM_LIST 1 [source_file: expected0]
                    BLOCK 1 [source_file: expected0]
                        VAR 2 [source_file: expected0]
                            NAME action 2 [source_file: expected0]
                        LABEL 3 [source_file: expected0]
                            LABEL_NAME a 3 [source_file: expected0]
                            BLOCK 3 [source_file: expected0]
                                VAR 4 [source_file: expected0]
                                    NAME proto 4 [source_file: expected0]
                                        NULL 4 [source_file: expected0]
                                TRY 5 [source_file: expected0]
                                    BLOCK 5 [source_file: expected0]
                                        EXPR_RESULT 6 [source_file: expected0]
                                            ASSIGN 6 [source_file: expected0]
                                                NAME proto 6 [source_file: expected0]
                                                NEW 6 [source_file: expected0]
                                                    NAME Proto 6 [source_file: expected0]
                                    BLOCK 7 [source_file: expected0]
                                    BLOCK 7 [source_file: expected0]
                                        EXPR_RESULT 8 [source_file: expected0]
                                            ASSIGN 8 [source_file: expected0]
                                                NAME action 8 [source_file: expected0]
                                                NAME proto 8 [source_file: expected0]
                                        BREAK 9 [source_file: expected0]
                                            LABEL_NAME a 9 [source_file: expected0]
                        EXPR_RESULT 12 [source_file: expected0]
                            CALL 12 [free_call: 1] [source_file: expected0]
                                NAME alert 12 [source_file: expected0]
                                NAME action 12 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        EXPR_RESULT 1 [source_file: testcode]
            ASSIGN 1 [source_file: testcode]
                NAME f 1 [source_file: testcode]
                FUNCTION  1 [source_file: testcode]
                    NAME  1 [source_file: testcode]
                    PARAM_LIST 1 [source_file: testcode]
                    BLOCK 1 [source_file: testcode]
                        VAR 2 [source_file: testcode]
                            NAME action 2 [source_file: testcode]
                        LABEL 3 [source_file: testcode]
                            LABEL_NAME a 3 [source_file: testcode]
                            BLOCK 3 [source_file: testcode]
                                VAR 4 [source_file: testcode]
                                    NAME proto 4 [source_file: testcode]
                                        NULL 4 [source_file: testcode]
                                TRY 5 [source_file: testcode]
                                    BLOCK 5 [source_file: testcode]
                                        EXPR_RESULT 6 [source_file: testcode]
                                            ASSIGN 6 [source_file: testcode]
                                                NAME proto 6 [source_file: testcode]
                                                NEW 6 [source_file: testcode]
                                                    NAME Proto 6 [source_file: testcode]
                                    BLOCK 7 [source_file: testcode]
                                    BLOCK 7 [source_file: testcode]
                                        EXPR_RESULT 8 [source_file: testcode]
                                            ASSIGN 8 [source_file: testcode]
                                                NAME action 8 [source_file: testcode]
                                                NAME proto 8 [source_file: testcode]
                        EXPR_RESULT 12 [source_file: testcode]
                            CALL 12 [free_call: 1] [source_file: testcode]
                                NAME alert 12 [source_file: testcode]
                                NAME action 12 [source_file: testcode]


Subtree1: BLOCK 7 [source_file: expected0]
    EXPR_RESULT 8 [source_file: expected0]
        ASSIGN 8 [source_file: expected0]
            NAME action 8 [source_file: expected0]
            NAME proto 8 [source_file: expected0]
    BREAK 9 [source_file: expected0]
        LABEL_NAME a 9 [source_file: expected0]


Subtree2: BLOCK 7 [source_file: testcode]
    EXPR_RESULT 8 [source_file: testcode]
        ASSIGN 8 [source_file: testcode]
            NAME action 8 [source_file: testcode]
            NAME proto 8 [source_file: testcode]
]
junit.framework.AssertionFailedError: 
Expected: f=function(){var action;a:{var proto=null;try{proto=new Proto}finally{action=proto;break a}}alert(action)}
Result: f=function(){var action;a:{var proto=null;try{proto=new Proto}finally{action=proto}}alert(action)}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            ASSIGN 1 [source_file: expected0]
                NAME f 1 [source_file: expected0]
                FUNCTION  1 [source_file: expected0]
                    NAME  1 [source_file: expected0]
                    PARAM_LIST 1 [source_file: expected0]
                    BLOCK 1 [source_file: expected0]
                        VAR 2 [source_file: expected0]
                            NAME action 2 [source_file: expected0]
                        LABEL 3 [source_file: expected0]
                            LABEL_NAME a 3 [source_file: expected0]
                            BLOCK 3 [source_file: expected0]
                                VAR 4 [source_file: expected0]
                                    NAME proto 4 [source_file: expected0]
                                        NULL 4 [source_file: expected0]
                                TRY 5 [source_file: expected0]
                                    BLOCK 5 [source_file: expected0]
                                        EXPR_RESULT 6 [source_file: expected0]
                                            ASSIGN 6 [source_file: expected0]
                                                NAME proto 6 [source_file: expected0]
                                                NEW 6 [source_file: expected0]
                                                    NAME Proto 6 [source_file: expected0]
                                    BLOCK 7 [source_file: expected0]
                                    BLOCK 7 [source_file: expected0]
                                        EXPR_RESULT 8 [source_file: expected0]
                                            ASSIGN 8 [source_file: expected0]
                                                NAME action 8 [source_file: expected0]
                                                NAME proto 8 [source_file: expected0]
                                        BREAK 9 [source_file: expected0]
                                            LABEL_NAME a 9 [source_file: expected0]
                        EXPR_RESULT 12 [source_file: expected0]
                            CALL 12 [free_call: 1] [source_file: expected0]
                                NAME alert 12 [source_file: expected0]
                                NAME action 12 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        EXPR_RESULT 1 [source_file: testcode]
            ASSIGN 1 [source_file: testcode]
                NAME f 1 [source_file: testcode]
                FUNCTION  1 [source_file: testcode]
                    NAME  1 [source_file: testcode]
                    PARAM_LIST 1 [source_file: testcode]
                    BLOCK 1 [source_file: testcode]
                        VAR 2 [source_file: testcode]
                            NAME action 2 [source_file: testcode]
                        LABEL 3 [source_file: testcode]
                            LABEL_NAME a 3 [source_file: testcode]
                            BLOCK 3 [source_file: testcode]
                                VAR 4 [source_file: testcode]
                                    NAME proto 4 [source_file: testcode]
                                        NULL 4 [source_file: testcode]
                                TRY 5 [source_file: testcode]
                                    BLOCK 5 [source_file: testcode]
                                        EXPR_RESULT 6 [source_file: testcode]
                                            ASSIGN 6 [source_file: testcode]
                                                NAME proto 6 [source_file: testcode]
                                                NEW 6 [source_file: testcode]
                                                    NAME Proto 6 [source_file: testcode]
                                    BLOCK 7 [source_file: testcode]
                                    BLOCK 7 [source_file: testcode]
                                        EXPR_RESULT 8 [source_file: testcode]
                                            ASSIGN 8 [source_file: testcode]
                                                NAME action 8 [source_file: testcode]
                                                NAME proto 8 [source_file: testcode]
                        EXPR_RESULT 12 [source_file: testcode]
                            CALL 12 [free_call: 1] [source_file: testcode]
                                NAME alert 12 [source_file: testcode]
                                NAME action 12 [source_file: testcode]


Subtree1: BLOCK 7 [source_file: expected0]
    EXPR_RESULT 8 [source_file: expected0]
        ASSIGN 8 [source_file: expected0]
            NAME action 8 [source_file: expected0]
            NAME proto 8 [source_file: expected0]
    BREAK 9 [source_file: expected0]
        LABEL_NAME a 9 [source_file: expected0]


Subtree2: BLOCK 7 [source_file: testcode]
    EXPR_RESULT 8 [source_file: testcode]
        ASSIGN 8 [source_file: testcode]
            NAME action 8 [source_file: testcode]
            NAME proto 8 [source_file: testcode]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:928)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:460)
~ testIssue4177428c(com.google.javascript.jscomp.UnreachableCodeEliminationTest)
[
Expected: f=function(){var action;a:{var proto=null;try{}finally{try{proto=new Proto}finally{action=proto;break a}}}alert(action)}
Result: f=function(){var action;a:{var proto=null;try{}finally{try{proto=new Proto}finally{action=proto}}}alert(action)}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            ASSIGN 1 [source_file: expected0]
                NAME f 1 [source_file: expected0]
                FUNCTION  1 [source_file: expected0]
                    NAME  1 [source_file: expected0]
                    PARAM_LIST 1 [source_file: expected0]
                    BLOCK 1 [source_file: expected0]
                        VAR 2 [source_file: expected0]
                            NAME action 2 [source_file: expected0]
                        LABEL 3 [source_file: expected0]
                            LABEL_NAME a 3 [source_file: expected0]
                            BLOCK 3 [source_file: expected0]
                                VAR 4 [source_file: expected0]
                                    NAME proto 4 [source_file: expected0]
                                        NULL 4 [source_file: expected0]
                                TRY 5 [source_file: expected0]
                                    BLOCK 5 [source_file: expected0]
                                    BLOCK 6 [source_file: expected0]
                                    BLOCK 6 [source_file: expected0]
                                        TRY 7 [source_file: expected0]
                                            BLOCK 7 [source_file: expected0]
                                                EXPR_RESULT 8 [source_file: expected0]
                                                    ASSIGN 8 [source_file: expected0]
                                                        NAME proto 8 [source_file: expected0]
                                                        NEW 8 [source_file: expected0]
                                                            NAME Proto 8 [source_file: expected0]
                                            BLOCK 9 [source_file: expected0]
                                            BLOCK 9 [source_file: expected0]
                                                EXPR_RESULT 10 [source_file: expected0]
                                                    ASSIGN 10 [source_file: expected0]
                                                        NAME action 10 [source_file: expected0]
                                                        NAME proto 10 [source_file: expected0]
                                                BREAK 11 [source_file: expected0]
                                                    LABEL_NAME a 11 [source_file: expected0]
                        EXPR_RESULT 15 [source_file: expected0]
                            CALL 15 [free_call: 1] [source_file: expected0]
                                NAME alert 15 [source_file: expected0]
                                NAME action 15 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        EXPR_RESULT 1 [source_file: testcode]
            ASSIGN 1 [source_file: testcode]
                NAME f 1 [source_file: testcode]
                FUNCTION  1 [source_file: testcode]
                    NAME  1 [source_file: testcode]
                    PARAM_LIST 1 [source_file: testcode]
                    BLOCK 1 [source_file: testcode]
                        VAR 2 [source_file: testcode]
                            NAME action 2 [source_file: testcode]
                        LABEL 3 [source_file: testcode]
                            LABEL_NAME a 3 [source_file: testcode]
                            BLOCK 3 [source_file: testcode]
                                VAR 4 [source_file: testcode]
                                    NAME proto 4 [source_file: testcode]
                                        NULL 4 [source_file: testcode]
                                TRY 5 [source_file: testcode]
                                    BLOCK 5 [source_file: testcode]
                                    BLOCK 6 [source_file: testcode]
                                    BLOCK 6 [source_file: testcode]
                                        TRY 7 [source_file: testcode]
                                            BLOCK 7 [source_file: testcode]
                                                EXPR_RESULT 8 [source_file: testcode]
                                                    ASSIGN 8 [source_file: testcode]
                                                        NAME proto 8 [source_file: testcode]
                                                        NEW 8 [source_file: testcode]
                                                            NAME Proto 8 [source_file: testcode]
                                            BLOCK 9 [source_file: testcode]
                                            BLOCK 9 [source_file: testcode]
                                                EXPR_RESULT 10 [source_file: testcode]
                                                    ASSIGN 10 [source_file: testcode]
                                                        NAME action 10 [source_file: testcode]
                                                        NAME proto 10 [source_file: testcode]
                        EXPR_RESULT 15 [source_file: testcode]
                            CALL 15 [free_call: 1] [source_file: testcode]
                                NAME alert 15 [source_file: testcode]
                                NAME action 15 [source_file: testcode]


Subtree1: BLOCK 9 [source_file: expected0]
    EXPR_RESULT 10 [source_file: expected0]
        ASSIGN 10 [source_file: expected0]
            NAME action 10 [source_file: expected0]
            NAME proto 10 [source_file: expected0]
    BREAK 11 [source_file: expected0]
        LABEL_NAME a 11 [source_file: expected0]


Subtree2: BLOCK 9 [source_file: testcode]
    EXPR_RESULT 10 [source_file: testcode]
        ASSIGN 10 [source_file: testcode]
            NAME action 10 [source_file: testcode]
            NAME proto 10 [source_file: testcode]
]
junit.framework.AssertionFailedError: 
Expected: f=function(){var action;a:{var proto=null;try{}finally{try{proto=new Proto}finally{action=proto;break a}}}alert(action)}
Result: f=function(){var action;a:{var proto=null;try{}finally{try{proto=new Proto}finally{action=proto}}}alert(action)}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            ASSIGN 1 [source_file: expected0]
                NAME f 1 [source_file: expected0]
                FUNCTION  1 [source_file: expected0]
                    NAME  1 [source_file: expected0]
                    PARAM_LIST 1 [source_file: expected0]
                    BLOCK 1 [source_file: expected0]
                        VAR 2 [source_file: expected0]
                            NAME action 2 [source_file: expected0]
                        LABEL 3 [source_file: expected0]
                            LABEL_NAME a 3 [source_file: expected0]
                            BLOCK 3 [source_file: expected0]
                                VAR 4 [source_file: expected0]
                                    NAME proto 4 [source_file: expected0]
                                        NULL 4 [source_file: expected0]
                                TRY 5 [source_file: expected0]
                                    BLOCK 5 [source_file: expected0]
                                    BLOCK 6 [source_file: expected0]
                                    BLOCK 6 [source_file: expected0]
                                        TRY 7 [source_file: expected0]
                                            BLOCK 7 [source_file: expected0]
                                                EXPR_RESULT 8 [source_file: expected0]
                                                    ASSIGN 8 [source_file: expected0]
                                                        NAME proto 8 [source_file: expected0]
                                                        NEW 8 [source_file: expected0]
                                                            NAME Proto 8 [source_file: expected0]
                                            BLOCK 9 [source_file: expected0]
                                            BLOCK 9 [source_file: expected0]
                                                EXPR_RESULT 10 [source_file: expected0]
                                                    ASSIGN 10 [source_file: expected0]
                                                        NAME action 10 [source_file: expected0]
                                                        NAME proto 10 [source_file: expected0]
                                                BREAK 11 [source_file: expected0]
                                                    LABEL_NAME a 11 [source_file: expected0]
                        EXPR_RESULT 15 [source_file: expected0]
                            CALL 15 [free_call: 1] [source_file: expected0]
                                NAME alert 15 [source_file: expected0]
                                NAME action 15 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        EXPR_RESULT 1 [source_file: testcode]
            ASSIGN 1 [source_file: testcode]
                NAME f 1 [source_file: testcode]
                FUNCTION  1 [source_file: testcode]
                    NAME  1 [source_file: testcode]
                    PARAM_LIST 1 [source_file: testcode]
                    BLOCK 1 [source_file: testcode]
                        VAR 2 [source_file: testcode]
                            NAME action 2 [source_file: testcode]
                        LABEL 3 [source_file: testcode]
                            LABEL_NAME a 3 [source_file: testcode]
                            BLOCK 3 [source_file: testcode]
                                VAR 4 [source_file: testcode]
                                    NAME proto 4 [source_file: testcode]
                                        NULL 4 [source_file: testcode]
                                TRY 5 [source_file: testcode]
                                    BLOCK 5 [source_file: testcode]
                                    BLOCK 6 [source_file: testcode]
                                    BLOCK 6 [source_file: testcode]
                                        TRY 7 [source_file: testcode]
                                            BLOCK 7 [source_file: testcode]
                                                EXPR_RESULT 8 [source_file: testcode]
                                                    ASSIGN 8 [source_file: testcode]
                                                        NAME proto 8 [source_file: testcode]
                                                        NEW 8 [source_file: testcode]
                                                            NAME Proto 8 [source_file: testcode]
                                            BLOCK 9 [source_file: testcode]
                                            BLOCK 9 [source_file: testcode]
                                                EXPR_RESULT 10 [source_file: testcode]
                                                    ASSIGN 10 [source_file: testcode]
                                                        NAME action 10 [source_file: testcode]
                                                        NAME proto 10 [source_file: testcode]
                        EXPR_RESULT 15 [source_file: testcode]
                            CALL 15 [free_call: 1] [source_file: testcode]
                                NAME alert 15 [source_file: testcode]
                                NAME action 15 [source_file: testcode]


Subtree1: BLOCK 9 [source_file: expected0]
    EXPR_RESULT 10 [source_file: expected0]
        ASSIGN 10 [source_file: expected0]
            NAME action 10 [source_file: expected0]
            NAME proto 10 [source_file: expected0]
    BREAK 11 [source_file: expected0]
        LABEL_NAME a 11 [source_file: expected0]


Subtree2: BLOCK 9 [source_file: testcode]
    EXPR_RESULT 10 [source_file: testcode]
        ASSIGN 10 [source_file: testcode]
            NAME action 10 [source_file: testcode]
            NAME proto 10 [source_file: testcode]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:928)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:460)
~ testIssue4177428_return(com.google.javascript.jscomp.UnreachableCodeEliminationTest)
[
Expected: f=function(){var action;a:{var proto=null;try{proto=new Proto}finally{action=proto;return}}}
Result: f=function(){var action;a:{var proto=null;try{proto=new Proto}finally{action=proto}}}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            ASSIGN 1 [source_file: expected0]
                NAME f 1 [source_file: expected0]
                FUNCTION  1 [source_file: expected0]
                    NAME  1 [source_file: expected0]
                    PARAM_LIST 1 [source_file: expected0]
                    BLOCK 1 [source_file: expected0]
                        VAR 2 [source_file: expected0]
                            NAME action 2 [source_file: expected0]
                        LABEL 3 [source_file: expected0]
                            LABEL_NAME a 3 [source_file: expected0]
                            BLOCK 3 [source_file: expected0]
                                VAR 4 [source_file: expected0]
                                    NAME proto 4 [source_file: expected0]
                                        NULL 4 [source_file: expected0]
                                TRY 5 [source_file: expected0]
                                    BLOCK 5 [source_file: expected0]
                                        EXPR_RESULT 6 [source_file: expected0]
                                            ASSIGN 6 [source_file: expected0]
                                                NAME proto 6 [source_file: expected0]
                                                NEW 6 [source_file: expected0]
                                                    NAME Proto 6 [source_file: expected0]
                                    BLOCK 7 [source_file: expected0]
                                    BLOCK 7 [source_file: expected0]
                                        EXPR_RESULT 8 [source_file: expected0]
                                            ASSIGN 8 [source_file: expected0]
                                                NAME action 8 [source_file: expected0]
                                                NAME proto 8 [source_file: expected0]
                                        RETURN 9 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        EXPR_RESULT 1 [source_file: testcode]
            ASSIGN 1 [source_file: testcode]
                NAME f 1 [source_file: testcode]
                FUNCTION  1 [source_file: testcode]
                    NAME  1 [source_file: testcode]
                    PARAM_LIST 1 [source_file: testcode]
                    BLOCK 1 [source_file: testcode]
                        VAR 2 [source_file: testcode]
                            NAME action 2 [source_file: testcode]
                        LABEL 3 [source_file: testcode]
                            LABEL_NAME a 3 [source_file: testcode]
                            BLOCK 3 [source_file: testcode]
                                VAR 4 [source_file: testcode]
                                    NAME proto 4 [source_file: testcode]
                                        NULL 4 [source_file: testcode]
                                TRY 5 [source_file: testcode]
                                    BLOCK 5 [source_file: testcode]
                                        EXPR_RESULT 6 [source_file: testcode]
                                            ASSIGN 6 [source_file: testcode]
                                                NAME proto 6 [source_file: testcode]
                                                NEW 6 [source_file: testcode]
                                                    NAME Proto 6 [source_file: testcode]
                                    BLOCK 7 [source_file: testcode]
                                    BLOCK 7 [source_file: testcode]
                                        EXPR_RESULT 8 [source_file: testcode]
                                            ASSIGN 8 [source_file: testcode]
                                                NAME action 8 [source_file: testcode]
                                                NAME proto 8 [source_file: testcode]


Subtree1: BLOCK 7 [source_file: expected0]
    EXPR_RESULT 8 [source_file: expected0]
        ASSIGN 8 [source_file: expected0]
            NAME action 8 [source_file: expected0]
            NAME proto 8 [source_file: expected0]
    RETURN 9 [source_file: expected0]


Subtree2: BLOCK 7 [source_file: testcode]
    EXPR_RESULT 8 [source_file: testcode]
        ASSIGN 8 [source_file: testcode]
            NAME action 8 [source_file: testcode]
            NAME proto 8 [source_file: testcode]
]
junit.framework.AssertionFailedError: 
Expected: f=function(){var action;a:{var proto=null;try{proto=new Proto}finally{action=proto;return}}}
Result: f=function(){var action;a:{var proto=null;try{proto=new Proto}finally{action=proto}}}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            ASSIGN 1 [source_file: expected0]
                NAME f 1 [source_file: expected0]
                FUNCTION  1 [source_file: expected0]
                    NAME  1 [source_file: expected0]
                    PARAM_LIST 1 [source_file: expected0]
                    BLOCK 1 [source_file: expected0]
                        VAR 2 [source_file: expected0]
                            NAME action 2 [source_file: expected0]
                        LABEL 3 [source_file: expected0]
                            LABEL_NAME a 3 [source_file: expected0]
                            BLOCK 3 [source_file: expected0]
                                VAR 4 [source_file: expected0]
                                    NAME proto 4 [source_file: expected0]
                                        NULL 4 [source_file: expected0]
                                TRY 5 [source_file: expected0]
                                    BLOCK 5 [source_file: expected0]
                                        EXPR_RESULT 6 [source_file: expected0]
                                            ASSIGN 6 [source_file: expected0]
                                                NAME proto 6 [source_file: expected0]
                                                NEW 6 [source_file: expected0]
                                                    NAME Proto 6 [source_file: expected0]
                                    BLOCK 7 [source_file: expected0]
                                    BLOCK 7 [source_file: expected0]
                                        EXPR_RESULT 8 [source_file: expected0]
                                            ASSIGN 8 [source_file: expected0]
                                                NAME action 8 [source_file: expected0]
                                                NAME proto 8 [source_file: expected0]
                                        RETURN 9 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        EXPR_RESULT 1 [source_file: testcode]
            ASSIGN 1 [source_file: testcode]
                NAME f 1 [source_file: testcode]
                FUNCTION  1 [source_file: testcode]
                    NAME  1 [source_file: testcode]
                    PARAM_LIST 1 [source_file: testcode]
                    BLOCK 1 [source_file: testcode]
                        VAR 2 [source_file: testcode]
                            NAME action 2 [source_file: testcode]
                        LABEL 3 [source_file: testcode]
                            LABEL_NAME a 3 [source_file: testcode]
                            BLOCK 3 [source_file: testcode]
                                VAR 4 [source_file: testcode]
                                    NAME proto 4 [source_file: testcode]
                                        NULL 4 [source_file: testcode]
                                TRY 5 [source_file: testcode]
                                    BLOCK 5 [source_file: testcode]
                                        EXPR_RESULT 6 [source_file: testcode]
                                            ASSIGN 6 [source_file: testcode]
                                                NAME proto 6 [source_file: testcode]
                                                NEW 6 [source_file: testcode]
                                                    NAME Proto 6 [source_file: testcode]
                                    BLOCK 7 [source_file: testcode]
                                    BLOCK 7 [source_file: testcode]
                                        EXPR_RESULT 8 [source_file: testcode]
                                            ASSIGN 8 [source_file: testcode]
                                                NAME action 8 [source_file: testcode]
                                                NAME proto 8 [source_file: testcode]


Subtree1: BLOCK 7 [source_file: expected0]
    EXPR_RESULT 8 [source_file: expected0]
        ASSIGN 8 [source_file: expected0]
            NAME action 8 [source_file: expected0]
            NAME proto 8 [source_file: expected0]
    RETURN 9 [source_file: expected0]


Subtree2: BLOCK 7 [source_file: testcode]
    EXPR_RESULT 8 [source_file: testcode]
        ASSIGN 8 [source_file: testcode]
            NAME action 8 [source_file: testcode]
            NAME proto 8 [source_file: testcode]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:928)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:460)
~ testDontRemoveBreakInTryFinally(com.google.javascript.jscomp.UnreachableCodeEliminationTest)
[
Expected: function f(){b:try{throw 9;}finally{break b}return 1}
Result: function f(){b:try{throw 9;}finally{}return 1}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION f 1 [source_file: expected0]
            NAME f 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                LABEL 1 [source_file: expected0]
                    LABEL_NAME b 1 [source_file: expected0]
                    TRY 1 [source_file: expected0]
                        BLOCK 1 [source_file: expected0]
                            THROW 1 [source_file: expected0]
                                NUMBER 9.0 1 [source_file: expected0]
                        BLOCK 1 [source_file: expected0]
                        BLOCK 1 [source_file: expected0]
                            BREAK 1 [source_file: expected0]
                                LABEL_NAME b 1 [source_file: expected0]
                RETURN 1 [source_file: expected0]
                    NUMBER 1.0 1 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION f 1 [source_file: testcode]
            NAME f 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                LABEL 1 [source_file: testcode]
                    LABEL_NAME b 1 [source_file: testcode]
                    TRY 1 [source_file: testcode]
                        BLOCK 1 [source_file: testcode]
                            THROW 1 [source_file: testcode]
                                NUMBER 9.0 1 [source_file: testcode]
                        BLOCK 1 [source_file: testcode]
                        BLOCK 1 [source_file: testcode]
                RETURN 1 [source_file: testcode]
                    NUMBER 1.0 1 [source_file: testcode]


Subtree1: BLOCK 1 [source_file: expected0]
    BREAK 1 [source_file: expected0]
        LABEL_NAME b 1 [source_file: expected0]


Subtree2: BLOCK 1 [source_file: testcode]
]
junit.framework.AssertionFailedError: 
Expected: function f(){b:try{throw 9;}finally{break b}return 1}
Result: function f(){b:try{throw 9;}finally{}return 1}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION f 1 [source_file: expected0]
            NAME f 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                LABEL 1 [source_file: expected0]
                    LABEL_NAME b 1 [source_file: expected0]
                    TRY 1 [source_file: expected0]
                        BLOCK 1 [source_file: expected0]
                            THROW 1 [source_file: expected0]
                                NUMBER 9.0 1 [source_file: expected0]
                        BLOCK 1 [source_file: expected0]
                        BLOCK 1 [source_file: expected0]
                            BREAK 1 [source_file: expected0]
                                LABEL_NAME b 1 [source_file: expected0]
                RETURN 1 [source_file: expected0]
                    NUMBER 1.0 1 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION f 1 [source_file: testcode]
            NAME f 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                LABEL 1 [source_file: testcode]
                    LABEL_NAME b 1 [source_file: testcode]
                    TRY 1 [source_file: testcode]
                        BLOCK 1 [source_file: testcode]
                            THROW 1 [source_file: testcode]
                                NUMBER 9.0 1 [source_file: testcode]
                        BLOCK 1 [source_file: testcode]
                        BLOCK 1 [source_file: testcode]
                RETURN 1 [source_file: testcode]
                    NUMBER 1.0 1 [source_file: testcode]


Subtree1: BLOCK 1 [source_file: expected0]
    BREAK 1 [source_file: expected0]
        LABEL_NAME b 1 [source_file: expected0]


Subtree2: BLOCK 1 [source_file: testcode]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:928)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:460)
~ testIssue4177428_continue(com.google.javascript.jscomp.UnreachableCodeEliminationTest)
[
Expected: f=function(){var action;a:do{var proto=null;try{proto=new Proto}finally{action=proto;continue a}}while(false);alert(action)}
Result: f=function(){var action;a:do{var proto=null;try{proto=new Proto}finally{action=proto}}while(false);alert(action)}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            ASSIGN 1 [source_file: expected0]
                NAME f 1 [source_file: expected0]
                FUNCTION  1 [source_file: expected0]
                    NAME  1 [source_file: expected0]
                    PARAM_LIST 1 [source_file: expected0]
                    BLOCK 1 [source_file: expected0]
                        VAR 2 [source_file: expected0]
                            NAME action 2 [source_file: expected0]
                        LABEL 3 [source_file: expected0]
                            LABEL_NAME a 3 [source_file: expected0]
                            DO 3 [source_file: expected0]
                                BLOCK 3 [source_file: expected0]
                                    VAR 4 [source_file: expected0]
                                        NAME proto 4 [source_file: expected0]
                                            NULL 4 [source_file: expected0]
                                    TRY 5 [source_file: expected0]
                                        BLOCK 5 [source_file: expected0]
                                            EXPR_RESULT 6 [source_file: expected0]
                                                ASSIGN 6 [source_file: expected0]
                                                    NAME proto 6 [source_file: expected0]
                                                    NEW 6 [source_file: expected0]
                                                        NAME Proto 6 [source_file: expected0]
                                        BLOCK 7 [source_file: expected0]
                                        BLOCK 7 [source_file: expected0]
                                            EXPR_RESULT 8 [source_file: expected0]
                                                ASSIGN 8 [source_file: expected0]
                                                    NAME action 8 [source_file: expected0]
                                                    NAME proto 8 [source_file: expected0]
                                            CONTINUE 9 [source_file: expected0]
                                                LABEL_NAME a 9 [source_file: expected0]
                                FALSE 11 [source_file: expected0]
                        EXPR_RESULT 12 [source_file: expected0]
                            CALL 12 [free_call: 1] [source_file: expected0]
                                NAME alert 12 [source_file: expected0]
                                NAME action 12 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        EXPR_RESULT 1 [source_file: testcode]
            ASSIGN 1 [source_file: testcode]
                NAME f 1 [source_file: testcode]
                FUNCTION  1 [source_file: testcode]
                    NAME  1 [source_file: testcode]
                    PARAM_LIST 1 [source_file: testcode]
                    BLOCK 1 [source_file: testcode]
                        VAR 2 [source_file: testcode]
                            NAME action 2 [source_file: testcode]
                        LABEL 3 [source_file: testcode]
                            LABEL_NAME a 3 [source_file: testcode]
                            DO 3 [source_file: testcode]
                                BLOCK 3 [source_file: testcode]
                                    VAR 4 [source_file: testcode]
                                        NAME proto 4 [source_file: testcode]
                                            NULL 4 [source_file: testcode]
                                    TRY 5 [source_file: testcode]
                                        BLOCK 5 [source_file: testcode]
                                            EXPR_RESULT 6 [source_file: testcode]
                                                ASSIGN 6 [source_file: testcode]
                                                    NAME proto 6 [source_file: testcode]
                                                    NEW 6 [source_file: testcode]
                                                        NAME Proto 6 [source_file: testcode]
                                        BLOCK 7 [source_file: testcode]
                                        BLOCK 7 [source_file: testcode]
                                            EXPR_RESULT 8 [source_file: testcode]
                                                ASSIGN 8 [source_file: testcode]
                                                    NAME action 8 [source_file: testcode]
                                                    NAME proto 8 [source_file: testcode]
                                FALSE 11 [source_file: testcode]
                        EXPR_RESULT 12 [source_file: testcode]
                            CALL 12 [free_call: 1] [source_file: testcode]
                                NAME alert 12 [source_file: testcode]
                                NAME action 12 [source_file: testcode]


Subtree1: BLOCK 7 [source_file: expected0]
    EXPR_RESULT 8 [source_file: expected0]
        ASSIGN 8 [source_file: expected0]
            NAME action 8 [source_file: expected0]
            NAME proto 8 [source_file: expected0]
    CONTINUE 9 [source_file: expected0]
        LABEL_NAME a 9 [source_file: expected0]


Subtree2: BLOCK 7 [source_file: testcode]
    EXPR_RESULT 8 [source_file: testcode]
        ASSIGN 8 [source_file: testcode]
            NAME action 8 [source_file: testcode]
            NAME proto 8 [source_file: testcode]
]
junit.framework.AssertionFailedError: 
Expected: f=function(){var action;a:do{var proto=null;try{proto=new Proto}finally{action=proto;continue a}}while(false);alert(action)}
Result: f=function(){var action;a:do{var proto=null;try{proto=new Proto}finally{action=proto}}while(false);alert(action)}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            ASSIGN 1 [source_file: expected0]
                NAME f 1 [source_file: expected0]
                FUNCTION  1 [source_file: expected0]
                    NAME  1 [source_file: expected0]
                    PARAM_LIST 1 [source_file: expected0]
                    BLOCK 1 [source_file: expected0]
                        VAR 2 [source_file: expected0]
                            NAME action 2 [source_file: expected0]
                        LABEL 3 [source_file: expected0]
                            LABEL_NAME a 3 [source_file: expected0]
                            DO 3 [source_file: expected0]
                                BLOCK 3 [source_file: expected0]
                                    VAR 4 [source_file: expected0]
                                        NAME proto 4 [source_file: expected0]
                                            NULL 4 [source_file: expected0]
                                    TRY 5 [source_file: expected0]
                                        BLOCK 5 [source_file: expected0]
                                            EXPR_RESULT 6 [source_file: expected0]
                                                ASSIGN 6 [source_file: expected0]
                                                    NAME proto 6 [source_file: expected0]
                                                    NEW 6 [source_file: expected0]
                                                        NAME Proto 6 [source_file: expected0]
                                        BLOCK 7 [source_file: expected0]
                                        BLOCK 7 [source_file: expected0]
                                            EXPR_RESULT 8 [source_file: expected0]
                                                ASSIGN 8 [source_file: expected0]
                                                    NAME action 8 [source_file: expected0]
                                                    NAME proto 8 [source_file: expected0]
                                            CONTINUE 9 [source_file: expected0]
                                                LABEL_NAME a 9 [source_file: expected0]
                                FALSE 11 [source_file: expected0]
                        EXPR_RESULT 12 [source_file: expected0]
                            CALL 12 [free_call: 1] [source_file: expected0]
                                NAME alert 12 [source_file: expected0]
                                NAME action 12 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        EXPR_RESULT 1 [source_file: testcode]
            ASSIGN 1 [source_file: testcode]
                NAME f 1 [source_file: testcode]
                FUNCTION  1 [source_file: testcode]
                    NAME  1 [source_file: testcode]
                    PARAM_LIST 1 [source_file: testcode]
                    BLOCK 1 [source_file: testcode]
                        VAR 2 [source_file: testcode]
                            NAME action 2 [source_file: testcode]
                        LABEL 3 [source_file: testcode]
                            LABEL_NAME a 3 [source_file: testcode]
                            DO 3 [source_file: testcode]
                                BLOCK 3 [source_file: testcode]
                                    VAR 4 [source_file: testcode]
                                        NAME proto 4 [source_file: testcode]
                                            NULL 4 [source_file: testcode]
                                    TRY 5 [source_file: testcode]
                                        BLOCK 5 [source_file: testcode]
                                            EXPR_RESULT 6 [source_file: testcode]
                                                ASSIGN 6 [source_file: testcode]
                                                    NAME proto 6 [source_file: testcode]
                                                    NEW 6 [source_file: testcode]
                                                        NAME Proto 6 [source_file: testcode]
                                        BLOCK 7 [source_file: testcode]
                                        BLOCK 7 [source_file: testcode]
                                            EXPR_RESULT 8 [source_file: testcode]
                                                ASSIGN 8 [source_file: testcode]
                                                    NAME action 8 [source_file: testcode]
                                                    NAME proto 8 [source_file: testcode]
                                FALSE 11 [source_file: testcode]
                        EXPR_RESULT 12 [source_file: testcode]
                            CALL 12 [free_call: 1] [source_file: testcode]
                                NAME alert 12 [source_file: testcode]
                                NAME action 12 [source_file: testcode]


Subtree1: BLOCK 7 [source_file: expected0]
    EXPR_RESULT 8 [source_file: expected0]
        ASSIGN 8 [source_file: expected0]
            NAME action 8 [source_file: expected0]
            NAME proto 8 [source_file: expected0]
    CONTINUE 9 [source_file: expected0]
        LABEL_NAME a 9 [source_file: expected0]


Subtree2: BLOCK 7 [source_file: testcode]
    EXPR_RESULT 8 [source_file: testcode]
        ASSIGN 8 [source_file: testcode]
            NAME action 8 [source_file: testcode]
            NAME proto 8 [source_file: testcode]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:928)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:460)
~ testDontRemoveBreakInTryFinallySwitch(com.google.javascript.jscomp.UnreachableCodeEliminationTest)
[
Expected: function f(){b:try{throw 9;}finally{switch(x){case 1:break b}}return 1}
Result: function f(){b:try{throw 9;}finally{switch(x){case 1:}}return 1}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION f 1 [source_file: expected0]
            NAME f 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                LABEL 1 [source_file: expected0]
                    LABEL_NAME b 1 [source_file: expected0]
                    TRY 1 [source_file: expected0]
                        BLOCK 1 [source_file: expected0]
                            THROW 1 [source_file: expected0]
                                NUMBER 9.0 1 [source_file: expected0]
                        BLOCK 1 [source_file: expected0]
                        BLOCK 1 [source_file: expected0]
                            SWITCH 1 [source_file: expected0]
                                NAME x 1 [source_file: expected0]
                                CASE 1 [source_file: expected0]
                                    NUMBER 1.0 1 [source_file: expected0]
                                    BLOCK 1 [synthetic: 1] [source_file: expected0]
                                        BREAK 1 [source_file: expected0]
                                            LABEL_NAME b 1 [source_file: expected0]
                RETURN 1 [source_file: expected0]
                    NUMBER 1.0 1 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION f 1 [source_file: testcode]
            NAME f 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                LABEL 1 [source_file: testcode]
                    LABEL_NAME b 1 [source_file: testcode]
                    TRY 1 [source_file: testcode]
                        BLOCK 1 [source_file: testcode]
                            THROW 1 [source_file: testcode]
                                NUMBER 9.0 1 [source_file: testcode]
                        BLOCK 1 [source_file: testcode]
                        BLOCK 1 [source_file: testcode]
                            SWITCH 1 [source_file: testcode]
                                NAME x 1 [source_file: testcode]
                                CASE 1 [source_file: testcode]
                                    NUMBER 1.0 1 [source_file: testcode]
                                    BLOCK 1 [synthetic: 1] [source_file: testcode]
                RETURN 1 [source_file: testcode]
                    NUMBER 1.0 1 [source_file: testcode]


Subtree1: BLOCK 1 [synthetic: 1] [source_file: expected0]
    BREAK 1 [source_file: expected0]
        LABEL_NAME b 1 [source_file: expected0]


Subtree2: BLOCK 1 [synthetic: 1] [source_file: testcode]
]
junit.framework.AssertionFailedError: 
Expected: function f(){b:try{throw 9;}finally{switch(x){case 1:break b}}return 1}
Result: function f(){b:try{throw 9;}finally{switch(x){case 1:}}return 1}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION f 1 [source_file: expected0]
            NAME f 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                LABEL 1 [source_file: expected0]
                    LABEL_NAME b 1 [source_file: expected0]
                    TRY 1 [source_file: expected0]
                        BLOCK 1 [source_file: expected0]
                            THROW 1 [source_file: expected0]
                                NUMBER 9.0 1 [source_file: expected0]
                        BLOCK 1 [source_file: expected0]
                        BLOCK 1 [source_file: expected0]
                            SWITCH 1 [source_file: expected0]
                                NAME x 1 [source_file: expected0]
                                CASE 1 [source_file: expected0]
                                    NUMBER 1.0 1 [source_file: expected0]
                                    BLOCK 1 [synthetic: 1] [source_file: expected0]
                                        BREAK 1 [source_file: expected0]
                                            LABEL_NAME b 1 [source_file: expected0]
                RETURN 1 [source_file: expected0]
                    NUMBER 1.0 1 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION f 1 [source_file: testcode]
            NAME f 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                LABEL 1 [source_file: testcode]
                    LABEL_NAME b 1 [source_file: testcode]
                    TRY 1 [source_file: testcode]
                        BLOCK 1 [source_file: testcode]
                            THROW 1 [source_file: testcode]
                                NUMBER 9.0 1 [source_file: testcode]
                        BLOCK 1 [source_file: testcode]
                        BLOCK 1 [source_file: testcode]
                            SWITCH 1 [source_file: testcode]
                                NAME x 1 [source_file: testcode]
                                CASE 1 [source_file: testcode]
                                    NUMBER 1.0 1 [source_file: testcode]
                                    BLOCK 1 [synthetic: 1] [source_file: testcode]
                RETURN 1 [source_file: testcode]
                    NUMBER 1.0 1 [source_file: testcode]


Subtree1: BLOCK 1 [synthetic: 1] [source_file: expected0]
    BREAK 1 [source_file: expected0]
        LABEL_NAME b 1 [source_file: expected0]


Subtree2: BLOCK 1 [synthetic: 1] [source_file: testcode]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:928)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:460)
~ testIssue4177428a(com.google.javascript.jscomp.UnreachableCodeEliminationTest)
[
Expected: f=function(){var action;a:{var proto=null;try{proto=new Proto}finally{action=proto;break a}}alert(action)}
Result: f=function(){var action;a:{var proto=null;try{proto=new Proto}finally{action=proto}}alert(action)}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            ASSIGN 1 [source_file: expected0]
                NAME f 1 [source_file: expected0]
                FUNCTION  1 [source_file: expected0]
                    NAME  1 [source_file: expected0]
                    PARAM_LIST 1 [source_file: expected0]
                    BLOCK 1 [source_file: expected0]
                        VAR 2 [source_file: expected0]
                            NAME action 2 [source_file: expected0]
                        LABEL 3 [source_file: expected0]
                            LABEL_NAME a 3 [source_file: expected0]
                            BLOCK 3 [source_file: expected0]
                                VAR 4 [source_file: expected0]
                                    NAME proto 4 [source_file: expected0]
                                        NULL 4 [source_file: expected0]
                                TRY 5 [source_file: expected0]
                                    BLOCK 5 [source_file: expected0]
                                        EXPR_RESULT 6 [source_file: expected0]
                                            ASSIGN 6 [source_file: expected0]
                                                NAME proto 6 [source_file: expected0]
                                                NEW 6 [source_file: expected0]
                                                    NAME Proto 6 [source_file: expected0]
                                    BLOCK 7 [source_file: expected0]
                                    BLOCK 7 [source_file: expected0]
                                        EXPR_RESULT 8 [source_file: expected0]
                                            ASSIGN 8 [source_file: expected0]
                                                NAME action 8 [source_file: expected0]
                                                NAME proto 8 [source_file: expected0]
                                        BREAK 9 [source_file: expected0]
                                            LABEL_NAME a 9 [source_file: expected0]
                        EXPR_RESULT 12 [source_file: expected0]
                            CALL 12 [free_call: 1] [source_file: expected0]
                                NAME alert 12 [source_file: expected0]
                                NAME action 12 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        EXPR_RESULT 1 [source_file: testcode]
            ASSIGN 1 [source_file: testcode]
                NAME f 1 [source_file: testcode]
                FUNCTION  1 [source_file: testcode]
                    NAME  1 [source_file: testcode]
                    PARAM_LIST 1 [source_file: testcode]
                    BLOCK 1 [source_file: testcode]
                        VAR 2 [source_file: testcode]
                            NAME action 2 [source_file: testcode]
                        LABEL 3 [source_file: testcode]
                            LABEL_NAME a 3 [source_file: testcode]
                            BLOCK 3 [source_file: testcode]
                                VAR 4 [source_file: testcode]
                                    NAME proto 4 [source_file: testcode]
                                        NULL 4 [source_file: testcode]
                                TRY 5 [source_file: testcode]
                                    BLOCK 5 [source_file: testcode]
                                        EXPR_RESULT 6 [source_file: testcode]
                                            ASSIGN 6 [source_file: testcode]
                                                NAME proto 6 [source_file: testcode]
                                                NEW 6 [source_file: testcode]
                                                    NAME Proto 6 [source_file: testcode]
                                    BLOCK 7 [source_file: testcode]
                                    BLOCK 7 [source_file: testcode]
                                        EXPR_RESULT 8 [source_file: testcode]
                                            ASSIGN 8 [source_file: testcode]
                                                NAME action 8 [source_file: testcode]
                                                NAME proto 8 [source_file: testcode]
                        EXPR_RESULT 12 [source_file: testcode]
                            CALL 12 [free_call: 1] [source_file: testcode]
                                NAME alert 12 [source_file: testcode]
                                NAME action 12 [source_file: testcode]


Subtree1: BLOCK 7 [source_file: expected0]
    EXPR_RESULT 8 [source_file: expected0]
        ASSIGN 8 [source_file: expected0]
            NAME action 8 [source_file: expected0]
            NAME proto 8 [source_file: expected0]
    BREAK 9 [source_file: expected0]
        LABEL_NAME a 9 [source_file: expected0]


Subtree2: BLOCK 7 [source_file: testcode]
    EXPR_RESULT 8 [source_file: testcode]
        ASSIGN 8 [source_file: testcode]
            NAME action 8 [source_file: testcode]
            NAME proto 8 [source_file: testcode]
]
junit.framework.AssertionFailedError: 
Expected: f=function(){var action;a:{var proto=null;try{proto=new Proto}finally{action=proto;break a}}alert(action)}
Result: f=function(){var action;a:{var proto=null;try{proto=new Proto}finally{action=proto}}alert(action)}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            ASSIGN 1 [source_file: expected0]
                NAME f 1 [source_file: expected0]
                FUNCTION  1 [source_file: expected0]
                    NAME  1 [source_file: expected0]
                    PARAM_LIST 1 [source_file: expected0]
                    BLOCK 1 [source_file: expected0]
                        VAR 2 [source_file: expected0]
                            NAME action 2 [source_file: expected0]
                        LABEL 3 [source_file: expected0]
                            LABEL_NAME a 3 [source_file: expected0]
                            BLOCK 3 [source_file: expected0]
                                VAR 4 [source_file: expected0]
                                    NAME proto 4 [source_file: expected0]
                                        NULL 4 [source_file: expected0]
                                TRY 5 [source_file: expected0]
                                    BLOCK 5 [source_file: expected0]
                                        EXPR_RESULT 6 [source_file: expected0]
                                            ASSIGN 6 [source_file: expected0]
                                                NAME proto 6 [source_file: expected0]
                                                NEW 6 [source_file: expected0]
                                                    NAME Proto 6 [source_file: expected0]
                                    BLOCK 7 [source_file: expected0]
                                    BLOCK 7 [source_file: expected0]
                                        EXPR_RESULT 8 [source_file: expected0]
                                            ASSIGN 8 [source_file: expected0]
                                                NAME action 8 [source_file: expected0]
                                                NAME proto 8 [source_file: expected0]
                                        BREAK 9 [source_file: expected0]
                                            LABEL_NAME a 9 [source_file: expected0]
                        EXPR_RESULT 12 [source_file: expected0]
                            CALL 12 [free_call: 1] [source_file: expected0]
                                NAME alert 12 [source_file: expected0]
                                NAME action 12 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        EXPR_RESULT 1 [source_file: testcode]
            ASSIGN 1 [source_file: testcode]
                NAME f 1 [source_file: testcode]
                FUNCTION  1 [source_file: testcode]
                    NAME  1 [source_file: testcode]
                    PARAM_LIST 1 [source_file: testcode]
                    BLOCK 1 [source_file: testcode]
                        VAR 2 [source_file: testcode]
                            NAME action 2 [source_file: testcode]
                        LABEL 3 [source_file: testcode]
                            LABEL_NAME a 3 [source_file: testcode]
                            BLOCK 3 [source_file: testcode]
                                VAR 4 [source_file: testcode]
                                    NAME proto 4 [source_file: testcode]
                                        NULL 4 [source_file: testcode]
                                TRY 5 [source_file: testcode]
                                    BLOCK 5 [source_file: testcode]
                                        EXPR_RESULT 6 [source_file: testcode]
                                            ASSIGN 6 [source_file: testcode]
                                                NAME proto 6 [source_file: testcode]
                                                NEW 6 [source_file: testcode]
                                                    NAME Proto 6 [source_file: testcode]
                                    BLOCK 7 [source_file: testcode]
                                    BLOCK 7 [source_file: testcode]
                                        EXPR_RESULT 8 [source_file: testcode]
                                            ASSIGN 8 [source_file: testcode]
                                                NAME action 8 [source_file: testcode]
                                                NAME proto 8 [source_file: testcode]
                        EXPR_RESULT 12 [source_file: testcode]
                            CALL 12 [free_call: 1] [source_file: testcode]
                                NAME alert 12 [source_file: testcode]
                                NAME action 12 [source_file: testcode]


Subtree1: BLOCK 7 [source_file: expected0]
    EXPR_RESULT 8 [source_file: expected0]
        ASSIGN 8 [source_file: expected0]
            NAME action 8 [source_file: expected0]
            NAME proto 8 [source_file: expected0]
    BREAK 9 [source_file: expected0]
        LABEL_NAME a 9 [source_file: expected0]


Subtree2: BLOCK 7 [source_file: testcode]
    EXPR_RESULT 8 [source_file: testcode]
        ASSIGN 8 [source_file: testcode]
            NAME action 8 [source_file: testcode]
            NAME proto 8 [source_file: testcode]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:928)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:460)
~ testIssue4177428c(com.google.javascript.jscomp.UnreachableCodeEliminationTest)
[
Expected: f=function(){var action;a:{var proto=null;try{}finally{try{proto=new Proto}finally{action=proto;break a}}}alert(action)}
Result: f=function(){var action;a:{var proto=null;try{}finally{try{proto=new Proto}finally{action=proto}}}alert(action)}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            ASSIGN 1 [source_file: expected0]
                NAME f 1 [source_file: expected0]
                FUNCTION  1 [source_file: expected0]
                    NAME  1 [source_file: expected0]
                    PARAM_LIST 1 [source_file: expected0]
                    BLOCK 1 [source_file: expected0]
                        VAR 2 [source_file: expected0]
                            NAME action 2 [source_file: expected0]
                        LABEL 3 [source_file: expected0]
                            LABEL_NAME a 3 [source_file: expected0]
                            BLOCK 3 [source_file: expected0]
                                VAR 4 [source_file: expected0]
                                    NAME proto 4 [source_file: expected0]
                                        NULL 4 [source_file: expected0]
                                TRY 5 [source_file: expected0]
                                    BLOCK 5 [source_file: expected0]
                                    BLOCK 6 [source_file: expected0]
                                    BLOCK 6 [source_file: expected0]
                                        TRY 7 [source_file: expected0]
                                            BLOCK 7 [source_file: expected0]
                                                EXPR_RESULT 8 [source_file: expected0]
                                                    ASSIGN 8 [source_file: expected0]
                                                        NAME proto 8 [source_file: expected0]
                                                        NEW 8 [source_file: expected0]
                                                            NAME Proto 8 [source_file: expected0]
                                            BLOCK 9 [source_file: expected0]
                                            BLOCK 9 [source_file: expected0]
                                                EXPR_RESULT 10 [source_file: expected0]
                                                    ASSIGN 10 [source_file: expected0]
                                                        NAME action 10 [source_file: expected0]
                                                        NAME proto 10 [source_file: expected0]
                                                BREAK 11 [source_file: expected0]
                                                    LABEL_NAME a 11 [source_file: expected0]
                        EXPR_RESULT 15 [source_file: expected0]
                            CALL 15 [free_call: 1] [source_file: expected0]
                                NAME alert 15 [source_file: expected0]
                                NAME action 15 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        EXPR_RESULT 1 [source_file: testcode]
            ASSIGN 1 [source_file: testcode]
                NAME f 1 [source_file: testcode]
                FUNCTION  1 [source_file: testcode]
                    NAME  1 [source_file: testcode]
                    PARAM_LIST 1 [source_file: testcode]
                    BLOCK 1 [source_file: testcode]
                        VAR 2 [source_file: testcode]
                            NAME action 2 [source_file: testcode]
                        LABEL 3 [source_file: testcode]
                            LABEL_NAME a 3 [source_file: testcode]
                            BLOCK 3 [source_file: testcode]
                                VAR 4 [source_file: testcode]
                                    NAME proto 4 [source_file: testcode]
                                        NULL 4 [source_file: testcode]
                                TRY 5 [source_file: testcode]
                                    BLOCK 5 [source_file: testcode]
                                    BLOCK 6 [source_file: testcode]
                                    BLOCK 6 [source_file: testcode]
                                        TRY 7 [source_file: testcode]
                                            BLOCK 7 [source_file: testcode]
                                                EXPR_RESULT 8 [source_file: testcode]
                                                    ASSIGN 8 [source_file: testcode]
                                                        NAME proto 8 [source_file: testcode]
                                                        NEW 8 [source_file: testcode]
                                                            NAME Proto 8 [source_file: testcode]
                                            BLOCK 9 [source_file: testcode]
                                            BLOCK 9 [source_file: testcode]
                                                EXPR_RESULT 10 [source_file: testcode]
                                                    ASSIGN 10 [source_file: testcode]
                                                        NAME action 10 [source_file: testcode]
                                                        NAME proto 10 [source_file: testcode]
                        EXPR_RESULT 15 [source_file: testcode]
                            CALL 15 [free_call: 1] [source_file: testcode]
                                NAME alert 15 [source_file: testcode]
                                NAME action 15 [source_file: testcode]


Subtree1: BLOCK 9 [source_file: expected0]
    EXPR_RESULT 10 [source_file: expected0]
        ASSIGN 10 [source_file: expected0]
            NAME action 10 [source_file: expected0]
            NAME proto 10 [source_file: expected0]
    BREAK 11 [source_file: expected0]
        LABEL_NAME a 11 [source_file: expected0]


Subtree2: BLOCK 9 [source_file: testcode]
    EXPR_RESULT 10 [source_file: testcode]
        ASSIGN 10 [source_file: testcode]
            NAME action 10 [source_file: testcode]
            NAME proto 10 [source_file: testcode]
]
junit.framework.AssertionFailedError: 
Expected: f=function(){var action;a:{var proto=null;try{}finally{try{proto=new Proto}finally{action=proto;break a}}}alert(action)}
Result: f=function(){var action;a:{var proto=null;try{}finally{try{proto=new Proto}finally{action=proto}}}alert(action)}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            ASSIGN 1 [source_file: expected0]
                NAME f 1 [source_file: expected0]
                FUNCTION  1 [source_file: expected0]
                    NAME  1 [source_file: expected0]
                    PARAM_LIST 1 [source_file: expected0]
                    BLOCK 1 [source_file: expected0]
                        VAR 2 [source_file: expected0]
                            NAME action 2 [source_file: expected0]
                        LABEL 3 [source_file: expected0]
                            LABEL_NAME a 3 [source_file: expected0]
                            BLOCK 3 [source_file: expected0]
                                VAR 4 [source_file: expected0]
                                    NAME proto 4 [source_file: expected0]
                                        NULL 4 [source_file: expected0]
                                TRY 5 [source_file: expected0]
                                    BLOCK 5 [source_file: expected0]
                                    BLOCK 6 [source_file: expected0]
                                    BLOCK 6 [source_file: expected0]
                                        TRY 7 [source_file: expected0]
                                            BLOCK 7 [source_file: expected0]
                                                EXPR_RESULT 8 [source_file: expected0]
                                                    ASSIGN 8 [source_file: expected0]
                                                        NAME proto 8 [source_file: expected0]
                                                        NEW 8 [source_file: expected0]
                                                            NAME Proto 8 [source_file: expected0]
                                            BLOCK 9 [source_file: expected0]
                                            BLOCK 9 [source_file: expected0]
                                                EXPR_RESULT 10 [source_file: expected0]
                                                    ASSIGN 10 [source_file: expected0]
                                                        NAME action 10 [source_file: expected0]
                                                        NAME proto 10 [source_file: expected0]
                                                BREAK 11 [source_file: expected0]
                                                    LABEL_NAME a 11 [source_file: expected0]
                        EXPR_RESULT 15 [source_file: expected0]
                            CALL 15 [free_call: 1] [source_file: expected0]
                                NAME alert 15 [source_file: expected0]
                                NAME action 15 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        EXPR_RESULT 1 [source_file: testcode]
            ASSIGN 1 [source_file: testcode]
                NAME f 1 [source_file: testcode]
                FUNCTION  1 [source_file: testcode]
                    NAME  1 [source_file: testcode]
                    PARAM_LIST 1 [source_file: testcode]
                    BLOCK 1 [source_file: testcode]
                        VAR 2 [source_file: testcode]
                            NAME action 2 [source_file: testcode]
                        LABEL 3 [source_file: testcode]
                            LABEL_NAME a 3 [source_file: testcode]
                            BLOCK 3 [source_file: testcode]
                                VAR 4 [source_file: testcode]
                                    NAME proto 4 [source_file: testcode]
                                        NULL 4 [source_file: testcode]
                                TRY 5 [source_file: testcode]
                                    BLOCK 5 [source_file: testcode]
                                    BLOCK 6 [source_file: testcode]
                                    BLOCK 6 [source_file: testcode]
                                        TRY 7 [source_file: testcode]
                                            BLOCK 7 [source_file: testcode]
                                                EXPR_RESULT 8 [source_file: testcode]
                                                    ASSIGN 8 [source_file: testcode]
                                                        NAME proto 8 [source_file: testcode]
                                                        NEW 8 [source_file: testcode]
                                                            NAME Proto 8 [source_file: testcode]
                                            BLOCK 9 [source_file: testcode]
                                            BLOCK 9 [source_file: testcode]
                                                EXPR_RESULT 10 [source_file: testcode]
                                                    ASSIGN 10 [source_file: testcode]
                                                        NAME action 10 [source_file: testcode]
                                                        NAME proto 10 [source_file: testcode]
                        EXPR_RESULT 15 [source_file: testcode]
                            CALL 15 [free_call: 1] [source_file: testcode]
                                NAME alert 15 [source_file: testcode]
                                NAME action 15 [source_file: testcode]


Subtree1: BLOCK 9 [source_file: expected0]
    EXPR_RESULT 10 [source_file: expected0]
        ASSIGN 10 [source_file: expected0]
            NAME action 10 [source_file: expected0]
            NAME proto 10 [source_file: expected0]
    BREAK 11 [source_file: expected0]
        LABEL_NAME a 11 [source_file: expected0]


Subtree2: BLOCK 9 [source_file: testcode]
    EXPR_RESULT 10 [source_file: testcode]
        ASSIGN 10 [source_file: testcode]
            NAME action 10 [source_file: testcode]
            NAME proto 10 [source_file: testcode]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:928)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:460)
~ testIssue4177428_return(com.google.javascript.jscomp.UnreachableCodeEliminationTest)
[
Expected: f=function(){var action;a:{var proto=null;try{proto=new Proto}finally{action=proto;return}}}
Result: f=function(){var action;a:{var proto=null;try{proto=new Proto}finally{action=proto}}}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            ASSIGN 1 [source_file: expected0]
                NAME f 1 [source_file: expected0]
                FUNCTION  1 [source_file: expected0]
                    NAME  1 [source_file: expected0]
                    PARAM_LIST 1 [source_file: expected0]
                    BLOCK 1 [source_file: expected0]
                        VAR 2 [source_file: expected0]
                            NAME action 2 [source_file: expected0]
                        LABEL 3 [source_file: expected0]
                            LABEL_NAME a 3 [source_file: expected0]
                            BLOCK 3 [source_file: expected0]
                                VAR 4 [source_file: expected0]
                                    NAME proto 4 [source_file: expected0]
                                        NULL 4 [source_file: expected0]
                                TRY 5 [source_file: expected0]
                                    BLOCK 5 [source_file: expected0]
                                        EXPR_RESULT 6 [source_file: expected0]
                                            ASSIGN 6 [source_file: expected0]
                                                NAME proto 6 [source_file: expected0]
                                                NEW 6 [source_file: expected0]
                                                    NAME Proto 6 [source_file: expected0]
                                    BLOCK 7 [source_file: expected0]
                                    BLOCK 7 [source_file: expected0]
                                        EXPR_RESULT 8 [source_file: expected0]
                                            ASSIGN 8 [source_file: expected0]
                                                NAME action 8 [source_file: expected0]
                                                NAME proto 8 [source_file: expected0]
                                        RETURN 9 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        EXPR_RESULT 1 [source_file: testcode]
            ASSIGN 1 [source_file: testcode]
                NAME f 1 [source_file: testcode]
                FUNCTION  1 [source_file: testcode]
                    NAME  1 [source_file: testcode]
                    PARAM_LIST 1 [source_file: testcode]
                    BLOCK 1 [source_file: testcode]
                        VAR 2 [source_file: testcode]
                            NAME action 2 [source_file: testcode]
                        LABEL 3 [source_file: testcode]
                            LABEL_NAME a 3 [source_file: testcode]
                            BLOCK 3 [source_file: testcode]
                                VAR 4 [source_file: testcode]
                                    NAME proto 4 [source_file: testcode]
                                        NULL 4 [source_file: testcode]
                                TRY 5 [source_file: testcode]
                                    BLOCK 5 [source_file: testcode]
                                        EXPR_RESULT 6 [source_file: testcode]
                                            ASSIGN 6 [source_file: testcode]
                                                NAME proto 6 [source_file: testcode]
                                                NEW 6 [source_file: testcode]
                                                    NAME Proto 6 [source_file: testcode]
                                    BLOCK 7 [source_file: testcode]
                                    BLOCK 7 [source_file: testcode]
                                        EXPR_RESULT 8 [source_file: testcode]
                                            ASSIGN 8 [source_file: testcode]
                                                NAME action 8 [source_file: testcode]
                                                NAME proto 8 [source_file: testcode]


Subtree1: BLOCK 7 [source_file: expected0]
    EXPR_RESULT 8 [source_file: expected0]
        ASSIGN 8 [source_file: expected0]
            NAME action 8 [source_file: expected0]
            NAME proto 8 [source_file: expected0]
    RETURN 9 [source_file: expected0]


Subtree2: BLOCK 7 [source_file: testcode]
    EXPR_RESULT 8 [source_file: testcode]
        ASSIGN 8 [source_file: testcode]
            NAME action 8 [source_file: testcode]
            NAME proto 8 [source_file: testcode]
]
junit.framework.AssertionFailedError: 
Expected: f=function(){var action;a:{var proto=null;try{proto=new Proto}finally{action=proto;return}}}
Result: f=function(){var action;a:{var proto=null;try{proto=new Proto}finally{action=proto}}}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            ASSIGN 1 [source_file: expected0]
                NAME f 1 [source_file: expected0]
                FUNCTION  1 [source_file: expected0]
                    NAME  1 [source_file: expected0]
                    PARAM_LIST 1 [source_file: expected0]
                    BLOCK 1 [source_file: expected0]
                        VAR 2 [source_file: expected0]
                            NAME action 2 [source_file: expected0]
                        LABEL 3 [source_file: expected0]
                            LABEL_NAME a 3 [source_file: expected0]
                            BLOCK 3 [source_file: expected0]
                                VAR 4 [source_file: expected0]
                                    NAME proto 4 [source_file: expected0]
                                        NULL 4 [source_file: expected0]
                                TRY 5 [source_file: expected0]
                                    BLOCK 5 [source_file: expected0]
                                        EXPR_RESULT 6 [source_file: expected0]
                                            ASSIGN 6 [source_file: expected0]
                                                NAME proto 6 [source_file: expected0]
                                                NEW 6 [source_file: expected0]
                                                    NAME Proto 6 [source_file: expected0]
                                    BLOCK 7 [source_file: expected0]
                                    BLOCK 7 [source_file: expected0]
                                        EXPR_RESULT 8 [source_file: expected0]
                                            ASSIGN 8 [source_file: expected0]
                                                NAME action 8 [source_file: expected0]
                                                NAME proto 8 [source_file: expected0]
                                        RETURN 9 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        EXPR_RESULT 1 [source_file: testcode]
            ASSIGN 1 [source_file: testcode]
                NAME f 1 [source_file: testcode]
                FUNCTION  1 [source_file: testcode]
                    NAME  1 [source_file: testcode]
                    PARAM_LIST 1 [source_file: testcode]
                    BLOCK 1 [source_file: testcode]
                        VAR 2 [source_file: testcode]
                            NAME action 2 [source_file: testcode]
                        LABEL 3 [source_file: testcode]
                            LABEL_NAME a 3 [source_file: testcode]
                            BLOCK 3 [source_file: testcode]
                                VAR 4 [source_file: testcode]
                                    NAME proto 4 [source_file: testcode]
                                        NULL 4 [source_file: testcode]
                                TRY 5 [source_file: testcode]
                                    BLOCK 5 [source_file: testcode]
                                        EXPR_RESULT 6 [source_file: testcode]
                                            ASSIGN 6 [source_file: testcode]
                                                NAME proto 6 [source_file: testcode]
                                                NEW 6 [source_file: testcode]
                                                    NAME Proto 6 [source_file: testcode]
                                    BLOCK 7 [source_file: testcode]
                                    BLOCK 7 [source_file: testcode]
                                        EXPR_RESULT 8 [source_file: testcode]
                                            ASSIGN 8 [source_file: testcode]
                                                NAME action 8 [source_file: testcode]
                                                NAME proto 8 [source_file: testcode]


Subtree1: BLOCK 7 [source_file: expected0]
    EXPR_RESULT 8 [source_file: expected0]
        ASSIGN 8 [source_file: expected0]
            NAME action 8 [source_file: expected0]
            NAME proto 8 [source_file: expected0]
    RETURN 9 [source_file: expected0]


Subtree2: BLOCK 7 [source_file: testcode]
    EXPR_RESULT 8 [source_file: testcode]
        ASSIGN 8 [source_file: testcode]
            NAME action 8 [source_file: testcode]
            NAME proto 8 [source_file: testcode]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:928)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:460)
~ testDontRemoveBreakInTryFinally(com.google.javascript.jscomp.UnreachableCodeEliminationTest)
[
Expected: function f(){b:try{throw 9;}finally{break b}return 1}
Result: function f(){b:try{throw 9;}finally{}return 1}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION f 1 [source_file: expected0]
            NAME f 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                LABEL 1 [source_file: expected0]
                    LABEL_NAME b 1 [source_file: expected0]
                    TRY 1 [source_file: expected0]
                        BLOCK 1 [source_file: expected0]
                            THROW 1 [source_file: expected0]
                                NUMBER 9.0 1 [source_file: expected0]
                        BLOCK 1 [source_file: expected0]
                        BLOCK 1 [source_file: expected0]
                            BREAK 1 [source_file: expected0]
                                LABEL_NAME b 1 [source_file: expected0]
                RETURN 1 [source_file: expected0]
                    NUMBER 1.0 1 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION f 1 [source_file: testcode]
            NAME f 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                LABEL 1 [source_file: testcode]
                    LABEL_NAME b 1 [source_file: testcode]
                    TRY 1 [source_file: testcode]
                        BLOCK 1 [source_file: testcode]
                            THROW 1 [source_file: testcode]
                                NUMBER 9.0 1 [source_file: testcode]
                        BLOCK 1 [source_file: testcode]
                        BLOCK 1 [source_file: testcode]
                RETURN 1 [source_file: testcode]
                    NUMBER 1.0 1 [source_file: testcode]


Subtree1: BLOCK 1 [source_file: expected0]
    BREAK 1 [source_file: expected0]
        LABEL_NAME b 1 [source_file: expected0]


Subtree2: BLOCK 1 [source_file: testcode]
]
junit.framework.AssertionFailedError: 
Expected: function f(){b:try{throw 9;}finally{break b}return 1}
Result: function f(){b:try{throw 9;}finally{}return 1}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION f 1 [source_file: expected0]
            NAME f 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                LABEL 1 [source_file: expected0]
                    LABEL_NAME b 1 [source_file: expected0]
                    TRY 1 [source_file: expected0]
                        BLOCK 1 [source_file: expected0]
                            THROW 1 [source_file: expected0]
                                NUMBER 9.0 1 [source_file: expected0]
                        BLOCK 1 [source_file: expected0]
                        BLOCK 1 [source_file: expected0]
                            BREAK 1 [source_file: expected0]
                                LABEL_NAME b 1 [source_file: expected0]
                RETURN 1 [source_file: expected0]
                    NUMBER 1.0 1 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION f 1 [source_file: testcode]
            NAME f 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                LABEL 1 [source_file: testcode]
                    LABEL_NAME b 1 [source_file: testcode]
                    TRY 1 [source_file: testcode]
                        BLOCK 1 [source_file: testcode]
                            THROW 1 [source_file: testcode]
                                NUMBER 9.0 1 [source_file: testcode]
                        BLOCK 1 [source_file: testcode]
                        BLOCK 1 [source_file: testcode]
                RETURN 1 [source_file: testcode]
                    NUMBER 1.0 1 [source_file: testcode]


Subtree1: BLOCK 1 [source_file: expected0]
    BREAK 1 [source_file: expected0]
        LABEL_NAME b 1 [source_file: expected0]


Subtree2: BLOCK 1 [source_file: testcode]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:928)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:460)
~ testIssue4177428_continue(com.google.javascript.jscomp.UnreachableCodeEliminationTest)
[
Expected: f=function(){var action;a:do{var proto=null;try{proto=new Proto}finally{action=proto;continue a}}while(false);alert(action)}
Result: f=function(){var action;a:do{var proto=null;try{proto=new Proto}finally{action=proto}}while(false);alert(action)}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            ASSIGN 1 [source_file: expected0]
                NAME f 1 [source_file: expected0]
                FUNCTION  1 [source_file: expected0]
                    NAME  1 [source_file: expected0]
                    PARAM_LIST 1 [source_file: expected0]
                    BLOCK 1 [source_file: expected0]
                        VAR 2 [source_file: expected0]
                            NAME action 2 [source_file: expected0]
                        LABEL 3 [source_file: expected0]
                            LABEL_NAME a 3 [source_file: expected0]
                            DO 3 [source_file: expected0]
                                BLOCK 3 [source_file: expected0]
                                    VAR 4 [source_file: expected0]
                                        NAME proto 4 [source_file: expected0]
                                            NULL 4 [source_file: expected0]
                                    TRY 5 [source_file: expected0]
                                        BLOCK 5 [source_file: expected0]
                                            EXPR_RESULT 6 [source_file: expected0]
                                                ASSIGN 6 [source_file: expected0]
                                                    NAME proto 6 [source_file: expected0]
                                                    NEW 6 [source_file: expected0]
                                                        NAME Proto 6 [source_file: expected0]
                                        BLOCK 7 [source_file: expected0]
                                        BLOCK 7 [source_file: expected0]
                                            EXPR_RESULT 8 [source_file: expected0]
                                                ASSIGN 8 [source_file: expected0]
                                                    NAME action 8 [source_file: expected0]
                                                    NAME proto 8 [source_file: expected0]
                                            CONTINUE 9 [source_file: expected0]
                                                LABEL_NAME a 9 [source_file: expected0]
                                FALSE 11 [source_file: expected0]
                        EXPR_RESULT 12 [source_file: expected0]
                            CALL 12 [free_call: 1] [source_file: expected0]
                                NAME alert 12 [source_file: expected0]
                                NAME action 12 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        EXPR_RESULT 1 [source_file: testcode]
            ASSIGN 1 [source_file: testcode]
                NAME f 1 [source_file: testcode]
                FUNCTION  1 [source_file: testcode]
                    NAME  1 [source_file: testcode]
                    PARAM_LIST 1 [source_file: testcode]
                    BLOCK 1 [source_file: testcode]
                        VAR 2 [source_file: testcode]
                            NAME action 2 [source_file: testcode]
                        LABEL 3 [source_file: testcode]
                            LABEL_NAME a 3 [source_file: testcode]
                            DO 3 [source_file: testcode]
                                BLOCK 3 [source_file: testcode]
                                    VAR 4 [source_file: testcode]
                                        NAME proto 4 [source_file: testcode]
                                            NULL 4 [source_file: testcode]
                                    TRY 5 [source_file: testcode]
                                        BLOCK 5 [source_file: testcode]
                                            EXPR_RESULT 6 [source_file: testcode]
                                                ASSIGN 6 [source_file: testcode]
                                                    NAME proto 6 [source_file: testcode]
                                                    NEW 6 [source_file: testcode]
                                                        NAME Proto 6 [source_file: testcode]
                                        BLOCK 7 [source_file: testcode]
                                        BLOCK 7 [source_file: testcode]
                                            EXPR_RESULT 8 [source_file: testcode]
                                                ASSIGN 8 [source_file: testcode]
                                                    NAME action 8 [source_file: testcode]
                                                    NAME proto 8 [source_file: testcode]
                                FALSE 11 [source_file: testcode]
                        EXPR_RESULT 12 [source_file: testcode]
                            CALL 12 [free_call: 1] [source_file: testcode]
                                NAME alert 12 [source_file: testcode]
                                NAME action 12 [source_file: testcode]


Subtree1: BLOCK 7 [source_file: expected0]
    EXPR_RESULT 8 [source_file: expected0]
        ASSIGN 8 [source_file: expected0]
            NAME action 8 [source_file: expected0]
            NAME proto 8 [source_file: expected0]
    CONTINUE 9 [source_file: expected0]
        LABEL_NAME a 9 [source_file: expected0]


Subtree2: BLOCK 7 [source_file: testcode]
    EXPR_RESULT 8 [source_file: testcode]
        ASSIGN 8 [source_file: testcode]
            NAME action 8 [source_file: testcode]
            NAME proto 8 [source_file: testcode]
]
junit.framework.AssertionFailedError: 
Expected: f=function(){var action;a:do{var proto=null;try{proto=new Proto}finally{action=proto;continue a}}while(false);alert(action)}
Result: f=function(){var action;a:do{var proto=null;try{proto=new Proto}finally{action=proto}}while(false);alert(action)}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            ASSIGN 1 [source_file: expected0]
                NAME f 1 [source_file: expected0]
                FUNCTION  1 [source_file: expected0]
                    NAME  1 [source_file: expected0]
                    PARAM_LIST 1 [source_file: expected0]
                    BLOCK 1 [source_file: expected0]
                        VAR 2 [source_file: expected0]
                            NAME action 2 [source_file: expected0]
                        LABEL 3 [source_file: expected0]
                            LABEL_NAME a 3 [source_file: expected0]
                            DO 3 [source_file: expected0]
                                BLOCK 3 [source_file: expected0]
                                    VAR 4 [source_file: expected0]
                                        NAME proto 4 [source_file: expected0]
                                            NULL 4 [source_file: expected0]
                                    TRY 5 [source_file: expected0]
                                        BLOCK 5 [source_file: expected0]
                                            EXPR_RESULT 6 [source_file: expected0]
                                                ASSIGN 6 [source_file: expected0]
                                                    NAME proto 6 [source_file: expected0]
                                                    NEW 6 [source_file: expected0]
                                                        NAME Proto 6 [source_file: expected0]
                                        BLOCK 7 [source_file: expected0]
                                        BLOCK 7 [source_file: expected0]
                                            EXPR_RESULT 8 [source_file: expected0]
                                                ASSIGN 8 [source_file: expected0]
                                                    NAME action 8 [source_file: expected0]
                                                    NAME proto 8 [source_file: expected0]
                                            CONTINUE 9 [source_file: expected0]
                                                LABEL_NAME a 9 [source_file: expected0]
                                FALSE 11 [source_file: expected0]
                        EXPR_RESULT 12 [source_file: expected0]
                            CALL 12 [free_call: 1] [source_file: expected0]
                                NAME alert 12 [source_file: expected0]
                                NAME action 12 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        EXPR_RESULT 1 [source_file: testcode]
            ASSIGN 1 [source_file: testcode]
                NAME f 1 [source_file: testcode]
                FUNCTION  1 [source_file: testcode]
                    NAME  1 [source_file: testcode]
                    PARAM_LIST 1 [source_file: testcode]
                    BLOCK 1 [source_file: testcode]
                        VAR 2 [source_file: testcode]
                            NAME action 2 [source_file: testcode]
                        LABEL 3 [source_file: testcode]
                            LABEL_NAME a 3 [source_file: testcode]
                            DO 3 [source_file: testcode]
                                BLOCK 3 [source_file: testcode]
                                    VAR 4 [source_file: testcode]
                                        NAME proto 4 [source_file: testcode]
                                            NULL 4 [source_file: testcode]
                                    TRY 5 [source_file: testcode]
                                        BLOCK 5 [source_file: testcode]
                                            EXPR_RESULT 6 [source_file: testcode]
                                                ASSIGN 6 [source_file: testcode]
                                                    NAME proto 6 [source_file: testcode]
                                                    NEW 6 [source_file: testcode]
                                                        NAME Proto 6 [source_file: testcode]
                                        BLOCK 7 [source_file: testcode]
                                        BLOCK 7 [source_file: testcode]
                                            EXPR_RESULT 8 [source_file: testcode]
                                                ASSIGN 8 [source_file: testcode]
                                                    NAME action 8 [source_file: testcode]
                                                    NAME proto 8 [source_file: testcode]
                                FALSE 11 [source_file: testcode]
                        EXPR_RESULT 12 [source_file: testcode]
                            CALL 12 [free_call: 1] [source_file: testcode]
                                NAME alert 12 [source_file: testcode]
                                NAME action 12 [source_file: testcode]


Subtree1: BLOCK 7 [source_file: expected0]
    EXPR_RESULT 8 [source_file: expected0]
        ASSIGN 8 [source_file: expected0]
            NAME action 8 [source_file: expected0]
            NAME proto 8 [source_file: expected0]
    CONTINUE 9 [source_file: expected0]
        LABEL_NAME a 9 [source_file: expected0]


Subtree2: BLOCK 7 [source_file: testcode]
    EXPR_RESULT 8 [source_file: testcode]
        ASSIGN 8 [source_file: testcode]
            NAME action 8 [source_file: testcode]
            NAME proto 8 [source_file: testcode]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:928)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:460)
~ testDontRemoveBreakInTryFinallySwitch(com.google.javascript.jscomp.UnreachableCodeEliminationTest)
[
Expected: function f(){b:try{throw 9;}finally{switch(x){case 1:break b}}return 1}
Result: function f(){b:try{throw 9;}finally{switch(x){case 1:}}return 1}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION f 1 [source_file: expected0]
            NAME f 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                LABEL 1 [source_file: expected0]
                    LABEL_NAME b 1 [source_file: expected0]
                    TRY 1 [source_file: expected0]
                        BLOCK 1 [source_file: expected0]
                            THROW 1 [source_file: expected0]
                                NUMBER 9.0 1 [source_file: expected0]
                        BLOCK 1 [source_file: expected0]
                        BLOCK 1 [source_file: expected0]
                            SWITCH 1 [source_file: expected0]
                                NAME x 1 [source_file: expected0]
                                CASE 1 [source_file: expected0]
                                    NUMBER 1.0 1 [source_file: expected0]
                                    BLOCK 1 [synthetic: 1] [source_file: expected0]
                                        BREAK 1 [source_file: expected0]
                                            LABEL_NAME b 1 [source_file: expected0]
                RETURN 1 [source_file: expected0]
                    NUMBER 1.0 1 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION f 1 [source_file: testcode]
            NAME f 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                LABEL 1 [source_file: testcode]
                    LABEL_NAME b 1 [source_file: testcode]
                    TRY 1 [source_file: testcode]
                        BLOCK 1 [source_file: testcode]
                            THROW 1 [source_file: testcode]
                                NUMBER 9.0 1 [source_file: testcode]
                        BLOCK 1 [source_file: testcode]
                        BLOCK 1 [source_file: testcode]
                            SWITCH 1 [source_file: testcode]
                                NAME x 1 [source_file: testcode]
                                CASE 1 [source_file: testcode]
                                    NUMBER 1.0 1 [source_file: testcode]
                                    BLOCK 1 [synthetic: 1] [source_file: testcode]
                RETURN 1 [source_file: testcode]
                    NUMBER 1.0 1 [source_file: testcode]


Subtree1: BLOCK 1 [synthetic: 1] [source_file: expected0]
    BREAK 1 [source_file: expected0]
        LABEL_NAME b 1 [source_file: expected0]


Subtree2: BLOCK 1 [synthetic: 1] [source_file: testcode]
]
junit.framework.AssertionFailedError: 
Expected: function f(){b:try{throw 9;}finally{switch(x){case 1:break b}}return 1}
Result: function f(){b:try{throw 9;}finally{switch(x){case 1:}}return 1}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION f 1 [source_file: expected0]
            NAME f 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                LABEL 1 [source_file: expected0]
                    LABEL_NAME b 1 [source_file: expected0]
                    TRY 1 [source_file: expected0]
                        BLOCK 1 [source_file: expected0]
                            THROW 1 [source_file: expected0]
                                NUMBER 9.0 1 [source_file: expected0]
                        BLOCK 1 [source_file: expected0]
                        BLOCK 1 [source_file: expected0]
                            SWITCH 1 [source_file: expected0]
                                NAME x 1 [source_file: expected0]
                                CASE 1 [source_file: expected0]
                                    NUMBER 1.0 1 [source_file: expected0]
                                    BLOCK 1 [synthetic: 1] [source_file: expected0]
                                        BREAK 1 [source_file: expected0]
                                            LABEL_NAME b 1 [source_file: expected0]
                RETURN 1 [source_file: expected0]
                    NUMBER 1.0 1 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION f 1 [source_file: testcode]
            NAME f 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                LABEL 1 [source_file: testcode]
                    LABEL_NAME b 1 [source_file: testcode]
                    TRY 1 [source_file: testcode]
                        BLOCK 1 [source_file: testcode]
                            THROW 1 [source_file: testcode]
                                NUMBER 9.0 1 [source_file: testcode]
                        BLOCK 1 [source_file: testcode]
                        BLOCK 1 [source_file: testcode]
                            SWITCH 1 [source_file: testcode]
                                NAME x 1 [source_file: testcode]
                                CASE 1 [source_file: testcode]
                                    NUMBER 1.0 1 [source_file: testcode]
                                    BLOCK 1 [synthetic: 1] [source_file: testcode]
                RETURN 1 [source_file: testcode]
                    NUMBER 1.0 1 [source_file: testcode]


Subtree1: BLOCK 1 [synthetic: 1] [source_file: expected0]
    BREAK 1 [source_file: expected0]
        LABEL_NAME b 1 [source_file: expected0]


Subtree2: BLOCK 1 [synthetic: 1] [source_file: testcode]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:928)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:460)
~ testIssue4177428a(com.google.javascript.jscomp.UnreachableCodeEliminationTest)
[
Expected: f=function(){var action;a:{var proto=null;try{proto=new Proto}finally{action=proto;break a}}alert(action)}
Result: f=function(){var action;a:{var proto=null;try{proto=new Proto}finally{action=proto}}alert(action)}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            ASSIGN 1 [source_file: expected0]
                NAME f 1 [source_file: expected0]
                FUNCTION  1 [source_file: expected0]
                    NAME  1 [source_file: expected0]
                    PARAM_LIST 1 [source_file: expected0]
                    BLOCK 1 [source_file: expected0]
                        VAR 2 [source_file: expected0]
                            NAME action 2 [source_file: expected0]
                        LABEL 3 [source_file: expected0]
                            LABEL_NAME a 3 [source_file: expected0]
                            BLOCK 3 [source_file: expected0]
                                VAR 4 [source_file: expected0]
                                    NAME proto 4 [source_file: expected0]
                                        NULL 4 [source_file: expected0]
                                TRY 5 [source_file: expected0]
                                    BLOCK 5 [source_file: expected0]
                                        EXPR_RESULT 6 [source_file: expected0]
                                            ASSIGN 6 [source_file: expected0]
                                                NAME proto 6 [source_file: expected0]
                                                NEW 6 [source_file: expected0]
                                                    NAME Proto 6 [source_file: expected0]
                                    BLOCK 7 [source_file: expected0]
                                    BLOCK 7 [source_file: expected0]
                                        EXPR_RESULT 8 [source_file: expected0]
                                            ASSIGN 8 [source_file: expected0]
                                                NAME action 8 [source_file: expected0]
                                                NAME proto 8 [source_file: expected0]
                                        BREAK 9 [source_file: expected0]
                                            LABEL_NAME a 9 [source_file: expected0]
                        EXPR_RESULT 12 [source_file: expected0]
                            CALL 12 [free_call: 1] [source_file: expected0]
                                NAME alert 12 [source_file: expected0]
                                NAME action 12 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        EXPR_RESULT 1 [source_file: testcode]
            ASSIGN 1 [source_file: testcode]
                NAME f 1 [source_file: testcode]
                FUNCTION  1 [source_file: testcode]
                    NAME  1 [source_file: testcode]
                    PARAM_LIST 1 [source_file: testcode]
                    BLOCK 1 [source_file: testcode]
                        VAR 2 [source_file: testcode]
                            NAME action 2 [source_file: testcode]
                        LABEL 3 [source_file: testcode]
                            LABEL_NAME a 3 [source_file: testcode]
                            BLOCK 3 [source_file: testcode]
                                VAR 4 [source_file: testcode]
                                    NAME proto 4 [source_file: testcode]
                                        NULL 4 [source_file: testcode]
                                TRY 5 [source_file: testcode]
                                    BLOCK 5 [source_file: testcode]
                                        EXPR_RESULT 6 [source_file: testcode]
                                            ASSIGN 6 [source_file: testcode]
                                                NAME proto 6 [source_file: testcode]
                                                NEW 6 [source_file: testcode]
                                                    NAME Proto 6 [source_file: testcode]
                                    BLOCK 7 [source_file: testcode]
                                    BLOCK 7 [source_file: testcode]
                                        EXPR_RESULT 8 [source_file: testcode]
                                            ASSIGN 8 [source_file: testcode]
                                                NAME action 8 [source_file: testcode]
                                                NAME proto 8 [source_file: testcode]
                        EXPR_RESULT 12 [source_file: testcode]
                            CALL 12 [free_call: 1] [source_file: testcode]
                                NAME alert 12 [source_file: testcode]
                                NAME action 12 [source_file: testcode]


Subtree1: BLOCK 7 [source_file: expected0]
    EXPR_RESULT 8 [source_file: expected0]
        ASSIGN 8 [source_file: expected0]
            NAME action 8 [source_file: expected0]
            NAME proto 8 [source_file: expected0]
    BREAK 9 [source_file: expected0]
        LABEL_NAME a 9 [source_file: expected0]


Subtree2: BLOCK 7 [source_file: testcode]
    EXPR_RESULT 8 [source_file: testcode]
        ASSIGN 8 [source_file: testcode]
            NAME action 8 [source_file: testcode]
            NAME proto 8 [source_file: testcode]
]
junit.framework.AssertionFailedError: 
Expected: f=function(){var action;a:{var proto=null;try{proto=new Proto}finally{action=proto;break a}}alert(action)}
Result: f=function(){var action;a:{var proto=null;try{proto=new Proto}finally{action=proto}}alert(action)}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            ASSIGN 1 [source_file: expected0]
                NAME f 1 [source_file: expected0]
                FUNCTION  1 [source_file: expected0]
                    NAME  1 [source_file: expected0]
                    PARAM_LIST 1 [source_file: expected0]
                    BLOCK 1 [source_file: expected0]
                        VAR 2 [source_file: expected0]
                            NAME action 2 [source_file: expected0]
                        LABEL 3 [source_file: expected0]
                            LABEL_NAME a 3 [source_file: expected0]
                            BLOCK 3 [source_file: expected0]
                                VAR 4 [source_file: expected0]
                                    NAME proto 4 [source_file: expected0]
                                        NULL 4 [source_file: expected0]
                                TRY 5 [source_file: expected0]
                                    BLOCK 5 [source_file: expected0]
                                        EXPR_RESULT 6 [source_file: expected0]
                                            ASSIGN 6 [source_file: expected0]
                                                NAME proto 6 [source_file: expected0]
                                                NEW 6 [source_file: expected0]
                                                    NAME Proto 6 [source_file: expected0]
                                    BLOCK 7 [source_file: expected0]
                                    BLOCK 7 [source_file: expected0]
                                        EXPR_RESULT 8 [source_file: expected0]
                                            ASSIGN 8 [source_file: expected0]
                                                NAME action 8 [source_file: expected0]
                                                NAME proto 8 [source_file: expected0]
                                        BREAK 9 [source_file: expected0]
                                            LABEL_NAME a 9 [source_file: expected0]
                        EXPR_RESULT 12 [source_file: expected0]
                            CALL 12 [free_call: 1] [source_file: expected0]
                                NAME alert 12 [source_file: expected0]
                                NAME action 12 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        EXPR_RESULT 1 [source_file: testcode]
            ASSIGN 1 [source_file: testcode]
                NAME f 1 [source_file: testcode]
                FUNCTION  1 [source_file: testcode]
                    NAME  1 [source_file: testcode]
                    PARAM_LIST 1 [source_file: testcode]
                    BLOCK 1 [source_file: testcode]
                        VAR 2 [source_file: testcode]
                            NAME action 2 [source_file: testcode]
                        LABEL 3 [source_file: testcode]
                            LABEL_NAME a 3 [source_file: testcode]
                            BLOCK 3 [source_file: testcode]
                                VAR 4 [source_file: testcode]
                                    NAME proto 4 [source_file: testcode]
                                        NULL 4 [source_file: testcode]
                                TRY 5 [source_file: testcode]
                                    BLOCK 5 [source_file: testcode]
                                        EXPR_RESULT 6 [source_file: testcode]
                                            ASSIGN 6 [source_file: testcode]
                                                NAME proto 6 [source_file: testcode]
                                                NEW 6 [source_file: testcode]
                                                    NAME Proto 6 [source_file: testcode]
                                    BLOCK 7 [source_file: testcode]
                                    BLOCK 7 [source_file: testcode]
                                        EXPR_RESULT 8 [source_file: testcode]
                                            ASSIGN 8 [source_file: testcode]
                                                NAME action 8 [source_file: testcode]
                                                NAME proto 8 [source_file: testcode]
                        EXPR_RESULT 12 [source_file: testcode]
                            CALL 12 [free_call: 1] [source_file: testcode]
                                NAME alert 12 [source_file: testcode]
                                NAME action 12 [source_file: testcode]


Subtree1: BLOCK 7 [source_file: expected0]
    EXPR_RESULT 8 [source_file: expected0]
        ASSIGN 8 [source_file: expected0]
            NAME action 8 [source_file: expected0]
            NAME proto 8 [source_file: expected0]
    BREAK 9 [source_file: expected0]
        LABEL_NAME a 9 [source_file: expected0]


Subtree2: BLOCK 7 [source_file: testcode]
    EXPR_RESULT 8 [source_file: testcode]
        ASSIGN 8 [source_file: testcode]
            NAME action 8 [source_file: testcode]
            NAME proto 8 [source_file: testcode]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:928)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:460)
~ testIssue4177428c(com.google.javascript.jscomp.UnreachableCodeEliminationTest)
[
Expected: f=function(){var action;a:{var proto=null;try{}finally{try{proto=new Proto}finally{action=proto;break a}}}alert(action)}
Result: f=function(){var action;a:{var proto=null;try{}finally{try{proto=new Proto}finally{action=proto}}}alert(action)}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            ASSIGN 1 [source_file: expected0]
                NAME f 1 [source_file: expected0]
                FUNCTION  1 [source_file: expected0]
                    NAME  1 [source_file: expected0]
                    PARAM_LIST 1 [source_file: expected0]
                    BLOCK 1 [source_file: expected0]
                        VAR 2 [source_file: expected0]
                            NAME action 2 [source_file: expected0]
                        LABEL 3 [source_file: expected0]
                            LABEL_NAME a 3 [source_file: expected0]
                            BLOCK 3 [source_file: expected0]
                                VAR 4 [source_file: expected0]
                                    NAME proto 4 [source_file: expected0]
                                        NULL 4 [source_file: expected0]
                                TRY 5 [source_file: expected0]
                                    BLOCK 5 [source_file: expected0]
                                    BLOCK 6 [source_file: expected0]
                                    BLOCK 6 [source_file: expected0]
                                        TRY 7 [source_file: expected0]
                                            BLOCK 7 [source_file: expected0]
                                                EXPR_RESULT 8 [source_file: expected0]
                                                    ASSIGN 8 [source_file: expected0]
                                                        NAME proto 8 [source_file: expected0]
                                                        NEW 8 [source_file: expected0]
                                                            NAME Proto 8 [source_file: expected0]
                                            BLOCK 9 [source_file: expected0]
                                            BLOCK 9 [source_file: expected0]
                                                EXPR_RESULT 10 [source_file: expected0]
                                                    ASSIGN 10 [source_file: expected0]
                                                        NAME action 10 [source_file: expected0]
                                                        NAME proto 10 [source_file: expected0]
                                                BREAK 11 [source_file: expected0]
                                                    LABEL_NAME a 11 [source_file: expected0]
                        EXPR_RESULT 15 [source_file: expected0]
                            CALL 15 [free_call: 1] [source_file: expected0]
                                NAME alert 15 [source_file: expected0]
                                NAME action 15 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        EXPR_RESULT 1 [source_file: testcode]
            ASSIGN 1 [source_file: testcode]
                NAME f 1 [source_file: testcode]
                FUNCTION  1 [source_file: testcode]
                    NAME  1 [source_file: testcode]
                    PARAM_LIST 1 [source_file: testcode]
                    BLOCK 1 [source_file: testcode]
                        VAR 2 [source_file: testcode]
                            NAME action 2 [source_file: testcode]
                        LABEL 3 [source_file: testcode]
                            LABEL_NAME a 3 [source_file: testcode]
                            BLOCK 3 [source_file: testcode]
                                VAR 4 [source_file: testcode]
                                    NAME proto 4 [source_file: testcode]
                                        NULL 4 [source_file: testcode]
                                TRY 5 [source_file: testcode]
                                    BLOCK 5 [source_file: testcode]
                                    BLOCK 6 [source_file: testcode]
                                    BLOCK 6 [source_file: testcode]
                                        TRY 7 [source_file: testcode]
                                            BLOCK 7 [source_file: testcode]
                                                EXPR_RESULT 8 [source_file: testcode]
                                                    ASSIGN 8 [source_file: testcode]
                                                        NAME proto 8 [source_file: testcode]
                                                        NEW 8 [source_file: testcode]
                                                            NAME Proto 8 [source_file: testcode]
                                            BLOCK 9 [source_file: testcode]
                                            BLOCK 9 [source_file: testcode]
                                                EXPR_RESULT 10 [source_file: testcode]
                                                    ASSIGN 10 [source_file: testcode]
                                                        NAME action 10 [source_file: testcode]
                                                        NAME proto 10 [source_file: testcode]
                        EXPR_RESULT 15 [source_file: testcode]
                            CALL 15 [free_call: 1] [source_file: testcode]
                                NAME alert 15 [source_file: testcode]
                                NAME action 15 [source_file: testcode]


Subtree1: BLOCK 9 [source_file: expected0]
    EXPR_RESULT 10 [source_file: expected0]
        ASSIGN 10 [source_file: expected0]
            NAME action 10 [source_file: expected0]
            NAME proto 10 [source_file: expected0]
    BREAK 11 [source_file: expected0]
        LABEL_NAME a 11 [source_file: expected0]


Subtree2: BLOCK 9 [source_file: testcode]
    EXPR_RESULT 10 [source_file: testcode]
        ASSIGN 10 [source_file: testcode]
            NAME action 10 [source_file: testcode]
            NAME proto 10 [source_file: testcode]
]
junit.framework.AssertionFailedError: 
Expected: f=function(){var action;a:{var proto=null;try{}finally{try{proto=new Proto}finally{action=proto;break a}}}alert(action)}
Result: f=function(){var action;a:{var proto=null;try{}finally{try{proto=new Proto}finally{action=proto}}}alert(action)}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            ASSIGN 1 [source_file: expected0]
                NAME f 1 [source_file: expected0]
                FUNCTION  1 [source_file: expected0]
                    NAME  1 [source_file: expected0]
                    PARAM_LIST 1 [source_file: expected0]
                    BLOCK 1 [source_file: expected0]
                        VAR 2 [source_file: expected0]
                            NAME action 2 [source_file: expected0]
                        LABEL 3 [source_file: expected0]
                            LABEL_NAME a 3 [source_file: expected0]
                            BLOCK 3 [source_file: expected0]
                                VAR 4 [source_file: expected0]
                                    NAME proto 4 [source_file: expected0]
                                        NULL 4 [source_file: expected0]
                                TRY 5 [source_file: expected0]
                                    BLOCK 5 [source_file: expected0]
                                    BLOCK 6 [source_file: expected0]
                                    BLOCK 6 [source_file: expected0]
                                        TRY 7 [source_file: expected0]
                                            BLOCK 7 [source_file: expected0]
                                                EXPR_RESULT 8 [source_file: expected0]
                                                    ASSIGN 8 [source_file: expected0]
                                                        NAME proto 8 [source_file: expected0]
                                                        NEW 8 [source_file: expected0]
                                                            NAME Proto 8 [source_file: expected0]
                                            BLOCK 9 [source_file: expected0]
                                            BLOCK 9 [source_file: expected0]
                                                EXPR_RESULT 10 [source_file: expected0]
                                                    ASSIGN 10 [source_file: expected0]
                                                        NAME action 10 [source_file: expected0]
                                                        NAME proto 10 [source_file: expected0]
                                                BREAK 11 [source_file: expected0]
                                                    LABEL_NAME a 11 [source_file: expected0]
                        EXPR_RESULT 15 [source_file: expected0]
                            CALL 15 [free_call: 1] [source_file: expected0]
                                NAME alert 15 [source_file: expected0]
                                NAME action 15 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        EXPR_RESULT 1 [source_file: testcode]
            ASSIGN 1 [source_file: testcode]
                NAME f 1 [source_file: testcode]
                FUNCTION  1 [source_file: testcode]
                    NAME  1 [source_file: testcode]
                    PARAM_LIST 1 [source_file: testcode]
                    BLOCK 1 [source_file: testcode]
                        VAR 2 [source_file: testcode]
                            NAME action 2 [source_file: testcode]
                        LABEL 3 [source_file: testcode]
                            LABEL_NAME a 3 [source_file: testcode]
                            BLOCK 3 [source_file: testcode]
                                VAR 4 [source_file: testcode]
                                    NAME proto 4 [source_file: testcode]
                                        NULL 4 [source_file: testcode]
                                TRY 5 [source_file: testcode]
                                    BLOCK 5 [source_file: testcode]
                                    BLOCK 6 [source_file: testcode]
                                    BLOCK 6 [source_file: testcode]
                                        TRY 7 [source_file: testcode]
                                            BLOCK 7 [source_file: testcode]
                                                EXPR_RESULT 8 [source_file: testcode]
                                                    ASSIGN 8 [source_file: testcode]
                                                        NAME proto 8 [source_file: testcode]
                                                        NEW 8 [source_file: testcode]
                                                            NAME Proto 8 [source_file: testcode]
                                            BLOCK 9 [source_file: testcode]
                                            BLOCK 9 [source_file: testcode]
                                                EXPR_RESULT 10 [source_file: testcode]
                                                    ASSIGN 10 [source_file: testcode]
                                                        NAME action 10 [source_file: testcode]
                                                        NAME proto 10 [source_file: testcode]
                        EXPR_RESULT 15 [source_file: testcode]
                            CALL 15 [free_call: 1] [source_file: testcode]
                                NAME alert 15 [source_file: testcode]
                                NAME action 15 [source_file: testcode]


Subtree1: BLOCK 9 [source_file: expected0]
    EXPR_RESULT 10 [source_file: expected0]
        ASSIGN 10 [source_file: expected0]
            NAME action 10 [source_file: expected0]
            NAME proto 10 [source_file: expected0]
    BREAK 11 [source_file: expected0]
        LABEL_NAME a 11 [source_file: expected0]


Subtree2: BLOCK 9 [source_file: testcode]
    EXPR_RESULT 10 [source_file: testcode]
        ASSIGN 10 [source_file: testcode]
            NAME action 10 [source_file: testcode]
            NAME proto 10 [source_file: testcode]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:928)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:460)

19:30:05.068 [pool-23-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (288 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

19:30:05.088 [pool-24-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (17 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

19:30:05.102 [pool-25-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (11 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

19:30:05.114 [pool-26-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (9 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

19:30:08.243 [pool-27-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (20 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

19:30:08.254 [pool-28-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (8 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

19:30:08.300 [pool-29-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (27 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

19:30:08.316 [pool-30-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (13 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

junit.framework.AssertionFailedError: 
Expected: function f(){b:try{throw 9;}finally{switch(x){case 1:break b}}return 1}
Result: function f(){b:try{throw 9;}finally{switch(x){case 1:}}return 1}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION f 1 [source_file: expected0]
            NAME f 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                LABEL 1 [source_file: expected0]
                    LABEL_NAME b 1 [source_file: expected0]
                    TRY 1 [source_file: expected0]
                        BLOCK 1 [source_file: expected0]
                            THROW 1 [source_file: expected0]
                                NUMBER 9.0 1 [source_file: expected0]
                        BLOCK 1 [source_file: expected0]
                        BLOCK 1 [source_file: expected0]
                            SWITCH 1 [source_file: expected0]
                                NAME x 1 [source_file: expected0]
                                CASE 1 [source_file: expected0]
                                    NUMBER 1.0 1 [source_file: expected0]
                                    BLOCK 1 [synthetic: 1] [source_file: expected0]
                                        BREAK 1 [source_file: expected0]
                                            LABEL_NAME b 1 [source_file: expected0]
                RETURN 1 [source_file: expected0]
                    NUMBER 1.0 1 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION f 1 [source_file: testcode]
            NAME f 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                LABEL 1 [source_file: testcode]
                    LABEL_NAME b 1 [source_file: testcode]
                    TRY 1 [source_file: testcode]
                        BLOCK 1 [source_file: testcode]
                            THROW 1 [source_file: testcode]
                                NUMBER 9.0 1 [source_file: testcode]
                        BLOCK 1 [source_file: testcode]
                        BLOCK 1 [source_file: testcode]
                            SWITCH 1 [source_file: testcode]
                                NAME x 1 [source_file: testcode]
                                CASE 1 [source_file: testcode]
                                    NUMBER 1.0 1 [source_file: testcode]
                                    BLOCK 1 [synthetic: 1] [source_file: testcode]
                RETURN 1 [source_file: testcode]
                    NUMBER 1.0 1 [source_file: testcode]


Subtree1: BLOCK 1 [synthetic: 1] [source_file: expected0]
    BREAK 1 [source_file: expected0]
        LABEL_NAME b 1 [source_file: expected0]


Subtree2: BLOCK 1 [synthetic: 1] [source_file: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:928)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:460)
19:30:08.327 [pool-31-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (9 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testDontRemoveBreakInTryFinallySwitch(com.google.javascript.jscomp.UnreachableCodeEliminationTest)
[
Expected: function f(){b:try{throw 9;}finally{switch(x){case 1:break b}}return 1}
Result: function f(){b:try{throw 9;}finally{switch(x){case 1:}}return 1}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION f 1 [source_file: expected0]
            NAME f 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                LABEL 1 [source_file: expected0]
                    LABEL_NAME b 1 [source_file: expected0]
                    TRY 1 [source_file: expected0]
                        BLOCK 1 [source_file: expected0]
                            THROW 1 [source_file: expected0]
                                NUMBER 9.0 1 [source_file: expected0]
                        BLOCK 1 [source_file: expected0]
                        BLOCK 1 [source_file: expected0]
                            SWITCH 1 [source_file: expected0]
                                NAME x 1 [source_file: expected0]
                                CASE 1 [source_file: expected0]
                                    NUMBER 1.0 1 [source_file: expected0]
                                    BLOCK 1 [synthetic: 1] [source_file: expected0]
                                        BREAK 1 [source_file: expected0]
                                            LABEL_NAME b 1 [source_file: expected0]
                RETURN 1 [source_file: expected0]
                    NUMBER 1.0 1 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION f 1 [source_file: testcode]
            NAME f 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                LABEL 1 [source_file: testcode]
                    LABEL_NAME b 1 [source_file: testcode]
                    TRY 1 [source_file: testcode]
                        BLOCK 1 [source_file: testcode]
                            THROW 1 [source_file: testcode]
                                NUMBER 9.0 1 [source_file: testcode]
                        BLOCK 1 [source_file: testcode]
                        BLOCK 1 [source_file: testcode]
                            SWITCH 1 [source_file: testcode]
                                NAME x 1 [source_file: testcode]
                                CASE 1 [source_file: testcode]
                                    NUMBER 1.0 1 [source_file: testcode]
                                    BLOCK 1 [synthetic: 1] [source_file: testcode]
                RETURN 1 [source_file: testcode]
                    NUMBER 1.0 1 [source_file: testcode]


Subtree1: BLOCK 1 [synthetic: 1] [source_file: expected0]
    BREAK 1 [source_file: expected0]
        LABEL_NAME b 1 [source_file: expected0]


Subtree2: BLOCK 1 [synthetic: 1] [source_file: testcode]
]
junit.framework.AssertionFailedError: 
Expected: function f(){b:try{throw 9;}finally{switch(x){case 1:break b}}return 1}
Result: function f(){b:try{throw 9;}finally{switch(x){case 1:}}return 1}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION f 1 [source_file: expected0]
            NAME f 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                LABEL 1 [source_file: expected0]
                    LABEL_NAME b 1 [source_file: expected0]
                    TRY 1 [source_file: expected0]
                        BLOCK 1 [source_file: expected0]
                            THROW 1 [source_file: expected0]
                                NUMBER 9.0 1 [source_file: expected0]
                        BLOCK 1 [source_file: expected0]
                        BLOCK 1 [source_file: expected0]
                            SWITCH 1 [source_file: expected0]
                                NAME x 1 [source_file: expected0]
                                CASE 1 [source_file: expected0]
                                    NUMBER 1.0 1 [source_file: expected0]
                                    BLOCK 1 [synthetic: 1] [source_file: expected0]
                                        BREAK 1 [source_file: expected0]
                                            LABEL_NAME b 1 [source_file: expected0]
                RETURN 1 [source_file: expected0]
                    NUMBER 1.0 1 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION f 1 [source_file: testcode]
            NAME f 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                LABEL 1 [source_file: testcode]
                    LABEL_NAME b 1 [source_file: testcode]
                    TRY 1 [source_file: testcode]
                        BLOCK 1 [source_file: testcode]
                            THROW 1 [source_file: testcode]
                                NUMBER 9.0 1 [source_file: testcode]
                        BLOCK 1 [source_file: testcode]
                        BLOCK 1 [source_file: testcode]
                            SWITCH 1 [source_file: testcode]
                                NAME x 1 [source_file: testcode]
                                CASE 1 [source_file: testcode]
                                    NUMBER 1.0 1 [source_file: testcode]
                                    BLOCK 1 [synthetic: 1] [source_file: testcode]
                RETURN 1 [source_file: testcode]
                    NUMBER 1.0 1 [source_file: testcode]


Subtree1: BLOCK 1 [synthetic: 1] [source_file: expected0]
    BREAK 1 [source_file: expected0]
        LABEL_NAME b 1 [source_file: expected0]


Subtree2: BLOCK 1 [synthetic: 1] [source_file: testcode]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:928)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:460)

junit.framework.AssertionFailedError: 
Expected: f=function(){var action;a:do{var proto=null;try{proto=new Proto}finally{action=proto;continue a}}while(false);alert(action)}
Result: f=function(){var action;a:do{var proto=null;try{proto=new Proto}finally{action=proto}}while(false);alert(action)}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            ASSIGN 1 [source_file: expected0]
                NAME f 1 [source_file: expected0]
                FUNCTION  1 [source_file: expected0]
                    NAME  1 [source_file: expected0]
                    PARAM_LIST 1 [source_file: expected0]
                    BLOCK 1 [source_file: expected0]
                        VAR 2 [source_file: expected0]
                            NAME action 2 [source_file: expected0]
                        LABEL 3 [source_file: expected0]
                            LABEL_NAME a 3 [source_file: expected0]
                            DO 3 [source_file: expected0]
                                BLOCK 3 [source_file: expected0]
                                    VAR 4 [source_file: expected0]
                                        NAME proto 4 [source_file: expected0]
                                            NULL 4 [source_file: expected0]
                                    TRY 5 [source_file: expected0]
                                        BLOCK 5 [source_file: expected0]
                                            EXPR_RESULT 6 [source_file: expected0]
                                                ASSIGN 6 [source_file: expected0]
                                                    NAME proto 6 [source_file: expected0]
                                                    NEW 6 [source_file: expected0]
                                                        NAME Proto 6 [source_file: expected0]
                                        BLOCK 7 [source_file: expected0]
                                        BLOCK 7 [source_file: expected0]
                                            EXPR_RESULT 8 [source_file: expected0]
                                                ASSIGN 8 [source_file: expected0]
                                                    NAME action 8 [source_file: expected0]
                                                    NAME proto 8 [source_file: expected0]
                                            CONTINUE 9 [source_file: expected0]
                                                LABEL_NAME a 9 [source_file: expected0]
                                FALSE 11 [source_file: expected0]
                        EXPR_RESULT 12 [source_file: expected0]
                            CALL 12 [free_call: 1] [source_file: expected0]
                                NAME alert 12 [source_file: expected0]
                                NAME action 12 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        EXPR_RESULT 1 [source_file: testcode]
            ASSIGN 1 [source_file: testcode]
                NAME f 1 [source_file: testcode]
                FUNCTION  1 [source_file: testcode]
                    NAME  1 [source_file: testcode]
                    PARAM_LIST 1 [source_file: testcode]
                    BLOCK 1 [source_file: testcode]
                        VAR 2 [source_file: testcode]
                            NAME action 2 [source_file: testcode]
                        LABEL 3 [source_file: testcode]
                            LABEL_NAME a 3 [source_file: testcode]
                            DO 3 [source_file: testcode]
                                BLOCK 3 [source_file: testcode]
                                    VAR 4 [source_file: testcode]
                                        NAME proto 4 [source_file: testcode]
                                            NULL 4 [source_file: testcode]
                                    TRY 5 [source_file: testcode]
                                        BLOCK 5 [source_file: testcode]
                                            EXPR_RESULT 6 [source_file: testcode]
                                                ASSIGN 6 [source_file: testcode]
                                                    NAME proto 6 [source_file: testcode]
                                                    NEW 6 [source_file: testcode]
                                                        NAME Proto 6 [source_file: testcode]
                                        BLOCK 7 [source_file: testcode]
                                        BLOCK 7 [source_file: testcode]
                                            EXPR_RESULT 8 [source_file: testcode]
                                                ASSIGN 8 [source_file: testcode]
                                                    NAME action 8 [source_file: testcode]
                                                    NAME proto 8 [source_file: testcode]
                                FALSE 11 [source_file: testcode]
                        EXPR_RESULT 12 [source_file: testcode]
                            CALL 12 [free_call: 1] [source_file: testcode]
                                NAME alert 12 [source_file: testcode]
                                NAME action 12 [source_file: testcode]


Subtree1: BLOCK 7 [source_file: expected0]
    EXPR_RESULT 8 [source_file: expected0]
        ASSIGN 8 [source_file: expected0]
            NAME action 8 [source_file: expected0]
            NAME proto 8 [source_file: expected0]
    CONTINUE 9 [source_file: expected0]
        LABEL_NAME a 9 [source_file: expected0]


Subtree2: BLOCK 7 [source_file: testcode]
    EXPR_RESULT 8 [source_file: testcode]
        ASSIGN 8 [source_file: testcode]
            NAME action 8 [source_file: testcode]
            NAME proto 8 [source_file: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:928)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:460)
19:30:08.339 [pool-32-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (8 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue4177428_continue(com.google.javascript.jscomp.UnreachableCodeEliminationTest)
[
Expected: f=function(){var action;a:do{var proto=null;try{proto=new Proto}finally{action=proto;continue a}}while(false);alert(action)}
Result: f=function(){var action;a:do{var proto=null;try{proto=new Proto}finally{action=proto}}while(false);alert(action)}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            ASSIGN 1 [source_file: expected0]
                NAME f 1 [source_file: expected0]
                FUNCTION  1 [source_file: expected0]
                    NAME  1 [source_file: expected0]
                    PARAM_LIST 1 [source_file: expected0]
                    BLOCK 1 [source_file: expected0]
                        VAR 2 [source_file: expected0]
                            NAME action 2 [source_file: expected0]
                        LABEL 3 [source_file: expected0]
                            LABEL_NAME a 3 [source_file: expected0]
                            DO 3 [source_file: expected0]
                                BLOCK 3 [source_file: expected0]
                                    VAR 4 [source_file: expected0]
                                        NAME proto 4 [source_file: expected0]
                                            NULL 4 [source_file: expected0]
                                    TRY 5 [source_file: expected0]
                                        BLOCK 5 [source_file: expected0]
                                            EXPR_RESULT 6 [source_file: expected0]
                                                ASSIGN 6 [source_file: expected0]
                                                    NAME proto 6 [source_file: expected0]
                                                    NEW 6 [source_file: expected0]
                                                        NAME Proto 6 [source_file: expected0]
                                        BLOCK 7 [source_file: expected0]
                                        BLOCK 7 [source_file: expected0]
                                            EXPR_RESULT 8 [source_file: expected0]
                                                ASSIGN 8 [source_file: expected0]
                                                    NAME action 8 [source_file: expected0]
                                                    NAME proto 8 [source_file: expected0]
                                            CONTINUE 9 [source_file: expected0]
                                                LABEL_NAME a 9 [source_file: expected0]
                                FALSE 11 [source_file: expected0]
                        EXPR_RESULT 12 [source_file: expected0]
                            CALL 12 [free_call: 1] [source_file: expected0]
                                NAME alert 12 [source_file: expected0]
                                NAME action 12 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        EXPR_RESULT 1 [source_file: testcode]
            ASSIGN 1 [source_file: testcode]
                NAME f 1 [source_file: testcode]
                FUNCTION  1 [source_file: testcode]
                    NAME  1 [source_file: testcode]
                    PARAM_LIST 1 [source_file: testcode]
                    BLOCK 1 [source_file: testcode]
                        VAR 2 [source_file: testcode]
                            NAME action 2 [source_file: testcode]
                        LABEL 3 [source_file: testcode]
                            LABEL_NAME a 3 [source_file: testcode]
                            DO 3 [source_file: testcode]
                                BLOCK 3 [source_file: testcode]
                                    VAR 4 [source_file: testcode]
                                        NAME proto 4 [source_file: testcode]
                                            NULL 4 [source_file: testcode]
                                    TRY 5 [source_file: testcode]
                                        BLOCK 5 [source_file: testcode]
                                            EXPR_RESULT 6 [source_file: testcode]
                                                ASSIGN 6 [source_file: testcode]
                                                    NAME proto 6 [source_file: testcode]
                                                    NEW 6 [source_file: testcode]
                                                        NAME Proto 6 [source_file: testcode]
                                        BLOCK 7 [source_file: testcode]
                                        BLOCK 7 [source_file: testcode]
                                            EXPR_RESULT 8 [source_file: testcode]
                                                ASSIGN 8 [source_file: testcode]
                                                    NAME action 8 [source_file: testcode]
                                                    NAME proto 8 [source_file: testcode]
                                FALSE 11 [source_file: testcode]
                        EXPR_RESULT 12 [source_file: testcode]
                            CALL 12 [free_call: 1] [source_file: testcode]
                                NAME alert 12 [source_file: testcode]
                                NAME action 12 [source_file: testcode]


Subtree1: BLOCK 7 [source_file: expected0]
    EXPR_RESULT 8 [source_file: expected0]
        ASSIGN 8 [source_file: expected0]
            NAME action 8 [source_file: expected0]
            NAME proto 8 [source_file: expected0]
    CONTINUE 9 [source_file: expected0]
        LABEL_NAME a 9 [source_file: expected0]


Subtree2: BLOCK 7 [source_file: testcode]
    EXPR_RESULT 8 [source_file: testcode]
        ASSIGN 8 [source_file: testcode]
            NAME action 8 [source_file: testcode]
            NAME proto 8 [source_file: testcode]
]
junit.framework.AssertionFailedError: 
Expected: f=function(){var action;a:do{var proto=null;try{proto=new Proto}finally{action=proto;continue a}}while(false);alert(action)}
Result: f=function(){var action;a:do{var proto=null;try{proto=new Proto}finally{action=proto}}while(false);alert(action)}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            ASSIGN 1 [source_file: expected0]
                NAME f 1 [source_file: expected0]
                FUNCTION  1 [source_file: expected0]
                    NAME  1 [source_file: expected0]
                    PARAM_LIST 1 [source_file: expected0]
                    BLOCK 1 [source_file: expected0]
                        VAR 2 [source_file: expected0]
                            NAME action 2 [source_file: expected0]
                        LABEL 3 [source_file: expected0]
                            LABEL_NAME a 3 [source_file: expected0]
                            DO 3 [source_file: expected0]
                                BLOCK 3 [source_file: expected0]
                                    VAR 4 [source_file: expected0]
                                        NAME proto 4 [source_file: expected0]
                                            NULL 4 [source_file: expected0]
                                    TRY 5 [source_file: expected0]
                                        BLOCK 5 [source_file: expected0]
                                            EXPR_RESULT 6 [source_file: expected0]
                                                ASSIGN 6 [source_file: expected0]
                                                    NAME proto 6 [source_file: expected0]
                                                    NEW 6 [source_file: expected0]
                                                        NAME Proto 6 [source_file: expected0]
                                        BLOCK 7 [source_file: expected0]
                                        BLOCK 7 [source_file: expected0]
                                            EXPR_RESULT 8 [source_file: expected0]
                                                ASSIGN 8 [source_file: expected0]
                                                    NAME action 8 [source_file: expected0]
                                                    NAME proto 8 [source_file: expected0]
                                            CONTINUE 9 [source_file: expected0]
                                                LABEL_NAME a 9 [source_file: expected0]
                                FALSE 11 [source_file: expected0]
                        EXPR_RESULT 12 [source_file: expected0]
                            CALL 12 [free_call: 1] [source_file: expected0]
                                NAME alert 12 [source_file: expected0]
                                NAME action 12 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        EXPR_RESULT 1 [source_file: testcode]
            ASSIGN 1 [source_file: testcode]
                NAME f 1 [source_file: testcode]
                FUNCTION  1 [source_file: testcode]
                    NAME  1 [source_file: testcode]
                    PARAM_LIST 1 [source_file: testcode]
                    BLOCK 1 [source_file: testcode]
                        VAR 2 [source_file: testcode]
                            NAME action 2 [source_file: testcode]
                        LABEL 3 [source_file: testcode]
                            LABEL_NAME a 3 [source_file: testcode]
                            DO 3 [source_file: testcode]
                                BLOCK 3 [source_file: testcode]
                                    VAR 4 [source_file: testcode]
                                        NAME proto 4 [source_file: testcode]
                                            NULL 4 [source_file: testcode]
                                    TRY 5 [source_file: testcode]
                                        BLOCK 5 [source_file: testcode]
                                            EXPR_RESULT 6 [source_file: testcode]
                                                ASSIGN 6 [source_file: testcode]
                                                    NAME proto 6 [source_file: testcode]
                                                    NEW 6 [source_file: testcode]
                                                        NAME Proto 6 [source_file: testcode]
                                        BLOCK 7 [source_file: testcode]
                                        BLOCK 7 [source_file: testcode]
                                            EXPR_RESULT 8 [source_file: testcode]
                                                ASSIGN 8 [source_file: testcode]
                                                    NAME action 8 [source_file: testcode]
                                                    NAME proto 8 [source_file: testcode]
                                FALSE 11 [source_file: testcode]
                        EXPR_RESULT 12 [source_file: testcode]
                            CALL 12 [free_call: 1] [source_file: testcode]
                                NAME alert 12 [source_file: testcode]
                                NAME action 12 [source_file: testcode]


Subtree1: BLOCK 7 [source_file: expected0]
    EXPR_RESULT 8 [source_file: expected0]
        ASSIGN 8 [source_file: expected0]
            NAME action 8 [source_file: expected0]
            NAME proto 8 [source_file: expected0]
    CONTINUE 9 [source_file: expected0]
        LABEL_NAME a 9 [source_file: expected0]


Subtree2: BLOCK 7 [source_file: testcode]
    EXPR_RESULT 8 [source_file: testcode]
        ASSIGN 8 [source_file: testcode]
            NAME action 8 [source_file: testcode]
            NAME proto 8 [source_file: testcode]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:928)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:460)

junit.framework.AssertionFailedError: 
Expected: f=function(){var action;a:{var proto=null;try{}finally{try{proto=new Proto}finally{action=proto;break a}}}alert(action)}
Result: f=function(){var action;a:{var proto=null;try{}finally{try{proto=new Proto}finally{action=proto}}}alert(action)}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            ASSIGN 1 [source_file: expected0]
                NAME f 1 [source_file: expected0]
                FUNCTION  1 [source_file: expected0]
                    NAME  1 [source_file: expected0]
                    PARAM_LIST 1 [source_file: expected0]
                    BLOCK 1 [source_file: expected0]
                        VAR 2 [source_file: expected0]
                            NAME action 2 [source_file: expected0]
                        LABEL 3 [source_file: expected0]
                            LABEL_NAME a 3 [source_file: expected0]
                            BLOCK 3 [source_file: expected0]
                                VAR 4 [source_file: expected0]
                                    NAME proto 4 [source_file: expected0]
                                        NULL 4 [source_file: expected0]
                                TRY 5 [source_file: expected0]
                                    BLOCK 5 [source_file: expected0]
                                    BLOCK 6 [source_file: expected0]
                                    BLOCK 6 [source_file: expected0]
                                        TRY 7 [source_file: expected0]
                                            BLOCK 7 [source_file: expected0]
                                                EXPR_RESULT 8 [source_file: expected0]
                                                    ASSIGN 8 [source_file: expected0]
                                                        NAME proto 8 [source_file: expected0]
                                                        NEW 8 [source_file: expected0]
                                                            NAME Proto 8 [source_file: expected0]
                                            BLOCK 9 [source_file: expected0]
                                            BLOCK 9 [source_file: expected0]
                                                EXPR_RESULT 10 [source_file: expected0]
                                                    ASSIGN 10 [source_file: expected0]
                                                        NAME action 10 [source_file: expected0]
                                                        NAME proto 10 [source_file: expected0]
                                                BREAK 11 [source_file: expected0]
                                                    LABEL_NAME a 11 [source_file: expected0]
                        EXPR_RESULT 15 [source_file: expected0]
                            CALL 15 [free_call: 1] [source_file: expected0]
                                NAME alert 15 [source_file: expected0]
                                NAME action 15 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        EXPR_RESULT 1 [source_file: testcode]
            ASSIGN 1 [source_file: testcode]
                NAME f 1 [source_file: testcode]
                FUNCTION  1 [source_file: testcode]
                    NAME  1 [source_file: testcode]
                    PARAM_LIST 1 [source_file: testcode]
                    BLOCK 1 [source_file: testcode]
                        VAR 2 [source_file: testcode]
                            NAME action 2 [source_file: testcode]
                        LABEL 3 [source_file: testcode]
                            LABEL_NAME a 3 [source_file: testcode]
                            BLOCK 3 [source_file: testcode]
                                VAR 4 [source_file: testcode]
                                    NAME proto 4 [source_file: testcode]
                                        NULL 4 [source_file: testcode]
                                TRY 5 [source_file: testcode]
                                    BLOCK 5 [source_file: testcode]
                                    BLOCK 6 [source_file: testcode]
                                    BLOCK 6 [source_file: testcode]
                                        TRY 7 [source_file: testcode]
                                            BLOCK 7 [source_file: testcode]
                                                EXPR_RESULT 8 [source_file: testcode]
                                                    ASSIGN 8 [source_file: testcode]
                                                        NAME proto 8 [source_file: testcode]
                                                        NEW 8 [source_file: testcode]
                                                            NAME Proto 8 [source_file: testcode]
                                            BLOCK 9 [source_file: testcode]
                                            BLOCK 9 [source_file: testcode]
                                                EXPR_RESULT 10 [source_file: testcode]
                                                    ASSIGN 10 [source_file: testcode]
                                                        NAME action 10 [source_file: testcode]
                                                        NAME proto 10 [source_file: testcode]
                        EXPR_RESULT 15 [source_file: testcode]
                            CALL 15 [free_call: 1] [source_file: testcode]
                                NAME alert 15 [source_file: testcode]
                                NAME action 15 [source_file: testcode]


Subtree1: BLOCK 9 [source_file: expected0]
    EXPR_RESULT 10 [source_file: expected0]
        ASSIGN 10 [source_file: expected0]
            NAME action 10 [source_file: expected0]
            NAME proto 10 [source_file: expected0]
    BREAK 11 [source_file: expected0]
        LABEL_NAME a 11 [source_file: expected0]


Subtree2: BLOCK 9 [source_file: testcode]
    EXPR_RESULT 10 [source_file: testcode]
        ASSIGN 10 [source_file: testcode]
            NAME action 10 [source_file: testcode]
            NAME proto 10 [source_file: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:928)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:460)
19:30:08.350 [pool-33-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (9 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue4177428c(com.google.javascript.jscomp.UnreachableCodeEliminationTest)
[
Expected: f=function(){var action;a:{var proto=null;try{}finally{try{proto=new Proto}finally{action=proto;break a}}}alert(action)}
Result: f=function(){var action;a:{var proto=null;try{}finally{try{proto=new Proto}finally{action=proto}}}alert(action)}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            ASSIGN 1 [source_file: expected0]
                NAME f 1 [source_file: expected0]
                FUNCTION  1 [source_file: expected0]
                    NAME  1 [source_file: expected0]
                    PARAM_LIST 1 [source_file: expected0]
                    BLOCK 1 [source_file: expected0]
                        VAR 2 [source_file: expected0]
                            NAME action 2 [source_file: expected0]
                        LABEL 3 [source_file: expected0]
                            LABEL_NAME a 3 [source_file: expected0]
                            BLOCK 3 [source_file: expected0]
                                VAR 4 [source_file: expected0]
                                    NAME proto 4 [source_file: expected0]
                                        NULL 4 [source_file: expected0]
                                TRY 5 [source_file: expected0]
                                    BLOCK 5 [source_file: expected0]
                                    BLOCK 6 [source_file: expected0]
                                    BLOCK 6 [source_file: expected0]
                                        TRY 7 [source_file: expected0]
                                            BLOCK 7 [source_file: expected0]
                                                EXPR_RESULT 8 [source_file: expected0]
                                                    ASSIGN 8 [source_file: expected0]
                                                        NAME proto 8 [source_file: expected0]
                                                        NEW 8 [source_file: expected0]
                                                            NAME Proto 8 [source_file: expected0]
                                            BLOCK 9 [source_file: expected0]
                                            BLOCK 9 [source_file: expected0]
                                                EXPR_RESULT 10 [source_file: expected0]
                                                    ASSIGN 10 [source_file: expected0]
                                                        NAME action 10 [source_file: expected0]
                                                        NAME proto 10 [source_file: expected0]
                                                BREAK 11 [source_file: expected0]
                                                    LABEL_NAME a 11 [source_file: expected0]
                        EXPR_RESULT 15 [source_file: expected0]
                            CALL 15 [free_call: 1] [source_file: expected0]
                                NAME alert 15 [source_file: expected0]
                                NAME action 15 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        EXPR_RESULT 1 [source_file: testcode]
            ASSIGN 1 [source_file: testcode]
                NAME f 1 [source_file: testcode]
                FUNCTION  1 [source_file: testcode]
                    NAME  1 [source_file: testcode]
                    PARAM_LIST 1 [source_file: testcode]
                    BLOCK 1 [source_file: testcode]
                        VAR 2 [source_file: testcode]
                            NAME action 2 [source_file: testcode]
                        LABEL 3 [source_file: testcode]
                            LABEL_NAME a 3 [source_file: testcode]
                            BLOCK 3 [source_file: testcode]
                                VAR 4 [source_file: testcode]
                                    NAME proto 4 [source_file: testcode]
                                        NULL 4 [source_file: testcode]
                                TRY 5 [source_file: testcode]
                                    BLOCK 5 [source_file: testcode]
                                    BLOCK 6 [source_file: testcode]
                                    BLOCK 6 [source_file: testcode]
                                        TRY 7 [source_file: testcode]
                                            BLOCK 7 [source_file: testcode]
                                                EXPR_RESULT 8 [source_file: testcode]
                                                    ASSIGN 8 [source_file: testcode]
                                                        NAME proto 8 [source_file: testcode]
                                                        NEW 8 [source_file: testcode]
                                                            NAME Proto 8 [source_file: testcode]
                                            BLOCK 9 [source_file: testcode]
                                            BLOCK 9 [source_file: testcode]
                                                EXPR_RESULT 10 [source_file: testcode]
                                                    ASSIGN 10 [source_file: testcode]
                                                        NAME action 10 [source_file: testcode]
                                                        NAME proto 10 [source_file: testcode]
                        EXPR_RESULT 15 [source_file: testcode]
                            CALL 15 [free_call: 1] [source_file: testcode]
                                NAME alert 15 [source_file: testcode]
                                NAME action 15 [source_file: testcode]


Subtree1: BLOCK 9 [source_file: expected0]
    EXPR_RESULT 10 [source_file: expected0]
        ASSIGN 10 [source_file: expected0]
            NAME action 10 [source_file: expected0]
            NAME proto 10 [source_file: expected0]
    BREAK 11 [source_file: expected0]
        LABEL_NAME a 11 [source_file: expected0]


Subtree2: BLOCK 9 [source_file: testcode]
    EXPR_RESULT 10 [source_file: testcode]
        ASSIGN 10 [source_file: testcode]
            NAME action 10 [source_file: testcode]
            NAME proto 10 [source_file: testcode]
]
junit.framework.AssertionFailedError: 
Expected: f=function(){var action;a:{var proto=null;try{}finally{try{proto=new Proto}finally{action=proto;break a}}}alert(action)}
Result: f=function(){var action;a:{var proto=null;try{}finally{try{proto=new Proto}finally{action=proto}}}alert(action)}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            ASSIGN 1 [source_file: expected0]
                NAME f 1 [source_file: expected0]
                FUNCTION  1 [source_file: expected0]
                    NAME  1 [source_file: expected0]
                    PARAM_LIST 1 [source_file: expected0]
                    BLOCK 1 [source_file: expected0]
                        VAR 2 [source_file: expected0]
                            NAME action 2 [source_file: expected0]
                        LABEL 3 [source_file: expected0]
                            LABEL_NAME a 3 [source_file: expected0]
                            BLOCK 3 [source_file: expected0]
                                VAR 4 [source_file: expected0]
                                    NAME proto 4 [source_file: expected0]
                                        NULL 4 [source_file: expected0]
                                TRY 5 [source_file: expected0]
                                    BLOCK 5 [source_file: expected0]
                                    BLOCK 6 [source_file: expected0]
                                    BLOCK 6 [source_file: expected0]
                                        TRY 7 [source_file: expected0]
                                            BLOCK 7 [source_file: expected0]
                                                EXPR_RESULT 8 [source_file: expected0]
                                                    ASSIGN 8 [source_file: expected0]
                                                        NAME proto 8 [source_file: expected0]
                                                        NEW 8 [source_file: expected0]
                                                            NAME Proto 8 [source_file: expected0]
                                            BLOCK 9 [source_file: expected0]
                                            BLOCK 9 [source_file: expected0]
                                                EXPR_RESULT 10 [source_file: expected0]
                                                    ASSIGN 10 [source_file: expected0]
                                                        NAME action 10 [source_file: expected0]
                                                        NAME proto 10 [source_file: expected0]
                                                BREAK 11 [source_file: expected0]
                                                    LABEL_NAME a 11 [source_file: expected0]
                        EXPR_RESULT 15 [source_file: expected0]
                            CALL 15 [free_call: 1] [source_file: expected0]
                                NAME alert 15 [source_file: expected0]
                                NAME action 15 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        EXPR_RESULT 1 [source_file: testcode]
            ASSIGN 1 [source_file: testcode]
                NAME f 1 [source_file: testcode]
                FUNCTION  1 [source_file: testcode]
                    NAME  1 [source_file: testcode]
                    PARAM_LIST 1 [source_file: testcode]
                    BLOCK 1 [source_file: testcode]
                        VAR 2 [source_file: testcode]
                            NAME action 2 [source_file: testcode]
                        LABEL 3 [source_file: testcode]
                            LABEL_NAME a 3 [source_file: testcode]
                            BLOCK 3 [source_file: testcode]
                                VAR 4 [source_file: testcode]
                                    NAME proto 4 [source_file: testcode]
                                        NULL 4 [source_file: testcode]
                                TRY 5 [source_file: testcode]
                                    BLOCK 5 [source_file: testcode]
                                    BLOCK 6 [source_file: testcode]
                                    BLOCK 6 [source_file: testcode]
                                        TRY 7 [source_file: testcode]
                                            BLOCK 7 [source_file: testcode]
                                                EXPR_RESULT 8 [source_file: testcode]
                                                    ASSIGN 8 [source_file: testcode]
                                                        NAME proto 8 [source_file: testcode]
                                                        NEW 8 [source_file: testcode]
                                                            NAME Proto 8 [source_file: testcode]
                                            BLOCK 9 [source_file: testcode]
                                            BLOCK 9 [source_file: testcode]
                                                EXPR_RESULT 10 [source_file: testcode]
                                                    ASSIGN 10 [source_file: testcode]
                                                        NAME action 10 [source_file: testcode]
                                                        NAME proto 10 [source_file: testcode]
                        EXPR_RESULT 15 [source_file: testcode]
                            CALL 15 [free_call: 1] [source_file: testcode]
                                NAME alert 15 [source_file: testcode]
                                NAME action 15 [source_file: testcode]


Subtree1: BLOCK 9 [source_file: expected0]
    EXPR_RESULT 10 [source_file: expected0]
        ASSIGN 10 [source_file: expected0]
            NAME action 10 [source_file: expected0]
            NAME proto 10 [source_file: expected0]
    BREAK 11 [source_file: expected0]
        LABEL_NAME a 11 [source_file: expected0]


Subtree2: BLOCK 9 [source_file: testcode]
    EXPR_RESULT 10 [source_file: testcode]
        ASSIGN 10 [source_file: testcode]
            NAME action 10 [source_file: testcode]
            NAME proto 10 [source_file: testcode]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:928)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:460)

junit.framework.AssertionFailedError: 
Expected: f=function(){var action;a:{var proto=null;try{proto=new Proto}finally{action=proto;return}}}
Result: f=function(){var action;a:{var proto=null;try{proto=new Proto}finally{action=proto}}}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            ASSIGN 1 [source_file: expected0]
                NAME f 1 [source_file: expected0]
                FUNCTION  1 [source_file: expected0]
                    NAME  1 [source_file: expected0]
                    PARAM_LIST 1 [source_file: expected0]
                    BLOCK 1 [source_file: expected0]
                        VAR 2 [source_file: expected0]
                            NAME action 2 [source_file: expected0]
                        LABEL 3 [source_file: expected0]
                            LABEL_NAME a 3 [source_file: expected0]
                            BLOCK 3 [source_file: expected0]
                                VAR 4 [source_file: expected0]
                                    NAME proto 4 [source_file: expected0]
                                        NULL 4 [source_file: expected0]
                                TRY 5 [source_file: expected0]
                                    BLOCK 5 [source_file: expected0]
                                        EXPR_RESULT 6 [source_file: expected0]
                                            ASSIGN 6 [source_file: expected0]
                                                NAME proto 6 [source_file: expected0]
                                                NEW 6 [source_file: expected0]
                                                    NAME Proto 6 [source_file: expected0]
                                    BLOCK 7 [source_file: expected0]
                                    BLOCK 7 [source_file: expected0]
                                        EXPR_RESULT 8 [source_file: expected0]
                                            ASSIGN 8 [source_file: expected0]
                                                NAME action 8 [source_file: expected0]
                                                NAME proto 8 [source_file: expected0]
                                        RETURN 9 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        EXPR_RESULT 1 [source_file: testcode]
            ASSIGN 1 [source_file: testcode]
                NAME f 1 [source_file: testcode]
                FUNCTION  1 [source_file: testcode]
                    NAME  1 [source_file: testcode]
                    PARAM_LIST 1 [source_file: testcode]
                    BLOCK 1 [source_file: testcode]
                        VAR 2 [source_file: testcode]
                            NAME action 2 [source_file: testcode]
                        LABEL 3 [source_file: testcode]
                            LABEL_NAME a 3 [source_file: testcode]
                            BLOCK 3 [source_file: testcode]
                                VAR 4 [source_file: testcode]
                                    NAME proto 4 [source_file: testcode]
                                        NULL 4 [source_file: testcode]
                                TRY 5 [source_file: testcode]
                                    BLOCK 5 [source_file: testcode]
                                        EXPR_RESULT 6 [source_file: testcode]
                                            ASSIGN 6 [source_file: testcode]
                                                NAME proto 6 [source_file: testcode]
                                                NEW 6 [source_file: testcode]
                                                    NAME Proto 6 [source_file: testcode]
                                    BLOCK 7 [source_file: testcode]
                                    BLOCK 7 [source_file: testcode]
                                        EXPR_RESULT 8 [source_file: testcode]
                                            ASSIGN 8 [source_file: testcode]
                                                NAME action 8 [source_file: testcode]
                                                NAME proto 8 [source_file: testcode]


Subtree1: BLOCK 7 [source_file: expected0]
    EXPR_RESULT 8 [source_file: expected0]
        ASSIGN 8 [source_file: expected0]
            NAME action 8 [source_file: expected0]
            NAME proto 8 [source_file: expected0]
    RETURN 9 [source_file: expected0]


Subtree2: BLOCK 7 [source_file: testcode]
    EXPR_RESULT 8 [source_file: testcode]
        ASSIGN 8 [source_file: testcode]
            NAME action 8 [source_file: testcode]
            NAME proto 8 [source_file: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:928)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:460)
19:30:08.363 [pool-34-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (10 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue4177428_return(com.google.javascript.jscomp.UnreachableCodeEliminationTest)
[
Expected: f=function(){var action;a:{var proto=null;try{proto=new Proto}finally{action=proto;return}}}
Result: f=function(){var action;a:{var proto=null;try{proto=new Proto}finally{action=proto}}}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            ASSIGN 1 [source_file: expected0]
                NAME f 1 [source_file: expected0]
                FUNCTION  1 [source_file: expected0]
                    NAME  1 [source_file: expected0]
                    PARAM_LIST 1 [source_file: expected0]
                    BLOCK 1 [source_file: expected0]
                        VAR 2 [source_file: expected0]
                            NAME action 2 [source_file: expected0]
                        LABEL 3 [source_file: expected0]
                            LABEL_NAME a 3 [source_file: expected0]
                            BLOCK 3 [source_file: expected0]
                                VAR 4 [source_file: expected0]
                                    NAME proto 4 [source_file: expected0]
                                        NULL 4 [source_file: expected0]
                                TRY 5 [source_file: expected0]
                                    BLOCK 5 [source_file: expected0]
                                        EXPR_RESULT 6 [source_file: expected0]
                                            ASSIGN 6 [source_file: expected0]
                                                NAME proto 6 [source_file: expected0]
                                                NEW 6 [source_file: expected0]
                                                    NAME Proto 6 [source_file: expected0]
                                    BLOCK 7 [source_file: expected0]
                                    BLOCK 7 [source_file: expected0]
                                        EXPR_RESULT 8 [source_file: expected0]
                                            ASSIGN 8 [source_file: expected0]
                                                NAME action 8 [source_file: expected0]
                                                NAME proto 8 [source_file: expected0]
                                        RETURN 9 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        EXPR_RESULT 1 [source_file: testcode]
            ASSIGN 1 [source_file: testcode]
                NAME f 1 [source_file: testcode]
                FUNCTION  1 [source_file: testcode]
                    NAME  1 [source_file: testcode]
                    PARAM_LIST 1 [source_file: testcode]
                    BLOCK 1 [source_file: testcode]
                        VAR 2 [source_file: testcode]
                            NAME action 2 [source_file: testcode]
                        LABEL 3 [source_file: testcode]
                            LABEL_NAME a 3 [source_file: testcode]
                            BLOCK 3 [source_file: testcode]
                                VAR 4 [source_file: testcode]
                                    NAME proto 4 [source_file: testcode]
                                        NULL 4 [source_file: testcode]
                                TRY 5 [source_file: testcode]
                                    BLOCK 5 [source_file: testcode]
                                        EXPR_RESULT 6 [source_file: testcode]
                                            ASSIGN 6 [source_file: testcode]
                                                NAME proto 6 [source_file: testcode]
                                                NEW 6 [source_file: testcode]
                                                    NAME Proto 6 [source_file: testcode]
                                    BLOCK 7 [source_file: testcode]
                                    BLOCK 7 [source_file: testcode]
                                        EXPR_RESULT 8 [source_file: testcode]
                                            ASSIGN 8 [source_file: testcode]
                                                NAME action 8 [source_file: testcode]
                                                NAME proto 8 [source_file: testcode]


Subtree1: BLOCK 7 [source_file: expected0]
    EXPR_RESULT 8 [source_file: expected0]
        ASSIGN 8 [source_file: expected0]
            NAME action 8 [source_file: expected0]
            NAME proto 8 [source_file: expected0]
    RETURN 9 [source_file: expected0]


Subtree2: BLOCK 7 [source_file: testcode]
    EXPR_RESULT 8 [source_file: testcode]
        ASSIGN 8 [source_file: testcode]
            NAME action 8 [source_file: testcode]
            NAME proto 8 [source_file: testcode]
]
junit.framework.AssertionFailedError: 
Expected: f=function(){var action;a:{var proto=null;try{proto=new Proto}finally{action=proto;return}}}
Result: f=function(){var action;a:{var proto=null;try{proto=new Proto}finally{action=proto}}}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            ASSIGN 1 [source_file: expected0]
                NAME f 1 [source_file: expected0]
                FUNCTION  1 [source_file: expected0]
                    NAME  1 [source_file: expected0]
                    PARAM_LIST 1 [source_file: expected0]
                    BLOCK 1 [source_file: expected0]
                        VAR 2 [source_file: expected0]
                            NAME action 2 [source_file: expected0]
                        LABEL 3 [source_file: expected0]
                            LABEL_NAME a 3 [source_file: expected0]
                            BLOCK 3 [source_file: expected0]
                                VAR 4 [source_file: expected0]
                                    NAME proto 4 [source_file: expected0]
                                        NULL 4 [source_file: expected0]
                                TRY 5 [source_file: expected0]
                                    BLOCK 5 [source_file: expected0]
                                        EXPR_RESULT 6 [source_file: expected0]
                                            ASSIGN 6 [source_file: expected0]
                                                NAME proto 6 [source_file: expected0]
                                                NEW 6 [source_file: expected0]
                                                    NAME Proto 6 [source_file: expected0]
                                    BLOCK 7 [source_file: expected0]
                                    BLOCK 7 [source_file: expected0]
                                        EXPR_RESULT 8 [source_file: expected0]
                                            ASSIGN 8 [source_file: expected0]
                                                NAME action 8 [source_file: expected0]
                                                NAME proto 8 [source_file: expected0]
                                        RETURN 9 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        EXPR_RESULT 1 [source_file: testcode]
            ASSIGN 1 [source_file: testcode]
                NAME f 1 [source_file: testcode]
                FUNCTION  1 [source_file: testcode]
                    NAME  1 [source_file: testcode]
                    PARAM_LIST 1 [source_file: testcode]
                    BLOCK 1 [source_file: testcode]
                        VAR 2 [source_file: testcode]
                            NAME action 2 [source_file: testcode]
                        LABEL 3 [source_file: testcode]
                            LABEL_NAME a 3 [source_file: testcode]
                            BLOCK 3 [source_file: testcode]
                                VAR 4 [source_file: testcode]
                                    NAME proto 4 [source_file: testcode]
                                        NULL 4 [source_file: testcode]
                                TRY 5 [source_file: testcode]
                                    BLOCK 5 [source_file: testcode]
                                        EXPR_RESULT 6 [source_file: testcode]
                                            ASSIGN 6 [source_file: testcode]
                                                NAME proto 6 [source_file: testcode]
                                                NEW 6 [source_file: testcode]
                                                    NAME Proto 6 [source_file: testcode]
                                    BLOCK 7 [source_file: testcode]
                                    BLOCK 7 [source_file: testcode]
                                        EXPR_RESULT 8 [source_file: testcode]
                                            ASSIGN 8 [source_file: testcode]
                                                NAME action 8 [source_file: testcode]
                                                NAME proto 8 [source_file: testcode]


Subtree1: BLOCK 7 [source_file: expected0]
    EXPR_RESULT 8 [source_file: expected0]
        ASSIGN 8 [source_file: expected0]
            NAME action 8 [source_file: expected0]
            NAME proto 8 [source_file: expected0]
    RETURN 9 [source_file: expected0]


Subtree2: BLOCK 7 [source_file: testcode]
    EXPR_RESULT 8 [source_file: testcode]
        ASSIGN 8 [source_file: testcode]
            NAME action 8 [source_file: testcode]
            NAME proto 8 [source_file: testcode]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:928)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:460)

junit.framework.AssertionFailedError: 
Expected: f=function(){var action;a:{var proto=null;try{proto=new Proto}finally{action=proto;break a}}alert(action)}
Result: f=function(){var action;a:{var proto=null;try{proto=new Proto}finally{action=proto}}alert(action)}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            ASSIGN 1 [source_file: expected0]
                NAME f 1 [source_file: expected0]
                FUNCTION  1 [source_file: expected0]
                    NAME  1 [source_file: expected0]
                    PARAM_LIST 1 [source_file: expected0]
                    BLOCK 1 [source_file: expected0]
                        VAR 2 [source_file: expected0]
                            NAME action 2 [source_file: expected0]
                        LABEL 3 [source_file: expected0]
                            LABEL_NAME a 3 [source_file: expected0]
                            BLOCK 3 [source_file: expected0]
                                VAR 4 [source_file: expected0]
                                    NAME proto 4 [source_file: expected0]
                                        NULL 4 [source_file: expected0]
                                TRY 5 [source_file: expected0]
                                    BLOCK 5 [source_file: expected0]
                                        EXPR_RESULT 6 [source_file: expected0]
                                            ASSIGN 6 [source_file: expected0]
                                                NAME proto 6 [source_file: expected0]
                                                NEW 6 [source_file: expected0]
                                                    NAME Proto 6 [source_file: expected0]
                                    BLOCK 7 [source_file: expected0]
                                    BLOCK 7 [source_file: expected0]
                                        EXPR_RESULT 8 [source_file: expected0]
                                            ASSIGN 8 [source_file: expected0]
                                                NAME action 8 [source_file: expected0]
                                                NAME proto 8 [source_file: expected0]
                                        BREAK 9 [source_file: expected0]
                                            LABEL_NAME a 9 [source_file: expected0]
                        EXPR_RESULT 12 [source_file: expected0]
                            CALL 12 [free_call: 1] [source_file: expected0]
                                NAME alert 12 [source_file: expected0]
                                NAME action 12 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        EXPR_RESULT 1 [source_file: testcode]
            ASSIGN 1 [source_file: testcode]
                NAME f 1 [source_file: testcode]
                FUNCTION  1 [source_file: testcode]
                    NAME  1 [source_file: testcode]
                    PARAM_LIST 1 [source_file: testcode]
                    BLOCK 1 [source_file: testcode]
                        VAR 2 [source_file: testcode]
                            NAME action 2 [source_file: testcode]
                        LABEL 3 [source_file: testcode]
                            LABEL_NAME a 3 [source_file: testcode]
                            BLOCK 3 [source_file: testcode]
                                VAR 4 [source_file: testcode]
                                    NAME proto 4 [source_file: testcode]
                                        NULL 4 [source_file: testcode]
                                TRY 5 [source_file: testcode]
                                    BLOCK 5 [source_file: testcode]
                                        EXPR_RESULT 6 [source_file: testcode]
                                            ASSIGN 6 [source_file: testcode]
                                                NAME proto 6 [source_file: testcode]
                                                NEW 6 [source_file: testcode]
                                                    NAME Proto 6 [source_file: testcode]
                                    BLOCK 7 [source_file: testcode]
                                    BLOCK 7 [source_file: testcode]
                                        EXPR_RESULT 8 [source_file: testcode]
                                            ASSIGN 8 [source_file: testcode]
                                                NAME action 8 [source_file: testcode]
                                                NAME proto 8 [source_file: testcode]
                        EXPR_RESULT 12 [source_file: testcode]
                            CALL 12 [free_call: 1] [source_file: testcode]
                                NAME alert 12 [source_file: testcode]
                                NAME action 12 [source_file: testcode]


Subtree1: BLOCK 7 [source_file: expected0]
    EXPR_RESULT 8 [source_file: expected0]
        ASSIGN 8 [source_file: expected0]
            NAME action 8 [source_file: expected0]
            NAME proto 8 [source_file: expected0]
    BREAK 9 [source_file: expected0]
        LABEL_NAME a 9 [source_file: expected0]


Subtree2: BLOCK 7 [source_file: testcode]
    EXPR_RESULT 8 [source_file: testcode]
        ASSIGN 8 [source_file: testcode]
            NAME action 8 [source_file: testcode]
            NAME proto 8 [source_file: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:928)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:460)
19:30:08.374 [pool-35-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (9 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue4177428a(com.google.javascript.jscomp.UnreachableCodeEliminationTest)
[
Expected: f=function(){var action;a:{var proto=null;try{proto=new Proto}finally{action=proto;break a}}alert(action)}
Result: f=function(){var action;a:{var proto=null;try{proto=new Proto}finally{action=proto}}alert(action)}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            ASSIGN 1 [source_file: expected0]
                NAME f 1 [source_file: expected0]
                FUNCTION  1 [source_file: expected0]
                    NAME  1 [source_file: expected0]
                    PARAM_LIST 1 [source_file: expected0]
                    BLOCK 1 [source_file: expected0]
                        VAR 2 [source_file: expected0]
                            NAME action 2 [source_file: expected0]
                        LABEL 3 [source_file: expected0]
                            LABEL_NAME a 3 [source_file: expected0]
                            BLOCK 3 [source_file: expected0]
                                VAR 4 [source_file: expected0]
                                    NAME proto 4 [source_file: expected0]
                                        NULL 4 [source_file: expected0]
                                TRY 5 [source_file: expected0]
                                    BLOCK 5 [source_file: expected0]
                                        EXPR_RESULT 6 [source_file: expected0]
                                            ASSIGN 6 [source_file: expected0]
                                                NAME proto 6 [source_file: expected0]
                                                NEW 6 [source_file: expected0]
                                                    NAME Proto 6 [source_file: expected0]
                                    BLOCK 7 [source_file: expected0]
                                    BLOCK 7 [source_file: expected0]
                                        EXPR_RESULT 8 [source_file: expected0]
                                            ASSIGN 8 [source_file: expected0]
                                                NAME action 8 [source_file: expected0]
                                                NAME proto 8 [source_file: expected0]
                                        BREAK 9 [source_file: expected0]
                                            LABEL_NAME a 9 [source_file: expected0]
                        EXPR_RESULT 12 [source_file: expected0]
                            CALL 12 [free_call: 1] [source_file: expected0]
                                NAME alert 12 [source_file: expected0]
                                NAME action 12 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        EXPR_RESULT 1 [source_file: testcode]
            ASSIGN 1 [source_file: testcode]
                NAME f 1 [source_file: testcode]
                FUNCTION  1 [source_file: testcode]
                    NAME  1 [source_file: testcode]
                    PARAM_LIST 1 [source_file: testcode]
                    BLOCK 1 [source_file: testcode]
                        VAR 2 [source_file: testcode]
                            NAME action 2 [source_file: testcode]
                        LABEL 3 [source_file: testcode]
                            LABEL_NAME a 3 [source_file: testcode]
                            BLOCK 3 [source_file: testcode]
                                VAR 4 [source_file: testcode]
                                    NAME proto 4 [source_file: testcode]
                                        NULL 4 [source_file: testcode]
                                TRY 5 [source_file: testcode]
                                    BLOCK 5 [source_file: testcode]
                                        EXPR_RESULT 6 [source_file: testcode]
                                            ASSIGN 6 [source_file: testcode]
                                                NAME proto 6 [source_file: testcode]
                                                NEW 6 [source_file: testcode]
                                                    NAME Proto 6 [source_file: testcode]
                                    BLOCK 7 [source_file: testcode]
                                    BLOCK 7 [source_file: testcode]
                                        EXPR_RESULT 8 [source_file: testcode]
                                            ASSIGN 8 [source_file: testcode]
                                                NAME action 8 [source_file: testcode]
                                                NAME proto 8 [source_file: testcode]
                        EXPR_RESULT 12 [source_file: testcode]
                            CALL 12 [free_call: 1] [source_file: testcode]
                                NAME alert 12 [source_file: testcode]
                                NAME action 12 [source_file: testcode]


Subtree1: BLOCK 7 [source_file: expected0]
    EXPR_RESULT 8 [source_file: expected0]
        ASSIGN 8 [source_file: expected0]
            NAME action 8 [source_file: expected0]
            NAME proto 8 [source_file: expected0]
    BREAK 9 [source_file: expected0]
        LABEL_NAME a 9 [source_file: expected0]


Subtree2: BLOCK 7 [source_file: testcode]
    EXPR_RESULT 8 [source_file: testcode]
        ASSIGN 8 [source_file: testcode]
            NAME action 8 [source_file: testcode]
            NAME proto 8 [source_file: testcode]
]
junit.framework.AssertionFailedError: 
Expected: f=function(){var action;a:{var proto=null;try{proto=new Proto}finally{action=proto;break a}}alert(action)}
Result: f=function(){var action;a:{var proto=null;try{proto=new Proto}finally{action=proto}}alert(action)}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            ASSIGN 1 [source_file: expected0]
                NAME f 1 [source_file: expected0]
                FUNCTION  1 [source_file: expected0]
                    NAME  1 [source_file: expected0]
                    PARAM_LIST 1 [source_file: expected0]
                    BLOCK 1 [source_file: expected0]
                        VAR 2 [source_file: expected0]
                            NAME action 2 [source_file: expected0]
                        LABEL 3 [source_file: expected0]
                            LABEL_NAME a 3 [source_file: expected0]
                            BLOCK 3 [source_file: expected0]
                                VAR 4 [source_file: expected0]
                                    NAME proto 4 [source_file: expected0]
                                        NULL 4 [source_file: expected0]
                                TRY 5 [source_file: expected0]
                                    BLOCK 5 [source_file: expected0]
                                        EXPR_RESULT 6 [source_file: expected0]
                                            ASSIGN 6 [source_file: expected0]
                                                NAME proto 6 [source_file: expected0]
                                                NEW 6 [source_file: expected0]
                                                    NAME Proto 6 [source_file: expected0]
                                    BLOCK 7 [source_file: expected0]
                                    BLOCK 7 [source_file: expected0]
                                        EXPR_RESULT 8 [source_file: expected0]
                                            ASSIGN 8 [source_file: expected0]
                                                NAME action 8 [source_file: expected0]
                                                NAME proto 8 [source_file: expected0]
                                        BREAK 9 [source_file: expected0]
                                            LABEL_NAME a 9 [source_file: expected0]
                        EXPR_RESULT 12 [source_file: expected0]
                            CALL 12 [free_call: 1] [source_file: expected0]
                                NAME alert 12 [source_file: expected0]
                                NAME action 12 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        EXPR_RESULT 1 [source_file: testcode]
            ASSIGN 1 [source_file: testcode]
                NAME f 1 [source_file: testcode]
                FUNCTION  1 [source_file: testcode]
                    NAME  1 [source_file: testcode]
                    PARAM_LIST 1 [source_file: testcode]
                    BLOCK 1 [source_file: testcode]
                        VAR 2 [source_file: testcode]
                            NAME action 2 [source_file: testcode]
                        LABEL 3 [source_file: testcode]
                            LABEL_NAME a 3 [source_file: testcode]
                            BLOCK 3 [source_file: testcode]
                                VAR 4 [source_file: testcode]
                                    NAME proto 4 [source_file: testcode]
                                        NULL 4 [source_file: testcode]
                                TRY 5 [source_file: testcode]
                                    BLOCK 5 [source_file: testcode]
                                        EXPR_RESULT 6 [source_file: testcode]
                                            ASSIGN 6 [source_file: testcode]
                                                NAME proto 6 [source_file: testcode]
                                                NEW 6 [source_file: testcode]
                                                    NAME Proto 6 [source_file: testcode]
                                    BLOCK 7 [source_file: testcode]
                                    BLOCK 7 [source_file: testcode]
                                        EXPR_RESULT 8 [source_file: testcode]
                                            ASSIGN 8 [source_file: testcode]
                                                NAME action 8 [source_file: testcode]
                                                NAME proto 8 [source_file: testcode]
                        EXPR_RESULT 12 [source_file: testcode]
                            CALL 12 [free_call: 1] [source_file: testcode]
                                NAME alert 12 [source_file: testcode]
                                NAME action 12 [source_file: testcode]


Subtree1: BLOCK 7 [source_file: expected0]
    EXPR_RESULT 8 [source_file: expected0]
        ASSIGN 8 [source_file: expected0]
            NAME action 8 [source_file: expected0]
            NAME proto 8 [source_file: expected0]
    BREAK 9 [source_file: expected0]
        LABEL_NAME a 9 [source_file: expected0]


Subtree2: BLOCK 7 [source_file: testcode]
    EXPR_RESULT 8 [source_file: testcode]
        ASSIGN 8 [source_file: testcode]
            NAME action 8 [source_file: testcode]
            NAME proto 8 [source_file: testcode]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:928)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:460)

junit.framework.AssertionFailedError: 
Expected: function f(){b:try{throw 9;}finally{break b}return 1}
Result: function f(){b:try{throw 9;}finally{}return 1}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION f 1 [source_file: expected0]
            NAME f 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                LABEL 1 [source_file: expected0]
                    LABEL_NAME b 1 [source_file: expected0]
                    TRY 1 [source_file: expected0]
                        BLOCK 1 [source_file: expected0]
                            THROW 1 [source_file: expected0]
                                NUMBER 9.0 1 [source_file: expected0]
                        BLOCK 1 [source_file: expected0]
                        BLOCK 1 [source_file: expected0]
                            BREAK 1 [source_file: expected0]
                                LABEL_NAME b 1 [source_file: expected0]
                RETURN 1 [source_file: expected0]
                    NUMBER 1.0 1 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION f 1 [source_file: testcode]
            NAME f 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                LABEL 1 [source_file: testcode]
                    LABEL_NAME b 1 [source_file: testcode]
                    TRY 1 [source_file: testcode]
                        BLOCK 1 [source_file: testcode]
                            THROW 1 [source_file: testcode]
                                NUMBER 9.0 1 [source_file: testcode]
                        BLOCK 1 [source_file: testcode]
                        BLOCK 1 [source_file: testcode]
                RETURN 1 [source_file: testcode]
                    NUMBER 1.0 1 [source_file: testcode]


Subtree1: BLOCK 1 [source_file: expected0]
    BREAK 1 [source_file: expected0]
        LABEL_NAME b 1 [source_file: expected0]


Subtree2: BLOCK 1 [source_file: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:928)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:460)
19:30:08.384 [pool-36-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (7 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testDontRemoveBreakInTryFinally(com.google.javascript.jscomp.UnreachableCodeEliminationTest)
[
Expected: function f(){b:try{throw 9;}finally{break b}return 1}
Result: function f(){b:try{throw 9;}finally{}return 1}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION f 1 [source_file: expected0]
            NAME f 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                LABEL 1 [source_file: expected0]
                    LABEL_NAME b 1 [source_file: expected0]
                    TRY 1 [source_file: expected0]
                        BLOCK 1 [source_file: expected0]
                            THROW 1 [source_file: expected0]
                                NUMBER 9.0 1 [source_file: expected0]
                        BLOCK 1 [source_file: expected0]
                        BLOCK 1 [source_file: expected0]
                            BREAK 1 [source_file: expected0]
                                LABEL_NAME b 1 [source_file: expected0]
                RETURN 1 [source_file: expected0]
                    NUMBER 1.0 1 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION f 1 [source_file: testcode]
            NAME f 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                LABEL 1 [source_file: testcode]
                    LABEL_NAME b 1 [source_file: testcode]
                    TRY 1 [source_file: testcode]
                        BLOCK 1 [source_file: testcode]
                            THROW 1 [source_file: testcode]
                                NUMBER 9.0 1 [source_file: testcode]
                        BLOCK 1 [source_file: testcode]
                        BLOCK 1 [source_file: testcode]
                RETURN 1 [source_file: testcode]
                    NUMBER 1.0 1 [source_file: testcode]


Subtree1: BLOCK 1 [source_file: expected0]
    BREAK 1 [source_file: expected0]
        LABEL_NAME b 1 [source_file: expected0]


Subtree2: BLOCK 1 [source_file: testcode]
]
junit.framework.AssertionFailedError: 
Expected: function f(){b:try{throw 9;}finally{break b}return 1}
Result: function f(){b:try{throw 9;}finally{}return 1}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION f 1 [source_file: expected0]
            NAME f 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                LABEL 1 [source_file: expected0]
                    LABEL_NAME b 1 [source_file: expected0]
                    TRY 1 [source_file: expected0]
                        BLOCK 1 [source_file: expected0]
                            THROW 1 [source_file: expected0]
                                NUMBER 9.0 1 [source_file: expected0]
                        BLOCK 1 [source_file: expected0]
                        BLOCK 1 [source_file: expected0]
                            BREAK 1 [source_file: expected0]
                                LABEL_NAME b 1 [source_file: expected0]
                RETURN 1 [source_file: expected0]
                    NUMBER 1.0 1 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION f 1 [source_file: testcode]
            NAME f 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                LABEL 1 [source_file: testcode]
                    LABEL_NAME b 1 [source_file: testcode]
                    TRY 1 [source_file: testcode]
                        BLOCK 1 [source_file: testcode]
                            THROW 1 [source_file: testcode]
                                NUMBER 9.0 1 [source_file: testcode]
                        BLOCK 1 [source_file: testcode]
                        BLOCK 1 [source_file: testcode]
                RETURN 1 [source_file: testcode]
                    NUMBER 1.0 1 [source_file: testcode]


Subtree1: BLOCK 1 [source_file: expected0]
    BREAK 1 [source_file: expected0]
        LABEL_NAME b 1 [source_file: expected0]


Subtree2: BLOCK 1 [source_file: testcode]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:928)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:460)

junit.framework.AssertionFailedError: 
Expected: var JSCompiler_stubMap=[];function JSCompiler_stubMethod(JSCompiler_stubMethod_id){return function(){return JSCompiler_stubMap[JSCompiler_stubMethod_id].apply(this,arguments)}}function JSCompiler_unstubMethod(JSCompiler_unstubMethod_id,JSCompiler_unstubMethod_body){return JSCompiler_stubMap[JSCompiler_unstubMethod_id]=JSCompiler_unstubMethod_body}function Foo(){}Foo.prototype.baz=JSCompiler_stubMethod(1);Foo.prototype.callBaz=JSCompiler_stubMethod(0);Foo.prototype.baz=JSCompiler_unstubMethod(1,function(){});
Foo.prototype.callBaz=JSCompiler_unstubMethod(0,function(){this.baz()});(new Foo).callBaz()
Result: var JSCompiler_stubMap=[];function JSCompiler_stubMethod(JSCompiler_stubMethod_id){return function(){return JSCompiler_stubMap[JSCompiler_stubMethod_id].apply(this,arguments)}}function JSCompiler_unstubMethod(JSCompiler_unstubMethod_id,JSCompiler_unstubMethod_body){return JSCompiler_stubMap[JSCompiler_unstubMethod_id]=JSCompiler_unstubMethod_body}function Foo(){}Foo.prototype.baz=JSCompiler_stubMethod(0);Foo.prototype.callBaz=JSCompiler_stubMethod(1);
Foo.prototype.callBaz=JSCompiler_unstubMethod(1,function(){this.baz()});Foo.prototype.baz=JSCompiler_unstubMethod(0,function(){});(new Foo).callBaz()
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        VAR 1 [source_file: expected0]
            NAME JSCompiler_stubMap 1 [source_file: expected0]
                ARRAYLIT 1 [source_file: expected0]
        FUNCTION JSCompiler_stubMethod 1 [source_file: expected0]
            NAME JSCompiler_stubMethod 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
                NAME JSCompiler_stubMethod_id 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                RETURN 1 [source_file: expected0]
                    FUNCTION  1 [source_file: expected0]
                        NAME  1 [source_file: expected0]
                        PARAM_LIST 1 [source_file: expected0]
                        BLOCK 1 [source_file: expected0]
                            RETURN 1 [source_file: expected0]
                                CALL 1 [source_file: expected0]
                                    GETPROP 1 [source_file: expected0]
                                        GETELEM 1 [source_file: expected0]
                                            NAME JSCompiler_stubMap 1 [source_file: expected0]
                                            NAME JSCompiler_stubMethod_id 1 [source_file: expected0]
                                        STRING apply 1 [source_file: expected0]
                                    THIS 1 [source_file: expected0]
                                    NAME arguments 1 [source_file: expected0]
        FUNCTION JSCompiler_unstubMethod 1 [source_file: expected0]
            NAME JSCompiler_unstubMethod 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
                NAME JSCompiler_unstubMethod_id 1 [source_file: expected0]
                NAME JSCompiler_unstubMethod_body 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                RETURN 1 [source_file: expected0]
                    ASSIGN 1 [source_file: expected0]
                        GETELEM 1 [source_file: expected0]
                            NAME JSCompiler_stubMap 1 [source_file: expected0]
                            NAME JSCompiler_unstubMethod_id 1 [source_file: expected0]
                        NAME JSCompiler_unstubMethod_body 1 [source_file: expected0]
        FUNCTION Foo 1 [source_file: expected0]
            NAME Foo 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            ASSIGN 1 [source_file: expected0]
                GETPROP 1 [source_file: expected0]
                    GETPROP 1 [source_file: expected0]
                        NAME Foo 1 [source_file: expected0]
                        STRING prototype 1 [source_file: expected0]
                    STRING baz 1 [source_file: expected0]
                CALL 1 [free_call: 1] [source_file: expected0]
                    NAME JSCompiler_stubMethod 1 [source_file: expected0]
                    NUMBER 1.0 1 [source_file: expected0]
    SCRIPT 1 [synthetic: 1] [source_file: expected1] [input_id: InputId: expected1]
        EXPR_RESULT 1 [source_file: expected1]
            ASSIGN 1 [source_file: expected1]
                GETPROP 1 [source_file: expected1]
                    GETPROP 1 [source_file: expected1]
                        NAME Foo 1 [source_file: expected1]
                        STRING prototype 1 [source_file: expected1]
                    STRING callBaz 1 [source_file: expected1]
                CALL 1 [free_call: 1] [source_file: expected1]
                    NAME JSCompiler_stubMethod 1 [source_file: expected1]
                    NUMBER 0.0 1 [source_file: expected1]
    SCRIPT 1 [synthetic: 1] [source_file: expected2] [input_id: InputId: expected2]
        EXPR_RESULT 1 [source_file: expected2]
            ASSIGN 1 [source_file: expected2]
                GETPROP 1 [source_file: expected2]
                    GETPROP 1 [source_file: expected2]
                        NAME Foo 1 [source_file: expected2]
                        STRING prototype 1 [source_file: expected2]
                    STRING baz 1 [source_file: expected2]
                CALL 1 [free_call: 1] [source_file: expected2]
                    NAME JSCompiler_unstubMethod 1 [source_file: expected2]
                    NUMBER 1.0 1 [source_file: expected2]
                    FUNCTION  1 [source_file: expected2]
                        NAME  1 [source_file: expected2]
                        PARAM_LIST 1 [source_file: expected2]
                        BLOCK 1 [source_file: expected2]
        EXPR_RESULT 1 [source_file: expected2]
            ASSIGN 1 [source_file: expected2]
                GETPROP 1 [source_file: expected2]
                    GETPROP 1 [source_file: expected2]
                        NAME Foo 1 [source_file: expected2]
                        STRING prototype 1 [source_file: expected2]
                    STRING callBaz 1 [source_file: expected2]
                CALL 1 [free_call: 1] [source_file: expected2]
                    NAME JSCompiler_unstubMethod 1 [source_file: expected2]
                    NUMBER 0.0 1 [source_file: expected2]
                    FUNCTION  1 [source_file: expected2]
                        NAME  1 [source_file: expected2]
                        PARAM_LIST 1 [source_file: expected2]
                        BLOCK 1 [source_file: expected2]
                            EXPR_RESULT 1 [source_file: expected2]
                                CALL 1 [source_file: expected2]
                                    GETPROP 1 [source_file: expected2]
                                        THIS 1 [source_file: expected2]
                                        STRING baz 1 [source_file: expected2]
        EXPR_RESULT 1 [source_file: expected2]
            CALL 1 [source_file: expected2]
                GETPROP 1 [source_file: expected2]
                    NEW 1 [source_file: expected2]
                        NAME Foo 1 [source_file: expected2]
                    STRING callBaz 1 [source_file: expected2]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: i0] [input_id: InputId: i0]
        VAR 1 [source_file:  [synthetic:1] ]
            NAME JSCompiler_stubMap 1 [source_file:  [synthetic:1] ]
                ARRAYLIT 1 [source_file:  [synthetic:1] ]
        FUNCTION JSCompiler_stubMethod 1 [source_file:  [synthetic:1] ]
            NAME JSCompiler_stubMethod 1 [source_file:  [synthetic:1] ]
            PARAM_LIST 1 [source_file:  [synthetic:1] ]
                NAME JSCompiler_stubMethod_id 1 [source_file:  [synthetic:1] ]
            BLOCK 1 [source_file:  [synthetic:1] ]
                RETURN 1 [source_file:  [synthetic:1] ]
                    FUNCTION  1 [source_file:  [synthetic:1] ]
                        NAME  1 [source_file:  [synthetic:1] ]
                        PARAM_LIST 1 [source_file:  [synthetic:1] ]
                        BLOCK 1 [source_file:  [synthetic:1] ]
                            RETURN 1 [source_file:  [synthetic:1] ]
                                CALL 1 [source_file:  [synthetic:1] ]
                                    GETPROP 1 [source_file:  [synthetic:1] ]
                                        GETELEM 1 [source_file:  [synthetic:1] ]
                                            NAME JSCompiler_stubMap 1 [source_file:  [synthetic:1] ]
                                            NAME JSCompiler_stubMethod_id 1 [source_file:  [synthetic:1] ]
                                        STRING apply 1 [source_file:  [synthetic:1] ]
                                    THIS 1 [source_file:  [synthetic:1] ]
                                    NAME arguments 1 [source_file:  [synthetic:1] ]
        FUNCTION JSCompiler_unstubMethod 1 [source_file:  [synthetic:1] ]
            NAME JSCompiler_unstubMethod 1 [source_file:  [synthetic:1] ]
            PARAM_LIST 1 [source_file:  [synthetic:1] ]
                NAME JSCompiler_unstubMethod_id 1 [source_file:  [synthetic:1] ]
                NAME JSCompiler_unstubMethod_body 1 [source_file:  [synthetic:1] ]
            BLOCK 1 [source_file:  [synthetic:1] ]
                RETURN 1 [source_file:  [synthetic:1] ]
                    ASSIGN 1 [source_file:  [synthetic:1] ]
                        GETELEM 1 [source_file:  [synthetic:1] ]
                            NAME JSCompiler_stubMap 1 [source_file:  [synthetic:1] ]
                            NAME JSCompiler_unstubMethod_id 1 [source_file:  [synthetic:1] ]
                        NAME JSCompiler_unstubMethod_body 1 [source_file:  [synthetic:1] ]
        FUNCTION Foo 1 [source_file: i0]
            NAME Foo 1 [source_file: i0]
            PARAM_LIST 1 [source_file: i0]
            BLOCK 1 [source_file: i0]
        EXPR_RESULT 1 [source_file: i0]
            ASSIGN 1 [source_file: i0]
                GETPROP 1 [source_file: i0]
                    GETPROP 1 [source_file: i0]
                        NAME Foo 1 [source_file: i0]
                        STRING prototype 1 [source_file: i0]
                    STRING baz 1 [source_file: i0]
                CALL 1 [free_call: 1] [source_file: i0]
                    NAME JSCompiler_stubMethod 1 [source_file: i0]
                    NUMBER 0.0 1 [source_file: i0]
    SCRIPT 1 [synthetic: 1] [source_file: i1] [input_id: InputId: i1]
        EXPR_RESULT 1 [source_file: i1]
            ASSIGN 1 [source_file: i1]
                GETPROP 1 [source_file: i1]
                    GETPROP 1 [source_file: i1]
                        NAME Foo 1 [source_file: i1]
                        STRING prototype 1 [source_file: i1]
                    STRING callBaz 1 [source_file: i1]
                CALL 1 [free_call: 1] [source_file: i1]
                    NAME JSCompiler_stubMethod 1 [source_file: i1]
                    NUMBER 1.0 1 [source_file: i1]
    SCRIPT 1 [synthetic: 1] [source_file: i2] [input_id: InputId: i2]
        EXPR_RESULT 1 [source_file: i1]
            ASSIGN 1 [source_file: i1]
                GETPROP 1 [source_file: i1]
                    GETPROP 1 [source_file: i1]
                        NAME Foo 1 [source_file: i1]
                        STRING prototype 1 [source_file: i1]
                    STRING callBaz 1 [source_file: i1]
                CALL 1 [free_call: 1] [source_file: i1]
                    NAME JSCompiler_unstubMethod 1 [source_file: i1]
                    NUMBER 1.0 1 [source_file: i1]
                    FUNCTION  1 [source_file: i1]
                        NAME  1 [source_file: i1]
                        PARAM_LIST 1 [source_file: i1]
                        BLOCK 1 [source_file: i1]
                            EXPR_RESULT 1 [source_file: i1]
                                CALL 1 [source_file: i1]
                                    GETPROP 1 [source_file: i1]
                                        THIS 1 [source_file: i1]
                                        STRING baz 1 [source_file: i1]
        EXPR_RESULT 1 [source_file: i0]
            ASSIGN 1 [source_file: i0]
                GETPROP 1 [source_file: i0]
                    GETPROP 1 [source_file: i0]
                        NAME Foo 1 [source_file: i0]
                        STRING prototype 1 [source_file: i0]
                    STRING baz 1 [source_file: i0]
                CALL 1 [free_call: 1] [source_file: i0]
                    NAME JSCompiler_unstubMethod 1 [source_file: i0]
                    NUMBER 0.0 1 [source_file: i0]
                    FUNCTION  1 [source_file: i0]
                        NAME  1 [source_file: i0]
                        PARAM_LIST 1 [source_file: i0]
                        BLOCK 1 [source_file: i0]
        EXPR_RESULT 1 [source_file: i2]
            CALL 1 [source_file: i2]
                GETPROP 1 [source_file: i2]
                    NEW 1 [source_file: i2]
                        NAME Foo 1 [source_file: i2]
                    STRING callBaz 1 [source_file: i2]


Subtree1: NUMBER 1.0 1 [source_file: expected0]


Subtree2: NUMBER 0.0 1 [source_file: i0]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:928)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:736)
19:30:08.399 [pool-37-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (12 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testTwoMethods(com.google.javascript.jscomp.CrossModuleMethodMotionTest)
[
Expected: var JSCompiler_stubMap=[];function JSCompiler_stubMethod(JSCompiler_stubMethod_id){return function(){return JSCompiler_stubMap[JSCompiler_stubMethod_id].apply(this,arguments)}}function JSCompiler_unstubMethod(JSCompiler_unstubMethod_id,JSCompiler_unstubMethod_body){return JSCompiler_stubMap[JSCompiler_unstubMethod_id]=JSCompiler_unstubMethod_body}function Foo(){}Foo.prototype.baz=JSCompiler_stubMethod(1);Foo.prototype.callBaz=JSCompiler_stubMethod(0);Foo.prototype.baz=JSCompiler_unstubMethod(1,function(){});
Foo.prototype.callBaz=JSCompiler_unstubMethod(0,function(){this.baz()});(new Foo).callBaz()
Result: var JSCompiler_stubMap=[];function JSCompiler_stubMethod(JSCompiler_stubMethod_id){return function(){return JSCompiler_stubMap[JSCompiler_stubMethod_id].apply(this,arguments)}}function JSCompiler_unstubMethod(JSCompiler_unstubMethod_id,JSCompiler_unstubMethod_body){return JSCompiler_stubMap[JSCompiler_unstubMethod_id]=JSCompiler_unstubMethod_body}function Foo(){}Foo.prototype.baz=JSCompiler_stubMethod(0);Foo.prototype.callBaz=JSCompiler_stubMethod(1);
Foo.prototype.callBaz=JSCompiler_unstubMethod(1,function(){this.baz()});Foo.prototype.baz=JSCompiler_unstubMethod(0,function(){});(new Foo).callBaz()
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        VAR 1 [source_file: expected0]
            NAME JSCompiler_stubMap 1 [source_file: expected0]
                ARRAYLIT 1 [source_file: expected0]
        FUNCTION JSCompiler_stubMethod 1 [source_file: expected0]
            NAME JSCompiler_stubMethod 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
                NAME JSCompiler_stubMethod_id 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                RETURN 1 [source_file: expected0]
                    FUNCTION  1 [source_file: expected0]
                        NAME  1 [source_file: expected0]
                        PARAM_LIST 1 [source_file: expected0]
                        BLOCK 1 [source_file: expected0]
                            RETURN 1 [source_file: expected0]
                                CALL 1 [source_file: expected0]
                                    GETPROP 1 [source_file: expected0]
                                        GETELEM 1 [source_file: expected0]
                                            NAME JSCompiler_stubMap 1 [source_file: expected0]
                                            NAME JSCompiler_stubMethod_id 1 [source_file: expected0]
                                        STRING apply 1 [source_file: expected0]
                                    THIS 1 [source_file: expected0]
                                    NAME arguments 1 [source_file: expected0]
        FUNCTION JSCompiler_unstubMethod 1 [source_file: expected0]
            NAME JSCompiler_unstubMethod 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
                NAME JSCompiler_unstubMethod_id 1 [source_file: expected0]
                NAME JSCompiler_unstubMethod_body 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                RETURN 1 [source_file: expected0]
                    ASSIGN 1 [source_file: expected0]
                        GETELEM 1 [source_file: expected0]
                            NAME JSCompiler_stubMap 1 [source_file: expected0]
                            NAME JSCompiler_unstubMethod_id 1 [source_file: expected0]
                        NAME JSCompiler_unstubMethod_body 1 [source_file: expected0]
        FUNCTION Foo 1 [source_file: expected0]
            NAME Foo 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            ASSIGN 1 [source_file: expected0]
                GETPROP 1 [source_file: expected0]
                    GETPROP 1 [source_file: expected0]
                        NAME Foo 1 [source_file: expected0]
                        STRING prototype 1 [source_file: expected0]
                    STRING baz 1 [source_file: expected0]
                CALL 1 [free_call: 1] [source_file: expected0]
                    NAME JSCompiler_stubMethod 1 [source_file: expected0]
                    NUMBER 1.0 1 [source_file: expected0]
    SCRIPT 1 [synthetic: 1] [source_file: expected1] [input_id: InputId: expected1]
        EXPR_RESULT 1 [source_file: expected1]
            ASSIGN 1 [source_file: expected1]
                GETPROP 1 [source_file: expected1]
                    GETPROP 1 [source_file: expected1]
                        NAME Foo 1 [source_file: expected1]
                        STRING prototype 1 [source_file: expected1]
                    STRING callBaz 1 [source_file: expected1]
                CALL 1 [free_call: 1] [source_file: expected1]
                    NAME JSCompiler_stubMethod 1 [source_file: expected1]
                    NUMBER 0.0 1 [source_file: expected1]
    SCRIPT 1 [synthetic: 1] [source_file: expected2] [input_id: InputId: expected2]
        EXPR_RESULT 1 [source_file: expected2]
            ASSIGN 1 [source_file: expected2]
                GETPROP 1 [source_file: expected2]
                    GETPROP 1 [source_file: expected2]
                        NAME Foo 1 [source_file: expected2]
                        STRING prototype 1 [source_file: expected2]
                    STRING baz 1 [source_file: expected2]
                CALL 1 [free_call: 1] [source_file: expected2]
                    NAME JSCompiler_unstubMethod 1 [source_file: expected2]
                    NUMBER 1.0 1 [source_file: expected2]
                    FUNCTION  1 [source_file: expected2]
                        NAME  1 [source_file: expected2]
                        PARAM_LIST 1 [source_file: expected2]
                        BLOCK 1 [source_file: expected2]
        EXPR_RESULT 1 [source_file: expected2]
            ASSIGN 1 [source_file: expected2]
                GETPROP 1 [source_file: expected2]
                    GETPROP 1 [source_file: expected2]
                        NAME Foo 1 [source_file: expected2]
                        STRING prototype 1 [source_file: expected2]
                    STRING callBaz 1 [source_file: expected2]
                CALL 1 [free_call: 1] [source_file: expected2]
                    NAME JSCompiler_unstubMethod 1 [source_file: expected2]
                    NUMBER 0.0 1 [source_file: expected2]
                    FUNCTION  1 [source_file: expected2]
                        NAME  1 [source_file: expected2]
                        PARAM_LIST 1 [source_file: expected2]
                        BLOCK 1 [source_file: expected2]
                            EXPR_RESULT 1 [source_file: expected2]
                                CALL 1 [source_file: expected2]
                                    GETPROP 1 [source_file: expected2]
                                        THIS 1 [source_file: expected2]
                                        STRING baz 1 [source_file: expected2]
        EXPR_RESULT 1 [source_file: expected2]
            CALL 1 [source_file: expected2]
                GETPROP 1 [source_file: expected2]
                    NEW 1 [source_file: expected2]
                        NAME Foo 1 [source_file: expected2]
                    STRING callBaz 1 [source_file: expected2]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: i0] [input_id: InputId: i0]
        VAR 1 [source_file:  [synthetic:1] ]
            NAME JSCompiler_stubMap 1 [source_file:  [synthetic:1] ]
                ARRAYLIT 1 [source_file:  [synthetic:1] ]
        FUNCTION JSCompiler_stubMethod 1 [source_file:  [synthetic:1] ]
            NAME JSCompiler_stubMethod 1 [source_file:  [synthetic:1] ]
            PARAM_LIST 1 [source_file:  [synthetic:1] ]
                NAME JSCompiler_stubMethod_id 1 [source_file:  [synthetic:1] ]
            BLOCK 1 [source_file:  [synthetic:1] ]
                RETURN 1 [source_file:  [synthetic:1] ]
                    FUNCTION  1 [source_file:  [synthetic:1] ]
                        NAME  1 [source_file:  [synthetic:1] ]
                        PARAM_LIST 1 [source_file:  [synthetic:1] ]
                        BLOCK 1 [source_file:  [synthetic:1] ]
                            RETURN 1 [source_file:  [synthetic:1] ]
                                CALL 1 [source_file:  [synthetic:1] ]
                                    GETPROP 1 [source_file:  [synthetic:1] ]
                                        GETELEM 1 [source_file:  [synthetic:1] ]
                                            NAME JSCompiler_stubMap 1 [source_file:  [synthetic:1] ]
                                            NAME JSCompiler_stubMethod_id 1 [source_file:  [synthetic:1] ]
                                        STRING apply 1 [source_file:  [synthetic:1] ]
                                    THIS 1 [source_file:  [synthetic:1] ]
                                    NAME arguments 1 [source_file:  [synthetic:1] ]
        FUNCTION JSCompiler_unstubMethod 1 [source_file:  [synthetic:1] ]
            NAME JSCompiler_unstubMethod 1 [source_file:  [synthetic:1] ]
            PARAM_LIST 1 [source_file:  [synthetic:1] ]
                NAME JSCompiler_unstubMethod_id 1 [source_file:  [synthetic:1] ]
                NAME JSCompiler_unstubMethod_body 1 [source_file:  [synthetic:1] ]
            BLOCK 1 [source_file:  [synthetic:1] ]
                RETURN 1 [source_file:  [synthetic:1] ]
                    ASSIGN 1 [source_file:  [synthetic:1] ]
                        GETELEM 1 [source_file:  [synthetic:1] ]
                            NAME JSCompiler_stubMap 1 [source_file:  [synthetic:1] ]
                            NAME JSCompiler_unstubMethod_id 1 [source_file:  [synthetic:1] ]
                        NAME JSCompiler_unstubMethod_body 1 [source_file:  [synthetic:1] ]
        FUNCTION Foo 1 [source_file: i0]
            NAME Foo 1 [source_file: i0]
            PARAM_LIST 1 [source_file: i0]
            BLOCK 1 [source_file: i0]
        EXPR_RESULT 1 [source_file: i0]
            ASSIGN 1 [source_file: i0]
                GETPROP 1 [source_file: i0]
                    GETPROP 1 [source_file: i0]
                        NAME Foo 1 [source_file: i0]
                        STRING prototype 1 [source_file: i0]
                    STRING baz 1 [source_file: i0]
                CALL 1 [free_call: 1] [source_file: i0]
                    NAME JSCompiler_stubMethod 1 [source_file: i0]
                    NUMBER 0.0 1 [source_file: i0]
    SCRIPT 1 [synthetic: 1] [source_file: i1] [input_id: InputId: i1]
        EXPR_RESULT 1 [source_file: i1]
            ASSIGN 1 [source_file: i1]
                GETPROP 1 [source_file: i1]
                    GETPROP 1 [source_file: i1]
                        NAME Foo 1 [source_file: i1]
                        STRING prototype 1 [source_file: i1]
                    STRING callBaz 1 [source_file: i1]
                CALL 1 [free_call: 1] [source_file: i1]
                    NAME JSCompiler_stubMethod 1 [source_file: i1]
                    NUMBER 1.0 1 [source_file: i1]
    SCRIPT 1 [synthetic: 1] [source_file: i2] [input_id: InputId: i2]
        EXPR_RESULT 1 [source_file: i1]
            ASSIGN 1 [source_file: i1]
                GETPROP 1 [source_file: i1]
                    GETPROP 1 [source_file: i1]
                        NAME Foo 1 [source_file: i1]
                        STRING prototype 1 [source_file: i1]
                    STRING callBaz 1 [source_file: i1]
                CALL 1 [free_call: 1] [source_file: i1]
                    NAME JSCompiler_unstubMethod 1 [source_file: i1]
                    NUMBER 1.0 1 [source_file: i1]
                    FUNCTION  1 [source_file: i1]
                        NAME  1 [source_file: i1]
                        PARAM_LIST 1 [source_file: i1]
                        BLOCK 1 [source_file: i1]
                            EXPR_RESULT 1 [source_file: i1]
                                CALL 1 [source_file: i1]
                                    GETPROP 1 [source_file: i1]
                                        THIS 1 [source_file: i1]
                                        STRING baz 1 [source_file: i1]
        EXPR_RESULT 1 [source_file: i0]
            ASSIGN 1 [source_file: i0]
                GETPROP 1 [source_file: i0]
                    GETPROP 1 [source_file: i0]
                        NAME Foo 1 [source_file: i0]
                        STRING prototype 1 [source_file: i0]
                    STRING baz 1 [source_file: i0]
                CALL 1 [free_call: 1] [source_file: i0]
                    NAME JSCompiler_unstubMethod 1 [source_file: i0]
                    NUMBER 0.0 1 [source_file: i0]
                    FUNCTION  1 [source_file: i0]
                        NAME  1 [source_file: i0]
                        PARAM_LIST 1 [source_file: i0]
                        BLOCK 1 [source_file: i0]
        EXPR_RESULT 1 [source_file: i2]
            CALL 1 [source_file: i2]
                GETPROP 1 [source_file: i2]
                    NEW 1 [source_file: i2]
                        NAME Foo 1 [source_file: i2]
                    STRING callBaz 1 [source_file: i2]


Subtree1: NUMBER 1.0 1 [source_file: expected0]


Subtree2: NUMBER 0.0 1 [source_file: i0]
]
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_stubMap=[];function JSCompiler_stubMethod(JSCompiler_stubMethod_id){return function(){return JSCompiler_stubMap[JSCompiler_stubMethod_id].apply(this,arguments)}}function JSCompiler_unstubMethod(JSCompiler_unstubMethod_id,JSCompiler_unstubMethod_body){return JSCompiler_stubMap[JSCompiler_unstubMethod_id]=JSCompiler_unstubMethod_body}function Foo(){}Foo.prototype.baz=JSCompiler_stubMethod(1);Foo.prototype.callBaz=JSCompiler_stubMethod(0);Foo.prototype.baz=JSCompiler_unstubMethod(1,function(){});
Foo.prototype.callBaz=JSCompiler_unstubMethod(0,function(){this.baz()});(new Foo).callBaz()
Result: var JSCompiler_stubMap=[];function JSCompiler_stubMethod(JSCompiler_stubMethod_id){return function(){return JSCompiler_stubMap[JSCompiler_stubMethod_id].apply(this,arguments)}}function JSCompiler_unstubMethod(JSCompiler_unstubMethod_id,JSCompiler_unstubMethod_body){return JSCompiler_stubMap[JSCompiler_unstubMethod_id]=JSCompiler_unstubMethod_body}function Foo(){}Foo.prototype.baz=JSCompiler_stubMethod(0);Foo.prototype.callBaz=JSCompiler_stubMethod(1);
Foo.prototype.callBaz=JSCompiler_unstubMethod(1,function(){this.baz()});Foo.prototype.baz=JSCompiler_unstubMethod(0,function(){});(new Foo).callBaz()
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        VAR 1 [source_file: expected0]
            NAME JSCompiler_stubMap 1 [source_file: expected0]
                ARRAYLIT 1 [source_file: expected0]
        FUNCTION JSCompiler_stubMethod 1 [source_file: expected0]
            NAME JSCompiler_stubMethod 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
                NAME JSCompiler_stubMethod_id 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                RETURN 1 [source_file: expected0]
                    FUNCTION  1 [source_file: expected0]
                        NAME  1 [source_file: expected0]
                        PARAM_LIST 1 [source_file: expected0]
                        BLOCK 1 [source_file: expected0]
                            RETURN 1 [source_file: expected0]
                                CALL 1 [source_file: expected0]
                                    GETPROP 1 [source_file: expected0]
                                        GETELEM 1 [source_file: expected0]
                                            NAME JSCompiler_stubMap 1 [source_file: expected0]
                                            NAME JSCompiler_stubMethod_id 1 [source_file: expected0]
                                        STRING apply 1 [source_file: expected0]
                                    THIS 1 [source_file: expected0]
                                    NAME arguments 1 [source_file: expected0]
        FUNCTION JSCompiler_unstubMethod 1 [source_file: expected0]
            NAME JSCompiler_unstubMethod 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
                NAME JSCompiler_unstubMethod_id 1 [source_file: expected0]
                NAME JSCompiler_unstubMethod_body 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                RETURN 1 [source_file: expected0]
                    ASSIGN 1 [source_file: expected0]
                        GETELEM 1 [source_file: expected0]
                            NAME JSCompiler_stubMap 1 [source_file: expected0]
                            NAME JSCompiler_unstubMethod_id 1 [source_file: expected0]
                        NAME JSCompiler_unstubMethod_body 1 [source_file: expected0]
        FUNCTION Foo 1 [source_file: expected0]
            NAME Foo 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            ASSIGN 1 [source_file: expected0]
                GETPROP 1 [source_file: expected0]
                    GETPROP 1 [source_file: expected0]
                        NAME Foo 1 [source_file: expected0]
                        STRING prototype 1 [source_file: expected0]
                    STRING baz 1 [source_file: expected0]
                CALL 1 [free_call: 1] [source_file: expected0]
                    NAME JSCompiler_stubMethod 1 [source_file: expected0]
                    NUMBER 1.0 1 [source_file: expected0]
    SCRIPT 1 [synthetic: 1] [source_file: expected1] [input_id: InputId: expected1]
        EXPR_RESULT 1 [source_file: expected1]
            ASSIGN 1 [source_file: expected1]
                GETPROP 1 [source_file: expected1]
                    GETPROP 1 [source_file: expected1]
                        NAME Foo 1 [source_file: expected1]
                        STRING prototype 1 [source_file: expected1]
                    STRING callBaz 1 [source_file: expected1]
                CALL 1 [free_call: 1] [source_file: expected1]
                    NAME JSCompiler_stubMethod 1 [source_file: expected1]
                    NUMBER 0.0 1 [source_file: expected1]
    SCRIPT 1 [synthetic: 1] [source_file: expected2] [input_id: InputId: expected2]
        EXPR_RESULT 1 [source_file: expected2]
            ASSIGN 1 [source_file: expected2]
                GETPROP 1 [source_file: expected2]
                    GETPROP 1 [source_file: expected2]
                        NAME Foo 1 [source_file: expected2]
                        STRING prototype 1 [source_file: expected2]
                    STRING baz 1 [source_file: expected2]
                CALL 1 [free_call: 1] [source_file: expected2]
                    NAME JSCompiler_unstubMethod 1 [source_file: expected2]
                    NUMBER 1.0 1 [source_file: expected2]
                    FUNCTION  1 [source_file: expected2]
                        NAME  1 [source_file: expected2]
                        PARAM_LIST 1 [source_file: expected2]
                        BLOCK 1 [source_file: expected2]
        EXPR_RESULT 1 [source_file: expected2]
            ASSIGN 1 [source_file: expected2]
                GETPROP 1 [source_file: expected2]
                    GETPROP 1 [source_file: expected2]
                        NAME Foo 1 [source_file: expected2]
                        STRING prototype 1 [source_file: expected2]
                    STRING callBaz 1 [source_file: expected2]
                CALL 1 [free_call: 1] [source_file: expected2]
                    NAME JSCompiler_unstubMethod 1 [source_file: expected2]
                    NUMBER 0.0 1 [source_file: expected2]
                    FUNCTION  1 [source_file: expected2]
                        NAME  1 [source_file: expected2]
                        PARAM_LIST 1 [source_file: expected2]
                        BLOCK 1 [source_file: expected2]
                            EXPR_RESULT 1 [source_file: expected2]
                                CALL 1 [source_file: expected2]
                                    GETPROP 1 [source_file: expected2]
                                        THIS 1 [source_file: expected2]
                                        STRING baz 1 [source_file: expected2]
        EXPR_RESULT 1 [source_file: expected2]
            CALL 1 [source_file: expected2]
                GETPROP 1 [source_file: expected2]
                    NEW 1 [source_file: expected2]
                        NAME Foo 1 [source_file: expected2]
                    STRING callBaz 1 [source_file: expected2]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: i0] [input_id: InputId: i0]
        VAR 1 [source_file:  [synthetic:1] ]
            NAME JSCompiler_stubMap 1 [source_file:  [synthetic:1] ]
                ARRAYLIT 1 [source_file:  [synthetic:1] ]
        FUNCTION JSCompiler_stubMethod 1 [source_file:  [synthetic:1] ]
            NAME JSCompiler_stubMethod 1 [source_file:  [synthetic:1] ]
            PARAM_LIST 1 [source_file:  [synthetic:1] ]
                NAME JSCompiler_stubMethod_id 1 [source_file:  [synthetic:1] ]
            BLOCK 1 [source_file:  [synthetic:1] ]
                RETURN 1 [source_file:  [synthetic:1] ]
                    FUNCTION  1 [source_file:  [synthetic:1] ]
                        NAME  1 [source_file:  [synthetic:1] ]
                        PARAM_LIST 1 [source_file:  [synthetic:1] ]
                        BLOCK 1 [source_file:  [synthetic:1] ]
                            RETURN 1 [source_file:  [synthetic:1] ]
                                CALL 1 [source_file:  [synthetic:1] ]
                                    GETPROP 1 [source_file:  [synthetic:1] ]
                                        GETELEM 1 [source_file:  [synthetic:1] ]
                                            NAME JSCompiler_stubMap 1 [source_file:  [synthetic:1] ]
                                            NAME JSCompiler_stubMethod_id 1 [source_file:  [synthetic:1] ]
                                        STRING apply 1 [source_file:  [synthetic:1] ]
                                    THIS 1 [source_file:  [synthetic:1] ]
                                    NAME arguments 1 [source_file:  [synthetic:1] ]
        FUNCTION JSCompiler_unstubMethod 1 [source_file:  [synthetic:1] ]
            NAME JSCompiler_unstubMethod 1 [source_file:  [synthetic:1] ]
            PARAM_LIST 1 [source_file:  [synthetic:1] ]
                NAME JSCompiler_unstubMethod_id 1 [source_file:  [synthetic:1] ]
                NAME JSCompiler_unstubMethod_body 1 [source_file:  [synthetic:1] ]
            BLOCK 1 [source_file:  [synthetic:1] ]
                RETURN 1 [source_file:  [synthetic:1] ]
                    ASSIGN 1 [source_file:  [synthetic:1] ]
                        GETELEM 1 [source_file:  [synthetic:1] ]
                            NAME JSCompiler_stubMap 1 [source_file:  [synthetic:1] ]
                            NAME JSCompiler_unstubMethod_id 1 [source_file:  [synthetic:1] ]
                        NAME JSCompiler_unstubMethod_body 1 [source_file:  [synthetic:1] ]
        FUNCTION Foo 1 [source_file: i0]
            NAME Foo 1 [source_file: i0]
            PARAM_LIST 1 [source_file: i0]
            BLOCK 1 [source_file: i0]
        EXPR_RESULT 1 [source_file: i0]
            ASSIGN 1 [source_file: i0]
                GETPROP 1 [source_file: i0]
                    GETPROP 1 [source_file: i0]
                        NAME Foo 1 [source_file: i0]
                        STRING prototype 1 [source_file: i0]
                    STRING baz 1 [source_file: i0]
                CALL 1 [free_call: 1] [source_file: i0]
                    NAME JSCompiler_stubMethod 1 [source_file: i0]
                    NUMBER 0.0 1 [source_file: i0]
    SCRIPT 1 [synthetic: 1] [source_file: i1] [input_id: InputId: i1]
        EXPR_RESULT 1 [source_file: i1]
            ASSIGN 1 [source_file: i1]
                GETPROP 1 [source_file: i1]
                    GETPROP 1 [source_file: i1]
                        NAME Foo 1 [source_file: i1]
                        STRING prototype 1 [source_file: i1]
                    STRING callBaz 1 [source_file: i1]
                CALL 1 [free_call: 1] [source_file: i1]
                    NAME JSCompiler_stubMethod 1 [source_file: i1]
                    NUMBER 1.0 1 [source_file: i1]
    SCRIPT 1 [synthetic: 1] [source_file: i2] [input_id: InputId: i2]
        EXPR_RESULT 1 [source_file: i1]
            ASSIGN 1 [source_file: i1]
                GETPROP 1 [source_file: i1]
                    GETPROP 1 [source_file: i1]
                        NAME Foo 1 [source_file: i1]
                        STRING prototype 1 [source_file: i1]
                    STRING callBaz 1 [source_file: i1]
                CALL 1 [free_call: 1] [source_file: i1]
                    NAME JSCompiler_unstubMethod 1 [source_file: i1]
                    NUMBER 1.0 1 [source_file: i1]
                    FUNCTION  1 [source_file: i1]
                        NAME  1 [source_file: i1]
                        PARAM_LIST 1 [source_file: i1]
                        BLOCK 1 [source_file: i1]
                            EXPR_RESULT 1 [source_file: i1]
                                CALL 1 [source_file: i1]
                                    GETPROP 1 [source_file: i1]
                                        THIS 1 [source_file: i1]
                                        STRING baz 1 [source_file: i1]
        EXPR_RESULT 1 [source_file: i0]
            ASSIGN 1 [source_file: i0]
                GETPROP 1 [source_file: i0]
                    GETPROP 1 [source_file: i0]
                        NAME Foo 1 [source_file: i0]
                        STRING prototype 1 [source_file: i0]
                    STRING baz 1 [source_file: i0]
                CALL 1 [free_call: 1] [source_file: i0]
                    NAME JSCompiler_unstubMethod 1 [source_file: i0]
                    NUMBER 0.0 1 [source_file: i0]
                    FUNCTION  1 [source_file: i0]
                        NAME  1 [source_file: i0]
                        PARAM_LIST 1 [source_file: i0]
                        BLOCK 1 [source_file: i0]
        EXPR_RESULT 1 [source_file: i2]
            CALL 1 [source_file: i2]
                GETPROP 1 [source_file: i2]
                    NEW 1 [source_file: i2]
                        NAME Foo 1 [source_file: i2]
                    STRING callBaz 1 [source_file: i2]


Subtree1: NUMBER 1.0 1 [source_file: expected0]


Subtree2: NUMBER 0.0 1 [source_file: i0]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:928)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:736)

junit.framework.AssertionFailedError: 
Expected: var JSCompiler_stubMap=[];function JSCompiler_stubMethod(JSCompiler_stubMethod_id){return function(){return JSCompiler_stubMap[JSCompiler_stubMethod_id].apply(this,arguments)}}function JSCompiler_unstubMethod(JSCompiler_unstubMethod_id,JSCompiler_unstubMethod_body){return JSCompiler_stubMap[JSCompiler_unstubMethod_id]=JSCompiler_unstubMethod_body}function Foo(){}Foo.prototype.b1=JSCompiler_stubMethod(0);Foo.prototype.b1=JSCompiler_unstubMethod(0,function(){Foo.prototype.b2=JSCompiler_stubMethod(1)});
var y=new Foo;y.b1();Foo.prototype.b2=JSCompiler_unstubMethod(1,function(){var x=1;Foo.prototype.b3=function(){x}});y=new Foo;z.b2();y=new Foo;z.b3()
Result: var JSCompiler_stubMap=[];function JSCompiler_stubMethod(JSCompiler_stubMethod_id){return function(){return JSCompiler_stubMap[JSCompiler_stubMethod_id].apply(this,arguments)}}function JSCompiler_unstubMethod(JSCompiler_unstubMethod_id,JSCompiler_unstubMethod_body){return JSCompiler_stubMap[JSCompiler_unstubMethod_id]=JSCompiler_unstubMethod_body}function Foo(){}Foo.prototype.b1=JSCompiler_stubMethod(1);Foo.prototype.b1=JSCompiler_unstubMethod(1,function(){Foo.prototype.b2=JSCompiler_stubMethod(0)});
var y=new Foo;y.b1();Foo.prototype.b2=JSCompiler_unstubMethod(0,function(){var x=1;Foo.prototype.b3=function(){x}});y=new Foo;z.b2();y=new Foo;z.b3()
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        VAR 1 [source_file: expected0]
            NAME JSCompiler_stubMap 1 [source_file: expected0]
                ARRAYLIT 1 [source_file: expected0]
        FUNCTION JSCompiler_stubMethod 1 [source_file: expected0]
            NAME JSCompiler_stubMethod 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
                NAME JSCompiler_stubMethod_id 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                RETURN 1 [source_file: expected0]
                    FUNCTION  1 [source_file: expected0]
                        NAME  1 [source_file: expected0]
                        PARAM_LIST 1 [source_file: expected0]
                        BLOCK 1 [source_file: expected0]
                            RETURN 1 [source_file: expected0]
                                CALL 1 [source_file: expected0]
                                    GETPROP 1 [source_file: expected0]
                                        GETELEM 1 [source_file: expected0]
                                            NAME JSCompiler_stubMap 1 [source_file: expected0]
                                            NAME JSCompiler_stubMethod_id 1 [source_file: expected0]
                                        STRING apply 1 [source_file: expected0]
                                    THIS 1 [source_file: expected0]
                                    NAME arguments 1 [source_file: expected0]
        FUNCTION JSCompiler_unstubMethod 1 [source_file: expected0]
            NAME JSCompiler_unstubMethod 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
                NAME JSCompiler_unstubMethod_id 1 [source_file: expected0]
                NAME JSCompiler_unstubMethod_body 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                RETURN 1 [source_file: expected0]
                    ASSIGN 1 [source_file: expected0]
                        GETELEM 1 [source_file: expected0]
                            NAME JSCompiler_stubMap 1 [source_file: expected0]
                            NAME JSCompiler_unstubMethod_id 1 [source_file: expected0]
                        NAME JSCompiler_unstubMethod_body 1 [source_file: expected0]
        FUNCTION Foo 1 [source_file: expected0]
            NAME Foo 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            ASSIGN 1 [source_file: expected0]
                GETPROP 1 [source_file: expected0]
                    GETPROP 1 [source_file: expected0]
                        NAME Foo 1 [source_file: expected0]
                        STRING prototype 1 [source_file: expected0]
                    STRING b1 1 [source_file: expected0]
                CALL 1 [free_call: 1] [source_file: expected0]
                    NAME JSCompiler_stubMethod 1 [source_file: expected0]
                    NUMBER 0.0 1 [source_file: expected0]
    SCRIPT 1 [synthetic: 1] [source_file: expected1] [input_id: InputId: expected1]
        EXPR_RESULT 1 [source_file: expected1]
            ASSIGN 1 [source_file: expected1]
                GETPROP 1 [source_file: expected1]
                    GETPROP 1 [source_file: expected1]
                        NAME Foo 1 [source_file: expected1]
                        STRING prototype 1 [source_file: expected1]
                    STRING b1 1 [source_file: expected1]
                CALL 1 [free_call: 1] [source_file: expected1]
                    NAME JSCompiler_unstubMethod 1 [source_file: expected1]
                    NUMBER 0.0 1 [source_file: expected1]
                    FUNCTION  1 [source_file: expected1]
                        NAME  1 [source_file: expected1]
                        PARAM_LIST 1 [source_file: expected1]
                        BLOCK 1 [source_file: expected1]
                            EXPR_RESULT 1 [source_file: expected1]
                                ASSIGN 1 [source_file: expected1]
                                    GETPROP 1 [source_file: expected1]
                                        GETPROP 1 [source_file: expected1]
                                            NAME Foo 1 [source_file: expected1]
                                            STRING prototype 1 [source_file: expected1]
                                        STRING b2 1 [source_file: expected1]
                                    CALL 1 [free_call: 1] [source_file: expected1]
                                        NAME JSCompiler_stubMethod 1 [source_file: expected1]
                                        NUMBER 1.0 1 [source_file: expected1]
        VAR 1 [source_file: expected1]
            NAME y 1 [source_file: expected1]
                NEW 1 [source_file: expected1]
                    NAME Foo 1 [source_file: expected1]
        EXPR_RESULT 1 [source_file: expected1]
            CALL 1 [source_file: expected1]
                GETPROP 1 [source_file: expected1]
                    NAME y 1 [source_file: expected1]
                    STRING b1 1 [source_file: expected1]
    SCRIPT 1 [synthetic: 1] [source_file: expected2] [input_id: InputId: expected2]
        EXPR_RESULT 1 [source_file: expected2]
            ASSIGN 1 [source_file: expected2]
                GETPROP 1 [source_file: expected2]
                    GETPROP 1 [source_file: expected2]
                        NAME Foo 1 [source_file: expected2]
                        STRING prototype 1 [source_file: expected2]
                    STRING b2 1 [source_file: expected2]
                CALL 1 [free_call: 1] [source_file: expected2]
                    NAME JSCompiler_unstubMethod 1 [source_file: expected2]
                    NUMBER 1.0 1 [source_file: expected2]
                    FUNCTION  1 [source_file: expected2]
                        NAME  1 [source_file: expected2]
                        PARAM_LIST 1 [source_file: expected2]
                        BLOCK 1 [source_file: expected2]
                            VAR 1 [source_file: expected2]
                                NAME x 1 [source_file: expected2]
                                    NUMBER 1.0 1 [source_file: expected2]
                            EXPR_RESULT 1 [source_file: expected2]
                                ASSIGN 1 [source_file: expected2]
                                    GETPROP 1 [source_file: expected2]
                                        GETPROP 1 [source_file: expected2]
                                            NAME Foo 1 [source_file: expected2]
                                            STRING prototype 1 [source_file: expected2]
                                        STRING b3 1 [source_file: expected2]
                                    FUNCTION  1 [source_file: expected2]
                                        NAME  1 [source_file: expected2]
                                        PARAM_LIST 1 [source_file: expected2]
                                        BLOCK 1 [source_file: expected2]
                                            EXPR_RESULT 1 [source_file: expected2]
                                                NAME x 1 [source_file: expected2]
        EXPR_RESULT 1 [source_file: expected2]
            ASSIGN 1 [source_file: expected2]
                NAME y 1 [source_file: expected2]
                NEW 1 [source_file: expected2]
                    NAME Foo 1 [source_file: expected2]
        EXPR_RESULT 1 [source_file: expected2]
            CALL 1 [source_file: expected2]
                GETPROP 1 [source_file: expected2]
                    NAME z 1 [source_file: expected2]
                    STRING b2 1 [source_file: expected2]
    SCRIPT 1 [synthetic: 1] [source_file: expected3] [input_id: InputId: expected3]
        EXPR_RESULT 1 [source_file: expected3]
            ASSIGN 1 [source_file: expected3]
                NAME y 1 [source_file: expected3]
                NEW 1 [source_file: expected3]
                    NAME Foo 1 [source_file: expected3]
        EXPR_RESULT 1 [source_file: expected3]
            CALL 1 [source_file: expected3]
                GETPROP 1 [source_file: expected3]
                    NAME z 1 [source_file: expected3]
                    STRING b3 1 [source_file: expected3]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: i0] [input_id: InputId: i0]
        VAR 1 [source_file:  [synthetic:1] ]
            NAME JSCompiler_stubMap 1 [source_file:  [synthetic:1] ]
                ARRAYLIT 1 [source_file:  [synthetic:1] ]
        FUNCTION JSCompiler_stubMethod 1 [source_file:  [synthetic:1] ]
            NAME JSCompiler_stubMethod 1 [source_file:  [synthetic:1] ]
            PARAM_LIST 1 [source_file:  [synthetic:1] ]
                NAME JSCompiler_stubMethod_id 1 [source_file:  [synthetic:1] ]
            BLOCK 1 [source_file:  [synthetic:1] ]
                RETURN 1 [source_file:  [synthetic:1] ]
                    FUNCTION  1 [source_file:  [synthetic:1] ]
                        NAME  1 [source_file:  [synthetic:1] ]
                        PARAM_LIST 1 [source_file:  [synthetic:1] ]
                        BLOCK 1 [source_file:  [synthetic:1] ]
                            RETURN 1 [source_file:  [synthetic:1] ]
                                CALL 1 [source_file:  [synthetic:1] ]
                                    GETPROP 1 [source_file:  [synthetic:1] ]
                                        GETELEM 1 [source_file:  [synthetic:1] ]
                                            NAME JSCompiler_stubMap 1 [source_file:  [synthetic:1] ]
                                            NAME JSCompiler_stubMethod_id 1 [source_file:  [synthetic:1] ]
                                        STRING apply 1 [source_file:  [synthetic:1] ]
                                    THIS 1 [source_file:  [synthetic:1] ]
                                    NAME arguments 1 [source_file:  [synthetic:1] ]
        FUNCTION JSCompiler_unstubMethod 1 [source_file:  [synthetic:1] ]
            NAME JSCompiler_unstubMethod 1 [source_file:  [synthetic:1] ]
            PARAM_LIST 1 [source_file:  [synthetic:1] ]
                NAME JSCompiler_unstubMethod_id 1 [source_file:  [synthetic:1] ]
                NAME JSCompiler_unstubMethod_body 1 [source_file:  [synthetic:1] ]
            BLOCK 1 [source_file:  [synthetic:1] ]
                RETURN 1 [source_file:  [synthetic:1] ]
                    ASSIGN 1 [source_file:  [synthetic:1] ]
                        GETELEM 1 [source_file:  [synthetic:1] ]
                            NAME JSCompiler_stubMap 1 [source_file:  [synthetic:1] ]
                            NAME JSCompiler_unstubMethod_id 1 [source_file:  [synthetic:1] ]
                        NAME JSCompiler_unstubMethod_body 1 [source_file:  [synthetic:1] ]
        FUNCTION Foo 1 [source_file: i0]
            NAME Foo 1 [source_file: i0]
            PARAM_LIST 1 [source_file: i0]
            BLOCK 1 [source_file: i0]
        EXPR_RESULT 1 [source_file: i0]
            ASSIGN 1 [source_file: i0]
                GETPROP 1 [source_file: i0]
                    GETPROP 1 [source_file: i0]
                        NAME Foo 1 [source_file: i0]
                        STRING prototype 1 [source_file: i0]
                    STRING b1 1 [source_file: i0]
                CALL 1 [free_call: 1] [source_file: i0]
                    NAME JSCompiler_stubMethod 1 [source_file: i0]
                    NUMBER 1.0 1 [source_file: i0]
    SCRIPT 1 [synthetic: 1] [source_file: i1] [input_id: InputId: i1]
        EXPR_RESULT 1 [source_file: i0]
            ASSIGN 1 [source_file: i0]
                GETPROP 1 [source_file: i0]
                    GETPROP 1 [source_file: i0]
                        NAME Foo 1 [source_file: i0]
                        STRING prototype 1 [source_file: i0]
                    STRING b1 1 [source_file: i0]
                CALL 1 [free_call: 1] [source_file: i0]
                    NAME JSCompiler_unstubMethod 1 [source_file: i0]
                    NUMBER 1.0 1 [source_file: i0]
                    FUNCTION  1 [source_file: i0]
                        NAME  1 [source_file: i0]
                        PARAM_LIST 1 [source_file: i0]
                        BLOCK 1 [source_file: i0]
                            EXPR_RESULT 1 [source_file: i0]
                                ASSIGN 1 [source_file: i0]
                                    GETPROP 1 [source_file: i0]
                                        GETPROP 1 [source_file: i0]
                                            NAME Foo 1 [source_file: i0]
                                            STRING prototype 1 [source_file: i0]
                                        STRING b2 1 [source_file: i0]
                                    CALL 1 [free_call: 1] [source_file: i0]
                                        NAME JSCompiler_stubMethod 1 [source_file: i0]
                                        NUMBER 0.0 1 [source_file: i0]
        VAR 1 [source_file: i1]
            NAME y 1 [source_file: i1]
                NEW 1 [source_file: i1]
                    NAME Foo 1 [source_file: i1]
        EXPR_RESULT 1 [source_file: i1]
            CALL 1 [source_file: i1]
                GETPROP 1 [source_file: i1]
                    NAME y 1 [source_file: i1]
                    STRING b1 1 [source_file: i1]
    SCRIPT 1 [synthetic: 1] [source_file: i2] [input_id: InputId: i2]
        EXPR_RESULT 1 [source_file: i0]
            ASSIGN 1 [source_file: i0]
                GETPROP 1 [source_file: i0]
                    GETPROP 1 [source_file: i0]
                        NAME Foo 1 [source_file: i0]
                        STRING prototype 1 [source_file: i0]
                    STRING b2 1 [source_file: i0]
                CALL 1 [free_call: 1] [source_file: i0]
                    NAME JSCompiler_unstubMethod 1 [source_file: i0]
                    NUMBER 0.0 1 [source_file: i0]
                    FUNCTION  1 [source_file: i0]
                        NAME  1 [source_file: i0]
                        PARAM_LIST 1 [source_file: i0]
                        BLOCK 1 [source_file: i0]
                            VAR 1 [source_file: i0]
                                NAME x 1 [source_file: i0]
                                    NUMBER 1.0 1 [source_file: i0]
                            EXPR_RESULT 1 [source_file: i0]
                                ASSIGN 1 [source_file: i0]
                                    GETPROP 1 [source_file: i0]
                                        GETPROP 1 [source_file: i0]
                                            NAME Foo 1 [source_file: i0]
                                            STRING prototype 1 [source_file: i0]
                                        STRING b3 1 [source_file: i0]
                                    FUNCTION  1 [source_file: i0]
                                        NAME  1 [source_file: i0]
                                        PARAM_LIST 1 [source_file: i0]
                                        BLOCK 1 [source_file: i0]
                                            EXPR_RESULT 1 [source_file: i0]
                                                NAME x 1 [source_file: i0]
        EXPR_RESULT 1 [source_file: i2]
            ASSIGN 1 [source_file: i2]
                NAME y 1 [source_file: i2]
                NEW 1 [source_file: i2]
                    NAME Foo 1 [source_file: i2]
        EXPR_RESULT 1 [source_file: i2]
            CALL 1 [source_file: i2]
                GETPROP 1 [source_file: i2]
                    NAME z 1 [source_file: i2]
                    STRING b2 1 [source_file: i2]
    SCRIPT 1 [synthetic: 1] [source_file: i3] [input_id: InputId: i3]
        EXPR_RESULT 1 [source_file: i3]
            ASSIGN 1 [source_file: i3]
                NAME y 1 [source_file: i3]
                NEW 1 [source_file: i3]
                    NAME Foo 1 [source_file: i3]
        EXPR_RESULT 1 [source_file: i3]
            CALL 1 [source_file: i3]
                GETPROP 1 [source_file: i3]
                    NAME z 1 [source_file: i3]
                    STRING b3 1 [source_file: i3]


Subtree1: NUMBER 0.0 1 [source_file: expected0]


Subtree2: NUMBER 1.0 1 [source_file: i0]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:928)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:736)
19:30:08.414 [pool-38-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (12 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testClosureVariableReads3(com.google.javascript.jscomp.CrossModuleMethodMotionTest)
[
Expected: var JSCompiler_stubMap=[];function JSCompiler_stubMethod(JSCompiler_stubMethod_id){return function(){return JSCompiler_stubMap[JSCompiler_stubMethod_id].apply(this,arguments)}}function JSCompiler_unstubMethod(JSCompiler_unstubMethod_id,JSCompiler_unstubMethod_body){return JSCompiler_stubMap[JSCompiler_unstubMethod_id]=JSCompiler_unstubMethod_body}function Foo(){}Foo.prototype.b1=JSCompiler_stubMethod(0);Foo.prototype.b1=JSCompiler_unstubMethod(0,function(){Foo.prototype.b2=JSCompiler_stubMethod(1)});
var y=new Foo;y.b1();Foo.prototype.b2=JSCompiler_unstubMethod(1,function(){var x=1;Foo.prototype.b3=function(){x}});y=new Foo;z.b2();y=new Foo;z.b3()
Result: var JSCompiler_stubMap=[];function JSCompiler_stubMethod(JSCompiler_stubMethod_id){return function(){return JSCompiler_stubMap[JSCompiler_stubMethod_id].apply(this,arguments)}}function JSCompiler_unstubMethod(JSCompiler_unstubMethod_id,JSCompiler_unstubMethod_body){return JSCompiler_stubMap[JSCompiler_unstubMethod_id]=JSCompiler_unstubMethod_body}function Foo(){}Foo.prototype.b1=JSCompiler_stubMethod(1);Foo.prototype.b1=JSCompiler_unstubMethod(1,function(){Foo.prototype.b2=JSCompiler_stubMethod(0)});
var y=new Foo;y.b1();Foo.prototype.b2=JSCompiler_unstubMethod(0,function(){var x=1;Foo.prototype.b3=function(){x}});y=new Foo;z.b2();y=new Foo;z.b3()
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        VAR 1 [source_file: expected0]
            NAME JSCompiler_stubMap 1 [source_file: expected0]
                ARRAYLIT 1 [source_file: expected0]
        FUNCTION JSCompiler_stubMethod 1 [source_file: expected0]
            NAME JSCompiler_stubMethod 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
                NAME JSCompiler_stubMethod_id 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                RETURN 1 [source_file: expected0]
                    FUNCTION  1 [source_file: expected0]
                        NAME  1 [source_file: expected0]
                        PARAM_LIST 1 [source_file: expected0]
                        BLOCK 1 [source_file: expected0]
                            RETURN 1 [source_file: expected0]
                                CALL 1 [source_file: expected0]
                                    GETPROP 1 [source_file: expected0]
                                        GETELEM 1 [source_file: expected0]
                                            NAME JSCompiler_stubMap 1 [source_file: expected0]
                                            NAME JSCompiler_stubMethod_id 1 [source_file: expected0]
                                        STRING apply 1 [source_file: expected0]
                                    THIS 1 [source_file: expected0]
                                    NAME arguments 1 [source_file: expected0]
        FUNCTION JSCompiler_unstubMethod 1 [source_file: expected0]
            NAME JSCompiler_unstubMethod 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
                NAME JSCompiler_unstubMethod_id 1 [source_file: expected0]
                NAME JSCompiler_unstubMethod_body 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                RETURN 1 [source_file: expected0]
                    ASSIGN 1 [source_file: expected0]
                        GETELEM 1 [source_file: expected0]
                            NAME JSCompiler_stubMap 1 [source_file: expected0]
                            NAME JSCompiler_unstubMethod_id 1 [source_file: expected0]
                        NAME JSCompiler_unstubMethod_body 1 [source_file: expected0]
        FUNCTION Foo 1 [source_file: expected0]
            NAME Foo 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            ASSIGN 1 [source_file: expected0]
                GETPROP 1 [source_file: expected0]
                    GETPROP 1 [source_file: expected0]
                        NAME Foo 1 [source_file: expected0]
                        STRING prototype 1 [source_file: expected0]
                    STRING b1 1 [source_file: expected0]
                CALL 1 [free_call: 1] [source_file: expected0]
                    NAME JSCompiler_stubMethod 1 [source_file: expected0]
                    NUMBER 0.0 1 [source_file: expected0]
    SCRIPT 1 [synthetic: 1] [source_file: expected1] [input_id: InputId: expected1]
        EXPR_RESULT 1 [source_file: expected1]
            ASSIGN 1 [source_file: expected1]
                GETPROP 1 [source_file: expected1]
                    GETPROP 1 [source_file: expected1]
                        NAME Foo 1 [source_file: expected1]
                        STRING prototype 1 [source_file: expected1]
                    STRING b1 1 [source_file: expected1]
                CALL 1 [free_call: 1] [source_file: expected1]
                    NAME JSCompiler_unstubMethod 1 [source_file: expected1]
                    NUMBER 0.0 1 [source_file: expected1]
                    FUNCTION  1 [source_file: expected1]
                        NAME  1 [source_file: expected1]
                        PARAM_LIST 1 [source_file: expected1]
                        BLOCK 1 [source_file: expected1]
                            EXPR_RESULT 1 [source_file: expected1]
                                ASSIGN 1 [source_file: expected1]
                                    GETPROP 1 [source_file: expected1]
                                        GETPROP 1 [source_file: expected1]
                                            NAME Foo 1 [source_file: expected1]
                                            STRING prototype 1 [source_file: expected1]
                                        STRING b2 1 [source_file: expected1]
                                    CALL 1 [free_call: 1] [source_file: expected1]
                                        NAME JSCompiler_stubMethod 1 [source_file: expected1]
                                        NUMBER 1.0 1 [source_file: expected1]
        VAR 1 [source_file: expected1]
            NAME y 1 [source_file: expected1]
                NEW 1 [source_file: expected1]
                    NAME Foo 1 [source_file: expected1]
        EXPR_RESULT 1 [source_file: expected1]
            CALL 1 [source_file: expected1]
                GETPROP 1 [source_file: expected1]
                    NAME y 1 [source_file: expected1]
                    STRING b1 1 [source_file: expected1]
    SCRIPT 1 [synthetic: 1] [source_file: expected2] [input_id: InputId: expected2]
        EXPR_RESULT 1 [source_file: expected2]
            ASSIGN 1 [source_file: expected2]
                GETPROP 1 [source_file: expected2]
                    GETPROP 1 [source_file: expected2]
                        NAME Foo 1 [source_file: expected2]
                        STRING prototype 1 [source_file: expected2]
                    STRING b2 1 [source_file: expected2]
                CALL 1 [free_call: 1] [source_file: expected2]
                    NAME JSCompiler_unstubMethod 1 [source_file: expected2]
                    NUMBER 1.0 1 [source_file: expected2]
                    FUNCTION  1 [source_file: expected2]
                        NAME  1 [source_file: expected2]
                        PARAM_LIST 1 [source_file: expected2]
                        BLOCK 1 [source_file: expected2]
                            VAR 1 [source_file: expected2]
                                NAME x 1 [source_file: expected2]
                                    NUMBER 1.0 1 [source_file: expected2]
                            EXPR_RESULT 1 [source_file: expected2]
                                ASSIGN 1 [source_file: expected2]
                                    GETPROP 1 [source_file: expected2]
                                        GETPROP 1 [source_file: expected2]
                                            NAME Foo 1 [source_file: expected2]
                                            STRING prototype 1 [source_file: expected2]
                                        STRING b3 1 [source_file: expected2]
                                    FUNCTION  1 [source_file: expected2]
                                        NAME  1 [source_file: expected2]
                                        PARAM_LIST 1 [source_file: expected2]
                                        BLOCK 1 [source_file: expected2]
                                            EXPR_RESULT 1 [source_file: expected2]
                                                NAME x 1 [source_file: expected2]
        EXPR_RESULT 1 [source_file: expected2]
            ASSIGN 1 [source_file: expected2]
                NAME y 1 [source_file: expected2]
                NEW 1 [source_file: expected2]
                    NAME Foo 1 [source_file: expected2]
        EXPR_RESULT 1 [source_file: expected2]
            CALL 1 [source_file: expected2]
                GETPROP 1 [source_file: expected2]
                    NAME z 1 [source_file: expected2]
                    STRING b2 1 [source_file: expected2]
    SCRIPT 1 [synthetic: 1] [source_file: expected3] [input_id: InputId: expected3]
        EXPR_RESULT 1 [source_file: expected3]
            ASSIGN 1 [source_file: expected3]
                NAME y 1 [source_file: expected3]
                NEW 1 [source_file: expected3]
                    NAME Foo 1 [source_file: expected3]
        EXPR_RESULT 1 [source_file: expected3]
            CALL 1 [source_file: expected3]
                GETPROP 1 [source_file: expected3]
                    NAME z 1 [source_file: expected3]
                    STRING b3 1 [source_file: expected3]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: i0] [input_id: InputId: i0]
        VAR 1 [source_file:  [synthetic:1] ]
            NAME JSCompiler_stubMap 1 [source_file:  [synthetic:1] ]
                ARRAYLIT 1 [source_file:  [synthetic:1] ]
        FUNCTION JSCompiler_stubMethod 1 [source_file:  [synthetic:1] ]
            NAME JSCompiler_stubMethod 1 [source_file:  [synthetic:1] ]
            PARAM_LIST 1 [source_file:  [synthetic:1] ]
                NAME JSCompiler_stubMethod_id 1 [source_file:  [synthetic:1] ]
            BLOCK 1 [source_file:  [synthetic:1] ]
                RETURN 1 [source_file:  [synthetic:1] ]
                    FUNCTION  1 [source_file:  [synthetic:1] ]
                        NAME  1 [source_file:  [synthetic:1] ]
                        PARAM_LIST 1 [source_file:  [synthetic:1] ]
                        BLOCK 1 [source_file:  [synthetic:1] ]
                            RETURN 1 [source_file:  [synthetic:1] ]
                                CALL 1 [source_file:  [synthetic:1] ]
                                    GETPROP 1 [source_file:  [synthetic:1] ]
                                        GETELEM 1 [source_file:  [synthetic:1] ]
                                            NAME JSCompiler_stubMap 1 [source_file:  [synthetic:1] ]
                                            NAME JSCompiler_stubMethod_id 1 [source_file:  [synthetic:1] ]
                                        STRING apply 1 [source_file:  [synthetic:1] ]
                                    THIS 1 [source_file:  [synthetic:1] ]
                                    NAME arguments 1 [source_file:  [synthetic:1] ]
        FUNCTION JSCompiler_unstubMethod 1 [source_file:  [synthetic:1] ]
            NAME JSCompiler_unstubMethod 1 [source_file:  [synthetic:1] ]
            PARAM_LIST 1 [source_file:  [synthetic:1] ]
                NAME JSCompiler_unstubMethod_id 1 [source_file:  [synthetic:1] ]
                NAME JSCompiler_unstubMethod_body 1 [source_file:  [synthetic:1] ]
            BLOCK 1 [source_file:  [synthetic:1] ]
                RETURN 1 [source_file:  [synthetic:1] ]
                    ASSIGN 1 [source_file:  [synthetic:1] ]
                        GETELEM 1 [source_file:  [synthetic:1] ]
                            NAME JSCompiler_stubMap 1 [source_file:  [synthetic:1] ]
                            NAME JSCompiler_unstubMethod_id 1 [source_file:  [synthetic:1] ]
                        NAME JSCompiler_unstubMethod_body 1 [source_file:  [synthetic:1] ]
        FUNCTION Foo 1 [source_file: i0]
            NAME Foo 1 [source_file: i0]
            PARAM_LIST 1 [source_file: i0]
            BLOCK 1 [source_file: i0]
        EXPR_RESULT 1 [source_file: i0]
            ASSIGN 1 [source_file: i0]
                GETPROP 1 [source_file: i0]
                    GETPROP 1 [source_file: i0]
                        NAME Foo 1 [source_file: i0]
                        STRING prototype 1 [source_file: i0]
                    STRING b1 1 [source_file: i0]
                CALL 1 [free_call: 1] [source_file: i0]
                    NAME JSCompiler_stubMethod 1 [source_file: i0]
                    NUMBER 1.0 1 [source_file: i0]
    SCRIPT 1 [synthetic: 1] [source_file: i1] [input_id: InputId: i1]
        EXPR_RESULT 1 [source_file: i0]
            ASSIGN 1 [source_file: i0]
                GETPROP 1 [source_file: i0]
                    GETPROP 1 [source_file: i0]
                        NAME Foo 1 [source_file: i0]
                        STRING prototype 1 [source_file: i0]
                    STRING b1 1 [source_file: i0]
                CALL 1 [free_call: 1] [source_file: i0]
                    NAME JSCompiler_unstubMethod 1 [source_file: i0]
                    NUMBER 1.0 1 [source_file: i0]
                    FUNCTION  1 [source_file: i0]
                        NAME  1 [source_file: i0]
                        PARAM_LIST 1 [source_file: i0]
                        BLOCK 1 [source_file: i0]
                            EXPR_RESULT 1 [source_file: i0]
                                ASSIGN 1 [source_file: i0]
                                    GETPROP 1 [source_file: i0]
                                        GETPROP 1 [source_file: i0]
                                            NAME Foo 1 [source_file: i0]
                                            STRING prototype 1 [source_file: i0]
                                        STRING b2 1 [source_file: i0]
                                    CALL 1 [free_call: 1] [source_file: i0]
                                        NAME JSCompiler_stubMethod 1 [source_file: i0]
                                        NUMBER 0.0 1 [source_file: i0]
        VAR 1 [source_file: i1]
            NAME y 1 [source_file: i1]
                NEW 1 [source_file: i1]
                    NAME Foo 1 [source_file: i1]
        EXPR_RESULT 1 [source_file: i1]
            CALL 1 [source_file: i1]
                GETPROP 1 [source_file: i1]
                    NAME y 1 [source_file: i1]
                    STRING b1 1 [source_file: i1]
    SCRIPT 1 [synthetic: 1] [source_file: i2] [input_id: InputId: i2]
        EXPR_RESULT 1 [source_file: i0]
            ASSIGN 1 [source_file: i0]
                GETPROP 1 [source_file: i0]
                    GETPROP 1 [source_file: i0]
                        NAME Foo 1 [source_file: i0]
                        STRING prototype 1 [source_file: i0]
                    STRING b2 1 [source_file: i0]
                CALL 1 [free_call: 1] [source_file: i0]
                    NAME JSCompiler_unstubMethod 1 [source_file: i0]
                    NUMBER 0.0 1 [source_file: i0]
                    FUNCTION  1 [source_file: i0]
                        NAME  1 [source_file: i0]
                        PARAM_LIST 1 [source_file: i0]
                        BLOCK 1 [source_file: i0]
                            VAR 1 [source_file: i0]
                                NAME x 1 [source_file: i0]
                                    NUMBER 1.0 1 [source_file: i0]
                            EXPR_RESULT 1 [source_file: i0]
                                ASSIGN 1 [source_file: i0]
                                    GETPROP 1 [source_file: i0]
                                        GETPROP 1 [source_file: i0]
                                            NAME Foo 1 [source_file: i0]
                                            STRING prototype 1 [source_file: i0]
                                        STRING b3 1 [source_file: i0]
                                    FUNCTION  1 [source_file: i0]
                                        NAME  1 [source_file: i0]
                                        PARAM_LIST 1 [source_file: i0]
                                        BLOCK 1 [source_file: i0]
                                            EXPR_RESULT 1 [source_file: i0]
                                                NAME x 1 [source_file: i0]
        EXPR_RESULT 1 [source_file: i2]
            ASSIGN 1 [source_file: i2]
                NAME y 1 [source_file: i2]
                NEW 1 [source_file: i2]
                    NAME Foo 1 [source_file: i2]
        EXPR_RESULT 1 [source_file: i2]
            CALL 1 [source_file: i2]
                GETPROP 1 [source_file: i2]
                    NAME z 1 [source_file: i2]
                    STRING b2 1 [source_file: i2]
    SCRIPT 1 [synthetic: 1] [source_file: i3] [input_id: InputId: i3]
        EXPR_RESULT 1 [source_file: i3]
            ASSIGN 1 [source_file: i3]
                NAME y 1 [source_file: i3]
                NEW 1 [source_file: i3]
                    NAME Foo 1 [source_file: i3]
        EXPR_RESULT 1 [source_file: i3]
            CALL 1 [source_file: i3]
                GETPROP 1 [source_file: i3]
                    NAME z 1 [source_file: i3]
                    STRING b3 1 [source_file: i3]


Subtree1: NUMBER 0.0 1 [source_file: expected0]


Subtree2: NUMBER 1.0 1 [source_file: i0]
]
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_stubMap=[];function JSCompiler_stubMethod(JSCompiler_stubMethod_id){return function(){return JSCompiler_stubMap[JSCompiler_stubMethod_id].apply(this,arguments)}}function JSCompiler_unstubMethod(JSCompiler_unstubMethod_id,JSCompiler_unstubMethod_body){return JSCompiler_stubMap[JSCompiler_unstubMethod_id]=JSCompiler_unstubMethod_body}function Foo(){}Foo.prototype.b1=JSCompiler_stubMethod(0);Foo.prototype.b1=JSCompiler_unstubMethod(0,function(){Foo.prototype.b2=JSCompiler_stubMethod(1)});
var y=new Foo;y.b1();Foo.prototype.b2=JSCompiler_unstubMethod(1,function(){var x=1;Foo.prototype.b3=function(){x}});y=new Foo;z.b2();y=new Foo;z.b3()
Result: var JSCompiler_stubMap=[];function JSCompiler_stubMethod(JSCompiler_stubMethod_id){return function(){return JSCompiler_stubMap[JSCompiler_stubMethod_id].apply(this,arguments)}}function JSCompiler_unstubMethod(JSCompiler_unstubMethod_id,JSCompiler_unstubMethod_body){return JSCompiler_stubMap[JSCompiler_unstubMethod_id]=JSCompiler_unstubMethod_body}function Foo(){}Foo.prototype.b1=JSCompiler_stubMethod(1);Foo.prototype.b1=JSCompiler_unstubMethod(1,function(){Foo.prototype.b2=JSCompiler_stubMethod(0)});
var y=new Foo;y.b1();Foo.prototype.b2=JSCompiler_unstubMethod(0,function(){var x=1;Foo.prototype.b3=function(){x}});y=new Foo;z.b2();y=new Foo;z.b3()
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        VAR 1 [source_file: expected0]
            NAME JSCompiler_stubMap 1 [source_file: expected0]
                ARRAYLIT 1 [source_file: expected0]
        FUNCTION JSCompiler_stubMethod 1 [source_file: expected0]
            NAME JSCompiler_stubMethod 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
                NAME JSCompiler_stubMethod_id 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                RETURN 1 [source_file: expected0]
                    FUNCTION  1 [source_file: expected0]
                        NAME  1 [source_file: expected0]
                        PARAM_LIST 1 [source_file: expected0]
                        BLOCK 1 [source_file: expected0]
                            RETURN 1 [source_file: expected0]
                                CALL 1 [source_file: expected0]
                                    GETPROP 1 [source_file: expected0]
                                        GETELEM 1 [source_file: expected0]
                                            NAME JSCompiler_stubMap 1 [source_file: expected0]
                                            NAME JSCompiler_stubMethod_id 1 [source_file: expected0]
                                        STRING apply 1 [source_file: expected0]
                                    THIS 1 [source_file: expected0]
                                    NAME arguments 1 [source_file: expected0]
        FUNCTION JSCompiler_unstubMethod 1 [source_file: expected0]
            NAME JSCompiler_unstubMethod 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
                NAME JSCompiler_unstubMethod_id 1 [source_file: expected0]
                NAME JSCompiler_unstubMethod_body 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                RETURN 1 [source_file: expected0]
                    ASSIGN 1 [source_file: expected0]
                        GETELEM 1 [source_file: expected0]
                            NAME JSCompiler_stubMap 1 [source_file: expected0]
                            NAME JSCompiler_unstubMethod_id 1 [source_file: expected0]
                        NAME JSCompiler_unstubMethod_body 1 [source_file: expected0]
        FUNCTION Foo 1 [source_file: expected0]
            NAME Foo 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            ASSIGN 1 [source_file: expected0]
                GETPROP 1 [source_file: expected0]
                    GETPROP 1 [source_file: expected0]
                        NAME Foo 1 [source_file: expected0]
                        STRING prototype 1 [source_file: expected0]
                    STRING b1 1 [source_file: expected0]
                CALL 1 [free_call: 1] [source_file: expected0]
                    NAME JSCompiler_stubMethod 1 [source_file: expected0]
                    NUMBER 0.0 1 [source_file: expected0]
    SCRIPT 1 [synthetic: 1] [source_file: expected1] [input_id: InputId: expected1]
        EXPR_RESULT 1 [source_file: expected1]
            ASSIGN 1 [source_file: expected1]
                GETPROP 1 [source_file: expected1]
                    GETPROP 1 [source_file: expected1]
                        NAME Foo 1 [source_file: expected1]
                        STRING prototype 1 [source_file: expected1]
                    STRING b1 1 [source_file: expected1]
                CALL 1 [free_call: 1] [source_file: expected1]
                    NAME JSCompiler_unstubMethod 1 [source_file: expected1]
                    NUMBER 0.0 1 [source_file: expected1]
                    FUNCTION  1 [source_file: expected1]
                        NAME  1 [source_file: expected1]
                        PARAM_LIST 1 [source_file: expected1]
                        BLOCK 1 [source_file: expected1]
                            EXPR_RESULT 1 [source_file: expected1]
                                ASSIGN 1 [source_file: expected1]
                                    GETPROP 1 [source_file: expected1]
                                        GETPROP 1 [source_file: expected1]
                                            NAME Foo 1 [source_file: expected1]
                                            STRING prototype 1 [source_file: expected1]
                                        STRING b2 1 [source_file: expected1]
                                    CALL 1 [free_call: 1] [source_file: expected1]
                                        NAME JSCompiler_stubMethod 1 [source_file: expected1]
                                        NUMBER 1.0 1 [source_file: expected1]
        VAR 1 [source_file: expected1]
            NAME y 1 [source_file: expected1]
                NEW 1 [source_file: expected1]
                    NAME Foo 1 [source_file: expected1]
        EXPR_RESULT 1 [source_file: expected1]
            CALL 1 [source_file: expected1]
                GETPROP 1 [source_file: expected1]
                    NAME y 1 [source_file: expected1]
                    STRING b1 1 [source_file: expected1]
    SCRIPT 1 [synthetic: 1] [source_file: expected2] [input_id: InputId: expected2]
        EXPR_RESULT 1 [source_file: expected2]
            ASSIGN 1 [source_file: expected2]
                GETPROP 1 [source_file: expected2]
                    GETPROP 1 [source_file: expected2]
                        NAME Foo 1 [source_file: expected2]
                        STRING prototype 1 [source_file: expected2]
                    STRING b2 1 [source_file: expected2]
                CALL 1 [free_call: 1] [source_file: expected2]
                    NAME JSCompiler_unstubMethod 1 [source_file: expected2]
                    NUMBER 1.0 1 [source_file: expected2]
                    FUNCTION  1 [source_file: expected2]
                        NAME  1 [source_file: expected2]
                        PARAM_LIST 1 [source_file: expected2]
                        BLOCK 1 [source_file: expected2]
                            VAR 1 [source_file: expected2]
                                NAME x 1 [source_file: expected2]
                                    NUMBER 1.0 1 [source_file: expected2]
                            EXPR_RESULT 1 [source_file: expected2]
                                ASSIGN 1 [source_file: expected2]
                                    GETPROP 1 [source_file: expected2]
                                        GETPROP 1 [source_file: expected2]
                                            NAME Foo 1 [source_file: expected2]
                                            STRING prototype 1 [source_file: expected2]
                                        STRING b3 1 [source_file: expected2]
                                    FUNCTION  1 [source_file: expected2]
                                        NAME  1 [source_file: expected2]
                                        PARAM_LIST 1 [source_file: expected2]
                                        BLOCK 1 [source_file: expected2]
                                            EXPR_RESULT 1 [source_file: expected2]
                                                NAME x 1 [source_file: expected2]
        EXPR_RESULT 1 [source_file: expected2]
            ASSIGN 1 [source_file: expected2]
                NAME y 1 [source_file: expected2]
                NEW 1 [source_file: expected2]
                    NAME Foo 1 [source_file: expected2]
        EXPR_RESULT 1 [source_file: expected2]
            CALL 1 [source_file: expected2]
                GETPROP 1 [source_file: expected2]
                    NAME z 1 [source_file: expected2]
                    STRING b2 1 [source_file: expected2]
    SCRIPT 1 [synthetic: 1] [source_file: expected3] [input_id: InputId: expected3]
        EXPR_RESULT 1 [source_file: expected3]
            ASSIGN 1 [source_file: expected3]
                NAME y 1 [source_file: expected3]
                NEW 1 [source_file: expected3]
                    NAME Foo 1 [source_file: expected3]
        EXPR_RESULT 1 [source_file: expected3]
            CALL 1 [source_file: expected3]
                GETPROP 1 [source_file: expected3]
                    NAME z 1 [source_file: expected3]
                    STRING b3 1 [source_file: expected3]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: i0] [input_id: InputId: i0]
        VAR 1 [source_file:  [synthetic:1] ]
            NAME JSCompiler_stubMap 1 [source_file:  [synthetic:1] ]
                ARRAYLIT 1 [source_file:  [synthetic:1] ]
        FUNCTION JSCompiler_stubMethod 1 [source_file:  [synthetic:1] ]
            NAME JSCompiler_stubMethod 1 [source_file:  [synthetic:1] ]
            PARAM_LIST 1 [source_file:  [synthetic:1] ]
                NAME JSCompiler_stubMethod_id 1 [source_file:  [synthetic:1] ]
            BLOCK 1 [source_file:  [synthetic:1] ]
                RETURN 1 [source_file:  [synthetic:1] ]
                    FUNCTION  1 [source_file:  [synthetic:1] ]
                        NAME  1 [source_file:  [synthetic:1] ]
                        PARAM_LIST 1 [source_file:  [synthetic:1] ]
                        BLOCK 1 [source_file:  [synthetic:1] ]
                            RETURN 1 [source_file:  [synthetic:1] ]
                                CALL 1 [source_file:  [synthetic:1] ]
                                    GETPROP 1 [source_file:  [synthetic:1] ]
                                        GETELEM 1 [source_file:  [synthetic:1] ]
                                            NAME JSCompiler_stubMap 1 [source_file:  [synthetic:1] ]
                                            NAME JSCompiler_stubMethod_id 1 [source_file:  [synthetic:1] ]
                                        STRING apply 1 [source_file:  [synthetic:1] ]
                                    THIS 1 [source_file:  [synthetic:1] ]
                                    NAME arguments 1 [source_file:  [synthetic:1] ]
        FUNCTION JSCompiler_unstubMethod 1 [source_file:  [synthetic:1] ]
            NAME JSCompiler_unstubMethod 1 [source_file:  [synthetic:1] ]
            PARAM_LIST 1 [source_file:  [synthetic:1] ]
                NAME JSCompiler_unstubMethod_id 1 [source_file:  [synthetic:1] ]
                NAME JSCompiler_unstubMethod_body 1 [source_file:  [synthetic:1] ]
            BLOCK 1 [source_file:  [synthetic:1] ]
                RETURN 1 [source_file:  [synthetic:1] ]
                    ASSIGN 1 [source_file:  [synthetic:1] ]
                        GETELEM 1 [source_file:  [synthetic:1] ]
                            NAME JSCompiler_stubMap 1 [source_file:  [synthetic:1] ]
                            NAME JSCompiler_unstubMethod_id 1 [source_file:  [synthetic:1] ]
                        NAME JSCompiler_unstubMethod_body 1 [source_file:  [synthetic:1] ]
        FUNCTION Foo 1 [source_file: i0]
            NAME Foo 1 [source_file: i0]
            PARAM_LIST 1 [source_file: i0]
            BLOCK 1 [source_file: i0]
        EXPR_RESULT 1 [source_file: i0]
            ASSIGN 1 [source_file: i0]
                GETPROP 1 [source_file: i0]
                    GETPROP 1 [source_file: i0]
                        NAME Foo 1 [source_file: i0]
                        STRING prototype 1 [source_file: i0]
                    STRING b1 1 [source_file: i0]
                CALL 1 [free_call: 1] [source_file: i0]
                    NAME JSCompiler_stubMethod 1 [source_file: i0]
                    NUMBER 1.0 1 [source_file: i0]
    SCRIPT 1 [synthetic: 1] [source_file: i1] [input_id: InputId: i1]
        EXPR_RESULT 1 [source_file: i0]
            ASSIGN 1 [source_file: i0]
                GETPROP 1 [source_file: i0]
                    GETPROP 1 [source_file: i0]
                        NAME Foo 1 [source_file: i0]
                        STRING prototype 1 [source_file: i0]
                    STRING b1 1 [source_file: i0]
                CALL 1 [free_call: 1] [source_file: i0]
                    NAME JSCompiler_unstubMethod 1 [source_file: i0]
                    NUMBER 1.0 1 [source_file: i0]
                    FUNCTION  1 [source_file: i0]
                        NAME  1 [source_file: i0]
                        PARAM_LIST 1 [source_file: i0]
                        BLOCK 1 [source_file: i0]
                            EXPR_RESULT 1 [source_file: i0]
                                ASSIGN 1 [source_file: i0]
                                    GETPROP 1 [source_file: i0]
                                        GETPROP 1 [source_file: i0]
                                            NAME Foo 1 [source_file: i0]
                                            STRING prototype 1 [source_file: i0]
                                        STRING b2 1 [source_file: i0]
                                    CALL 1 [free_call: 1] [source_file: i0]
                                        NAME JSCompiler_stubMethod 1 [source_file: i0]
                                        NUMBER 0.0 1 [source_file: i0]
        VAR 1 [source_file: i1]
            NAME y 1 [source_file: i1]
                NEW 1 [source_file: i1]
                    NAME Foo 1 [source_file: i1]
        EXPR_RESULT 1 [source_file: i1]
            CALL 1 [source_file: i1]
                GETPROP 1 [source_file: i1]
                    NAME y 1 [source_file: i1]
                    STRING b1 1 [source_file: i1]
    SCRIPT 1 [synthetic: 1] [source_file: i2] [input_id: InputId: i2]
        EXPR_RESULT 1 [source_file: i0]
            ASSIGN 1 [source_file: i0]
                GETPROP 1 [source_file: i0]
                    GETPROP 1 [source_file: i0]
                        NAME Foo 1 [source_file: i0]
                        STRING prototype 1 [source_file: i0]
                    STRING b2 1 [source_file: i0]
                CALL 1 [free_call: 1] [source_file: i0]
                    NAME JSCompiler_unstubMethod 1 [source_file: i0]
                    NUMBER 0.0 1 [source_file: i0]
                    FUNCTION  1 [source_file: i0]
                        NAME  1 [source_file: i0]
                        PARAM_LIST 1 [source_file: i0]
                        BLOCK 1 [source_file: i0]
                            VAR 1 [source_file: i0]
                                NAME x 1 [source_file: i0]
                                    NUMBER 1.0 1 [source_file: i0]
                            EXPR_RESULT 1 [source_file: i0]
                                ASSIGN 1 [source_file: i0]
                                    GETPROP 1 [source_file: i0]
                                        GETPROP 1 [source_file: i0]
                                            NAME Foo 1 [source_file: i0]
                                            STRING prototype 1 [source_file: i0]
                                        STRING b3 1 [source_file: i0]
                                    FUNCTION  1 [source_file: i0]
                                        NAME  1 [source_file: i0]
                                        PARAM_LIST 1 [source_file: i0]
                                        BLOCK 1 [source_file: i0]
                                            EXPR_RESULT 1 [source_file: i0]
                                                NAME x 1 [source_file: i0]
        EXPR_RESULT 1 [source_file: i2]
            ASSIGN 1 [source_file: i2]
                NAME y 1 [source_file: i2]
                NEW 1 [source_file: i2]
                    NAME Foo 1 [source_file: i2]
        EXPR_RESULT 1 [source_file: i2]
            CALL 1 [source_file: i2]
                GETPROP 1 [source_file: i2]
                    NAME z 1 [source_file: i2]
                    STRING b2 1 [source_file: i2]
    SCRIPT 1 [synthetic: 1] [source_file: i3] [input_id: InputId: i3]
        EXPR_RESULT 1 [source_file: i3]
            ASSIGN 1 [source_file: i3]
                NAME y 1 [source_file: i3]
                NEW 1 [source_file: i3]
                    NAME Foo 1 [source_file: i3]
        EXPR_RESULT 1 [source_file: i3]
            CALL 1 [source_file: i3]
                GETPROP 1 [source_file: i3]
                    NAME z 1 [source_file: i3]
                    STRING b3 1 [source_file: i3]


Subtree1: NUMBER 0.0 1 [source_file: expected0]


Subtree2: NUMBER 1.0 1 [source_file: i0]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:928)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:736)

19:30:08.445 [pool-39-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (23 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

19:30:08.456 [pool-40-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (8 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

19:30:08.475 [pool-41-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (12 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

19:30:08.484 [pool-42-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (7 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

19:30:08.498 [pool-43-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (12 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

19:30:08.507 [pool-44-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (7 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

19:30:08.515 [pool-45-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (6 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

19:30:08.522 [pool-46-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (5 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

19:30:08.529 [pool-47-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (5 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

junit.framework.AssertionFailedError
    at junit.framework.Assert.fail(Assert.java:55)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNotNull(Assert.java:256)
    at junit.framework.Assert.assertNotNull(Assert.java:248)
    at junit.framework.TestCase.assertNotNull(TestCase.java:417)
    at com.google.javascript.rhino.NodeTest.testCheckTreeEqualsStringDifferent(NodeTest.java:105)
19:30:08.534 [pool-48-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testCheckTreeEqualsStringDifferent(com.google.javascript.rhino.NodeTest)
[null]
junit.framework.AssertionFailedError    at junit.framework.Assert.fail(Assert.java:55)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNotNull(Assert.java:256)
    at junit.framework.Assert.assertNotNull(Assert.java:248)
    at junit.framework.TestCase.assertNotNull(TestCase.java:417)
    at com.google.javascript.rhino.NodeTest.testCheckTreeEqualsStringDifferent(NodeTest.java:105)

19:30:08.546 [pool-49-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (8 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

19:30:08.553 [pool-50-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (4 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

19:30:08.559 [pool-51-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (4 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

19:30:08.565 [pool-52-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (4 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

19:30:08.571 [pool-53-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (4 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

19:30:08.578 [pool-54-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (5 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

junit.framework.AssertionFailedError: 
Expected: var JSCompiler_stubMap=[];function JSCompiler_stubMethod(JSCompiler_stubMethod_id){return function(){return JSCompiler_stubMap[JSCompiler_stubMethod_id].apply(this,arguments)}}function JSCompiler_unstubMethod(JSCompiler_unstubMethod_id,JSCompiler_unstubMethod_body){return JSCompiler_stubMap[JSCompiler_unstubMethod_id]=JSCompiler_unstubMethod_body}function Foo(){}Foo.prototype.baz=JSCompiler_stubMethod(1);Foo.prototype.callBaz=JSCompiler_stubMethod(0);Foo.prototype.baz=JSCompiler_unstubMethod(1,function(){});
Foo.prototype.callBaz=JSCompiler_unstubMethod(0,function(){this.baz()});(new Foo).callBaz()
Result: var JSCompiler_stubMap=[];function JSCompiler_stubMethod(JSCompiler_stubMethod_id){return function(){return JSCompiler_stubMap[JSCompiler_stubMethod_id].apply(this,arguments)}}function JSCompiler_unstubMethod(JSCompiler_unstubMethod_id,JSCompiler_unstubMethod_body){return JSCompiler_stubMap[JSCompiler_unstubMethod_id]=JSCompiler_unstubMethod_body}function Foo(){}Foo.prototype.baz=JSCompiler_stubMethod(0);Foo.prototype.callBaz=JSCompiler_stubMethod(1);
Foo.prototype.callBaz=JSCompiler_unstubMethod(1,function(){this.baz()});Foo.prototype.baz=JSCompiler_unstubMethod(0,function(){});(new Foo).callBaz()
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        VAR 1 [source_file: expected0]
            NAME JSCompiler_stubMap 1 [source_file: expected0]
                ARRAYLIT 1 [source_file: expected0]
        FUNCTION JSCompiler_stubMethod 1 [source_file: expected0]
            NAME JSCompiler_stubMethod 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
                NAME JSCompiler_stubMethod_id 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                RETURN 1 [source_file: expected0]
                    FUNCTION  1 [source_file: expected0]
                        NAME  1 [source_file: expected0]
                        PARAM_LIST 1 [source_file: expected0]
                        BLOCK 1 [source_file: expected0]
                            RETURN 1 [source_file: expected0]
                                CALL 1 [source_file: expected0]
                                    GETPROP 1 [source_file: expected0]
                                        GETELEM 1 [source_file: expected0]
                                            NAME JSCompiler_stubMap 1 [source_file: expected0]
                                            NAME JSCompiler_stubMethod_id 1 [source_file: expected0]
                                        STRING apply 1 [source_file: expected0]
                                    THIS 1 [source_file: expected0]
                                    NAME arguments 1 [source_file: expected0]
        FUNCTION JSCompiler_unstubMethod 1 [source_file: expected0]
            NAME JSCompiler_unstubMethod 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
                NAME JSCompiler_unstubMethod_id 1 [source_file: expected0]
                NAME JSCompiler_unstubMethod_body 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                RETURN 1 [source_file: expected0]
                    ASSIGN 1 [source_file: expected0]
                        GETELEM 1 [source_file: expected0]
                            NAME JSCompiler_stubMap 1 [source_file: expected0]
                            NAME JSCompiler_unstubMethod_id 1 [source_file: expected0]
                        NAME JSCompiler_unstubMethod_body 1 [source_file: expected0]
        FUNCTION Foo 1 [source_file: expected0]
            NAME Foo 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            ASSIGN 1 [source_file: expected0]
                GETPROP 1 [source_file: expected0]
                    GETPROP 1 [source_file: expected0]
                        NAME Foo 1 [source_file: expected0]
                        STRING prototype 1 [source_file: expected0]
                    STRING baz 1 [source_file: expected0]
                CALL 1 [free_call: 1] [source_file: expected0]
                    NAME JSCompiler_stubMethod 1 [source_file: expected0]
                    NUMBER 1.0 1 [source_file: expected0]
    SCRIPT 1 [synthetic: 1] [source_file: expected1] [input_id: InputId: expected1]
        EXPR_RESULT 1 [source_file: expected1]
            ASSIGN 1 [source_file: expected1]
                GETPROP 1 [source_file: expected1]
                    GETPROP 1 [source_file: expected1]
                        NAME Foo 1 [source_file: expected1]
                        STRING prototype 1 [source_file: expected1]
                    STRING callBaz 1 [source_file: expected1]
                CALL 1 [free_call: 1] [source_file: expected1]
                    NAME JSCompiler_stubMethod 1 [source_file: expected1]
                    NUMBER 0.0 1 [source_file: expected1]
    SCRIPT 1 [synthetic: 1] [source_file: expected2] [input_id: InputId: expected2]
        EXPR_RESULT 1 [source_file: expected2]
            ASSIGN 1 [source_file: expected2]
                GETPROP 1 [source_file: expected2]
                    GETPROP 1 [source_file: expected2]
                        NAME Foo 1 [source_file: expected2]
                        STRING prototype 1 [source_file: expected2]
                    STRING baz 1 [source_file: expected2]
                CALL 1 [free_call: 1] [source_file: expected2]
                    NAME JSCompiler_unstubMethod 1 [source_file: expected2]
                    NUMBER 1.0 1 [source_file: expected2]
                    FUNCTION  1 [source_file: expected2]
                        NAME  1 [source_file: expected2]
                        PARAM_LIST 1 [source_file: expected2]
                        BLOCK 1 [source_file: expected2]
        EXPR_RESULT 1 [source_file: expected2]
            ASSIGN 1 [source_file: expected2]
                GETPROP 1 [source_file: expected2]
                    GETPROP 1 [source_file: expected2]
                        NAME Foo 1 [source_file: expected2]
                        STRING prototype 1 [source_file: expected2]
                    STRING callBaz 1 [source_file: expected2]
                CALL 1 [free_call: 1] [source_file: expected2]
                    NAME JSCompiler_unstubMethod 1 [source_file: expected2]
                    NUMBER 0.0 1 [source_file: expected2]
                    FUNCTION  1 [source_file: expected2]
                        NAME  1 [source_file: expected2]
                        PARAM_LIST 1 [source_file: expected2]
                        BLOCK 1 [source_file: expected2]
                            EXPR_RESULT 1 [source_file: expected2]
                                CALL 1 [source_file: expected2]
                                    GETPROP 1 [source_file: expected2]
                                        THIS 1 [source_file: expected2]
                                        STRING baz 1 [source_file: expected2]
        EXPR_RESULT 1 [source_file: expected2]
            CALL 1 [source_file: expected2]
                GETPROP 1 [source_file: expected2]
                    NEW 1 [source_file: expected2]
                        NAME Foo 1 [source_file: expected2]
                    STRING callBaz 1 [source_file: expected2]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: i0] [input_id: InputId: i0]
        VAR 1 [source_file:  [synthetic:1] ]
            NAME JSCompiler_stubMap 1 [source_file:  [synthetic:1] ]
                ARRAYLIT 1 [source_file:  [synthetic:1] ]
        FUNCTION JSCompiler_stubMethod 1 [source_file:  [synthetic:1] ]
            NAME JSCompiler_stubMethod 1 [source_file:  [synthetic:1] ]
            PARAM_LIST 1 [source_file:  [synthetic:1] ]
                NAME JSCompiler_stubMethod_id 1 [source_file:  [synthetic:1] ]
            BLOCK 1 [source_file:  [synthetic:1] ]
                RETURN 1 [source_file:  [synthetic:1] ]
                    FUNCTION  1 [source_file:  [synthetic:1] ]
                        NAME  1 [source_file:  [synthetic:1] ]
                        PARAM_LIST 1 [source_file:  [synthetic:1] ]
                        BLOCK 1 [source_file:  [synthetic:1] ]
                            RETURN 1 [source_file:  [synthetic:1] ]
                                CALL 1 [source_file:  [synthetic:1] ]
                                    GETPROP 1 [source_file:  [synthetic:1] ]
                                        GETELEM 1 [source_file:  [synthetic:1] ]
                                            NAME JSCompiler_stubMap 1 [source_file:  [synthetic:1] ]
                                            NAME JSCompiler_stubMethod_id 1 [source_file:  [synthetic:1] ]
                                        STRING apply 1 [source_file:  [synthetic:1] ]
                                    THIS 1 [source_file:  [synthetic:1] ]
                                    NAME arguments 1 [source_file:  [synthetic:1] ]
        FUNCTION JSCompiler_unstubMethod 1 [source_file:  [synthetic:1] ]
            NAME JSCompiler_unstubMethod 1 [source_file:  [synthetic:1] ]
            PARAM_LIST 1 [source_file:  [synthetic:1] ]
                NAME JSCompiler_unstubMethod_id 1 [source_file:  [synthetic:1] ]
                NAME JSCompiler_unstubMethod_body 1 [source_file:  [synthetic:1] ]
            BLOCK 1 [source_file:  [synthetic:1] ]
                RETURN 1 [source_file:  [synthetic:1] ]
                    ASSIGN 1 [source_file:  [synthetic:1] ]
                        GETELEM 1 [source_file:  [synthetic:1] ]
                            NAME JSCompiler_stubMap 1 [source_file:  [synthetic:1] ]
                            NAME JSCompiler_unstubMethod_id 1 [source_file:  [synthetic:1] ]
                        NAME JSCompiler_unstubMethod_body 1 [source_file:  [synthetic:1] ]
        FUNCTION Foo 1 [source_file: i0]
            NAME Foo 1 [source_file: i0]
            PARAM_LIST 1 [source_file: i0]
            BLOCK 1 [source_file: i0]
        EXPR_RESULT 1 [source_file: i0]
            ASSIGN 1 [source_file: i0]
                GETPROP 1 [source_file: i0]
                    GETPROP 1 [source_file: i0]
                        NAME Foo 1 [source_file: i0]
                        STRING prototype 1 [source_file: i0]
                    STRING baz 1 [source_file: i0]
                CALL 1 [free_call: 1] [source_file: i0]
                    NAME JSCompiler_stubMethod 1 [source_file: i0]
                    NUMBER 0.0 1 [source_file: i0]
    SCRIPT 1 [synthetic: 1] [source_file: i1] [input_id: InputId: i1]
        EXPR_RESULT 1 [source_file: i1]
            ASSIGN 1 [source_file: i1]
                GETPROP 1 [source_file: i1]
                    GETPROP 1 [source_file: i1]
                        NAME Foo 1 [source_file: i1]
                        STRING prototype 1 [source_file: i1]
                    STRING callBaz 1 [source_file: i1]
                CALL 1 [free_call: 1] [source_file: i1]
                    NAME JSCompiler_stubMethod 1 [source_file: i1]
                    NUMBER 1.0 1 [source_file: i1]
    SCRIPT 1 [synthetic: 1] [source_file: i2] [input_id: InputId: i2]
        EXPR_RESULT 1 [source_file: i1]
            ASSIGN 1 [source_file: i1]
                GETPROP 1 [source_file: i1]
                    GETPROP 1 [source_file: i1]
                        NAME Foo 1 [source_file: i1]
                        STRING prototype 1 [source_file: i1]
                    STRING callBaz 1 [source_file: i1]
                CALL 1 [free_call: 1] [source_file: i1]
                    NAME JSCompiler_unstubMethod 1 [source_file: i1]
                    NUMBER 1.0 1 [source_file: i1]
                    FUNCTION  1 [source_file: i1]
                        NAME  1 [source_file: i1]
                        PARAM_LIST 1 [source_file: i1]
                        BLOCK 1 [source_file: i1]
                            EXPR_RESULT 1 [source_file: i1]
                                CALL 1 [source_file: i1]
                                    GETPROP 1 [source_file: i1]
                                        THIS 1 [source_file: i1]
                                        STRING baz 1 [source_file: i1]
        EXPR_RESULT 1 [source_file: i0]
            ASSIGN 1 [source_file: i0]
                GETPROP 1 [source_file: i0]
                    GETPROP 1 [source_file: i0]
                        NAME Foo 1 [source_file: i0]
                        STRING prototype 1 [source_file: i0]
                    STRING baz 1 [source_file: i0]
                CALL 1 [free_call: 1] [source_file: i0]
                    NAME JSCompiler_unstubMethod 1 [source_file: i0]
                    NUMBER 0.0 1 [source_file: i0]
                    FUNCTION  1 [source_file: i0]
                        NAME  1 [source_file: i0]
                        PARAM_LIST 1 [source_file: i0]
                        BLOCK 1 [source_file: i0]
        EXPR_RESULT 1 [source_file: i2]
            CALL 1 [source_file: i2]
                GETPROP 1 [source_file: i2]
                    NEW 1 [source_file: i2]
                        NAME Foo 1 [source_file: i2]
                    STRING callBaz 1 [source_file: i2]


Subtree1: NUMBER 1.0 1 [source_file: expected0]


Subtree2: NUMBER 0.0 1 [source_file: i0]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:928)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:736)
19:30:08.587 [pool-55-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (8 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testTwoMethods(com.google.javascript.jscomp.CrossModuleMethodMotionTest)
[
Expected: var JSCompiler_stubMap=[];function JSCompiler_stubMethod(JSCompiler_stubMethod_id){return function(){return JSCompiler_stubMap[JSCompiler_stubMethod_id].apply(this,arguments)}}function JSCompiler_unstubMethod(JSCompiler_unstubMethod_id,JSCompiler_unstubMethod_body){return JSCompiler_stubMap[JSCompiler_unstubMethod_id]=JSCompiler_unstubMethod_body}function Foo(){}Foo.prototype.baz=JSCompiler_stubMethod(1);Foo.prototype.callBaz=JSCompiler_stubMethod(0);Foo.prototype.baz=JSCompiler_unstubMethod(1,function(){});
Foo.prototype.callBaz=JSCompiler_unstubMethod(0,function(){this.baz()});(new Foo).callBaz()
Result: var JSCompiler_stubMap=[];function JSCompiler_stubMethod(JSCompiler_stubMethod_id){return function(){return JSCompiler_stubMap[JSCompiler_stubMethod_id].apply(this,arguments)}}function JSCompiler_unstubMethod(JSCompiler_unstubMethod_id,JSCompiler_unstubMethod_body){return JSCompiler_stubMap[JSCompiler_unstubMethod_id]=JSCompiler_unstubMethod_body}function Foo(){}Foo.prototype.baz=JSCompiler_stubMethod(0);Foo.prototype.callBaz=JSCompiler_stubMethod(1);
Foo.prototype.callBaz=JSCompiler_unstubMethod(1,function(){this.baz()});Foo.prototype.baz=JSCompiler_unstubMethod(0,function(){});(new Foo).callBaz()
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        VAR 1 [source_file: expected0]
            NAME JSCompiler_stubMap 1 [source_file: expected0]
                ARRAYLIT 1 [source_file: expected0]
        FUNCTION JSCompiler_stubMethod 1 [source_file: expected0]
            NAME JSCompiler_stubMethod 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
                NAME JSCompiler_stubMethod_id 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                RETURN 1 [source_file: expected0]
                    FUNCTION  1 [source_file: expected0]
                        NAME  1 [source_file: expected0]
                        PARAM_LIST 1 [source_file: expected0]
                        BLOCK 1 [source_file: expected0]
                            RETURN 1 [source_file: expected0]
                                CALL 1 [source_file: expected0]
                                    GETPROP 1 [source_file: expected0]
                                        GETELEM 1 [source_file: expected0]
                                            NAME JSCompiler_stubMap 1 [source_file: expected0]
                                            NAME JSCompiler_stubMethod_id 1 [source_file: expected0]
                                        STRING apply 1 [source_file: expected0]
                                    THIS 1 [source_file: expected0]
                                    NAME arguments 1 [source_file: expected0]
        FUNCTION JSCompiler_unstubMethod 1 [source_file: expected0]
            NAME JSCompiler_unstubMethod 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
                NAME JSCompiler_unstubMethod_id 1 [source_file: expected0]
                NAME JSCompiler_unstubMethod_body 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                RETURN 1 [source_file: expected0]
                    ASSIGN 1 [source_file: expected0]
                        GETELEM 1 [source_file: expected0]
                            NAME JSCompiler_stubMap 1 [source_file: expected0]
                            NAME JSCompiler_unstubMethod_id 1 [source_file: expected0]
                        NAME JSCompiler_unstubMethod_body 1 [source_file: expected0]
        FUNCTION Foo 1 [source_file: expected0]
            NAME Foo 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            ASSIGN 1 [source_file: expected0]
                GETPROP 1 [source_file: expected0]
                    GETPROP 1 [source_file: expected0]
                        NAME Foo 1 [source_file: expected0]
                        STRING prototype 1 [source_file: expected0]
                    STRING baz 1 [source_file: expected0]
                CALL 1 [free_call: 1] [source_file: expected0]
                    NAME JSCompiler_stubMethod 1 [source_file: expected0]
                    NUMBER 1.0 1 [source_file: expected0]
    SCRIPT 1 [synthetic: 1] [source_file: expected1] [input_id: InputId: expected1]
        EXPR_RESULT 1 [source_file: expected1]
            ASSIGN 1 [source_file: expected1]
                GETPROP 1 [source_file: expected1]
                    GETPROP 1 [source_file: expected1]
                        NAME Foo 1 [source_file: expected1]
                        STRING prototype 1 [source_file: expected1]
                    STRING callBaz 1 [source_file: expected1]
                CALL 1 [free_call: 1] [source_file: expected1]
                    NAME JSCompiler_stubMethod 1 [source_file: expected1]
                    NUMBER 0.0 1 [source_file: expected1]
    SCRIPT 1 [synthetic: 1] [source_file: expected2] [input_id: InputId: expected2]
        EXPR_RESULT 1 [source_file: expected2]
            ASSIGN 1 [source_file: expected2]
                GETPROP 1 [source_file: expected2]
                    GETPROP 1 [source_file: expected2]
                        NAME Foo 1 [source_file: expected2]
                        STRING prototype 1 [source_file: expected2]
                    STRING baz 1 [source_file: expected2]
                CALL 1 [free_call: 1] [source_file: expected2]
                    NAME JSCompiler_unstubMethod 1 [source_file: expected2]
                    NUMBER 1.0 1 [source_file: expected2]
                    FUNCTION  1 [source_file: expected2]
                        NAME  1 [source_file: expected2]
                        PARAM_LIST 1 [source_file: expected2]
                        BLOCK 1 [source_file: expected2]
        EXPR_RESULT 1 [source_file: expected2]
            ASSIGN 1 [source_file: expected2]
                GETPROP 1 [source_file: expected2]
                    GETPROP 1 [source_file: expected2]
                        NAME Foo 1 [source_file: expected2]
                        STRING prototype 1 [source_file: expected2]
                    STRING callBaz 1 [source_file: expected2]
                CALL 1 [free_call: 1] [source_file: expected2]
                    NAME JSCompiler_unstubMethod 1 [source_file: expected2]
                    NUMBER 0.0 1 [source_file: expected2]
                    FUNCTION  1 [source_file: expected2]
                        NAME  1 [source_file: expected2]
                        PARAM_LIST 1 [source_file: expected2]
                        BLOCK 1 [source_file: expected2]
                            EXPR_RESULT 1 [source_file: expected2]
                                CALL 1 [source_file: expected2]
                                    GETPROP 1 [source_file: expected2]
                                        THIS 1 [source_file: expected2]
                                        STRING baz 1 [source_file: expected2]
        EXPR_RESULT 1 [source_file: expected2]
            CALL 1 [source_file: expected2]
                GETPROP 1 [source_file: expected2]
                    NEW 1 [source_file: expected2]
                        NAME Foo 1 [source_file: expected2]
                    STRING callBaz 1 [source_file: expected2]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: i0] [input_id: InputId: i0]
        VAR 1 [source_file:  [synthetic:1] ]
            NAME JSCompiler_stubMap 1 [source_file:  [synthetic:1] ]
                ARRAYLIT 1 [source_file:  [synthetic:1] ]
        FUNCTION JSCompiler_stubMethod 1 [source_file:  [synthetic:1] ]
            NAME JSCompiler_stubMethod 1 [source_file:  [synthetic:1] ]
            PARAM_LIST 1 [source_file:  [synthetic:1] ]
                NAME JSCompiler_stubMethod_id 1 [source_file:  [synthetic:1] ]
            BLOCK 1 [source_file:  [synthetic:1] ]
                RETURN 1 [source_file:  [synthetic:1] ]
                    FUNCTION  1 [source_file:  [synthetic:1] ]
                        NAME  1 [source_file:  [synthetic:1] ]
                        PARAM_LIST 1 [source_file:  [synthetic:1] ]
                        BLOCK 1 [source_file:  [synthetic:1] ]
                            RETURN 1 [source_file:  [synthetic:1] ]
                                CALL 1 [source_file:  [synthetic:1] ]
                                    GETPROP 1 [source_file:  [synthetic:1] ]
                                        GETELEM 1 [source_file:  [synthetic:1] ]
                                            NAME JSCompiler_stubMap 1 [source_file:  [synthetic:1] ]
                                            NAME JSCompiler_stubMethod_id 1 [source_file:  [synthetic:1] ]
                                        STRING apply 1 [source_file:  [synthetic:1] ]
                                    THIS 1 [source_file:  [synthetic:1] ]
                                    NAME arguments 1 [source_file:  [synthetic:1] ]
        FUNCTION JSCompiler_unstubMethod 1 [source_file:  [synthetic:1] ]
            NAME JSCompiler_unstubMethod 1 [source_file:  [synthetic:1] ]
            PARAM_LIST 1 [source_file:  [synthetic:1] ]
                NAME JSCompiler_unstubMethod_id 1 [source_file:  [synthetic:1] ]
                NAME JSCompiler_unstubMethod_body 1 [source_file:  [synthetic:1] ]
            BLOCK 1 [source_file:  [synthetic:1] ]
                RETURN 1 [source_file:  [synthetic:1] ]
                    ASSIGN 1 [source_file:  [synthetic:1] ]
                        GETELEM 1 [source_file:  [synthetic:1] ]
                            NAME JSCompiler_stubMap 1 [source_file:  [synthetic:1] ]
                            NAME JSCompiler_unstubMethod_id 1 [source_file:  [synthetic:1] ]
                        NAME JSCompiler_unstubMethod_body 1 [source_file:  [synthetic:1] ]
        FUNCTION Foo 1 [source_file: i0]
            NAME Foo 1 [source_file: i0]
            PARAM_LIST 1 [source_file: i0]
            BLOCK 1 [source_file: i0]
        EXPR_RESULT 1 [source_file: i0]
            ASSIGN 1 [source_file: i0]
                GETPROP 1 [source_file: i0]
                    GETPROP 1 [source_file: i0]
                        NAME Foo 1 [source_file: i0]
                        STRING prototype 1 [source_file: i0]
                    STRING baz 1 [source_file: i0]
                CALL 1 [free_call: 1] [source_file: i0]
                    NAME JSCompiler_stubMethod 1 [source_file: i0]
                    NUMBER 0.0 1 [source_file: i0]
    SCRIPT 1 [synthetic: 1] [source_file: i1] [input_id: InputId: i1]
        EXPR_RESULT 1 [source_file: i1]
            ASSIGN 1 [source_file: i1]
                GETPROP 1 [source_file: i1]
                    GETPROP 1 [source_file: i1]
                        NAME Foo 1 [source_file: i1]
                        STRING prototype 1 [source_file: i1]
                    STRING callBaz 1 [source_file: i1]
                CALL 1 [free_call: 1] [source_file: i1]
                    NAME JSCompiler_stubMethod 1 [source_file: i1]
                    NUMBER 1.0 1 [source_file: i1]
    SCRIPT 1 [synthetic: 1] [source_file: i2] [input_id: InputId: i2]
        EXPR_RESULT 1 [source_file: i1]
            ASSIGN 1 [source_file: i1]
                GETPROP 1 [source_file: i1]
                    GETPROP 1 [source_file: i1]
                        NAME Foo 1 [source_file: i1]
                        STRING prototype 1 [source_file: i1]
                    STRING callBaz 1 [source_file: i1]
                CALL 1 [free_call: 1] [source_file: i1]
                    NAME JSCompiler_unstubMethod 1 [source_file: i1]
                    NUMBER 1.0 1 [source_file: i1]
                    FUNCTION  1 [source_file: i1]
                        NAME  1 [source_file: i1]
                        PARAM_LIST 1 [source_file: i1]
                        BLOCK 1 [source_file: i1]
                            EXPR_RESULT 1 [source_file: i1]
                                CALL 1 [source_file: i1]
                                    GETPROP 1 [source_file: i1]
                                        THIS 1 [source_file: i1]
                                        STRING baz 1 [source_file: i1]
        EXPR_RESULT 1 [source_file: i0]
            ASSIGN 1 [source_file: i0]
                GETPROP 1 [source_file: i0]
                    GETPROP 1 [source_file: i0]
                        NAME Foo 1 [source_file: i0]
                        STRING prototype 1 [source_file: i0]
                    STRING baz 1 [source_file: i0]
                CALL 1 [free_call: 1] [source_file: i0]
                    NAME JSCompiler_unstubMethod 1 [source_file: i0]
                    NUMBER 0.0 1 [source_file: i0]
                    FUNCTION  1 [source_file: i0]
                        NAME  1 [source_file: i0]
                        PARAM_LIST 1 [source_file: i0]
                        BLOCK 1 [source_file: i0]
        EXPR_RESULT 1 [source_file: i2]
            CALL 1 [source_file: i2]
                GETPROP 1 [source_file: i2]
                    NEW 1 [source_file: i2]
                        NAME Foo 1 [source_file: i2]
                    STRING callBaz 1 [source_file: i2]


Subtree1: NUMBER 1.0 1 [source_file: expected0]


Subtree2: NUMBER 0.0 1 [source_file: i0]
]
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_stubMap=[];function JSCompiler_stubMethod(JSCompiler_stubMethod_id){return function(){return JSCompiler_stubMap[JSCompiler_stubMethod_id].apply(this,arguments)}}function JSCompiler_unstubMethod(JSCompiler_unstubMethod_id,JSCompiler_unstubMethod_body){return JSCompiler_stubMap[JSCompiler_unstubMethod_id]=JSCompiler_unstubMethod_body}function Foo(){}Foo.prototype.baz=JSCompiler_stubMethod(1);Foo.prototype.callBaz=JSCompiler_stubMethod(0);Foo.prototype.baz=JSCompiler_unstubMethod(1,function(){});
Foo.prototype.callBaz=JSCompiler_unstubMethod(0,function(){this.baz()});(new Foo).callBaz()
Result: var JSCompiler_stubMap=[];function JSCompiler_stubMethod(JSCompiler_stubMethod_id){return function(){return JSCompiler_stubMap[JSCompiler_stubMethod_id].apply(this,arguments)}}function JSCompiler_unstubMethod(JSCompiler_unstubMethod_id,JSCompiler_unstubMethod_body){return JSCompiler_stubMap[JSCompiler_unstubMethod_id]=JSCompiler_unstubMethod_body}function Foo(){}Foo.prototype.baz=JSCompiler_stubMethod(0);Foo.prototype.callBaz=JSCompiler_stubMethod(1);
Foo.prototype.callBaz=JSCompiler_unstubMethod(1,function(){this.baz()});Foo.prototype.baz=JSCompiler_unstubMethod(0,function(){});(new Foo).callBaz()
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        VAR 1 [source_file: expected0]
            NAME JSCompiler_stubMap 1 [source_file: expected0]
                ARRAYLIT 1 [source_file: expected0]
        FUNCTION JSCompiler_stubMethod 1 [source_file: expected0]
            NAME JSCompiler_stubMethod 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
                NAME JSCompiler_stubMethod_id 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                RETURN 1 [source_file: expected0]
                    FUNCTION  1 [source_file: expected0]
                        NAME  1 [source_file: expected0]
                        PARAM_LIST 1 [source_file: expected0]
                        BLOCK 1 [source_file: expected0]
                            RETURN 1 [source_file: expected0]
                                CALL 1 [source_file: expected0]
                                    GETPROP 1 [source_file: expected0]
                                        GETELEM 1 [source_file: expected0]
                                            NAME JSCompiler_stubMap 1 [source_file: expected0]
                                            NAME JSCompiler_stubMethod_id 1 [source_file: expected0]
                                        STRING apply 1 [source_file: expected0]
                                    THIS 1 [source_file: expected0]
                                    NAME arguments 1 [source_file: expected0]
        FUNCTION JSCompiler_unstubMethod 1 [source_file: expected0]
            NAME JSCompiler_unstubMethod 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
                NAME JSCompiler_unstubMethod_id 1 [source_file: expected0]
                NAME JSCompiler_unstubMethod_body 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                RETURN 1 [source_file: expected0]
                    ASSIGN 1 [source_file: expected0]
                        GETELEM 1 [source_file: expected0]
                            NAME JSCompiler_stubMap 1 [source_file: expected0]
                            NAME JSCompiler_unstubMethod_id 1 [source_file: expected0]
                        NAME JSCompiler_unstubMethod_body 1 [source_file: expected0]
        FUNCTION Foo 1 [source_file: expected0]
            NAME Foo 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            ASSIGN 1 [source_file: expected0]
                GETPROP 1 [source_file: expected0]
                    GETPROP 1 [source_file: expected0]
                        NAME Foo 1 [source_file: expected0]
                        STRING prototype 1 [source_file: expected0]
                    STRING baz 1 [source_file: expected0]
                CALL 1 [free_call: 1] [source_file: expected0]
                    NAME JSCompiler_stubMethod 1 [source_file: expected0]
                    NUMBER 1.0 1 [source_file: expected0]
    SCRIPT 1 [synthetic: 1] [source_file: expected1] [input_id: InputId: expected1]
        EXPR_RESULT 1 [source_file: expected1]
            ASSIGN 1 [source_file: expected1]
                GETPROP 1 [source_file: expected1]
                    GETPROP 1 [source_file: expected1]
                        NAME Foo 1 [source_file: expected1]
                        STRING prototype 1 [source_file: expected1]
                    STRING callBaz 1 [source_file: expected1]
                CALL 1 [free_call: 1] [source_file: expected1]
                    NAME JSCompiler_stubMethod 1 [source_file: expected1]
                    NUMBER 0.0 1 [source_file: expected1]
    SCRIPT 1 [synthetic: 1] [source_file: expected2] [input_id: InputId: expected2]
        EXPR_RESULT 1 [source_file: expected2]
            ASSIGN 1 [source_file: expected2]
                GETPROP 1 [source_file: expected2]
                    GETPROP 1 [source_file: expected2]
                        NAME Foo 1 [source_file: expected2]
                        STRING prototype 1 [source_file: expected2]
                    STRING baz 1 [source_file: expected2]
                CALL 1 [free_call: 1] [source_file: expected2]
                    NAME JSCompiler_unstubMethod 1 [source_file: expected2]
                    NUMBER 1.0 1 [source_file: expected2]
                    FUNCTION  1 [source_file: expected2]
                        NAME  1 [source_file: expected2]
                        PARAM_LIST 1 [source_file: expected2]
                        BLOCK 1 [source_file: expected2]
        EXPR_RESULT 1 [source_file: expected2]
            ASSIGN 1 [source_file: expected2]
                GETPROP 1 [source_file: expected2]
                    GETPROP 1 [source_file: expected2]
                        NAME Foo 1 [source_file: expected2]
                        STRING prototype 1 [source_file: expected2]
                    STRING callBaz 1 [source_file: expected2]
                CALL 1 [free_call: 1] [source_file: expected2]
                    NAME JSCompiler_unstubMethod 1 [source_file: expected2]
                    NUMBER 0.0 1 [source_file: expected2]
                    FUNCTION  1 [source_file: expected2]
                        NAME  1 [source_file: expected2]
                        PARAM_LIST 1 [source_file: expected2]
                        BLOCK 1 [source_file: expected2]
                            EXPR_RESULT 1 [source_file: expected2]
                                CALL 1 [source_file: expected2]
                                    GETPROP 1 [source_file: expected2]
                                        THIS 1 [source_file: expected2]
                                        STRING baz 1 [source_file: expected2]
        EXPR_RESULT 1 [source_file: expected2]
            CALL 1 [source_file: expected2]
                GETPROP 1 [source_file: expected2]
                    NEW 1 [source_file: expected2]
                        NAME Foo 1 [source_file: expected2]
                    STRING callBaz 1 [source_file: expected2]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: i0] [input_id: InputId: i0]
        VAR 1 [source_file:  [synthetic:1] ]
            NAME JSCompiler_stubMap 1 [source_file:  [synthetic:1] ]
                ARRAYLIT 1 [source_file:  [synthetic:1] ]
        FUNCTION JSCompiler_stubMethod 1 [source_file:  [synthetic:1] ]
            NAME JSCompiler_stubMethod 1 [source_file:  [synthetic:1] ]
            PARAM_LIST 1 [source_file:  [synthetic:1] ]
                NAME JSCompiler_stubMethod_id 1 [source_file:  [synthetic:1] ]
            BLOCK 1 [source_file:  [synthetic:1] ]
                RETURN 1 [source_file:  [synthetic:1] ]
                    FUNCTION  1 [source_file:  [synthetic:1] ]
                        NAME  1 [source_file:  [synthetic:1] ]
                        PARAM_LIST 1 [source_file:  [synthetic:1] ]
                        BLOCK 1 [source_file:  [synthetic:1] ]
                            RETURN 1 [source_file:  [synthetic:1] ]
                                CALL 1 [source_file:  [synthetic:1] ]
                                    GETPROP 1 [source_file:  [synthetic:1] ]
                                        GETELEM 1 [source_file:  [synthetic:1] ]
                                            NAME JSCompiler_stubMap 1 [source_file:  [synthetic:1] ]
                                            NAME JSCompiler_stubMethod_id 1 [source_file:  [synthetic:1] ]
                                        STRING apply 1 [source_file:  [synthetic:1] ]
                                    THIS 1 [source_file:  [synthetic:1] ]
                                    NAME arguments 1 [source_file:  [synthetic:1] ]
        FUNCTION JSCompiler_unstubMethod 1 [source_file:  [synthetic:1] ]
            NAME JSCompiler_unstubMethod 1 [source_file:  [synthetic:1] ]
            PARAM_LIST 1 [source_file:  [synthetic:1] ]
                NAME JSCompiler_unstubMethod_id 1 [source_file:  [synthetic:1] ]
                NAME JSCompiler_unstubMethod_body 1 [source_file:  [synthetic:1] ]
            BLOCK 1 [source_file:  [synthetic:1] ]
                RETURN 1 [source_file:  [synthetic:1] ]
                    ASSIGN 1 [source_file:  [synthetic:1] ]
                        GETELEM 1 [source_file:  [synthetic:1] ]
                            NAME JSCompiler_stubMap 1 [source_file:  [synthetic:1] ]
                            NAME JSCompiler_unstubMethod_id 1 [source_file:  [synthetic:1] ]
                        NAME JSCompiler_unstubMethod_body 1 [source_file:  [synthetic:1] ]
        FUNCTION Foo 1 [source_file: i0]
            NAME Foo 1 [source_file: i0]
            PARAM_LIST 1 [source_file: i0]
            BLOCK 1 [source_file: i0]
        EXPR_RESULT 1 [source_file: i0]
            ASSIGN 1 [source_file: i0]
                GETPROP 1 [source_file: i0]
                    GETPROP 1 [source_file: i0]
                        NAME Foo 1 [source_file: i0]
                        STRING prototype 1 [source_file: i0]
                    STRING baz 1 [source_file: i0]
                CALL 1 [free_call: 1] [source_file: i0]
                    NAME JSCompiler_stubMethod 1 [source_file: i0]
                    NUMBER 0.0 1 [source_file: i0]
    SCRIPT 1 [synthetic: 1] [source_file: i1] [input_id: InputId: i1]
        EXPR_RESULT 1 [source_file: i1]
            ASSIGN 1 [source_file: i1]
                GETPROP 1 [source_file: i1]
                    GETPROP 1 [source_file: i1]
                        NAME Foo 1 [source_file: i1]
                        STRING prototype 1 [source_file: i1]
                    STRING callBaz 1 [source_file: i1]
                CALL 1 [free_call: 1] [source_file: i1]
                    NAME JSCompiler_stubMethod 1 [source_file: i1]
                    NUMBER 1.0 1 [source_file: i1]
    SCRIPT 1 [synthetic: 1] [source_file: i2] [input_id: InputId: i2]
        EXPR_RESULT 1 [source_file: i1]
            ASSIGN 1 [source_file: i1]
                GETPROP 1 [source_file: i1]
                    GETPROP 1 [source_file: i1]
                        NAME Foo 1 [source_file: i1]
                        STRING prototype 1 [source_file: i1]
                    STRING callBaz 1 [source_file: i1]
                CALL 1 [free_call: 1] [source_file: i1]
                    NAME JSCompiler_unstubMethod 1 [source_file: i1]
                    NUMBER 1.0 1 [source_file: i1]
                    FUNCTION  1 [source_file: i1]
                        NAME  1 [source_file: i1]
                        PARAM_LIST 1 [source_file: i1]
                        BLOCK 1 [source_file: i1]
                            EXPR_RESULT 1 [source_file: i1]
                                CALL 1 [source_file: i1]
                                    GETPROP 1 [source_file: i1]
                                        THIS 1 [source_file: i1]
                                        STRING baz 1 [source_file: i1]
        EXPR_RESULT 1 [source_file: i0]
            ASSIGN 1 [source_file: i0]
                GETPROP 1 [source_file: i0]
                    GETPROP 1 [source_file: i0]
                        NAME Foo 1 [source_file: i0]
                        STRING prototype 1 [source_file: i0]
                    STRING baz 1 [source_file: i0]
                CALL 1 [free_call: 1] [source_file: i0]
                    NAME JSCompiler_unstubMethod 1 [source_file: i0]
                    NUMBER 0.0 1 [source_file: i0]
                    FUNCTION  1 [source_file: i0]
                        NAME  1 [source_file: i0]
                        PARAM_LIST 1 [source_file: i0]
                        BLOCK 1 [source_file: i0]
        EXPR_RESULT 1 [source_file: i2]
            CALL 1 [source_file: i2]
                GETPROP 1 [source_file: i2]
                    NEW 1 [source_file: i2]
                        NAME Foo 1 [source_file: i2]
                    STRING callBaz 1 [source_file: i2]


Subtree1: NUMBER 1.0 1 [source_file: expected0]


Subtree2: NUMBER 0.0 1 [source_file: i0]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:928)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:736)

junit.framework.AssertionFailedError: 
Expected: var JSCompiler_stubMap=[];function JSCompiler_stubMethod(JSCompiler_stubMethod_id){return function(){return JSCompiler_stubMap[JSCompiler_stubMethod_id].apply(this,arguments)}}function JSCompiler_unstubMethod(JSCompiler_unstubMethod_id,JSCompiler_unstubMethod_body){return JSCompiler_stubMap[JSCompiler_unstubMethod_id]=JSCompiler_unstubMethod_body}function Foo(){}Foo.prototype.b1=JSCompiler_stubMethod(0);Foo.prototype.b1=JSCompiler_unstubMethod(0,function(){Foo.prototype.b2=JSCompiler_stubMethod(1)});
var y=new Foo;y.b1();Foo.prototype.b2=JSCompiler_unstubMethod(1,function(){var x=1;Foo.prototype.b3=function(){x}});y=new Foo;z.b2();y=new Foo;z.b3()
Result: var JSCompiler_stubMap=[];function JSCompiler_stubMethod(JSCompiler_stubMethod_id){return function(){return JSCompiler_stubMap[JSCompiler_stubMethod_id].apply(this,arguments)}}function JSCompiler_unstubMethod(JSCompiler_unstubMethod_id,JSCompiler_unstubMethod_body){return JSCompiler_stubMap[JSCompiler_unstubMethod_id]=JSCompiler_unstubMethod_body}function Foo(){}Foo.prototype.b1=JSCompiler_stubMethod(1);Foo.prototype.b1=JSCompiler_unstubMethod(1,function(){Foo.prototype.b2=JSCompiler_stubMethod(0)});
var y=new Foo;y.b1();Foo.prototype.b2=JSCompiler_unstubMethod(0,function(){var x=1;Foo.prototype.b3=function(){x}});y=new Foo;z.b2();y=new Foo;z.b3()
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        VAR 1 [source_file: expected0]
            NAME JSCompiler_stubMap 1 [source_file: expected0]
                ARRAYLIT 1 [source_file: expected0]
        FUNCTION JSCompiler_stubMethod 1 [source_file: expected0]
            NAME JSCompiler_stubMethod 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
                NAME JSCompiler_stubMethod_id 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                RETURN 1 [source_file: expected0]
                    FUNCTION  1 [source_file: expected0]
                        NAME  1 [source_file: expected0]
                        PARAM_LIST 1 [source_file: expected0]
                        BLOCK 1 [source_file: expected0]
                            RETURN 1 [source_file: expected0]
                                CALL 1 [source_file: expected0]
                                    GETPROP 1 [source_file: expected0]
                                        GETELEM 1 [source_file: expected0]
                                            NAME JSCompiler_stubMap 1 [source_file: expected0]
                                            NAME JSCompiler_stubMethod_id 1 [source_file: expected0]
                                        STRING apply 1 [source_file: expected0]
                                    THIS 1 [source_file: expected0]
                                    NAME arguments 1 [source_file: expected0]
        FUNCTION JSCompiler_unstubMethod 1 [source_file: expected0]
            NAME JSCompiler_unstubMethod 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
                NAME JSCompiler_unstubMethod_id 1 [source_file: expected0]
                NAME JSCompiler_unstubMethod_body 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                RETURN 1 [source_file: expected0]
                    ASSIGN 1 [source_file: expected0]
                        GETELEM 1 [source_file: expected0]
                            NAME JSCompiler_stubMap 1 [source_file: expected0]
                            NAME JSCompiler_unstubMethod_id 1 [source_file: expected0]
                        NAME JSCompiler_unstubMethod_body 1 [source_file: expected0]
        FUNCTION Foo 1 [source_file: expected0]
            NAME Foo 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            ASSIGN 1 [source_file: expected0]
                GETPROP 1 [source_file: expected0]
                    GETPROP 1 [source_file: expected0]
                        NAME Foo 1 [source_file: expected0]
                        STRING prototype 1 [source_file: expected0]
                    STRING b1 1 [source_file: expected0]
                CALL 1 [free_call: 1] [source_file: expected0]
                    NAME JSCompiler_stubMethod 1 [source_file: expected0]
                    NUMBER 0.0 1 [source_file: expected0]
    SCRIPT 1 [synthetic: 1] [source_file: expected1] [input_id: InputId: expected1]
        EXPR_RESULT 1 [source_file: expected1]
            ASSIGN 1 [source_file: expected1]
                GETPROP 1 [source_file: expected1]
                    GETPROP 1 [source_file: expected1]
                        NAME Foo 1 [source_file: expected1]
                        STRING prototype 1 [source_file: expected1]
                    STRING b1 1 [source_file: expected1]
                CALL 1 [free_call: 1] [source_file: expected1]
                    NAME JSCompiler_unstubMethod 1 [source_file: expected1]
                    NUMBER 0.0 1 [source_file: expected1]
                    FUNCTION  1 [source_file: expected1]
                        NAME  1 [source_file: expected1]
                        PARAM_LIST 1 [source_file: expected1]
                        BLOCK 1 [source_file: expected1]
                            EXPR_RESULT 1 [source_file: expected1]
                                ASSIGN 1 [source_file: expected1]
                                    GETPROP 1 [source_file: expected1]
                                        GETPROP 1 [source_file: expected1]
                                            NAME Foo 1 [source_file: expected1]
                                            STRING prototype 1 [source_file: expected1]
                                        STRING b2 1 [source_file: expected1]
                                    CALL 1 [free_call: 1] [source_file: expected1]
                                        NAME JSCompiler_stubMethod 1 [source_file: expected1]
                                        NUMBER 1.0 1 [source_file: expected1]
        VAR 1 [source_file: expected1]
            NAME y 1 [source_file: expected1]
                NEW 1 [source_file: expected1]
                    NAME Foo 1 [source_file: expected1]
        EXPR_RESULT 1 [source_file: expected1]
            CALL 1 [source_file: expected1]
                GETPROP 1 [source_file: expected1]
                    NAME y 1 [source_file: expected1]
                    STRING b1 1 [source_file: expected1]
    SCRIPT 1 [synthetic: 1] [source_file: expected2] [input_id: InputId: expected2]
        EXPR_RESULT 1 [source_file: expected2]
            ASSIGN 1 [source_file: expected2]
                GETPROP 1 [source_file: expected2]
                    GETPROP 1 [source_file: expected2]
                        NAME Foo 1 [source_file: expected2]
                        STRING prototype 1 [source_file: expected2]
                    STRING b2 1 [source_file: expected2]
                CALL 1 [free_call: 1] [source_file: expected2]
                    NAME JSCompiler_unstubMethod 1 [source_file: expected2]
                    NUMBER 1.0 1 [source_file: expected2]
                    FUNCTION  1 [source_file: expected2]
                        NAME  1 [source_file: expected2]
                        PARAM_LIST 1 [source_file: expected2]
                        BLOCK 1 [source_file: expected2]
                            VAR 1 [source_file: expected2]
                                NAME x 1 [source_file: expected2]
                                    NUMBER 1.0 1 [source_file: expected2]
                            EXPR_RESULT 1 [source_file: expected2]
                                ASSIGN 1 [source_file: expected2]
                                    GETPROP 1 [source_file: expected2]
                                        GETPROP 1 [source_file: expected2]
                                            NAME Foo 1 [source_file: expected2]
                                            STRING prototype 1 [source_file: expected2]
                                        STRING b3 1 [source_file: expected2]
                                    FUNCTION  1 [source_file: expected2]
                                        NAME  1 [source_file: expected2]
                                        PARAM_LIST 1 [source_file: expected2]
                                        BLOCK 1 [source_file: expected2]
                                            EXPR_RESULT 1 [source_file: expected2]
                                                NAME x 1 [source_file: expected2]
        EXPR_RESULT 1 [source_file: expected2]
            ASSIGN 1 [source_file: expected2]
                NAME y 1 [source_file: expected2]
                NEW 1 [source_file: expected2]
                    NAME Foo 1 [source_file: expected2]
        EXPR_RESULT 1 [source_file: expected2]
            CALL 1 [source_file: expected2]
                GETPROP 1 [source_file: expected2]
                    NAME z 1 [source_file: expected2]
                    STRING b2 1 [source_file: expected2]
    SCRIPT 1 [synthetic: 1] [source_file: expected3] [input_id: InputId: expected3]
        EXPR_RESULT 1 [source_file: expected3]
            ASSIGN 1 [source_file: expected3]
                NAME y 1 [source_file: expected3]
                NEW 1 [source_file: expected3]
                    NAME Foo 1 [source_file: expected3]
        EXPR_RESULT 1 [source_file: expected3]
            CALL 1 [source_file: expected3]
                GETPROP 1 [source_file: expected3]
                    NAME z 1 [source_file: expected3]
                    STRING b3 1 [source_file: expected3]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: i0] [input_id: InputId: i0]
        VAR 1 [source_file:  [synthetic:1] ]
            NAME JSCompiler_stubMap 1 [source_file:  [synthetic:1] ]
                ARRAYLIT 1 [source_file:  [synthetic:1] ]
        FUNCTION JSCompiler_stubMethod 1 [source_file:  [synthetic:1] ]
            NAME JSCompiler_stubMethod 1 [source_file:  [synthetic:1] ]
            PARAM_LIST 1 [source_file:  [synthetic:1] ]
                NAME JSCompiler_stubMethod_id 1 [source_file:  [synthetic:1] ]
            BLOCK 1 [source_file:  [synthetic:1] ]
                RETURN 1 [source_file:  [synthetic:1] ]
                    FUNCTION  1 [source_file:  [synthetic:1] ]
                        NAME  1 [source_file:  [synthetic:1] ]
                        PARAM_LIST 1 [source_file:  [synthetic:1] ]
                        BLOCK 1 [source_file:  [synthetic:1] ]
                            RETURN 1 [source_file:  [synthetic:1] ]
                                CALL 1 [source_file:  [synthetic:1] ]
                                    GETPROP 1 [source_file:  [synthetic:1] ]
                                        GETELEM 1 [source_file:  [synthetic:1] ]
                                            NAME JSCompiler_stubMap 1 [source_file:  [synthetic:1] ]
                                            NAME JSCompiler_stubMethod_id 1 [source_file:  [synthetic:1] ]
                                        STRING apply 1 [source_file:  [synthetic:1] ]
                                    THIS 1 [source_file:  [synthetic:1] ]
                                    NAME arguments 1 [source_file:  [synthetic:1] ]
        FUNCTION JSCompiler_unstubMethod 1 [source_file:  [synthetic:1] ]
            NAME JSCompiler_unstubMethod 1 [source_file:  [synthetic:1] ]
            PARAM_LIST 1 [source_file:  [synthetic:1] ]
                NAME JSCompiler_unstubMethod_id 1 [source_file:  [synthetic:1] ]
                NAME JSCompiler_unstubMethod_body 1 [source_file:  [synthetic:1] ]
            BLOCK 1 [source_file:  [synthetic:1] ]
                RETURN 1 [source_file:  [synthetic:1] ]
                    ASSIGN 1 [source_file:  [synthetic:1] ]
                        GETELEM 1 [source_file:  [synthetic:1] ]
                            NAME JSCompiler_stubMap 1 [source_file:  [synthetic:1] ]
                            NAME JSCompiler_unstubMethod_id 1 [source_file:  [synthetic:1] ]
                        NAME JSCompiler_unstubMethod_body 1 [source_file:  [synthetic:1] ]
        FUNCTION Foo 1 [source_file: i0]
            NAME Foo 1 [source_file: i0]
            PARAM_LIST 1 [source_file: i0]
            BLOCK 1 [source_file: i0]
        EXPR_RESULT 1 [source_file: i0]
            ASSIGN 1 [source_file: i0]
                GETPROP 1 [source_file: i0]
                    GETPROP 1 [source_file: i0]
                        NAME Foo 1 [source_file: i0]
                        STRING prototype 1 [source_file: i0]
                    STRING b1 1 [source_file: i0]
                CALL 1 [free_call: 1] [source_file: i0]
                    NAME JSCompiler_stubMethod 1 [source_file: i0]
                    NUMBER 1.0 1 [source_file: i0]
    SCRIPT 1 [synthetic: 1] [source_file: i1] [input_id: InputId: i1]
        EXPR_RESULT 1 [source_file: i0]
            ASSIGN 1 [source_file: i0]
                GETPROP 1 [source_file: i0]
                    GETPROP 1 [source_file: i0]
                        NAME Foo 1 [source_file: i0]
                        STRING prototype 1 [source_file: i0]
                    STRING b1 1 [source_file: i0]
                CALL 1 [free_call: 1] [source_file: i0]
                    NAME JSCompiler_unstubMethod 1 [source_file: i0]
                    NUMBER 1.0 1 [source_file: i0]
                    FUNCTION  1 [source_file: i0]
                        NAME  1 [source_file: i0]
                        PARAM_LIST 1 [source_file: i0]
                        BLOCK 1 [source_file: i0]
                            EXPR_RESULT 1 [source_file: i0]
                                ASSIGN 1 [source_file: i0]
                                    GETPROP 1 [source_file: i0]
                                        GETPROP 1 [source_file: i0]
                                            NAME Foo 1 [source_file: i0]
                                            STRING prototype 1 [source_file: i0]
                                        STRING b2 1 [source_file: i0]
                                    CALL 1 [free_call: 1] [source_file: i0]
                                        NAME JSCompiler_stubMethod 1 [source_file: i0]
                                        NUMBER 0.0 1 [source_file: i0]
        VAR 1 [source_file: i1]
            NAME y 1 [source_file: i1]
                NEW 1 [source_file: i1]
                    NAME Foo 1 [source_file: i1]
        EXPR_RESULT 1 [source_file: i1]
            CALL 1 [source_file: i1]
                GETPROP 1 [source_file: i1]
                    NAME y 1 [source_file: i1]
                    STRING b1 1 [source_file: i1]
    SCRIPT 1 [synthetic: 1] [source_file: i2] [input_id: InputId: i2]
        EXPR_RESULT 1 [source_file: i0]
            ASSIGN 1 [source_file: i0]
                GETPROP 1 [source_file: i0]
                    GETPROP 1 [source_file: i0]
                        NAME Foo 1 [source_file: i0]
                        STRING prototype 1 [source_file: i0]
                    STRING b2 1 [source_file: i0]
                CALL 1 [free_call: 1] [source_file: i0]
                    NAME JSCompiler_unstubMethod 1 [source_file: i0]
                    NUMBER 0.0 1 [source_file: i0]
                    FUNCTION  1 [source_file: i0]
                        NAME  1 [source_file: i0]
                        PARAM_LIST 1 [source_file: i0]
                        BLOCK 1 [source_file: i0]
                            VAR 1 [source_file: i0]
                                NAME x 1 [source_file: i0]
                                    NUMBER 1.0 1 [source_file: i0]
                            EXPR_RESULT 1 [source_file: i0]
                                ASSIGN 1 [source_file: i0]
                                    GETPROP 1 [source_file: i0]
                                        GETPROP 1 [source_file: i0]
                                            NAME Foo 1 [source_file: i0]
                                            STRING prototype 1 [source_file: i0]
                                        STRING b3 1 [source_file: i0]
                                    FUNCTION  1 [source_file: i0]
                                        NAME  1 [source_file: i0]
                                        PARAM_LIST 1 [source_file: i0]
                                        BLOCK 1 [source_file: i0]
                                            EXPR_RESULT 1 [source_file: i0]
                                                NAME x 1 [source_file: i0]
        EXPR_RESULT 1 [source_file: i2]
            ASSIGN 1 [source_file: i2]
                NAME y 1 [source_file: i2]
                NEW 1 [source_file: i2]
                    NAME Foo 1 [source_file: i2]
        EXPR_RESULT 1 [source_file: i2]
            CALL 1 [source_file: i2]
                GETPROP 1 [source_file: i2]
                    NAME z 1 [source_file: i2]
                    STRING b2 1 [source_file: i2]
    SCRIPT 1 [synthetic: 1] [source_file: i3] [input_id: InputId: i3]
        EXPR_RESULT 1 [source_file: i3]
            ASSIGN 1 [source_file: i3]
                NAME y 1 [source_file: i3]
                NEW 1 [source_file: i3]
                    NAME Foo 1 [source_file: i3]
        EXPR_RESULT 1 [source_file: i3]
            CALL 1 [source_file: i3]
                GETPROP 1 [source_file: i3]
                    NAME z 1 [source_file: i3]
                    STRING b3 1 [source_file: i3]


Subtree1: NUMBER 0.0 1 [source_file: expected0]


Subtree2: NUMBER 1.0 1 [source_file: i0]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:928)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:736)
19:30:08.598 [pool-56-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (9 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testClosureVariableReads3(com.google.javascript.jscomp.CrossModuleMethodMotionTest)
[
Expected: var JSCompiler_stubMap=[];function JSCompiler_stubMethod(JSCompiler_stubMethod_id){return function(){return JSCompiler_stubMap[JSCompiler_stubMethod_id].apply(this,arguments)}}function JSCompiler_unstubMethod(JSCompiler_unstubMethod_id,JSCompiler_unstubMethod_body){return JSCompiler_stubMap[JSCompiler_unstubMethod_id]=JSCompiler_unstubMethod_body}function Foo(){}Foo.prototype.b1=JSCompiler_stubMethod(0);Foo.prototype.b1=JSCompiler_unstubMethod(0,function(){Foo.prototype.b2=JSCompiler_stubMethod(1)});
var y=new Foo;y.b1();Foo.prototype.b2=JSCompiler_unstubMethod(1,function(){var x=1;Foo.prototype.b3=function(){x}});y=new Foo;z.b2();y=new Foo;z.b3()
Result: var JSCompiler_stubMap=[];function JSCompiler_stubMethod(JSCompiler_stubMethod_id){return function(){return JSCompiler_stubMap[JSCompiler_stubMethod_id].apply(this,arguments)}}function JSCompiler_unstubMethod(JSCompiler_unstubMethod_id,JSCompiler_unstubMethod_body){return JSCompiler_stubMap[JSCompiler_unstubMethod_id]=JSCompiler_unstubMethod_body}function Foo(){}Foo.prototype.b1=JSCompiler_stubMethod(1);Foo.prototype.b1=JSCompiler_unstubMethod(1,function(){Foo.prototype.b2=JSCompiler_stubMethod(0)});
var y=new Foo;y.b1();Foo.prototype.b2=JSCompiler_unstubMethod(0,function(){var x=1;Foo.prototype.b3=function(){x}});y=new Foo;z.b2();y=new Foo;z.b3()
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        VAR 1 [source_file: expected0]
            NAME JSCompiler_stubMap 1 [source_file: expected0]
                ARRAYLIT 1 [source_file: expected0]
        FUNCTION JSCompiler_stubMethod 1 [source_file: expected0]
            NAME JSCompiler_stubMethod 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
                NAME JSCompiler_stubMethod_id 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                RETURN 1 [source_file: expected0]
                    FUNCTION  1 [source_file: expected0]
                        NAME  1 [source_file: expected0]
                        PARAM_LIST 1 [source_file: expected0]
                        BLOCK 1 [source_file: expected0]
                            RETURN 1 [source_file: expected0]
                                CALL 1 [source_file: expected0]
                                    GETPROP 1 [source_file: expected0]
                                        GETELEM 1 [source_file: expected0]
                                            NAME JSCompiler_stubMap 1 [source_file: expected0]
                                            NAME JSCompiler_stubMethod_id 1 [source_file: expected0]
                                        STRING apply 1 [source_file: expected0]
                                    THIS 1 [source_file: expected0]
                                    NAME arguments 1 [source_file: expected0]
        FUNCTION JSCompiler_unstubMethod 1 [source_file: expected0]
            NAME JSCompiler_unstubMethod 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
                NAME JSCompiler_unstubMethod_id 1 [source_file: expected0]
                NAME JSCompiler_unstubMethod_body 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                RETURN 1 [source_file: expected0]
                    ASSIGN 1 [source_file: expected0]
                        GETELEM 1 [source_file: expected0]
                            NAME JSCompiler_stubMap 1 [source_file: expected0]
                            NAME JSCompiler_unstubMethod_id 1 [source_file: expected0]
                        NAME JSCompiler_unstubMethod_body 1 [source_file: expected0]
        FUNCTION Foo 1 [source_file: expected0]
            NAME Foo 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            ASSIGN 1 [source_file: expected0]
                GETPROP 1 [source_file: expected0]
                    GETPROP 1 [source_file: expected0]
                        NAME Foo 1 [source_file: expected0]
                        STRING prototype 1 [source_file: expected0]
                    STRING b1 1 [source_file: expected0]
                CALL 1 [free_call: 1] [source_file: expected0]
                    NAME JSCompiler_stubMethod 1 [source_file: expected0]
                    NUMBER 0.0 1 [source_file: expected0]
    SCRIPT 1 [synthetic: 1] [source_file: expected1] [input_id: InputId: expected1]
        EXPR_RESULT 1 [source_file: expected1]
            ASSIGN 1 [source_file: expected1]
                GETPROP 1 [source_file: expected1]
                    GETPROP 1 [source_file: expected1]
                        NAME Foo 1 [source_file: expected1]
                        STRING prototype 1 [source_file: expected1]
                    STRING b1 1 [source_file: expected1]
                CALL 1 [free_call: 1] [source_file: expected1]
                    NAME JSCompiler_unstubMethod 1 [source_file: expected1]
                    NUMBER 0.0 1 [source_file: expected1]
                    FUNCTION  1 [source_file: expected1]
                        NAME  1 [source_file: expected1]
                        PARAM_LIST 1 [source_file: expected1]
                        BLOCK 1 [source_file: expected1]
                            EXPR_RESULT 1 [source_file: expected1]
                                ASSIGN 1 [source_file: expected1]
                                    GETPROP 1 [source_file: expected1]
                                        GETPROP 1 [source_file: expected1]
                                            NAME Foo 1 [source_file: expected1]
                                            STRING prototype 1 [source_file: expected1]
                                        STRING b2 1 [source_file: expected1]
                                    CALL 1 [free_call: 1] [source_file: expected1]
                                        NAME JSCompiler_stubMethod 1 [source_file: expected1]
                                        NUMBER 1.0 1 [source_file: expected1]
        VAR 1 [source_file: expected1]
            NAME y 1 [source_file: expected1]
                NEW 1 [source_file: expected1]
                    NAME Foo 1 [source_file: expected1]
        EXPR_RESULT 1 [source_file: expected1]
            CALL 1 [source_file: expected1]
                GETPROP 1 [source_file: expected1]
                    NAME y 1 [source_file: expected1]
                    STRING b1 1 [source_file: expected1]
    SCRIPT 1 [synthetic: 1] [source_file: expected2] [input_id: InputId: expected2]
        EXPR_RESULT 1 [source_file: expected2]
            ASSIGN 1 [source_file: expected2]
                GETPROP 1 [source_file: expected2]
                    GETPROP 1 [source_file: expected2]
                        NAME Foo 1 [source_file: expected2]
                        STRING prototype 1 [source_file: expected2]
                    STRING b2 1 [source_file: expected2]
                CALL 1 [free_call: 1] [source_file: expected2]
                    NAME JSCompiler_unstubMethod 1 [source_file: expected2]
                    NUMBER 1.0 1 [source_file: expected2]
                    FUNCTION  1 [source_file: expected2]
                        NAME  1 [source_file: expected2]
                        PARAM_LIST 1 [source_file: expected2]
                        BLOCK 1 [source_file: expected2]
                            VAR 1 [source_file: expected2]
                                NAME x 1 [source_file: expected2]
                                    NUMBER 1.0 1 [source_file: expected2]
                            EXPR_RESULT 1 [source_file: expected2]
                                ASSIGN 1 [source_file: expected2]
                                    GETPROP 1 [source_file: expected2]
                                        GETPROP 1 [source_file: expected2]
                                            NAME Foo 1 [source_file: expected2]
                                            STRING prototype 1 [source_file: expected2]
                                        STRING b3 1 [source_file: expected2]
                                    FUNCTION  1 [source_file: expected2]
                                        NAME  1 [source_file: expected2]
                                        PARAM_LIST 1 [source_file: expected2]
                                        BLOCK 1 [source_file: expected2]
                                            EXPR_RESULT 1 [source_file: expected2]
                                                NAME x 1 [source_file: expected2]
        EXPR_RESULT 1 [source_file: expected2]
            ASSIGN 1 [source_file: expected2]
                NAME y 1 [source_file: expected2]
                NEW 1 [source_file: expected2]
                    NAME Foo 1 [source_file: expected2]
        EXPR_RESULT 1 [source_file: expected2]
            CALL 1 [source_file: expected2]
                GETPROP 1 [source_file: expected2]
                    NAME z 1 [source_file: expected2]
                    STRING b2 1 [source_file: expected2]
    SCRIPT 1 [synthetic: 1] [source_file: expected3] [input_id: InputId: expected3]
        EXPR_RESULT 1 [source_file: expected3]
            ASSIGN 1 [source_file: expected3]
                NAME y 1 [source_file: expected3]
                NEW 1 [source_file: expected3]
                    NAME Foo 1 [source_file: expected3]
        EXPR_RESULT 1 [source_file: expected3]
            CALL 1 [source_file: expected3]
                GETPROP 1 [source_file: expected3]
                    NAME z 1 [source_file: expected3]
                    STRING b3 1 [source_file: expected3]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: i0] [input_id: InputId: i0]
        VAR 1 [source_file:  [synthetic:1] ]
            NAME JSCompiler_stubMap 1 [source_file:  [synthetic:1] ]
                ARRAYLIT 1 [source_file:  [synthetic:1] ]
        FUNCTION JSCompiler_stubMethod 1 [source_file:  [synthetic:1] ]
            NAME JSCompiler_stubMethod 1 [source_file:  [synthetic:1] ]
            PARAM_LIST 1 [source_file:  [synthetic:1] ]
                NAME JSCompiler_stubMethod_id 1 [source_file:  [synthetic:1] ]
            BLOCK 1 [source_file:  [synthetic:1] ]
                RETURN 1 [source_file:  [synthetic:1] ]
                    FUNCTION  1 [source_file:  [synthetic:1] ]
                        NAME  1 [source_file:  [synthetic:1] ]
                        PARAM_LIST 1 [source_file:  [synthetic:1] ]
                        BLOCK 1 [source_file:  [synthetic:1] ]
                            RETURN 1 [source_file:  [synthetic:1] ]
                                CALL 1 [source_file:  [synthetic:1] ]
                                    GETPROP 1 [source_file:  [synthetic:1] ]
                                        GETELEM 1 [source_file:  [synthetic:1] ]
                                            NAME JSCompiler_stubMap 1 [source_file:  [synthetic:1] ]
                                            NAME JSCompiler_stubMethod_id 1 [source_file:  [synthetic:1] ]
                                        STRING apply 1 [source_file:  [synthetic:1] ]
                                    THIS 1 [source_file:  [synthetic:1] ]
                                    NAME arguments 1 [source_file:  [synthetic:1] ]
        FUNCTION JSCompiler_unstubMethod 1 [source_file:  [synthetic:1] ]
            NAME JSCompiler_unstubMethod 1 [source_file:  [synthetic:1] ]
            PARAM_LIST 1 [source_file:  [synthetic:1] ]
                NAME JSCompiler_unstubMethod_id 1 [source_file:  [synthetic:1] ]
                NAME JSCompiler_unstubMethod_body 1 [source_file:  [synthetic:1] ]
            BLOCK 1 [source_file:  [synthetic:1] ]
                RETURN 1 [source_file:  [synthetic:1] ]
                    ASSIGN 1 [source_file:  [synthetic:1] ]
                        GETELEM 1 [source_file:  [synthetic:1] ]
                            NAME JSCompiler_stubMap 1 [source_file:  [synthetic:1] ]
                            NAME JSCompiler_unstubMethod_id 1 [source_file:  [synthetic:1] ]
                        NAME JSCompiler_unstubMethod_body 1 [source_file:  [synthetic:1] ]
        FUNCTION Foo 1 [source_file: i0]
            NAME Foo 1 [source_file: i0]
            PARAM_LIST 1 [source_file: i0]
            BLOCK 1 [source_file: i0]
        EXPR_RESULT 1 [source_file: i0]
            ASSIGN 1 [source_file: i0]
                GETPROP 1 [source_file: i0]
                    GETPROP 1 [source_file: i0]
                        NAME Foo 1 [source_file: i0]
                        STRING prototype 1 [source_file: i0]
                    STRING b1 1 [source_file: i0]
                CALL 1 [free_call: 1] [source_file: i0]
                    NAME JSCompiler_stubMethod 1 [source_file: i0]
                    NUMBER 1.0 1 [source_file: i0]
    SCRIPT 1 [synthetic: 1] [source_file: i1] [input_id: InputId: i1]
        EXPR_RESULT 1 [source_file: i0]
            ASSIGN 1 [source_file: i0]
                GETPROP 1 [source_file: i0]
                    GETPROP 1 [source_file: i0]
                        NAME Foo 1 [source_file: i0]
                        STRING prototype 1 [source_file: i0]
                    STRING b1 1 [source_file: i0]
                CALL 1 [free_call: 1] [source_file: i0]
                    NAME JSCompiler_unstubMethod 1 [source_file: i0]
                    NUMBER 1.0 1 [source_file: i0]
                    FUNCTION  1 [source_file: i0]
                        NAME  1 [source_file: i0]
                        PARAM_LIST 1 [source_file: i0]
                        BLOCK 1 [source_file: i0]
                            EXPR_RESULT 1 [source_file: i0]
                                ASSIGN 1 [source_file: i0]
                                    GETPROP 1 [source_file: i0]
                                        GETPROP 1 [source_file: i0]
                                            NAME Foo 1 [source_file: i0]
                                            STRING prototype 1 [source_file: i0]
                                        STRING b2 1 [source_file: i0]
                                    CALL 1 [free_call: 1] [source_file: i0]
                                        NAME JSCompiler_stubMethod 1 [source_file: i0]
                                        NUMBER 0.0 1 [source_file: i0]
        VAR 1 [source_file: i1]
            NAME y 1 [source_file: i1]
                NEW 1 [source_file: i1]
                    NAME Foo 1 [source_file: i1]
        EXPR_RESULT 1 [source_file: i1]
            CALL 1 [source_file: i1]
                GETPROP 1 [source_file: i1]
                    NAME y 1 [source_file: i1]
                    STRING b1 1 [source_file: i1]
    SCRIPT 1 [synthetic: 1] [source_file: i2] [input_id: InputId: i2]
        EXPR_RESULT 1 [source_file: i0]
            ASSIGN 1 [source_file: i0]
                GETPROP 1 [source_file: i0]
                    GETPROP 1 [source_file: i0]
                        NAME Foo 1 [source_file: i0]
                        STRING prototype 1 [source_file: i0]
                    STRING b2 1 [source_file: i0]
                CALL 1 [free_call: 1] [source_file: i0]
                    NAME JSCompiler_unstubMethod 1 [source_file: i0]
                    NUMBER 0.0 1 [source_file: i0]
                    FUNCTION  1 [source_file: i0]
                        NAME  1 [source_file: i0]
                        PARAM_LIST 1 [source_file: i0]
                        BLOCK 1 [source_file: i0]
                            VAR 1 [source_file: i0]
                                NAME x 1 [source_file: i0]
                                    NUMBER 1.0 1 [source_file: i0]
                            EXPR_RESULT 1 [source_file: i0]
                                ASSIGN 1 [source_file: i0]
                                    GETPROP 1 [source_file: i0]
                                        GETPROP 1 [source_file: i0]
                                            NAME Foo 1 [source_file: i0]
                                            STRING prototype 1 [source_file: i0]
                                        STRING b3 1 [source_file: i0]
                                    FUNCTION  1 [source_file: i0]
                                        NAME  1 [source_file: i0]
                                        PARAM_LIST 1 [source_file: i0]
                                        BLOCK 1 [source_file: i0]
                                            EXPR_RESULT 1 [source_file: i0]
                                                NAME x 1 [source_file: i0]
        EXPR_RESULT 1 [source_file: i2]
            ASSIGN 1 [source_file: i2]
                NAME y 1 [source_file: i2]
                NEW 1 [source_file: i2]
                    NAME Foo 1 [source_file: i2]
        EXPR_RESULT 1 [source_file: i2]
            CALL 1 [source_file: i2]
                GETPROP 1 [source_file: i2]
                    NAME z 1 [source_file: i2]
                    STRING b2 1 [source_file: i2]
    SCRIPT 1 [synthetic: 1] [source_file: i3] [input_id: InputId: i3]
        EXPR_RESULT 1 [source_file: i3]
            ASSIGN 1 [source_file: i3]
                NAME y 1 [source_file: i3]
                NEW 1 [source_file: i3]
                    NAME Foo 1 [source_file: i3]
        EXPR_RESULT 1 [source_file: i3]
            CALL 1 [source_file: i3]
                GETPROP 1 [source_file: i3]
                    NAME z 1 [source_file: i3]
                    STRING b3 1 [source_file: i3]


Subtree1: NUMBER 0.0 1 [source_file: expected0]


Subtree2: NUMBER 1.0 1 [source_file: i0]
]
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_stubMap=[];function JSCompiler_stubMethod(JSCompiler_stubMethod_id){return function(){return JSCompiler_stubMap[JSCompiler_stubMethod_id].apply(this,arguments)}}function JSCompiler_unstubMethod(JSCompiler_unstubMethod_id,JSCompiler_unstubMethod_body){return JSCompiler_stubMap[JSCompiler_unstubMethod_id]=JSCompiler_unstubMethod_body}function Foo(){}Foo.prototype.b1=JSCompiler_stubMethod(0);Foo.prototype.b1=JSCompiler_unstubMethod(0,function(){Foo.prototype.b2=JSCompiler_stubMethod(1)});
var y=new Foo;y.b1();Foo.prototype.b2=JSCompiler_unstubMethod(1,function(){var x=1;Foo.prototype.b3=function(){x}});y=new Foo;z.b2();y=new Foo;z.b3()
Result: var JSCompiler_stubMap=[];function JSCompiler_stubMethod(JSCompiler_stubMethod_id){return function(){return JSCompiler_stubMap[JSCompiler_stubMethod_id].apply(this,arguments)}}function JSCompiler_unstubMethod(JSCompiler_unstubMethod_id,JSCompiler_unstubMethod_body){return JSCompiler_stubMap[JSCompiler_unstubMethod_id]=JSCompiler_unstubMethod_body}function Foo(){}Foo.prototype.b1=JSCompiler_stubMethod(1);Foo.prototype.b1=JSCompiler_unstubMethod(1,function(){Foo.prototype.b2=JSCompiler_stubMethod(0)});
var y=new Foo;y.b1();Foo.prototype.b2=JSCompiler_unstubMethod(0,function(){var x=1;Foo.prototype.b3=function(){x}});y=new Foo;z.b2();y=new Foo;z.b3()
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        VAR 1 [source_file: expected0]
            NAME JSCompiler_stubMap 1 [source_file: expected0]
                ARRAYLIT 1 [source_file: expected0]
        FUNCTION JSCompiler_stubMethod 1 [source_file: expected0]
            NAME JSCompiler_stubMethod 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
                NAME JSCompiler_stubMethod_id 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                RETURN 1 [source_file: expected0]
                    FUNCTION  1 [source_file: expected0]
                        NAME  1 [source_file: expected0]
                        PARAM_LIST 1 [source_file: expected0]
                        BLOCK 1 [source_file: expected0]
                            RETURN 1 [source_file: expected0]
                                CALL 1 [source_file: expected0]
                                    GETPROP 1 [source_file: expected0]
                                        GETELEM 1 [source_file: expected0]
                                            NAME JSCompiler_stubMap 1 [source_file: expected0]
                                            NAME JSCompiler_stubMethod_id 1 [source_file: expected0]
                                        STRING apply 1 [source_file: expected0]
                                    THIS 1 [source_file: expected0]
                                    NAME arguments 1 [source_file: expected0]
        FUNCTION JSCompiler_unstubMethod 1 [source_file: expected0]
            NAME JSCompiler_unstubMethod 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
                NAME JSCompiler_unstubMethod_id 1 [source_file: expected0]
                NAME JSCompiler_unstubMethod_body 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                RETURN 1 [source_file: expected0]
                    ASSIGN 1 [source_file: expected0]
                        GETELEM 1 [source_file: expected0]
                            NAME JSCompiler_stubMap 1 [source_file: expected0]
                            NAME JSCompiler_unstubMethod_id 1 [source_file: expected0]
                        NAME JSCompiler_unstubMethod_body 1 [source_file: expected0]
        FUNCTION Foo 1 [source_file: expected0]
            NAME Foo 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            ASSIGN 1 [source_file: expected0]
                GETPROP 1 [source_file: expected0]
                    GETPROP 1 [source_file: expected0]
                        NAME Foo 1 [source_file: expected0]
                        STRING prototype 1 [source_file: expected0]
                    STRING b1 1 [source_file: expected0]
                CALL 1 [free_call: 1] [source_file: expected0]
                    NAME JSCompiler_stubMethod 1 [source_file: expected0]
                    NUMBER 0.0 1 [source_file: expected0]
    SCRIPT 1 [synthetic: 1] [source_file: expected1] [input_id: InputId: expected1]
        EXPR_RESULT 1 [source_file: expected1]
            ASSIGN 1 [source_file: expected1]
                GETPROP 1 [source_file: expected1]
                    GETPROP 1 [source_file: expected1]
                        NAME Foo 1 [source_file: expected1]
                        STRING prototype 1 [source_file: expected1]
                    STRING b1 1 [source_file: expected1]
                CALL 1 [free_call: 1] [source_file: expected1]
                    NAME JSCompiler_unstubMethod 1 [source_file: expected1]
                    NUMBER 0.0 1 [source_file: expected1]
                    FUNCTION  1 [source_file: expected1]
                        NAME  1 [source_file: expected1]
                        PARAM_LIST 1 [source_file: expected1]
                        BLOCK 1 [source_file: expected1]
                            EXPR_RESULT 1 [source_file: expected1]
                                ASSIGN 1 [source_file: expected1]
                                    GETPROP 1 [source_file: expected1]
                                        GETPROP 1 [source_file: expected1]
                                            NAME Foo 1 [source_file: expected1]
                                            STRING prototype 1 [source_file: expected1]
                                        STRING b2 1 [source_file: expected1]
                                    CALL 1 [free_call: 1] [source_file: expected1]
                                        NAME JSCompiler_stubMethod 1 [source_file: expected1]
                                        NUMBER 1.0 1 [source_file: expected1]
        VAR 1 [source_file: expected1]
            NAME y 1 [source_file: expected1]
                NEW 1 [source_file: expected1]
                    NAME Foo 1 [source_file: expected1]
        EXPR_RESULT 1 [source_file: expected1]
            CALL 1 [source_file: expected1]
                GETPROP 1 [source_file: expected1]
                    NAME y 1 [source_file: expected1]
                    STRING b1 1 [source_file: expected1]
    SCRIPT 1 [synthetic: 1] [source_file: expected2] [input_id: InputId: expected2]
        EXPR_RESULT 1 [source_file: expected2]
            ASSIGN 1 [source_file: expected2]
                GETPROP 1 [source_file: expected2]
                    GETPROP 1 [source_file: expected2]
                        NAME Foo 1 [source_file: expected2]
                        STRING prototype 1 [source_file: expected2]
                    STRING b2 1 [source_file: expected2]
                CALL 1 [free_call: 1] [source_file: expected2]
                    NAME JSCompiler_unstubMethod 1 [source_file: expected2]
                    NUMBER 1.0 1 [source_file: expected2]
                    FUNCTION  1 [source_file: expected2]
                        NAME  1 [source_file: expected2]
                        PARAM_LIST 1 [source_file: expected2]
                        BLOCK 1 [source_file: expected2]
                            VAR 1 [source_file: expected2]
                                NAME x 1 [source_file: expected2]
                                    NUMBER 1.0 1 [source_file: expected2]
                            EXPR_RESULT 1 [source_file: expected2]
                                ASSIGN 1 [source_file: expected2]
                                    GETPROP 1 [source_file: expected2]
                                        GETPROP 1 [source_file: expected2]
                                            NAME Foo 1 [source_file: expected2]
                                            STRING prototype 1 [source_file: expected2]
                                        STRING b3 1 [source_file: expected2]
                                    FUNCTION  1 [source_file: expected2]
                                        NAME  1 [source_file: expected2]
                                        PARAM_LIST 1 [source_file: expected2]
                                        BLOCK 1 [source_file: expected2]
                                            EXPR_RESULT 1 [source_file: expected2]
                                                NAME x 1 [source_file: expected2]
        EXPR_RESULT 1 [source_file: expected2]
            ASSIGN 1 [source_file: expected2]
                NAME y 1 [source_file: expected2]
                NEW 1 [source_file: expected2]
                    NAME Foo 1 [source_file: expected2]
        EXPR_RESULT 1 [source_file: expected2]
            CALL 1 [source_file: expected2]
                GETPROP 1 [source_file: expected2]
                    NAME z 1 [source_file: expected2]
                    STRING b2 1 [source_file: expected2]
    SCRIPT 1 [synthetic: 1] [source_file: expected3] [input_id: InputId: expected3]
        EXPR_RESULT 1 [source_file: expected3]
            ASSIGN 1 [source_file: expected3]
                NAME y 1 [source_file: expected3]
                NEW 1 [source_file: expected3]
                    NAME Foo 1 [source_file: expected3]
        EXPR_RESULT 1 [source_file: expected3]
            CALL 1 [source_file: expected3]
                GETPROP 1 [source_file: expected3]
                    NAME z 1 [source_file: expected3]
                    STRING b3 1 [source_file: expected3]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: i0] [input_id: InputId: i0]
        VAR 1 [source_file:  [synthetic:1] ]
            NAME JSCompiler_stubMap 1 [source_file:  [synthetic:1] ]
                ARRAYLIT 1 [source_file:  [synthetic:1] ]
        FUNCTION JSCompiler_stubMethod 1 [source_file:  [synthetic:1] ]
            NAME JSCompiler_stubMethod 1 [source_file:  [synthetic:1] ]
            PARAM_LIST 1 [source_file:  [synthetic:1] ]
                NAME JSCompiler_stubMethod_id 1 [source_file:  [synthetic:1] ]
            BLOCK 1 [source_file:  [synthetic:1] ]
                RETURN 1 [source_file:  [synthetic:1] ]
                    FUNCTION  1 [source_file:  [synthetic:1] ]
                        NAME  1 [source_file:  [synthetic:1] ]
                        PARAM_LIST 1 [source_file:  [synthetic:1] ]
                        BLOCK 1 [source_file:  [synthetic:1] ]
                            RETURN 1 [source_file:  [synthetic:1] ]
                                CALL 1 [source_file:  [synthetic:1] ]
                                    GETPROP 1 [source_file:  [synthetic:1] ]
                                        GETELEM 1 [source_file:  [synthetic:1] ]
                                            NAME JSCompiler_stubMap 1 [source_file:  [synthetic:1] ]
                                            NAME JSCompiler_stubMethod_id 1 [source_file:  [synthetic:1] ]
                                        STRING apply 1 [source_file:  [synthetic:1] ]
                                    THIS 1 [source_file:  [synthetic:1] ]
                                    NAME arguments 1 [source_file:  [synthetic:1] ]
        FUNCTION JSCompiler_unstubMethod 1 [source_file:  [synthetic:1] ]
            NAME JSCompiler_unstubMethod 1 [source_file:  [synthetic:1] ]
            PARAM_LIST 1 [source_file:  [synthetic:1] ]
                NAME JSCompiler_unstubMethod_id 1 [source_file:  [synthetic:1] ]
                NAME JSCompiler_unstubMethod_body 1 [source_file:  [synthetic:1] ]
            BLOCK 1 [source_file:  [synthetic:1] ]
                RETURN 1 [source_file:  [synthetic:1] ]
                    ASSIGN 1 [source_file:  [synthetic:1] ]
                        GETELEM 1 [source_file:  [synthetic:1] ]
                            NAME JSCompiler_stubMap 1 [source_file:  [synthetic:1] ]
                            NAME JSCompiler_unstubMethod_id 1 [source_file:  [synthetic:1] ]
                        NAME JSCompiler_unstubMethod_body 1 [source_file:  [synthetic:1] ]
        FUNCTION Foo 1 [source_file: i0]
            NAME Foo 1 [source_file: i0]
            PARAM_LIST 1 [source_file: i0]
            BLOCK 1 [source_file: i0]
        EXPR_RESULT 1 [source_file: i0]
            ASSIGN 1 [source_file: i0]
                GETPROP 1 [source_file: i0]
                    GETPROP 1 [source_file: i0]
                        NAME Foo 1 [source_file: i0]
                        STRING prototype 1 [source_file: i0]
                    STRING b1 1 [source_file: i0]
                CALL 1 [free_call: 1] [source_file: i0]
                    NAME JSCompiler_stubMethod 1 [source_file: i0]
                    NUMBER 1.0 1 [source_file: i0]
    SCRIPT 1 [synthetic: 1] [source_file: i1] [input_id: InputId: i1]
        EXPR_RESULT 1 [source_file: i0]
            ASSIGN 1 [source_file: i0]
                GETPROP 1 [source_file: i0]
                    GETPROP 1 [source_file: i0]
                        NAME Foo 1 [source_file: i0]
                        STRING prototype 1 [source_file: i0]
                    STRING b1 1 [source_file: i0]
                CALL 1 [free_call: 1] [source_file: i0]
                    NAME JSCompiler_unstubMethod 1 [source_file: i0]
                    NUMBER 1.0 1 [source_file: i0]
                    FUNCTION  1 [source_file: i0]
                        NAME  1 [source_file: i0]
                        PARAM_LIST 1 [source_file: i0]
                        BLOCK 1 [source_file: i0]
                            EXPR_RESULT 1 [source_file: i0]
                                ASSIGN 1 [source_file: i0]
                                    GETPROP 1 [source_file: i0]
                                        GETPROP 1 [source_file: i0]
                                            NAME Foo 1 [source_file: i0]
                                            STRING prototype 1 [source_file: i0]
                                        STRING b2 1 [source_file: i0]
                                    CALL 1 [free_call: 1] [source_file: i0]
                                        NAME JSCompiler_stubMethod 1 [source_file: i0]
                                        NUMBER 0.0 1 [source_file: i0]
        VAR 1 [source_file: i1]
            NAME y 1 [source_file: i1]
                NEW 1 [source_file: i1]
                    NAME Foo 1 [source_file: i1]
        EXPR_RESULT 1 [source_file: i1]
            CALL 1 [source_file: i1]
                GETPROP 1 [source_file: i1]
                    NAME y 1 [source_file: i1]
                    STRING b1 1 [source_file: i1]
    SCRIPT 1 [synthetic: 1] [source_file: i2] [input_id: InputId: i2]
        EXPR_RESULT 1 [source_file: i0]
            ASSIGN 1 [source_file: i0]
                GETPROP 1 [source_file: i0]
                    GETPROP 1 [source_file: i0]
                        NAME Foo 1 [source_file: i0]
                        STRING prototype 1 [source_file: i0]
                    STRING b2 1 [source_file: i0]
                CALL 1 [free_call: 1] [source_file: i0]
                    NAME JSCompiler_unstubMethod 1 [source_file: i0]
                    NUMBER 0.0 1 [source_file: i0]
                    FUNCTION  1 [source_file: i0]
                        NAME  1 [source_file: i0]
                        PARAM_LIST 1 [source_file: i0]
                        BLOCK 1 [source_file: i0]
                            VAR 1 [source_file: i0]
                                NAME x 1 [source_file: i0]
                                    NUMBER 1.0 1 [source_file: i0]
                            EXPR_RESULT 1 [source_file: i0]
                                ASSIGN 1 [source_file: i0]
                                    GETPROP 1 [source_file: i0]
                                        GETPROP 1 [source_file: i0]
                                            NAME Foo 1 [source_file: i0]
                                            STRING prototype 1 [source_file: i0]
                                        STRING b3 1 [source_file: i0]
                                    FUNCTION  1 [source_file: i0]
                                        NAME  1 [source_file: i0]
                                        PARAM_LIST 1 [source_file: i0]
                                        BLOCK 1 [source_file: i0]
                                            EXPR_RESULT 1 [source_file: i0]
                                                NAME x 1 [source_file: i0]
        EXPR_RESULT 1 [source_file: i2]
            ASSIGN 1 [source_file: i2]
                NAME y 1 [source_file: i2]
                NEW 1 [source_file: i2]
                    NAME Foo 1 [source_file: i2]
        EXPR_RESULT 1 [source_file: i2]
            CALL 1 [source_file: i2]
                GETPROP 1 [source_file: i2]
                    NAME z 1 [source_file: i2]
                    STRING b2 1 [source_file: i2]
    SCRIPT 1 [synthetic: 1] [source_file: i3] [input_id: InputId: i3]
        EXPR_RESULT 1 [source_file: i3]
            ASSIGN 1 [source_file: i3]
                NAME y 1 [source_file: i3]
                NEW 1 [source_file: i3]
                    NAME Foo 1 [source_file: i3]
        EXPR_RESULT 1 [source_file: i3]
            CALL 1 [source_file: i3]
                GETPROP 1 [source_file: i3]
                    NAME z 1 [source_file: i3]
                    STRING b3 1 [source_file: i3]


Subtree1: NUMBER 0.0 1 [source_file: expected0]


Subtree2: NUMBER 1.0 1 [source_file: i0]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:928)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:736)

junit.framework.AssertionFailedError: 
Expected: f=function(){var action;a:{var proto=null;try{proto=new Proto}finally{action=proto;return}}}
Result: f=function(){var action;a:{var proto=null;try{proto=new Proto}finally{action=proto}}}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            ASSIGN 1 [source_file: expected0]
                NAME f 1 [source_file: expected0]
                FUNCTION  1 [source_file: expected0]
                    NAME  1 [source_file: expected0]
                    PARAM_LIST 1 [source_file: expected0]
                    BLOCK 1 [source_file: expected0]
                        VAR 2 [source_file: expected0]
                            NAME action 2 [source_file: expected0]
                        LABEL 3 [source_file: expected0]
                            LABEL_NAME a 3 [source_file: expected0]
                            BLOCK 3 [source_file: expected0]
                                VAR 4 [source_file: expected0]
                                    NAME proto 4 [source_file: expected0]
                                        NULL 4 [source_file: expected0]
                                TRY 5 [source_file: expected0]
                                    BLOCK 5 [source_file: expected0]
                                        EXPR_RESULT 6 [source_file: expected0]
                                            ASSIGN 6 [source_file: expected0]
                                                NAME proto 6 [source_file: expected0]
                                                NEW 6 [source_file: expected0]
                                                    NAME Proto 6 [source_file: expected0]
                                    BLOCK 7 [source_file: expected0]
                                    BLOCK 7 [source_file: expected0]
                                        EXPR_RESULT 8 [source_file: expected0]
                                            ASSIGN 8 [source_file: expected0]
                                                NAME action 8 [source_file: expected0]
                                                NAME proto 8 [source_file: expected0]
                                        RETURN 9 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        EXPR_RESULT 1 [source_file: testcode]
            ASSIGN 1 [source_file: testcode]
                NAME f 1 [source_file: testcode]
                FUNCTION  1 [source_file: testcode]
                    NAME  1 [source_file: testcode]
                    PARAM_LIST 1 [source_file: testcode]
                    BLOCK 1 [source_file: testcode]
                        VAR 2 [source_file: testcode]
                            NAME action 2 [source_file: testcode]
                        LABEL 3 [source_file: testcode]
                            LABEL_NAME a 3 [source_file: testcode]
                            BLOCK 3 [source_file: testcode]
                                VAR 4 [source_file: testcode]
                                    NAME proto 4 [source_file: testcode]
                                        NULL 4 [source_file: testcode]
                                TRY 5 [source_file: testcode]
                                    BLOCK 5 [source_file: testcode]
                                        EXPR_RESULT 6 [source_file: testcode]
                                            ASSIGN 6 [source_file: testcode]
                                                NAME proto 6 [source_file: testcode]
                                                NEW 6 [source_file: testcode]
                                                    NAME Proto 6 [source_file: testcode]
                                    BLOCK 7 [source_file: testcode]
                                    BLOCK 7 [source_file: testcode]
                                        EXPR_RESULT 8 [source_file: testcode]
                                            ASSIGN 8 [source_file: testcode]
                                                NAME action 8 [source_file: testcode]
                                                NAME proto 8 [source_file: testcode]


Subtree1: BLOCK 7 [source_file: expected0]
    EXPR_RESULT 8 [source_file: expected0]
        ASSIGN 8 [source_file: expected0]
            NAME action 8 [source_file: expected0]
            NAME proto 8 [source_file: expected0]
    RETURN 9 [source_file: expected0]


Subtree2: BLOCK 7 [source_file: testcode]
    EXPR_RESULT 8 [source_file: testcode]
        ASSIGN 8 [source_file: testcode]
            NAME action 8 [source_file: testcode]
            NAME proto 8 [source_file: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:928)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:460)
19:30:08.606 [pool-57-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (6 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue4177428_return(com.google.javascript.jscomp.UnreachableCodeEliminationTest)
[
Expected: f=function(){var action;a:{var proto=null;try{proto=new Proto}finally{action=proto;return}}}
Result: f=function(){var action;a:{var proto=null;try{proto=new Proto}finally{action=proto}}}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            ASSIGN 1 [source_file: expected0]
                NAME f 1 [source_file: expected0]
                FUNCTION  1 [source_file: expected0]
                    NAME  1 [source_file: expected0]
                    PARAM_LIST 1 [source_file: expected0]
                    BLOCK 1 [source_file: expected0]
                        VAR 2 [source_file: expected0]
                            NAME action 2 [source_file: expected0]
                        LABEL 3 [source_file: expected0]
                            LABEL_NAME a 3 [source_file: expected0]
                            BLOCK 3 [source_file: expected0]
                                VAR 4 [source_file: expected0]
                                    NAME proto 4 [source_file: expected0]
                                        NULL 4 [source_file: expected0]
                                TRY 5 [source_file: expected0]
                                    BLOCK 5 [source_file: expected0]
                                        EXPR_RESULT 6 [source_file: expected0]
                                            ASSIGN 6 [source_file: expected0]
                                                NAME proto 6 [source_file: expected0]
                                                NEW 6 [source_file: expected0]
                                                    NAME Proto 6 [source_file: expected0]
                                    BLOCK 7 [source_file: expected0]
                                    BLOCK 7 [source_file: expected0]
                                        EXPR_RESULT 8 [source_file: expected0]
                                            ASSIGN 8 [source_file: expected0]
                                                NAME action 8 [source_file: expected0]
                                                NAME proto 8 [source_file: expected0]
                                        RETURN 9 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        EXPR_RESULT 1 [source_file: testcode]
            ASSIGN 1 [source_file: testcode]
                NAME f 1 [source_file: testcode]
                FUNCTION  1 [source_file: testcode]
                    NAME  1 [source_file: testcode]
                    PARAM_LIST 1 [source_file: testcode]
                    BLOCK 1 [source_file: testcode]
                        VAR 2 [source_file: testcode]
                            NAME action 2 [source_file: testcode]
                        LABEL 3 [source_file: testcode]
                            LABEL_NAME a 3 [source_file: testcode]
                            BLOCK 3 [source_file: testcode]
                                VAR 4 [source_file: testcode]
                                    NAME proto 4 [source_file: testcode]
                                        NULL 4 [source_file: testcode]
                                TRY 5 [source_file: testcode]
                                    BLOCK 5 [source_file: testcode]
                                        EXPR_RESULT 6 [source_file: testcode]
                                            ASSIGN 6 [source_file: testcode]
                                                NAME proto 6 [source_file: testcode]
                                                NEW 6 [source_file: testcode]
                                                    NAME Proto 6 [source_file: testcode]
                                    BLOCK 7 [source_file: testcode]
                                    BLOCK 7 [source_file: testcode]
                                        EXPR_RESULT 8 [source_file: testcode]
                                            ASSIGN 8 [source_file: testcode]
                                                NAME action 8 [source_file: testcode]
                                                NAME proto 8 [source_file: testcode]


Subtree1: BLOCK 7 [source_file: expected0]
    EXPR_RESULT 8 [source_file: expected0]
        ASSIGN 8 [source_file: expected0]
            NAME action 8 [source_file: expected0]
            NAME proto 8 [source_file: expected0]
    RETURN 9 [source_file: expected0]


Subtree2: BLOCK 7 [source_file: testcode]
    EXPR_RESULT 8 [source_file: testcode]
        ASSIGN 8 [source_file: testcode]
            NAME action 8 [source_file: testcode]
            NAME proto 8 [source_file: testcode]
]
junit.framework.AssertionFailedError: 
Expected: f=function(){var action;a:{var proto=null;try{proto=new Proto}finally{action=proto;return}}}
Result: f=function(){var action;a:{var proto=null;try{proto=new Proto}finally{action=proto}}}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            ASSIGN 1 [source_file: expected0]
                NAME f 1 [source_file: expected0]
                FUNCTION  1 [source_file: expected0]
                    NAME  1 [source_file: expected0]
                    PARAM_LIST 1 [source_file: expected0]
                    BLOCK 1 [source_file: expected0]
                        VAR 2 [source_file: expected0]
                            NAME action 2 [source_file: expected0]
                        LABEL 3 [source_file: expected0]
                            LABEL_NAME a 3 [source_file: expected0]
                            BLOCK 3 [source_file: expected0]
                                VAR 4 [source_file: expected0]
                                    NAME proto 4 [source_file: expected0]
                                        NULL 4 [source_file: expected0]
                                TRY 5 [source_file: expected0]
                                    BLOCK 5 [source_file: expected0]
                                        EXPR_RESULT 6 [source_file: expected0]
                                            ASSIGN 6 [source_file: expected0]
                                                NAME proto 6 [source_file: expected0]
                                                NEW 6 [source_file: expected0]
                                                    NAME Proto 6 [source_file: expected0]
                                    BLOCK 7 [source_file: expected0]
                                    BLOCK 7 [source_file: expected0]
                                        EXPR_RESULT 8 [source_file: expected0]
                                            ASSIGN 8 [source_file: expected0]
                                                NAME action 8 [source_file: expected0]
                                                NAME proto 8 [source_file: expected0]
                                        RETURN 9 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        EXPR_RESULT 1 [source_file: testcode]
            ASSIGN 1 [source_file: testcode]
                NAME f 1 [source_file: testcode]
                FUNCTION  1 [source_file: testcode]
                    NAME  1 [source_file: testcode]
                    PARAM_LIST 1 [source_file: testcode]
                    BLOCK 1 [source_file: testcode]
                        VAR 2 [source_file: testcode]
                            NAME action 2 [source_file: testcode]
                        LABEL 3 [source_file: testcode]
                            LABEL_NAME a 3 [source_file: testcode]
                            BLOCK 3 [source_file: testcode]
                                VAR 4 [source_file: testcode]
                                    NAME proto 4 [source_file: testcode]
                                        NULL 4 [source_file: testcode]
                                TRY 5 [source_file: testcode]
                                    BLOCK 5 [source_file: testcode]
                                        EXPR_RESULT 6 [source_file: testcode]
                                            ASSIGN 6 [source_file: testcode]
                                                NAME proto 6 [source_file: testcode]
                                                NEW 6 [source_file: testcode]
                                                    NAME Proto 6 [source_file: testcode]
                                    BLOCK 7 [source_file: testcode]
                                    BLOCK 7 [source_file: testcode]
                                        EXPR_RESULT 8 [source_file: testcode]
                                            ASSIGN 8 [source_file: testcode]
                                                NAME action 8 [source_file: testcode]
                                                NAME proto 8 [source_file: testcode]


Subtree1: BLOCK 7 [source_file: expected0]
    EXPR_RESULT 8 [source_file: expected0]
        ASSIGN 8 [source_file: expected0]
            NAME action 8 [source_file: expected0]
            NAME proto 8 [source_file: expected0]
    RETURN 9 [source_file: expected0]


Subtree2: BLOCK 7 [source_file: testcode]
    EXPR_RESULT 8 [source_file: testcode]
        ASSIGN 8 [source_file: testcode]
            NAME action 8 [source_file: testcode]
            NAME proto 8 [source_file: testcode]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:928)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:460)

junit.framework.AssertionFailedError: 
Expected: function f(){b:try{throw 9;}finally{break b}return 1}
Result: function f(){b:try{throw 9;}finally{}return 1}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION f 1 [source_file: expected0]
            NAME f 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                LABEL 1 [source_file: expected0]
                    LABEL_NAME b 1 [source_file: expected0]
                    TRY 1 [source_file: expected0]
                        BLOCK 1 [source_file: expected0]
                            THROW 1 [source_file: expected0]
                                NUMBER 9.0 1 [source_file: expected0]
                        BLOCK 1 [source_file: expected0]
                        BLOCK 1 [source_file: expected0]
                            BREAK 1 [source_file: expected0]
                                LABEL_NAME b 1 [source_file: expected0]
                RETURN 1 [source_file: expected0]
                    NUMBER 1.0 1 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION f 1 [source_file: testcode]
            NAME f 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                LABEL 1 [source_file: testcode]
                    LABEL_NAME b 1 [source_file: testcode]
                    TRY 1 [source_file: testcode]
                        BLOCK 1 [source_file: testcode]
                            THROW 1 [source_file: testcode]
                                NUMBER 9.0 1 [source_file: testcode]
                        BLOCK 1 [source_file: testcode]
                        BLOCK 1 [source_file: testcode]
                RETURN 1 [source_file: testcode]
                    NUMBER 1.0 1 [source_file: testcode]


Subtree1: BLOCK 1 [source_file: expected0]
    BREAK 1 [source_file: expected0]
        LABEL_NAME b 1 [source_file: expected0]


Subtree2: BLOCK 1 [source_file: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:928)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:460)
19:30:08.613 [pool-58-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (4 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testDontRemoveBreakInTryFinally(com.google.javascript.jscomp.UnreachableCodeEliminationTest)
[
Expected: function f(){b:try{throw 9;}finally{break b}return 1}
Result: function f(){b:try{throw 9;}finally{}return 1}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION f 1 [source_file: expected0]
            NAME f 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                LABEL 1 [source_file: expected0]
                    LABEL_NAME b 1 [source_file: expected0]
                    TRY 1 [source_file: expected0]
                        BLOCK 1 [source_file: expected0]
                            THROW 1 [source_file: expected0]
                                NUMBER 9.0 1 [source_file: expected0]
                        BLOCK 1 [source_file: expected0]
                        BLOCK 1 [source_file: expected0]
                            BREAK 1 [source_file: expected0]
                                LABEL_NAME b 1 [source_file: expected0]
                RETURN 1 [source_file: expected0]
                    NUMBER 1.0 1 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION f 1 [source_file: testcode]
            NAME f 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                LABEL 1 [source_file: testcode]
                    LABEL_NAME b 1 [source_file: testcode]
                    TRY 1 [source_file: testcode]
                        BLOCK 1 [source_file: testcode]
                            THROW 1 [source_file: testcode]
                                NUMBER 9.0 1 [source_file: testcode]
                        BLOCK 1 [source_file: testcode]
                        BLOCK 1 [source_file: testcode]
                RETURN 1 [source_file: testcode]
                    NUMBER 1.0 1 [source_file: testcode]


Subtree1: BLOCK 1 [source_file: expected0]
    BREAK 1 [source_file: expected0]
        LABEL_NAME b 1 [source_file: expected0]


Subtree2: BLOCK 1 [source_file: testcode]
]
junit.framework.AssertionFailedError: 
Expected: function f(){b:try{throw 9;}finally{break b}return 1}
Result: function f(){b:try{throw 9;}finally{}return 1}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION f 1 [source_file: expected0]
            NAME f 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                LABEL 1 [source_file: expected0]
                    LABEL_NAME b 1 [source_file: expected0]
                    TRY 1 [source_file: expected0]
                        BLOCK 1 [source_file: expected0]
                            THROW 1 [source_file: expected0]
                                NUMBER 9.0 1 [source_file: expected0]
                        BLOCK 1 [source_file: expected0]
                        BLOCK 1 [source_file: expected0]
                            BREAK 1 [source_file: expected0]
                                LABEL_NAME b 1 [source_file: expected0]
                RETURN 1 [source_file: expected0]
                    NUMBER 1.0 1 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION f 1 [source_file: testcode]
            NAME f 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                LABEL 1 [source_file: testcode]
                    LABEL_NAME b 1 [source_file: testcode]
                    TRY 1 [source_file: testcode]
                        BLOCK 1 [source_file: testcode]
                            THROW 1 [source_file: testcode]
                                NUMBER 9.0 1 [source_file: testcode]
                        BLOCK 1 [source_file: testcode]
                        BLOCK 1 [source_file: testcode]
                RETURN 1 [source_file: testcode]
                    NUMBER 1.0 1 [source_file: testcode]


Subtree1: BLOCK 1 [source_file: expected0]
    BREAK 1 [source_file: expected0]
        LABEL_NAME b 1 [source_file: expected0]


Subtree2: BLOCK 1 [source_file: testcode]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:928)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:460)

junit.framework.AssertionFailedError: 
Expected: f=function(){var action;a:do{var proto=null;try{proto=new Proto}finally{action=proto;continue a}}while(false);alert(action)}
Result: f=function(){var action;a:do{var proto=null;try{proto=new Proto}finally{action=proto}}while(false);alert(action)}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            ASSIGN 1 [source_file: expected0]
                NAME f 1 [source_file: expected0]
                FUNCTION  1 [source_file: expected0]
                    NAME  1 [source_file: expected0]
                    PARAM_LIST 1 [source_file: expected0]
                    BLOCK 1 [source_file: expected0]
                        VAR 2 [source_file: expected0]
                            NAME action 2 [source_file: expected0]
                        LABEL 3 [source_file: expected0]
                            LABEL_NAME a 3 [source_file: expected0]
                            DO 3 [source_file: expected0]
                                BLOCK 3 [source_file: expected0]
                                    VAR 4 [source_file: expected0]
                                        NAME proto 4 [source_file: expected0]
                                            NULL 4 [source_file: expected0]
                                    TRY 5 [source_file: expected0]
                                        BLOCK 5 [source_file: expected0]
                                            EXPR_RESULT 6 [source_file: expected0]
                                                ASSIGN 6 [source_file: expected0]
                                                    NAME proto 6 [source_file: expected0]
                                                    NEW 6 [source_file: expected0]
                                                        NAME Proto 6 [source_file: expected0]
                                        BLOCK 7 [source_file: expected0]
                                        BLOCK 7 [source_file: expected0]
                                            EXPR_RESULT 8 [source_file: expected0]
                                                ASSIGN 8 [source_file: expected0]
                                                    NAME action 8 [source_file: expected0]
                                                    NAME proto 8 [source_file: expected0]
                                            CONTINUE 9 [source_file: expected0]
                                                LABEL_NAME a 9 [source_file: expected0]
                                FALSE 11 [source_file: expected0]
                        EXPR_RESULT 12 [source_file: expected0]
                            CALL 12 [free_call: 1] [source_file: expected0]
                                NAME alert 12 [source_file: expected0]
                                NAME action 12 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        EXPR_RESULT 1 [source_file: testcode]
            ASSIGN 1 [source_file: testcode]
                NAME f 1 [source_file: testcode]
                FUNCTION  1 [source_file: testcode]
                    NAME  1 [source_file: testcode]
                    PARAM_LIST 1 [source_file: testcode]
                    BLOCK 1 [source_file: testcode]
                        VAR 2 [source_file: testcode]
                            NAME action 2 [source_file: testcode]
                        LABEL 3 [source_file: testcode]
                            LABEL_NAME a 3 [source_file: testcode]
                            DO 3 [source_file: testcode]
                                BLOCK 3 [source_file: testcode]
                                    VAR 4 [source_file: testcode]
                                        NAME proto 4 [source_file: testcode]
                                            NULL 4 [source_file: testcode]
                                    TRY 5 [source_file: testcode]
                                        BLOCK 5 [source_file: testcode]
                                            EXPR_RESULT 6 [source_file: testcode]
                                                ASSIGN 6 [source_file: testcode]
                                                    NAME proto 6 [source_file: testcode]
                                                    NEW 6 [source_file: testcode]
                                                        NAME Proto 6 [source_file: testcode]
                                        BLOCK 7 [source_file: testcode]
                                        BLOCK 7 [source_file: testcode]
                                            EXPR_RESULT 8 [source_file: testcode]
                                                ASSIGN 8 [source_file: testcode]
                                                    NAME action 8 [source_file: testcode]
                                                    NAME proto 8 [source_file: testcode]
                                FALSE 11 [source_file: testcode]
                        EXPR_RESULT 12 [source_file: testcode]
                            CALL 12 [free_call: 1] [source_file: testcode]
                                NAME alert 12 [source_file: testcode]
                                NAME action 12 [source_file: testcode]


Subtree1: BLOCK 7 [source_file: expected0]
    EXPR_RESULT 8 [source_file: expected0]
        ASSIGN 8 [source_file: expected0]
            NAME action 8 [source_file: expected0]
            NAME proto 8 [source_file: expected0]
    CONTINUE 9 [source_file: expected0]
        LABEL_NAME a 9 [source_file: expected0]


Subtree2: BLOCK 7 [source_file: testcode]
    EXPR_RESULT 8 [source_file: testcode]
        ASSIGN 8 [source_file: testcode]
            NAME action 8 [source_file: testcode]
            NAME proto 8 [source_file: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:928)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:460)
19:30:08.620 [pool-59-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (6 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue4177428_continue(com.google.javascript.jscomp.UnreachableCodeEliminationTest)
[
Expected: f=function(){var action;a:do{var proto=null;try{proto=new Proto}finally{action=proto;continue a}}while(false);alert(action)}
Result: f=function(){var action;a:do{var proto=null;try{proto=new Proto}finally{action=proto}}while(false);alert(action)}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            ASSIGN 1 [source_file: expected0]
                NAME f 1 [source_file: expected0]
                FUNCTION  1 [source_file: expected0]
                    NAME  1 [source_file: expected0]
                    PARAM_LIST 1 [source_file: expected0]
                    BLOCK 1 [source_file: expected0]
                        VAR 2 [source_file: expected0]
                            NAME action 2 [source_file: expected0]
                        LABEL 3 [source_file: expected0]
                            LABEL_NAME a 3 [source_file: expected0]
                            DO 3 [source_file: expected0]
                                BLOCK 3 [source_file: expected0]
                                    VAR 4 [source_file: expected0]
                                        NAME proto 4 [source_file: expected0]
                                            NULL 4 [source_file: expected0]
                                    TRY 5 [source_file: expected0]
                                        BLOCK 5 [source_file: expected0]
                                            EXPR_RESULT 6 [source_file: expected0]
                                                ASSIGN 6 [source_file: expected0]
                                                    NAME proto 6 [source_file: expected0]
                                                    NEW 6 [source_file: expected0]
                                                        NAME Proto 6 [source_file: expected0]
                                        BLOCK 7 [source_file: expected0]
                                        BLOCK 7 [source_file: expected0]
                                            EXPR_RESULT 8 [source_file: expected0]
                                                ASSIGN 8 [source_file: expected0]
                                                    NAME action 8 [source_file: expected0]
                                                    NAME proto 8 [source_file: expected0]
                                            CONTINUE 9 [source_file: expected0]
                                                LABEL_NAME a 9 [source_file: expected0]
                                FALSE 11 [source_file: expected0]
                        EXPR_RESULT 12 [source_file: expected0]
                            CALL 12 [free_call: 1] [source_file: expected0]
                                NAME alert 12 [source_file: expected0]
                                NAME action 12 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        EXPR_RESULT 1 [source_file: testcode]
            ASSIGN 1 [source_file: testcode]
                NAME f 1 [source_file: testcode]
                FUNCTION  1 [source_file: testcode]
                    NAME  1 [source_file: testcode]
                    PARAM_LIST 1 [source_file: testcode]
                    BLOCK 1 [source_file: testcode]
                        VAR 2 [source_file: testcode]
                            NAME action 2 [source_file: testcode]
                        LABEL 3 [source_file: testcode]
                            LABEL_NAME a 3 [source_file: testcode]
                            DO 3 [source_file: testcode]
                                BLOCK 3 [source_file: testcode]
                                    VAR 4 [source_file: testcode]
                                        NAME proto 4 [source_file: testcode]
                                            NULL 4 [source_file: testcode]
                                    TRY 5 [source_file: testcode]
                                        BLOCK 5 [source_file: testcode]
                                            EXPR_RESULT 6 [source_file: testcode]
                                                ASSIGN 6 [source_file: testcode]
                                                    NAME proto 6 [source_file: testcode]
                                                    NEW 6 [source_file: testcode]
                                                        NAME Proto 6 [source_file: testcode]
                                        BLOCK 7 [source_file: testcode]
                                        BLOCK 7 [source_file: testcode]
                                            EXPR_RESULT 8 [source_file: testcode]
                                                ASSIGN 8 [source_file: testcode]
                                                    NAME action 8 [source_file: testcode]
                                                    NAME proto 8 [source_file: testcode]
                                FALSE 11 [source_file: testcode]
                        EXPR_RESULT 12 [source_file: testcode]
                            CALL 12 [free_call: 1] [source_file: testcode]
                                NAME alert 12 [source_file: testcode]
                                NAME action 12 [source_file: testcode]


Subtree1: BLOCK 7 [source_file: expected0]
    EXPR_RESULT 8 [source_file: expected0]
        ASSIGN 8 [source_file: expected0]
            NAME action 8 [source_file: expected0]
            NAME proto 8 [source_file: expected0]
    CONTINUE 9 [source_file: expected0]
        LABEL_NAME a 9 [source_file: expected0]


Subtree2: BLOCK 7 [source_file: testcode]
    EXPR_RESULT 8 [source_file: testcode]
        ASSIGN 8 [source_file: testcode]
            NAME action 8 [source_file: testcode]
            NAME proto 8 [source_file: testcode]
]
junit.framework.AssertionFailedError: 
Expected: f=function(){var action;a:do{var proto=null;try{proto=new Proto}finally{action=proto;continue a}}while(false);alert(action)}
Result: f=function(){var action;a:do{var proto=null;try{proto=new Proto}finally{action=proto}}while(false);alert(action)}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            ASSIGN 1 [source_file: expected0]
                NAME f 1 [source_file: expected0]
                FUNCTION  1 [source_file: expected0]
                    NAME  1 [source_file: expected0]
                    PARAM_LIST 1 [source_file: expected0]
                    BLOCK 1 [source_file: expected0]
                        VAR 2 [source_file: expected0]
                            NAME action 2 [source_file: expected0]
                        LABEL 3 [source_file: expected0]
                            LABEL_NAME a 3 [source_file: expected0]
                            DO 3 [source_file: expected0]
                                BLOCK 3 [source_file: expected0]
                                    VAR 4 [source_file: expected0]
                                        NAME proto 4 [source_file: expected0]
                                            NULL 4 [source_file: expected0]
                                    TRY 5 [source_file: expected0]
                                        BLOCK 5 [source_file: expected0]
                                            EXPR_RESULT 6 [source_file: expected0]
                                                ASSIGN 6 [source_file: expected0]
                                                    NAME proto 6 [source_file: expected0]
                                                    NEW 6 [source_file: expected0]
                                                        NAME Proto 6 [source_file: expected0]
                                        BLOCK 7 [source_file: expected0]
                                        BLOCK 7 [source_file: expected0]
                                            EXPR_RESULT 8 [source_file: expected0]
                                                ASSIGN 8 [source_file: expected0]
                                                    NAME action 8 [source_file: expected0]
                                                    NAME proto 8 [source_file: expected0]
                                            CONTINUE 9 [source_file: expected0]
                                                LABEL_NAME a 9 [source_file: expected0]
                                FALSE 11 [source_file: expected0]
                        EXPR_RESULT 12 [source_file: expected0]
                            CALL 12 [free_call: 1] [source_file: expected0]
                                NAME alert 12 [source_file: expected0]
                                NAME action 12 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        EXPR_RESULT 1 [source_file: testcode]
            ASSIGN 1 [source_file: testcode]
                NAME f 1 [source_file: testcode]
                FUNCTION  1 [source_file: testcode]
                    NAME  1 [source_file: testcode]
                    PARAM_LIST 1 [source_file: testcode]
                    BLOCK 1 [source_file: testcode]
                        VAR 2 [source_file: testcode]
                            NAME action 2 [source_file: testcode]
                        LABEL 3 [source_file: testcode]
                            LABEL_NAME a 3 [source_file: testcode]
                            DO 3 [source_file: testcode]
                                BLOCK 3 [source_file: testcode]
                                    VAR 4 [source_file: testcode]
                                        NAME proto 4 [source_file: testcode]
                                            NULL 4 [source_file: testcode]
                                    TRY 5 [source_file: testcode]
                                        BLOCK 5 [source_file: testcode]
                                            EXPR_RESULT 6 [source_file: testcode]
                                                ASSIGN 6 [source_file: testcode]
                                                    NAME proto 6 [source_file: testcode]
                                                    NEW 6 [source_file: testcode]
                                                        NAME Proto 6 [source_file: testcode]
                                        BLOCK 7 [source_file: testcode]
                                        BLOCK 7 [source_file: testcode]
                                            EXPR_RESULT 8 [source_file: testcode]
                                                ASSIGN 8 [source_file: testcode]
                                                    NAME action 8 [source_file: testcode]
                                                    NAME proto 8 [source_file: testcode]
                                FALSE 11 [source_file: testcode]
                        EXPR_RESULT 12 [source_file: testcode]
                            CALL 12 [free_call: 1] [source_file: testcode]
                                NAME alert 12 [source_file: testcode]
                                NAME action 12 [source_file: testcode]


Subtree1: BLOCK 7 [source_file: expected0]
    EXPR_RESULT 8 [source_file: expected0]
        ASSIGN 8 [source_file: expected0]
            NAME action 8 [source_file: expected0]
            NAME proto 8 [source_file: expected0]
    CONTINUE 9 [source_file: expected0]
        LABEL_NAME a 9 [source_file: expected0]


Subtree2: BLOCK 7 [source_file: testcode]
    EXPR_RESULT 8 [source_file: testcode]
        ASSIGN 8 [source_file: testcode]
            NAME action 8 [source_file: testcode]
            NAME proto 8 [source_file: testcode]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:928)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:460)

junit.framework.AssertionFailedError: 
Expected: function f(){b:try{throw 9;}finally{switch(x){case 1:break b}}return 1}
Result: function f(){b:try{throw 9;}finally{switch(x){case 1:}}return 1}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION f 1 [source_file: expected0]
            NAME f 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                LABEL 1 [source_file: expected0]
                    LABEL_NAME b 1 [source_file: expected0]
                    TRY 1 [source_file: expected0]
                        BLOCK 1 [source_file: expected0]
                            THROW 1 [source_file: expected0]
                                NUMBER 9.0 1 [source_file: expected0]
                        BLOCK 1 [source_file: expected0]
                        BLOCK 1 [source_file: expected0]
                            SWITCH 1 [source_file: expected0]
                                NAME x 1 [source_file: expected0]
                                CASE 1 [source_file: expected0]
                                    NUMBER 1.0 1 [source_file: expected0]
                                    BLOCK 1 [synthetic: 1] [source_file: expected0]
                                        BREAK 1 [source_file: expected0]
                                            LABEL_NAME b 1 [source_file: expected0]
                RETURN 1 [source_file: expected0]
                    NUMBER 1.0 1 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION f 1 [source_file: testcode]
            NAME f 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                LABEL 1 [source_file: testcode]
                    LABEL_NAME b 1 [source_file: testcode]
                    TRY 1 [source_file: testcode]
                        BLOCK 1 [source_file: testcode]
                            THROW 1 [source_file: testcode]
                                NUMBER 9.0 1 [source_file: testcode]
                        BLOCK 1 [source_file: testcode]
                        BLOCK 1 [source_file: testcode]
                            SWITCH 1 [source_file: testcode]
                                NAME x 1 [source_file: testcode]
                                CASE 1 [source_file: testcode]
                                    NUMBER 1.0 1 [source_file: testcode]
                                    BLOCK 1 [synthetic: 1] [source_file: testcode]
                RETURN 1 [source_file: testcode]
                    NUMBER 1.0 1 [source_file: testcode]


Subtree1: BLOCK 1 [synthetic: 1] [source_file: expected0]
    BREAK 1 [source_file: expected0]
        LABEL_NAME b 1 [source_file: expected0]


Subtree2: BLOCK 1 [synthetic: 1] [source_file: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:928)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:460)
19:30:08.626 [pool-60-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (4 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testDontRemoveBreakInTryFinallySwitch(com.google.javascript.jscomp.UnreachableCodeEliminationTest)
[
Expected: function f(){b:try{throw 9;}finally{switch(x){case 1:break b}}return 1}
Result: function f(){b:try{throw 9;}finally{switch(x){case 1:}}return 1}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION f 1 [source_file: expected0]
            NAME f 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                LABEL 1 [source_file: expected0]
                    LABEL_NAME b 1 [source_file: expected0]
                    TRY 1 [source_file: expected0]
                        BLOCK 1 [source_file: expected0]
                            THROW 1 [source_file: expected0]
                                NUMBER 9.0 1 [source_file: expected0]
                        BLOCK 1 [source_file: expected0]
                        BLOCK 1 [source_file: expected0]
                            SWITCH 1 [source_file: expected0]
                                NAME x 1 [source_file: expected0]
                                CASE 1 [source_file: expected0]
                                    NUMBER 1.0 1 [source_file: expected0]
                                    BLOCK 1 [synthetic: 1] [source_file: expected0]
                                        BREAK 1 [source_file: expected0]
                                            LABEL_NAME b 1 [source_file: expected0]
                RETURN 1 [source_file: expected0]
                    NUMBER 1.0 1 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION f 1 [source_file: testcode]
            NAME f 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                LABEL 1 [source_file: testcode]
                    LABEL_NAME b 1 [source_file: testcode]
                    TRY 1 [source_file: testcode]
                        BLOCK 1 [source_file: testcode]
                            THROW 1 [source_file: testcode]
                                NUMBER 9.0 1 [source_file: testcode]
                        BLOCK 1 [source_file: testcode]
                        BLOCK 1 [source_file: testcode]
                            SWITCH 1 [source_file: testcode]
                                NAME x 1 [source_file: testcode]
                                CASE 1 [source_file: testcode]
                                    NUMBER 1.0 1 [source_file: testcode]
                                    BLOCK 1 [synthetic: 1] [source_file: testcode]
                RETURN 1 [source_file: testcode]
                    NUMBER 1.0 1 [source_file: testcode]


Subtree1: BLOCK 1 [synthetic: 1] [source_file: expected0]
    BREAK 1 [source_file: expected0]
        LABEL_NAME b 1 [source_file: expected0]


Subtree2: BLOCK 1 [synthetic: 1] [source_file: testcode]
]
junit.framework.AssertionFailedError: 
Expected: function f(){b:try{throw 9;}finally{switch(x){case 1:break b}}return 1}
Result: function f(){b:try{throw 9;}finally{switch(x){case 1:}}return 1}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION f 1 [source_file: expected0]
            NAME f 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                LABEL 1 [source_file: expected0]
                    LABEL_NAME b 1 [source_file: expected0]
                    TRY 1 [source_file: expected0]
                        BLOCK 1 [source_file: expected0]
                            THROW 1 [source_file: expected0]
                                NUMBER 9.0 1 [source_file: expected0]
                        BLOCK 1 [source_file: expected0]
                        BLOCK 1 [source_file: expected0]
                            SWITCH 1 [source_file: expected0]
                                NAME x 1 [source_file: expected0]
                                CASE 1 [source_file: expected0]
                                    NUMBER 1.0 1 [source_file: expected0]
                                    BLOCK 1 [synthetic: 1] [source_file: expected0]
                                        BREAK 1 [source_file: expected0]
                                            LABEL_NAME b 1 [source_file: expected0]
                RETURN 1 [source_file: expected0]
                    NUMBER 1.0 1 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION f 1 [source_file: testcode]
            NAME f 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                LABEL 1 [source_file: testcode]
                    LABEL_NAME b 1 [source_file: testcode]
                    TRY 1 [source_file: testcode]
                        BLOCK 1 [source_file: testcode]
                            THROW 1 [source_file: testcode]
                                NUMBER 9.0 1 [source_file: testcode]
                        BLOCK 1 [source_file: testcode]
                        BLOCK 1 [source_file: testcode]
                            SWITCH 1 [source_file: testcode]
                                NAME x 1 [source_file: testcode]
                                CASE 1 [source_file: testcode]
                                    NUMBER 1.0 1 [source_file: testcode]
                                    BLOCK 1 [synthetic: 1] [source_file: testcode]
                RETURN 1 [source_file: testcode]
                    NUMBER 1.0 1 [source_file: testcode]


Subtree1: BLOCK 1 [synthetic: 1] [source_file: expected0]
    BREAK 1 [source_file: expected0]
        LABEL_NAME b 1 [source_file: expected0]


Subtree2: BLOCK 1 [synthetic: 1] [source_file: testcode]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:928)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:460)

junit.framework.AssertionFailedError: 
Expected: f=function(){var action;a:{var proto=null;try{proto=new Proto}finally{action=proto;break a}}alert(action)}
Result: f=function(){var action;a:{var proto=null;try{proto=new Proto}finally{action=proto}}alert(action)}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            ASSIGN 1 [source_file: expected0]
                NAME f 1 [source_file: expected0]
                FUNCTION  1 [source_file: expected0]
                    NAME  1 [source_file: expected0]
                    PARAM_LIST 1 [source_file: expected0]
                    BLOCK 1 [source_file: expected0]
                        VAR 2 [source_file: expected0]
                            NAME action 2 [source_file: expected0]
                        LABEL 3 [source_file: expected0]
                            LABEL_NAME a 3 [source_file: expected0]
                            BLOCK 3 [source_file: expected0]
                                VAR 4 [source_file: expected0]
                                    NAME proto 4 [source_file: expected0]
                                        NULL 4 [source_file: expected0]
                                TRY 5 [source_file: expected0]
                                    BLOCK 5 [source_file: expected0]
                                        EXPR_RESULT 6 [source_file: expected0]
                                            ASSIGN 6 [source_file: expected0]
                                                NAME proto 6 [source_file: expected0]
                                                NEW 6 [source_file: expected0]
                                                    NAME Proto 6 [source_file: expected0]
                                    BLOCK 7 [source_file: expected0]
                                    BLOCK 7 [source_file: expected0]
                                        EXPR_RESULT 8 [source_file: expected0]
                                            ASSIGN 8 [source_file: expected0]
                                                NAME action 8 [source_file: expected0]
                                                NAME proto 8 [source_file: expected0]
                                        BREAK 9 [source_file: expected0]
                                            LABEL_NAME a 9 [source_file: expected0]
                        EXPR_RESULT 12 [source_file: expected0]
                            CALL 12 [free_call: 1] [source_file: expected0]
                                NAME alert 12 [source_file: expected0]
                                NAME action 12 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        EXPR_RESULT 1 [source_file: testcode]
            ASSIGN 1 [source_file: testcode]
                NAME f 1 [source_file: testcode]
                FUNCTION  1 [source_file: testcode]
                    NAME  1 [source_file: testcode]
                    PARAM_LIST 1 [source_file: testcode]
                    BLOCK 1 [source_file: testcode]
                        VAR 2 [source_file: testcode]
                            NAME action 2 [source_file: testcode]
                        LABEL 3 [source_file: testcode]
                            LABEL_NAME a 3 [source_file: testcode]
                            BLOCK 3 [source_file: testcode]
                                VAR 4 [source_file: testcode]
                                    NAME proto 4 [source_file: testcode]
                                        NULL 4 [source_file: testcode]
                                TRY 5 [source_file: testcode]
                                    BLOCK 5 [source_file: testcode]
                                        EXPR_RESULT 6 [source_file: testcode]
                                            ASSIGN 6 [source_file: testcode]
                                                NAME proto 6 [source_file: testcode]
                                                NEW 6 [source_file: testcode]
                                                    NAME Proto 6 [source_file: testcode]
                                    BLOCK 7 [source_file: testcode]
                                    BLOCK 7 [source_file: testcode]
                                        EXPR_RESULT 8 [source_file: testcode]
                                            ASSIGN 8 [source_file: testcode]
                                                NAME action 8 [source_file: testcode]
                                                NAME proto 8 [source_file: testcode]
                        EXPR_RESULT 12 [source_file: testcode]
                            CALL 12 [free_call: 1] [source_file: testcode]
                                NAME alert 12 [source_file: testcode]
                                NAME action 12 [source_file: testcode]


Subtree1: BLOCK 7 [source_file: expected0]
    EXPR_RESULT 8 [source_file: expected0]
        ASSIGN 8 [source_file: expected0]
            NAME action 8 [source_file: expected0]
            NAME proto 8 [source_file: expected0]
    BREAK 9 [source_file: expected0]
        LABEL_NAME a 9 [source_file: expected0]


Subtree2: BLOCK 7 [source_file: testcode]
    EXPR_RESULT 8 [source_file: testcode]
        ASSIGN 8 [source_file: testcode]
            NAME action 8 [source_file: testcode]
            NAME proto 8 [source_file: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:928)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:460)
19:30:08.633 [pool-61-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (5 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue4177428a(com.google.javascript.jscomp.UnreachableCodeEliminationTest)
[
Expected: f=function(){var action;a:{var proto=null;try{proto=new Proto}finally{action=proto;break a}}alert(action)}
Result: f=function(){var action;a:{var proto=null;try{proto=new Proto}finally{action=proto}}alert(action)}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            ASSIGN 1 [source_file: expected0]
                NAME f 1 [source_file: expected0]
                FUNCTION  1 [source_file: expected0]
                    NAME  1 [source_file: expected0]
                    PARAM_LIST 1 [source_file: expected0]
                    BLOCK 1 [source_file: expected0]
                        VAR 2 [source_file: expected0]
                            NAME action 2 [source_file: expected0]
                        LABEL 3 [source_file: expected0]
                            LABEL_NAME a 3 [source_file: expected0]
                            BLOCK 3 [source_file: expected0]
                                VAR 4 [source_file: expected0]
                                    NAME proto 4 [source_file: expected0]
                                        NULL 4 [source_file: expected0]
                                TRY 5 [source_file: expected0]
                                    BLOCK 5 [source_file: expected0]
                                        EXPR_RESULT 6 [source_file: expected0]
                                            ASSIGN 6 [source_file: expected0]
                                                NAME proto 6 [source_file: expected0]
                                                NEW 6 [source_file: expected0]
                                                    NAME Proto 6 [source_file: expected0]
                                    BLOCK 7 [source_file: expected0]
                                    BLOCK 7 [source_file: expected0]
                                        EXPR_RESULT 8 [source_file: expected0]
                                            ASSIGN 8 [source_file: expected0]
                                                NAME action 8 [source_file: expected0]
                                                NAME proto 8 [source_file: expected0]
                                        BREAK 9 [source_file: expected0]
                                            LABEL_NAME a 9 [source_file: expected0]
                        EXPR_RESULT 12 [source_file: expected0]
                            CALL 12 [free_call: 1] [source_file: expected0]
                                NAME alert 12 [source_file: expected0]
                                NAME action 12 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        EXPR_RESULT 1 [source_file: testcode]
            ASSIGN 1 [source_file: testcode]
                NAME f 1 [source_file: testcode]
                FUNCTION  1 [source_file: testcode]
                    NAME  1 [source_file: testcode]
                    PARAM_LIST 1 [source_file: testcode]
                    BLOCK 1 [source_file: testcode]
                        VAR 2 [source_file: testcode]
                            NAME action 2 [source_file: testcode]
                        LABEL 3 [source_file: testcode]
                            LABEL_NAME a 3 [source_file: testcode]
                            BLOCK 3 [source_file: testcode]
                                VAR 4 [source_file: testcode]
                                    NAME proto 4 [source_file: testcode]
                                        NULL 4 [source_file: testcode]
                                TRY 5 [source_file: testcode]
                                    BLOCK 5 [source_file: testcode]
                                        EXPR_RESULT 6 [source_file: testcode]
                                            ASSIGN 6 [source_file: testcode]
                                                NAME proto 6 [source_file: testcode]
                                                NEW 6 [source_file: testcode]
                                                    NAME Proto 6 [source_file: testcode]
                                    BLOCK 7 [source_file: testcode]
                                    BLOCK 7 [source_file: testcode]
                                        EXPR_RESULT 8 [source_file: testcode]
                                            ASSIGN 8 [source_file: testcode]
                                                NAME action 8 [source_file: testcode]
                                                NAME proto 8 [source_file: testcode]
                        EXPR_RESULT 12 [source_file: testcode]
                            CALL 12 [free_call: 1] [source_file: testcode]
                                NAME alert 12 [source_file: testcode]
                                NAME action 12 [source_file: testcode]


Subtree1: BLOCK 7 [source_file: expected0]
    EXPR_RESULT 8 [source_file: expected0]
        ASSIGN 8 [source_file: expected0]
            NAME action 8 [source_file: expected0]
            NAME proto 8 [source_file: expected0]
    BREAK 9 [source_file: expected0]
        LABEL_NAME a 9 [source_file: expected0]


Subtree2: BLOCK 7 [source_file: testcode]
    EXPR_RESULT 8 [source_file: testcode]
        ASSIGN 8 [source_file: testcode]
            NAME action 8 [source_file: testcode]
            NAME proto 8 [source_file: testcode]
]
junit.framework.AssertionFailedError: 
Expected: f=function(){var action;a:{var proto=null;try{proto=new Proto}finally{action=proto;break a}}alert(action)}
Result: f=function(){var action;a:{var proto=null;try{proto=new Proto}finally{action=proto}}alert(action)}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            ASSIGN 1 [source_file: expected0]
                NAME f 1 [source_file: expected0]
                FUNCTION  1 [source_file: expected0]
                    NAME  1 [source_file: expected0]
                    PARAM_LIST 1 [source_file: expected0]
                    BLOCK 1 [source_file: expected0]
                        VAR 2 [source_file: expected0]
                            NAME action 2 [source_file: expected0]
                        LABEL 3 [source_file: expected0]
                            LABEL_NAME a 3 [source_file: expected0]
                            BLOCK 3 [source_file: expected0]
                                VAR 4 [source_file: expected0]
                                    NAME proto 4 [source_file: expected0]
                                        NULL 4 [source_file: expected0]
                                TRY 5 [source_file: expected0]
                                    BLOCK 5 [source_file: expected0]
                                        EXPR_RESULT 6 [source_file: expected0]
                                            ASSIGN 6 [source_file: expected0]
                                                NAME proto 6 [source_file: expected0]
                                                NEW 6 [source_file: expected0]
                                                    NAME Proto 6 [source_file: expected0]
                                    BLOCK 7 [source_file: expected0]
                                    BLOCK 7 [source_file: expected0]
                                        EXPR_RESULT 8 [source_file: expected0]
                                            ASSIGN 8 [source_file: expected0]
                                                NAME action 8 [source_file: expected0]
                                                NAME proto 8 [source_file: expected0]
                                        BREAK 9 [source_file: expected0]
                                            LABEL_NAME a 9 [source_file: expected0]
                        EXPR_RESULT 12 [source_file: expected0]
                            CALL 12 [free_call: 1] [source_file: expected0]
                                NAME alert 12 [source_file: expected0]
                                NAME action 12 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        EXPR_RESULT 1 [source_file: testcode]
            ASSIGN 1 [source_file: testcode]
                NAME f 1 [source_file: testcode]
                FUNCTION  1 [source_file: testcode]
                    NAME  1 [source_file: testcode]
                    PARAM_LIST 1 [source_file: testcode]
                    BLOCK 1 [source_file: testcode]
                        VAR 2 [source_file: testcode]
                            NAME action 2 [source_file: testcode]
                        LABEL 3 [source_file: testcode]
                            LABEL_NAME a 3 [source_file: testcode]
                            BLOCK 3 [source_file: testcode]
                                VAR 4 [source_file: testcode]
                                    NAME proto 4 [source_file: testcode]
                                        NULL 4 [source_file: testcode]
                                TRY 5 [source_file: testcode]
                                    BLOCK 5 [source_file: testcode]
                                        EXPR_RESULT 6 [source_file: testcode]
                                            ASSIGN 6 [source_file: testcode]
                                                NAME proto 6 [source_file: testcode]
                                                NEW 6 [source_file: testcode]
                                                    NAME Proto 6 [source_file: testcode]
                                    BLOCK 7 [source_file: testcode]
                                    BLOCK 7 [source_file: testcode]
                                        EXPR_RESULT 8 [source_file: testcode]
                                            ASSIGN 8 [source_file: testcode]
                                                NAME action 8 [source_file: testcode]
                                                NAME proto 8 [source_file: testcode]
                        EXPR_RESULT 12 [source_file: testcode]
                            CALL 12 [free_call: 1] [source_file: testcode]
                                NAME alert 12 [source_file: testcode]
                                NAME action 12 [source_file: testcode]


Subtree1: BLOCK 7 [source_file: expected0]
    EXPR_RESULT 8 [source_file: expected0]
        ASSIGN 8 [source_file: expected0]
            NAME action 8 [source_file: expected0]
            NAME proto 8 [source_file: expected0]
    BREAK 9 [source_file: expected0]
        LABEL_NAME a 9 [source_file: expected0]


Subtree2: BLOCK 7 [source_file: testcode]
    EXPR_RESULT 8 [source_file: testcode]
        ASSIGN 8 [source_file: testcode]
            NAME action 8 [source_file: testcode]
            NAME proto 8 [source_file: testcode]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:928)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:460)

junit.framework.AssertionFailedError: 
Expected: f=function(){var action;a:{var proto=null;try{}finally{try{proto=new Proto}finally{action=proto;break a}}}alert(action)}
Result: f=function(){var action;a:{var proto=null;try{}finally{try{proto=new Proto}finally{action=proto}}}alert(action)}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            ASSIGN 1 [source_file: expected0]
                NAME f 1 [source_file: expected0]
                FUNCTION  1 [source_file: expected0]
                    NAME  1 [source_file: expected0]
                    PARAM_LIST 1 [source_file: expected0]
                    BLOCK 1 [source_file: expected0]
                        VAR 2 [source_file: expected0]
                            NAME action 2 [source_file: expected0]
                        LABEL 3 [source_file: expected0]
                            LABEL_NAME a 3 [source_file: expected0]
                            BLOCK 3 [source_file: expected0]
                                VAR 4 [source_file: expected0]
                                    NAME proto 4 [source_file: expected0]
                                        NULL 4 [source_file: expected0]
                                TRY 5 [source_file: expected0]
                                    BLOCK 5 [source_file: expected0]
                                    BLOCK 6 [source_file: expected0]
                                    BLOCK 6 [source_file: expected0]
                                        TRY 7 [source_file: expected0]
                                            BLOCK 7 [source_file: expected0]
                                                EXPR_RESULT 8 [source_file: expected0]
                                                    ASSIGN 8 [source_file: expected0]
                                                        NAME proto 8 [source_file: expected0]
                                                        NEW 8 [source_file: expected0]
                                                            NAME Proto 8 [source_file: expected0]
                                            BLOCK 9 [source_file: expected0]
                                            BLOCK 9 [source_file: expected0]
                                                EXPR_RESULT 10 [source_file: expected0]
                                                    ASSIGN 10 [source_file: expected0]
                                                        NAME action 10 [source_file: expected0]
                                                        NAME proto 10 [source_file: expected0]
                                                BREAK 11 [source_file: expected0]
                                                    LABEL_NAME a 11 [source_file: expected0]
                        EXPR_RESULT 15 [source_file: expected0]
                            CALL 15 [free_call: 1] [source_file: expected0]
                                NAME alert 15 [source_file: expected0]
                                NAME action 15 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        EXPR_RESULT 1 [source_file: testcode]
            ASSIGN 1 [source_file: testcode]
                NAME f 1 [source_file: testcode]
                FUNCTION  1 [source_file: testcode]
                    NAME  1 [source_file: testcode]
                    PARAM_LIST 1 [source_file: testcode]
                    BLOCK 1 [source_file: testcode]
                        VAR 2 [source_file: testcode]
                            NAME action 2 [source_file: testcode]
                        LABEL 3 [source_file: testcode]
                            LABEL_NAME a 3 [source_file: testcode]
                            BLOCK 3 [source_file: testcode]
                                VAR 4 [source_file: testcode]
                                    NAME proto 4 [source_file: testcode]
                                        NULL 4 [source_file: testcode]
                                TRY 5 [source_file: testcode]
                                    BLOCK 5 [source_file: testcode]
                                    BLOCK 6 [source_file: testcode]
                                    BLOCK 6 [source_file: testcode]
                                        TRY 7 [source_file: testcode]
                                            BLOCK 7 [source_file: testcode]
                                                EXPR_RESULT 8 [source_file: testcode]
                                                    ASSIGN 8 [source_file: testcode]
                                                        NAME proto 8 [source_file: testcode]
                                                        NEW 8 [source_file: testcode]
                                                            NAME Proto 8 [source_file: testcode]
                                            BLOCK 9 [source_file: testcode]
                                            BLOCK 9 [source_file: testcode]
                                                EXPR_RESULT 10 [source_file: testcode]
                                                    ASSIGN 10 [source_file: testcode]
                                                        NAME action 10 [source_file: testcode]
                                                        NAME proto 10 [source_file: testcode]
                        EXPR_RESULT 15 [source_file: testcode]
                            CALL 15 [free_call: 1] [source_file: testcode]
                                NAME alert 15 [source_file: testcode]
                                NAME action 15 [source_file: testcode]


Subtree1: BLOCK 9 [source_file: expected0]
    EXPR_RESULT 10 [source_file: expected0]
        ASSIGN 10 [source_file: expected0]
            NAME action 10 [source_file: expected0]
            NAME proto 10 [source_file: expected0]
    BREAK 11 [source_file: expected0]
        LABEL_NAME a 11 [source_file: expected0]


Subtree2: BLOCK 9 [source_file: testcode]
    EXPR_RESULT 10 [source_file: testcode]
        ASSIGN 10 [source_file: testcode]
            NAME action 10 [source_file: testcode]
            NAME proto 10 [source_file: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:928)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:460)
19:30:08.640 [pool-62-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (5 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue4177428c(com.google.javascript.jscomp.UnreachableCodeEliminationTest)
[
Expected: f=function(){var action;a:{var proto=null;try{}finally{try{proto=new Proto}finally{action=proto;break a}}}alert(action)}
Result: f=function(){var action;a:{var proto=null;try{}finally{try{proto=new Proto}finally{action=proto}}}alert(action)}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            ASSIGN 1 [source_file: expected0]
                NAME f 1 [source_file: expected0]
                FUNCTION  1 [source_file: expected0]
                    NAME  1 [source_file: expected0]
                    PARAM_LIST 1 [source_file: expected0]
                    BLOCK 1 [source_file: expected0]
                        VAR 2 [source_file: expected0]
                            NAME action 2 [source_file: expected0]
                        LABEL 3 [source_file: expected0]
                            LABEL_NAME a 3 [source_file: expected0]
                            BLOCK 3 [source_file: expected0]
                                VAR 4 [source_file: expected0]
                                    NAME proto 4 [source_file: expected0]
                                        NULL 4 [source_file: expected0]
                                TRY 5 [source_file: expected0]
                                    BLOCK 5 [source_file: expected0]
                                    BLOCK 6 [source_file: expected0]
                                    BLOCK 6 [source_file: expected0]
                                        TRY 7 [source_file: expected0]
                                            BLOCK 7 [source_file: expected0]
                                                EXPR_RESULT 8 [source_file: expected0]
                                                    ASSIGN 8 [source_file: expected0]
                                                        NAME proto 8 [source_file: expected0]
                                                        NEW 8 [source_file: expected0]
                                                            NAME Proto 8 [source_file: expected0]
                                            BLOCK 9 [source_file: expected0]
                                            BLOCK 9 [source_file: expected0]
                                                EXPR_RESULT 10 [source_file: expected0]
                                                    ASSIGN 10 [source_file: expected0]
                                                        NAME action 10 [source_file: expected0]
                                                        NAME proto 10 [source_file: expected0]
                                                BREAK 11 [source_file: expected0]
                                                    LABEL_NAME a 11 [source_file: expected0]
                        EXPR_RESULT 15 [source_file: expected0]
                            CALL 15 [free_call: 1] [source_file: expected0]
                                NAME alert 15 [source_file: expected0]
                                NAME action 15 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        EXPR_RESULT 1 [source_file: testcode]
            ASSIGN 1 [source_file: testcode]
                NAME f 1 [source_file: testcode]
                FUNCTION  1 [source_file: testcode]
                    NAME  1 [source_file: testcode]
                    PARAM_LIST 1 [source_file: testcode]
                    BLOCK 1 [source_file: testcode]
                        VAR 2 [source_file: testcode]
                            NAME action 2 [source_file: testcode]
                        LABEL 3 [source_file: testcode]
                            LABEL_NAME a 3 [source_file: testcode]
                            BLOCK 3 [source_file: testcode]
                                VAR 4 [source_file: testcode]
                                    NAME proto 4 [source_file: testcode]
                                        NULL 4 [source_file: testcode]
                                TRY 5 [source_file: testcode]
                                    BLOCK 5 [source_file: testcode]
                                    BLOCK 6 [source_file: testcode]
                                    BLOCK 6 [source_file: testcode]
                                        TRY 7 [source_file: testcode]
                                            BLOCK 7 [source_file: testcode]
                                                EXPR_RESULT 8 [source_file: testcode]
                                                    ASSIGN 8 [source_file: testcode]
                                                        NAME proto 8 [source_file: testcode]
                                                        NEW 8 [source_file: testcode]
                                                            NAME Proto 8 [source_file: testcode]
                                            BLOCK 9 [source_file: testcode]
                                            BLOCK 9 [source_file: testcode]
                                                EXPR_RESULT 10 [source_file: testcode]
                                                    ASSIGN 10 [source_file: testcode]
                                                        NAME action 10 [source_file: testcode]
                                                        NAME proto 10 [source_file: testcode]
                        EXPR_RESULT 15 [source_file: testcode]
                            CALL 15 [free_call: 1] [source_file: testcode]
                                NAME alert 15 [source_file: testcode]
                                NAME action 15 [source_file: testcode]


Subtree1: BLOCK 9 [source_file: expected0]
    EXPR_RESULT 10 [source_file: expected0]
        ASSIGN 10 [source_file: expected0]
            NAME action 10 [source_file: expected0]
            NAME proto 10 [source_file: expected0]
    BREAK 11 [source_file: expected0]
        LABEL_NAME a 11 [source_file: expected0]


Subtree2: BLOCK 9 [source_file: testcode]
    EXPR_RESULT 10 [source_file: testcode]
        ASSIGN 10 [source_file: testcode]
            NAME action 10 [source_file: testcode]
            NAME proto 10 [source_file: testcode]
]
junit.framework.AssertionFailedError: 
Expected: f=function(){var action;a:{var proto=null;try{}finally{try{proto=new Proto}finally{action=proto;break a}}}alert(action)}
Result: f=function(){var action;a:{var proto=null;try{}finally{try{proto=new Proto}finally{action=proto}}}alert(action)}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            ASSIGN 1 [source_file: expected0]
                NAME f 1 [source_file: expected0]
                FUNCTION  1 [source_file: expected0]
                    NAME  1 [source_file: expected0]
                    PARAM_LIST 1 [source_file: expected0]
                    BLOCK 1 [source_file: expected0]
                        VAR 2 [source_file: expected0]
                            NAME action 2 [source_file: expected0]
                        LABEL 3 [source_file: expected0]
                            LABEL_NAME a 3 [source_file: expected0]
                            BLOCK 3 [source_file: expected0]
                                VAR 4 [source_file: expected0]
                                    NAME proto 4 [source_file: expected0]
                                        NULL 4 [source_file: expected0]
                                TRY 5 [source_file: expected0]
                                    BLOCK 5 [source_file: expected0]
                                    BLOCK 6 [source_file: expected0]
                                    BLOCK 6 [source_file: expected0]
                                        TRY 7 [source_file: expected0]
                                            BLOCK 7 [source_file: expected0]
                                                EXPR_RESULT 8 [source_file: expected0]
                                                    ASSIGN 8 [source_file: expected0]
                                                        NAME proto 8 [source_file: expected0]
                                                        NEW 8 [source_file: expected0]
                                                            NAME Proto 8 [source_file: expected0]
                                            BLOCK 9 [source_file: expected0]
                                            BLOCK 9 [source_file: expected0]
                                                EXPR_RESULT 10 [source_file: expected0]
                                                    ASSIGN 10 [source_file: expected0]
                                                        NAME action 10 [source_file: expected0]
                                                        NAME proto 10 [source_file: expected0]
                                                BREAK 11 [source_file: expected0]
                                                    LABEL_NAME a 11 [source_file: expected0]
                        EXPR_RESULT 15 [source_file: expected0]
                            CALL 15 [free_call: 1] [source_file: expected0]
                                NAME alert 15 [source_file: expected0]
                                NAME action 15 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        EXPR_RESULT 1 [source_file: testcode]
            ASSIGN 1 [source_file: testcode]
                NAME f 1 [source_file: testcode]
                FUNCTION  1 [source_file: testcode]
                    NAME  1 [source_file: testcode]
                    PARAM_LIST 1 [source_file: testcode]
                    BLOCK 1 [source_file: testcode]
                        VAR 2 [source_file: testcode]
                            NAME action 2 [source_file: testcode]
                        LABEL 3 [source_file: testcode]
                            LABEL_NAME a 3 [source_file: testcode]
                            BLOCK 3 [source_file: testcode]
                                VAR 4 [source_file: testcode]
                                    NAME proto 4 [source_file: testcode]
                                        NULL 4 [source_file: testcode]
                                TRY 5 [source_file: testcode]
                                    BLOCK 5 [source_file: testcode]
                                    BLOCK 6 [source_file: testcode]
                                    BLOCK 6 [source_file: testcode]
                                        TRY 7 [source_file: testcode]
                                            BLOCK 7 [source_file: testcode]
                                                EXPR_RESULT 8 [source_file: testcode]
                                                    ASSIGN 8 [source_file: testcode]
                                                        NAME proto 8 [source_file: testcode]
                                                        NEW 8 [source_file: testcode]
                                                            NAME Proto 8 [source_file: testcode]
                                            BLOCK 9 [source_file: testcode]
                                            BLOCK 9 [source_file: testcode]
                                                EXPR_RESULT 10 [source_file: testcode]
                                                    ASSIGN 10 [source_file: testcode]
                                                        NAME action 10 [source_file: testcode]
                                                        NAME proto 10 [source_file: testcode]
                        EXPR_RESULT 15 [source_file: testcode]
                            CALL 15 [free_call: 1] [source_file: testcode]
                                NAME alert 15 [source_file: testcode]
                                NAME action 15 [source_file: testcode]


Subtree1: BLOCK 9 [source_file: expected0]
    EXPR_RESULT 10 [source_file: expected0]
        ASSIGN 10 [source_file: expected0]
            NAME action 10 [source_file: expected0]
            NAME proto 10 [source_file: expected0]
    BREAK 11 [source_file: expected0]
        LABEL_NAME a 11 [source_file: expected0]


Subtree2: BLOCK 9 [source_file: testcode]
    EXPR_RESULT 10 [source_file: testcode]
        ASSIGN 10 [source_file: testcode]
            NAME action 10 [source_file: testcode]
            NAME proto 10 [source_file: testcode]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:928)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:460)

19:30:08.642 [pool-63-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

19:30:08.647 [pool-64-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (4 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

19:30:08.652 [pool-65-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (3 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

19:30:08.657 [pool-66-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (4 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

19:30:08.662 [pool-67-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (4 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

19:30:08.667 [pool-68-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (4 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

19:30:08.669 [pool-69-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

19:30:09.373 [pool-21-thread-1] DEBUG f.i.l.c.s.ConstraintBasedSynthesis - Operators:
19:30:09.519 [pool-21-thread-1] DEBUG f.i.l.c.s.ConstraintBasedSynthesis - Operators:
== of arity: 2
!= of arity: 2
< of arity: 2
<= of arity: 2
19:30:09.911 [pool-21-thread-1] DEBUG f.i.l.c.s.ConstraintBasedSynthesis - Successful code synthesis: node2.type <= 31
19:30:09.912 [pool-21-thread-1] INFO  f.i.l.repair.nopol.patch.TestPatch - Applying patch: com.google.javascript.rhino.Node:1428: PRECONDITION node2.type <= 31
19:30:26.056 [pool-21-thread-1] INFO  f.i.l.repair.nopol.patch.TestPatch - Running test suite to check the patch "node2.type <= 31" is working
19:30:29.466 [pool-2-thread-1] INFO  fr.inria.lille.repair.nopol.NoPol - ----INFORMATION----
19:30:29.915 [pool-2-thread-1] INFO  fr.inria.lille.repair.nopol.NoPol - Nb classes : 416
19:30:29.915 [pool-2-thread-1] INFO  fr.inria.lille.repair.nopol.NoPol - Nb methods : 4924
19:30:29.916 [pool-2-thread-1] INFO  fr.inria.lille.repair.nopol.NoPol - Nb Statements Analyzed : 2
19:30:29.916 [pool-2-thread-1] INFO  fr.inria.lille.repair.nopol.NoPol - Nb Statements with Angelic Value Found : 1
19:30:29.916 [pool-2-thread-1] INFO  fr.inria.lille.repair.nopol.NoPol - Nb inputs in SMT : 3
19:30:29.916 [pool-2-thread-1] INFO  fr.inria.lille.repair.nopol.NoPol - Nb SMT level: 2
19:30:29.916 [pool-2-thread-1] INFO  fr.inria.lille.repair.nopol.NoPol - Nb SMT components: [4] [== of arity: 2, != of arity: 2, < of arity: 2, <= of arity: 2]
19:30:29.916 [pool-2-thread-1] INFO  fr.inria.lille.repair.nopol.NoPol -                   class java.lang.Boolean: 4
19:30:29.916 [pool-2-thread-1] INFO  fr.inria.lille.repair.nopol.NoPol - Nb variables in SMT : 101
19:30:29.916 [pool-2-thread-1] INFO  fr.inria.lille.repair.nopol.NoPol - NoPol Execution time : 309321ms
19:30:29.916 [pool-2-thread-1] INFO  fr.inria.lille.repair.nopol.NoPol - 
19:30:29.917 [pool-2-thread-1] INFO  fr.inria.lille.repair.nopol.NoPol - ----PATCH FOUND----
19:30:29.917 [pool-2-thread-1] INFO  fr.inria.lille.repair.nopol.NoPol - node2.type <= 31
19:31:02.398 [pool-2-thread-1] INFO  fr.inria.lille.repair.nopol.NoPol - Nb test that executes the patch: 15
19:31:02.399 [pool-2-thread-1] INFO  fr.inria.lille.repair.nopol.NoPol - com.google.javascript.rhino.Node:1428: PRECONDITION
19:31:02.475 [pool-2-thread-1] INFO  fr.inria.lille.repair.nopol.NoPol - --- a/src/com/google/javascript/rhino/Node.java
+++ b/src/com/google/javascript/rhino/Node.java
@@ -1427,7 +1427,9 @@
       if (diff != null) {
-        return "Node tree inequality:" +
-            "\nTree1:\n" + toStringTree() +
-            "\n\nTree2:\n" + node2.toStringTree() +
-            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
-            "\n\nSubtree2: " + diff.nodeB.toStringTree();
+        if (node2.type <= 31) {
+          return "Node tree inequality:" +
+          "\nTree1:\n" + toStringTree() +
+          "\n\nTree2:\n" + node2.toStringTree() +
+          "\n\nSubtree1: " + diff.nodeA.toStringTree() +
+          "\n\nSubtree2: " + diff.nodeB.toStringTree();
+        }
       }

PATCH
1919.53user 22.15system 6:21.80elapsed 508%CPU (0avgtext+0avgdata 4584720maxresident)k
70688inputs+13952outputs (24major+1940716minor)pagefaults 0swaps


Node: granduc-20.luxembourg.grid5000.fr



Date: Wed Nov 28 19:31:38 EST 2018

