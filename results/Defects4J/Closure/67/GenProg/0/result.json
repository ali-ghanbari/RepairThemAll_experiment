{
  "repair_end": "2018-12-02 13:13:14.056401", 
  "repair_begin": "2018-12-02 12:51:53.162240", 
  "patches": [
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:51:37.259744610 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1126/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 07:06:24.388949395 -0500\n@@ -96,11 +96,6 @@\n               canRemove = true;\n             }\n           }\n-\n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 06:51:37.283732609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1126/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 07:06:24.388949395 -0500\n@@ -359,7 +359,7 @@\n           case LP:              return \"LP\";\n           case RP:              return \"RP\";\n           case COMMA:           return \"COMMA\";\n-          case ASSIGN:          return \"ASSIGN\";\n+          case ASSIGN:          Context cx = Context.getCurrentContext();\n           case ASSIGN_BITOR:    return \"ASSIGN_BITOR\";\n           case ASSIGN_BITXOR:   return \"ASSIGN_BITXOR\";\n           case ASSIGN_BITAND:   return \"ASSIGN_BITAND\";\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 362, 
          "faulty": "return \"ASSIGN\";", 
          "type": "Replace", 
          "seed": "Context cx=Context.getCurrentContext();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:51:37.259744610 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_952/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 07:04:52.113319446 -0500\n@@ -85,7 +85,6 @@\n           boolean canRemove = false;\n \n           if (specializationState == null) {\n-            canRemove = true;\n           } else {\n             Node specializableFunction =\n               getSpecializableFunctionFromSymbol(declaration);\n@@ -96,11 +95,6 @@\n               canRemove = true;\n             }\n           }\n-\n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 06:51:37.279734609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_952/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 07:04:52.113319446 -0500\n@@ -218,7 +218,7 @@\n         case QUOTED_PROP:        return \"quoted\";\n         case OPT_ARG_NAME:       return \"opt_arg\";\n \n-        case SYNTHETIC_BLOCK_PROP: return \"synthetic\";\n+        case SYNTHETIC_BLOCK_PROP: ;\n         case EMPTY_BLOCK:        return \"empty_block\";\n         case ORIGINALNAME_PROP:  return \"originalname\";\n         case SIDE_EFFECT_FLAGS:  return \"side_effect_flags\";\n@@ -937,14 +937,7 @@\n         sb.append(getString());\n       } else if (type == Token.FUNCTION) {\n         sb.append(' ');\n-        // In the case of JsDoc trees, the first child is often not a string\n-        // which causes exceptions to be thrown when calling toString or\n-        // toStringTree.\n-        if (first == null || first.getType() != Token.NAME) {\n-          sb.append(\"<invalid>\");\n-        } else {\n-          sb.append(first.getString());\n-        }\n+        int lineno = getLineno();\n       } else if (this instanceof ScriptOrFnNode) {\n         ScriptOrFnNode sof = (ScriptOrFnNode) this;\n         if (this instanceof FunctionNode) {\n@@ -1424,7 +1417,6 @@\n       }\n       res = n.checkTreeEqualsImpl(n2);\n       if (res != null) {\n-        return res;\n       }\n     }\n     return res;\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 06:51:37.283732609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_952/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 07:04:52.117319426 -0500\n@@ -315,7 +315,7 @@\n           case NUMBER:          return \"NUMBER\";\n           case STRING:          return \"STRING\";\n           case NULL:            return \"NULL\";\n-          case THIS:            return \"THIS\";\n+          case THIS:            ;\n           case FALSE:           return \"FALSE\";\n           case TRUE:            return \"TRUE\";\n           case SHEQ:            return \"SHEQ\";\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 221, 
          "faulty": "return \"synthetic\";", 
          "type": "Delete", 
          "seed": "consumeToken();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1427, 
          "faulty": "return res;", 
          "type": "Delete", 
          "seed": "boolean first=true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 318, 
          "faulty": "return \"THIS\";", 
          "type": "Delete", 
          "seed": "return Token.XMLATTR;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 88, 
          "faulty": "canRemove=true;", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 943, 
          "faulty": "if (first == null || first.getType() != Token.NAME) {\n  sb.append(\"<invalid>\");\n}\n else {\n  sb.append(first.getString());\n}", 
          "type": "Replace", 
          "seed": "int lineno=getLineno();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:51:37.259744610 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_603/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 07:01:53.694805875 -0500\n@@ -96,11 +96,6 @@\n               canRemove = true;\n             }\n           }\n-\n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 06:51:37.279734609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_603/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 07:01:53.694805875 -0500\n@@ -218,7 +218,7 @@\n         case QUOTED_PROP:        return \"quoted\";\n         case OPT_ARG_NAME:       return \"opt_arg\";\n \n-        case SYNTHETIC_BLOCK_PROP: return \"synthetic\";\n+        case SYNTHETIC_BLOCK_PROP: ;\n         case EMPTY_BLOCK:        return \"empty_block\";\n         case ORIGINALNAME_PROP:  return \"originalname\";\n         case SIDE_EFFECT_FLAGS:  return \"side_effect_flags\";\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 06:51:37.283732609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_603/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 07:01:53.694805875 -0500\n@@ -359,7 +359,10 @@\n           case LP:              return \"LP\";\n           case RP:              return \"RP\";\n           case COMMA:           return \"COMMA\";\n-          case ASSIGN:          return \"ASSIGN\";\n+          case ASSIGN:          {\n+\t\t\t\tint c = 0;\n+\t\t\t\treturn \"ASSIGN\";\n+\t\t\t}\n           case ASSIGN_BITOR:    return \"ASSIGN_BITOR\";\n           case ASSIGN_BITXOR:   return \"ASSIGN_BITXOR\";\n           case ASSIGN_BITAND:   return \"ASSIGN_BITAND\";\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 221, 
          "faulty": "return \"synthetic\";", 
          "type": "Delete", 
          "seed": "consumeToken();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 362, 
          "faulty": "return \"ASSIGN\";", 
          "type": "InsertBefore", 
          "seed": "int c=0;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:51:37.259744610 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1545/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 07:09:58.941509396 -0500\n@@ -82,7 +82,8 @@\n     for (NameInfo nameInfo : allNameInfo) {\n       if (!nameInfo.isReferenced()) {\n         for (Symbol declaration : nameInfo.getDeclarations()) {\n-          boolean canRemove = false;\n+          boolean valid = false;\n+\t\tboolean canRemove = false;\n \n           if (specializationState == null) {\n             canRemove = true;\n@@ -96,11 +97,6 @@\n               canRemove = true;\n             }\n           }\n-\n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java\t2018-12-02 06:51:39.210768564 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1545/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java\t2018-12-02 07:09:58.945509489 -0500\n@@ -532,7 +532,8 @@\n \n     @Override\n     public void remove() {\n-      NodeUtil.removeChild(exprNode.getParent(), exprNode);\n+      int index = -1;\n+\tNodeUtil.removeChild(exprNode.getParent(), exprNode);\n     }\n \n     @Override\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 06:51:37.279734609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1545/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 07:09:58.945509489 -0500\n@@ -218,7 +218,7 @@\n         case QUOTED_PROP:        return \"quoted\";\n         case OPT_ARG_NAME:       return \"opt_arg\";\n \n-        case SYNTHETIC_BLOCK_PROP: return \"synthetic\";\n+        case SYNTHETIC_BLOCK_PROP: ;\n         case EMPTY_BLOCK:        return \"empty_block\";\n         case ORIGINALNAME_PROP:  return \"originalname\";\n         case SIDE_EFFECT_FLAGS:  return \"side_effect_flags\";\n@@ -937,14 +937,7 @@\n         sb.append(getString());\n       } else if (type == Token.FUNCTION) {\n         sb.append(' ');\n-        // In the case of JsDoc trees, the first child is often not a string\n-        // which causes exceptions to be thrown when calling toString or\n-        // toStringTree.\n-        if (first == null || first.getType() != Token.NAME) {\n-          sb.append(\"<invalid>\");\n-        } else {\n-          sb.append(first.getString());\n-        }\n+        int lineno = getLineno();\n       } else if (this instanceof ScriptOrFnNode) {\n         ScriptOrFnNode sof = (ScriptOrFnNode) this;\n         if (this instanceof FunctionNode) {\n@@ -1424,7 +1417,6 @@\n       }\n       res = n.checkTreeEqualsImpl(n2);\n       if (res != null) {\n-        return res;\n       }\n     }\n     return res;\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 06:51:37.283732609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1545/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 07:09:58.949509580 -0500\n@@ -315,7 +315,7 @@\n           case NUMBER:          return \"NUMBER\";\n           case STRING:          return \"STRING\";\n           case NULL:            return \"NULL\";\n-          case THIS:            return \"THIS\";\n+          case THIS:            ;\n           case FALSE:           return \"FALSE\";\n           case TRUE:            return \"TRUE\";\n           case SHEQ:            return \"SHEQ\";\n@@ -359,7 +359,7 @@\n           case LP:              return \"LP\";\n           case RP:              return \"RP\";\n           case COMMA:           return \"COMMA\";\n-          case ASSIGN:          return \"ASSIGN\";\n+          case ASSIGN:          Context cx = Context.getCurrentContext();\n           case ASSIGN_BITOR:    return \"ASSIGN_BITOR\";\n           case ASSIGN_BITXOR:   return \"ASSIGN_BITXOR\";\n           case ASSIGN_BITAND:   return \"ASSIGN_BITAND\";\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java", 
          "line": 535, 
          "faulty": "NodeUtil.removeChild(exprNode.getParent(),exprNode);", 
          "type": "InsertBefore", 
          "seed": "int index=-1;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 362, 
          "faulty": "return \"ASSIGN\";", 
          "type": "Delete", 
          "seed": "case 2:"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 85, 
          "faulty": "boolean canRemove=false;", 
          "type": "InsertBefore", 
          "seed": "boolean valid=false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1427, 
          "faulty": "return res;", 
          "type": "Delete", 
          "seed": "boolean first=true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 318, 
          "faulty": "return \"THIS\";", 
          "type": "Delete", 
          "seed": "return Token.XMLATTR;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 221, 
          "faulty": "return \"synthetic\";", 
          "type": "Delete", 
          "seed": "return Token.XMLATTR;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 943, 
          "faulty": "if (first == null || first.getType() != Token.NAME) {\n  sb.append(\"<invalid>\");\n}\n else {\n  sb.append(first.getString());\n}", 
          "type": "Replace", 
          "seed": "int lineno=getLineno();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 362, 
          "faulty": "return \"ASSIGN\";", 
          "type": "Replace", 
          "seed": "Context cx=Context.getCurrentContext();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:51:37.259744610 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_531/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 07:01:14.775330717 -0500\n@@ -96,11 +96,6 @@\n               canRemove = true;\n             }\n           }\n-\n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 06:51:37.279734609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_531/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 07:01:14.779330659 -0500\n@@ -218,7 +218,7 @@\n         case QUOTED_PROP:        return \"quoted\";\n         case OPT_ARG_NAME:       return \"opt_arg\";\n \n-        case SYNTHETIC_BLOCK_PROP: return \"synthetic\";\n+        case SYNTHETIC_BLOCK_PROP: ;\n         case EMPTY_BLOCK:        return \"empty_block\";\n         case ORIGINALNAME_PROP:  return \"originalname\";\n         case SIDE_EFFECT_FLAGS:  return \"side_effect_flags\";\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 06:51:37.283732609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_531/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 07:01:14.779330659 -0500\n@@ -315,7 +315,7 @@\n           case NUMBER:          return \"NUMBER\";\n           case STRING:          return \"STRING\";\n           case NULL:            return \"NULL\";\n-          case THIS:            return \"THIS\";\n+          case THIS:            ;\n           case FALSE:           return \"FALSE\";\n           case TRUE:            return \"TRUE\";\n           case SHEQ:            return \"SHEQ\";\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 221, 
          "faulty": "return \"synthetic\";", 
          "type": "Delete", 
          "seed": "consumeToken();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 318, 
          "faulty": "return \"THIS\";", 
          "type": "Delete", 
          "seed": "return Token.STRING;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 221, 
          "faulty": "return \"synthetic\";", 
          "type": "Delete", 
          "seed": "consumeToken();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:51:37.259744610 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_720/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 07:02:53.790157937 -0500\n@@ -83,24 +83,6 @@\n       if (!nameInfo.isReferenced()) {\n         for (Symbol declaration : nameInfo.getDeclarations()) {\n           boolean canRemove = false;\n-\n-          if (specializationState == null) {\n-            canRemove = true;\n-          } else {\n-            Node specializableFunction =\n-              getSpecializableFunctionFromSymbol(declaration);\n-\n-            if (specializableFunction != null) {\n-              specializationState.reportRemovedFunction(\n-                  specializableFunction, null);\n-              canRemove = true;\n-            }\n-          }\n-\n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java\t2018-12-02 06:51:39.210768564 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_720/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java\t2018-12-02 07:02:53.794157900 -0500\n@@ -532,7 +532,8 @@\n \n     @Override\n     public void remove() {\n-      NodeUtil.removeChild(exprNode.getParent(), exprNode);\n+      int index = -1;\n+\tNodeUtil.removeChild(exprNode.getParent(), exprNode);\n     }\n \n     @Override\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 06:51:37.279734609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_720/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 07:02:53.794157900 -0500\n@@ -218,7 +218,7 @@\n         case QUOTED_PROP:        return \"quoted\";\n         case OPT_ARG_NAME:       return \"opt_arg\";\n \n-        case SYNTHETIC_BLOCK_PROP: return \"synthetic\";\n+        case SYNTHETIC_BLOCK_PROP: ;\n         case EMPTY_BLOCK:        return \"empty_block\";\n         case ORIGINALNAME_PROP:  return \"originalname\";\n         case SIDE_EFFECT_FLAGS:  return \"side_effect_flags\";\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 06:51:37.283732609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_720/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 07:02:53.794157900 -0500\n@@ -307,7 +307,7 @@\n           case TYPEOF:          return \"TYPEOF\";\n           case GETPROP:         return \"GETPROP\";\n           case SETPROP:         return \"SETPROP\";\n-          case GETELEM:         return \"GETELEM\";\n+          case GETELEM:         ;\n           case SETELEM:         return \"SETELEM\";\n           case CALL:            return \"CALL\";\n           case NAME:            return \"NAME\";\n@@ -315,7 +315,7 @@\n           case NUMBER:          return \"NUMBER\";\n           case STRING:          return \"STRING\";\n           case NULL:            return \"NULL\";\n-          case THIS:            return \"THIS\";\n+          case THIS:            ;\n           case FALSE:           return \"FALSE\";\n           case TRUE:            return \"TRUE\";\n           case SHEQ:            return \"SHEQ\";\n@@ -359,7 +359,7 @@\n           case LP:              return \"LP\";\n           case RP:              return \"RP\";\n           case COMMA:           return \"COMMA\";\n-          case ASSIGN:          return \"ASSIGN\";\n+          case ASSIGN:          ;\n           case ASSIGN_BITOR:    return \"ASSIGN_BITOR\";\n           case ASSIGN_BITXOR:   return \"ASSIGN_BITXOR\";\n           case ASSIGN_BITAND:   return \"ASSIGN_BITAND\";\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 102, 
          "faulty": "changed=true;", 
          "type": "InsertBefore", 
          "seed": "StringBuilder builder=new StringBuilder();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 318, 
          "faulty": "return \"THIS\";", 
          "type": "Delete", 
          "seed": "return Token.STRING;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 362, 
          "faulty": "return \"ASSIGN\";", 
          "type": "Delete", 
          "seed": "return Token.LP;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 362, 
          "faulty": "return \"ASSIGN\";", 
          "type": "Delete", 
          "seed": "Node pn=memberExpr(true);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 88, 
          "faulty": "canRemove=true;", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 101, 
          "faulty": "declaration.remove();", 
          "type": "InsertBefore", 
          "seed": "return;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java", 
          "line": 535, 
          "faulty": "NodeUtil.removeChild(exprNode.getParent(),exprNode);", 
          "type": "InsertBefore", 
          "seed": "int index=-1;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 221, 
          "faulty": "return \"synthetic\";", 
          "type": "Delete", 
          "seed": "consumeToken();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 310, 
          "faulty": "return \"GETELEM\";", 
          "type": "Delete", 
          "seed": "String namespace=null;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 88, 
          "faulty": "canRemove=true;", 
          "type": "Replace", 
          "seed": "return;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 87, 
          "faulty": "if (specializationState == null) {\n  canRemove=true;\n}\n else {\n  Node specializableFunction=getSpecializableFunctionFromSymbol(declaration);\n  if (specializableFunction != null) {\n    specializationState.reportRemovedFunction(specializableFunction,null);\n    canRemove=true;\n  }\n}", 
          "type": "Delete", 
          "seed": "return null;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:51:37.259744610 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1783/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 07:12:01.999882063 -0500\n@@ -85,7 +85,6 @@\n           boolean canRemove = false;\n \n           if (specializationState == null) {\n-            canRemove = true;\n           } else {\n             Node specializableFunction =\n               getSpecializableFunctionFromSymbol(declaration);\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 06:51:37.279734609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1783/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 07:12:02.003882128 -0500\n@@ -218,7 +218,7 @@\n         case QUOTED_PROP:        return \"quoted\";\n         case OPT_ARG_NAME:       return \"opt_arg\";\n \n-        case SYNTHETIC_BLOCK_PROP: return \"synthetic\";\n+        case SYNTHETIC_BLOCK_PROP: ;\n         case EMPTY_BLOCK:        return \"empty_block\";\n         case ORIGINALNAME_PROP:  return \"originalname\";\n         case SIDE_EFFECT_FLAGS:  return \"side_effect_flags\";\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 06:51:37.283732609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1783/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 07:12:02.003882128 -0500\n@@ -359,7 +359,7 @@\n           case LP:              return \"LP\";\n           case RP:              return \"RP\";\n           case COMMA:           return \"COMMA\";\n-          case ASSIGN:          return \"ASSIGN\";\n+          case ASSIGN:          ;\n           case ASSIGN_BITOR:    return \"ASSIGN_BITOR\";\n           case ASSIGN_BITXOR:   return \"ASSIGN_BITXOR\";\n           case ASSIGN_BITAND:   return \"ASSIGN_BITAND\";\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 88, 
          "faulty": "canRemove=true;", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 88, 
          "faulty": "canRemove=true;", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 221, 
          "faulty": "return \"synthetic\";", 
          "type": "Delete", 
          "seed": "consumeToken();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 362, 
          "faulty": "return \"ASSIGN\";", 
          "type": "Delete", 
          "seed": "return Token.LP;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 88, 
          "faulty": "canRemove=true;", 
          "type": "Delete", 
          "seed": "return this;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:51:37.259744610 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_718/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 07:02:53.138164035 -0500\n@@ -96,11 +96,6 @@\n               canRemove = true;\n             }\n           }\n-\n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java\t2018-12-02 06:51:39.210768564 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_718/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java\t2018-12-02 07:02:53.138164035 -0500\n@@ -532,7 +532,6 @@\n \n     @Override\n     public void remove() {\n-      NodeUtil.removeChild(exprNode.getParent(), exprNode);\n     }\n \n     @Override\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 102, 
          "faulty": "changed=true;", 
          "type": "InsertBefore", 
          "seed": "StringBuilder builder=new StringBuilder();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java", 
          "line": 535, 
          "faulty": "NodeUtil.removeChild(exprNode.getParent(),exprNode);", 
          "type": "Delete", 
          "seed": "return null;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:51:37.259744610 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1507/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 07:09:40.337070313 -0500\n@@ -85,7 +85,6 @@\n           boolean canRemove = false;\n \n           if (specializationState == null) {\n-            canRemove = true;\n           } else {\n             Node specializableFunction =\n               getSpecializableFunctionFromSymbol(declaration);\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 06:51:37.279734609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1507/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 07:09:40.341070410 -0500\n@@ -937,14 +937,7 @@\n         sb.append(getString());\n       } else if (type == Token.FUNCTION) {\n         sb.append(' ');\n-        // In the case of JsDoc trees, the first child is often not a string\n-        // which causes exceptions to be thrown when calling toString or\n-        // toStringTree.\n-        if (first == null || first.getType() != Token.NAME) {\n-          sb.append(\"<invalid>\");\n-        } else {\n-          sb.append(first.getString());\n-        }\n+        int lineno = getLineno();\n       } else if (this instanceof ScriptOrFnNode) {\n         ScriptOrFnNode sof = (ScriptOrFnNode) this;\n         if (this instanceof FunctionNode) {\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 06:51:37.283732609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1507/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 07:09:40.341070410 -0500\n@@ -307,7 +307,7 @@\n           case TYPEOF:          return \"TYPEOF\";\n           case GETPROP:         return \"GETPROP\";\n           case SETPROP:         return \"SETPROP\";\n-          case GETELEM:         return \"GETELEM\";\n+          case GETELEM:         return \"return\";\n           case SETELEM:         return \"SETELEM\";\n           case CALL:            return \"CALL\";\n           case NAME:            return \"NAME\";\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 88, 
          "faulty": "canRemove=true;", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 943, 
          "faulty": "if (first == null || first.getType() != Token.NAME) {\n  sb.append(\"<invalid>\");\n}\n else {\n  sb.append(first.getString());\n}", 
          "type": "Replace", 
          "seed": "int lineno=getLineno();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 88, 
          "faulty": "canRemove=true;", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 310, 
          "faulty": "return \"GETELEM\";", 
          "type": "Replace", 
          "seed": "return \"return\";"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:51:37.259744610 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1798/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 07:12:09.592003554 -0500\n@@ -83,24 +83,6 @@\n       if (!nameInfo.isReferenced()) {\n         for (Symbol declaration : nameInfo.getDeclarations()) {\n           boolean canRemove = false;\n-\n-          if (specializationState == null) {\n-            canRemove = true;\n-          } else {\n-            Node specializableFunction =\n-              getSpecializableFunctionFromSymbol(declaration);\n-\n-            if (specializableFunction != null) {\n-              specializationState.reportRemovedFunction(\n-                  specializableFunction, null);\n-              canRemove = true;\n-            }\n-          }\n-\n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 06:51:37.279734609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1798/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 07:12:09.592003554 -0500\n@@ -1411,7 +1411,8 @@\n    */\n   NodeMismatch checkTreeEqualsImpl(Node node2) {\n     if (!isEquivalentTo(node2, false, false)) {\n-      return new NodeMismatch(this, node2);\n+      boolean nullKey = false;\n+\treturn new NodeMismatch(this, node2);\n     }\n \n     NodeMismatch res = null;\n@@ -1424,7 +1425,6 @@\n       }\n       res = n.checkTreeEqualsImpl(n2);\n       if (res != null) {\n-        return res;\n       }\n     }\n     return res;\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 88, 
          "faulty": "canRemove=true;", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1427, 
          "faulty": "return res;", 
          "type": "Delete", 
          "seed": "return Token.STRING;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1414, 
          "faulty": "return new NodeMismatch(this,node2);", 
          "type": "InsertBefore", 
          "seed": "boolean nullKey=false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 87, 
          "faulty": "if (specializationState == null) {\n  canRemove=true;\n}\n else {\n  Node specializableFunction=getSpecializableFunctionFromSymbol(declaration);\n  if (specializableFunction != null) {\n    specializationState.reportRemovedFunction(specializableFunction,null);\n    canRemove=true;\n  }\n}", 
          "type": "Delete", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 88, 
          "faulty": "canRemove=true;", 
          "type": "Replace", 
          "seed": "formatConclusion();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:51:37.259744610 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1714/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 07:11:27.427296416 -0500\n@@ -83,24 +83,6 @@\n       if (!nameInfo.isReferenced()) {\n         for (Symbol declaration : nameInfo.getDeclarations()) {\n           boolean canRemove = false;\n-\n-          if (specializationState == null) {\n-            canRemove = true;\n-          } else {\n-            Node specializableFunction =\n-              getSpecializableFunctionFromSymbol(declaration);\n-\n-            if (specializableFunction != null) {\n-              specializationState.reportRemovedFunction(\n-                  specializableFunction, null);\n-              canRemove = true;\n-            }\n-          }\n-\n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 06:51:37.279734609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1714/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 07:11:27.427296416 -0500\n@@ -218,7 +218,7 @@\n         case QUOTED_PROP:        return \"quoted\";\n         case OPT_ARG_NAME:       return \"opt_arg\";\n \n-        case SYNTHETIC_BLOCK_PROP: return \"synthetic\";\n+        case SYNTHETIC_BLOCK_PROP: ;\n         case EMPTY_BLOCK:        return \"empty_block\";\n         case ORIGINALNAME_PROP:  return \"originalname\";\n         case SIDE_EFFECT_FLAGS:  return \"side_effect_flags\";\n@@ -1411,7 +1411,8 @@\n    */\n   NodeMismatch checkTreeEqualsImpl(Node node2) {\n     if (!isEquivalentTo(node2, false, false)) {\n-      return new NodeMismatch(this, node2);\n+      boolean nullKey = false;\n+\treturn new NodeMismatch(this, node2);\n     }\n \n     NodeMismatch res = null;\n@@ -1424,7 +1425,6 @@\n       }\n       res = n.checkTreeEqualsImpl(n2);\n       if (res != null) {\n-        return res;\n       }\n     }\n     return res;\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 88, 
          "faulty": "canRemove=true;", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 221, 
          "faulty": "return \"synthetic\";", 
          "type": "Delete", 
          "seed": "return Token.XMLATTR;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1427, 
          "faulty": "return res;", 
          "type": "Delete", 
          "seed": "return Token.STRING;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1414, 
          "faulty": "return new NodeMismatch(this,node2);", 
          "type": "InsertBefore", 
          "seed": "boolean nullKey=false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 87, 
          "faulty": "if (specializationState == null) {\n  canRemove=true;\n}\n else {\n  Node specializableFunction=getSpecializableFunctionFromSymbol(declaration);\n  if (specializableFunction != null) {\n    specializationState.reportRemovedFunction(specializableFunction,null);\n    canRemove=true;\n  }\n}", 
          "type": "Delete", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 88, 
          "faulty": "canRemove=true;", 
          "type": "Replace", 
          "seed": "formatConclusion();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:51:37.259744610 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1143/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 07:06:32.952924431 -0500\n@@ -96,11 +96,6 @@\n               canRemove = true;\n             }\n           }\n-\n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 06:51:37.279734609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1143/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 07:06:32.952924431 -0500\n@@ -218,7 +218,7 @@\n         case QUOTED_PROP:        return \"quoted\";\n         case OPT_ARG_NAME:       return \"opt_arg\";\n \n-        case SYNTHETIC_BLOCK_PROP: return \"synthetic\";\n+        case SYNTHETIC_BLOCK_PROP: ;\n         case EMPTY_BLOCK:        return \"empty_block\";\n         case ORIGINALNAME_PROP:  return \"originalname\";\n         case SIDE_EFFECT_FLAGS:  return \"side_effect_flags\";\n@@ -943,7 +943,6 @@\n         if (first == null || first.getType() != Token.NAME) {\n           sb.append(\"<invalid>\");\n         } else {\n-          sb.append(first.getString());\n         }\n       } else if (this instanceof ScriptOrFnNode) {\n         ScriptOrFnNode sof = (ScriptOrFnNode) this;\n@@ -1424,7 +1423,6 @@\n       }\n       res = n.checkTreeEqualsImpl(n2);\n       if (res != null) {\n-        return res;\n       }\n     }\n     return res;\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 06:51:37.283732609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1143/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 07:06:32.952924431 -0500\n@@ -315,7 +315,7 @@\n           case NUMBER:          return \"NUMBER\";\n           case STRING:          return \"STRING\";\n           case NULL:            return \"NULL\";\n-          case THIS:            return \"THIS\";\n+          case THIS:            ;\n           case FALSE:           return \"FALSE\";\n           case TRUE:            return \"TRUE\";\n           case SHEQ:            return \"SHEQ\";\n@@ -359,7 +359,7 @@\n           case LP:              return \"LP\";\n           case RP:              return \"RP\";\n           case COMMA:           return \"COMMA\";\n-          case ASSIGN:          return \"ASSIGN\";\n+          case ASSIGN:          ;\n           case ASSIGN_BITOR:    return \"ASSIGN_BITOR\";\n           case ASSIGN_BITXOR:   return \"ASSIGN_BITXOR\";\n           case ASSIGN_BITAND:   return \"ASSIGN_BITAND\";\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 221, 
          "faulty": "return \"synthetic\";", 
          "type": "Delete", 
          "seed": "consumeToken();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1427, 
          "faulty": "return res;", 
          "type": "Delete", 
          "seed": "boolean first=true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 318, 
          "faulty": "return \"THIS\";", 
          "type": "Delete", 
          "seed": "return Token.XMLATTR;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 221, 
          "faulty": "return \"synthetic\";", 
          "type": "Delete", 
          "seed": "return Token.XMLATTR;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 221, 
          "faulty": "return \"synthetic\";", 
          "type": "Delete", 
          "seed": "consumeToken();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1427, 
          "faulty": "return res;", 
          "type": "Delete", 
          "seed": "boolean first=true;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 362, 
          "faulty": "return \"ASSIGN\";", 
          "type": "Delete", 
          "seed": "return Token.LP;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 946, 
          "faulty": "sb.append(first.getString());", 
          "type": "Delete", 
          "seed": "matchChar('|');"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:51:37.259744610 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_58/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:56:49.651721243 -0500\n@@ -81,28 +81,6 @@\n     boolean changed = false;\n     for (NameInfo nameInfo : allNameInfo) {\n       if (!nameInfo.isReferenced()) {\n-        for (Symbol declaration : nameInfo.getDeclarations()) {\n-          boolean canRemove = false;\n-\n-          if (specializationState == null) {\n-            canRemove = true;\n-          } else {\n-            Node specializableFunction =\n-              getSpecializableFunctionFromSymbol(declaration);\n-\n-            if (specializableFunction != null) {\n-              specializationState.reportRemovedFunction(\n-                  specializableFunction, null);\n-              canRemove = true;\n-            }\n-          }\n-\n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n-        }\n-\n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n       }\n     }\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 06:51:37.283732609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_58/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 06:56:49.655721302 -0500\n@@ -307,7 +307,7 @@\n           case TYPEOF:          return \"TYPEOF\";\n           case GETPROP:         return \"GETPROP\";\n           case SETPROP:         return \"SETPROP\";\n-          case GETELEM:         return \"GETELEM\";\n+          case GETELEM:         ;\n           case SETELEM:         return \"SETELEM\";\n           case CALL:            return \"CALL\";\n           case NAME:            return \"NAME\";\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 310, 
          "faulty": "return \"GETELEM\";", 
          "type": "Delete", 
          "seed": "String X=null;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 84, 
          "faulty": "for (Symbol declaration : nameInfo.getDeclarations()) {\n  boolean canRemove=false;\n  if (specializationState == null) {\n    canRemove=true;\n  }\n else {\n    Node specializableFunction=getSpecializableFunctionFromSymbol(declaration);\n    if (specializableFunction != null) {\n      specializationState.reportRemovedFunction(specializableFunction,null);\n      canRemove=true;\n    }\n  }\n  if (canRemove) {\n    declaration.remove();\n    changed=true;\n  }\n}", 
          "type": "Delete", 
          "seed": "StringBuilder builder=new StringBuilder();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:51:37.259744610 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_661/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 07:02:23.314464026 -0500\n@@ -96,11 +96,6 @@\n               canRemove = true;\n             }\n           }\n-\n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 06:51:37.279734609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_661/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 07:02:23.314464026 -0500\n@@ -218,7 +218,7 @@\n         case QUOTED_PROP:        return \"quoted\";\n         case OPT_ARG_NAME:       return \"opt_arg\";\n \n-        case SYNTHETIC_BLOCK_PROP: return \"synthetic\";\n+        case SYNTHETIC_BLOCK_PROP: ;\n         case EMPTY_BLOCK:        return \"empty_block\";\n         case ORIGINALNAME_PROP:  return \"originalname\";\n         case SIDE_EFFECT_FLAGS:  return \"side_effect_flags\";\n@@ -1424,7 +1424,6 @@\n       }\n       res = n.checkTreeEqualsImpl(n2);\n       if (res != null) {\n-        return res;\n       }\n     }\n     return res;\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 06:51:37.283732609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_661/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 07:02:23.318463983 -0500\n@@ -315,7 +315,7 @@\n           case NUMBER:          return \"NUMBER\";\n           case STRING:          return \"STRING\";\n           case NULL:            return \"NULL\";\n-          case THIS:            return \"THIS\";\n+          case THIS:            ;\n           case FALSE:           return \"FALSE\";\n           case TRUE:            return \"TRUE\";\n           case SHEQ:            return \"SHEQ\";\n@@ -359,7 +359,7 @@\n           case LP:              return \"LP\";\n           case RP:              return \"RP\";\n           case COMMA:           return \"COMMA\";\n-          case ASSIGN:          return \"ASSIGN\";\n+          case ASSIGN:          ;\n           case ASSIGN_BITOR:    return \"ASSIGN_BITOR\";\n           case ASSIGN_BITXOR:   return \"ASSIGN_BITXOR\";\n           case ASSIGN_BITAND:   return \"ASSIGN_BITAND\";\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 102, 
          "faulty": "changed=true;", 
          "type": "InsertBefore", 
          "seed": "StringBuilder builder=new StringBuilder();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 318, 
          "faulty": "return \"THIS\";", 
          "type": "Delete", 
          "seed": "return Token.STRING;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 362, 
          "faulty": "return \"ASSIGN\";", 
          "type": "Delete", 
          "seed": "return Token.LP;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 221, 
          "faulty": "return \"synthetic\";", 
          "type": "Delete", 
          "seed": "consumeToken();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1427, 
          "faulty": "return res;", 
          "type": "Delete", 
          "seed": "boolean first=true;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:51:37.259744610 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_782/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 07:03:26.745873082 -0500\n@@ -96,11 +96,6 @@\n               canRemove = true;\n             }\n           }\n-\n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 06:51:37.283732609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_782/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 07:03:26.749873051 -0500\n@@ -315,7 +315,7 @@\n           case NUMBER:          return \"NUMBER\";\n           case STRING:          return \"STRING\";\n           case NULL:            return \"NULL\";\n-          case THIS:            return \"THIS\";\n+          case THIS:            ;\n           case FALSE:           return \"FALSE\";\n           case TRUE:            return \"TRUE\";\n           case SHEQ:            return \"SHEQ\";\n@@ -359,7 +359,7 @@\n           case LP:              return \"LP\";\n           case RP:              return \"RP\";\n           case COMMA:           return \"COMMA\";\n-          case ASSIGN:          return \"ASSIGN\";\n+          case ASSIGN:          ;\n           case ASSIGN_BITOR:    return \"ASSIGN_BITOR\";\n           case ASSIGN_BITXOR:   return \"ASSIGN_BITXOR\";\n           case ASSIGN_BITAND:   return \"ASSIGN_BITAND\";\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 102, 
          "faulty": "changed=true;", 
          "type": "InsertBefore", 
          "seed": "StringBuilder builder=new StringBuilder();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 318, 
          "faulty": "return \"THIS\";", 
          "type": "Delete", 
          "seed": "return Token.STRING;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 362, 
          "faulty": "return \"ASSIGN\";", 
          "type": "Delete", 
          "seed": "return Token.LP;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 318, 
          "faulty": "return \"THIS\";", 
          "type": "Delete", 
          "seed": "return Token.STRING;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 362, 
          "faulty": "return \"ASSIGN\";", 
          "type": "Delete", 
          "seed": "return Token.LP;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:51:37.259744610 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1266/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 07:07:36.853399557 -0500\n@@ -85,7 +85,6 @@\n           boolean canRemove = false;\n \n           if (specializationState == null) {\n-            canRemove = true;\n           } else {\n             Node specializableFunction =\n               getSpecializableFunctionFromSymbol(declaration);\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 06:51:37.279734609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1266/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 07:07:36.853399557 -0500\n@@ -218,7 +218,7 @@\n         case QUOTED_PROP:        return \"quoted\";\n         case OPT_ARG_NAME:       return \"opt_arg\";\n \n-        case SYNTHETIC_BLOCK_PROP: return \"synthetic\";\n+        case SYNTHETIC_BLOCK_PROP: ;\n         case EMPTY_BLOCK:        return \"empty_block\";\n         case ORIGINALNAME_PROP:  return \"originalname\";\n         case SIDE_EFFECT_FLAGS:  return \"side_effect_flags\";\n@@ -937,14 +937,7 @@\n         sb.append(getString());\n       } else if (type == Token.FUNCTION) {\n         sb.append(' ');\n-        // In the case of JsDoc trees, the first child is often not a string\n-        // which causes exceptions to be thrown when calling toString or\n-        // toStringTree.\n-        if (first == null || first.getType() != Token.NAME) {\n-          sb.append(\"<invalid>\");\n-        } else {\n-          sb.append(first.getString());\n-        }\n+        int lineno = getLineno();\n       } else if (this instanceof ScriptOrFnNode) {\n         ScriptOrFnNode sof = (ScriptOrFnNode) this;\n         if (this instanceof FunctionNode) {\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 06:51:37.283732609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1266/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 07:07:36.857399702 -0500\n@@ -359,7 +359,7 @@\n           case LP:              return \"LP\";\n           case RP:              return \"RP\";\n           case COMMA:           return \"COMMA\";\n-          case ASSIGN:          return \"ASSIGN\";\n+          case ASSIGN:          ;\n           case ASSIGN_BITOR:    return \"ASSIGN_BITOR\";\n           case ASSIGN_BITXOR:   return \"ASSIGN_BITXOR\";\n           case ASSIGN_BITAND:   return \"ASSIGN_BITAND\";\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 88, 
          "faulty": "canRemove=true;", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 943, 
          "faulty": "if (first == null || first.getType() != Token.NAME) {\n  sb.append(\"<invalid>\");\n}\n else {\n  sb.append(first.getString());\n}", 
          "type": "Replace", 
          "seed": "int lineno=getLineno();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 221, 
          "faulty": "return \"synthetic\";", 
          "type": "Delete", 
          "seed": "return Token.XMLATTR;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 362, 
          "faulty": "return \"ASSIGN\";", 
          "type": "Delete", 
          "seed": "case 2:"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:51:37.259744610 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_825/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 07:03:47.273717360 -0500\n@@ -85,7 +85,6 @@\n           boolean canRemove = false;\n \n           if (specializationState == null) {\n-            canRemove = true;\n           } else {\n             Node specializableFunction =\n               getSpecializableFunctionFromSymbol(declaration);\n@@ -96,11 +95,6 @@\n               canRemove = true;\n             }\n           }\n-\n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java\t2018-12-02 06:51:39.210768564 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_825/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java\t2018-12-02 07:03:47.277717331 -0500\n@@ -532,7 +532,6 @@\n \n     @Override\n     public void remove() {\n-      NodeUtil.removeChild(exprNode.getParent(), exprNode);\n     }\n \n     @Override\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 06:51:37.279734609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_825/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 07:03:47.277717331 -0500\n@@ -943,7 +943,7 @@\n         if (first == null || first.getType() != Token.NAME) {\n           sb.append(\"<invalid>\");\n         } else {\n-          sb.append(first.getString());\n+          Kit.codeBug();\n         }\n       } else if (this instanceof ScriptOrFnNode) {\n         ScriptOrFnNode sof = (ScriptOrFnNode) this;\n@@ -1424,7 +1424,8 @@\n       }\n       res = n.checkTreeEqualsImpl(n2);\n       if (res != null) {\n-        return res;\n+        parent = null;\n+\t\treturn res;\n       }\n     }\n     return res;\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 06:51:37.283732609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_825/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 07:03:47.281717302 -0500\n@@ -307,7 +307,7 @@\n           case TYPEOF:          return \"TYPEOF\";\n           case GETPROP:         return \"GETPROP\";\n           case SETPROP:         return \"SETPROP\";\n-          case GETELEM:         return \"GETELEM\";\n+          case GETELEM:         ;\n           case SETELEM:         return \"SETELEM\";\n           case CALL:            return \"CALL\";\n           case NAME:            return \"NAME\";\n@@ -359,7 +359,7 @@\n           case LP:              return \"LP\";\n           case RP:              return \"RP\";\n           case COMMA:           return \"COMMA\";\n-          case ASSIGN:          return \"ASSIGN\";\n+          case ASSIGN:          ;\n           case ASSIGN_BITOR:    return \"ASSIGN_BITOR\";\n           case ASSIGN_BITXOR:   return \"ASSIGN_BITXOR\";\n           case ASSIGN_BITAND:   return \"ASSIGN_BITAND\";\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 102, 
          "faulty": "changed=true;", 
          "type": "InsertBefore", 
          "seed": "StringBuilder builder=new StringBuilder();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 362, 
          "faulty": "return \"ASSIGN\";", 
          "type": "Delete", 
          "seed": "Node pn=memberExpr(true);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 88, 
          "faulty": "canRemove=true;", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 101, 
          "faulty": "declaration.remove();", 
          "type": "InsertBefore", 
          "seed": "return;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java", 
          "line": 535, 
          "faulty": "NodeUtil.removeChild(exprNode.getParent(),exprNode);", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 946, 
          "faulty": "sb.append(first.getString());", 
          "type": "Replace", 
          "seed": "Kit.codeBug();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1427, 
          "faulty": "return res;", 
          "type": "InsertBefore", 
          "seed": "parent=null;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 310, 
          "faulty": "return \"GETELEM\";", 
          "type": "Delete", 
          "seed": "String namespace=null;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:51:37.259744610 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_938/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 07:04:44.953357060 -0500\n@@ -96,11 +96,6 @@\n               canRemove = true;\n             }\n           }\n-\n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 06:51:37.279734609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_938/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 07:04:44.953357060 -0500\n@@ -1424,7 +1424,6 @@\n       }\n       res = n.checkTreeEqualsImpl(n2);\n       if (res != null) {\n-        return res;\n       }\n     }\n     return res;\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 102, 
          "faulty": "changed=true;", 
          "type": "InsertBefore", 
          "seed": "StringBuilder builder=new StringBuilder();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1427, 
          "faulty": "return res;", 
          "type": "Delete", 
          "seed": "return Token.STRING;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:51:37.259744610 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1359/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 07:08:23.310954864 -0500\n@@ -85,7 +85,6 @@\n           boolean canRemove = false;\n \n           if (specializationState == null) {\n-            canRemove = true;\n           } else {\n             Node specializableFunction =\n               getSpecializableFunctionFromSymbol(declaration);\n@@ -96,11 +95,6 @@\n               canRemove = true;\n             }\n           }\n-\n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 06:51:37.279734609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1359/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 07:08:23.310954864 -0500\n@@ -218,7 +218,7 @@\n         case QUOTED_PROP:        return \"quoted\";\n         case OPT_ARG_NAME:       return \"opt_arg\";\n \n-        case SYNTHETIC_BLOCK_PROP: return \"synthetic\";\n+        case SYNTHETIC_BLOCK_PROP: ;\n         case EMPTY_BLOCK:        return \"empty_block\";\n         case ORIGINALNAME_PROP:  return \"originalname\";\n         case SIDE_EFFECT_FLAGS:  return \"side_effect_flags\";\n@@ -937,14 +937,7 @@\n         sb.append(getString());\n       } else if (type == Token.FUNCTION) {\n         sb.append(' ');\n-        // In the case of JsDoc trees, the first child is often not a string\n-        // which causes exceptions to be thrown when calling toString or\n-        // toStringTree.\n-        if (first == null || first.getType() != Token.NAME) {\n-          sb.append(\"<invalid>\");\n-        } else {\n-          sb.append(first.getString());\n-        }\n+        int lineno = getLineno();\n       } else if (this instanceof ScriptOrFnNode) {\n         ScriptOrFnNode sof = (ScriptOrFnNode) this;\n         if (this instanceof FunctionNode) {\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 06:51:37.283732609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1359/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 07:08:23.310954864 -0500\n@@ -307,7 +307,7 @@\n           case TYPEOF:          return \"TYPEOF\";\n           case GETPROP:         return \"GETPROP\";\n           case SETPROP:         return \"SETPROP\";\n-          case GETELEM:         return \"GETELEM\";\n+          case GETELEM:         return \"return\";\n           case SETELEM:         return \"SETELEM\";\n           case CALL:            return \"CALL\";\n           case NAME:            return \"NAME\";\n@@ -315,7 +315,7 @@\n           case NUMBER:          return \"NUMBER\";\n           case STRING:          return \"STRING\";\n           case NULL:            return \"NULL\";\n-          case THIS:            return \"THIS\";\n+          case THIS:            ;\n           case FALSE:           return \"FALSE\";\n           case TRUE:            return \"TRUE\";\n           case SHEQ:            return \"SHEQ\";\n@@ -359,7 +359,7 @@\n           case LP:              return \"LP\";\n           case RP:              return \"RP\";\n           case COMMA:           return \"COMMA\";\n-          case ASSIGN:          return \"ASSIGN\";\n+          case ASSIGN:          Context cx = Context.getCurrentContext();\n           case ASSIGN_BITOR:    return \"ASSIGN_BITOR\";\n           case ASSIGN_BITXOR:   return \"ASSIGN_BITXOR\";\n           case ASSIGN_BITAND:   return \"ASSIGN_BITAND\";\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 88, 
          "faulty": "canRemove=true;", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 318, 
          "faulty": "return \"THIS\";", 
          "type": "Delete", 
          "seed": "return Token.XMLATTR;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 221, 
          "faulty": "return \"synthetic\";", 
          "type": "Delete", 
          "seed": "return Token.XMLATTR;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 221, 
          "faulty": "return \"synthetic\";", 
          "type": "Delete", 
          "seed": "consumeToken();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 943, 
          "faulty": "if (first == null || first.getType() != Token.NAME) {\n  sb.append(\"<invalid>\");\n}\n else {\n  sb.append(first.getString());\n}", 
          "type": "Replace", 
          "seed": "int lineno=getLineno();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 362, 
          "faulty": "return \"ASSIGN\";", 
          "type": "Replace", 
          "seed": "Context cx=Context.getCurrentContext();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 310, 
          "faulty": "return \"GETELEM\";", 
          "type": "Replace", 
          "seed": "return \"return\";"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:51:37.259744610 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_730/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 07:02:59.730103220 -0500\n@@ -96,11 +96,6 @@\n               canRemove = true;\n             }\n           }\n-\n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 06:51:37.283732609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_730/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 07:02:59.734103184 -0500\n@@ -359,7 +359,7 @@\n           case LP:              return \"LP\";\n           case RP:              return \"RP\";\n           case COMMA:           return \"COMMA\";\n-          case ASSIGN:          return \"ASSIGN\";\n+          case ASSIGN:          ;\n           case ASSIGN_BITOR:    return \"ASSIGN_BITOR\";\n           case ASSIGN_BITXOR:   return \"ASSIGN_BITXOR\";\n           case ASSIGN_BITAND:   return \"ASSIGN_BITAND\";\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 362, 
          "faulty": "return \"ASSIGN\";", 
          "type": "Delete", 
          "seed": "return Token.LP;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:51:37.259744610 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1240/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 07:07:24.392939865 -0500\n@@ -85,7 +85,6 @@\n           boolean canRemove = false;\n \n           if (specializationState == null) {\n-            canRemove = true;\n           } else {\n             Node specializableFunction =\n               getSpecializableFunctionFromSymbol(declaration);\n@@ -96,11 +95,6 @@\n               canRemove = true;\n             }\n           }\n-\n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 06:51:37.279734609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1240/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 07:07:24.392939865 -0500\n@@ -218,7 +218,7 @@\n         case QUOTED_PROP:        return \"quoted\";\n         case OPT_ARG_NAME:       return \"opt_arg\";\n \n-        case SYNTHETIC_BLOCK_PROP: return \"synthetic\";\n+        case SYNTHETIC_BLOCK_PROP: ;\n         case EMPTY_BLOCK:        return \"empty_block\";\n         case ORIGINALNAME_PROP:  return \"originalname\";\n         case SIDE_EFFECT_FLAGS:  return \"side_effect_flags\";\n@@ -937,14 +937,7 @@\n         sb.append(getString());\n       } else if (type == Token.FUNCTION) {\n         sb.append(' ');\n-        // In the case of JsDoc trees, the first child is often not a string\n-        // which causes exceptions to be thrown when calling toString or\n-        // toStringTree.\n-        if (first == null || first.getType() != Token.NAME) {\n-          sb.append(\"<invalid>\");\n-        } else {\n-          sb.append(first.getString());\n-        }\n+        int lineno = getLineno();\n       } else if (this instanceof ScriptOrFnNode) {\n         ScriptOrFnNode sof = (ScriptOrFnNode) this;\n         if (this instanceof FunctionNode) {\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 06:51:37.283732609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1240/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 07:07:24.396940016 -0500\n@@ -315,7 +315,7 @@\n           case NUMBER:          return \"NUMBER\";\n           case STRING:          return \"STRING\";\n           case NULL:            return \"NULL\";\n-          case THIS:            return \"THIS\";\n+          case THIS:            ;\n           case FALSE:           return \"FALSE\";\n           case TRUE:            return \"TRUE\";\n           case SHEQ:            return \"SHEQ\";\n@@ -359,7 +359,7 @@\n           case LP:              return \"LP\";\n           case RP:              return \"RP\";\n           case COMMA:           return \"COMMA\";\n-          case ASSIGN:          return \"ASSIGN\";\n+          case ASSIGN:          Context cx = Context.getCurrentContext();\n           case ASSIGN_BITOR:    return \"ASSIGN_BITOR\";\n           case ASSIGN_BITXOR:   return \"ASSIGN_BITXOR\";\n           case ASSIGN_BITAND:   return \"ASSIGN_BITAND\";\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 88, 
          "faulty": "canRemove=true;", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 318, 
          "faulty": "return \"THIS\";", 
          "type": "Delete", 
          "seed": "return Token.XMLATTR;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 221, 
          "faulty": "return \"synthetic\";", 
          "type": "Delete", 
          "seed": "return Token.XMLATTR;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 221, 
          "faulty": "return \"synthetic\";", 
          "type": "Delete", 
          "seed": "consumeToken();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 943, 
          "faulty": "if (first == null || first.getType() != Token.NAME) {\n  sb.append(\"<invalid>\");\n}\n else {\n  sb.append(first.getString());\n}", 
          "type": "Replace", 
          "seed": "int lineno=getLineno();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 362, 
          "faulty": "return \"ASSIGN\";", 
          "type": "Replace", 
          "seed": "Context cx=Context.getCurrentContext();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:51:37.259744610 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_289/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:58:58.245042616 -0500\n@@ -96,11 +96,6 @@\n               canRemove = true;\n             }\n           }\n-\n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 06:51:37.279734609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_289/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 06:58:58.249042630 -0500\n@@ -218,7 +218,7 @@\n         case QUOTED_PROP:        return \"quoted\";\n         case OPT_ARG_NAME:       return \"opt_arg\";\n \n-        case SYNTHETIC_BLOCK_PROP: return \"synthetic\";\n+        case SYNTHETIC_BLOCK_PROP: ;\n         case EMPTY_BLOCK:        return \"empty_block\";\n         case ORIGINALNAME_PROP:  return \"originalname\";\n         case SIDE_EFFECT_FLAGS:  return \"side_effect_flags\";\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 06:51:37.283732609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_289/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 06:58:58.249042630 -0500\n@@ -359,7 +359,7 @@\n           case LP:              return \"LP\";\n           case RP:              return \"RP\";\n           case COMMA:           return \"COMMA\";\n-          case ASSIGN:          return \"ASSIGN\";\n+          case ASSIGN:          ;\n           case ASSIGN_BITOR:    return \"ASSIGN_BITOR\";\n           case ASSIGN_BITXOR:   return \"ASSIGN_BITXOR\";\n           case ASSIGN_BITAND:   return \"ASSIGN_BITAND\";\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 102, 
          "faulty": "changed=true;", 
          "type": "InsertBefore", 
          "seed": "StringBuilder builder=new StringBuilder();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 221, 
          "faulty": "return \"synthetic\";", 
          "type": "Delete", 
          "seed": "consumeToken();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 362, 
          "faulty": "return \"ASSIGN\";", 
          "type": "Delete", 
          "seed": "return Token.EOF;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:51:37.259744610 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_497/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 07:00:56.563609348 -0500\n@@ -85,7 +85,6 @@\n           boolean canRemove = false;\n \n           if (specializationState == null) {\n-            canRemove = true;\n           } else {\n             Node specializableFunction =\n               getSpecializableFunctionFromSymbol(declaration);\n@@ -96,11 +95,6 @@\n               canRemove = true;\n             }\n           }\n-\n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 06:51:37.279734609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_497/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 07:00:56.563609348 -0500\n@@ -218,7 +218,7 @@\n         case QUOTED_PROP:        return \"quoted\";\n         case OPT_ARG_NAME:       return \"opt_arg\";\n \n-        case SYNTHETIC_BLOCK_PROP: return \"synthetic\";\n+        case SYNTHETIC_BLOCK_PROP: ;\n         case EMPTY_BLOCK:        return \"empty_block\";\n         case ORIGINALNAME_PROP:  return \"originalname\";\n         case SIDE_EFFECT_FLAGS:  return \"side_effect_flags\";\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 06:51:37.283732609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_497/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 07:00:56.567609284 -0500\n@@ -359,7 +359,7 @@\n           case LP:              return \"LP\";\n           case RP:              return \"RP\";\n           case COMMA:           return \"COMMA\";\n-          case ASSIGN:          return \"ASSIGN\";\n+          case ASSIGN:          ;\n           case ASSIGN_BITOR:    return \"ASSIGN_BITOR\";\n           case ASSIGN_BITXOR:   return \"ASSIGN_BITXOR\";\n           case ASSIGN_BITAND:   return \"ASSIGN_BITAND\";\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 102, 
          "faulty": "changed=true;", 
          "type": "InsertBefore", 
          "seed": "StringBuilder builder=new StringBuilder();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 221, 
          "faulty": "return \"synthetic\";", 
          "type": "Delete", 
          "seed": "consumeToken();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 362, 
          "faulty": "return \"ASSIGN\";", 
          "type": "Delete", 
          "seed": "Node pn=memberExpr(true);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 88, 
          "faulty": "canRemove=true;", 
          "type": "Delete", 
          "seed": "return null;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:51:37.259744610 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_341/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:59:27.941130782 -0500\n@@ -81,28 +81,6 @@\n     boolean changed = false;\n     for (NameInfo nameInfo : allNameInfo) {\n       if (!nameInfo.isReferenced()) {\n-        for (Symbol declaration : nameInfo.getDeclarations()) {\n-          boolean canRemove = false;\n-\n-          if (specializationState == null) {\n-            canRemove = true;\n-          } else {\n-            Node specializableFunction =\n-              getSpecializableFunctionFromSymbol(declaration);\n-\n-            if (specializableFunction != null) {\n-              specializationState.reportRemovedFunction(\n-                  specializableFunction, null);\n-              canRemove = true;\n-            }\n-          }\n-\n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n-        }\n-\n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n       }\n     }\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 06:51:37.279734609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_341/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 06:59:27.941130782 -0500\n@@ -218,7 +218,7 @@\n         case QUOTED_PROP:        return \"quoted\";\n         case OPT_ARG_NAME:       return \"opt_arg\";\n \n-        case SYNTHETIC_BLOCK_PROP: return \"synthetic\";\n+        case SYNTHETIC_BLOCK_PROP: ;\n         case EMPTY_BLOCK:        return \"empty_block\";\n         case ORIGINALNAME_PROP:  return \"originalname\";\n         case SIDE_EFFECT_FLAGS:  return \"side_effect_flags\";\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 221, 
          "faulty": "return \"synthetic\";", 
          "type": "Delete", 
          "seed": "consumeToken();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 84, 
          "faulty": "for (Symbol declaration : nameInfo.getDeclarations()) {\n  boolean canRemove=false;\n  if (specializationState == null) {\n    canRemove=true;\n  }\n else {\n    Node specializableFunction=getSpecializableFunctionFromSymbol(declaration);\n    if (specializableFunction != null) {\n      specializationState.reportRemovedFunction(specializableFunction,null);\n      canRemove=true;\n    }\n  }\n  if (canRemove) {\n    declaration.remove();\n    changed=true;\n  }\n}", 
          "type": "Delete", 
          "seed": "StringBuilder builder=new StringBuilder();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:51:37.259744610 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1663/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 07:10:59.770786032 -0500\n@@ -85,7 +85,6 @@\n           boolean canRemove = false;\n \n           if (specializationState == null) {\n-            canRemove = true;\n           } else {\n             Node specializableFunction =\n               getSpecializableFunctionFromSymbol(declaration);\n@@ -96,11 +95,6 @@\n               canRemove = true;\n             }\n           }\n-\n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 06:51:37.279734609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1663/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 07:10:59.770786032 -0500\n@@ -218,7 +218,7 @@\n         case QUOTED_PROP:        return \"quoted\";\n         case OPT_ARG_NAME:       return \"opt_arg\";\n \n-        case SYNTHETIC_BLOCK_PROP: return \"synthetic\";\n+        case SYNTHETIC_BLOCK_PROP: ;\n         case EMPTY_BLOCK:        return \"empty_block\";\n         case ORIGINALNAME_PROP:  return \"originalname\";\n         case SIDE_EFFECT_FLAGS:  return \"side_effect_flags\";\n@@ -937,14 +937,7 @@\n         sb.append(getString());\n       } else if (type == Token.FUNCTION) {\n         sb.append(' ');\n-        // In the case of JsDoc trees, the first child is often not a string\n-        // which causes exceptions to be thrown when calling toString or\n-        // toStringTree.\n-        if (first == null || first.getType() != Token.NAME) {\n-          sb.append(\"<invalid>\");\n-        } else {\n-          sb.append(first.getString());\n-        }\n+        int lineno = getLineno();\n       } else if (this instanceof ScriptOrFnNode) {\n         ScriptOrFnNode sof = (ScriptOrFnNode) this;\n         if (this instanceof FunctionNode) {\n@@ -1424,7 +1417,7 @@\n       }\n       res = n.checkTreeEqualsImpl(n2);\n       if (res != null) {\n-        return res;\n+        Kit.codeBug();\n       }\n     }\n     return res;\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 06:51:37.283732609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1663/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 07:10:59.774786110 -0500\n@@ -315,7 +315,7 @@\n           case NUMBER:          return \"NUMBER\";\n           case STRING:          return \"STRING\";\n           case NULL:            return \"NULL\";\n-          case THIS:            return \"THIS\";\n+          case THIS:            ;\n           case FALSE:           return \"FALSE\";\n           case TRUE:            return \"TRUE\";\n           case SHEQ:            return \"SHEQ\";\n@@ -359,7 +359,7 @@\n           case LP:              return \"LP\";\n           case RP:              return \"RP\";\n           case COMMA:           return \"COMMA\";\n-          case ASSIGN:          return \"ASSIGN\";\n+          case ASSIGN:          ;\n           case ASSIGN_BITOR:    return \"ASSIGN_BITOR\";\n           case ASSIGN_BITXOR:   return \"ASSIGN_BITXOR\";\n           case ASSIGN_BITAND:   return \"ASSIGN_BITAND\";\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 88, 
          "faulty": "canRemove=true;", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 943, 
          "faulty": "if (first == null || first.getType() != Token.NAME) {\n  sb.append(\"<invalid>\");\n}\n else {\n  sb.append(first.getString());\n}", 
          "type": "Replace", 
          "seed": "int lineno=getLineno();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 221, 
          "faulty": "return \"synthetic\";", 
          "type": "Delete", 
          "seed": "consumeToken();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1427, 
          "faulty": "return res;", 
          "type": "Delete", 
          "seed": "boolean first=true;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 88, 
          "faulty": "canRemove=true;", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 943, 
          "faulty": "if (first == null || first.getType() != Token.NAME) {\n  sb.append(\"<invalid>\");\n}\n else {\n  sb.append(first.getString());\n}", 
          "type": "Replace", 
          "seed": "int lineno=getLineno();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 221, 
          "faulty": "return \"synthetic\";", 
          "type": "Delete", 
          "seed": "consumeToken();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1427, 
          "faulty": "return res;", 
          "type": "Delete", 
          "seed": "boolean first=true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 362, 
          "faulty": "return \"ASSIGN\";", 
          "type": "Delete", 
          "seed": "return Token.LP;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 221, 
          "faulty": "return \"synthetic\";", 
          "type": "Delete", 
          "seed": "return Token.XMLATTR;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 88, 
          "faulty": "canRemove=true;", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 318, 
          "faulty": "return \"THIS\";", 
          "type": "Delete", 
          "seed": "return Token.STRING;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1427, 
          "faulty": "return res;", 
          "type": "Replace", 
          "seed": "Kit.codeBug();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 102, 
          "faulty": "changed=true;", 
          "type": "InsertBefore", 
          "seed": "boolean valid=false;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:51:37.259744610 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_349/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:59:32.380834042 -0500\n@@ -96,11 +96,6 @@\n               canRemove = true;\n             }\n           }\n-\n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 06:51:37.279734609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_349/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 06:59:32.384833692 -0500\n@@ -218,7 +218,7 @@\n         case QUOTED_PROP:        return \"quoted\";\n         case OPT_ARG_NAME:       return \"opt_arg\";\n \n-        case SYNTHETIC_BLOCK_PROP: return \"synthetic\";\n+        case SYNTHETIC_BLOCK_PROP: ;\n         case EMPTY_BLOCK:        return \"empty_block\";\n         case ORIGINALNAME_PROP:  return \"originalname\";\n         case SIDE_EFFECT_FLAGS:  return \"side_effect_flags\";\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 102, 
          "faulty": "changed=true;", 
          "type": "InsertBefore", 
          "seed": "StringBuilder builder=new StringBuilder();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 221, 
          "faulty": "return \"synthetic\";", 
          "type": "Delete", 
          "seed": "consumeToken();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 102, 
          "faulty": "changed=true;", 
          "type": "Replace", 
          "seed": "return 0;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:51:37.259744610 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_633/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 07:02:08.866624983 -0500\n@@ -85,7 +85,6 @@\n           boolean canRemove = false;\n \n           if (specializationState == null) {\n-            canRemove = true;\n           } else {\n             Node specializableFunction =\n               getSpecializableFunctionFromSymbol(declaration);\n@@ -96,11 +95,6 @@\n               canRemove = true;\n             }\n           }\n-\n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 06:51:37.279734609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_633/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 07:02:08.870624937 -0500\n@@ -943,7 +943,8 @@\n         if (first == null || first.getType() != Token.NAME) {\n           sb.append(\"<invalid>\");\n         } else {\n-          sb.append(first.getString());\n+          sb.append(Token.name(type));\n+\t\tsb.append(first.getString());\n         }\n       } else if (this instanceof ScriptOrFnNode) {\n         ScriptOrFnNode sof = (ScriptOrFnNode) this;\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 06:51:37.283732609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_633/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 07:02:08.870624937 -0500\n@@ -315,7 +315,7 @@\n           case NUMBER:          return \"NUMBER\";\n           case STRING:          return \"STRING\";\n           case NULL:            return \"NULL\";\n-          case THIS:            return \"THIS\";\n+          case THIS:            ;\n           case FALSE:           return \"FALSE\";\n           case TRUE:            return \"TRUE\";\n           case SHEQ:            return \"SHEQ\";\n@@ -359,7 +359,7 @@\n           case LP:              return \"LP\";\n           case RP:              return \"RP\";\n           case COMMA:           return \"COMMA\";\n-          case ASSIGN:          return \"ASSIGN\";\n+          case ASSIGN:          ;\n           case ASSIGN_BITOR:    return \"ASSIGN_BITOR\";\n           case ASSIGN_BITXOR:   return \"ASSIGN_BITXOR\";\n           case ASSIGN_BITAND:   return \"ASSIGN_BITAND\";\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 318, 
          "faulty": "return \"THIS\";", 
          "type": "Delete", 
          "seed": "return Token.STRING;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 362, 
          "faulty": "return \"ASSIGN\";", 
          "type": "Delete", 
          "seed": "return Token.LP;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 88, 
          "faulty": "canRemove=true;", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 946, 
          "faulty": "sb.append(first.getString());", 
          "type": "InsertBefore", 
          "seed": "sb.append(Token.name(type));"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:51:37.259744610 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_805/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 07:03:37.573788984 -0500\n@@ -85,7 +85,6 @@\n           boolean canRemove = false;\n \n           if (specializationState == null) {\n-            canRemove = true;\n           } else {\n             Node specializableFunction =\n               getSpecializableFunctionFromSymbol(declaration);\n@@ -96,11 +95,6 @@\n               canRemove = true;\n             }\n           }\n-\n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 06:51:37.283732609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_805/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 07:03:37.577788953 -0500\n@@ -307,7 +307,7 @@\n           case TYPEOF:          return \"TYPEOF\";\n           case GETPROP:         return \"GETPROP\";\n           case SETPROP:         return \"SETPROP\";\n-          case GETELEM:         return \"GETELEM\";\n+          case GETELEM:         ;\n           case SETELEM:         return \"SETELEM\";\n           case CALL:            return \"CALL\";\n           case NAME:            return \"NAME\";\n@@ -356,7 +356,10 @@\n           case RB:              return \"RB\";\n           case LC:              return \"LC\";\n           case RC:              return \"RC\";\n-          case LP:              return \"LP\";\n+          case LP:              {\n+\t\t\t\tKit.codeBug();\n+\t\t\t\treturn \"LP\";\n+\t\t\t}\n           case RP:              return \"RP\";\n           case COMMA:           return \"COMMA\";\n           case ASSIGN:          return \"ASSIGN\";\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 310, 
          "faulty": "return \"GETELEM\";", 
          "type": "Delete", 
          "seed": "String namespace=null;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 88, 
          "faulty": "canRemove=true;", 
          "type": "Replace", 
          "seed": "return;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 88, 
          "faulty": "canRemove=true;", 
          "type": "Delete", 
          "seed": "int index=-1;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 359, 
          "faulty": "return \"LP\";", 
          "type": "InsertBefore", 
          "seed": "Kit.codeBug();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:51:37.259744610 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1017/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 07:05:26.869156426 -0500\n@@ -85,7 +85,6 @@\n           boolean canRemove = false;\n \n           if (specializationState == null) {\n-            canRemove = true;\n           } else {\n             Node specializableFunction =\n               getSpecializableFunctionFromSymbol(declaration);\n@@ -96,11 +95,6 @@\n               canRemove = true;\n             }\n           }\n-\n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 06:51:37.279734609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1017/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 07:05:26.869156426 -0500\n@@ -1424,7 +1424,6 @@\n       }\n       res = n.checkTreeEqualsImpl(n2);\n       if (res != null) {\n-        return res;\n       }\n     }\n     return res;\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 102, 
          "faulty": "changed=true;", 
          "type": "InsertBefore", 
          "seed": "StringBuilder builder=new StringBuilder();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 88, 
          "faulty": "canRemove=true;", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 102, 
          "faulty": "changed=true;", 
          "type": "InsertBefore", 
          "seed": "StringBuilder builder=new StringBuilder();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1427, 
          "faulty": "return res;", 
          "type": "Delete", 
          "seed": "return Token.STRING;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:51:37.259744610 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_779/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 07:03:25.441883515 -0500\n@@ -85,7 +85,6 @@\n           boolean canRemove = false;\n \n           if (specializationState == null) {\n-            canRemove = true;\n           } else {\n             Node specializableFunction =\n               getSpecializableFunctionFromSymbol(declaration);\n@@ -96,11 +95,6 @@\n               canRemove = true;\n             }\n           }\n-\n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 06:51:37.279734609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_779/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 07:03:25.441883515 -0500\n@@ -218,7 +218,7 @@\n         case QUOTED_PROP:        return \"quoted\";\n         case OPT_ARG_NAME:       return \"opt_arg\";\n \n-        case SYNTHETIC_BLOCK_PROP: return \"synthetic\";\n+        case SYNTHETIC_BLOCK_PROP: ;\n         case EMPTY_BLOCK:        return \"empty_block\";\n         case ORIGINALNAME_PROP:  return \"originalname\";\n         case SIDE_EFFECT_FLAGS:  return \"side_effect_flags\";\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 06:51:37.283732609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_779/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 07:03:25.441883515 -0500\n@@ -315,7 +315,7 @@\n           case NUMBER:          return \"NUMBER\";\n           case STRING:          return \"STRING\";\n           case NULL:            return \"NULL\";\n-          case THIS:            return \"THIS\";\n+          case THIS:            ;\n           case FALSE:           return \"FALSE\";\n           case TRUE:            return \"TRUE\";\n           case SHEQ:            return \"SHEQ\";\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 88, 
          "faulty": "canRemove=true;", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 318, 
          "faulty": "return \"THIS\";", 
          "type": "Delete", 
          "seed": "return Token.STRING;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 102, 
          "faulty": "changed=true;", 
          "type": "InsertBefore", 
          "seed": "StringBuilder builder=new StringBuilder();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 221, 
          "faulty": "return \"synthetic\";", 
          "type": "Delete", 
          "seed": "consumeToken();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:51:37.259744610 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_758/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 07:03:14.249975815 -0500\n@@ -85,7 +85,6 @@\n           boolean canRemove = false;\n \n           if (specializationState == null) {\n-            canRemove = true;\n           } else {\n             Node specializableFunction =\n               getSpecializableFunctionFromSymbol(declaration);\n@@ -96,11 +95,6 @@\n               canRemove = true;\n             }\n           }\n-\n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java\t2018-12-02 06:51:39.210768564 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_758/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java\t2018-12-02 07:03:14.249975815 -0500\n@@ -532,7 +532,6 @@\n \n     @Override\n     public void remove() {\n-      NodeUtil.removeChild(exprNode.getParent(), exprNode);\n     }\n \n     @Override\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 06:51:37.283732609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_758/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 07:03:14.253975783 -0500\n@@ -359,7 +359,7 @@\n           case LP:              return \"LP\";\n           case RP:              return \"RP\";\n           case COMMA:           return \"COMMA\";\n-          case ASSIGN:          return \"ASSIGN\";\n+          case ASSIGN:          ;\n           case ASSIGN_BITOR:    return \"ASSIGN_BITOR\";\n           case ASSIGN_BITXOR:   return \"ASSIGN_BITXOR\";\n           case ASSIGN_BITAND:   return \"ASSIGN_BITAND\";\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 102, 
          "faulty": "changed=true;", 
          "type": "InsertBefore", 
          "seed": "StringBuilder builder=new StringBuilder();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 362, 
          "faulty": "return \"ASSIGN\";", 
          "type": "Delete", 
          "seed": "Node pn=memberExpr(true);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 88, 
          "faulty": "canRemove=true;", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 101, 
          "faulty": "declaration.remove();", 
          "type": "InsertBefore", 
          "seed": "return;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java", 
          "line": 535, 
          "faulty": "NodeUtil.removeChild(exprNode.getParent(),exprNode);", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 362, 
          "faulty": "return \"ASSIGN\";", 
          "type": "Delete", 
          "seed": "boolean isUnicodeEscapeStart=false;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:51:37.259744610 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1100/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 07:06:11.920988295 -0500\n@@ -96,11 +96,6 @@\n               canRemove = true;\n             }\n           }\n-\n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 06:51:37.279734609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1100/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 07:06:11.924988281 -0500\n@@ -943,7 +943,6 @@\n         if (first == null || first.getType() != Token.NAME) {\n           sb.append(\"<invalid>\");\n         } else {\n-          sb.append(first.getString());\n         }\n       } else if (this instanceof ScriptOrFnNode) {\n         ScriptOrFnNode sof = (ScriptOrFnNode) this;\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 06:51:37.283732609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1100/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 07:06:11.924988281 -0500\n@@ -359,7 +359,7 @@\n           case LP:              return \"LP\";\n           case RP:              return \"RP\";\n           case COMMA:           return \"COMMA\";\n-          case ASSIGN:          return \"ASSIGN\";\n+          case ASSIGN:          ;\n           case ASSIGN_BITOR:    return \"ASSIGN_BITOR\";\n           case ASSIGN_BITXOR:   return \"ASSIGN_BITXOR\";\n           case ASSIGN_BITAND:   return \"ASSIGN_BITAND\";\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 362, 
          "faulty": "return \"ASSIGN\";", 
          "type": "Delete", 
          "seed": "return Token.LP;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 946, 
          "faulty": "sb.append(first.getString());", 
          "type": "Delete", 
          "seed": "matchChar('|');"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:51:37.259744610 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1342/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 07:08:15.966724556 -0500\n@@ -96,11 +96,6 @@\n               canRemove = true;\n             }\n           }\n-\n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java\t2018-12-02 06:51:39.210768564 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1342/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java\t2018-12-02 07:08:15.970724684 -0500\n@@ -532,7 +532,8 @@\n \n     @Override\n     public void remove() {\n-      NodeUtil.removeChild(exprNode.getParent(), exprNode);\n+      int index = -1;\n+\tNodeUtil.removeChild(exprNode.getParent(), exprNode);\n     }\n \n     @Override\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 06:51:37.279734609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1342/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 07:08:15.970724684 -0500\n@@ -218,7 +218,7 @@\n         case QUOTED_PROP:        return \"quoted\";\n         case OPT_ARG_NAME:       return \"opt_arg\";\n \n-        case SYNTHETIC_BLOCK_PROP: return \"synthetic\";\n+        case SYNTHETIC_BLOCK_PROP: ;\n         case EMPTY_BLOCK:        return \"empty_block\";\n         case ORIGINALNAME_PROP:  return \"originalname\";\n         case SIDE_EFFECT_FLAGS:  return \"side_effect_flags\";\n@@ -1424,7 +1424,6 @@\n       }\n       res = n.checkTreeEqualsImpl(n2);\n       if (res != null) {\n-        return res;\n       }\n     }\n     return res;\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 06:51:37.283732609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1342/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 07:08:15.970724684 -0500\n@@ -359,7 +359,7 @@\n           case LP:              return \"LP\";\n           case RP:              return \"RP\";\n           case COMMA:           return \"COMMA\";\n-          case ASSIGN:          return \"ASSIGN\";\n+          case ASSIGN:          ;\n           case ASSIGN_BITOR:    return \"ASSIGN_BITOR\";\n           case ASSIGN_BITXOR:   return \"ASSIGN_BITXOR\";\n           case ASSIGN_BITAND:   return \"ASSIGN_BITAND\";\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 221, 
          "faulty": "return \"synthetic\";", 
          "type": "Delete", 
          "seed": "return Token.XMLATTR;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 221, 
          "faulty": "return \"synthetic\";", 
          "type": "Delete", 
          "seed": "consumeToken();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1427, 
          "faulty": "return res;", 
          "type": "Delete", 
          "seed": "boolean first=true;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 102, 
          "faulty": "changed=true;", 
          "type": "InsertBefore", 
          "seed": "StringBuilder builder=new StringBuilder();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java", 
          "line": 535, 
          "faulty": "NodeUtil.removeChild(exprNode.getParent(),exprNode);", 
          "type": "InsertBefore", 
          "seed": "int index=-1;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 362, 
          "faulty": "return \"ASSIGN\";", 
          "type": "Delete", 
          "seed": "case 2:"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:51:37.259744610 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1389/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 07:08:38.343409488 -0500\n@@ -85,7 +85,6 @@\n           boolean canRemove = false;\n \n           if (specializationState == null) {\n-            canRemove = true;\n           } else {\n             Node specializableFunction =\n               getSpecializableFunctionFromSymbol(declaration);\n@@ -96,11 +95,6 @@\n               canRemove = true;\n             }\n           }\n-\n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java\t2018-12-02 06:51:39.210768564 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1389/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java\t2018-12-02 07:08:38.343409488 -0500\n@@ -532,7 +532,8 @@\n \n     @Override\n     public void remove() {\n-      NodeUtil.removeChild(exprNode.getParent(), exprNode);\n+      int index = -1;\n+\tNodeUtil.removeChild(exprNode.getParent(), exprNode);\n     }\n \n     @Override\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 06:51:37.279734609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1389/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 07:08:38.347409606 -0500\n@@ -218,7 +218,7 @@\n         case QUOTED_PROP:        return \"quoted\";\n         case OPT_ARG_NAME:       return \"opt_arg\";\n \n-        case SYNTHETIC_BLOCK_PROP: return \"synthetic\";\n+        case SYNTHETIC_BLOCK_PROP: ;\n         case EMPTY_BLOCK:        return \"empty_block\";\n         case ORIGINALNAME_PROP:  return \"originalname\";\n         case SIDE_EFFECT_FLAGS:  return \"side_effect_flags\";\n@@ -937,14 +937,7 @@\n         sb.append(getString());\n       } else if (type == Token.FUNCTION) {\n         sb.append(' ');\n-        // In the case of JsDoc trees, the first child is often not a string\n-        // which causes exceptions to be thrown when calling toString or\n-        // toStringTree.\n-        if (first == null || first.getType() != Token.NAME) {\n-          sb.append(\"<invalid>\");\n-        } else {\n-          sb.append(first.getString());\n-        }\n+        int lineno = getLineno();\n       } else if (this instanceof ScriptOrFnNode) {\n         ScriptOrFnNode sof = (ScriptOrFnNode) this;\n         if (this instanceof FunctionNode) {\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 06:51:37.283732609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1389/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 07:08:38.347409606 -0500\n@@ -307,7 +307,7 @@\n           case TYPEOF:          return \"TYPEOF\";\n           case GETPROP:         return \"GETPROP\";\n           case SETPROP:         return \"SETPROP\";\n-          case GETELEM:         return \"GETELEM\";\n+          case GETELEM:         ;\n           case SETELEM:         return \"SETELEM\";\n           case CALL:            return \"CALL\";\n           case NAME:            return \"NAME\";\n@@ -359,7 +359,7 @@\n           case LP:              return \"LP\";\n           case RP:              return \"RP\";\n           case COMMA:           return \"COMMA\";\n-          case ASSIGN:          return \"ASSIGN\";\n+          case ASSIGN:          Context cx = Context.getCurrentContext();\n           case ASSIGN_BITOR:    return \"ASSIGN_BITOR\";\n           case ASSIGN_BITXOR:   return \"ASSIGN_BITXOR\";\n           case ASSIGN_BITAND:   return \"ASSIGN_BITAND\";\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 88, 
          "faulty": "canRemove=true;", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 943, 
          "faulty": "if (first == null || first.getType() != Token.NAME) {\n  sb.append(\"<invalid>\");\n}\n else {\n  sb.append(first.getString());\n}", 
          "type": "Replace", 
          "seed": "int lineno=getLineno();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 221, 
          "faulty": "return \"synthetic\";", 
          "type": "Delete", 
          "seed": "return Token.XMLATTR;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 943, 
          "faulty": "if (first == null || first.getType() != Token.NAME) {\n  sb.append(\"<invalid>\");\n}\n else {\n  sb.append(first.getString());\n}", 
          "type": "Replace", 
          "seed": "int lineno=getLineno();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 362, 
          "faulty": "return \"ASSIGN\";", 
          "type": "Replace", 
          "seed": "Context cx=Context.getCurrentContext();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 102, 
          "faulty": "changed=true;", 
          "type": "InsertBefore", 
          "seed": "StringBuilder builder=new StringBuilder();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java", 
          "line": 535, 
          "faulty": "NodeUtil.removeChild(exprNode.getParent(),exprNode);", 
          "type": "InsertBefore", 
          "seed": "int index=-1;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 943, 
          "faulty": "if (first == null || first.getType() != Token.NAME) {\n  sb.append(\"<invalid>\");\n}\n else {\n  sb.append(first.getString());\n}", 
          "type": "Replace", 
          "seed": "int lineno=getLineno();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 362, 
          "faulty": "return \"ASSIGN\";", 
          "type": "Replace", 
          "seed": "Context cx=Context.getCurrentContext();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 310, 
          "faulty": "return \"GETELEM\";", 
          "type": "Delete", 
          "seed": "return false;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:51:37.259744610 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_204/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:58:09.200844167 -0500\n@@ -96,11 +96,6 @@\n               canRemove = true;\n             }\n           }\n-\n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 06:51:37.279734609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_204/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 06:58:09.204844200 -0500\n@@ -1424,7 +1424,6 @@\n       }\n       res = n.checkTreeEqualsImpl(n2);\n       if (res != null) {\n-        return res;\n       }\n     }\n     return res;\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 06:51:37.283732609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_204/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 06:58:09.204844200 -0500\n@@ -315,7 +315,7 @@\n           case NUMBER:          return \"NUMBER\";\n           case STRING:          return \"STRING\";\n           case NULL:            return \"NULL\";\n-          case THIS:            return \"THIS\";\n+          case THIS:            boolean nullKey = false;\n           case FALSE:           return \"FALSE\";\n           case TRUE:            return \"TRUE\";\n           case SHEQ:            return \"SHEQ\";\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 102, 
          "faulty": "changed=true;", 
          "type": "InsertBefore", 
          "seed": "StringBuilder builder=new StringBuilder();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 318, 
          "faulty": "return \"THIS\";", 
          "type": "Replace", 
          "seed": "boolean nullKey=false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1427, 
          "faulty": "return res;", 
          "type": "Delete", 
          "seed": "NodeMismatch res=null;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:51:37.259744610 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1808/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 07:12:14.784085258 -0500\n@@ -85,7 +85,6 @@\n           boolean canRemove = false;\n \n           if (specializationState == null) {\n-            canRemove = true;\n           } else {\n             Node specializableFunction =\n               getSpecializableFunctionFromSymbol(declaration);\n@@ -96,11 +95,6 @@\n               canRemove = true;\n             }\n           }\n-\n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 06:51:37.283732609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1808/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 07:12:14.788085321 -0500\n@@ -307,7 +307,7 @@\n           case TYPEOF:          return \"TYPEOF\";\n           case GETPROP:         return \"GETPROP\";\n           case SETPROP:         return \"SETPROP\";\n-          case GETELEM:         return \"GETELEM\";\n+          case GETELEM:         ;\n           case SETELEM:         return \"SETELEM\";\n           case CALL:            return \"CALL\";\n           case NAME:            return \"NAME\";\n@@ -315,7 +315,7 @@\n           case NUMBER:          return \"NUMBER\";\n           case STRING:          return \"STRING\";\n           case NULL:            return \"NULL\";\n-          case THIS:            return \"THIS\";\n+          case THIS:            ;\n           case FALSE:           return \"FALSE\";\n           case TRUE:            return \"TRUE\";\n           case SHEQ:            return \"SHEQ\";\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 318, 
          "faulty": "return \"THIS\";", 
          "type": "Delete", 
          "seed": "return Token.STRING;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 88, 
          "faulty": "canRemove=true;", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 318, 
          "faulty": "return \"THIS\";", 
          "type": "Delete", 
          "seed": "return Token.STRING;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 310, 
          "faulty": "return \"GETELEM\";", 
          "type": "Delete", 
          "seed": "consumeToken();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:51:37.259744610 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_244/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:58:31.680966270 -0500\n@@ -85,7 +85,6 @@\n           boolean canRemove = false;\n \n           if (specializationState == null) {\n-            canRemove = true;\n           } else {\n             Node specializableFunction =\n               getSpecializableFunctionFromSymbol(declaration);\n@@ -96,11 +95,6 @@\n               canRemove = true;\n             }\n           }\n-\n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n@@ -108,7 +102,8 @@\n     }\n \n     if (changed) {\n-      compiler.reportCodeChange();\n+      int index = -1;\n+\tcompiler.reportCodeChange();\n     }\n   }\n \n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 102, 
          "faulty": "changed=true;", 
          "type": "InsertBefore", 
          "seed": "StringBuilder builder=new StringBuilder();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 102, 
          "faulty": "changed=true;", 
          "type": "Delete", 
          "seed": "return;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 102, 
          "faulty": "changed=true;", 
          "type": "InsertBefore", 
          "seed": "StringBuilder builder=new StringBuilder();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 111, 
          "faulty": "compiler.reportCodeChange();", 
          "type": "InsertBefore", 
          "seed": "int index=-1;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 88, 
          "faulty": "canRemove=true;", 
          "type": "Delete", 
          "seed": "return null;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:51:37.259744610 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1731/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 07:11:35.219433260 -0500\n@@ -85,7 +85,6 @@\n           boolean canRemove = false;\n \n           if (specializationState == null) {\n-            canRemove = true;\n           } else {\n             Node specializableFunction =\n               getSpecializableFunctionFromSymbol(declaration);\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 06:51:37.279734609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1731/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 07:11:35.219433260 -0500\n@@ -218,7 +218,7 @@\n         case QUOTED_PROP:        return \"quoted\";\n         case OPT_ARG_NAME:       return \"opt_arg\";\n \n-        case SYNTHETIC_BLOCK_PROP: return \"synthetic\";\n+        case SYNTHETIC_BLOCK_PROP: ;\n         case EMPTY_BLOCK:        return \"empty_block\";\n         case ORIGINALNAME_PROP:  return \"originalname\";\n         case SIDE_EFFECT_FLAGS:  return \"side_effect_flags\";\n@@ -937,14 +937,7 @@\n         sb.append(getString());\n       } else if (type == Token.FUNCTION) {\n         sb.append(' ');\n-        // In the case of JsDoc trees, the first child is often not a string\n-        // which causes exceptions to be thrown when calling toString or\n-        // toStringTree.\n-        if (first == null || first.getType() != Token.NAME) {\n-          sb.append(\"<invalid>\");\n-        } else {\n-          sb.append(first.getString());\n-        }\n+        int lineno = getLineno();\n       } else if (this instanceof ScriptOrFnNode) {\n         ScriptOrFnNode sof = (ScriptOrFnNode) this;\n         if (this instanceof FunctionNode) {\n@@ -1424,7 +1417,7 @@\n       }\n       res = n.checkTreeEqualsImpl(n2);\n       if (res != null) {\n-        return res;\n+        Kit.codeBug();\n       }\n     }\n     return res;\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 06:51:37.283732609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1731/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 07:11:35.223433329 -0500\n@@ -315,7 +315,7 @@\n           case NUMBER:          return \"NUMBER\";\n           case STRING:          return \"STRING\";\n           case NULL:            return \"NULL\";\n-          case THIS:            return \"THIS\";\n+          case THIS:            ;\n           case FALSE:           return \"FALSE\";\n           case TRUE:            return \"TRUE\";\n           case SHEQ:            return \"SHEQ\";\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 88, 
          "faulty": "canRemove=true;", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 943, 
          "faulty": "if (first == null || first.getType() != Token.NAME) {\n  sb.append(\"<invalid>\");\n}\n else {\n  sb.append(first.getString());\n}", 
          "type": "Replace", 
          "seed": "int lineno=getLineno();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 221, 
          "faulty": "return \"synthetic\";", 
          "type": "Delete", 
          "seed": "consumeToken();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 221, 
          "faulty": "return \"synthetic\";", 
          "type": "Delete", 
          "seed": "return Token.XMLATTR;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 318, 
          "faulty": "return \"THIS\";", 
          "type": "Delete", 
          "seed": "return Token.STRING;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1427, 
          "faulty": "return res;", 
          "type": "Replace", 
          "seed": "Kit.codeBug();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:51:37.259744610 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_902/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 07:04:25.273468141 -0500\n@@ -85,7 +85,6 @@\n           boolean canRemove = false;\n \n           if (specializationState == null) {\n-            canRemove = true;\n           } else {\n             Node specializableFunction =\n               getSpecializableFunctionFromSymbol(declaration);\n@@ -96,11 +95,6 @@\n               canRemove = true;\n             }\n           }\n-\n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 06:51:37.279734609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_902/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 07:04:25.277468116 -0500\n@@ -937,14 +937,7 @@\n         sb.append(getString());\n       } else if (type == Token.FUNCTION) {\n         sb.append(' ');\n-        // In the case of JsDoc trees, the first child is often not a string\n-        // which causes exceptions to be thrown when calling toString or\n-        // toStringTree.\n-        if (first == null || first.getType() != Token.NAME) {\n-          sb.append(\"<invalid>\");\n-        } else {\n-          sb.append(first.getString());\n-        }\n+        int lineno = getLineno();\n       } else if (this instanceof ScriptOrFnNode) {\n         ScriptOrFnNode sof = (ScriptOrFnNode) this;\n         if (this instanceof FunctionNode) {\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 06:51:37.283732609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_902/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 07:04:25.277468116 -0500\n@@ -359,7 +359,7 @@\n           case LP:              return \"LP\";\n           case RP:              return \"RP\";\n           case COMMA:           return \"COMMA\";\n-          case ASSIGN:          return \"ASSIGN\";\n+          case ASSIGN:          Context cx = Context.getCurrentContext();\n           case ASSIGN_BITOR:    return \"ASSIGN_BITOR\";\n           case ASSIGN_BITXOR:   return \"ASSIGN_BITXOR\";\n           case ASSIGN_BITAND:   return \"ASSIGN_BITAND\";\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 102, 
          "faulty": "changed=true;", 
          "type": "InsertBefore", 
          "seed": "StringBuilder builder=new StringBuilder();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 88, 
          "faulty": "canRemove=true;", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 943, 
          "faulty": "if (first == null || first.getType() != Token.NAME) {\n  sb.append(\"<invalid>\");\n}\n else {\n  sb.append(first.getString());\n}", 
          "type": "Replace", 
          "seed": "int lineno=getLineno();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 362, 
          "faulty": "return \"ASSIGN\";", 
          "type": "Replace", 
          "seed": "Context cx=Context.getCurrentContext();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:51:37.259744610 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1626/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 07:10:40.750411005 -0500\n@@ -85,7 +85,6 @@\n           boolean canRemove = false;\n \n           if (specializationState == null) {\n-            canRemove = true;\n           } else {\n             Node specializableFunction =\n               getSpecializableFunctionFromSymbol(declaration);\n@@ -96,11 +95,6 @@\n               canRemove = true;\n             }\n           }\n-\n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 06:51:37.279734609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1626/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 07:10:40.750411005 -0500\n@@ -1424,7 +1424,6 @@\n       }\n       res = n.checkTreeEqualsImpl(n2);\n       if (res != null) {\n-        return res;\n       }\n     }\n     return res;\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 06:51:37.283732609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1626/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 07:10:40.750411005 -0500\n@@ -307,7 +307,7 @@\n           case TYPEOF:          return \"TYPEOF\";\n           case GETPROP:         return \"GETPROP\";\n           case SETPROP:         return \"SETPROP\";\n-          case GETELEM:         return \"GETELEM\";\n+          case GETELEM:         return \"return\";\n           case SETELEM:         return \"SETELEM\";\n           case CALL:            return \"CALL\";\n           case NAME:            return \"NAME\";\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 88, 
          "faulty": "canRemove=true;", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 310, 
          "faulty": "return \"GETELEM\";", 
          "type": "Replace", 
          "seed": "return \"return\";"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1427, 
          "faulty": "return res;", 
          "type": "Delete", 
          "seed": "return Token.STRING;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:51:37.259744610 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_443/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 07:00:25.460634161 -0500\n@@ -96,11 +96,6 @@\n               canRemove = true;\n             }\n           }\n-\n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 06:51:37.279734609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_443/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 07:00:25.460634161 -0500\n@@ -218,7 +218,7 @@\n         case QUOTED_PROP:        return \"quoted\";\n         case OPT_ARG_NAME:       return \"opt_arg\";\n \n-        case SYNTHETIC_BLOCK_PROP: return \"synthetic\";\n+        case SYNTHETIC_BLOCK_PROP: ;\n         case EMPTY_BLOCK:        return \"empty_block\";\n         case ORIGINALNAME_PROP:  return \"originalname\";\n         case SIDE_EFFECT_FLAGS:  return \"side_effect_flags\";\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 06:51:37.283732609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_443/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 07:00:25.460634161 -0500\n@@ -307,7 +307,7 @@\n           case TYPEOF:          return \"TYPEOF\";\n           case GETPROP:         return \"GETPROP\";\n           case SETPROP:         return \"SETPROP\";\n-          case GETELEM:         return \"GETELEM\";\n+          case GETELEM:         ;\n           case SETELEM:         return \"SETELEM\";\n           case CALL:            return \"CALL\";\n           case NAME:            return \"NAME\";\n@@ -359,7 +359,7 @@\n           case LP:              return \"LP\";\n           case RP:              return \"RP\";\n           case COMMA:           return \"COMMA\";\n-          case ASSIGN:          return \"ASSIGN\";\n+          case ASSIGN:          ;\n           case ASSIGN_BITOR:    return \"ASSIGN_BITOR\";\n           case ASSIGN_BITXOR:   return \"ASSIGN_BITXOR\";\n           case ASSIGN_BITAND:   return \"ASSIGN_BITAND\";\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 362, 
          "faulty": "return \"ASSIGN\";", 
          "type": "Delete", 
          "seed": "Node pn=memberExpr(true);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 221, 
          "faulty": "return \"synthetic\";", 
          "type": "Delete", 
          "seed": "consumeToken();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 310, 
          "faulty": "return \"GETELEM\";", 
          "type": "Delete", 
          "seed": "Node pn=memberExpr(true);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:51:37.259744610 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_192/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:58:04.020798262 -0500\n@@ -85,7 +85,6 @@\n           boolean canRemove = false;\n \n           if (specializationState == null) {\n-            canRemove = true;\n           } else {\n             Node specializableFunction =\n               getSpecializableFunctionFromSymbol(declaration);\n@@ -108,7 +107,8 @@\n     }\n \n     if (changed) {\n-      compiler.reportCodeChange();\n+      int index = -1;\n+\tcompiler.reportCodeChange();\n     }\n   }\n \n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 111, 
          "faulty": "compiler.reportCodeChange();", 
          "type": "InsertBefore", 
          "seed": "int index=-1;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 88, 
          "faulty": "canRemove=true;", 
          "type": "Delete", 
          "seed": "return null;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:51:37.259744610 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_966/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 07:04:59.913280092 -0500\n@@ -96,11 +96,6 @@\n               canRemove = true;\n             }\n           }\n-\n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n@@ -108,7 +103,8 @@\n     }\n \n     if (changed) {\n-      compiler.reportCodeChange();\n+      int index = -1;\n+\tcompiler.reportCodeChange();\n     }\n   }\n \n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 06:51:37.279734609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_966/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 07:04:59.913280092 -0500\n@@ -1424,7 +1424,6 @@\n       }\n       res = n.checkTreeEqualsImpl(n2);\n       if (res != null) {\n-        return res;\n       }\n     }\n     return res;\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 06:51:37.283732609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_966/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 07:04:59.917280071 -0500\n@@ -315,7 +315,7 @@\n           case NUMBER:          return \"NUMBER\";\n           case STRING:          return \"STRING\";\n           case NULL:            return \"NULL\";\n-          case THIS:            return \"THIS\";\n+          case THIS:            ;\n           case FALSE:           return \"FALSE\";\n           case TRUE:            return \"TRUE\";\n           case SHEQ:            return \"SHEQ\";\n@@ -359,7 +359,7 @@\n           case LP:              return \"LP\";\n           case RP:              return \"RP\";\n           case COMMA:           return \"COMMA\";\n-          case ASSIGN:          return \"ASSIGN\";\n+          case ASSIGN:          ;\n           case ASSIGN_BITOR:    return \"ASSIGN_BITOR\";\n           case ASSIGN_BITXOR:   return \"ASSIGN_BITXOR\";\n           case ASSIGN_BITAND:   return \"ASSIGN_BITAND\";\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 318, 
          "faulty": "return \"THIS\";", 
          "type": "Delete", 
          "seed": "return Token.STRING;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 362, 
          "faulty": "return \"ASSIGN\";", 
          "type": "Delete", 
          "seed": "return Token.LP;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1427, 
          "faulty": "return res;", 
          "type": "Delete", 
          "seed": "return Token.STRING;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 111, 
          "faulty": "compiler.reportCodeChange();", 
          "type": "InsertBefore", 
          "seed": "int index=-1;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:51:37.259744610 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_686/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 07:02:36.918321989 -0500\n@@ -85,7 +85,6 @@\n           boolean canRemove = false;\n \n           if (specializationState == null) {\n-            canRemove = true;\n           } else {\n             Node specializableFunction =\n               getSpecializableFunctionFromSymbol(declaration);\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 06:51:37.283732609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_686/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 07:02:36.918321989 -0500\n@@ -359,7 +359,10 @@\n           case LP:              return \"LP\";\n           case RP:              return \"RP\";\n           case COMMA:           return \"COMMA\";\n-          case ASSIGN:          return \"ASSIGN\";\n+          case ASSIGN:          {\n+\t\t\t\tint c;\n+\t\t\t\treturn \"ASSIGN\";\n+\t\t\t}\n           case ASSIGN_BITOR:    return \"ASSIGN_BITOR\";\n           case ASSIGN_BITXOR:   return \"ASSIGN_BITXOR\";\n           case ASSIGN_BITAND:   return \"ASSIGN_BITAND\";\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 88, 
          "faulty": "canRemove=true;", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 362, 
          "faulty": "return \"ASSIGN\";", 
          "type": "InsertBefore", 
          "seed": "int c;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:51:37.259744610 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1286/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 07:07:47.257768957 -0500\n@@ -85,7 +85,6 @@\n           boolean canRemove = false;\n \n           if (specializationState == null) {\n-            canRemove = true;\n           } else {\n             Node specializableFunction =\n               getSpecializableFunctionFromSymbol(declaration);\n@@ -96,11 +95,6 @@\n               canRemove = true;\n             }\n           }\n-\n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 06:51:37.283732609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1286/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 07:07:47.261769097 -0500\n@@ -307,7 +307,7 @@\n           case TYPEOF:          return \"TYPEOF\";\n           case GETPROP:         return \"GETPROP\";\n           case SETPROP:         return \"SETPROP\";\n-          case GETELEM:         return \"GETELEM\";\n+          case GETELEM:         ;\n           case SETELEM:         return \"SETELEM\";\n           case CALL:            return \"CALL\";\n           case NAME:            return \"NAME\";\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 310, 
          "faulty": "return \"GETELEM\";", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 88, 
          "faulty": "canRemove=true;", 
          "type": "Delete", 
          "seed": "return new DotFormatter();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:51:37.259744610 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1642/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 07:10:49.086577905 -0500\n@@ -83,24 +83,6 @@\n       if (!nameInfo.isReferenced()) {\n         for (Symbol declaration : nameInfo.getDeclarations()) {\n           boolean canRemove = false;\n-\n-          if (specializationState == null) {\n-            canRemove = true;\n-          } else {\n-            Node specializableFunction =\n-              getSpecializableFunctionFromSymbol(declaration);\n-\n-            if (specializableFunction != null) {\n-              specializationState.reportRemovedFunction(\n-                  specializableFunction, null);\n-              canRemove = true;\n-            }\n-          }\n-\n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 06:51:37.279734609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1642/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 07:10:49.086577905 -0500\n@@ -218,7 +218,7 @@\n         case QUOTED_PROP:        return \"quoted\";\n         case OPT_ARG_NAME:       return \"opt_arg\";\n \n-        case SYNTHETIC_BLOCK_PROP: return \"synthetic\";\n+        case SYNTHETIC_BLOCK_PROP: ;\n         case EMPTY_BLOCK:        return \"empty_block\";\n         case ORIGINALNAME_PROP:  return \"originalname\";\n         case SIDE_EFFECT_FLAGS:  return \"side_effect_flags\";\n@@ -1411,7 +1411,8 @@\n    */\n   NodeMismatch checkTreeEqualsImpl(Node node2) {\n     if (!isEquivalentTo(node2, false, false)) {\n-      return new NodeMismatch(this, node2);\n+      boolean nullKey = false;\n+\treturn new NodeMismatch(this, node2);\n     }\n \n     NodeMismatch res = null;\n@@ -1424,7 +1425,6 @@\n       }\n       res = n.checkTreeEqualsImpl(n2);\n       if (res != null) {\n-        return res;\n       }\n     }\n     return res;\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 88, 
          "faulty": "canRemove=true;", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 221, 
          "faulty": "return \"synthetic\";", 
          "type": "Delete", 
          "seed": "return Token.XMLATTR;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1427, 
          "faulty": "return res;", 
          "type": "Delete", 
          "seed": "return Token.STRING;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1414, 
          "faulty": "return new NodeMismatch(this,node2);", 
          "type": "InsertBefore", 
          "seed": "boolean nullKey=false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 87, 
          "faulty": "if (specializationState == null) {\n  canRemove=true;\n}\n else {\n  Node specializableFunction=getSpecializableFunctionFromSymbol(declaration);\n  if (specializableFunction != null) {\n    specializationState.reportRemovedFunction(specializableFunction,null);\n    canRemove=true;\n  }\n}", 
          "type": "Delete", 
          "seed": "break;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:51:37.259744610 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_610/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 07:01:57.006765309 -0500\n@@ -85,7 +85,6 @@\n           boolean canRemove = false;\n \n           if (specializationState == null) {\n-            canRemove = true;\n           } else {\n             Node specializableFunction =\n               getSpecializableFunctionFromSymbol(declaration);\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java\t2018-12-02 06:51:39.210768564 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_610/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java\t2018-12-02 07:01:57.006765309 -0500\n@@ -532,7 +532,8 @@\n \n     @Override\n     public void remove() {\n-      NodeUtil.removeChild(exprNode.getParent(), exprNode);\n+      boolean valid = false;\n+\tNodeUtil.removeChild(exprNode.getParent(), exprNode);\n     }\n \n     @Override\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 88, 
          "faulty": "canRemove=true;", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java", 
          "line": 535, 
          "faulty": "NodeUtil.removeChild(exprNode.getParent(),exprNode);", 
          "type": "InsertBefore", 
          "seed": "boolean valid=false;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:51:37.259744610 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_956/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 07:04:54.037309582 -0500\n@@ -85,7 +85,6 @@\n           boolean canRemove = false;\n \n           if (specializationState == null) {\n-            canRemove = true;\n           } else {\n             Node specializableFunction =\n               getSpecializableFunctionFromSymbol(declaration);\n@@ -96,11 +95,6 @@\n               canRemove = true;\n             }\n           }\n-\n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java\t2018-12-02 06:51:39.210768564 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_956/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java\t2018-12-02 07:04:54.037309582 -0500\n@@ -532,7 +532,8 @@\n \n     @Override\n     public void remove() {\n-      NodeUtil.removeChild(exprNode.getParent(), exprNode);\n+      int index = -1;\n+\tNodeUtil.removeChild(exprNode.getParent(), exprNode);\n     }\n \n     @Override\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 06:51:37.283732609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_956/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 07:04:54.041309562 -0500\n@@ -359,7 +359,7 @@\n           case LP:              return \"LP\";\n           case RP:              return \"RP\";\n           case COMMA:           return \"COMMA\";\n-          case ASSIGN:          return \"ASSIGN\";\n+          case ASSIGN:          ;\n           case ASSIGN_BITOR:    return \"ASSIGN_BITOR\";\n           case ASSIGN_BITXOR:   return \"ASSIGN_BITXOR\";\n           case ASSIGN_BITAND:   return \"ASSIGN_BITAND\";\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 88, 
          "faulty": "canRemove=true;", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java", 
          "line": 535, 
          "faulty": "NodeUtil.removeChild(exprNode.getParent(),exprNode);", 
          "type": "InsertBefore", 
          "seed": "int index=-1;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 362, 
          "faulty": "return \"ASSIGN\";", 
          "type": "Delete", 
          "seed": "return Token.LP;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:51:37.259744610 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1833/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 07:12:27.556281608 -0500\n@@ -85,7 +85,6 @@\n           boolean canRemove = false;\n \n           if (specializationState == null) {\n-            canRemove = true;\n           } else {\n             Node specializableFunction =\n               getSpecializableFunctionFromSymbol(declaration);\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java\t2018-12-02 06:51:39.210768564 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1833/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java\t2018-12-02 07:12:27.556281608 -0500\n@@ -532,7 +532,8 @@\n \n     @Override\n     public void remove() {\n-      NodeUtil.removeChild(exprNode.getParent(), exprNode);\n+      StringBuilder builder = new StringBuilder();\n+\tNodeUtil.removeChild(exprNode.getParent(), exprNode);\n     }\n \n     @Override\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 88, 
          "faulty": "canRemove=true;", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java", 
          "line": 535, 
          "faulty": "NodeUtil.removeChild(exprNode.getParent(),exprNode);", 
          "type": "InsertBefore", 
          "seed": "StringBuilder builder=new StringBuilder();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:51:37.259744610 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1344/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 07:08:16.674746991 -0500\n@@ -96,11 +96,6 @@\n               canRemove = true;\n             }\n           }\n-\n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java\t2018-12-02 06:51:39.210768564 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1344/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java\t2018-12-02 07:08:16.674746991 -0500\n@@ -532,7 +532,8 @@\n \n     @Override\n     public void remove() {\n-      NodeUtil.removeChild(exprNode.getParent(), exprNode);\n+      int index = -1;\n+\tNodeUtil.removeChild(exprNode.getParent(), exprNode);\n     }\n \n     @Override\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 06:51:37.283732609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1344/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 07:08:16.674746991 -0500\n@@ -359,7 +359,7 @@\n           case LP:              return \"LP\";\n           case RP:              return \"RP\";\n           case COMMA:           return \"COMMA\";\n-          case ASSIGN:          return \"ASSIGN\";\n+          case ASSIGN:          ;\n           case ASSIGN_BITOR:    return \"ASSIGN_BITOR\";\n           case ASSIGN_BITXOR:   return \"ASSIGN_BITXOR\";\n           case ASSIGN_BITAND:   return \"ASSIGN_BITAND\";\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 102, 
          "faulty": "changed=true;", 
          "type": "InsertBefore", 
          "seed": "StringBuilder builder=new StringBuilder();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java", 
          "line": 535, 
          "faulty": "NodeUtil.removeChild(exprNode.getParent(),exprNode);", 
          "type": "InsertBefore", 
          "seed": "int index=-1;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 362, 
          "faulty": "return \"ASSIGN\";", 
          "type": "Delete", 
          "seed": "case 2:"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 101, 
          "faulty": "declaration.remove();", 
          "type": "Delete", 
          "seed": "break;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:51:37.259744610 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1877/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 07:12:49.608605910 -0500\n@@ -85,7 +85,6 @@\n           boolean canRemove = false;\n \n           if (specializationState == null) {\n-            canRemove = true;\n           } else {\n             Node specializableFunction =\n               getSpecializableFunctionFromSymbol(declaration);\n@@ -96,11 +95,6 @@\n               canRemove = true;\n             }\n           }\n-\n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 06:51:37.279734609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1877/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 07:12:49.608605910 -0500\n@@ -218,7 +218,7 @@\n         case QUOTED_PROP:        return \"quoted\";\n         case OPT_ARG_NAME:       return \"opt_arg\";\n \n-        case SYNTHETIC_BLOCK_PROP: return \"synthetic\";\n+        case SYNTHETIC_BLOCK_PROP: ;\n         case EMPTY_BLOCK:        return \"empty_block\";\n         case ORIGINALNAME_PROP:  return \"originalname\";\n         case SIDE_EFFECT_FLAGS:  return \"side_effect_flags\";\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 06:51:37.283732609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1877/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 07:12:49.608605910 -0500\n@@ -307,7 +307,7 @@\n           case TYPEOF:          return \"TYPEOF\";\n           case GETPROP:         return \"GETPROP\";\n           case SETPROP:         return \"SETPROP\";\n-          case GETELEM:         return \"GETELEM\";\n+          case GETELEM:         ;\n           case SETELEM:         return \"SETELEM\";\n           case CALL:            return \"CALL\";\n           case NAME:            return \"NAME\";\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 88, 
          "faulty": "canRemove=true;", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 221, 
          "faulty": "return \"synthetic\";", 
          "type": "Delete", 
          "seed": "return Token.XMLATTR;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 310, 
          "faulty": "return \"GETELEM\";", 
          "type": "Delete", 
          "seed": "consumeToken();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:51:37.259744610 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1170/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 07:06:45.228891037 -0500\n@@ -85,7 +85,6 @@\n           boolean canRemove = false;\n \n           if (specializationState == null) {\n-            canRemove = true;\n           } else {\n             Node specializableFunction =\n               getSpecializableFunctionFromSymbol(declaration);\n@@ -96,11 +95,6 @@\n               canRemove = true;\n             }\n           }\n-\n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 06:51:37.279734609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1170/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 07:06:45.228891037 -0500\n@@ -218,7 +218,7 @@\n         case QUOTED_PROP:        return \"quoted\";\n         case OPT_ARG_NAME:       return \"opt_arg\";\n \n-        case SYNTHETIC_BLOCK_PROP: return \"synthetic\";\n+        case SYNTHETIC_BLOCK_PROP: ;\n         case EMPTY_BLOCK:        return \"empty_block\";\n         case ORIGINALNAME_PROP:  return \"originalname\";\n         case SIDE_EFFECT_FLAGS:  return \"side_effect_flags\";\n@@ -937,14 +937,7 @@\n         sb.append(getString());\n       } else if (type == Token.FUNCTION) {\n         sb.append(' ');\n-        // In the case of JsDoc trees, the first child is often not a string\n-        // which causes exceptions to be thrown when calling toString or\n-        // toStringTree.\n-        if (first == null || first.getType() != Token.NAME) {\n-          sb.append(\"<invalid>\");\n-        } else {\n-          sb.append(first.getString());\n-        }\n+        int lineno = getLineno();\n       } else if (this instanceof ScriptOrFnNode) {\n         ScriptOrFnNode sof = (ScriptOrFnNode) this;\n         if (this instanceof FunctionNode) {\n@@ -1424,7 +1417,6 @@\n       }\n       res = n.checkTreeEqualsImpl(n2);\n       if (res != null) {\n-        return res;\n       }\n     }\n     return res;\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 06:51:37.283732609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1170/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 07:06:45.232891027 -0500\n@@ -315,7 +315,7 @@\n           case NUMBER:          return \"NUMBER\";\n           case STRING:          return \"STRING\";\n           case NULL:            return \"NULL\";\n-          case THIS:            return \"THIS\";\n+          case THIS:            ;\n           case FALSE:           return \"FALSE\";\n           case TRUE:            return \"TRUE\";\n           case SHEQ:            return \"SHEQ\";\n@@ -359,7 +359,7 @@\n           case LP:              return \"LP\";\n           case RP:              return \"RP\";\n           case COMMA:           return \"COMMA\";\n-          case ASSIGN:          return \"ASSIGN\";\n+          case ASSIGN:          Context cx = Context.getCurrentContext();\n           case ASSIGN_BITOR:    return \"ASSIGN_BITOR\";\n           case ASSIGN_BITXOR:   return \"ASSIGN_BITXOR\";\n           case ASSIGN_BITAND:   return \"ASSIGN_BITAND\";\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 318, 
          "faulty": "return \"THIS\";", 
          "type": "Delete", 
          "seed": "return Token.STRING;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 88, 
          "faulty": "canRemove=true;", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 943, 
          "faulty": "if (first == null || first.getType() != Token.NAME) {\n  sb.append(\"<invalid>\");\n}\n else {\n  sb.append(first.getString());\n}", 
          "type": "Replace", 
          "seed": "int lineno=getLineno();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1427, 
          "faulty": "return res;", 
          "type": "Delete", 
          "seed": "boolean first=true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 318, 
          "faulty": "return \"THIS\";", 
          "type": "Delete", 
          "seed": "return Token.XMLATTR;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 221, 
          "faulty": "return \"synthetic\";", 
          "type": "Delete", 
          "seed": "consumeToken();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 362, 
          "faulty": "return \"ASSIGN\";", 
          "type": "Replace", 
          "seed": "Context cx=Context.getCurrentContext();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:51:37.259744610 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_754/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 07:03:12.353991954 -0500\n@@ -85,7 +85,6 @@\n           boolean canRemove = false;\n \n           if (specializationState == null) {\n-            canRemove = true;\n           } else {\n             Node specializableFunction =\n               getSpecializableFunctionFromSymbol(declaration);\n@@ -96,11 +95,6 @@\n               canRemove = true;\n             }\n           }\n-\n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 06:51:37.283732609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_754/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 07:03:12.357991919 -0500\n@@ -307,7 +307,7 @@\n           case TYPEOF:          return \"TYPEOF\";\n           case GETPROP:         return \"GETPROP\";\n           case SETPROP:         return \"SETPROP\";\n-          case GETELEM:         return \"GETELEM\";\n+          case GETELEM:         ;\n           case SETELEM:         return \"SETELEM\";\n           case CALL:            return \"CALL\";\n           case NAME:            return \"NAME\";\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 310, 
          "faulty": "return \"GETELEM\";", 
          "type": "Delete", 
          "seed": "String namespace=null;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 88, 
          "faulty": "canRemove=true;", 
          "type": "Replace", 
          "seed": "return;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 88, 
          "faulty": "canRemove=true;", 
          "type": "Delete", 
          "seed": "int index=-1;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:51:37.259744610 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_15/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:56:24.291196069 -0500\n@@ -96,11 +96,6 @@\n               canRemove = true;\n             }\n           }\n-\n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:51:37.259744610 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1301/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 07:07:53.797994697 -0500\n@@ -85,7 +85,6 @@\n           boolean canRemove = false;\n \n           if (specializationState == null) {\n-            canRemove = true;\n           } else {\n             Node specializableFunction =\n               getSpecializableFunctionFromSymbol(declaration);\n@@ -96,11 +95,6 @@\n               canRemove = true;\n             }\n           }\n-\n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java\t2018-12-02 06:51:39.210768564 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1301/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java\t2018-12-02 07:07:53.801994835 -0500\n@@ -532,7 +532,6 @@\n \n     @Override\n     public void remove() {\n-      NodeUtil.removeChild(exprNode.getParent(), exprNode);\n     }\n \n     @Override\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 06:51:37.279734609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1301/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 07:07:53.801994835 -0500\n@@ -218,7 +218,7 @@\n         case QUOTED_PROP:        return \"quoted\";\n         case OPT_ARG_NAME:       return \"opt_arg\";\n \n-        case SYNTHETIC_BLOCK_PROP: return \"synthetic\";\n+        case SYNTHETIC_BLOCK_PROP: ;\n         case EMPTY_BLOCK:        return \"empty_block\";\n         case ORIGINALNAME_PROP:  return \"originalname\";\n         case SIDE_EFFECT_FLAGS:  return \"side_effect_flags\";\n@@ -937,14 +937,7 @@\n         sb.append(getString());\n       } else if (type == Token.FUNCTION) {\n         sb.append(' ');\n-        // In the case of JsDoc trees, the first child is often not a string\n-        // which causes exceptions to be thrown when calling toString or\n-        // toStringTree.\n-        if (first == null || first.getType() != Token.NAME) {\n-          sb.append(\"<invalid>\");\n-        } else {\n-          sb.append(first.getString());\n-        }\n+        int lineno = getLineno();\n       } else if (this instanceof ScriptOrFnNode) {\n         ScriptOrFnNode sof = (ScriptOrFnNode) this;\n         if (this instanceof FunctionNode) {\n@@ -1424,7 +1417,6 @@\n       }\n       res = n.checkTreeEqualsImpl(n2);\n       if (res != null) {\n-        return res;\n       }\n     }\n     return res;\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 06:51:37.283732609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1301/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 07:07:53.801994835 -0500\n@@ -315,7 +315,7 @@\n           case NUMBER:          return \"NUMBER\";\n           case STRING:          return \"STRING\";\n           case NULL:            return \"NULL\";\n-          case THIS:            return \"THIS\";\n+          case THIS:            ;\n           case FALSE:           return \"FALSE\";\n           case TRUE:            return \"TRUE\";\n           case SHEQ:            return \"SHEQ\";\n@@ -359,7 +359,7 @@\n           case LP:              return \"LP\";\n           case RP:              return \"RP\";\n           case COMMA:           return \"COMMA\";\n-          case ASSIGN:          return \"ASSIGN\";\n+          case ASSIGN:          ;\n           case ASSIGN_BITOR:    return \"ASSIGN_BITOR\";\n           case ASSIGN_BITXOR:   return \"ASSIGN_BITXOR\";\n           case ASSIGN_BITAND:   return \"ASSIGN_BITAND\";\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 318, 
          "faulty": "return \"THIS\";", 
          "type": "Delete", 
          "seed": "return Token.STRING;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 88, 
          "faulty": "canRemove=true;", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 943, 
          "faulty": "if (first == null || first.getType() != Token.NAME) {\n  sb.append(\"<invalid>\");\n}\n else {\n  sb.append(first.getString());\n}", 
          "type": "Replace", 
          "seed": "int lineno=getLineno();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1427, 
          "faulty": "return res;", 
          "type": "Delete", 
          "seed": "boolean first=true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 318, 
          "faulty": "return \"THIS\";", 
          "type": "Delete", 
          "seed": "return Token.XMLATTR;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 221, 
          "faulty": "return \"synthetic\";", 
          "type": "Delete", 
          "seed": "return Token.XMLATTR;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 362, 
          "faulty": "return \"ASSIGN\";", 
          "type": "Delete", 
          "seed": "return Token.LP;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java", 
          "line": 535, 
          "faulty": "NodeUtil.removeChild(exprNode.getParent(),exprNode);", 
          "type": "Delete", 
          "seed": "boolean valid=false;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:51:37.259744610 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1806/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 07:12:14.140075185 -0500\n@@ -85,7 +85,6 @@\n           boolean canRemove = false;\n \n           if (specializationState == null) {\n-            canRemove = true;\n           } else {\n             Node specializableFunction =\n               getSpecializableFunctionFromSymbol(declaration);\n@@ -96,11 +95,6 @@\n               canRemove = true;\n             }\n           }\n-\n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java\t2018-12-02 06:51:39.210768564 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1806/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java\t2018-12-02 07:12:14.144075248 -0500\n@@ -532,7 +532,8 @@\n \n     @Override\n     public void remove() {\n-      NodeUtil.removeChild(exprNode.getParent(), exprNode);\n+      StringBuilder builder = new StringBuilder();\n+\tNodeUtil.removeChild(exprNode.getParent(), exprNode);\n     }\n \n     @Override\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 06:51:37.279734609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1806/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 07:12:14.144075248 -0500\n@@ -1424,7 +1424,7 @@\n       }\n       res = n.checkTreeEqualsImpl(n2);\n       if (res != null) {\n-        return res;\n+        Kit.codeBug();\n       }\n     }\n     return res;\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 06:51:37.283732609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1806/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 07:12:14.144075248 -0500\n@@ -315,7 +315,10 @@\n           case NUMBER:          return \"NUMBER\";\n           case STRING:          return \"STRING\";\n           case NULL:            return \"NULL\";\n-          case THIS:            return \"THIS\";\n+          case THIS:            {\n+\t\t\t\tStringBuilder sb = new StringBuilder();\n+\t\t\t\treturn \"THIS\";\n+\t\t\t}\n           case FALSE:           return \"FALSE\";\n           case TRUE:            return \"TRUE\";\n           case SHEQ:            return \"SHEQ\";\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 88, 
          "faulty": "canRemove=true;", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 318, 
          "faulty": "return \"THIS\";", 
          "type": "Delete", 
          "seed": "return Token.STRING;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 88, 
          "faulty": "canRemove=true;", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1427, 
          "faulty": "return res;", 
          "type": "Delete", 
          "seed": "return Token.STRING;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1427, 
          "faulty": "return res;", 
          "type": "Replace", 
          "seed": "Kit.codeBug();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 318, 
          "faulty": "return \"THIS\";", 
          "type": "InsertBefore", 
          "seed": "StringBuilder sb=new StringBuilder();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java", 
          "line": 535, 
          "faulty": "NodeUtil.removeChild(exprNode.getParent(),exprNode);", 
          "type": "InsertBefore", 
          "seed": "StringBuilder builder=new StringBuilder();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:51:37.259744610 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1439/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 07:09:01.820076953 -0500\n@@ -85,7 +85,6 @@\n           boolean canRemove = false;\n \n           if (specializationState == null) {\n-            canRemove = true;\n           } else {\n             Node specializableFunction =\n               getSpecializableFunctionFromSymbol(declaration);\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 06:51:37.283732609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1439/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 07:09:01.820076953 -0500\n@@ -307,7 +307,7 @@\n           case TYPEOF:          return \"TYPEOF\";\n           case GETPROP:         return \"GETPROP\";\n           case SETPROP:         return \"SETPROP\";\n-          case GETELEM:         return \"GETELEM\";\n+          case GETELEM:         return \"return\";\n           case SETELEM:         return \"SETELEM\";\n           case CALL:            return \"CALL\";\n           case NAME:            return \"NAME\";\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 88, 
          "faulty": "canRemove=true;", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 310, 
          "faulty": "return \"GETELEM\";", 
          "type": "Replace", 
          "seed": "return \"return\";"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:51:37.259744610 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1649/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 07:10:51.950634326 -0500\n@@ -85,7 +85,6 @@\n           boolean canRemove = false;\n \n           if (specializationState == null) {\n-            canRemove = true;\n           } else {\n             Node specializableFunction =\n               getSpecializableFunctionFromSymbol(declaration);\n@@ -96,11 +95,6 @@\n               canRemove = true;\n             }\n           }\n-\n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 06:51:37.279734609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1649/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 07:10:51.954634404 -0500\n@@ -218,7 +218,7 @@\n         case QUOTED_PROP:        return \"quoted\";\n         case OPT_ARG_NAME:       return \"opt_arg\";\n \n-        case SYNTHETIC_BLOCK_PROP: return \"synthetic\";\n+        case SYNTHETIC_BLOCK_PROP: ;\n         case EMPTY_BLOCK:        return \"empty_block\";\n         case ORIGINALNAME_PROP:  return \"originalname\";\n         case SIDE_EFFECT_FLAGS:  return \"side_effect_flags\";\n@@ -1424,7 +1424,7 @@\n       }\n       res = n.checkTreeEqualsImpl(n2);\n       if (res != null) {\n-        return res;\n+        Kit.codeBug();\n       }\n     }\n     return res;\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 06:51:37.283732609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1649/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 07:10:51.954634404 -0500\n@@ -315,7 +315,7 @@\n           case NUMBER:          return \"NUMBER\";\n           case STRING:          return \"STRING\";\n           case NULL:            return \"NULL\";\n-          case THIS:            return \"THIS\";\n+          case THIS:            ;\n           case FALSE:           return \"FALSE\";\n           case TRUE:            return \"TRUE\";\n           case SHEQ:            return \"SHEQ\";\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 221, 
          "faulty": "return \"synthetic\";", 
          "type": "Delete", 
          "seed": "consumeToken();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1427, 
          "faulty": "return res;", 
          "type": "Delete", 
          "seed": "boolean first=true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 318, 
          "faulty": "return \"THIS\";", 
          "type": "Delete", 
          "seed": "return Token.XMLATTR;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 221, 
          "faulty": "return \"synthetic\";", 
          "type": "Delete", 
          "seed": "return Token.XMLATTR;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1427, 
          "faulty": "return res;", 
          "type": "Delete", 
          "seed": "return Token.STRING;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 88, 
          "faulty": "canRemove=true;", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 318, 
          "faulty": "return \"THIS\";", 
          "type": "Delete", 
          "seed": "return Token.STRING;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1427, 
          "faulty": "return res;", 
          "type": "Replace", 
          "seed": "Kit.codeBug();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:51:37.259744610 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1838/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 07:12:29.584312197 -0500\n@@ -83,24 +83,6 @@\n       if (!nameInfo.isReferenced()) {\n         for (Symbol declaration : nameInfo.getDeclarations()) {\n           boolean canRemove = false;\n-\n-          if (specializationState == null) {\n-            canRemove = true;\n-          } else {\n-            Node specializableFunction =\n-              getSpecializableFunctionFromSymbol(declaration);\n-\n-            if (specializableFunction != null) {\n-              specializationState.reportRemovedFunction(\n-                  specializableFunction, null);\n-              canRemove = true;\n-            }\n-          }\n-\n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 06:51:37.279734609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1838/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 07:12:29.588312257 -0500\n@@ -218,7 +218,7 @@\n         case QUOTED_PROP:        return \"quoted\";\n         case OPT_ARG_NAME:       return \"opt_arg\";\n \n-        case SYNTHETIC_BLOCK_PROP: return \"synthetic\";\n+        case SYNTHETIC_BLOCK_PROP: ;\n         case EMPTY_BLOCK:        return \"empty_block\";\n         case ORIGINALNAME_PROP:  return \"originalname\";\n         case SIDE_EFFECT_FLAGS:  return \"side_effect_flags\";\n@@ -1411,7 +1411,8 @@\n    */\n   NodeMismatch checkTreeEqualsImpl(Node node2) {\n     if (!isEquivalentTo(node2, false, false)) {\n-      return new NodeMismatch(this, node2);\n+      boolean nullKey = false;\n+\treturn new NodeMismatch(this, node2);\n     }\n \n     NodeMismatch res = null;\n@@ -1424,7 +1425,6 @@\n       }\n       res = n.checkTreeEqualsImpl(n2);\n       if (res != null) {\n-        return res;\n       }\n     }\n     return res;\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 06:51:37.283732609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1838/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 07:12:29.588312257 -0500\n@@ -315,7 +315,7 @@\n           case NUMBER:          return \"NUMBER\";\n           case STRING:          return \"STRING\";\n           case NULL:            return \"NULL\";\n-          case THIS:            return \"THIS\";\n+          case THIS:            ;\n           case FALSE:           return \"FALSE\";\n           case TRUE:            return \"TRUE\";\n           case SHEQ:            return \"SHEQ\";\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 88, 
          "faulty": "canRemove=true;", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 221, 
          "faulty": "return \"synthetic\";", 
          "type": "Delete", 
          "seed": "return Token.XMLATTR;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1427, 
          "faulty": "return res;", 
          "type": "Delete", 
          "seed": "return Token.STRING;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1414, 
          "faulty": "return new NodeMismatch(this,node2);", 
          "type": "InsertBefore", 
          "seed": "boolean nullKey=false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 87, 
          "faulty": "if (specializationState == null) {\n  canRemove=true;\n}\n else {\n  Node specializableFunction=getSpecializableFunctionFromSymbol(declaration);\n  if (specializableFunction != null) {\n    specializationState.reportRemovedFunction(specializableFunction,null);\n    canRemove=true;\n  }\n}", 
          "type": "Delete", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1427, 
          "faulty": "return res;", 
          "type": "Delete", 
          "seed": "return Token.STRING;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 318, 
          "faulty": "return \"THIS\";", 
          "type": "Delete", 
          "seed": "if (matchChar('/')) {\n  return Token.EOC;\n}\n else {\n  return Token.STAR;\n}"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 318, 
          "faulty": "return \"THIS\";", 
          "type": "Delete", 
          "seed": "return \"BLOCK\";"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:51:37.259744610 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_995/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 07:05:15.713205357 -0500\n@@ -96,11 +96,6 @@\n               canRemove = true;\n             }\n           }\n-\n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java\t2018-12-02 06:51:39.210768564 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_995/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java\t2018-12-02 07:05:15.713205357 -0500\n@@ -532,7 +532,8 @@\n \n     @Override\n     public void remove() {\n-      NodeUtil.removeChild(exprNode.getParent(), exprNode);\n+      int index = -1;\n+\tNodeUtil.removeChild(exprNode.getParent(), exprNode);\n     }\n \n     @Override\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 06:51:37.283732609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_995/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 07:05:15.717205339 -0500\n@@ -307,7 +307,7 @@\n           case TYPEOF:          return \"TYPEOF\";\n           case GETPROP:         return \"GETPROP\";\n           case SETPROP:         return \"SETPROP\";\n-          case GETELEM:         return \"GETELEM\";\n+          case GETELEM:         boolean nullKey = false;\n           case SETELEM:         return \"SETELEM\";\n           case CALL:            return \"CALL\";\n           case NAME:            return \"NAME\";\n@@ -315,7 +315,7 @@\n           case NUMBER:          return \"NUMBER\";\n           case STRING:          return \"STRING\";\n           case NULL:            return \"NULL\";\n-          case THIS:            return \"THIS\";\n+          case THIS:            ;\n           case FALSE:           return \"FALSE\";\n           case TRUE:            return \"TRUE\";\n           case SHEQ:            return \"SHEQ\";\n@@ -359,7 +359,7 @@\n           case LP:              return \"LP\";\n           case RP:              return \"RP\";\n           case COMMA:           return \"COMMA\";\n-          case ASSIGN:          return \"ASSIGN\";\n+          case ASSIGN:          ;\n           case ASSIGN_BITOR:    return \"ASSIGN_BITOR\";\n           case ASSIGN_BITXOR:   return \"ASSIGN_BITXOR\";\n           case ASSIGN_BITAND:   return \"ASSIGN_BITAND\";\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 318, 
          "faulty": "return \"THIS\";", 
          "type": "Delete", 
          "seed": "return Token.STRING;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 362, 
          "faulty": "return \"ASSIGN\";", 
          "type": "Delete", 
          "seed": "return Token.LP;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 102, 
          "faulty": "changed=true;", 
          "type": "InsertBefore", 
          "seed": "StringBuilder builder=new StringBuilder();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java", 
          "line": 535, 
          "faulty": "NodeUtil.removeChild(exprNode.getParent(),exprNode);", 
          "type": "InsertBefore", 
          "seed": "int index=-1;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 362, 
          "faulty": "return \"ASSIGN\";", 
          "type": "Delete", 
          "seed": "case 2:"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 310, 
          "faulty": "return \"GETELEM\";", 
          "type": "Replace", 
          "seed": "boolean nullKey=false;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:51:37.259744610 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1447/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 07:09:06.656208355 -0500\n@@ -85,7 +85,6 @@\n           boolean canRemove = false;\n \n           if (specializationState == null) {\n-            canRemove = true;\n           } else {\n             Node specializableFunction =\n               getSpecializableFunctionFromSymbol(declaration);\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 06:51:37.279734609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1447/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 07:09:06.656208355 -0500\n@@ -218,7 +218,7 @@\n         case QUOTED_PROP:        return \"quoted\";\n         case OPT_ARG_NAME:       return \"opt_arg\";\n \n-        case SYNTHETIC_BLOCK_PROP: return \"synthetic\";\n+        case SYNTHETIC_BLOCK_PROP: ;\n         case EMPTY_BLOCK:        return \"empty_block\";\n         case ORIGINALNAME_PROP:  return \"originalname\";\n         case SIDE_EFFECT_FLAGS:  return \"side_effect_flags\";\n@@ -937,14 +937,7 @@\n         sb.append(getString());\n       } else if (type == Token.FUNCTION) {\n         sb.append(' ');\n-        // In the case of JsDoc trees, the first child is often not a string\n-        // which causes exceptions to be thrown when calling toString or\n-        // toStringTree.\n-        if (first == null || first.getType() != Token.NAME) {\n-          sb.append(\"<invalid>\");\n-        } else {\n-          sb.append(first.getString());\n-        }\n+        int lineno = getLineno();\n       } else if (this instanceof ScriptOrFnNode) {\n         ScriptOrFnNode sof = (ScriptOrFnNode) this;\n         if (this instanceof FunctionNode) {\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 06:51:37.283732609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1447/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 07:09:06.660208463 -0500\n@@ -359,7 +359,7 @@\n           case LP:              return \"LP\";\n           case RP:              return \"RP\";\n           case COMMA:           return \"COMMA\";\n-          case ASSIGN:          return \"ASSIGN\";\n+          case ASSIGN:          Context cx = Context.getCurrentContext();\n           case ASSIGN_BITOR:    return \"ASSIGN_BITOR\";\n           case ASSIGN_BITXOR:   return \"ASSIGN_BITXOR\";\n           case ASSIGN_BITAND:   return \"ASSIGN_BITAND\";\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 88, 
          "faulty": "canRemove=true;", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 943, 
          "faulty": "if (first == null || first.getType() != Token.NAME) {\n  sb.append(\"<invalid>\");\n}\n else {\n  sb.append(first.getString());\n}", 
          "type": "Replace", 
          "seed": "int lineno=getLineno();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 221, 
          "faulty": "return \"synthetic\";", 
          "type": "Delete", 
          "seed": "return Token.XMLATTR;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 221, 
          "faulty": "return \"synthetic\";", 
          "type": "Delete", 
          "seed": "return Token.XMLATTR;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 943, 
          "faulty": "if (first == null || first.getType() != Token.NAME) {\n  sb.append(\"<invalid>\");\n}\n else {\n  sb.append(first.getString());\n}", 
          "type": "Replace", 
          "seed": "int lineno=getLineno();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 362, 
          "faulty": "return \"ASSIGN\";", 
          "type": "Replace", 
          "seed": "Context cx=Context.getCurrentContext();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:51:37.259744610 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1416/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 07:08:50.831770774 -0500\n@@ -85,7 +85,6 @@\n           boolean canRemove = false;\n \n           if (specializationState == null) {\n-            canRemove = true;\n           } else {\n             Node specializableFunction =\n               getSpecializableFunctionFromSymbol(declaration);\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 06:51:37.279734609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1416/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 07:08:50.831770774 -0500\n@@ -937,14 +937,7 @@\n         sb.append(getString());\n       } else if (type == Token.FUNCTION) {\n         sb.append(' ');\n-        // In the case of JsDoc trees, the first child is often not a string\n-        // which causes exceptions to be thrown when calling toString or\n-        // toStringTree.\n-        if (first == null || first.getType() != Token.NAME) {\n-          sb.append(\"<invalid>\");\n-        } else {\n-          sb.append(first.getString());\n-        }\n+        int lineno = getLineno();\n       } else if (this instanceof ScriptOrFnNode) {\n         ScriptOrFnNode sof = (ScriptOrFnNode) this;\n         if (this instanceof FunctionNode) {\n@@ -1424,7 +1417,6 @@\n       }\n       res = n.checkTreeEqualsImpl(n2);\n       if (res != null) {\n-        return res;\n       }\n     }\n     return res;\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 88, 
          "faulty": "canRemove=true;", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 943, 
          "faulty": "if (first == null || first.getType() != Token.NAME) {\n  sb.append(\"<invalid>\");\n}\n else {\n  sb.append(first.getString());\n}", 
          "type": "Replace", 
          "seed": "int lineno=getLineno();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1427, 
          "faulty": "return res;", 
          "type": "Delete", 
          "seed": "boolean first=true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1427, 
          "faulty": "return res;", 
          "type": "Delete", 
          "seed": "return Token.STRING;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:51:37.259744610 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_912/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 07:04:31.313432817 -0500\n@@ -96,11 +96,6 @@\n               canRemove = true;\n             }\n           }\n-\n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java\t2018-12-02 06:51:39.210768564 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_912/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java\t2018-12-02 07:04:31.317432794 -0500\n@@ -532,7 +532,8 @@\n \n     @Override\n     public void remove() {\n-      NodeUtil.removeChild(exprNode.getParent(), exprNode);\n+      int index = -1;\n+\tNodeUtil.removeChild(exprNode.getParent(), exprNode);\n     }\n \n     @Override\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 06:51:37.279734609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_912/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 07:04:31.317432794 -0500\n@@ -218,7 +218,7 @@\n         case QUOTED_PROP:        return \"quoted\";\n         case OPT_ARG_NAME:       return \"opt_arg\";\n \n-        case SYNTHETIC_BLOCK_PROP: return \"synthetic\";\n+        case SYNTHETIC_BLOCK_PROP: ;\n         case EMPTY_BLOCK:        return \"empty_block\";\n         case ORIGINALNAME_PROP:  return \"originalname\";\n         case SIDE_EFFECT_FLAGS:  return \"side_effect_flags\";\n@@ -1424,7 +1424,6 @@\n       }\n       res = n.checkTreeEqualsImpl(n2);\n       if (res != null) {\n-        return res;\n       }\n     }\n     return res;\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 06:51:37.283732609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_912/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 07:04:31.317432794 -0500\n@@ -315,7 +315,7 @@\n           case NUMBER:          return \"NUMBER\";\n           case STRING:          return \"STRING\";\n           case NULL:            return \"NULL\";\n-          case THIS:            return \"THIS\";\n+          case THIS:            ;\n           case FALSE:           return \"FALSE\";\n           case TRUE:            return \"TRUE\";\n           case SHEQ:            return \"SHEQ\";\n@@ -359,7 +359,7 @@\n           case LP:              return \"LP\";\n           case RP:              return \"RP\";\n           case COMMA:           return \"COMMA\";\n-          case ASSIGN:          return \"ASSIGN\";\n+          case ASSIGN:          ;\n           case ASSIGN_BITOR:    return \"ASSIGN_BITOR\";\n           case ASSIGN_BITXOR:   return \"ASSIGN_BITXOR\";\n           case ASSIGN_BITAND:   return \"ASSIGN_BITAND\";\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 221, 
          "faulty": "return \"synthetic\";", 
          "type": "Delete", 
          "seed": "consumeToken();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1427, 
          "faulty": "return res;", 
          "type": "Delete", 
          "seed": "boolean first=true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 318, 
          "faulty": "return \"THIS\";", 
          "type": "Delete", 
          "seed": "return Token.XMLATTR;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 318, 
          "faulty": "return \"THIS\";", 
          "type": "Delete", 
          "seed": "return Token.STRING;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 362, 
          "faulty": "return \"ASSIGN\";", 
          "type": "Delete", 
          "seed": "return Token.LP;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 102, 
          "faulty": "changed=true;", 
          "type": "InsertBefore", 
          "seed": "StringBuilder builder=new StringBuilder();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java", 
          "line": 535, 
          "faulty": "NodeUtil.removeChild(exprNode.getParent(),exprNode);", 
          "type": "InsertBefore", 
          "seed": "int index=-1;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:51:37.259744610 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_515/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 07:01:06.491454684 -0500\n@@ -85,7 +85,6 @@\n           boolean canRemove = false;\n \n           if (specializationState == null) {\n-            canRemove = true;\n           } else {\n             Node specializableFunction =\n               getSpecializableFunctionFromSymbol(declaration);\n@@ -96,11 +95,6 @@\n               canRemove = true;\n             }\n           }\n-\n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 06:51:37.283732609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_515/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 07:01:06.495454623 -0500\n@@ -359,7 +359,7 @@\n           case LP:              return \"LP\";\n           case RP:              return \"RP\";\n           case COMMA:           return \"COMMA\";\n-          case ASSIGN:          return \"ASSIGN\";\n+          case ASSIGN:          ;\n           case ASSIGN_BITOR:    return \"ASSIGN_BITOR\";\n           case ASSIGN_BITXOR:   return \"ASSIGN_BITXOR\";\n           case ASSIGN_BITAND:   return \"ASSIGN_BITAND\";\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 362, 
          "faulty": "return \"ASSIGN\";", 
          "type": "Delete", 
          "seed": "Node pn=memberExpr(true);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 88, 
          "faulty": "canRemove=true;", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 101, 
          "faulty": "declaration.remove();", 
          "type": "InsertBefore", 
          "seed": "return;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:51:37.259744610 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1059/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 07:05:51.085060449 -0500\n@@ -81,7 +81,8 @@\n     boolean changed = false;\n     for (NameInfo nameInfo : allNameInfo) {\n       if (!nameInfo.isReferenced()) {\n-        for (Symbol declaration : nameInfo.getDeclarations()) {\n+        int start = 0;\n+\t\tfor (Symbol declaration : nameInfo.getDeclarations()) {\n           boolean canRemove = false;\n \n           if (specializationState == null) {\n@@ -96,11 +97,6 @@\n               canRemove = true;\n             }\n           }\n-\n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java\t2018-12-02 06:51:39.210768564 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1059/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java\t2018-12-02 07:05:51.085060449 -0500\n@@ -532,7 +532,8 @@\n \n     @Override\n     public void remove() {\n-      NodeUtil.removeChild(exprNode.getParent(), exprNode);\n+      int index = -1;\n+\tNodeUtil.removeChild(exprNode.getParent(), exprNode);\n     }\n \n     @Override\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 06:51:37.283732609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1059/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 07:05:51.089060435 -0500\n@@ -359,7 +359,7 @@\n           case LP:              return \"LP\";\n           case RP:              return \"RP\";\n           case COMMA:           return \"COMMA\";\n-          case ASSIGN:          return \"ASSIGN\";\n+          case ASSIGN:          ;\n           case ASSIGN_BITOR:    return \"ASSIGN_BITOR\";\n           case ASSIGN_BITXOR:   return \"ASSIGN_BITXOR\";\n           case ASSIGN_BITAND:   return \"ASSIGN_BITAND\";\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 102, 
          "faulty": "changed=true;", 
          "type": "InsertBefore", 
          "seed": "StringBuilder builder=new StringBuilder();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 362, 
          "faulty": "return \"ASSIGN\";", 
          "type": "Delete", 
          "seed": "return Token.LP;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 102, 
          "faulty": "changed=true;", 
          "type": "InsertBefore", 
          "seed": "StringBuilder builder=new StringBuilder();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java", 
          "line": 535, 
          "faulty": "NodeUtil.removeChild(exprNode.getParent(),exprNode);", 
          "type": "InsertBefore", 
          "seed": "int index=-1;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 362, 
          "faulty": "return \"ASSIGN\";", 
          "type": "Delete", 
          "seed": "case 2:"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 84, 
          "faulty": "for (Symbol declaration : nameInfo.getDeclarations()) {\n  boolean canRemove=false;\n  if (specializationState == null) {\n    canRemove=true;\n  }\n else {\n    Node specializableFunction=getSpecializableFunctionFromSymbol(declaration);\n    if (specializableFunction != null) {\n      specializationState.reportRemovedFunction(specializableFunction,null);\n      canRemove=true;\n    }\n  }\n  if (canRemove) {\n    declaration.remove();\n    changed=true;\n  }\n}", 
          "type": "InsertBefore", 
          "seed": "int start=0;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:51:37.259744610 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1306/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 07:07:56.342081190 -0500\n@@ -85,7 +85,6 @@\n           boolean canRemove = false;\n \n           if (specializationState == null) {\n-            canRemove = true;\n           } else {\n             Node specializableFunction =\n               getSpecializableFunctionFromSymbol(declaration);\n@@ -96,11 +95,6 @@\n               canRemove = true;\n             }\n           }\n-\n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 06:51:37.279734609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1306/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 07:07:56.342081190 -0500\n@@ -218,7 +218,7 @@\n         case QUOTED_PROP:        return \"quoted\";\n         case OPT_ARG_NAME:       return \"opt_arg\";\n \n-        case SYNTHETIC_BLOCK_PROP: return \"synthetic\";\n+        case SYNTHETIC_BLOCK_PROP: ;\n         case EMPTY_BLOCK:        return \"empty_block\";\n         case ORIGINALNAME_PROP:  return \"originalname\";\n         case SIDE_EFFECT_FLAGS:  return \"side_effect_flags\";\n@@ -1424,7 +1424,6 @@\n       }\n       res = n.checkTreeEqualsImpl(n2);\n       if (res != null) {\n-        return res;\n       }\n     }\n     return res;\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 06:51:37.283732609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1306/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 07:07:56.346081325 -0500\n@@ -307,7 +307,7 @@\n           case TYPEOF:          return \"TYPEOF\";\n           case GETPROP:         return \"GETPROP\";\n           case SETPROP:         return \"SETPROP\";\n-          case GETELEM:         return \"GETELEM\";\n+          case GETELEM:         ;\n           case SETELEM:         return \"SETELEM\";\n           case CALL:            return \"CALL\";\n           case NAME:            return \"NAME\";\n@@ -315,7 +315,7 @@\n           case NUMBER:          return \"NUMBER\";\n           case STRING:          return \"STRING\";\n           case NULL:            return \"NULL\";\n-          case THIS:            return \"THIS\";\n+          case THIS:            ;\n           case FALSE:           return \"FALSE\";\n           case TRUE:            return \"TRUE\";\n           case SHEQ:            return \"SHEQ\";\n@@ -359,7 +359,7 @@\n           case LP:              return \"LP\";\n           case RP:              return \"RP\";\n           case COMMA:           return \"COMMA\";\n-          case ASSIGN:          return \"ASSIGN\";\n+          case ASSIGN:          Context cx = Context.getCurrentContext();\n           case ASSIGN_BITOR:    return \"ASSIGN_BITOR\";\n           case ASSIGN_BITXOR:   return \"ASSIGN_BITXOR\";\n           case ASSIGN_BITAND:   return \"ASSIGN_BITAND\";\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 88, 
          "faulty": "canRemove=true;", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 318, 
          "faulty": "return \"THIS\";", 
          "type": "Delete", 
          "seed": "return Token.XMLATTR;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 221, 
          "faulty": "return \"synthetic\";", 
          "type": "Delete", 
          "seed": "return Token.XMLATTR;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1427, 
          "faulty": "return res;", 
          "type": "Delete", 
          "seed": "boolean first=true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 318, 
          "faulty": "return \"THIS\";", 
          "type": "Delete", 
          "seed": "return Token.XMLATTR;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 362, 
          "faulty": "return \"ASSIGN\";", 
          "type": "Replace", 
          "seed": "Context cx=Context.getCurrentContext();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 310, 
          "faulty": "return \"GETELEM\";", 
          "type": "Delete", 
          "seed": "return false;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:51:37.259744610 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1181/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 07:06:51.244875662 -0500\n@@ -85,7 +85,6 @@\n           boolean canRemove = false;\n \n           if (specializationState == null) {\n-            canRemove = true;\n           } else {\n             Node specializableFunction =\n               getSpecializableFunctionFromSymbol(declaration);\n@@ -96,11 +95,6 @@\n               canRemove = true;\n             }\n           }\n-\n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java\t2018-12-02 06:51:39.210768564 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1181/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java\t2018-12-02 07:06:51.244875662 -0500\n@@ -532,7 +532,8 @@\n \n     @Override\n     public void remove() {\n-      NodeUtil.removeChild(exprNode.getParent(), exprNode);\n+      int index = -1;\n+\tNodeUtil.removeChild(exprNode.getParent(), exprNode);\n     }\n \n     @Override\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 06:51:37.279734609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1181/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 07:06:51.244875662 -0500\n@@ -218,7 +218,7 @@\n         case QUOTED_PROP:        return \"quoted\";\n         case OPT_ARG_NAME:       return \"opt_arg\";\n \n-        case SYNTHETIC_BLOCK_PROP: return \"synthetic\";\n+        case SYNTHETIC_BLOCK_PROP: ;\n         case EMPTY_BLOCK:        return \"empty_block\";\n         case ORIGINALNAME_PROP:  return \"originalname\";\n         case SIDE_EFFECT_FLAGS:  return \"side_effect_flags\";\n@@ -937,14 +937,7 @@\n         sb.append(getString());\n       } else if (type == Token.FUNCTION) {\n         sb.append(' ');\n-        // In the case of JsDoc trees, the first child is often not a string\n-        // which causes exceptions to be thrown when calling toString or\n-        // toStringTree.\n-        if (first == null || first.getType() != Token.NAME) {\n-          sb.append(\"<invalid>\");\n-        } else {\n-          sb.append(first.getString());\n-        }\n+        int lineno = getLineno();\n       } else if (this instanceof ScriptOrFnNode) {\n         ScriptOrFnNode sof = (ScriptOrFnNode) this;\n         if (this instanceof FunctionNode) {\n@@ -1424,7 +1417,6 @@\n       }\n       res = n.checkTreeEqualsImpl(n2);\n       if (res != null) {\n-        return res;\n       }\n     }\n     return res;\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 06:51:37.283732609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1181/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 07:06:51.248875653 -0500\n@@ -315,7 +315,7 @@\n           case NUMBER:          return \"NUMBER\";\n           case STRING:          return \"STRING\";\n           case NULL:            return \"NULL\";\n-          case THIS:            return \"THIS\";\n+          case THIS:            ;\n           case FALSE:           return \"FALSE\";\n           case TRUE:            return \"TRUE\";\n           case SHEQ:            return \"SHEQ\";\n@@ -359,7 +359,7 @@\n           case LP:              return \"LP\";\n           case RP:              return \"RP\";\n           case COMMA:           return \"COMMA\";\n-          case ASSIGN:          return \"ASSIGN\";\n+          case ASSIGN:          ;\n           case ASSIGN_BITOR:    return \"ASSIGN_BITOR\";\n           case ASSIGN_BITXOR:   return \"ASSIGN_BITXOR\";\n           case ASSIGN_BITAND:   return \"ASSIGN_BITAND\";\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 318, 
          "faulty": "return \"THIS\";", 
          "type": "Delete", 
          "seed": "return Token.STRING;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 88, 
          "faulty": "canRemove=true;", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 943, 
          "faulty": "if (first == null || first.getType() != Token.NAME) {\n  sb.append(\"<invalid>\");\n}\n else {\n  sb.append(first.getString());\n}", 
          "type": "Replace", 
          "seed": "int lineno=getLineno();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1427, 
          "faulty": "return res;", 
          "type": "Delete", 
          "seed": "boolean first=true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 318, 
          "faulty": "return \"THIS\";", 
          "type": "Delete", 
          "seed": "return Token.XMLATTR;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 221, 
          "faulty": "return \"synthetic\";", 
          "type": "Delete", 
          "seed": "return Token.XMLATTR;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 221, 
          "faulty": "return \"synthetic\";", 
          "type": "Delete", 
          "seed": "consumeToken();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1427, 
          "faulty": "return res;", 
          "type": "Delete", 
          "seed": "boolean first=true;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 102, 
          "faulty": "changed=true;", 
          "type": "InsertBefore", 
          "seed": "StringBuilder builder=new StringBuilder();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java", 
          "line": 535, 
          "faulty": "NodeUtil.removeChild(exprNode.getParent(),exprNode);", 
          "type": "InsertBefore", 
          "seed": "int index=-1;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 362, 
          "faulty": "return \"ASSIGN\";", 
          "type": "Delete", 
          "seed": "case 2:"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:51:37.259744610 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_184/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:57:59.700757508 -0500\n@@ -96,11 +96,6 @@\n               canRemove = true;\n             }\n           }\n-\n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 06:51:37.283732609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_184/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 06:57:59.704757548 -0500\n@@ -356,7 +356,7 @@\n           case RB:              return \"RB\";\n           case LC:              return \"LC\";\n           case RC:              return \"RC\";\n-          case LP:              return \"LP\";\n+          case LP:              int c = 0;\n           case RP:              return \"RP\";\n           case COMMA:           return \"COMMA\";\n           case ASSIGN:          return \"ASSIGN\";\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 102, 
          "faulty": "changed=true;", 
          "type": "InsertBefore", 
          "seed": "StringBuilder builder=new StringBuilder();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 359, 
          "faulty": "return \"LP\";", 
          "type": "Replace", 
          "seed": "int c=0;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:51:37.259744610 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1330/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 07:08:08.658489798 -0500\n@@ -96,11 +96,6 @@\n               canRemove = true;\n             }\n           }\n-\n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java\t2018-12-02 06:51:39.210768564 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1330/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java\t2018-12-02 07:08:08.662489929 -0500\n@@ -532,7 +532,8 @@\n \n     @Override\n     public void remove() {\n-      NodeUtil.removeChild(exprNode.getParent(), exprNode);\n+      int index = -1;\n+\tNodeUtil.removeChild(exprNode.getParent(), exprNode);\n     }\n \n     @Override\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 06:51:37.279734609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1330/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 07:08:08.662489929 -0500\n@@ -937,14 +937,7 @@\n         sb.append(getString());\n       } else if (type == Token.FUNCTION) {\n         sb.append(' ');\n-        // In the case of JsDoc trees, the first child is often not a string\n-        // which causes exceptions to be thrown when calling toString or\n-        // toStringTree.\n-        if (first == null || first.getType() != Token.NAME) {\n-          sb.append(\"<invalid>\");\n-        } else {\n-          sb.append(first.getString());\n-        }\n+        int lineno = getLineno();\n       } else if (this instanceof ScriptOrFnNode) {\n         ScriptOrFnNode sof = (ScriptOrFnNode) this;\n         if (this instanceof FunctionNode) {\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 06:51:37.283732609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1330/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 07:08:08.662489929 -0500\n@@ -307,7 +307,7 @@\n           case TYPEOF:          return \"TYPEOF\";\n           case GETPROP:         return \"GETPROP\";\n           case SETPROP:         return \"SETPROP\";\n-          case GETELEM:         return \"GETELEM\";\n+          case GETELEM:         ;\n           case SETELEM:         return \"SETELEM\";\n           case CALL:            return \"CALL\";\n           case NAME:            return \"NAME\";\n@@ -359,7 +359,7 @@\n           case LP:              return \"LP\";\n           case RP:              return \"RP\";\n           case COMMA:           return \"COMMA\";\n-          case ASSIGN:          return \"ASSIGN\";\n+          case ASSIGN:          Context cx = Context.getCurrentContext();\n           case ASSIGN_BITOR:    return \"ASSIGN_BITOR\";\n           case ASSIGN_BITXOR:   return \"ASSIGN_BITXOR\";\n           case ASSIGN_BITAND:   return \"ASSIGN_BITAND\";\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 943, 
          "faulty": "if (first == null || first.getType() != Token.NAME) {\n  sb.append(\"<invalid>\");\n}\n else {\n  sb.append(first.getString());\n}", 
          "type": "Replace", 
          "seed": "int lineno=getLineno();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 362, 
          "faulty": "return \"ASSIGN\";", 
          "type": "Replace", 
          "seed": "Context cx=Context.getCurrentContext();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 102, 
          "faulty": "changed=true;", 
          "type": "InsertBefore", 
          "seed": "StringBuilder builder=new StringBuilder();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java", 
          "line": 535, 
          "faulty": "NodeUtil.removeChild(exprNode.getParent(),exprNode);", 
          "type": "InsertBefore", 
          "seed": "int index=-1;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 943, 
          "faulty": "if (first == null || first.getType() != Token.NAME) {\n  sb.append(\"<invalid>\");\n}\n else {\n  sb.append(first.getString());\n}", 
          "type": "Replace", 
          "seed": "int lineno=getLineno();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 362, 
          "faulty": "return \"ASSIGN\";", 
          "type": "Replace", 
          "seed": "Context cx=Context.getCurrentContext();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 310, 
          "faulty": "return \"GETELEM\";", 
          "type": "Delete", 
          "seed": "return false;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:51:37.259744610 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_900/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 07:04:24.629471972 -0500\n@@ -96,11 +96,6 @@\n               canRemove = true;\n             }\n           }\n-\n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 06:51:37.283732609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_900/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 07:04:24.633471950 -0500\n@@ -359,7 +359,7 @@\n           case LP:              return \"LP\";\n           case RP:              return \"RP\";\n           case COMMA:           return \"COMMA\";\n-          case ASSIGN:          return \"ASSIGN\";\n+          case ASSIGN:          ;\n           case ASSIGN_BITOR:    return \"ASSIGN_BITOR\";\n           case ASSIGN_BITXOR:   return \"ASSIGN_BITXOR\";\n           case ASSIGN_BITAND:   return \"ASSIGN_BITAND\";\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 102, 
          "faulty": "changed=true;", 
          "type": "InsertBefore", 
          "seed": "StringBuilder builder=new StringBuilder();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 362, 
          "faulty": "return \"ASSIGN\";", 
          "type": "Delete", 
          "seed": "return Token.LP;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:51:37.259744610 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1130/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 07:06:26.376943476 -0500\n@@ -85,7 +85,6 @@\n           boolean canRemove = false;\n \n           if (specializationState == null) {\n-            canRemove = true;\n           } else {\n             Node specializableFunction =\n               getSpecializableFunctionFromSymbol(declaration);\n@@ -96,11 +95,6 @@\n               canRemove = true;\n             }\n           }\n-\n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 06:51:37.279734609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1130/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 07:06:26.380943465 -0500\n@@ -943,7 +943,6 @@\n         if (first == null || first.getType() != Token.NAME) {\n           sb.append(\"<invalid>\");\n         } else {\n-          sb.append(first.getString());\n         }\n       } else if (this instanceof ScriptOrFnNode) {\n         ScriptOrFnNode sof = (ScriptOrFnNode) this;\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 06:51:37.283732609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1130/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 07:06:26.380943465 -0500\n@@ -359,7 +359,7 @@\n           case LP:              return \"LP\";\n           case RP:              return \"RP\";\n           case COMMA:           return \"COMMA\";\n-          case ASSIGN:          return \"ASSIGN\";\n+          case ASSIGN:          ;\n           case ASSIGN_BITOR:    return \"ASSIGN_BITOR\";\n           case ASSIGN_BITXOR:   return \"ASSIGN_BITXOR\";\n           case ASSIGN_BITAND:   return \"ASSIGN_BITAND\";\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 88, 
          "faulty": "canRemove=true;", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 362, 
          "faulty": "return \"ASSIGN\";", 
          "type": "Delete", 
          "seed": "return Token.LP;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 946, 
          "faulty": "sb.append(first.getString());", 
          "type": "Delete", 
          "seed": "matchChar('|');"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:51:37.259744610 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1667/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 07:11:01.166812763 -0500\n@@ -82,10 +82,10 @@\n     for (NameInfo nameInfo : allNameInfo) {\n       if (!nameInfo.isReferenced()) {\n         for (Symbol declaration : nameInfo.getDeclarations()) {\n-          boolean canRemove = false;\n+          boolean valid = false;\n+\t\tboolean canRemove = false;\n \n           if (specializationState == null) {\n-            canRemove = true;\n           } else {\n             Node specializableFunction =\n               getSpecializableFunctionFromSymbol(declaration);\n@@ -96,11 +96,6 @@\n               canRemove = true;\n             }\n           }\n-\n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java\t2018-12-02 06:51:39.210768564 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1667/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java\t2018-12-02 07:11:01.166812763 -0500\n@@ -532,7 +532,7 @@\n \n     @Override\n     public void remove() {\n-      NodeUtil.removeChild(exprNode.getParent(), exprNode);\n+      int index = -1;\n     }\n \n     @Override\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 06:51:37.279734609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1667/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 07:11:01.166812763 -0500\n@@ -218,7 +218,7 @@\n         case QUOTED_PROP:        return \"quoted\";\n         case OPT_ARG_NAME:       return \"opt_arg\";\n \n-        case SYNTHETIC_BLOCK_PROP: return \"synthetic\";\n+        case SYNTHETIC_BLOCK_PROP: ;\n         case EMPTY_BLOCK:        return \"empty_block\";\n         case ORIGINALNAME_PROP:  return \"originalname\";\n         case SIDE_EFFECT_FLAGS:  return \"side_effect_flags\";\n@@ -1424,7 +1424,7 @@\n       }\n       res = n.checkTreeEqualsImpl(n2);\n       if (res != null) {\n-        return res;\n+        Kit.codeBug();\n       }\n     }\n     return res;\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 06:51:37.283732609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1667/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 07:11:01.170812840 -0500\n@@ -315,7 +315,7 @@\n           case NUMBER:          return \"NUMBER\";\n           case STRING:          return \"STRING\";\n           case NULL:            return \"NULL\";\n-          case THIS:            return \"THIS\";\n+          case THIS:            ;\n           case FALSE:           return \"FALSE\";\n           case TRUE:            return \"TRUE\";\n           case SHEQ:            return \"SHEQ\";\n@@ -359,7 +359,7 @@\n           case LP:              return \"LP\";\n           case RP:              return \"RP\";\n           case COMMA:           return \"COMMA\";\n-          case ASSIGN:          return \"ASSIGN\";\n+          case ASSIGN:          ;\n           case ASSIGN_BITOR:    return \"ASSIGN_BITOR\";\n           case ASSIGN_BITXOR:   return \"ASSIGN_BITXOR\";\n           case ASSIGN_BITAND:   return \"ASSIGN_BITAND\";\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 221, 
          "faulty": "return \"synthetic\";", 
          "type": "Delete", 
          "seed": "consumeToken();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java", 
          "line": 535, 
          "faulty": "NodeUtil.removeChild(exprNode.getParent(),exprNode);", 
          "type": "InsertBefore", 
          "seed": "int index=-1;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 362, 
          "faulty": "return \"ASSIGN\";", 
          "type": "Delete", 
          "seed": "case 2:"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 85, 
          "faulty": "boolean canRemove=false;", 
          "type": "InsertBefore", 
          "seed": "boolean valid=false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 221, 
          "faulty": "return \"synthetic\";", 
          "type": "Delete", 
          "seed": "return Token.XMLATTR;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 88, 
          "faulty": "canRemove=true;", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 318, 
          "faulty": "return \"THIS\";", 
          "type": "Delete", 
          "seed": "return Token.STRING;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1427, 
          "faulty": "return res;", 
          "type": "Replace", 
          "seed": "Kit.codeBug();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java", 
          "line": 535, 
          "faulty": "NodeUtil.removeChild(exprNode.getParent(),exprNode);", 
          "type": "Delete", 
          "seed": "return 0;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:51:37.259744610 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1123/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 07:06:23.076953342 -0500\n@@ -85,7 +85,6 @@\n           boolean canRemove = false;\n \n           if (specializationState == null) {\n-            canRemove = true;\n           } else {\n             Node specializableFunction =\n               getSpecializableFunctionFromSymbol(declaration);\n@@ -96,11 +95,6 @@\n               canRemove = true;\n             }\n           }\n-\n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java\t2018-12-02 06:51:39.210768564 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1123/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java\t2018-12-02 07:06:23.076953342 -0500\n@@ -532,7 +532,8 @@\n \n     @Override\n     public void remove() {\n-      NodeUtil.removeChild(exprNode.getParent(), exprNode);\n+      int index = -1;\n+\tNodeUtil.removeChild(exprNode.getParent(), exprNode);\n     }\n \n     @Override\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 06:51:37.279734609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1123/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 07:06:23.076953342 -0500\n@@ -937,14 +937,7 @@\n         sb.append(getString());\n       } else if (type == Token.FUNCTION) {\n         sb.append(' ');\n-        // In the case of JsDoc trees, the first child is often not a string\n-        // which causes exceptions to be thrown when calling toString or\n-        // toStringTree.\n-        if (first == null || first.getType() != Token.NAME) {\n-          sb.append(\"<invalid>\");\n-        } else {\n-          sb.append(first.getString());\n-        }\n+        int lineno = getLineno();\n       } else if (this instanceof ScriptOrFnNode) {\n         ScriptOrFnNode sof = (ScriptOrFnNode) this;\n         if (this instanceof FunctionNode) {\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 06:51:37.283732609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1123/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 07:06:23.080953332 -0500\n@@ -315,7 +315,7 @@\n           case NUMBER:          return \"NUMBER\";\n           case STRING:          return \"STRING\";\n           case NULL:            return \"NULL\";\n-          case THIS:            return \"THIS\";\n+          case THIS:            ;\n           case FALSE:           return \"FALSE\";\n           case TRUE:            return \"TRUE\";\n           case SHEQ:            return \"SHEQ\";\n@@ -359,7 +359,7 @@\n           case LP:              return \"LP\";\n           case RP:              return \"RP\";\n           case COMMA:           return \"COMMA\";\n-          case ASSIGN:          return \"ASSIGN\";\n+          case ASSIGN:          ;\n           case ASSIGN_BITOR:    return \"ASSIGN_BITOR\";\n           case ASSIGN_BITXOR:   return \"ASSIGN_BITXOR\";\n           case ASSIGN_BITAND:   return \"ASSIGN_BITAND\";\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 318, 
          "faulty": "return \"THIS\";", 
          "type": "Delete", 
          "seed": "return Token.STRING;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 88, 
          "faulty": "canRemove=true;", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 943, 
          "faulty": "if (first == null || first.getType() != Token.NAME) {\n  sb.append(\"<invalid>\");\n}\n else {\n  sb.append(first.getString());\n}", 
          "type": "Replace", 
          "seed": "int lineno=getLineno();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 102, 
          "faulty": "changed=true;", 
          "type": "InsertBefore", 
          "seed": "StringBuilder builder=new StringBuilder();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java", 
          "line": 535, 
          "faulty": "NodeUtil.removeChild(exprNode.getParent(),exprNode);", 
          "type": "InsertBefore", 
          "seed": "int index=-1;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 362, 
          "faulty": "return \"ASSIGN\";", 
          "type": "Delete", 
          "seed": "case 2:"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:51:37.259744610 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_504/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 07:01:00.755543215 -0500\n@@ -85,7 +85,6 @@\n           boolean canRemove = false;\n \n           if (specializationState == null) {\n-            canRemove = true;\n           } else {\n             Node specializableFunction =\n               getSpecializableFunctionFromSymbol(declaration);\n@@ -96,11 +95,6 @@\n               canRemove = true;\n             }\n           }\n-\n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 06:51:37.279734609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_504/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 07:01:00.759543151 -0500\n@@ -1424,7 +1424,6 @@\n       }\n       res = n.checkTreeEqualsImpl(n2);\n       if (res != null) {\n-        return res;\n       }\n     }\n     return res;\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 06:51:37.283732609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_504/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 07:01:00.759543151 -0500\n@@ -359,7 +359,7 @@\n           case LP:              return \"LP\";\n           case RP:              return \"RP\";\n           case COMMA:           return \"COMMA\";\n-          case ASSIGN:          return \"ASSIGN\";\n+          case ASSIGN:          ;\n           case ASSIGN_BITOR:    return \"ASSIGN_BITOR\";\n           case ASSIGN_BITXOR:   return \"ASSIGN_BITXOR\";\n           case ASSIGN_BITAND:   return \"ASSIGN_BITAND\";\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 362, 
          "faulty": "return \"ASSIGN\";", 
          "type": "Delete", 
          "seed": "Node pn=memberExpr(true);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 102, 
          "faulty": "changed=true;", 
          "type": "InsertBefore", 
          "seed": "StringBuilder builder=new StringBuilder();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 88, 
          "faulty": "canRemove=true;", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1427, 
          "faulty": "return res;", 
          "type": "Delete", 
          "seed": "return Token.SEMI;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:51:37.259744610 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_890/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 07:04:19.541502705 -0500\n@@ -96,11 +96,6 @@\n               canRemove = true;\n             }\n           }\n-\n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java\t2018-12-02 06:51:39.210768564 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_890/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java\t2018-12-02 07:04:19.545502680 -0500\n@@ -532,7 +532,8 @@\n \n     @Override\n     public void remove() {\n-      NodeUtil.removeChild(exprNode.getParent(), exprNode);\n+      int index = -1;\n+\tNodeUtil.removeChild(exprNode.getParent(), exprNode);\n     }\n \n     @Override\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 06:51:37.279734609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_890/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 07:04:19.545502680 -0500\n@@ -943,7 +943,7 @@\n         if (first == null || first.getType() != Token.NAME) {\n           sb.append(\"<invalid>\");\n         } else {\n-          sb.append(first.getString());\n+          Kit.codeBug();\n         }\n       } else if (this instanceof ScriptOrFnNode) {\n         ScriptOrFnNode sof = (ScriptOrFnNode) this;\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 06:51:37.283732609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_890/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 07:04:19.545502680 -0500\n@@ -359,7 +359,7 @@\n           case LP:              return \"LP\";\n           case RP:              return \"RP\";\n           case COMMA:           return \"COMMA\";\n-          case ASSIGN:          return \"ASSIGN\";\n+          case ASSIGN:          ;\n           case ASSIGN_BITOR:    return \"ASSIGN_BITOR\";\n           case ASSIGN_BITXOR:   return \"ASSIGN_BITXOR\";\n           case ASSIGN_BITAND:   return \"ASSIGN_BITAND\";\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java", 
          "line": 535, 
          "faulty": "NodeUtil.removeChild(exprNode.getParent(),exprNode);", 
          "type": "InsertBefore", 
          "seed": "int index=-1;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 362, 
          "faulty": "return \"ASSIGN\";", 
          "type": "Delete", 
          "seed": "return Token.LP;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 946, 
          "faulty": "sb.append(first.getString());", 
          "type": "Replace", 
          "seed": "Kit.codeBug();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:51:37.259744610 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1629/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 07:10:42.054437383 -0500\n@@ -85,7 +85,6 @@\n           boolean canRemove = false;\n \n           if (specializationState == null) {\n-            canRemove = true;\n           } else {\n             Node specializableFunction =\n               getSpecializableFunctionFromSymbol(declaration);\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 06:51:37.279734609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1629/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 07:10:42.058437465 -0500\n@@ -1424,7 +1424,6 @@\n       }\n       res = n.checkTreeEqualsImpl(n2);\n       if (res != null) {\n-        return res;\n       }\n     }\n     return res;\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 06:51:37.283732609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1629/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 07:10:42.058437465 -0500\n@@ -307,7 +307,7 @@\n           case TYPEOF:          return \"TYPEOF\";\n           case GETPROP:         return \"GETPROP\";\n           case SETPROP:         return \"SETPROP\";\n-          case GETELEM:         return \"GETELEM\";\n+          case GETELEM:         return \"return\";\n           case SETELEM:         return \"SETELEM\";\n           case CALL:            return \"CALL\";\n           case NAME:            return \"NAME\";\n@@ -315,7 +315,7 @@\n           case NUMBER:          return \"NUMBER\";\n           case STRING:          return \"STRING\";\n           case NULL:            return \"NULL\";\n-          case THIS:            return \"THIS\";\n+          case THIS:            ;\n           case FALSE:           return \"FALSE\";\n           case TRUE:            return \"TRUE\";\n           case SHEQ:            return \"SHEQ\";\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 88, 
          "faulty": "canRemove=true;", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 310, 
          "faulty": "return \"GETELEM\";", 
          "type": "Replace", 
          "seed": "return \"return\";"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 318, 
          "faulty": "return \"THIS\";", 
          "type": "Delete", 
          "seed": "return Token.STRING;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 88, 
          "faulty": "canRemove=true;", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1427, 
          "faulty": "return res;", 
          "type": "Delete", 
          "seed": "return Token.STRING;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:51:37.259744610 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1696/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 07:11:17.695121310 -0500\n@@ -85,7 +85,6 @@\n           boolean canRemove = false;\n \n           if (specializationState == null) {\n-            canRemove = true;\n           } else {\n             Node specializableFunction =\n               getSpecializableFunctionFromSymbol(declaration);\n@@ -96,11 +95,6 @@\n               canRemove = true;\n             }\n           }\n-\n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 06:51:37.279734609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1696/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 07:11:17.699121383 -0500\n@@ -218,7 +218,7 @@\n         case QUOTED_PROP:        return \"quoted\";\n         case OPT_ARG_NAME:       return \"opt_arg\";\n \n-        case SYNTHETIC_BLOCK_PROP: return \"synthetic\";\n+        case SYNTHETIC_BLOCK_PROP: ;\n         case EMPTY_BLOCK:        return \"empty_block\";\n         case ORIGINALNAME_PROP:  return \"originalname\";\n         case SIDE_EFFECT_FLAGS:  return \"side_effect_flags\";\n@@ -937,14 +937,7 @@\n         sb.append(getString());\n       } else if (type == Token.FUNCTION) {\n         sb.append(' ');\n-        // In the case of JsDoc trees, the first child is often not a string\n-        // which causes exceptions to be thrown when calling toString or\n-        // toStringTree.\n-        if (first == null || first.getType() != Token.NAME) {\n-          sb.append(\"<invalid>\");\n-        } else {\n-          sb.append(first.getString());\n-        }\n+        int lineno = getLineno();\n       } else if (this instanceof ScriptOrFnNode) {\n         ScriptOrFnNode sof = (ScriptOrFnNode) this;\n         if (this instanceof FunctionNode) {\n@@ -1424,7 +1417,7 @@\n       }\n       res = n.checkTreeEqualsImpl(n2);\n       if (res != null) {\n-        return res;\n+        Kit.codeBug();\n       }\n     }\n     return res;\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 06:51:37.283732609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1696/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 07:11:17.699121383 -0500\n@@ -307,7 +307,7 @@\n           case TYPEOF:          return \"TYPEOF\";\n           case GETPROP:         return \"GETPROP\";\n           case SETPROP:         return \"SETPROP\";\n-          case GETELEM:         return \"GETELEM\";\n+          case GETELEM:         ;\n           case SETELEM:         return \"SETELEM\";\n           case CALL:            return \"CALL\";\n           case NAME:            return \"NAME\";\n@@ -315,7 +315,7 @@\n           case NUMBER:          return \"NUMBER\";\n           case STRING:          return \"STRING\";\n           case NULL:            return \"NULL\";\n-          case THIS:            return \"THIS\";\n+          case THIS:            ;\n           case FALSE:           return \"FALSE\";\n           case TRUE:            return \"TRUE\";\n           case SHEQ:            return \"SHEQ\";\n@@ -359,7 +359,7 @@\n           case LP:              return \"LP\";\n           case RP:              return \"RP\";\n           case COMMA:           return \"COMMA\";\n-          case ASSIGN:          return \"ASSIGN\";\n+          case ASSIGN:          ;\n           case ASSIGN_BITOR:    return \"ASSIGN_BITOR\";\n           case ASSIGN_BITXOR:   return \"ASSIGN_BITXOR\";\n           case ASSIGN_BITAND:   return \"ASSIGN_BITAND\";\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 88, 
          "faulty": "canRemove=true;", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 943, 
          "faulty": "if (first == null || first.getType() != Token.NAME) {\n  sb.append(\"<invalid>\");\n}\n else {\n  sb.append(first.getString());\n}", 
          "type": "Replace", 
          "seed": "int lineno=getLineno();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 221, 
          "faulty": "return \"synthetic\";", 
          "type": "Delete", 
          "seed": "consumeToken();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 88, 
          "faulty": "canRemove=true;", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 943, 
          "faulty": "if (first == null || first.getType() != Token.NAME) {\n  sb.append(\"<invalid>\");\n}\n else {\n  sb.append(first.getString());\n}", 
          "type": "Replace", 
          "seed": "int lineno=getLineno();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 221, 
          "faulty": "return \"synthetic\";", 
          "type": "Delete", 
          "seed": "consumeToken();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1427, 
          "faulty": "return res;", 
          "type": "Delete", 
          "seed": "boolean first=true;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 88, 
          "faulty": "canRemove=true;", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 943, 
          "faulty": "if (first == null || first.getType() != Token.NAME) {\n  sb.append(\"<invalid>\");\n}\n else {\n  sb.append(first.getString());\n}", 
          "type": "Replace", 
          "seed": "int lineno=getLineno();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 221, 
          "faulty": "return \"synthetic\";", 
          "type": "Delete", 
          "seed": "consumeToken();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1427, 
          "faulty": "return res;", 
          "type": "Delete", 
          "seed": "boolean first=true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 362, 
          "faulty": "return \"ASSIGN\";", 
          "type": "Delete", 
          "seed": "return Token.LP;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 221, 
          "faulty": "return \"synthetic\";", 
          "type": "Delete", 
          "seed": "return Token.XMLATTR;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 88, 
          "faulty": "canRemove=true;", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 318, 
          "faulty": "return \"THIS\";", 
          "type": "Delete", 
          "seed": "return Token.STRING;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1427, 
          "faulty": "return res;", 
          "type": "Replace", 
          "seed": "Kit.codeBug();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 102, 
          "faulty": "changed=true;", 
          "type": "InsertBefore", 
          "seed": "boolean valid=false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 310, 
          "faulty": "return \"GETELEM\";", 
          "type": "Delete", 
          "seed": "if (matchChar('+')) {\n  return Token.INC;\n}\n else {\n  return Token.ADD;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:51:37.259744610 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_736/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 07:03:03.150072410 -0500\n@@ -85,7 +85,6 @@\n           boolean canRemove = false;\n \n           if (specializationState == null) {\n-            canRemove = true;\n           } else {\n             Node specializableFunction =\n               getSpecializableFunctionFromSymbol(declaration);\n@@ -96,11 +95,6 @@\n               canRemove = true;\n             }\n           }\n-\n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 06:51:37.279734609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_736/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 07:03:03.154072373 -0500\n@@ -218,7 +218,7 @@\n         case QUOTED_PROP:        return \"quoted\";\n         case OPT_ARG_NAME:       return \"opt_arg\";\n \n-        case SYNTHETIC_BLOCK_PROP: return \"synthetic\";\n+        case SYNTHETIC_BLOCK_PROP: ;\n         case EMPTY_BLOCK:        return \"empty_block\";\n         case ORIGINALNAME_PROP:  return \"originalname\";\n         case SIDE_EFFECT_FLAGS:  return \"side_effect_flags\";\n@@ -1424,7 +1424,6 @@\n       }\n       res = n.checkTreeEqualsImpl(n2);\n       if (res != null) {\n-        return res;\n       }\n     }\n     return res;\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 88, 
          "faulty": "canRemove=true;", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1427, 
          "faulty": "return res;", 
          "type": "Delete", 
          "seed": "return Token.SEMI;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 102, 
          "faulty": "changed=true;", 
          "type": "InsertBefore", 
          "seed": "StringBuilder builder=new StringBuilder();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 221, 
          "faulty": "return \"synthetic\";", 
          "type": "Delete", 
          "seed": "consumeToken();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:51:37.259744610 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1201/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 07:07:01.656850540 -0500\n@@ -96,11 +96,6 @@\n               canRemove = true;\n             }\n           }\n-\n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 06:51:37.279734609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1201/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 07:07:01.660850530 -0500\n@@ -218,7 +218,7 @@\n         case QUOTED_PROP:        return \"quoted\";\n         case OPT_ARG_NAME:       return \"opt_arg\";\n \n-        case SYNTHETIC_BLOCK_PROP: return \"synthetic\";\n+        case SYNTHETIC_BLOCK_PROP: ;\n         case EMPTY_BLOCK:        return \"empty_block\";\n         case ORIGINALNAME_PROP:  return \"originalname\";\n         case SIDE_EFFECT_FLAGS:  return \"side_effect_flags\";\n@@ -937,14 +937,7 @@\n         sb.append(getString());\n       } else if (type == Token.FUNCTION) {\n         sb.append(' ');\n-        // In the case of JsDoc trees, the first child is often not a string\n-        // which causes exceptions to be thrown when calling toString or\n-        // toStringTree.\n-        if (first == null || first.getType() != Token.NAME) {\n-          sb.append(\"<invalid>\");\n-        } else {\n-          sb.append(first.getString());\n-        }\n+        int lineno = getLineno();\n       } else if (this instanceof ScriptOrFnNode) {\n         ScriptOrFnNode sof = (ScriptOrFnNode) this;\n         if (this instanceof FunctionNode) {\n@@ -1424,7 +1417,6 @@\n       }\n       res = n.checkTreeEqualsImpl(n2);\n       if (res != null) {\n-        return res;\n       }\n     }\n     return res;\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 06:51:37.283732609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1201/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 07:07:01.660850530 -0500\n@@ -307,7 +307,7 @@\n           case TYPEOF:          return \"TYPEOF\";\n           case GETPROP:         return \"GETPROP\";\n           case SETPROP:         return \"SETPROP\";\n-          case GETELEM:         return \"GETELEM\";\n+          case GETELEM:         ;\n           case SETELEM:         return \"SETELEM\";\n           case CALL:            return \"CALL\";\n           case NAME:            return \"NAME\";\n@@ -315,7 +315,7 @@\n           case NUMBER:          return \"NUMBER\";\n           case STRING:          return \"STRING\";\n           case NULL:            return \"NULL\";\n-          case THIS:            return \"THIS\";\n+          case THIS:            ;\n           case FALSE:           return \"FALSE\";\n           case TRUE:            return \"TRUE\";\n           case SHEQ:            return \"SHEQ\";\n@@ -359,7 +359,7 @@\n           case LP:              return \"LP\";\n           case RP:              return \"RP\";\n           case COMMA:           return \"COMMA\";\n-          case ASSIGN:          return \"ASSIGN\";\n+          case ASSIGN:          Context cx = Context.getCurrentContext();\n           case ASSIGN_BITOR:    return \"ASSIGN_BITOR\";\n           case ASSIGN_BITXOR:   return \"ASSIGN_BITXOR\";\n           case ASSIGN_BITAND:   return \"ASSIGN_BITAND\";\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 318, 
          "faulty": "return \"THIS\";", 
          "type": "Delete", 
          "seed": "return Token.STRING;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 318, 
          "faulty": "return \"THIS\";", 
          "type": "Delete", 
          "seed": "return Token.XMLATTR;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 221, 
          "faulty": "return \"synthetic\";", 
          "type": "Delete", 
          "seed": "return Token.XMLATTR;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 221, 
          "faulty": "return \"synthetic\";", 
          "type": "Delete", 
          "seed": "consumeToken();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1427, 
          "faulty": "return res;", 
          "type": "Delete", 
          "seed": "boolean first=true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 318, 
          "faulty": "return \"THIS\";", 
          "type": "Delete", 
          "seed": "return Token.XMLATTR;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 221, 
          "faulty": "return \"synthetic\";", 
          "type": "Delete", 
          "seed": "return Token.XMLATTR;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 943, 
          "faulty": "if (first == null || first.getType() != Token.NAME) {\n  sb.append(\"<invalid>\");\n}\n else {\n  sb.append(first.getString());\n}", 
          "type": "Replace", 
          "seed": "int lineno=getLineno();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 362, 
          "faulty": "return \"ASSIGN\";", 
          "type": "Replace", 
          "seed": "Context cx=Context.getCurrentContext();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 310, 
          "faulty": "return \"GETELEM\";", 
          "type": "Delete", 
          "seed": "return false;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:51:37.259744610 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1082/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 07:06:02.673019186 -0500\n@@ -85,7 +85,6 @@\n           boolean canRemove = false;\n \n           if (specializationState == null) {\n-            canRemove = true;\n           } else {\n             Node specializableFunction =\n               getSpecializableFunctionFromSymbol(declaration);\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 06:51:37.279734609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1082/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 07:06:02.677019174 -0500\n@@ -218,7 +218,7 @@\n         case QUOTED_PROP:        return \"quoted\";\n         case OPT_ARG_NAME:       return \"opt_arg\";\n \n-        case SYNTHETIC_BLOCK_PROP: return \"synthetic\";\n+        case SYNTHETIC_BLOCK_PROP: ;\n         case EMPTY_BLOCK:        return \"empty_block\";\n         case ORIGINALNAME_PROP:  return \"originalname\";\n         case SIDE_EFFECT_FLAGS:  return \"side_effect_flags\";\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 06:51:37.283732609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1082/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 07:06:02.677019174 -0500\n@@ -315,7 +315,7 @@\n           case NUMBER:          return \"NUMBER\";\n           case STRING:          return \"STRING\";\n           case NULL:            return \"NULL\";\n-          case THIS:            return \"THIS\";\n+          case THIS:            ;\n           case FALSE:           return \"FALSE\";\n           case TRUE:            return \"TRUE\";\n           case SHEQ:            return \"SHEQ\";\n@@ -359,7 +359,7 @@\n           case LP:              return \"LP\";\n           case RP:              return \"RP\";\n           case COMMA:           return \"COMMA\";\n-          case ASSIGN:          return \"ASSIGN\";\n+          case ASSIGN:          ;\n           case ASSIGN_BITOR:    return \"ASSIGN_BITOR\";\n           case ASSIGN_BITXOR:   return \"ASSIGN_BITXOR\";\n           case ASSIGN_BITAND:   return \"ASSIGN_BITAND\";\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 318, 
          "faulty": "return \"THIS\";", 
          "type": "Delete", 
          "seed": "return Token.STRING;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 362, 
          "faulty": "return \"ASSIGN\";", 
          "type": "Delete", 
          "seed": "return Token.LP;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 221, 
          "faulty": "return \"synthetic\";", 
          "type": "Delete", 
          "seed": "boolean nullKey=false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 88, 
          "faulty": "canRemove=true;", 
          "type": "Delete", 
          "seed": "return this;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:51:37.259744610 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1758/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 07:11:48.291656381 -0500\n@@ -85,7 +85,6 @@\n           boolean canRemove = false;\n \n           if (specializationState == null) {\n-            canRemove = true;\n           } else {\n             Node specializableFunction =\n               getSpecializableFunctionFromSymbol(declaration);\n@@ -96,11 +95,6 @@\n               canRemove = true;\n             }\n           }\n-\n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 06:51:37.279734609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1758/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 07:11:48.291656381 -0500\n@@ -1424,7 +1424,6 @@\n       }\n       res = n.checkTreeEqualsImpl(n2);\n       if (res != null) {\n-        return res;\n       }\n     }\n     return res;\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 06:51:37.283732609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1758/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 07:11:48.295656447 -0500\n@@ -307,7 +307,7 @@\n           case TYPEOF:          return \"TYPEOF\";\n           case GETPROP:         return \"GETPROP\";\n           case SETPROP:         return \"SETPROP\";\n-          case GETELEM:         return \"GETELEM\";\n+          case GETELEM:         ;\n           case SETELEM:         return \"SETELEM\";\n           case CALL:            return \"CALL\";\n           case NAME:            return \"NAME\";\n@@ -315,7 +315,7 @@\n           case NUMBER:          return \"NUMBER\";\n           case STRING:          return \"STRING\";\n           case NULL:            return \"NULL\";\n-          case THIS:            return \"THIS\";\n+          case THIS:            ;\n           case FALSE:           return \"FALSE\";\n           case TRUE:            return \"TRUE\";\n           case SHEQ:            return \"SHEQ\";\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 318, 
          "faulty": "return \"THIS\";", 
          "type": "Delete", 
          "seed": "return Token.STRING;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 88, 
          "faulty": "canRemove=true;", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1427, 
          "faulty": "return res;", 
          "type": "Delete", 
          "seed": "return Token.STRING;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 310, 
          "faulty": "return \"GETELEM\";", 
          "type": "Delete", 
          "seed": "consumeToken();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:51:37.259744610 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_605/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 07:01:54.450796562 -0500\n@@ -85,7 +85,6 @@\n           boolean canRemove = false;\n \n           if (specializationState == null) {\n-            canRemove = true;\n           } else {\n             Node specializableFunction =\n               getSpecializableFunctionFromSymbol(declaration);\n@@ -96,11 +95,6 @@\n               canRemove = true;\n             }\n           }\n-\n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 06:51:37.279734609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_605/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 07:01:54.450796562 -0500\n@@ -218,7 +218,7 @@\n         case QUOTED_PROP:        return \"quoted\";\n         case OPT_ARG_NAME:       return \"opt_arg\";\n \n-        case SYNTHETIC_BLOCK_PROP: return \"synthetic\";\n+        case SYNTHETIC_BLOCK_PROP: ;\n         case EMPTY_BLOCK:        return \"empty_block\";\n         case ORIGINALNAME_PROP:  return \"originalname\";\n         case SIDE_EFFECT_FLAGS:  return \"side_effect_flags\";\n@@ -1424,7 +1424,6 @@\n       }\n       res = n.checkTreeEqualsImpl(n2);\n       if (res != null) {\n-        return res;\n       }\n     }\n     return res;\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 88, 
          "faulty": "canRemove=true;", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1427, 
          "faulty": "return res;", 
          "type": "Delete", 
          "seed": "return Token.SEMI;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 221, 
          "faulty": "return \"synthetic\";", 
          "type": "Delete", 
          "seed": "consumeToken();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1427, 
          "faulty": "return res;", 
          "type": "Delete", 
          "seed": "boolean first=true;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:51:37.259744610 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1206/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 07:07:04.296844461 -0500\n@@ -85,7 +85,6 @@\n           boolean canRemove = false;\n \n           if (specializationState == null) {\n-            canRemove = true;\n           } else {\n             Node specializableFunction =\n               getSpecializableFunctionFromSymbol(declaration);\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 06:51:37.279734609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1206/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 07:07:04.296844461 -0500\n@@ -937,14 +937,7 @@\n         sb.append(getString());\n       } else if (type == Token.FUNCTION) {\n         sb.append(' ');\n-        // In the case of JsDoc trees, the first child is often not a string\n-        // which causes exceptions to be thrown when calling toString or\n-        // toStringTree.\n-        if (first == null || first.getType() != Token.NAME) {\n-          sb.append(\"<invalid>\");\n-        } else {\n-          sb.append(first.getString());\n-        }\n+        int lineno = getLineno();\n       } else if (this instanceof ScriptOrFnNode) {\n         ScriptOrFnNode sof = (ScriptOrFnNode) this;\n         if (this instanceof FunctionNode) {\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 06:51:37.283732609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1206/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 07:07:04.296844461 -0500\n@@ -307,7 +307,7 @@\n           case TYPEOF:          return \"TYPEOF\";\n           case GETPROP:         return \"GETPROP\";\n           case SETPROP:         return \"SETPROP\";\n-          case GETELEM:         return \"GETELEM\";\n+          case GETELEM:         ;\n           case SETELEM:         return \"SETELEM\";\n           case CALL:            return \"CALL\";\n           case NAME:            return \"NAME\";\n@@ -359,7 +359,7 @@\n           case LP:              return \"LP\";\n           case RP:              return \"RP\";\n           case COMMA:           return \"COMMA\";\n-          case ASSIGN:          return \"ASSIGN\";\n+          case ASSIGN:          Context cx = Context.getCurrentContext();\n           case ASSIGN_BITOR:    return \"ASSIGN_BITOR\";\n           case ASSIGN_BITXOR:   return \"ASSIGN_BITXOR\";\n           case ASSIGN_BITAND:   return \"ASSIGN_BITAND\";\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 88, 
          "faulty": "canRemove=true;", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 943, 
          "faulty": "if (first == null || first.getType() != Token.NAME) {\n  sb.append(\"<invalid>\");\n}\n else {\n  sb.append(first.getString());\n}", 
          "type": "Replace", 
          "seed": "int lineno=getLineno();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 362, 
          "faulty": "return \"ASSIGN\";", 
          "type": "Replace", 
          "seed": "Context cx=Context.getCurrentContext();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 310, 
          "faulty": "return \"GETELEM\";", 
          "type": "Delete", 
          "seed": "return false;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:51:37.259744610 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_840/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 07:03:54.741664525 -0500\n@@ -85,7 +85,6 @@\n           boolean canRemove = false;\n \n           if (specializationState == null) {\n-            canRemove = true;\n           } else {\n             Node specializableFunction =\n               getSpecializableFunctionFromSymbol(declaration);\n@@ -96,11 +95,6 @@\n               canRemove = true;\n             }\n           }\n-\n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java\t2018-12-02 06:51:39.210768564 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_840/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java\t2018-12-02 07:03:54.745664498 -0500\n@@ -532,7 +532,8 @@\n \n     @Override\n     public void remove() {\n-      NodeUtil.removeChild(exprNode.getParent(), exprNode);\n+      int index = -1;\n+\tNodeUtil.removeChild(exprNode.getParent(), exprNode);\n     }\n \n     @Override\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 06:51:37.283732609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_840/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 07:03:54.745664498 -0500\n@@ -359,7 +359,7 @@\n           case LP:              return \"LP\";\n           case RP:              return \"RP\";\n           case COMMA:           return \"COMMA\";\n-          case ASSIGN:          return \"ASSIGN\";\n+          case ASSIGN:          ;\n           case ASSIGN_BITOR:    return \"ASSIGN_BITOR\";\n           case ASSIGN_BITXOR:   return \"ASSIGN_BITXOR\";\n           case ASSIGN_BITAND:   return \"ASSIGN_BITAND\";\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 362, 
          "faulty": "return \"ASSIGN\";", 
          "type": "Delete", 
          "seed": "Node pn=memberExpr(true);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 88, 
          "faulty": "canRemove=true;", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 101, 
          "faulty": "declaration.remove();", 
          "type": "InsertBefore", 
          "seed": "return;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java", 
          "line": 535, 
          "faulty": "NodeUtil.removeChild(exprNode.getParent(),exprNode);", 
          "type": "InsertBefore", 
          "seed": "int index=-1;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:51:37.259744610 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_284/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:58:55.673035117 -0500\n@@ -96,11 +96,6 @@\n               canRemove = true;\n             }\n           }\n-\n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 06:51:37.279734609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_284/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 06:58:55.677035128 -0500\n@@ -218,7 +218,7 @@\n         case QUOTED_PROP:        return \"quoted\";\n         case OPT_ARG_NAME:       return \"opt_arg\";\n \n-        case SYNTHETIC_BLOCK_PROP: return \"synthetic\";\n+        case SYNTHETIC_BLOCK_PROP: ;\n         case EMPTY_BLOCK:        return \"empty_block\";\n         case ORIGINALNAME_PROP:  return \"originalname\";\n         case SIDE_EFFECT_FLAGS:  return \"side_effect_flags\";\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 221, 
          "faulty": "return \"synthetic\";", 
          "type": "Delete", 
          "seed": "consumeToken();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 101, 
          "faulty": "declaration.remove();", 
          "type": "Delete", 
          "seed": "formatPreamble();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:51:37.259744610 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1647/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 07:10:51.134618296 -0500\n@@ -83,24 +83,6 @@\n       if (!nameInfo.isReferenced()) {\n         for (Symbol declaration : nameInfo.getDeclarations()) {\n           boolean canRemove = false;\n-\n-          if (specializationState == null) {\n-            canRemove = true;\n-          } else {\n-            Node specializableFunction =\n-              getSpecializableFunctionFromSymbol(declaration);\n-\n-            if (specializableFunction != null) {\n-              specializationState.reportRemovedFunction(\n-                  specializableFunction, null);\n-              canRemove = true;\n-            }\n-          }\n-\n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 06:51:37.279734609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1647/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 07:10:51.138618376 -0500\n@@ -1411,7 +1411,8 @@\n    */\n   NodeMismatch checkTreeEqualsImpl(Node node2) {\n     if (!isEquivalentTo(node2, false, false)) {\n-      return new NodeMismatch(this, node2);\n+      boolean nullKey = false;\n+\treturn new NodeMismatch(this, node2);\n     }\n \n     NodeMismatch res = null;\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 06:51:37.283732609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1647/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 07:10:51.138618376 -0500\n@@ -315,7 +315,7 @@\n           case NUMBER:          return \"NUMBER\";\n           case STRING:          return \"STRING\";\n           case NULL:            return \"NULL\";\n-          case THIS:            return \"THIS\";\n+          case THIS:            ;\n           case FALSE:           return \"FALSE\";\n           case TRUE:            return \"TRUE\";\n           case SHEQ:            return \"SHEQ\";\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 318, 
          "faulty": "return \"THIS\";", 
          "type": "Delete", 
          "seed": "return Token.STRING;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1414, 
          "faulty": "return new NodeMismatch(this,node2);", 
          "type": "InsertBefore", 
          "seed": "boolean nullKey=false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 87, 
          "faulty": "if (specializationState == null) {\n  canRemove=true;\n}\n else {\n  Node specializableFunction=getSpecializableFunctionFromSymbol(declaration);\n  if (specializableFunction != null) {\n    specializationState.reportRemovedFunction(specializableFunction,null);\n    canRemove=true;\n  }\n}", 
          "type": "Delete", 
          "seed": "break;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:51:37.259744610 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1904/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 07:13:04.524815361 -0500\n@@ -85,7 +85,6 @@\n           boolean canRemove = false;\n \n           if (specializationState == null) {\n-            canRemove = true;\n           } else {\n             Node specializableFunction =\n               getSpecializableFunctionFromSymbol(declaration);\n@@ -96,11 +95,6 @@\n               canRemove = true;\n             }\n           }\n-\n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java\t2018-12-02 06:51:39.210768564 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1904/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java\t2018-12-02 07:13:04.528815416 -0500\n@@ -532,7 +532,8 @@\n \n     @Override\n     public void remove() {\n-      NodeUtil.removeChild(exprNode.getParent(), exprNode);\n+      StringBuilder builder = new StringBuilder();\n+\tNodeUtil.removeChild(exprNode.getParent(), exprNode);\n     }\n \n     @Override\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 06:51:37.279734609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1904/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 07:13:04.528815416 -0500\n@@ -1424,7 +1424,6 @@\n       }\n       res = n.checkTreeEqualsImpl(n2);\n       if (res != null) {\n-        return res;\n       }\n     }\n     return res;\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 88, 
          "faulty": "canRemove=true;", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1427, 
          "faulty": "return res;", 
          "type": "Delete", 
          "seed": "return Token.STRING;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 88, 
          "faulty": "canRemove=true;", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java", 
          "line": 535, 
          "faulty": "NodeUtil.removeChild(exprNode.getParent(),exprNode);", 
          "type": "InsertBefore", 
          "seed": "StringBuilder builder=new StringBuilder();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:51:37.259744610 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_802/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 07:03:36.313798542 -0500\n@@ -96,11 +96,6 @@\n               canRemove = true;\n             }\n           }\n-\n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 06:51:37.279734609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_802/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 07:03:36.317798511 -0500\n@@ -937,14 +937,7 @@\n         sb.append(getString());\n       } else if (type == Token.FUNCTION) {\n         sb.append(' ');\n-        // In the case of JsDoc trees, the first child is often not a string\n-        // which causes exceptions to be thrown when calling toString or\n-        // toStringTree.\n-        if (first == null || first.getType() != Token.NAME) {\n-          sb.append(\"<invalid>\");\n-        } else {\n-          sb.append(first.getString());\n-        }\n+        int lineno = getLineno();\n       } else if (this instanceof ScriptOrFnNode) {\n         ScriptOrFnNode sof = (ScriptOrFnNode) this;\n         if (this instanceof FunctionNode) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 943, 
          "faulty": "if (first == null || first.getType() != Token.NAME) {\n  sb.append(\"<invalid>\");\n}\n else {\n  sb.append(first.getString());\n}", 
          "type": "Replace", 
          "seed": "int lineno=getLineno();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:51:37.259744610 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_875/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 07:04:11.537552713 -0500\n@@ -85,7 +85,6 @@\n           boolean canRemove = false;\n \n           if (specializationState == null) {\n-            canRemove = true;\n           } else {\n             Node specializableFunction =\n               getSpecializableFunctionFromSymbol(declaration);\n@@ -96,11 +95,6 @@\n               canRemove = true;\n             }\n           }\n-\n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 06:51:37.279734609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_875/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 07:04:11.537552713 -0500\n@@ -937,14 +937,7 @@\n         sb.append(getString());\n       } else if (type == Token.FUNCTION) {\n         sb.append(' ');\n-        // In the case of JsDoc trees, the first child is often not a string\n-        // which causes exceptions to be thrown when calling toString or\n-        // toStringTree.\n-        if (first == null || first.getType() != Token.NAME) {\n-          sb.append(\"<invalid>\");\n-        } else {\n-          sb.append(first.getString());\n-        }\n+        int lineno = getLineno();\n       } else if (this instanceof ScriptOrFnNode) {\n         ScriptOrFnNode sof = (ScriptOrFnNode) this;\n         if (this instanceof FunctionNode) {\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 06:51:37.283732609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_875/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 07:04:11.541552687 -0500\n@@ -359,7 +359,7 @@\n           case LP:              return \"LP\";\n           case RP:              return \"RP\";\n           case COMMA:           return \"COMMA\";\n-          case ASSIGN:          return \"ASSIGN\";\n+          case ASSIGN:          ;\n           case ASSIGN_BITOR:    return \"ASSIGN_BITOR\";\n           case ASSIGN_BITXOR:   return \"ASSIGN_BITXOR\";\n           case ASSIGN_BITAND:   return \"ASSIGN_BITAND\";\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 102, 
          "faulty": "changed=true;", 
          "type": "InsertBefore", 
          "seed": "StringBuilder builder=new StringBuilder();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 362, 
          "faulty": "return \"ASSIGN\";", 
          "type": "Delete", 
          "seed": "Node pn=memberExpr(true);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 88, 
          "faulty": "canRemove=true;", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 88, 
          "faulty": "canRemove=true;", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 943, 
          "faulty": "if (first == null || first.getType() != Token.NAME) {\n  sb.append(\"<invalid>\");\n}\n else {\n  sb.append(first.getString());\n}", 
          "type": "Replace", 
          "seed": "int lineno=getLineno();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:51:37.259744610 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_463/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 07:00:36.371945485 -0500\n@@ -85,7 +85,6 @@\n           boolean canRemove = false;\n \n           if (specializationState == null) {\n-            canRemove = true;\n           } else {\n             Node specializableFunction =\n               getSpecializableFunctionFromSymbol(declaration);\n@@ -96,11 +95,6 @@\n               canRemove = true;\n             }\n           }\n-\n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 06:51:37.279734609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_463/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 07:00:36.375945415 -0500\n@@ -218,7 +218,7 @@\n         case QUOTED_PROP:        return \"quoted\";\n         case OPT_ARG_NAME:       return \"opt_arg\";\n \n-        case SYNTHETIC_BLOCK_PROP: return \"synthetic\";\n+        case SYNTHETIC_BLOCK_PROP: ;\n         case EMPTY_BLOCK:        return \"empty_block\";\n         case ORIGINALNAME_PROP:  return \"originalname\";\n         case SIDE_EFFECT_FLAGS:  return \"side_effect_flags\";\n@@ -1424,7 +1424,8 @@\n       }\n       res = n.checkTreeEqualsImpl(n2);\n       if (res != null) {\n-        return res;\n+        sourcePosition = -1;\n+\t\treturn res;\n       }\n     }\n     return res;\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 06:51:37.283732609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_463/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 07:00:36.375945415 -0500\n@@ -315,7 +315,7 @@\n           case NUMBER:          return \"NUMBER\";\n           case STRING:          return \"STRING\";\n           case NULL:            return \"NULL\";\n-          case THIS:            return \"THIS\";\n+          case THIS:            ;\n           case FALSE:           return \"FALSE\";\n           case TRUE:            return \"TRUE\";\n           case SHEQ:            return \"SHEQ\";\n@@ -359,7 +359,7 @@\n           case LP:              return \"LP\";\n           case RP:              return \"RP\";\n           case COMMA:           return \"COMMA\";\n-          case ASSIGN:          return \"ASSIGN\";\n+          case ASSIGN:          ;\n           case ASSIGN_BITOR:    return \"ASSIGN_BITOR\";\n           case ASSIGN_BITXOR:   return \"ASSIGN_BITXOR\";\n           case ASSIGN_BITAND:   return \"ASSIGN_BITAND\";\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 221, 
          "faulty": "return \"synthetic\";", 
          "type": "Delete", 
          "seed": "consumeToken();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 318, 
          "faulty": "return \"THIS\";", 
          "type": "Delete", 
          "seed": "return Token.STRING;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 362, 
          "faulty": "return \"ASSIGN\";", 
          "type": "Delete", 
          "seed": "Node pn=memberExpr(true);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 88, 
          "faulty": "canRemove=true;", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1427, 
          "faulty": "return res;", 
          "type": "InsertBefore", 
          "seed": "sourcePosition=-1;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:51:37.259744610 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1726/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 07:11:32.679388974 -0500\n@@ -85,7 +85,6 @@\n           boolean canRemove = false;\n \n           if (specializationState == null) {\n-            canRemove = true;\n           } else {\n             Node specializableFunction =\n               getSpecializableFunctionFromSymbol(declaration);\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 06:51:37.279734609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1726/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 07:11:32.683389043 -0500\n@@ -218,7 +218,7 @@\n         case QUOTED_PROP:        return \"quoted\";\n         case OPT_ARG_NAME:       return \"opt_arg\";\n \n-        case SYNTHETIC_BLOCK_PROP: return \"synthetic\";\n+        case SYNTHETIC_BLOCK_PROP: ;\n         case EMPTY_BLOCK:        return \"empty_block\";\n         case ORIGINALNAME_PROP:  return \"originalname\";\n         case SIDE_EFFECT_FLAGS:  return \"side_effect_flags\";\n@@ -937,14 +937,7 @@\n         sb.append(getString());\n       } else if (type == Token.FUNCTION) {\n         sb.append(' ');\n-        // In the case of JsDoc trees, the first child is often not a string\n-        // which causes exceptions to be thrown when calling toString or\n-        // toStringTree.\n-        if (first == null || first.getType() != Token.NAME) {\n-          sb.append(\"<invalid>\");\n-        } else {\n-          sb.append(first.getString());\n-        }\n+        int lineno = getLineno();\n       } else if (this instanceof ScriptOrFnNode) {\n         ScriptOrFnNode sof = (ScriptOrFnNode) this;\n         if (this instanceof FunctionNode) {\n@@ -1424,7 +1417,7 @@\n       }\n       res = n.checkTreeEqualsImpl(n2);\n       if (res != null) {\n-        return res;\n+        Kit.codeBug();\n       }\n     }\n     return res;\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 88, 
          "faulty": "canRemove=true;", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 943, 
          "faulty": "if (first == null || first.getType() != Token.NAME) {\n  sb.append(\"<invalid>\");\n}\n else {\n  sb.append(first.getString());\n}", 
          "type": "Replace", 
          "seed": "int lineno=getLineno();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 221, 
          "faulty": "return \"synthetic\";", 
          "type": "Delete", 
          "seed": "consumeToken();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1427, 
          "faulty": "return res;", 
          "type": "Delete", 
          "seed": "boolean first=true;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 88, 
          "faulty": "canRemove=true;", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1427, 
          "faulty": "return res;", 
          "type": "Replace", 
          "seed": "Kit.codeBug();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:51:37.259744610 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1174/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 07:06:47.196885937 -0500\n@@ -96,11 +96,6 @@\n               canRemove = true;\n             }\n           }\n-\n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 06:51:37.279734609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1174/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 07:06:47.200885926 -0500\n@@ -218,7 +218,7 @@\n         case QUOTED_PROP:        return \"quoted\";\n         case OPT_ARG_NAME:       return \"opt_arg\";\n \n-        case SYNTHETIC_BLOCK_PROP: return \"synthetic\";\n+        case SYNTHETIC_BLOCK_PROP: ;\n         case EMPTY_BLOCK:        return \"empty_block\";\n         case ORIGINALNAME_PROP:  return \"originalname\";\n         case SIDE_EFFECT_FLAGS:  return \"side_effect_flags\";\n@@ -937,14 +937,7 @@\n         sb.append(getString());\n       } else if (type == Token.FUNCTION) {\n         sb.append(' ');\n-        // In the case of JsDoc trees, the first child is often not a string\n-        // which causes exceptions to be thrown when calling toString or\n-        // toStringTree.\n-        if (first == null || first.getType() != Token.NAME) {\n-          sb.append(\"<invalid>\");\n-        } else {\n-          sb.append(first.getString());\n-        }\n+        int lineno = getLineno();\n       } else if (this instanceof ScriptOrFnNode) {\n         ScriptOrFnNode sof = (ScriptOrFnNode) this;\n         if (this instanceof FunctionNode) {\n@@ -1424,7 +1417,6 @@\n       }\n       res = n.checkTreeEqualsImpl(n2);\n       if (res != null) {\n-        return res;\n       }\n     }\n     return res;\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 06:51:37.283732609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1174/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 07:06:47.200885926 -0500\n@@ -315,7 +315,7 @@\n           case NUMBER:          return \"NUMBER\";\n           case STRING:          return \"STRING\";\n           case NULL:            return \"NULL\";\n-          case THIS:            return \"THIS\";\n+          case THIS:            ;\n           case FALSE:           return \"FALSE\";\n           case TRUE:            return \"TRUE\";\n           case SHEQ:            return \"SHEQ\";\n@@ -359,7 +359,7 @@\n           case LP:              return \"LP\";\n           case RP:              return \"RP\";\n           case COMMA:           return \"COMMA\";\n-          case ASSIGN:          return \"ASSIGN\";\n+          case ASSIGN:          Context cx = Context.getCurrentContext();\n           case ASSIGN_BITOR:    return \"ASSIGN_BITOR\";\n           case ASSIGN_BITXOR:   return \"ASSIGN_BITXOR\";\n           case ASSIGN_BITAND:   return \"ASSIGN_BITAND\";\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 221, 
          "faulty": "return \"synthetic\";", 
          "type": "Delete", 
          "seed": "consumeToken();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1427, 
          "faulty": "return res;", 
          "type": "Delete", 
          "seed": "boolean first=true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 318, 
          "faulty": "return \"THIS\";", 
          "type": "Delete", 
          "seed": "return Token.XMLATTR;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 221, 
          "faulty": "return \"synthetic\";", 
          "type": "Delete", 
          "seed": "return Token.XMLATTR;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 221, 
          "faulty": "return \"synthetic\";", 
          "type": "Delete", 
          "seed": "consumeToken();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1427, 
          "faulty": "return res;", 
          "type": "Delete", 
          "seed": "boolean first=true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 318, 
          "faulty": "return \"THIS\";", 
          "type": "Delete", 
          "seed": "return Token.XMLATTR;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 221, 
          "faulty": "return \"synthetic\";", 
          "type": "Delete", 
          "seed": "return Token.XMLATTR;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 943, 
          "faulty": "if (first == null || first.getType() != Token.NAME) {\n  sb.append(\"<invalid>\");\n}\n else {\n  sb.append(first.getString());\n}", 
          "type": "Replace", 
          "seed": "int lineno=getLineno();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 362, 
          "faulty": "return \"ASSIGN\";", 
          "type": "Replace", 
          "seed": "Context cx=Context.getCurrentContext();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:51:37.259744610 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1159/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 07:06:40.120904597 -0500\n@@ -85,7 +85,6 @@\n           boolean canRemove = false;\n \n           if (specializationState == null) {\n-            canRemove = true;\n           } else {\n             Node specializableFunction =\n               getSpecializableFunctionFromSymbol(declaration);\n@@ -96,11 +95,6 @@\n               canRemove = true;\n             }\n           }\n-\n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 06:51:37.279734609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1159/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 07:06:40.120904597 -0500\n@@ -937,14 +937,7 @@\n         sb.append(getString());\n       } else if (type == Token.FUNCTION) {\n         sb.append(' ');\n-        // In the case of JsDoc trees, the first child is often not a string\n-        // which causes exceptions to be thrown when calling toString or\n-        // toStringTree.\n-        if (first == null || first.getType() != Token.NAME) {\n-          sb.append(\"<invalid>\");\n-        } else {\n-          sb.append(first.getString());\n-        }\n+        int lineno = getLineno();\n       } else if (this instanceof ScriptOrFnNode) {\n         ScriptOrFnNode sof = (ScriptOrFnNode) this;\n         if (this instanceof FunctionNode) {\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 06:51:37.283732609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1159/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 07:06:40.120904597 -0500\n@@ -307,7 +307,7 @@\n           case TYPEOF:          return \"TYPEOF\";\n           case GETPROP:         return \"GETPROP\";\n           case SETPROP:         return \"SETPROP\";\n-          case GETELEM:         return \"GETELEM\";\n+          case GETELEM:         ;\n           case SETELEM:         return \"SETELEM\";\n           case CALL:            return \"CALL\";\n           case NAME:            return \"NAME\";\n@@ -315,7 +315,7 @@\n           case NUMBER:          return \"NUMBER\";\n           case STRING:          return \"STRING\";\n           case NULL:            return \"NULL\";\n-          case THIS:            return \"THIS\";\n+          case THIS:            ;\n           case FALSE:           return \"FALSE\";\n           case TRUE:            return \"TRUE\";\n           case SHEQ:            return \"SHEQ\";\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 318, 
          "faulty": "return \"THIS\";", 
          "type": "Delete", 
          "seed": "return Token.STRING;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 88, 
          "faulty": "canRemove=true;", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 943, 
          "faulty": "if (first == null || first.getType() != Token.NAME) {\n  sb.append(\"<invalid>\");\n}\n else {\n  sb.append(first.getString());\n}", 
          "type": "Replace", 
          "seed": "int lineno=getLineno();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 310, 
          "faulty": "return \"GETELEM\";", 
          "type": "Delete", 
          "seed": "return false;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:51:37.259744610 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_832/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 07:03:50.117697005 -0500\n@@ -96,11 +96,6 @@\n               canRemove = true;\n             }\n           }\n-\n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java\t2018-12-02 06:51:39.210768564 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_832/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java\t2018-12-02 07:03:50.117697005 -0500\n@@ -532,7 +532,8 @@\n \n     @Override\n     public void remove() {\n-      NodeUtil.removeChild(exprNode.getParent(), exprNode);\n+      int index = -1;\n+\tNodeUtil.removeChild(exprNode.getParent(), exprNode);\n     }\n \n     @Override\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 06:51:37.283732609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_832/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 07:03:50.121696978 -0500\n@@ -307,7 +307,7 @@\n           case TYPEOF:          return \"TYPEOF\";\n           case GETPROP:         return \"GETPROP\";\n           case SETPROP:         return \"SETPROP\";\n-          case GETELEM:         return \"GETELEM\";\n+          case GETELEM:         ;\n           case SETELEM:         return \"SETELEM\";\n           case CALL:            return \"CALL\";\n           case NAME:            return \"NAME\";\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java", 
          "line": 535, 
          "faulty": "NodeUtil.removeChild(exprNode.getParent(),exprNode);", 
          "type": "InsertBefore", 
          "seed": "int index=-1;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 310, 
          "faulty": "return \"GETELEM\";", 
          "type": "Delete", 
          "seed": "if (matchChar('.')) {\n  return Token.DOTDOT;\n}\n else if (matchChar('(')) {\n  return Token.DOTQUERY;\n}\n else {\n  return Token.DOT;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:51:37.259744610 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1653/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 07:10:53.850671497 -0500\n@@ -85,7 +85,6 @@\n           boolean canRemove = false;\n \n           if (specializationState == null) {\n-            canRemove = true;\n           } else {\n             Node specializableFunction =\n               getSpecializableFunctionFromSymbol(declaration);\n@@ -96,14 +95,9 @@\n               canRemove = true;\n             }\n           }\n-\n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n         }\n \n-        logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n+        return;\n       }\n     }\n \n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 06:51:37.279734609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1653/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 07:10:53.854671576 -0500\n@@ -1424,7 +1424,6 @@\n       }\n       res = n.checkTreeEqualsImpl(n2);\n       if (res != null) {\n-        return res;\n       }\n     }\n     return res;\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 06:51:37.283732609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1653/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 07:10:53.854671576 -0500\n@@ -307,7 +307,7 @@\n           case TYPEOF:          return \"TYPEOF\";\n           case GETPROP:         return \"GETPROP\";\n           case SETPROP:         return \"SETPROP\";\n-          case GETELEM:         return \"GETELEM\";\n+          case GETELEM:         return \"return\";\n           case SETELEM:         return \"SETELEM\";\n           case CALL:            return \"CALL\";\n           case NAME:            return \"NAME\";\n@@ -315,7 +315,7 @@\n           case NUMBER:          return \"NUMBER\";\n           case STRING:          return \"STRING\";\n           case NULL:            return \"NULL\";\n-          case THIS:            return \"THIS\";\n+          case THIS:            ;\n           case FALSE:           return \"FALSE\";\n           case TRUE:            return \"TRUE\";\n           case SHEQ:            return \"SHEQ\";\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 318, 
          "faulty": "return \"THIS\";", 
          "type": "Delete", 
          "seed": "return Token.STRING;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 88, 
          "faulty": "canRemove=true;", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 310, 
          "faulty": "return \"GETELEM\";", 
          "type": "Replace", 
          "seed": "return \"return\";"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1427, 
          "faulty": "return res;", 
          "type": "Delete", 
          "seed": "return Token.STRING;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 106, 
          "faulty": "logger.fine(\"Removed unused prototype property: \" + nameInfo.name);", 
          "type": "Replace", 
          "seed": "return;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:51:37.259744610 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1424/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 07:08:54.839883699 -0500\n@@ -85,7 +85,6 @@\n           boolean canRemove = false;\n \n           if (specializationState == null) {\n-            canRemove = true;\n           } else {\n             Node specializableFunction =\n               getSpecializableFunctionFromSymbol(declaration);\n@@ -96,11 +95,6 @@\n               canRemove = true;\n             }\n           }\n-\n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java\t2018-12-02 06:51:39.210768564 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1424/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java\t2018-12-02 07:08:54.839883699 -0500\n@@ -532,7 +532,8 @@\n \n     @Override\n     public void remove() {\n-      NodeUtil.removeChild(exprNode.getParent(), exprNode);\n+      int index = -1;\n+\tNodeUtil.removeChild(exprNode.getParent(), exprNode);\n     }\n \n     @Override\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 06:51:37.279734609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1424/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 07:08:54.843883811 -0500\n@@ -218,7 +218,7 @@\n         case QUOTED_PROP:        return \"quoted\";\n         case OPT_ARG_NAME:       return \"opt_arg\";\n \n-        case SYNTHETIC_BLOCK_PROP: return \"synthetic\";\n+        case SYNTHETIC_BLOCK_PROP: ;\n         case EMPTY_BLOCK:        return \"empty_block\";\n         case ORIGINALNAME_PROP:  return \"originalname\";\n         case SIDE_EFFECT_FLAGS:  return \"side_effect_flags\";\n@@ -937,14 +937,7 @@\n         sb.append(getString());\n       } else if (type == Token.FUNCTION) {\n         sb.append(' ');\n-        // In the case of JsDoc trees, the first child is often not a string\n-        // which causes exceptions to be thrown when calling toString or\n-        // toStringTree.\n-        if (first == null || first.getType() != Token.NAME) {\n-          sb.append(\"<invalid>\");\n-        } else {\n-          sb.append(first.getString());\n-        }\n+        int lineno = getLineno();\n       } else if (this instanceof ScriptOrFnNode) {\n         ScriptOrFnNode sof = (ScriptOrFnNode) this;\n         if (this instanceof FunctionNode) {\n@@ -1424,7 +1417,6 @@\n       }\n       res = n.checkTreeEqualsImpl(n2);\n       if (res != null) {\n-        return res;\n       }\n     }\n     return res;\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 06:51:37.283732609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1424/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 07:08:54.843883811 -0500\n@@ -315,7 +315,7 @@\n           case NUMBER:          return \"NUMBER\";\n           case STRING:          return \"STRING\";\n           case NULL:            return \"NULL\";\n-          case THIS:            return \"THIS\";\n+          case THIS:            ;\n           case FALSE:           return \"FALSE\";\n           case TRUE:            return \"TRUE\";\n           case SHEQ:            return \"SHEQ\";\n@@ -359,7 +359,7 @@\n           case LP:              return \"LP\";\n           case RP:              return \"RP\";\n           case COMMA:           return \"COMMA\";\n-          case ASSIGN:          return \"ASSIGN\";\n+          case ASSIGN:          ;\n           case ASSIGN_BITOR:    return \"ASSIGN_BITOR\";\n           case ASSIGN_BITXOR:   return \"ASSIGN_BITXOR\";\n           case ASSIGN_BITAND:   return \"ASSIGN_BITAND\";\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 88, 
          "faulty": "canRemove=true;", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 943, 
          "faulty": "if (first == null || first.getType() != Token.NAME) {\n  sb.append(\"<invalid>\");\n}\n else {\n  sb.append(first.getString());\n}", 
          "type": "Replace", 
          "seed": "int lineno=getLineno();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 221, 
          "faulty": "return \"synthetic\";", 
          "type": "Delete", 
          "seed": "return Token.XMLATTR;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 943, 
          "faulty": "if (first == null || first.getType() != Token.NAME) {\n  sb.append(\"<invalid>\");\n}\n else {\n  sb.append(first.getString());\n}", 
          "type": "Replace", 
          "seed": "int lineno=getLineno();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 362, 
          "faulty": "return \"ASSIGN\";", 
          "type": "Replace", 
          "seed": "Context cx=Context.getCurrentContext();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 102, 
          "faulty": "changed=true;", 
          "type": "InsertBefore", 
          "seed": "StringBuilder builder=new StringBuilder();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java", 
          "line": 535, 
          "faulty": "NodeUtil.removeChild(exprNode.getParent(),exprNode);", 
          "type": "InsertBefore", 
          "seed": "int index=-1;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 943, 
          "faulty": "if (first == null || first.getType() != Token.NAME) {\n  sb.append(\"<invalid>\");\n}\n else {\n  sb.append(first.getString());\n}", 
          "type": "Replace", 
          "seed": "int lineno=getLineno();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 362, 
          "faulty": "return \"ASSIGN\";", 
          "type": "Replace", 
          "seed": "Context cx=Context.getCurrentContext();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 88, 
          "faulty": "canRemove=true;", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 943, 
          "faulty": "if (first == null || first.getType() != Token.NAME) {\n  sb.append(\"<invalid>\");\n}\n else {\n  sb.append(first.getString());\n}", 
          "type": "Replace", 
          "seed": "int lineno=getLineno();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1427, 
          "faulty": "return res;", 
          "type": "Delete", 
          "seed": "boolean first=true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 318, 
          "faulty": "return \"THIS\";", 
          "type": "Delete", 
          "seed": "return Token.XMLATTR;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 221, 
          "faulty": "return \"synthetic\";", 
          "type": "Delete", 
          "seed": "return Token.XMLATTR;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 221, 
          "faulty": "return \"synthetic\";", 
          "type": "Delete", 
          "seed": "consumeToken();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1427, 
          "faulty": "return res;", 
          "type": "Delete", 
          "seed": "boolean first=true;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 102, 
          "faulty": "changed=true;", 
          "type": "InsertBefore", 
          "seed": "StringBuilder builder=new StringBuilder();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 88, 
          "faulty": "canRemove=true;", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 943, 
          "faulty": "if (first == null || first.getType() != Token.NAME) {\n  sb.append(\"<invalid>\");\n}\n else {\n  sb.append(first.getString());\n}", 
          "type": "Replace", 
          "seed": "int lineno=getLineno();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1427, 
          "faulty": "return res;", 
          "type": "Delete", 
          "seed": "boolean first=true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 318, 
          "faulty": "return \"THIS\";", 
          "type": "Delete", 
          "seed": "return Token.XMLATTR;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 221, 
          "faulty": "return \"synthetic\";", 
          "type": "Delete", 
          "seed": "return Token.XMLATTR;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 362, 
          "faulty": "return \"ASSIGN\";", 
          "type": "Delete", 
          "seed": "return Token.LP;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:51:37.259744610 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_642/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 07:02:12.142587544 -0500\n@@ -85,7 +85,6 @@\n           boolean canRemove = false;\n \n           if (specializationState == null) {\n-            canRemove = true;\n           } else {\n             Node specializableFunction =\n               getSpecializableFunctionFromSymbol(declaration);\n@@ -96,11 +95,6 @@\n               canRemove = true;\n             }\n           }\n-\n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java\t2018-12-02 06:51:39.210768564 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_642/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java\t2018-12-02 07:02:12.142587544 -0500\n@@ -532,7 +532,8 @@\n \n     @Override\n     public void remove() {\n-      NodeUtil.removeChild(exprNode.getParent(), exprNode);\n+      int index = -1;\n+\tNodeUtil.removeChild(exprNode.getParent(), exprNode);\n     }\n \n     @Override\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 88, 
          "faulty": "canRemove=true;", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 101, 
          "faulty": "declaration.remove();", 
          "type": "InsertBefore", 
          "seed": "return;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java", 
          "line": 535, 
          "faulty": "NodeUtil.removeChild(exprNode.getParent(),exprNode);", 
          "type": "InsertBefore", 
          "seed": "int index=-1;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:51:37.259744610 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1689/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 07:11:13.735048687 -0500\n@@ -96,11 +96,6 @@\n               canRemove = true;\n             }\n           }\n-\n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 06:51:37.279734609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1689/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 07:11:13.735048687 -0500\n@@ -1424,7 +1424,7 @@\n       }\n       res = n.checkTreeEqualsImpl(n2);\n       if (res != null) {\n-        return res;\n+        Kit.codeBug();\n       }\n     }\n     return res;\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 06:51:37.283732609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1689/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 07:11:13.735048687 -0500\n@@ -315,7 +315,7 @@\n           case NUMBER:          return \"NUMBER\";\n           case STRING:          return \"STRING\";\n           case NULL:            return \"NULL\";\n-          case THIS:            return \"THIS\";\n+          case THIS:            ;\n           case FALSE:           return \"FALSE\";\n           case TRUE:            return \"TRUE\";\n           case SHEQ:            return \"SHEQ\";\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 318, 
          "faulty": "return \"THIS\";", 
          "type": "Delete", 
          "seed": "return Token.STRING;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1427, 
          "faulty": "return res;", 
          "type": "Replace", 
          "seed": "Kit.codeBug();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:51:37.259744610 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1530/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 07:09:51.409334619 -0500\n@@ -85,7 +85,6 @@\n           boolean canRemove = false;\n \n           if (specializationState == null) {\n-            canRemove = true;\n           } else {\n             Node specializableFunction =\n               getSpecializableFunctionFromSymbol(declaration);\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 06:51:37.283732609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1530/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 07:09:51.409334619 -0500\n@@ -307,7 +307,7 @@\n           case TYPEOF:          return \"TYPEOF\";\n           case GETPROP:         return \"GETPROP\";\n           case SETPROP:         return \"SETPROP\";\n-          case GETELEM:         return \"GETELEM\";\n+          case GETELEM:         ;\n           case SETELEM:         return \"SETELEM\";\n           case CALL:            return \"CALL\";\n           case NAME:            return \"NAME\";\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 88, 
          "faulty": "canRemove=true;", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 310, 
          "faulty": "return \"GETELEM\";", 
          "type": "Replace", 
          "seed": "return \"return\";"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 310, 
          "faulty": "return \"GETELEM\";", 
          "type": "Delete", 
          "seed": "Node pn=addExpr();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:51:37.259744610 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_627/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 07:02:05.606662806 -0500\n@@ -85,7 +85,7 @@\n           boolean canRemove = false;\n \n           if (specializationState == null) {\n-            canRemove = true;\n+            return;\n           } else {\n             Node specializableFunction =\n               getSpecializableFunctionFromSymbol(declaration);\n@@ -96,11 +96,6 @@\n               canRemove = true;\n             }\n           }\n-\n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 06:51:37.279734609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_627/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 07:02:05.606662806 -0500\n@@ -218,7 +218,7 @@\n         case QUOTED_PROP:        return \"quoted\";\n         case OPT_ARG_NAME:       return \"opt_arg\";\n \n-        case SYNTHETIC_BLOCK_PROP: return \"synthetic\";\n+        case SYNTHETIC_BLOCK_PROP: ;\n         case EMPTY_BLOCK:        return \"empty_block\";\n         case ORIGINALNAME_PROP:  return \"originalname\";\n         case SIDE_EFFECT_FLAGS:  return \"side_effect_flags\";\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 06:51:37.283732609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_627/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 07:02:05.610662759 -0500\n@@ -307,7 +307,7 @@\n           case TYPEOF:          return \"TYPEOF\";\n           case GETPROP:         return \"GETPROP\";\n           case SETPROP:         return \"SETPROP\";\n-          case GETELEM:         return \"GETELEM\";\n+          case GETELEM:         ;\n           case SETELEM:         return \"SETELEM\";\n           case CALL:            return \"CALL\";\n           case NAME:            return \"NAME\";\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 102, 
          "faulty": "changed=true;", 
          "type": "InsertBefore", 
          "seed": "StringBuilder builder=new StringBuilder();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 221, 
          "faulty": "return \"synthetic\";", 
          "type": "Delete", 
          "seed": "consumeToken();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 310, 
          "faulty": "return \"GETELEM\";", 
          "type": "Delete", 
          "seed": "String namespace=null;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 88, 
          "faulty": "canRemove=true;", 
          "type": "Replace", 
          "seed": "return;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:51:37.259744610 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_537/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 07:01:18.043283048 -0500\n@@ -85,7 +85,6 @@\n           boolean canRemove = false;\n \n           if (specializationState == null) {\n-            canRemove = true;\n           } else {\n             Node specializableFunction =\n               getSpecializableFunctionFromSymbol(declaration);\n@@ -96,11 +95,6 @@\n               canRemove = true;\n             }\n           }\n-\n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 06:51:37.279734609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_537/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 07:01:18.043283048 -0500\n@@ -218,7 +218,7 @@\n         case QUOTED_PROP:        return \"quoted\";\n         case OPT_ARG_NAME:       return \"opt_arg\";\n \n-        case SYNTHETIC_BLOCK_PROP: return \"synthetic\";\n+        case SYNTHETIC_BLOCK_PROP: ;\n         case EMPTY_BLOCK:        return \"empty_block\";\n         case ORIGINALNAME_PROP:  return \"originalname\";\n         case SIDE_EFFECT_FLAGS:  return \"side_effect_flags\";\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 06:51:37.283732609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_537/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 07:01:18.047282991 -0500\n@@ -315,7 +315,7 @@\n           case NUMBER:          return \"NUMBER\";\n           case STRING:          return \"STRING\";\n           case NULL:            return \"NULL\";\n-          case THIS:            return \"THIS\";\n+          case THIS:            ;\n           case FALSE:           return \"FALSE\";\n           case TRUE:            return \"TRUE\";\n           case SHEQ:            return \"SHEQ\";\n@@ -359,7 +359,7 @@\n           case LP:              return \"LP\";\n           case RP:              return \"RP\";\n           case COMMA:           return \"COMMA\";\n-          case ASSIGN:          return \"ASSIGN\";\n+          case ASSIGN:          ;\n           case ASSIGN_BITOR:    return \"ASSIGN_BITOR\";\n           case ASSIGN_BITXOR:   return \"ASSIGN_BITXOR\";\n           case ASSIGN_BITAND:   return \"ASSIGN_BITAND\";\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 221, 
          "faulty": "return \"synthetic\";", 
          "type": "Delete", 
          "seed": "consumeToken();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 318, 
          "faulty": "return \"THIS\";", 
          "type": "Delete", 
          "seed": "return Token.STRING;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 362, 
          "faulty": "return \"ASSIGN\";", 
          "type": "Delete", 
          "seed": "return Token.LP;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 88, 
          "faulty": "canRemove=true;", 
          "type": "Delete", 
          "seed": "return false;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:51:37.259744610 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_93/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:57:09.731961094 -0500\n@@ -81,28 +81,6 @@\n     boolean changed = false;\n     for (NameInfo nameInfo : allNameInfo) {\n       if (!nameInfo.isReferenced()) {\n-        for (Symbol declaration : nameInfo.getDeclarations()) {\n-          boolean canRemove = false;\n-\n-          if (specializationState == null) {\n-            canRemove = true;\n-          } else {\n-            Node specializableFunction =\n-              getSpecializableFunctionFromSymbol(declaration);\n-\n-            if (specializableFunction != null) {\n-              specializationState.reportRemovedFunction(\n-                  specializableFunction, null);\n-              canRemove = true;\n-            }\n-          }\n-\n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n-        }\n-\n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n       }\n     }\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 06:51:37.283732609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_93/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 06:57:09.731961094 -0500\n@@ -359,7 +359,7 @@\n           case LP:              return \"LP\";\n           case RP:              return \"RP\";\n           case COMMA:           return \"COMMA\";\n-          case ASSIGN:          return \"ASSIGN\";\n+          case ASSIGN:          ;\n           case ASSIGN_BITOR:    return \"ASSIGN_BITOR\";\n           case ASSIGN_BITXOR:   return \"ASSIGN_BITXOR\";\n           case ASSIGN_BITAND:   return \"ASSIGN_BITAND\";\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 362, 
          "faulty": "return \"ASSIGN\";", 
          "type": "Delete", 
          "seed": "Node pn=memberExpr(true);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 84, 
          "faulty": "for (Symbol declaration : nameInfo.getDeclarations()) {\n  boolean canRemove=false;\n  if (specializationState == null) {\n    canRemove=true;\n  }\n else {\n    Node specializableFunction=getSpecializableFunctionFromSymbol(declaration);\n    if (specializableFunction != null) {\n      specializationState.reportRemovedFunction(specializableFunction,null);\n      canRemove=true;\n    }\n  }\n  if (canRemove) {\n    declaration.remove();\n    changed=true;\n  }\n}", 
          "type": "Delete", 
          "seed": "formatConclusion();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:51:37.259744610 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1298/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 07:07:52.477949524 -0500\n@@ -85,7 +85,6 @@\n           boolean canRemove = false;\n \n           if (specializationState == null) {\n-            canRemove = true;\n           } else {\n             Node specializableFunction =\n               getSpecializableFunctionFromSymbol(declaration);\n@@ -96,11 +95,6 @@\n               canRemove = true;\n             }\n           }\n-\n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 06:51:37.279734609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1298/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 07:07:52.481949661 -0500\n@@ -218,7 +218,7 @@\n         case QUOTED_PROP:        return \"quoted\";\n         case OPT_ARG_NAME:       return \"opt_arg\";\n \n-        case SYNTHETIC_BLOCK_PROP: return \"synthetic\";\n+        case SYNTHETIC_BLOCK_PROP: ;\n         case EMPTY_BLOCK:        return \"empty_block\";\n         case ORIGINALNAME_PROP:  return \"originalname\";\n         case SIDE_EFFECT_FLAGS:  return \"side_effect_flags\";\n@@ -937,14 +937,7 @@\n         sb.append(getString());\n       } else if (type == Token.FUNCTION) {\n         sb.append(' ');\n-        // In the case of JsDoc trees, the first child is often not a string\n-        // which causes exceptions to be thrown when calling toString or\n-        // toStringTree.\n-        if (first == null || first.getType() != Token.NAME) {\n-          sb.append(\"<invalid>\");\n-        } else {\n-          sb.append(first.getString());\n-        }\n+        int lineno = getLineno();\n       } else if (this instanceof ScriptOrFnNode) {\n         ScriptOrFnNode sof = (ScriptOrFnNode) this;\n         if (this instanceof FunctionNode) {\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 06:51:37.283732609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1298/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 07:07:52.481949661 -0500\n@@ -315,7 +315,7 @@\n           case NUMBER:          return \"NUMBER\";\n           case STRING:          return \"STRING\";\n           case NULL:            return \"NULL\";\n-          case THIS:            return \"THIS\";\n+          case THIS:            ;\n           case FALSE:           return \"FALSE\";\n           case TRUE:            return \"TRUE\";\n           case SHEQ:            return \"SHEQ\";\n@@ -359,7 +359,7 @@\n           case LP:              return \"LP\";\n           case RP:              return \"RP\";\n           case COMMA:           return \"COMMA\";\n-          case ASSIGN:          return \"ASSIGN\";\n+          case ASSIGN:          Context cx = Context.getCurrentContext();\n           case ASSIGN_BITOR:    return \"ASSIGN_BITOR\";\n           case ASSIGN_BITXOR:   return \"ASSIGN_BITXOR\";\n           case ASSIGN_BITAND:   return \"ASSIGN_BITAND\";\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 88, 
          "faulty": "canRemove=true;", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 318, 
          "faulty": "return \"THIS\";", 
          "type": "Delete", 
          "seed": "return Token.XMLATTR;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 221, 
          "faulty": "return \"synthetic\";", 
          "type": "Delete", 
          "seed": "return Token.XMLATTR;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 221, 
          "faulty": "return \"synthetic\";", 
          "type": "Delete", 
          "seed": "consumeToken();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 943, 
          "faulty": "if (first == null || first.getType() != Token.NAME) {\n  sb.append(\"<invalid>\");\n}\n else {\n  sb.append(first.getString());\n}", 
          "type": "Replace", 
          "seed": "int lineno=getLineno();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 318, 
          "faulty": "return \"THIS\";", 
          "type": "Delete", 
          "seed": "return Token.STRING;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 362, 
          "faulty": "return \"ASSIGN\";", 
          "type": "Delete", 
          "seed": "return Token.LP;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 88, 
          "faulty": "canRemove=true;", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 221, 
          "faulty": "return \"synthetic\";", 
          "type": "Delete", 
          "seed": "consumeToken();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 362, 
          "faulty": "return \"ASSIGN\";", 
          "type": "Replace", 
          "seed": "Context cx=Context.getCurrentContext();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:51:37.259744610 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_842/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 07:03:55.381660090 -0500\n@@ -85,7 +85,6 @@\n           boolean canRemove = false;\n \n           if (specializationState == null) {\n-            canRemove = true;\n           } else {\n             Node specializableFunction =\n               getSpecializableFunctionFromSymbol(declaration);\n@@ -96,11 +95,6 @@\n               canRemove = true;\n             }\n           }\n-\n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 06:51:37.279734609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_842/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 07:03:55.381660090 -0500\n@@ -218,7 +218,7 @@\n         case QUOTED_PROP:        return \"quoted\";\n         case OPT_ARG_NAME:       return \"opt_arg\";\n \n-        case SYNTHETIC_BLOCK_PROP: return \"synthetic\";\n+        case SYNTHETIC_BLOCK_PROP: ;\n         case EMPTY_BLOCK:        return \"empty_block\";\n         case ORIGINALNAME_PROP:  return \"originalname\";\n         case SIDE_EFFECT_FLAGS:  return \"side_effect_flags\";\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 06:51:37.283732609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_842/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 07:03:55.381660090 -0500\n@@ -307,7 +307,7 @@\n           case TYPEOF:          return \"TYPEOF\";\n           case GETPROP:         return \"GETPROP\";\n           case SETPROP:         return \"SETPROP\";\n-          case GETELEM:         return \"GETELEM\";\n+          case GETELEM:         ;\n           case SETELEM:         return \"SETELEM\";\n           case CALL:            return \"CALL\";\n           case NAME:            return \"NAME\";\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 102, 
          "faulty": "changed=true;", 
          "type": "InsertBefore", 
          "seed": "StringBuilder builder=new StringBuilder();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 221, 
          "faulty": "return \"synthetic\";", 
          "type": "Delete", 
          "seed": "consumeToken();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 310, 
          "faulty": "return \"GETELEM\";", 
          "type": "Delete", 
          "seed": "String namespace=null;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 88, 
          "faulty": "canRemove=true;", 
          "type": "Replace", 
          "seed": "return;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 88, 
          "faulty": "canRemove=true;", 
          "type": "Delete", 
          "seed": "int index=-1;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:51:37.259744610 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1821/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 07:12:21.328186672 -0500\n@@ -85,7 +85,6 @@\n           boolean canRemove = false;\n \n           if (specializationState == null) {\n-            canRemove = true;\n           } else {\n             Node specializableFunction =\n               getSpecializableFunctionFromSymbol(declaration);\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 06:51:37.279734609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1821/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 07:12:21.328186672 -0500\n@@ -1424,7 +1424,6 @@\n       }\n       res = n.checkTreeEqualsImpl(n2);\n       if (res != null) {\n-        return res;\n       }\n     }\n     return res;\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 06:51:37.283732609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1821/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 07:12:21.328186672 -0500\n@@ -315,7 +315,7 @@\n           case NUMBER:          return \"NUMBER\";\n           case STRING:          return \"STRING\";\n           case NULL:            return \"NULL\";\n-          case THIS:            return \"THIS\";\n+          case THIS:            ;\n           case FALSE:           return \"FALSE\";\n           case TRUE:            return \"TRUE\";\n           case SHEQ:            return \"SHEQ\";\n@@ -359,7 +359,7 @@\n           case LP:              return \"LP\";\n           case RP:              return \"RP\";\n           case COMMA:           return \"COMMA\";\n-          case ASSIGN:          return \"ASSIGN\";\n+          case ASSIGN:          ;\n           case ASSIGN_BITOR:    return \"ASSIGN_BITOR\";\n           case ASSIGN_BITXOR:   return \"ASSIGN_BITXOR\";\n           case ASSIGN_BITAND:   return \"ASSIGN_BITAND\";\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 88, 
          "faulty": "canRemove=true;", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1427, 
          "faulty": "return res;", 
          "type": "Delete", 
          "seed": "return Token.STRING;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 318, 
          "faulty": "return \"THIS\";", 
          "type": "Delete", 
          "seed": "if (matchChar('/')) {\n  return Token.EOC;\n}\n else {\n  return Token.STAR;\n}"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 362, 
          "faulty": "return \"ASSIGN\";", 
          "type": "Delete", 
          "seed": "StringBuilder sb=new StringBuilder();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:51:37.259744610 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1137/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 07:06:29.536934222 -0500\n@@ -96,11 +96,6 @@\n               canRemove = true;\n             }\n           }\n-\n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 06:51:37.279734609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1137/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 07:06:29.540934212 -0500\n@@ -1424,7 +1424,6 @@\n       }\n       res = n.checkTreeEqualsImpl(n2);\n       if (res != null) {\n-        return res;\n       }\n     }\n     return res;\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 06:51:37.283732609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1137/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 07:06:29.540934212 -0500\n@@ -315,7 +315,7 @@\n           case NUMBER:          return \"NUMBER\";\n           case STRING:          return \"STRING\";\n           case NULL:            return \"NULL\";\n-          case THIS:            return \"THIS\";\n+          case THIS:            ;\n           case FALSE:           return \"FALSE\";\n           case TRUE:            return \"TRUE\";\n           case SHEQ:            return \"SHEQ\";\n@@ -359,7 +359,7 @@\n           case LP:              return \"LP\";\n           case RP:              return \"RP\";\n           case COMMA:           return \"COMMA\";\n-          case ASSIGN:          return \"ASSIGN\";\n+          case ASSIGN:          ;\n           case ASSIGN_BITOR:    return \"ASSIGN_BITOR\";\n           case ASSIGN_BITXOR:   return \"ASSIGN_BITXOR\";\n           case ASSIGN_BITAND:   return \"ASSIGN_BITAND\";\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 318, 
          "faulty": "return \"THIS\";", 
          "type": "Delete", 
          "seed": "return Token.STRING;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 362, 
          "faulty": "return \"ASSIGN\";", 
          "type": "Delete", 
          "seed": "return Token.LP;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 102, 
          "faulty": "changed=true;", 
          "type": "InsertBefore", 
          "seed": "StringBuilder builder=new StringBuilder();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1427, 
          "faulty": "return res;", 
          "type": "Delete", 
          "seed": "return Token.STRING;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:51:37.259744610 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_866/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 07:04:07.129581138 -0500\n@@ -85,7 +85,6 @@\n           boolean canRemove = false;\n \n           if (specializationState == null) {\n-            canRemove = true;\n           } else {\n             Node specializableFunction =\n               getSpecializableFunctionFromSymbol(declaration);\n@@ -96,11 +95,6 @@\n               canRemove = true;\n             }\n           }\n-\n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 06:51:37.279734609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_866/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 07:04:07.133581113 -0500\n@@ -943,7 +943,40 @@\n         if (first == null || first.getType() != Token.NAME) {\n           sb.append(\"<invalid>\");\n         } else {\n-          sb.append(first.getString());\n+          if (this instanceof StringNode) {\n+\t\t\t\tsb.append(' ');\n+\t\t\t\tsb.append(getString());\n+\t\t\t} else if (type == Token.FUNCTION) {\n+\t\t\t\tsb.append(' ');\n+\t\t\t\tif (first == null || first.getType() != Token.NAME) {\n+\t\t\t\t\tsb.append(\"<invalid>\");\n+\t\t\t\t} else {\n+\t\t\t\t\tsb.append(first.getString());\n+\t\t\t\t}\n+\t\t\t} else if (this instanceof ScriptOrFnNode) {\n+\t\t\t\tScriptOrFnNode sof = (ScriptOrFnNode) this;\n+\t\t\t\tif (this instanceof FunctionNode) {\n+\t\t\t\t\tFunctionNode fn = (FunctionNode) this;\n+\t\t\t\t\tsb.append(' ');\n+\t\t\t\t\tsb.append(fn.getFunctionName());\n+\t\t\t\t}\n+\t\t\t\tif (printSource) {\n+\t\t\t\t\tsb.append(\" [source name: \");\n+\t\t\t\t\tsb.append(sof.getSourceName());\n+\t\t\t\t\tsb.append(\"] [encoded source length: \");\n+\t\t\t\t\tsb.append(sof.getEncodedSourceEnd()\n+\t\t\t\t\t\t\t- sof.getEncodedSourceStart());\n+\t\t\t\t\tsb.append(\"] [base line: \");\n+\t\t\t\t\tsb.append(sof.getBaseLineno());\n+\t\t\t\t\tsb.append(\"] [end line: \");\n+\t\t\t\t\tsb.append(sof.getEndLineno());\n+\t\t\t\t\tsb.append(']');\n+\t\t\t\t}\n+\t\t\t} else if (type == Token.NUMBER) {\n+\t\t\t\tsb.append(' ');\n+\t\t\t\tsb.append(getDouble());\n+\t\t\t}\n+\t\tsb.append(first.getString());\n         }\n       } else if (this instanceof ScriptOrFnNode) {\n         ScriptOrFnNode sof = (ScriptOrFnNode) this;\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 06:51:37.283732609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_866/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 07:04:07.133581113 -0500\n@@ -356,7 +356,10 @@\n           case RB:              return \"RB\";\n           case LC:              return \"LC\";\n           case RC:              return \"RC\";\n-          case LP:              return \"LP\";\n+          case LP:              {\n+\t\t\t\tKit.codeBug();\n+\t\t\t\treturn \"LP\";\n+\t\t\t}\n           case RP:              return \"RP\";\n           case COMMA:           return \"COMMA\";\n           case ASSIGN:          return \"ASSIGN\";\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 88, 
          "faulty": "canRemove=true;", 
          "type": "Replace", 
          "seed": "return;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 88, 
          "faulty": "canRemove=true;", 
          "type": "Delete", 
          "seed": "int index=-1;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 359, 
          "faulty": "return \"LP\";", 
          "type": "InsertBefore", 
          "seed": "Kit.codeBug();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 946, 
          "faulty": "sb.append(first.getString());", 
          "type": "InsertBefore", 
          "seed": "if (this instanceof StringNode) {\n  sb.append(' ');\n  sb.append(getString());\n}\n else if (type == Token.FUNCTION) {\n  sb.append(' ');\n  if (first == null || first.getType() != Token.NAME) {\n    sb.append(\"<invalid>\");\n  }\n else {\n    sb.append(first.getString());\n  }\n}\n else if (this instanceof ScriptOrFnNode) {\n  ScriptOrFnNode sof=(ScriptOrFnNode)this;\n  if (this instanceof FunctionNode) {\n    FunctionNode fn=(FunctionNode)this;\n    sb.append(' ');\n    sb.append(fn.getFunctionName());\n  }\n  if (printSource) {\n    sb.append(\" [source name: \");\n    sb.append(sof.getSourceName());\n    sb.append(\"] [encoded source length: \");\n    sb.append(sof.getEncodedSourceEnd() - sof.getEncodedSourceStart());\n    sb.append(\"] [base line: \");\n    sb.append(sof.getBaseLineno());\n    sb.append(\"] [end line: \");\n    sb.append(sof.getEndLineno());\n    sb.append(']');\n  }\n}\n else if (type == Token.NUMBER) {\n  sb.append(' ');\n  sb.append(getDouble());\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:51:37.259744610 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_773/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 07:03:22.753905227 -0500\n@@ -96,11 +96,6 @@\n               canRemove = true;\n             }\n           }\n-\n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 06:51:37.279734609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_773/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 07:03:22.757905195 -0500\n@@ -943,7 +943,7 @@\n         if (first == null || first.getType() != Token.NAME) {\n           sb.append(\"<invalid>\");\n         } else {\n-          sb.append(first.getString());\n+          Kit.codeBug();\n         }\n       } else if (this instanceof ScriptOrFnNode) {\n         ScriptOrFnNode sof = (ScriptOrFnNode) this;\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 06:51:37.283732609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_773/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 07:03:22.757905195 -0500\n@@ -359,7 +359,7 @@\n           case LP:              return \"LP\";\n           case RP:              return \"RP\";\n           case COMMA:           return \"COMMA\";\n-          case ASSIGN:          return \"ASSIGN\";\n+          case ASSIGN:          ;\n           case ASSIGN_BITOR:    return \"ASSIGN_BITOR\";\n           case ASSIGN_BITXOR:   return \"ASSIGN_BITXOR\";\n           case ASSIGN_BITAND:   return \"ASSIGN_BITAND\";\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 362, 
          "faulty": "return \"ASSIGN\";", 
          "type": "Delete", 
          "seed": "return Token.LP;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 946, 
          "faulty": "sb.append(first.getString());", 
          "type": "Replace", 
          "seed": "Kit.codeBug();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:51:37.259744610 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_793/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 07:03:31.717833912 -0500\n@@ -96,11 +96,6 @@\n               canRemove = true;\n             }\n           }\n-\n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 06:51:37.283732609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_793/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 07:03:31.717833912 -0500\n@@ -359,7 +359,7 @@\n           case LP:              return \"LP\";\n           case RP:              return \"RP\";\n           case COMMA:           return \"COMMA\";\n-          case ASSIGN:          return \"ASSIGN\";\n+          case ASSIGN:          ;\n           case ASSIGN_BITOR:    return \"ASSIGN_BITOR\";\n           case ASSIGN_BITXOR:   return \"ASSIGN_BITXOR\";\n           case ASSIGN_BITAND:   return \"ASSIGN_BITAND\";\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 362, 
          "faulty": "return \"ASSIGN\";", 
          "type": "Delete", 
          "seed": "return Token.LP;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 102, 
          "faulty": "changed=true;", 
          "type": "Replace", 
          "seed": "return;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:51:37.259744610 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1349/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 07:08:19.438834119 -0500\n@@ -85,7 +85,6 @@\n           boolean canRemove = false;\n \n           if (specializationState == null) {\n-            canRemove = true;\n           } else {\n             Node specializableFunction =\n               getSpecializableFunctionFromSymbol(declaration);\n@@ -96,11 +95,6 @@\n               canRemove = true;\n             }\n           }\n-\n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 06:51:37.279734609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1349/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 07:08:19.442834245 -0500\n@@ -218,7 +218,7 @@\n         case QUOTED_PROP:        return \"quoted\";\n         case OPT_ARG_NAME:       return \"opt_arg\";\n \n-        case SYNTHETIC_BLOCK_PROP: return \"synthetic\";\n+        case SYNTHETIC_BLOCK_PROP: ;\n         case EMPTY_BLOCK:        return \"empty_block\";\n         case ORIGINALNAME_PROP:  return \"originalname\";\n         case SIDE_EFFECT_FLAGS:  return \"side_effect_flags\";\n@@ -937,14 +937,7 @@\n         sb.append(getString());\n       } else if (type == Token.FUNCTION) {\n         sb.append(' ');\n-        // In the case of JsDoc trees, the first child is often not a string\n-        // which causes exceptions to be thrown when calling toString or\n-        // toStringTree.\n-        if (first == null || first.getType() != Token.NAME) {\n-          sb.append(\"<invalid>\");\n-        } else {\n-          sb.append(first.getString());\n-        }\n+        int lineno = getLineno();\n       } else if (this instanceof ScriptOrFnNode) {\n         ScriptOrFnNode sof = (ScriptOrFnNode) this;\n         if (this instanceof FunctionNode) {\n@@ -1424,7 +1417,6 @@\n       }\n       res = n.checkTreeEqualsImpl(n2);\n       if (res != null) {\n-        return res;\n       }\n     }\n     return res;\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 06:51:37.283732609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1349/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 07:08:19.442834245 -0500\n@@ -315,7 +315,7 @@\n           case NUMBER:          return \"NUMBER\";\n           case STRING:          return \"STRING\";\n           case NULL:            return \"NULL\";\n-          case THIS:            return \"THIS\";\n+          case THIS:            ;\n           case FALSE:           return \"FALSE\";\n           case TRUE:            return \"TRUE\";\n           case SHEQ:            return \"SHEQ\";\n@@ -359,7 +359,7 @@\n           case LP:              return \"LP\";\n           case RP:              return \"RP\";\n           case COMMA:           return \"COMMA\";\n-          case ASSIGN:          return \"ASSIGN\";\n+          case ASSIGN:          ;\n           case ASSIGN_BITOR:    return \"ASSIGN_BITOR\";\n           case ASSIGN_BITXOR:   return \"ASSIGN_BITXOR\";\n           case ASSIGN_BITAND:   return \"ASSIGN_BITAND\";\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 318, 
          "faulty": "return \"THIS\";", 
          "type": "Delete", 
          "seed": "return Token.STRING;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 88, 
          "faulty": "canRemove=true;", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 943, 
          "faulty": "if (first == null || first.getType() != Token.NAME) {\n  sb.append(\"<invalid>\");\n}\n else {\n  sb.append(first.getString());\n}", 
          "type": "Replace", 
          "seed": "int lineno=getLineno();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1427, 
          "faulty": "return res;", 
          "type": "Delete", 
          "seed": "boolean first=true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 318, 
          "faulty": "return \"THIS\";", 
          "type": "Delete", 
          "seed": "return Token.XMLATTR;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 221, 
          "faulty": "return \"synthetic\";", 
          "type": "Delete", 
          "seed": "return Token.XMLATTR;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 221, 
          "faulty": "return \"synthetic\";", 
          "type": "Delete", 
          "seed": "consumeToken();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1427, 
          "faulty": "return res;", 
          "type": "Delete", 
          "seed": "boolean first=true;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 102, 
          "faulty": "changed=true;", 
          "type": "InsertBefore", 
          "seed": "StringBuilder builder=new StringBuilder();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 88, 
          "faulty": "canRemove=true;", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 943, 
          "faulty": "if (first == null || first.getType() != Token.NAME) {\n  sb.append(\"<invalid>\");\n}\n else {\n  sb.append(first.getString());\n}", 
          "type": "Replace", 
          "seed": "int lineno=getLineno();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1427, 
          "faulty": "return res;", 
          "type": "Delete", 
          "seed": "boolean first=true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 318, 
          "faulty": "return \"THIS\";", 
          "type": "Delete", 
          "seed": "return Token.XMLATTR;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 221, 
          "faulty": "return \"synthetic\";", 
          "type": "Delete", 
          "seed": "return Token.XMLATTR;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 362, 
          "faulty": "return \"ASSIGN\";", 
          "type": "Delete", 
          "seed": "return Token.LP;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:51:37.259744610 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1890/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 07:12:56.556704431 -0500\n@@ -85,7 +85,6 @@\n           boolean canRemove = false;\n \n           if (specializationState == null) {\n-            canRemove = true;\n           } else {\n             Node specializableFunction =\n               getSpecializableFunctionFromSymbol(declaration);\n@@ -96,11 +95,6 @@\n               canRemove = true;\n             }\n           }\n-\n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 06:51:37.279734609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1890/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 07:12:56.560704487 -0500\n@@ -937,14 +937,7 @@\n         sb.append(getString());\n       } else if (type == Token.FUNCTION) {\n         sb.append(' ');\n-        // In the case of JsDoc trees, the first child is often not a string\n-        // which causes exceptions to be thrown when calling toString or\n-        // toStringTree.\n-        if (first == null || first.getType() != Token.NAME) {\n-          sb.append(\"<invalid>\");\n-        } else {\n-          sb.append(first.getString());\n-        }\n+        int lineno = getLineno();\n       } else if (this instanceof ScriptOrFnNode) {\n         ScriptOrFnNode sof = (ScriptOrFnNode) this;\n         if (this instanceof FunctionNode) {\n@@ -1424,7 +1417,6 @@\n       }\n       res = n.checkTreeEqualsImpl(n2);\n       if (res != null) {\n-        return res;\n       }\n     }\n     return res;\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 06:51:37.283732609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1890/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 07:12:56.560704487 -0500\n@@ -315,7 +315,7 @@\n           case NUMBER:          return \"NUMBER\";\n           case STRING:          return \"STRING\";\n           case NULL:            return \"NULL\";\n-          case THIS:            return \"THIS\";\n+          case THIS:            ;\n           case FALSE:           return \"FALSE\";\n           case TRUE:            return \"TRUE\";\n           case SHEQ:            return \"SHEQ\";\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 318, 
          "faulty": "return \"THIS\";", 
          "type": "Delete", 
          "seed": "return Token.STRING;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 88, 
          "faulty": "canRemove=true;", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 943, 
          "faulty": "if (first == null || first.getType() != Token.NAME) {\n  sb.append(\"<invalid>\");\n}\n else {\n  sb.append(first.getString());\n}", 
          "type": "Replace", 
          "seed": "int lineno=getLineno();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1427, 
          "faulty": "return res;", 
          "type": "Delete", 
          "seed": "return Token.STRING;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 318, 
          "faulty": "return \"THIS\";", 
          "type": "Delete", 
          "seed": "if (matchChar('/')) {\n  return Token.EOC;\n}\n else {\n  return Token.STAR;\n}"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 946, 
          "faulty": "sb.append(first.getString());", 
          "type": "Delete", 
          "seed": "if (printType) {\n  if (jsType != null) {\n    String jsTypeString=jsType.toString();\n    if (jsTypeString != null) {\n      sb.append(\" : \");\n      sb.append(jsTypeString);\n    }\n  }\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:51:37.259744610 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1093/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 07:06:09.352996696 -0500\n@@ -96,11 +96,6 @@\n               canRemove = true;\n             }\n           }\n-\n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n@@ -108,7 +103,8 @@\n     }\n \n     if (changed) {\n-      compiler.reportCodeChange();\n+      int index = -1;\n+\tcompiler.reportCodeChange();\n     }\n   }\n \n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 06:51:37.279734609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1093/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 07:06:09.356996684 -0500\n@@ -218,7 +218,7 @@\n         case QUOTED_PROP:        return \"quoted\";\n         case OPT_ARG_NAME:       return \"opt_arg\";\n \n-        case SYNTHETIC_BLOCK_PROP: return \"synthetic\";\n+        case SYNTHETIC_BLOCK_PROP: ;\n         case EMPTY_BLOCK:        return \"empty_block\";\n         case ORIGINALNAME_PROP:  return \"originalname\";\n         case SIDE_EFFECT_FLAGS:  return \"side_effect_flags\";\n@@ -1424,7 +1424,6 @@\n       }\n       res = n.checkTreeEqualsImpl(n2);\n       if (res != null) {\n-        return res;\n       }\n     }\n     return res;\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 06:51:37.283732609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1093/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 07:06:09.356996684 -0500\n@@ -315,7 +315,10 @@\n           case NUMBER:          return \"NUMBER\";\n           case STRING:          return \"STRING\";\n           case NULL:            return \"NULL\";\n-          case THIS:            return \"THIS\";\n+          case THIS:            {\n+\t\t\t\tint c;\n+\t\t\t\treturn \"THIS\";\n+\t\t\t}\n           case FALSE:           return \"FALSE\";\n           case TRUE:            return \"TRUE\";\n           case SHEQ:            return \"SHEQ\";\n@@ -359,7 +362,7 @@\n           case LP:              return \"LP\";\n           case RP:              return \"RP\";\n           case COMMA:           return \"COMMA\";\n-          case ASSIGN:          return \"ASSIGN\";\n+          case ASSIGN:          ;\n           case ASSIGN_BITOR:    return \"ASSIGN_BITOR\";\n           case ASSIGN_BITXOR:   return \"ASSIGN_BITXOR\";\n           case ASSIGN_BITAND:   return \"ASSIGN_BITAND\";\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 318, 
          "faulty": "return \"THIS\";", 
          "type": "Delete", 
          "seed": "return Token.STRING;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 362, 
          "faulty": "return \"ASSIGN\";", 
          "type": "Delete", 
          "seed": "return Token.LP;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 221, 
          "faulty": "return \"synthetic\";", 
          "type": "Delete", 
          "seed": "consumeToken();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1427, 
          "faulty": "return res;", 
          "type": "Delete", 
          "seed": "boolean first=true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 318, 
          "faulty": "return \"THIS\";", 
          "type": "Delete", 
          "seed": "return Token.XMLATTR;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 221, 
          "faulty": "return \"synthetic\";", 
          "type": "Delete", 
          "seed": "return Token.XMLATTR;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 318, 
          "faulty": "return \"THIS\";", 
          "type": "Delete", 
          "seed": "return Token.STRING;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 362, 
          "faulty": "return \"ASSIGN\";", 
          "type": "Delete", 
          "seed": "return Token.LP;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1427, 
          "faulty": "return res;", 
          "type": "Delete", 
          "seed": "return Token.STRING;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 111, 
          "faulty": "compiler.reportCodeChange();", 
          "type": "InsertBefore", 
          "seed": "int index=-1;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 318, 
          "faulty": "return \"THIS\";", 
          "type": "InsertBefore", 
          "seed": "int c;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:51:37.259744610 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1818/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 07:12:20.036166789 -0500\n@@ -85,7 +85,6 @@\n           boolean canRemove = false;\n \n           if (specializationState == null) {\n-            canRemove = true;\n           } else {\n             Node specializableFunction =\n               getSpecializableFunctionFromSymbol(declaration);\n@@ -96,11 +95,6 @@\n               canRemove = true;\n             }\n           }\n-\n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 06:51:37.279734609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1818/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 07:12:20.040166851 -0500\n@@ -218,7 +218,7 @@\n         case QUOTED_PROP:        return \"quoted\";\n         case OPT_ARG_NAME:       return \"opt_arg\";\n \n-        case SYNTHETIC_BLOCK_PROP: return \"synthetic\";\n+        case SYNTHETIC_BLOCK_PROP: ;\n         case EMPTY_BLOCK:        return \"empty_block\";\n         case ORIGINALNAME_PROP:  return \"originalname\";\n         case SIDE_EFFECT_FLAGS:  return \"side_effect_flags\";\n@@ -937,14 +937,7 @@\n         sb.append(getString());\n       } else if (type == Token.FUNCTION) {\n         sb.append(' ');\n-        // In the case of JsDoc trees, the first child is often not a string\n-        // which causes exceptions to be thrown when calling toString or\n-        // toStringTree.\n-        if (first == null || first.getType() != Token.NAME) {\n-          sb.append(\"<invalid>\");\n-        } else {\n-          sb.append(first.getString());\n-        }\n+        int lineno = getLineno();\n       } else if (this instanceof ScriptOrFnNode) {\n         ScriptOrFnNode sof = (ScriptOrFnNode) this;\n         if (this instanceof FunctionNode) {\n@@ -1424,7 +1417,7 @@\n       }\n       res = n.checkTreeEqualsImpl(n2);\n       if (res != null) {\n-        return res;\n+        Kit.codeBug();\n       }\n     }\n     return res;\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 06:51:37.283732609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1818/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 07:12:20.040166851 -0500\n@@ -315,7 +315,7 @@\n           case NUMBER:          return \"NUMBER\";\n           case STRING:          return \"STRING\";\n           case NULL:            return \"NULL\";\n-          case THIS:            return \"THIS\";\n+          case THIS:            ;\n           case FALSE:           return \"FALSE\";\n           case TRUE:            return \"TRUE\";\n           case SHEQ:            return \"SHEQ\";\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 318, 
          "faulty": "return \"THIS\";", 
          "type": "Delete", 
          "seed": "return Token.STRING;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 88, 
          "faulty": "canRemove=true;", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 943, 
          "faulty": "if (first == null || first.getType() != Token.NAME) {\n  sb.append(\"<invalid>\");\n}\n else {\n  sb.append(first.getString());\n}", 
          "type": "Replace", 
          "seed": "int lineno=getLineno();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 221, 
          "faulty": "return \"synthetic\";", 
          "type": "Delete", 
          "seed": "consumeToken();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1427, 
          "faulty": "return res;", 
          "type": "Delete", 
          "seed": "boolean first=true;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 88, 
          "faulty": "canRemove=true;", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1427, 
          "faulty": "return res;", 
          "type": "Replace", 
          "seed": "Kit.codeBug();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:51:37.259744610 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1747/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 07:11:42.451557677 -0500\n@@ -96,11 +96,6 @@\n               canRemove = true;\n             }\n           }\n-\n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 06:51:37.279734609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1747/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 07:11:42.455557745 -0500\n@@ -1424,7 +1424,7 @@\n       }\n       res = n.checkTreeEqualsImpl(n2);\n       if (res != null) {\n-        return res;\n+        Kit.codeBug();\n       }\n     }\n     return res;\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 06:51:37.283732609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1747/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 07:11:42.455557745 -0500\n@@ -315,7 +315,7 @@\n           case NUMBER:          return \"NUMBER\";\n           case STRING:          return \"STRING\";\n           case NULL:            return \"NULL\";\n-          case THIS:            return \"THIS\";\n+          case THIS:            ;\n           case FALSE:           return \"FALSE\";\n           case TRUE:            return \"TRUE\";\n           case SHEQ:            return \"SHEQ\";\n@@ -359,7 +359,7 @@\n           case LP:              return \"LP\";\n           case RP:              return \"RP\";\n           case COMMA:           return \"COMMA\";\n-          case ASSIGN:          return \"ASSIGN\";\n+          case ASSIGN:          ;\n           case ASSIGN_BITOR:    return \"ASSIGN_BITOR\";\n           case ASSIGN_BITXOR:   return \"ASSIGN_BITXOR\";\n           case ASSIGN_BITAND:   return \"ASSIGN_BITAND\";\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 318, 
          "faulty": "return \"THIS\";", 
          "type": "Delete", 
          "seed": "return Token.STRING;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1427, 
          "faulty": "return res;", 
          "type": "Replace", 
          "seed": "Kit.codeBug();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 362, 
          "faulty": "return \"ASSIGN\";", 
          "type": "Delete", 
          "seed": "return \"ENTERWITH\";"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:51:37.259744610 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1163/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 07:06:42.056899400 -0500\n@@ -85,7 +85,6 @@\n           boolean canRemove = false;\n \n           if (specializationState == null) {\n-            canRemove = true;\n           } else {\n             Node specializableFunction =\n               getSpecializableFunctionFromSymbol(declaration);\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 06:51:37.279734609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1163/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 07:06:42.060899389 -0500\n@@ -1424,7 +1424,6 @@\n       }\n       res = n.checkTreeEqualsImpl(n2);\n       if (res != null) {\n-        return res;\n       }\n     }\n     return res;\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 88, 
          "faulty": "canRemove=true;", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1427, 
          "faulty": "return res;", 
          "type": "Delete", 
          "seed": "return Token.STRING;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:51:37.259744610 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_601/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 07:01:53.050813828 -0500\n@@ -85,7 +85,6 @@\n           boolean canRemove = false;\n \n           if (specializationState == null) {\n-            canRemove = true;\n           } else {\n             Node specializableFunction =\n               getSpecializableFunctionFromSymbol(declaration);\n@@ -96,11 +95,6 @@\n               canRemove = true;\n             }\n           }\n-\n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 06:51:37.279734609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_601/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 07:01:53.050813828 -0500\n@@ -1424,7 +1424,6 @@\n       }\n       res = n.checkTreeEqualsImpl(n2);\n       if (res != null) {\n-        return res;\n       }\n     }\n     return res;\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 06:51:37.283732609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_601/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 07:01:53.054813778 -0500\n@@ -356,7 +356,7 @@\n           case RB:              return \"RB\";\n           case LC:              return \"LC\";\n           case RC:              return \"RC\";\n-          case LP:              return \"LP\";\n+          case LP:              ;\n           case RP:              return \"RP\";\n           case COMMA:           return \"COMMA\";\n           case ASSIGN:          return \"ASSIGN\";\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 102, 
          "faulty": "changed=true;", 
          "type": "InsertBefore", 
          "seed": "StringBuilder builder=new StringBuilder();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 88, 
          "faulty": "canRemove=true;", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1427, 
          "faulty": "return res;", 
          "type": "Delete", 
          "seed": "return Token.SEMI;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 359, 
          "faulty": "return \"LP\";", 
          "type": "Delete", 
          "seed": "case ENTERWITH:"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:51:37.259744610 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1375/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 07:08:30.607178288 -0500\n@@ -85,7 +85,6 @@\n           boolean canRemove = false;\n \n           if (specializationState == null) {\n-            canRemove = true;\n           } else {\n             Node specializableFunction =\n               getSpecializableFunctionFromSymbol(declaration);\n@@ -96,11 +95,6 @@\n               canRemove = true;\n             }\n           }\n-\n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java\t2018-12-02 06:51:39.210768564 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1375/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java\t2018-12-02 07:08:30.607178288 -0500\n@@ -532,7 +532,8 @@\n \n     @Override\n     public void remove() {\n-      NodeUtil.removeChild(exprNode.getParent(), exprNode);\n+      int index = -1;\n+\tNodeUtil.removeChild(exprNode.getParent(), exprNode);\n     }\n \n     @Override\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 06:51:37.279734609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1375/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 07:08:30.611178409 -0500\n@@ -218,7 +218,7 @@\n         case QUOTED_PROP:        return \"quoted\";\n         case OPT_ARG_NAME:       return \"opt_arg\";\n \n-        case SYNTHETIC_BLOCK_PROP: return \"synthetic\";\n+        case SYNTHETIC_BLOCK_PROP: ;\n         case EMPTY_BLOCK:        return \"empty_block\";\n         case ORIGINALNAME_PROP:  return \"originalname\";\n         case SIDE_EFFECT_FLAGS:  return \"side_effect_flags\";\n@@ -1382,7 +1382,8 @@\n   public String checkTreeEquals(Node node2) {\n       NodeMismatch diff = checkTreeEqualsImpl(node2);\n       if (diff != null) {\n-        return \"Node tree inequality:\" +\n+        int lengthEncodingSize = 1;\n+\t\treturn \"Node tree inequality:\" +\n             \"\\nTree1:\\n\" + toStringTree() +\n             \"\\n\\nTree2:\\n\" + node2.toStringTree() +\n             \"\\n\\nSubtree1: \" + diff.nodeA.toStringTree() +\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 06:51:37.283732609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1375/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 07:08:30.611178409 -0500\n@@ -315,7 +315,7 @@\n           case NUMBER:          return \"NUMBER\";\n           case STRING:          return \"STRING\";\n           case NULL:            return \"NULL\";\n-          case THIS:            return \"THIS\";\n+          case THIS:            ;\n           case FALSE:           return \"FALSE\";\n           case TRUE:            return \"TRUE\";\n           case SHEQ:            return \"SHEQ\";\n@@ -359,7 +359,7 @@\n           case LP:              return \"LP\";\n           case RP:              return \"RP\";\n           case COMMA:           return \"COMMA\";\n-          case ASSIGN:          return \"ASSIGN\";\n+          case ASSIGN:          ;\n           case ASSIGN_BITOR:    return \"ASSIGN_BITOR\";\n           case ASSIGN_BITXOR:   return \"ASSIGN_BITXOR\";\n           case ASSIGN_BITAND:   return \"ASSIGN_BITAND\";\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 88, 
          "faulty": "canRemove=true;", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 318, 
          "faulty": "return \"THIS\";", 
          "type": "Delete", 
          "seed": "return Token.XMLATTR;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 221, 
          "faulty": "return \"synthetic\";", 
          "type": "Delete", 
          "seed": "return Token.XMLATTR;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 221, 
          "faulty": "return \"synthetic\";", 
          "type": "Delete", 
          "seed": "consumeToken();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 102, 
          "faulty": "changed=true;", 
          "type": "InsertBefore", 
          "seed": "StringBuilder builder=new StringBuilder();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java", 
          "line": 535, 
          "faulty": "NodeUtil.removeChild(exprNode.getParent(),exprNode);", 
          "type": "InsertBefore", 
          "seed": "int index=-1;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 362, 
          "faulty": "return \"ASSIGN\";", 
          "type": "Delete", 
          "seed": "case 2:"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1385, 
          "faulty": "return \"Node tree inequality:\" + \"\\nTree1:\\n\" + toStringTree() + \"\\n\\nTree2:\\n\"+ node2.toStringTree()+ \"\\n\\nSubtree1: \"+ diff.nodeA.toStringTree()+ \"\\n\\nSubtree2: \"+ diff.nodeB.toStringTree();", 
          "type": "InsertBefore", 
          "seed": "int lengthEncodingSize=1;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:51:37.259744610 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_208/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:58:11.176859777 -0500\n@@ -81,28 +81,6 @@\n     boolean changed = false;\n     for (NameInfo nameInfo : allNameInfo) {\n       if (!nameInfo.isReferenced()) {\n-        for (Symbol declaration : nameInfo.getDeclarations()) {\n-          boolean canRemove = false;\n-\n-          if (specializationState == null) {\n-            canRemove = true;\n-          } else {\n-            Node specializableFunction =\n-              getSpecializableFunctionFromSymbol(declaration);\n-\n-            if (specializableFunction != null) {\n-              specializationState.reportRemovedFunction(\n-                  specializableFunction, null);\n-              canRemove = true;\n-            }\n-          }\n-\n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n-        }\n-\n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n       }\n     }\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 06:51:37.279734609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_208/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 06:58:11.176859777 -0500\n@@ -937,14 +937,6 @@\n         sb.append(getString());\n       } else if (type == Token.FUNCTION) {\n         sb.append(' ');\n-        // In the case of JsDoc trees, the first child is often not a string\n-        // which causes exceptions to be thrown when calling toString or\n-        // toStringTree.\n-        if (first == null || first.getType() != Token.NAME) {\n-          sb.append(\"<invalid>\");\n-        } else {\n-          sb.append(first.getString());\n-        }\n       } else if (this instanceof ScriptOrFnNode) {\n         ScriptOrFnNode sof = (ScriptOrFnNode) this;\n         if (this instanceof FunctionNode) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 84, 
          "faulty": "for (Symbol declaration : nameInfo.getDeclarations()) {\n  boolean canRemove=false;\n  if (specializationState == null) {\n    canRemove=true;\n  }\n else {\n    Node specializableFunction=getSpecializableFunctionFromSymbol(declaration);\n    if (specializableFunction != null) {\n      specializationState.reportRemovedFunction(specializableFunction,null);\n      canRemove=true;\n    }\n  }\n  if (canRemove) {\n    declaration.remove();\n    changed=true;\n  }\n}", 
          "type": "Delete", 
          "seed": "formatConclusion();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 943, 
          "faulty": "if (first == null || first.getType() != Token.NAME) {\n  sb.append(\"<invalid>\");\n}\n else {\n  sb.append(first.getString());\n}", 
          "type": "Delete", 
          "seed": "addToken(Token.NAME);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:51:37.259744610 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_526/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 07:01:12.247368065 -0500\n@@ -85,7 +85,6 @@\n           boolean canRemove = false;\n \n           if (specializationState == null) {\n-            canRemove = true;\n           } else {\n             Node specializableFunction =\n               getSpecializableFunctionFromSymbol(declaration);\n@@ -96,11 +95,6 @@\n               canRemove = true;\n             }\n           }\n-\n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 06:51:37.279734609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_526/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 07:01:12.251368006 -0500\n@@ -1424,7 +1424,6 @@\n       }\n       res = n.checkTreeEqualsImpl(n2);\n       if (res != null) {\n-        return res;\n       }\n     }\n     return res;\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 88, 
          "faulty": "canRemove=true;", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1427, 
          "faulty": "return res;", 
          "type": "Delete", 
          "seed": "return Token.SEMI;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:51:37.259744610 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_481/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 07:00:47.191761672 -0500\n@@ -85,7 +85,7 @@\n           boolean canRemove = false;\n \n           if (specializationState == null) {\n-            canRemove = true;\n+            int start = 0;\n           } else {\n             Node specializableFunction =\n               getSpecializableFunctionFromSymbol(declaration);\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 88, 
          "faulty": "canRemove=true;", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 88, 
          "faulty": "canRemove=true;", 
          "type": "Replace", 
          "seed": "int start=0;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:51:37.259744610 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_385/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:59:52.055171755 -0500\n@@ -84,8 +84,8 @@\n         for (Symbol declaration : nameInfo.getDeclarations()) {\n           boolean canRemove = false;\n \n-          if (specializationState == null) {\n-            canRemove = true;\n+          boolean valid = false;\n+\t\tif (specializationState == null) {\n           } else {\n             Node specializableFunction =\n               getSpecializableFunctionFromSymbol(declaration);\n@@ -96,11 +96,6 @@\n               canRemove = true;\n             }\n           }\n-\n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 88, 
          "faulty": "canRemove=true;", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 87, 
          "faulty": "if (specializationState == null) {\n  canRemove=true;\n}\n else {\n  Node specializableFunction=getSpecializableFunctionFromSymbol(declaration);\n  if (specializableFunction != null) {\n    specializationState.reportRemovedFunction(specializableFunction,null);\n    canRemove=true;\n  }\n}", 
          "type": "InsertBefore", 
          "seed": "boolean valid=false;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:51:37.259744610 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_239/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:58:29.208959296 -0500\n@@ -96,11 +96,6 @@\n               canRemove = true;\n             }\n           }\n-\n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 06:51:37.279734609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_239/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 06:58:29.212959307 -0500\n@@ -218,7 +218,7 @@\n         case QUOTED_PROP:        return \"quoted\";\n         case OPT_ARG_NAME:       return \"opt_arg\";\n \n-        case SYNTHETIC_BLOCK_PROP: return \"synthetic\";\n+        case SYNTHETIC_BLOCK_PROP: ;\n         case EMPTY_BLOCK:        return \"empty_block\";\n         case ORIGINALNAME_PROP:  return \"originalname\";\n         case SIDE_EFFECT_FLAGS:  return \"side_effect_flags\";\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 06:51:37.283732609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_239/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 06:58:29.212959307 -0500\n@@ -359,7 +359,7 @@\n           case LP:              return \"LP\";\n           case RP:              return \"RP\";\n           case COMMA:           return \"COMMA\";\n-          case ASSIGN:          return \"ASSIGN\";\n+          case ASSIGN:          ;\n           case ASSIGN_BITOR:    return \"ASSIGN_BITOR\";\n           case ASSIGN_BITXOR:   return \"ASSIGN_BITXOR\";\n           case ASSIGN_BITAND:   return \"ASSIGN_BITAND\";\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 221, 
          "faulty": "return \"synthetic\";", 
          "type": "Delete", 
          "seed": "consumeToken();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 362, 
          "faulty": "return \"ASSIGN\";", 
          "type": "Delete", 
          "seed": "return Token.EOF;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:51:37.259744610 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1281/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 07:07:44.701679387 -0500\n@@ -85,7 +85,7 @@\n           boolean canRemove = false;\n \n           if (specializationState == null) {\n-            canRemove = true;\n+            StringBuilder builder = new StringBuilder();\n           } else {\n             Node specializableFunction =\n               getSpecializableFunctionFromSymbol(declaration);\n@@ -96,11 +96,6 @@\n               canRemove = true;\n             }\n           }\n-\n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 06:51:37.279734609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1281/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 07:07:44.705679528 -0500\n@@ -937,14 +937,7 @@\n         sb.append(getString());\n       } else if (type == Token.FUNCTION) {\n         sb.append(' ');\n-        // In the case of JsDoc trees, the first child is often not a string\n-        // which causes exceptions to be thrown when calling toString or\n-        // toStringTree.\n-        if (first == null || first.getType() != Token.NAME) {\n-          sb.append(\"<invalid>\");\n-        } else {\n-          sb.append(first.getString());\n-        }\n+        int lineno = getLineno();\n       } else if (this instanceof ScriptOrFnNode) {\n         ScriptOrFnNode sof = (ScriptOrFnNode) this;\n         if (this instanceof FunctionNode) {\n@@ -1424,7 +1417,6 @@\n       }\n       res = n.checkTreeEqualsImpl(n2);\n       if (res != null) {\n-        return res;\n       }\n     }\n     return res;\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 06:51:37.283732609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1281/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 07:07:44.705679528 -0500\n@@ -315,7 +315,7 @@\n           case NUMBER:          return \"NUMBER\";\n           case STRING:          return \"STRING\";\n           case NULL:            return \"NULL\";\n-          case THIS:            return \"THIS\";\n+          case THIS:            ;\n           case FALSE:           return \"FALSE\";\n           case TRUE:            return \"TRUE\";\n           case SHEQ:            return \"SHEQ\";\n@@ -359,7 +359,7 @@\n           case LP:              return \"LP\";\n           case RP:              return \"RP\";\n           case COMMA:           return \"COMMA\";\n-          case ASSIGN:          return \"ASSIGN\";\n+          case ASSIGN:          ;\n           case ASSIGN_BITOR:    return \"ASSIGN_BITOR\";\n           case ASSIGN_BITXOR:   return \"ASSIGN_BITXOR\";\n           case ASSIGN_BITAND:   return \"ASSIGN_BITAND\";\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 318, 
          "faulty": "return \"THIS\";", 
          "type": "Delete", 
          "seed": "return Token.STRING;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 88, 
          "faulty": "canRemove=true;", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 88, 
          "faulty": "canRemove=true;", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 88, 
          "faulty": "canRemove=true;", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 943, 
          "faulty": "if (first == null || first.getType() != Token.NAME) {\n  sb.append(\"<invalid>\");\n}\n else {\n  sb.append(first.getString());\n}", 
          "type": "Replace", 
          "seed": "int lineno=getLineno();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1427, 
          "faulty": "return res;", 
          "type": "Delete", 
          "seed": "boolean first=true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 318, 
          "faulty": "return \"THIS\";", 
          "type": "Delete", 
          "seed": "return Token.XMLATTR;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 362, 
          "faulty": "return \"ASSIGN\";", 
          "type": "Delete", 
          "seed": "return Token.LP;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 88, 
          "faulty": "canRemove=true;", 
          "type": "InsertBefore", 
          "seed": "StringBuilder builder=new StringBuilder();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:51:37.259744610 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_156/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:57:44.460580456 -0500\n@@ -81,28 +81,6 @@\n     boolean changed = false;\n     for (NameInfo nameInfo : allNameInfo) {\n       if (!nameInfo.isReferenced()) {\n-        for (Symbol declaration : nameInfo.getDeclarations()) {\n-          boolean canRemove = false;\n-\n-          if (specializationState == null) {\n-            canRemove = true;\n-          } else {\n-            Node specializableFunction =\n-              getSpecializableFunctionFromSymbol(declaration);\n-\n-            if (specializableFunction != null) {\n-              specializationState.reportRemovedFunction(\n-                  specializableFunction, null);\n-              canRemove = true;\n-            }\n-          }\n-\n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n-        }\n-\n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 84, 
          "faulty": "for (Symbol declaration : nameInfo.getDeclarations()) {\n  boolean canRemove=false;\n  if (specializationState == null) {\n    canRemove=true;\n  }\n else {\n    Node specializableFunction=getSpecializableFunctionFromSymbol(declaration);\n    if (specializableFunction != null) {\n      specializationState.reportRemovedFunction(specializableFunction,null);\n      canRemove=true;\n    }\n  }\n  if (canRemove) {\n    declaration.remove();\n    changed=true;\n  }\n}", 
          "type": "Delete", 
          "seed": "formatConclusion();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:51:37.259744610 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1716/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 07:11:28.167309543 -0500\n@@ -85,7 +85,6 @@\n           boolean canRemove = false;\n \n           if (specializationState == null) {\n-            canRemove = true;\n           } else {\n             Node specializableFunction =\n               getSpecializableFunctionFromSymbol(declaration);\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 06:51:37.279734609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1716/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 07:11:28.171309613 -0500\n@@ -218,7 +218,7 @@\n         case QUOTED_PROP:        return \"quoted\";\n         case OPT_ARG_NAME:       return \"opt_arg\";\n \n-        case SYNTHETIC_BLOCK_PROP: return \"synthetic\";\n+        case SYNTHETIC_BLOCK_PROP: ;\n         case EMPTY_BLOCK:        return \"empty_block\";\n         case ORIGINALNAME_PROP:  return \"originalname\";\n         case SIDE_EFFECT_FLAGS:  return \"side_effect_flags\";\n@@ -1424,7 +1424,6 @@\n       }\n       res = n.checkTreeEqualsImpl(n2);\n       if (res != null) {\n-        return res;\n       }\n     }\n     return res;\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 06:51:37.283732609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1716/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 07:11:28.171309613 -0500\n@@ -359,7 +359,7 @@\n           case LP:              return \"LP\";\n           case RP:              return \"RP\";\n           case COMMA:           return \"COMMA\";\n-          case ASSIGN:          return \"ASSIGN\";\n+          case ASSIGN:          ;\n           case ASSIGN_BITOR:    return \"ASSIGN_BITOR\";\n           case ASSIGN_BITXOR:   return \"ASSIGN_BITXOR\";\n           case ASSIGN_BITAND:   return \"ASSIGN_BITAND\";\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 221, 
          "faulty": "return \"synthetic\";", 
          "type": "Delete", 
          "seed": "consumeToken();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1427, 
          "faulty": "return res;", 
          "type": "Delete", 
          "seed": "boolean first=true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 362, 
          "faulty": "return \"ASSIGN\";", 
          "type": "Delete", 
          "seed": "return Token.LP;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 88, 
          "faulty": "canRemove=true;", 
          "type": "Delete", 
          "seed": "return this;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:51:37.259744610 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_493/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 07:00:54.639640109 -0500\n@@ -83,24 +83,6 @@\n       if (!nameInfo.isReferenced()) {\n         for (Symbol declaration : nameInfo.getDeclarations()) {\n           boolean canRemove = false;\n-\n-          if (specializationState == null) {\n-            canRemove = true;\n-          } else {\n-            Node specializableFunction =\n-              getSpecializableFunctionFromSymbol(declaration);\n-\n-            if (specializableFunction != null) {\n-              specializationState.reportRemovedFunction(\n-                  specializableFunction, null);\n-              canRemove = true;\n-            }\n-          }\n-\n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 06:51:37.279734609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_493/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 07:00:54.639640109 -0500\n@@ -218,7 +218,7 @@\n         case QUOTED_PROP:        return \"quoted\";\n         case OPT_ARG_NAME:       return \"opt_arg\";\n \n-        case SYNTHETIC_BLOCK_PROP: return \"synthetic\";\n+        case SYNTHETIC_BLOCK_PROP: ;\n         case EMPTY_BLOCK:        return \"empty_block\";\n         case ORIGINALNAME_PROP:  return \"originalname\";\n         case SIDE_EFFECT_FLAGS:  return \"side_effect_flags\";\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 221, 
          "faulty": "return \"synthetic\";", 
          "type": "Delete", 
          "seed": "consumeToken();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 87, 
          "faulty": "if (specializationState == null) {\n  canRemove=true;\n}\n else {\n  Node specializableFunction=getSpecializableFunctionFromSymbol(declaration);\n  if (specializableFunction != null) {\n    specializationState.reportRemovedFunction(specializableFunction,null);\n    canRemove=true;\n  }\n}", 
          "type": "Delete", 
          "seed": "return 0;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:51:37.259744610 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_21/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:56:28.339305012 -0500\n@@ -81,28 +81,6 @@\n     boolean changed = false;\n     for (NameInfo nameInfo : allNameInfo) {\n       if (!nameInfo.isReferenced()) {\n-        for (Symbol declaration : nameInfo.getDeclarations()) {\n-          boolean canRemove = false;\n-\n-          if (specializationState == null) {\n-            canRemove = true;\n-          } else {\n-            Node specializableFunction =\n-              getSpecializableFunctionFromSymbol(declaration);\n-\n-            if (specializableFunction != null) {\n-              specializationState.reportRemovedFunction(\n-                  specializableFunction, null);\n-              canRemove = true;\n-            }\n-          }\n-\n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n-        }\n-\n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n       }\n     }\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 06:51:37.279734609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_21/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 06:56:28.339305012 -0500\n@@ -1382,7 +1382,8 @@\n   public String checkTreeEquals(Node node2) {\n       NodeMismatch diff = checkTreeEqualsImpl(node2);\n       if (diff != null) {\n-        return \"Node tree inequality:\" +\n+        int[] keys = getSortedPropTypes();\n+\t\treturn \"Node tree inequality:\" +\n             \"\\nTree1:\\n\" + toStringTree() +\n             \"\\n\\nTree2:\\n\" + node2.toStringTree() +\n             \"\\n\\nSubtree1: \" + diff.nodeA.toStringTree() +\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 06:51:37.283732609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_21/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 06:56:28.343305113 -0500\n@@ -307,7 +307,7 @@\n           case TYPEOF:          return \"TYPEOF\";\n           case GETPROP:         return \"GETPROP\";\n           case SETPROP:         return \"SETPROP\";\n-          case GETELEM:         return \"GETELEM\";\n+          case GETELEM:         ;\n           case SETELEM:         return \"SETELEM\";\n           case CALL:            return \"CALL\";\n           case NAME:            return \"NAME\";\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1385, 
          "faulty": "return \"Node tree inequality:\" + \"\\nTree1:\\n\" + toStringTree() + \"\\n\\nTree2:\\n\"+ node2.toStringTree()+ \"\\n\\nSubtree1: \"+ diff.nodeA.toStringTree()+ \"\\n\\nSubtree2: \"+ diff.nodeB.toStringTree();", 
          "type": "InsertBefore", 
          "seed": "int[] keys=getSortedPropTypes();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 310, 
          "faulty": "return \"GETELEM\";", 
          "type": "Delete", 
          "seed": "case ENTERWITH:"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 84, 
          "faulty": "for (Symbol declaration : nameInfo.getDeclarations()) {\n  boolean canRemove=false;\n  if (specializationState == null) {\n    canRemove=true;\n  }\n else {\n    Node specializableFunction=getSpecializableFunctionFromSymbol(declaration);\n    if (specializableFunction != null) {\n      specializationState.reportRemovedFunction(specializableFunction,null);\n      canRemove=true;\n    }\n  }\n  if (canRemove) {\n    declaration.remove();\n    changed=true;\n  }\n}", 
          "type": "Delete", 
          "seed": "StringBuilder builder=new StringBuilder();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:51:37.259744610 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_305/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:59:06.397066537 -0500\n@@ -85,7 +85,6 @@\n           boolean canRemove = false;\n \n           if (specializationState == null) {\n-            canRemove = true;\n           } else {\n             Node specializableFunction =\n               getSpecializableFunctionFromSymbol(declaration);\n@@ -96,11 +95,6 @@\n               canRemove = true;\n             }\n           }\n-\n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 102, 
          "faulty": "changed=true;", 
          "type": "InsertBefore", 
          "seed": "StringBuilder builder=new StringBuilder();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 88, 
          "faulty": "canRemove=true;", 
          "type": "Delete", 
          "seed": "return null;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:51:37.259744610 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1075/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 07:05:58.693033032 -0500\n@@ -85,7 +85,6 @@\n           boolean canRemove = false;\n \n           if (specializationState == null) {\n-            canRemove = true;\n           } else {\n             Node specializableFunction =\n               getSpecializableFunctionFromSymbol(declaration);\n@@ -96,11 +95,6 @@\n               canRemove = true;\n             }\n           }\n-\n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 06:51:37.279734609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1075/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 07:05:58.697033020 -0500\n@@ -1424,7 +1424,6 @@\n       }\n       res = n.checkTreeEqualsImpl(n2);\n       if (res != null) {\n-        return res;\n       }\n     }\n     return res;\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 06:51:37.283732609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1075/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 07:05:58.697033020 -0500\n@@ -315,7 +315,7 @@\n           case NUMBER:          return \"NUMBER\";\n           case STRING:          return \"STRING\";\n           case NULL:            return \"NULL\";\n-          case THIS:            return \"THIS\";\n+          case THIS:            ;\n           case FALSE:           return \"FALSE\";\n           case TRUE:            return \"TRUE\";\n           case SHEQ:            return \"SHEQ\";\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 318, 
          "faulty": "return \"THIS\";", 
          "type": "Delete", 
          "seed": "return Token.STRING;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 88, 
          "faulty": "canRemove=true;", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1427, 
          "faulty": "return res;", 
          "type": "Delete", 
          "seed": "return Token.STRING;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:51:37.259744610 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_705/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 07:02:46.746224851 -0500\n@@ -85,7 +85,6 @@\n           boolean canRemove = false;\n \n           if (specializationState == null) {\n-            canRemove = true;\n           } else {\n             Node specializableFunction =\n               getSpecializableFunctionFromSymbol(declaration);\n@@ -96,11 +95,6 @@\n               canRemove = true;\n             }\n           }\n-\n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 06:51:37.283732609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_705/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 07:02:46.746224851 -0500\n@@ -359,7 +359,10 @@\n           case LP:              return \"LP\";\n           case RP:              return \"RP\";\n           case COMMA:           return \"COMMA\";\n-          case ASSIGN:          return \"ASSIGN\";\n+          case ASSIGN:          {\n+\t\t\t\tint c;\n+\t\t\t\treturn \"ASSIGN\";\n+\t\t\t}\n           case ASSIGN_BITOR:    return \"ASSIGN_BITOR\";\n           case ASSIGN_BITXOR:   return \"ASSIGN_BITXOR\";\n           case ASSIGN_BITAND:   return \"ASSIGN_BITAND\";\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 102, 
          "faulty": "changed=true;", 
          "type": "InsertBefore", 
          "seed": "StringBuilder builder=new StringBuilder();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 88, 
          "faulty": "canRemove=true;", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 362, 
          "faulty": "return \"ASSIGN\";", 
          "type": "InsertBefore", 
          "seed": "int c;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:51:37.259744610 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1543/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 07:09:58.281494237 -0500\n@@ -96,11 +96,6 @@\n               canRemove = true;\n             }\n           }\n-\n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 06:51:37.279734609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1543/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 07:09:58.285494329 -0500\n@@ -218,7 +218,10 @@\n         case QUOTED_PROP:        return \"quoted\";\n         case OPT_ARG_NAME:       return \"opt_arg\";\n \n-        case SYNTHETIC_BLOCK_PROP: return \"synthetic\";\n+        case SYNTHETIC_BLOCK_PROP: {\n+\t\t\tString X = null;\n+\t\t\treturn \"synthetic\";\n+\t\t}\n         case EMPTY_BLOCK:        return \"empty_block\";\n         case ORIGINALNAME_PROP:  return \"originalname\";\n         case SIDE_EFFECT_FLAGS:  return \"side_effect_flags\";\n@@ -937,14 +940,7 @@\n         sb.append(getString());\n       } else if (type == Token.FUNCTION) {\n         sb.append(' ');\n-        // In the case of JsDoc trees, the first child is often not a string\n-        // which causes exceptions to be thrown when calling toString or\n-        // toStringTree.\n-        if (first == null || first.getType() != Token.NAME) {\n-          sb.append(\"<invalid>\");\n-        } else {\n-          sb.append(first.getString());\n-        }\n+        int lineno = getLineno();\n       } else if (this instanceof ScriptOrFnNode) {\n         ScriptOrFnNode sof = (ScriptOrFnNode) this;\n         if (this instanceof FunctionNode) {\n@@ -1424,7 +1420,6 @@\n       }\n       res = n.checkTreeEqualsImpl(n2);\n       if (res != null) {\n-        return res;\n       }\n     }\n     return res;\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 06:51:37.283732609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1543/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 07:09:58.285494329 -0500\n@@ -315,7 +315,7 @@\n           case NUMBER:          return \"NUMBER\";\n           case STRING:          return \"STRING\";\n           case NULL:            return \"NULL\";\n-          case THIS:            return \"THIS\";\n+          case THIS:            ;\n           case FALSE:           return \"FALSE\";\n           case TRUE:            return \"TRUE\";\n           case SHEQ:            return \"SHEQ\";\n@@ -359,7 +359,7 @@\n           case LP:              return \"LP\";\n           case RP:              return \"RP\";\n           case COMMA:           return \"COMMA\";\n-          case ASSIGN:          return \"ASSIGN\";\n+          case ASSIGN:          Context cx = Context.getCurrentContext();\n           case ASSIGN_BITOR:    return \"ASSIGN_BITOR\";\n           case ASSIGN_BITXOR:   return \"ASSIGN_BITXOR\";\n           case ASSIGN_BITAND:   return \"ASSIGN_BITAND\";\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 221, 
          "faulty": "return \"synthetic\";", 
          "type": "Delete", 
          "seed": "consumeToken();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1427, 
          "faulty": "return res;", 
          "type": "Delete", 
          "seed": "boolean first=true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 318, 
          "faulty": "return \"THIS\";", 
          "type": "Delete", 
          "seed": "return Token.XMLATTR;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 221, 
          "faulty": "return \"synthetic\";", 
          "type": "Delete", 
          "seed": "return Token.XMLATTR;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 943, 
          "faulty": "if (first == null || first.getType() != Token.NAME) {\n  sb.append(\"<invalid>\");\n}\n else {\n  sb.append(first.getString());\n}", 
          "type": "Replace", 
          "seed": "int lineno=getLineno();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 362, 
          "faulty": "return \"ASSIGN\";", 
          "type": "Replace", 
          "seed": "Context cx=Context.getCurrentContext();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 221, 
          "faulty": "return \"synthetic\";", 
          "type": "InsertBefore", 
          "seed": "String X=null;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:51:37.259744610 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_154/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:57:43.840571837 -0500\n@@ -85,7 +85,6 @@\n           boolean canRemove = false;\n \n           if (specializationState == null) {\n-            canRemove = true;\n           } else {\n             Node specializableFunction =\n               getSpecializableFunctionFromSymbol(declaration);\n@@ -99,7 +98,8 @@\n \n           if (canRemove) {\n             declaration.remove();\n-            changed = true;\n+            StringBuilder builder = new StringBuilder();\n+\t\t\tchanged = true;\n           }\n         }\n \n@@ -108,7 +108,8 @@\n     }\n \n     if (changed) {\n-      compiler.reportCodeChange();\n+      int index = -1;\n+\tcompiler.reportCodeChange();\n     }\n   }\n \n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 06:51:37.283732609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_154/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 06:57:43.844571894 -0500\n@@ -359,7 +359,7 @@\n           case LP:              return \"LP\";\n           case RP:              return \"RP\";\n           case COMMA:           return \"COMMA\";\n-          case ASSIGN:          return \"ASSIGN\";\n+          case ASSIGN:          ;\n           case ASSIGN_BITOR:    return \"ASSIGN_BITOR\";\n           case ASSIGN_BITXOR:   return \"ASSIGN_BITXOR\";\n           case ASSIGN_BITAND:   return \"ASSIGN_BITAND\";\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 362, 
          "faulty": "return \"ASSIGN\";", 
          "type": "Delete", 
          "seed": "Node pn=memberExpr(true);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 102, 
          "faulty": "changed=true;", 
          "type": "InsertBefore", 
          "seed": "StringBuilder builder=new StringBuilder();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 111, 
          "faulty": "compiler.reportCodeChange();", 
          "type": "InsertBefore", 
          "seed": "int index=-1;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 88, 
          "faulty": "canRemove=true;", 
          "type": "Delete", 
          "seed": "return null;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:51:37.259744610 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1252/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 07:07:30.369162740 -0500\n@@ -85,7 +85,6 @@\n           boolean canRemove = false;\n \n           if (specializationState == null) {\n-            canRemove = true;\n           } else {\n             Node specializableFunction =\n               getSpecializableFunctionFromSymbol(declaration);\n@@ -96,11 +95,6 @@\n               canRemove = true;\n             }\n           }\n-\n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 06:51:37.279734609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1252/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 07:07:30.373162888 -0500\n@@ -218,7 +218,7 @@\n         case QUOTED_PROP:        return \"quoted\";\n         case OPT_ARG_NAME:       return \"opt_arg\";\n \n-        case SYNTHETIC_BLOCK_PROP: return \"synthetic\";\n+        case SYNTHETIC_BLOCK_PROP: ;\n         case EMPTY_BLOCK:        return \"empty_block\";\n         case ORIGINALNAME_PROP:  return \"originalname\";\n         case SIDE_EFFECT_FLAGS:  return \"side_effect_flags\";\n@@ -937,14 +937,7 @@\n         sb.append(getString());\n       } else if (type == Token.FUNCTION) {\n         sb.append(' ');\n-        // In the case of JsDoc trees, the first child is often not a string\n-        // which causes exceptions to be thrown when calling toString or\n-        // toStringTree.\n-        if (first == null || first.getType() != Token.NAME) {\n-          sb.append(\"<invalid>\");\n-        } else {\n-          sb.append(first.getString());\n-        }\n+        int lineno = getLineno();\n       } else if (this instanceof ScriptOrFnNode) {\n         ScriptOrFnNode sof = (ScriptOrFnNode) this;\n         if (this instanceof FunctionNode) {\n@@ -1424,7 +1417,6 @@\n       }\n       res = n.checkTreeEqualsImpl(n2);\n       if (res != null) {\n-        return res;\n       }\n     }\n     return res;\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 06:51:37.283732609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1252/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 07:07:30.373162888 -0500\n@@ -307,7 +307,7 @@\n           case TYPEOF:          return \"TYPEOF\";\n           case GETPROP:         return \"GETPROP\";\n           case SETPROP:         return \"SETPROP\";\n-          case GETELEM:         return \"GETELEM\";\n+          case GETELEM:         ;\n           case SETELEM:         return \"SETELEM\";\n           case CALL:            return \"CALL\";\n           case NAME:            return \"NAME\";\n@@ -315,7 +315,7 @@\n           case NUMBER:          return \"NUMBER\";\n           case STRING:          return \"STRING\";\n           case NULL:            return \"NULL\";\n-          case THIS:            return \"THIS\";\n+          case THIS:            ;\n           case FALSE:           return \"FALSE\";\n           case TRUE:            return \"TRUE\";\n           case SHEQ:            return \"SHEQ\";\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 318, 
          "faulty": "return \"THIS\";", 
          "type": "Delete", 
          "seed": "return Token.STRING;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 88, 
          "faulty": "canRemove=true;", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 943, 
          "faulty": "if (first == null || first.getType() != Token.NAME) {\n  sb.append(\"<invalid>\");\n}\n else {\n  sb.append(first.getString());\n}", 
          "type": "Replace", 
          "seed": "int lineno=getLineno();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1427, 
          "faulty": "return res;", 
          "type": "Delete", 
          "seed": "boolean first=true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 318, 
          "faulty": "return \"THIS\";", 
          "type": "Delete", 
          "seed": "return Token.XMLATTR;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 221, 
          "faulty": "return \"synthetic\";", 
          "type": "Delete", 
          "seed": "return Token.XMLATTR;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 221, 
          "faulty": "return \"synthetic\";", 
          "type": "Delete", 
          "seed": "consumeToken();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1427, 
          "faulty": "return res;", 
          "type": "Delete", 
          "seed": "boolean first=true;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 318, 
          "faulty": "return \"THIS\";", 
          "type": "Delete", 
          "seed": "return Token.STRING;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 88, 
          "faulty": "canRemove=true;", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 943, 
          "faulty": "if (first == null || first.getType() != Token.NAME) {\n  sb.append(\"<invalid>\");\n}\n else {\n  sb.append(first.getString());\n}", 
          "type": "Replace", 
          "seed": "int lineno=getLineno();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 310, 
          "faulty": "return \"GETELEM\";", 
          "type": "Delete", 
          "seed": "return false;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:51:37.259744610 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1398/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 07:08:42.331526441 -0500\n@@ -96,11 +96,6 @@\n               canRemove = true;\n             }\n           }\n-\n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java\t2018-12-02 06:51:39.210768564 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1398/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java\t2018-12-02 07:08:42.335526557 -0500\n@@ -532,7 +532,8 @@\n \n     @Override\n     public void remove() {\n-      NodeUtil.removeChild(exprNode.getParent(), exprNode);\n+      int index = -1;\n+\tNodeUtil.removeChild(exprNode.getParent(), exprNode);\n     }\n \n     @Override\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 06:51:37.279734609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1398/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 07:08:42.335526557 -0500\n@@ -218,7 +218,7 @@\n         case QUOTED_PROP:        return \"quoted\";\n         case OPT_ARG_NAME:       return \"opt_arg\";\n \n-        case SYNTHETIC_BLOCK_PROP: return \"synthetic\";\n+        case SYNTHETIC_BLOCK_PROP: ;\n         case EMPTY_BLOCK:        return \"empty_block\";\n         case ORIGINALNAME_PROP:  return \"originalname\";\n         case SIDE_EFFECT_FLAGS:  return \"side_effect_flags\";\n@@ -937,14 +937,7 @@\n         sb.append(getString());\n       } else if (type == Token.FUNCTION) {\n         sb.append(' ');\n-        // In the case of JsDoc trees, the first child is often not a string\n-        // which causes exceptions to be thrown when calling toString or\n-        // toStringTree.\n-        if (first == null || first.getType() != Token.NAME) {\n-          sb.append(\"<invalid>\");\n-        } else {\n-          sb.append(first.getString());\n-        }\n+        int lineno = getLineno();\n       } else if (this instanceof ScriptOrFnNode) {\n         ScriptOrFnNode sof = (ScriptOrFnNode) this;\n         if (this instanceof FunctionNode) {\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 06:51:37.283732609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1398/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 07:08:42.335526557 -0500\n@@ -359,7 +359,7 @@\n           case LP:              return \"LP\";\n           case RP:              return \"RP\";\n           case COMMA:           return \"COMMA\";\n-          case ASSIGN:          return \"ASSIGN\";\n+          case ASSIGN:          ;\n           case ASSIGN_BITOR:    return \"ASSIGN_BITOR\";\n           case ASSIGN_BITXOR:   return \"ASSIGN_BITXOR\";\n           case ASSIGN_BITAND:   return \"ASSIGN_BITAND\";\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 221, 
          "faulty": "return \"synthetic\";", 
          "type": "Delete", 
          "seed": "consumeToken();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 943, 
          "faulty": "if (first == null || first.getType() != Token.NAME) {\n  sb.append(\"<invalid>\");\n}\n else {\n  sb.append(first.getString());\n}", 
          "type": "Replace", 
          "seed": "int lineno=getLineno();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 102, 
          "faulty": "changed=true;", 
          "type": "InsertBefore", 
          "seed": "StringBuilder builder=new StringBuilder();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java", 
          "line": 535, 
          "faulty": "NodeUtil.removeChild(exprNode.getParent(),exprNode);", 
          "type": "InsertBefore", 
          "seed": "int index=-1;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 362, 
          "faulty": "return \"ASSIGN\";", 
          "type": "Delete", 
          "seed": "case 2:"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:51:37.259744610 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_448/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 07:00:28.056450896 -0500\n@@ -85,7 +85,6 @@\n           boolean canRemove = false;\n \n           if (specializationState == null) {\n-            canRemove = true;\n           } else {\n             Node specializableFunction =\n               getSpecializableFunctionFromSymbol(declaration);\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 06:51:37.279734609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_448/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 07:00:28.056450896 -0500\n@@ -1424,7 +1424,6 @@\n       }\n       res = n.checkTreeEqualsImpl(n2);\n       if (res != null) {\n-        return res;\n       }\n     }\n     return res;\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 06:51:37.283732609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_448/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 07:00:28.060450616 -0500\n@@ -359,7 +359,7 @@\n           case LP:              return \"LP\";\n           case RP:              return \"RP\";\n           case COMMA:           return \"COMMA\";\n-          case ASSIGN:          return \"ASSIGN\";\n+          case ASSIGN:          ;\n           case ASSIGN_BITOR:    return \"ASSIGN_BITOR\";\n           case ASSIGN_BITXOR:   return \"ASSIGN_BITXOR\";\n           case ASSIGN_BITAND:   return \"ASSIGN_BITAND\";\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 362, 
          "faulty": "return \"ASSIGN\";", 
          "type": "Delete", 
          "seed": "Node pn=memberExpr(true);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 88, 
          "faulty": "canRemove=true;", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1427, 
          "faulty": "return res;", 
          "type": "Delete", 
          "seed": "return Token.SEMI;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:51:37.259744610 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1406/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 07:08:45.671623243 -0500\n@@ -82,7 +82,8 @@\n     for (NameInfo nameInfo : allNameInfo) {\n       if (!nameInfo.isReferenced()) {\n         for (Symbol declaration : nameInfo.getDeclarations()) {\n-          boolean canRemove = false;\n+          boolean valid = false;\n+\t\tboolean canRemove = false;\n \n           if (specializationState == null) {\n             canRemove = true;\n@@ -96,11 +97,6 @@\n               canRemove = true;\n             }\n           }\n-\n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java\t2018-12-02 06:51:39.210768564 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1406/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java\t2018-12-02 07:08:45.671623243 -0500\n@@ -532,7 +532,8 @@\n \n     @Override\n     public void remove() {\n-      NodeUtil.removeChild(exprNode.getParent(), exprNode);\n+      int index = -1;\n+\tNodeUtil.removeChild(exprNode.getParent(), exprNode);\n     }\n \n     @Override\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 06:51:37.279734609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1406/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 07:08:45.675623358 -0500\n@@ -218,7 +218,7 @@\n         case QUOTED_PROP:        return \"quoted\";\n         case OPT_ARG_NAME:       return \"opt_arg\";\n \n-        case SYNTHETIC_BLOCK_PROP: return \"synthetic\";\n+        case SYNTHETIC_BLOCK_PROP: ;\n         case EMPTY_BLOCK:        return \"empty_block\";\n         case ORIGINALNAME_PROP:  return \"originalname\";\n         case SIDE_EFFECT_FLAGS:  return \"side_effect_flags\";\n@@ -1424,7 +1424,6 @@\n       }\n       res = n.checkTreeEqualsImpl(n2);\n       if (res != null) {\n-        return res;\n       }\n     }\n     return res;\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 06:51:37.283732609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1406/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 07:08:45.675623358 -0500\n@@ -315,7 +315,7 @@\n           case NUMBER:          return \"NUMBER\";\n           case STRING:          return \"STRING\";\n           case NULL:            return \"NULL\";\n-          case THIS:            return \"THIS\";\n+          case THIS:            ;\n           case FALSE:           return \"FALSE\";\n           case TRUE:            return \"TRUE\";\n           case SHEQ:            return \"SHEQ\";\n@@ -359,7 +359,7 @@\n           case LP:              return \"LP\";\n           case RP:              return \"RP\";\n           case COMMA:           return \"COMMA\";\n-          case ASSIGN:          return \"ASSIGN\";\n+          case ASSIGN:          ;\n           case ASSIGN_BITOR:    return \"ASSIGN_BITOR\";\n           case ASSIGN_BITXOR:   return \"ASSIGN_BITXOR\";\n           case ASSIGN_BITAND:   return \"ASSIGN_BITAND\";\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 221, 
          "faulty": "return \"synthetic\";", 
          "type": "Delete", 
          "seed": "consumeToken();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1427, 
          "faulty": "return res;", 
          "type": "Delete", 
          "seed": "boolean first=true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 318, 
          "faulty": "return \"THIS\";", 
          "type": "Delete", 
          "seed": "return Token.XMLATTR;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 221, 
          "faulty": "return \"synthetic\";", 
          "type": "Delete", 
          "seed": "return Token.XMLATTR;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 221, 
          "faulty": "return \"synthetic\";", 
          "type": "Delete", 
          "seed": "consumeToken();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 318, 
          "faulty": "return \"THIS\";", 
          "type": "Delete", 
          "seed": "return Token.STRING;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java", 
          "line": 535, 
          "faulty": "NodeUtil.removeChild(exprNode.getParent(),exprNode);", 
          "type": "InsertBefore", 
          "seed": "int index=-1;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 362, 
          "faulty": "return \"ASSIGN\";", 
          "type": "Delete", 
          "seed": "case 2:"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 85, 
          "faulty": "boolean canRemove=false;", 
          "type": "InsertBefore", 
          "seed": "boolean valid=false;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:51:37.259744610 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_877/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 07:04:12.169548687 -0500\n@@ -96,11 +96,6 @@\n               canRemove = true;\n             }\n           }\n-\n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java\t2018-12-02 06:51:39.210768564 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_877/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java\t2018-12-02 07:04:12.173548662 -0500\n@@ -532,7 +532,8 @@\n \n     @Override\n     public void remove() {\n-      NodeUtil.removeChild(exprNode.getParent(), exprNode);\n+      int index = -1;\n+\tNodeUtil.removeChild(exprNode.getParent(), exprNode);\n     }\n \n     @Override\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 102, 
          "faulty": "changed=true;", 
          "type": "InsertBefore", 
          "seed": "StringBuilder builder=new StringBuilder();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 101, 
          "faulty": "declaration.remove();", 
          "type": "InsertBefore", 
          "seed": "return;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java", 
          "line": 535, 
          "faulty": "NodeUtil.removeChild(exprNode.getParent(),exprNode);", 
          "type": "InsertBefore", 
          "seed": "int index=-1;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:51:37.259744610 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1879/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 07:12:50.244614999 -0500\n@@ -83,24 +83,6 @@\n       if (!nameInfo.isReferenced()) {\n         for (Symbol declaration : nameInfo.getDeclarations()) {\n           boolean canRemove = false;\n-\n-          if (specializationState == null) {\n-            canRemove = true;\n-          } else {\n-            Node specializableFunction =\n-              getSpecializableFunctionFromSymbol(declaration);\n-\n-            if (specializableFunction != null) {\n-              specializationState.reportRemovedFunction(\n-                  specializableFunction, null);\n-              canRemove = true;\n-            }\n-          }\n-\n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 06:51:37.279734609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1879/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 07:12:50.244614999 -0500\n@@ -1411,7 +1411,8 @@\n    */\n   NodeMismatch checkTreeEqualsImpl(Node node2) {\n     if (!isEquivalentTo(node2, false, false)) {\n-      return new NodeMismatch(this, node2);\n+      boolean nullKey = false;\n+\treturn new NodeMismatch(this, node2);\n     }\n \n     NodeMismatch res = null;\n@@ -1424,7 +1425,6 @@\n       }\n       res = n.checkTreeEqualsImpl(n2);\n       if (res != null) {\n-        return res;\n       }\n     }\n     return res;\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 06:51:37.283732609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1879/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 07:12:50.248615056 -0500\n@@ -315,7 +315,7 @@\n           case NUMBER:          return \"NUMBER\";\n           case STRING:          return \"STRING\";\n           case NULL:            return \"NULL\";\n-          case THIS:            return \"THIS\";\n+          case THIS:            ;\n           case FALSE:           return \"FALSE\";\n           case TRUE:            return \"TRUE\";\n           case SHEQ:            return \"SHEQ\";\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 88, 
          "faulty": "canRemove=true;", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1427, 
          "faulty": "return res;", 
          "type": "Delete", 
          "seed": "return Token.STRING;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1414, 
          "faulty": "return new NodeMismatch(this,node2);", 
          "type": "InsertBefore", 
          "seed": "boolean nullKey=false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 87, 
          "faulty": "if (specializationState == null) {\n  canRemove=true;\n}\n else {\n  Node specializableFunction=getSpecializableFunctionFromSymbol(declaration);\n  if (specializableFunction != null) {\n    specializationState.reportRemovedFunction(specializableFunction,null);\n    canRemove=true;\n  }\n}", 
          "type": "Delete", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1427, 
          "faulty": "return res;", 
          "type": "Delete", 
          "seed": "return Token.STRING;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 318, 
          "faulty": "return \"THIS\";", 
          "type": "Delete", 
          "seed": "if (matchChar('/')) {\n  return Token.EOC;\n}\n else {\n  return Token.STAR;\n}"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 318, 
          "faulty": "return \"THIS\";", 
          "type": "Delete", 
          "seed": "return \"BLOCK\";"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:51:37.259744610 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1293/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 07:07:49.901860816 -0500\n@@ -85,7 +85,6 @@\n           boolean canRemove = false;\n \n           if (specializationState == null) {\n-            canRemove = true;\n           } else {\n             Node specializableFunction =\n               getSpecializableFunctionFromSymbol(declaration);\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 06:51:37.279734609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1293/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 07:07:49.901860816 -0500\n@@ -218,7 +218,7 @@\n         case QUOTED_PROP:        return \"quoted\";\n         case OPT_ARG_NAME:       return \"opt_arg\";\n \n-        case SYNTHETIC_BLOCK_PROP: return \"synthetic\";\n+        case SYNTHETIC_BLOCK_PROP: ;\n         case EMPTY_BLOCK:        return \"empty_block\";\n         case ORIGINALNAME_PROP:  return \"originalname\";\n         case SIDE_EFFECT_FLAGS:  return \"side_effect_flags\";\n@@ -937,14 +937,7 @@\n         sb.append(getString());\n       } else if (type == Token.FUNCTION) {\n         sb.append(' ');\n-        // In the case of JsDoc trees, the first child is often not a string\n-        // which causes exceptions to be thrown when calling toString or\n-        // toStringTree.\n-        if (first == null || first.getType() != Token.NAME) {\n-          sb.append(\"<invalid>\");\n-        } else {\n-          sb.append(first.getString());\n-        }\n+        int lineno = getLineno();\n       } else if (this instanceof ScriptOrFnNode) {\n         ScriptOrFnNode sof = (ScriptOrFnNode) this;\n         if (this instanceof FunctionNode) {\n@@ -1424,7 +1417,6 @@\n       }\n       res = n.checkTreeEqualsImpl(n2);\n       if (res != null) {\n-        return res;\n       }\n     }\n     return res;\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 88, 
          "faulty": "canRemove=true;", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 943, 
          "faulty": "if (first == null || first.getType() != Token.NAME) {\n  sb.append(\"<invalid>\");\n}\n else {\n  sb.append(first.getString());\n}", 
          "type": "Replace", 
          "seed": "int lineno=getLineno();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 221, 
          "faulty": "return \"synthetic\";", 
          "type": "Delete", 
          "seed": "return Token.XMLATTR;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1427, 
          "faulty": "return res;", 
          "type": "Delete", 
          "seed": "return Token.STRING;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:51:37.259744610 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1153/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 07:06:37.388912045 -0500\n@@ -85,7 +85,6 @@\n           boolean canRemove = false;\n \n           if (specializationState == null) {\n-            canRemove = true;\n           } else {\n             Node specializableFunction =\n               getSpecializableFunctionFromSymbol(declaration);\n@@ -96,11 +95,6 @@\n               canRemove = true;\n             }\n           }\n-\n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 06:51:37.279734609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1153/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 07:06:37.388912045 -0500\n@@ -218,7 +218,7 @@\n         case QUOTED_PROP:        return \"quoted\";\n         case OPT_ARG_NAME:       return \"opt_arg\";\n \n-        case SYNTHETIC_BLOCK_PROP: return \"synthetic\";\n+        case SYNTHETIC_BLOCK_PROP: ;\n         case EMPTY_BLOCK:        return \"empty_block\";\n         case ORIGINALNAME_PROP:  return \"originalname\";\n         case SIDE_EFFECT_FLAGS:  return \"side_effect_flags\";\n@@ -1424,7 +1424,6 @@\n       }\n       res = n.checkTreeEqualsImpl(n2);\n       if (res != null) {\n-        return res;\n       }\n     }\n     return res;\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 06:51:37.283732609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1153/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 07:06:37.392912035 -0500\n@@ -315,7 +315,7 @@\n           case NUMBER:          return \"NUMBER\";\n           case STRING:          return \"STRING\";\n           case NULL:            return \"NULL\";\n-          case THIS:            return \"THIS\";\n+          case THIS:            ;\n           case FALSE:           return \"FALSE\";\n           case TRUE:            return \"TRUE\";\n           case SHEQ:            return \"SHEQ\";\n@@ -359,7 +359,7 @@\n           case LP:              return \"LP\";\n           case RP:              return \"RP\";\n           case COMMA:           return \"COMMA\";\n-          case ASSIGN:          return \"ASSIGN\";\n+          case ASSIGN:          ;\n           case ASSIGN_BITOR:    return \"ASSIGN_BITOR\";\n           case ASSIGN_BITXOR:   return \"ASSIGN_BITXOR\";\n           case ASSIGN_BITAND:   return \"ASSIGN_BITAND\";\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 221, 
          "faulty": "return \"synthetic\";", 
          "type": "Delete", 
          "seed": "consumeToken();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1427, 
          "faulty": "return res;", 
          "type": "Delete", 
          "seed": "boolean first=true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 318, 
          "faulty": "return \"THIS\";", 
          "type": "Delete", 
          "seed": "return Token.XMLATTR;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 221, 
          "faulty": "return \"synthetic\";", 
          "type": "Delete", 
          "seed": "return Token.XMLATTR;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 221, 
          "faulty": "return \"synthetic\";", 
          "type": "Delete", 
          "seed": "consumeToken();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1427, 
          "faulty": "return res;", 
          "type": "Delete", 
          "seed": "boolean first=true;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 362, 
          "faulty": "return \"ASSIGN\";", 
          "type": "Delete", 
          "seed": "return Token.LP;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 318, 
          "faulty": "return \"THIS\";", 
          "type": "Delete", 
          "seed": "return Token.STRING;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 88, 
          "faulty": "canRemove=true;", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1427, 
          "faulty": "return res;", 
          "type": "Delete", 
          "seed": "return Token.STRING;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:51:37.259744610 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1874/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 07:12:48.284586941 -0500\n@@ -84,19 +84,6 @@\n         for (Symbol declaration : nameInfo.getDeclarations()) {\n           boolean canRemove = false;\n \n-          if (specializationState == null) {\n-            canRemove = true;\n-          } else {\n-            Node specializableFunction =\n-              getSpecializableFunctionFromSymbol(declaration);\n-\n-            if (specializableFunction != null) {\n-              specializationState.reportRemovedFunction(\n-                  specializableFunction, null);\n-              canRemove = true;\n-            }\n-          }\n-\n           if (canRemove) {\n             declaration.remove();\n             changed = true;\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 06:51:37.279734609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1874/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 07:12:48.284586941 -0500\n@@ -1411,7 +1411,8 @@\n    */\n   NodeMismatch checkTreeEqualsImpl(Node node2) {\n     if (!isEquivalentTo(node2, false, false)) {\n-      return new NodeMismatch(this, node2);\n+      boolean nullKey = false;\n+\treturn new NodeMismatch(this, node2);\n     }\n \n     NodeMismatch res = null;\n@@ -1424,7 +1425,6 @@\n       }\n       res = n.checkTreeEqualsImpl(n2);\n       if (res != null) {\n-        return res;\n       }\n     }\n     return res;\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 06:51:37.283732609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1874/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 07:12:48.284586941 -0500\n@@ -315,7 +315,7 @@\n           case NUMBER:          return \"NUMBER\";\n           case STRING:          return \"STRING\";\n           case NULL:            return \"NULL\";\n-          case THIS:            return \"THIS\";\n+          case THIS:            ;\n           case FALSE:           return \"FALSE\";\n           case TRUE:            return \"TRUE\";\n           case SHEQ:            return \"SHEQ\";\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 88, 
          "faulty": "canRemove=true;", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1414, 
          "faulty": "return new NodeMismatch(this,node2);", 
          "type": "InsertBefore", 
          "seed": "boolean nullKey=false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 87, 
          "faulty": "if (specializationState == null) {\n  canRemove=true;\n}\n else {\n  Node specializableFunction=getSpecializableFunctionFromSymbol(declaration);\n  if (specializableFunction != null) {\n    specializationState.reportRemovedFunction(specializableFunction,null);\n    canRemove=true;\n  }\n}", 
          "type": "Delete", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1427, 
          "faulty": "return res;", 
          "type": "Delete", 
          "seed": "return Token.STRING;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 318, 
          "faulty": "return \"THIS\";", 
          "type": "Delete", 
          "seed": "if (matchChar('/')) {\n  return Token.EOC;\n}\n else {\n  return Token.STAR;\n}"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 318, 
          "faulty": "return \"THIS\";", 
          "type": "Delete", 
          "seed": "return \"BLOCK\";"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:51:37.259744610 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1570/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 07:10:11.177784974 -0500\n@@ -83,24 +83,6 @@\n       if (!nameInfo.isReferenced()) {\n         for (Symbol declaration : nameInfo.getDeclarations()) {\n           boolean canRemove = false;\n-\n-          if (specializationState == null) {\n-            canRemove = true;\n-          } else {\n-            Node specializableFunction =\n-              getSpecializableFunctionFromSymbol(declaration);\n-\n-            if (specializableFunction != null) {\n-              specializationState.reportRemovedFunction(\n-                  specializableFunction, null);\n-              canRemove = true;\n-            }\n-          }\n-\n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 06:51:37.279734609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1570/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 07:10:11.181785063 -0500\n@@ -1411,7 +1411,8 @@\n    */\n   NodeMismatch checkTreeEqualsImpl(Node node2) {\n     if (!isEquivalentTo(node2, false, false)) {\n-      return new NodeMismatch(this, node2);\n+      boolean nullKey = false;\n+\treturn new NodeMismatch(this, node2);\n     }\n \n     NodeMismatch res = null;\n@@ -1424,7 +1425,6 @@\n       }\n       res = n.checkTreeEqualsImpl(n2);\n       if (res != null) {\n-        return res;\n       }\n     }\n     return res;\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1427, 
          "faulty": "return res;", 
          "type": "Delete", 
          "seed": "return Token.STRING;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1414, 
          "faulty": "return new NodeMismatch(this,node2);", 
          "type": "InsertBefore", 
          "seed": "boolean nullKey=false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 87, 
          "faulty": "if (specializationState == null) {\n  canRemove=true;\n}\n else {\n  Node specializableFunction=getSpecializableFunctionFromSymbol(declaration);\n  if (specializableFunction != null) {\n    specializationState.reportRemovedFunction(specializableFunction,null);\n    canRemove=true;\n  }\n}", 
          "type": "Delete", 
          "seed": "break;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:51:37.259744610 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_695/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 07:02:41.674274424 -0500\n@@ -96,11 +96,6 @@\n               canRemove = true;\n             }\n           }\n-\n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 06:51:37.279734609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_695/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 07:02:41.678274385 -0500\n@@ -218,7 +218,7 @@\n         case QUOTED_PROP:        return \"quoted\";\n         case OPT_ARG_NAME:       return \"opt_arg\";\n \n-        case SYNTHETIC_BLOCK_PROP: return \"synthetic\";\n+        case SYNTHETIC_BLOCK_PROP: ;\n         case EMPTY_BLOCK:        return \"empty_block\";\n         case ORIGINALNAME_PROP:  return \"originalname\";\n         case SIDE_EFFECT_FLAGS:  return \"side_effect_flags\";\n@@ -1424,7 +1424,6 @@\n       }\n       res = n.checkTreeEqualsImpl(n2);\n       if (res != null) {\n-        return res;\n       }\n     }\n     return res;\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 06:51:37.283732609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_695/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 07:02:41.678274385 -0500\n@@ -315,7 +315,7 @@\n           case NUMBER:          return \"NUMBER\";\n           case STRING:          return \"STRING\";\n           case NULL:            return \"NULL\";\n-          case THIS:            return \"THIS\";\n+          case THIS:            ;\n           case FALSE:           return \"FALSE\";\n           case TRUE:            return \"TRUE\";\n           case SHEQ:            return \"SHEQ\";\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 221, 
          "faulty": "return \"synthetic\";", 
          "type": "Delete", 
          "seed": "consumeToken();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1427, 
          "faulty": "return res;", 
          "type": "Delete", 
          "seed": "boolean first=true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 318, 
          "faulty": "return \"THIS\";", 
          "type": "Delete", 
          "seed": "return Token.XMLATTR;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:51:37.259744610 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1109/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 07:06:16.564973446 -0500\n@@ -96,11 +96,6 @@\n               canRemove = true;\n             }\n           }\n-\n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 06:51:37.279734609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1109/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 07:06:16.568973431 -0500\n@@ -937,14 +937,6 @@\n         sb.append(getString());\n       } else if (type == Token.FUNCTION) {\n         sb.append(' ');\n-        // In the case of JsDoc trees, the first child is often not a string\n-        // which causes exceptions to be thrown when calling toString or\n-        // toStringTree.\n-        if (first == null || first.getType() != Token.NAME) {\n-          sb.append(\"<invalid>\");\n-        } else {\n-          sb.append(first.getString());\n-        }\n       } else if (this instanceof ScriptOrFnNode) {\n         ScriptOrFnNode sof = (ScriptOrFnNode) this;\n         if (this instanceof FunctionNode) {\n@@ -1424,7 +1416,6 @@\n       }\n       res = n.checkTreeEqualsImpl(n2);\n       if (res != null) {\n-        return res;\n       }\n     }\n     return res;\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 102, 
          "faulty": "changed=true;", 
          "type": "InsertBefore", 
          "seed": "StringBuilder builder=new StringBuilder();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1427, 
          "faulty": "return res;", 
          "type": "Delete", 
          "seed": "return Token.STRING;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 943, 
          "faulty": "if (first == null || first.getType() != Token.NAME) {\n  sb.append(\"<invalid>\");\n}\n else {\n  sb.append(first.getString());\n}", 
          "type": "Delete", 
          "seed": "if (matchChar('=')) {\n  return Token.ASSIGN_ADD;\n}\n else if (matchChar('+')) {\n  return Token.INC;\n}\n else {\n  return Token.ADD;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:51:37.259744610 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1572/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 07:10:11.833799466 -0500\n@@ -82,10 +82,10 @@\n     for (NameInfo nameInfo : allNameInfo) {\n       if (!nameInfo.isReferenced()) {\n         for (Symbol declaration : nameInfo.getDeclarations()) {\n-          boolean canRemove = false;\n+          boolean valid = false;\n+\t\tboolean canRemove = false;\n \n           if (specializationState == null) {\n-            canRemove = true;\n           } else {\n             Node specializableFunction =\n               getSpecializableFunctionFromSymbol(declaration);\n@@ -96,11 +96,6 @@\n               canRemove = true;\n             }\n           }\n-\n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java\t2018-12-02 06:51:39.210768564 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1572/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java\t2018-12-02 07:10:11.833799466 -0500\n@@ -532,7 +532,8 @@\n \n     @Override\n     public void remove() {\n-      NodeUtil.removeChild(exprNode.getParent(), exprNode);\n+      int index = -1;\n+\tNodeUtil.removeChild(exprNode.getParent(), exprNode);\n     }\n \n     @Override\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 06:51:37.279734609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1572/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 07:10:11.837799553 -0500\n@@ -218,7 +218,7 @@\n         case QUOTED_PROP:        return \"quoted\";\n         case OPT_ARG_NAME:       return \"opt_arg\";\n \n-        case SYNTHETIC_BLOCK_PROP: return \"synthetic\";\n+        case SYNTHETIC_BLOCK_PROP: ;\n         case EMPTY_BLOCK:        return \"empty_block\";\n         case ORIGINALNAME_PROP:  return \"originalname\";\n         case SIDE_EFFECT_FLAGS:  return \"side_effect_flags\";\n@@ -937,14 +937,7 @@\n         sb.append(getString());\n       } else if (type == Token.FUNCTION) {\n         sb.append(' ');\n-        // In the case of JsDoc trees, the first child is often not a string\n-        // which causes exceptions to be thrown when calling toString or\n-        // toStringTree.\n-        if (first == null || first.getType() != Token.NAME) {\n-          sb.append(\"<invalid>\");\n-        } else {\n-          sb.append(first.getString());\n-        }\n+        int lineno = getLineno();\n       } else if (this instanceof ScriptOrFnNode) {\n         ScriptOrFnNode sof = (ScriptOrFnNode) this;\n         if (this instanceof FunctionNode) {\n@@ -1424,7 +1417,6 @@\n       }\n       res = n.checkTreeEqualsImpl(n2);\n       if (res != null) {\n-        return res;\n       }\n     }\n     return res;\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 06:51:37.283732609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1572/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 07:10:11.837799553 -0500\n@@ -359,7 +359,7 @@\n           case LP:              return \"LP\";\n           case RP:              return \"RP\";\n           case COMMA:           return \"COMMA\";\n-          case ASSIGN:          return \"ASSIGN\";\n+          case ASSIGN:          ;\n           case ASSIGN_BITOR:    return \"ASSIGN_BITOR\";\n           case ASSIGN_BITXOR:   return \"ASSIGN_BITXOR\";\n           case ASSIGN_BITAND:   return \"ASSIGN_BITAND\";\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 88, 
          "faulty": "canRemove=true;", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 943, 
          "faulty": "if (first == null || first.getType() != Token.NAME) {\n  sb.append(\"<invalid>\");\n}\n else {\n  sb.append(first.getString());\n}", 
          "type": "Replace", 
          "seed": "int lineno=getLineno();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 221, 
          "faulty": "return \"synthetic\";", 
          "type": "Delete", 
          "seed": "consumeToken();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1427, 
          "faulty": "return res;", 
          "type": "Delete", 
          "seed": "boolean first=true;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 88, 
          "faulty": "canRemove=true;", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 943, 
          "faulty": "if (first == null || first.getType() != Token.NAME) {\n  sb.append(\"<invalid>\");\n}\n else {\n  sb.append(first.getString());\n}", 
          "type": "Replace", 
          "seed": "int lineno=getLineno();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 221, 
          "faulty": "return \"synthetic\";", 
          "type": "Delete", 
          "seed": "consumeToken();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1427, 
          "faulty": "return res;", 
          "type": "Delete", 
          "seed": "boolean first=true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 362, 
          "faulty": "return \"ASSIGN\";", 
          "type": "Delete", 
          "seed": "return Token.LP;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 221, 
          "faulty": "return \"synthetic\";", 
          "type": "Delete", 
          "seed": "return Token.XMLATTR;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 221, 
          "faulty": "return \"synthetic\";", 
          "type": "Delete", 
          "seed": "consumeToken();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java", 
          "line": 535, 
          "faulty": "NodeUtil.removeChild(exprNode.getParent(),exprNode);", 
          "type": "InsertBefore", 
          "seed": "int index=-1;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 362, 
          "faulty": "return \"ASSIGN\";", 
          "type": "Delete", 
          "seed": "case 2:"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 85, 
          "faulty": "boolean canRemove=false;", 
          "type": "InsertBefore", 
          "seed": "boolean valid=false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 88, 
          "faulty": "canRemove=true;", 
          "type": "Delete", 
          "seed": "return this;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:51:37.259744610 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1497/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 07:09:35.336947981 -0500\n@@ -85,7 +85,6 @@\n           boolean canRemove = false;\n \n           if (specializationState == null) {\n-            canRemove = true;\n           } else {\n             Node specializableFunction =\n               getSpecializableFunctionFromSymbol(declaration);\n@@ -96,11 +95,6 @@\n               canRemove = true;\n             }\n           }\n-\n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 06:51:37.279734609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1497/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 07:09:35.340948078 -0500\n@@ -218,7 +218,7 @@\n         case QUOTED_PROP:        return \"quoted\";\n         case OPT_ARG_NAME:       return \"opt_arg\";\n \n-        case SYNTHETIC_BLOCK_PROP: return \"synthetic\";\n+        case SYNTHETIC_BLOCK_PROP: ;\n         case EMPTY_BLOCK:        return \"empty_block\";\n         case ORIGINALNAME_PROP:  return \"originalname\";\n         case SIDE_EFFECT_FLAGS:  return \"side_effect_flags\";\n@@ -937,14 +937,7 @@\n         sb.append(getString());\n       } else if (type == Token.FUNCTION) {\n         sb.append(' ');\n-        // In the case of JsDoc trees, the first child is often not a string\n-        // which causes exceptions to be thrown when calling toString or\n-        // toStringTree.\n-        if (first == null || first.getType() != Token.NAME) {\n-          sb.append(\"<invalid>\");\n-        } else {\n-          sb.append(first.getString());\n-        }\n+        int lineno = getLineno();\n       } else if (this instanceof ScriptOrFnNode) {\n         ScriptOrFnNode sof = (ScriptOrFnNode) this;\n         if (this instanceof FunctionNode) {\n@@ -1411,7 +1404,8 @@\n    */\n   NodeMismatch checkTreeEqualsImpl(Node node2) {\n     if (!isEquivalentTo(node2, false, false)) {\n-      return new NodeMismatch(this, node2);\n+      boolean nullKey = false;\n+\treturn new NodeMismatch(this, node2);\n     }\n \n     NodeMismatch res = null;\n@@ -1424,7 +1418,6 @@\n       }\n       res = n.checkTreeEqualsImpl(n2);\n       if (res != null) {\n-        return res;\n       }\n     }\n     return res;\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 06:51:37.283732609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1497/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 07:09:35.340948078 -0500\n@@ -315,7 +315,7 @@\n           case NUMBER:          return \"NUMBER\";\n           case STRING:          return \"STRING\";\n           case NULL:            return \"NULL\";\n-          case THIS:            return \"THIS\";\n+          case THIS:            ;\n           case FALSE:           return \"FALSE\";\n           case TRUE:            return \"TRUE\";\n           case SHEQ:            return \"SHEQ\";\n@@ -359,7 +359,7 @@\n           case LP:              return \"LP\";\n           case RP:              return \"RP\";\n           case COMMA:           return \"COMMA\";\n-          case ASSIGN:          return \"ASSIGN\";\n+          case ASSIGN:          ;\n           case ASSIGN_BITOR:    return \"ASSIGN_BITOR\";\n           case ASSIGN_BITXOR:   return \"ASSIGN_BITXOR\";\n           case ASSIGN_BITAND:   return \"ASSIGN_BITAND\";\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 318, 
          "faulty": "return \"THIS\";", 
          "type": "Delete", 
          "seed": "return Token.STRING;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 88, 
          "faulty": "canRemove=true;", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 943, 
          "faulty": "if (first == null || first.getType() != Token.NAME) {\n  sb.append(\"<invalid>\");\n}\n else {\n  sb.append(first.getString());\n}", 
          "type": "Replace", 
          "seed": "int lineno=getLineno();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1427, 
          "faulty": "return res;", 
          "type": "Delete", 
          "seed": "boolean first=true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 318, 
          "faulty": "return \"THIS\";", 
          "type": "Delete", 
          "seed": "return Token.XMLATTR;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1427, 
          "faulty": "return res;", 
          "type": "Delete", 
          "seed": "boolean first=true;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 88, 
          "faulty": "canRemove=true;", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 943, 
          "faulty": "if (first == null || first.getType() != Token.NAME) {\n  sb.append(\"<invalid>\");\n}\n else {\n  sb.append(first.getString());\n}", 
          "type": "Replace", 
          "seed": "int lineno=getLineno();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 221, 
          "faulty": "return \"synthetic\";", 
          "type": "Delete", 
          "seed": "consumeToken();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1427, 
          "faulty": "return res;", 
          "type": "Delete", 
          "seed": "boolean first=true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 362, 
          "faulty": "return \"ASSIGN\";", 
          "type": "Delete", 
          "seed": "return Token.LP;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 221, 
          "faulty": "return \"synthetic\";", 
          "type": "Delete", 
          "seed": "return Token.XMLATTR;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 221, 
          "faulty": "return \"synthetic\";", 
          "type": "Delete", 
          "seed": "consumeToken();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1427, 
          "faulty": "return res;", 
          "type": "Delete", 
          "seed": "return Token.STRING;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1414, 
          "faulty": "return new NodeMismatch(this,node2);", 
          "type": "InsertBefore", 
          "seed": "boolean nullKey=false;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:51:37.259744610 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1402/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 07:08:44.311583952 -0500\n@@ -97,10 +97,7 @@\n             }\n           }\n \n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n+          int index = -1;\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java\t2018-12-02 06:51:39.210768564 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1402/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java\t2018-12-02 07:08:44.311583952 -0500\n@@ -532,7 +532,8 @@\n \n     @Override\n     public void remove() {\n-      NodeUtil.removeChild(exprNode.getParent(), exprNode);\n+      int index = -1;\n+\tNodeUtil.removeChild(exprNode.getParent(), exprNode);\n     }\n \n     @Override\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 06:51:37.279734609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1402/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 07:08:44.311583952 -0500\n@@ -218,7 +218,7 @@\n         case QUOTED_PROP:        return \"quoted\";\n         case OPT_ARG_NAME:       return \"opt_arg\";\n \n-        case SYNTHETIC_BLOCK_PROP: return \"synthetic\";\n+        case SYNTHETIC_BLOCK_PROP: ;\n         case EMPTY_BLOCK:        return \"empty_block\";\n         case ORIGINALNAME_PROP:  return \"originalname\";\n         case SIDE_EFFECT_FLAGS:  return \"side_effect_flags\";\n@@ -937,14 +937,7 @@\n         sb.append(getString());\n       } else if (type == Token.FUNCTION) {\n         sb.append(' ');\n-        // In the case of JsDoc trees, the first child is often not a string\n-        // which causes exceptions to be thrown when calling toString or\n-        // toStringTree.\n-        if (first == null || first.getType() != Token.NAME) {\n-          sb.append(\"<invalid>\");\n-        } else {\n-          sb.append(first.getString());\n-        }\n+        int lineno = getLineno();\n       } else if (this instanceof ScriptOrFnNode) {\n         ScriptOrFnNode sof = (ScriptOrFnNode) this;\n         if (this instanceof FunctionNode) {\n@@ -1424,7 +1417,6 @@\n       }\n       res = n.checkTreeEqualsImpl(n2);\n       if (res != null) {\n-        return res;\n       }\n     }\n     return res;\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 06:51:37.283732609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1402/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 07:08:44.315584068 -0500\n@@ -315,7 +315,7 @@\n           case NUMBER:          return \"NUMBER\";\n           case STRING:          return \"STRING\";\n           case NULL:            return \"NULL\";\n-          case THIS:            return \"THIS\";\n+          case THIS:            ;\n           case FALSE:           return \"FALSE\";\n           case TRUE:            return \"TRUE\";\n           case SHEQ:            return \"SHEQ\";\n@@ -359,7 +359,7 @@\n           case LP:              return \"LP\";\n           case RP:              return \"RP\";\n           case COMMA:           return \"COMMA\";\n-          case ASSIGN:          return \"ASSIGN\";\n+          case ASSIGN:          ;\n           case ASSIGN_BITOR:    return \"ASSIGN_BITOR\";\n           case ASSIGN_BITXOR:   return \"ASSIGN_BITXOR\";\n           case ASSIGN_BITAND:   return \"ASSIGN_BITAND\";\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 221, 
          "faulty": "return \"synthetic\";", 
          "type": "Delete", 
          "seed": "consumeToken();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1427, 
          "faulty": "return res;", 
          "type": "Delete", 
          "seed": "boolean first=true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 318, 
          "faulty": "return \"THIS\";", 
          "type": "Delete", 
          "seed": "return Token.XMLATTR;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 221, 
          "faulty": "return \"synthetic\";", 
          "type": "Delete", 
          "seed": "return Token.XMLATTR;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 221, 
          "faulty": "return \"synthetic\";", 
          "type": "Delete", 
          "seed": "consumeToken();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 943, 
          "faulty": "if (first == null || first.getType() != Token.NAME) {\n  sb.append(\"<invalid>\");\n}\n else {\n  sb.append(first.getString());\n}", 
          "type": "Replace", 
          "seed": "int lineno=getLineno();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 102, 
          "faulty": "changed=true;", 
          "type": "InsertBefore", 
          "seed": "StringBuilder builder=new StringBuilder();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java", 
          "line": 535, 
          "faulty": "NodeUtil.removeChild(exprNode.getParent(),exprNode);", 
          "type": "InsertBefore", 
          "seed": "int index=-1;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 362, 
          "faulty": "return \"ASSIGN\";", 
          "type": "Delete", 
          "seed": "case 2:"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "InsertBefore", 
          "seed": "int index=-1;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:51:37.259744610 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_677/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 07:02:31.818374188 -0500\n@@ -85,7 +85,7 @@\n           boolean canRemove = false;\n \n           if (specializationState == null) {\n-            canRemove = true;\n+            return;\n           } else {\n             Node specializableFunction =\n               getSpecializableFunctionFromSymbol(declaration);\n@@ -96,11 +96,6 @@\n               canRemove = true;\n             }\n           }\n-\n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 06:51:37.283732609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_677/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 07:02:31.818374188 -0500\n@@ -307,7 +307,7 @@\n           case TYPEOF:          return \"TYPEOF\";\n           case GETPROP:         return \"GETPROP\";\n           case SETPROP:         return \"SETPROP\";\n-          case GETELEM:         return \"GETELEM\";\n+          case GETELEM:         ;\n           case SETELEM:         return \"SETELEM\";\n           case CALL:            return \"CALL\";\n           case NAME:            return \"NAME\";\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 310, 
          "faulty": "return \"GETELEM\";", 
          "type": "Delete", 
          "seed": "String namespace=null;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 88, 
          "faulty": "canRemove=true;", 
          "type": "Replace", 
          "seed": "return;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:51:37.259744610 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1553/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 07:10:02.829598063 -0500\n@@ -85,7 +85,6 @@\n           boolean canRemove = false;\n \n           if (specializationState == null) {\n-            canRemove = true;\n           } else {\n             Node specializableFunction =\n               getSpecializableFunctionFromSymbol(declaration);\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 06:51:37.279734609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1553/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 07:10:02.829598063 -0500\n@@ -1424,7 +1424,6 @@\n       }\n       res = n.checkTreeEqualsImpl(n2);\n       if (res != null) {\n-        return res;\n       }\n     }\n     return res;\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 06:51:37.283732609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1553/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 07:10:02.829598063 -0500\n@@ -315,7 +315,7 @@\n           case NUMBER:          return \"NUMBER\";\n           case STRING:          return \"STRING\";\n           case NULL:            return \"NULL\";\n-          case THIS:            return \"THIS\";\n+          case THIS:            ;\n           case FALSE:           return \"FALSE\";\n           case TRUE:            return \"TRUE\";\n           case SHEQ:            return \"SHEQ\";\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 318, 
          "faulty": "return \"THIS\";", 
          "type": "Delete", 
          "seed": "return Token.STRING;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 88, 
          "faulty": "canRemove=true;", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1427, 
          "faulty": "return res;", 
          "type": "Delete", 
          "seed": "return Token.STRING;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:51:37.259744610 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_360/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:59:37.624378102 -0500\n@@ -84,19 +84,6 @@\n         for (Symbol declaration : nameInfo.getDeclarations()) {\n           boolean canRemove = false;\n \n-          if (specializationState == null) {\n-            canRemove = true;\n-          } else {\n-            Node specializableFunction =\n-              getSpecializableFunctionFromSymbol(declaration);\n-\n-            if (specializableFunction != null) {\n-              specializationState.reportRemovedFunction(\n-                  specializableFunction, null);\n-              canRemove = true;\n-            }\n-          }\n-\n           if (canRemove) {\n             declaration.remove();\n             changed = true;\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 87, 
          "faulty": "if (specializationState == null) {\n  canRemove=true;\n}\n else {\n  Node specializableFunction=getSpecializableFunctionFromSymbol(declaration);\n  if (specializableFunction != null) {\n    specializationState.reportRemovedFunction(specializableFunction,null);\n    canRemove=true;\n  }\n}", 
          "type": "Delete", 
          "seed": "return this;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:51:37.259744610 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_377/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:59:47.687529531 -0500\n@@ -96,11 +96,6 @@\n               canRemove = true;\n             }\n           }\n-\n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 06:51:37.283732609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_377/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 06:59:47.691529200 -0500\n@@ -315,7 +315,10 @@\n           case NUMBER:          return \"NUMBER\";\n           case STRING:          return \"STRING\";\n           case NULL:            return \"NULL\";\n-          case THIS:            return \"THIS\";\n+          case THIS:            {\n+\t\t\t\tfinal String defaultResource = \"rhino_ast.java.com.google.javascript.rhino.Messages\";\n+\t\t\t\treturn \"THIS\";\n+\t\t\t}\n           case FALSE:           return \"FALSE\";\n           case TRUE:            return \"TRUE\";\n           case SHEQ:            return \"SHEQ\";\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 318, 
          "faulty": "return \"THIS\";", 
          "type": "InsertBefore", 
          "seed": "final String defaultResource=\"rhino_ast.java.com.google.javascript.rhino.Messages\";"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:51:37.259744610 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_405/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 07:00:03.390272157 -0500\n@@ -96,11 +96,6 @@\n               canRemove = true;\n             }\n           }\n-\n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 06:51:37.283732609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_405/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 07:00:03.390272157 -0500\n@@ -356,7 +356,7 @@\n           case RB:              return \"RB\";\n           case LC:              return \"LC\";\n           case RC:              return \"RC\";\n-          case LP:              return \"LP\";\n+          case LP:              int c = 0;\n           case RP:              return \"RP\";\n           case COMMA:           return \"COMMA\";\n           case ASSIGN:          return \"ASSIGN\";\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 359, 
          "faulty": "return \"LP\";", 
          "type": "Replace", 
          "seed": "int c=0;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:51:37.259744610 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1183/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 07:06:51.864874113 -0500\n@@ -85,7 +85,8 @@\n           boolean canRemove = false;\n \n           if (specializationState == null) {\n-            canRemove = true;\n+            StringBuilder builder = new StringBuilder();\n+\t\t\tcanRemove = true;\n           } else {\n             Node specializableFunction =\n               getSpecializableFunctionFromSymbol(declaration);\n@@ -96,11 +97,6 @@\n               canRemove = true;\n             }\n           }\n-\n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 06:51:37.283732609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1183/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 07:06:51.868874104 -0500\n@@ -315,7 +315,7 @@\n           case NUMBER:          return \"NUMBER\";\n           case STRING:          return \"STRING\";\n           case NULL:            return \"NULL\";\n-          case THIS:            return \"THIS\";\n+          case THIS:            ;\n           case FALSE:           return \"FALSE\";\n           case TRUE:            return \"TRUE\";\n           case SHEQ:            return \"SHEQ\";\n@@ -359,7 +359,7 @@\n           case LP:              return \"LP\";\n           case RP:              return \"RP\";\n           case COMMA:           return \"COMMA\";\n-          case ASSIGN:          return \"ASSIGN\";\n+          case ASSIGN:          ;\n           case ASSIGN_BITOR:    return \"ASSIGN_BITOR\";\n           case ASSIGN_BITXOR:   return \"ASSIGN_BITXOR\";\n           case ASSIGN_BITAND:   return \"ASSIGN_BITAND\";\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 318, 
          "faulty": "return \"THIS\";", 
          "type": "Delete", 
          "seed": "return Token.STRING;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 362, 
          "faulty": "return \"ASSIGN\";", 
          "type": "Delete", 
          "seed": "return Token.LP;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 362, 
          "faulty": "return \"ASSIGN\";", 
          "type": "Delete", 
          "seed": "return Token.LP;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 88, 
          "faulty": "canRemove=true;", 
          "type": "InsertBefore", 
          "seed": "StringBuilder builder=new StringBuilder();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:51:37.259744610 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1872/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 07:12:47.636577636 -0500\n@@ -85,7 +85,6 @@\n           boolean canRemove = false;\n \n           if (specializationState == null) {\n-            canRemove = true;\n           } else {\n             Node specializableFunction =\n               getSpecializableFunctionFromSymbol(declaration);\n@@ -96,11 +95,6 @@\n               canRemove = true;\n             }\n           }\n-\n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 06:51:37.279734609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1872/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 07:12:47.640577692 -0500\n@@ -218,7 +218,7 @@\n         case QUOTED_PROP:        return \"quoted\";\n         case OPT_ARG_NAME:       return \"opt_arg\";\n \n-        case SYNTHETIC_BLOCK_PROP: return \"synthetic\";\n+        case SYNTHETIC_BLOCK_PROP: ;\n         case EMPTY_BLOCK:        return \"empty_block\";\n         case ORIGINALNAME_PROP:  return \"originalname\";\n         case SIDE_EFFECT_FLAGS:  return \"side_effect_flags\";\n@@ -1424,7 +1424,6 @@\n       }\n       res = n.checkTreeEqualsImpl(n2);\n       if (res != null) {\n-        return res;\n       }\n     }\n     return res;\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 06:51:37.283732609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1872/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 07:12:47.640577692 -0500\n@@ -307,7 +307,7 @@\n           case TYPEOF:          return \"TYPEOF\";\n           case GETPROP:         return \"GETPROP\";\n           case SETPROP:         return \"SETPROP\";\n-          case GETELEM:         return \"GETELEM\";\n+          case GETELEM:         ;\n           case SETELEM:         return \"SETELEM\";\n           case CALL:            return \"CALL\";\n           case NAME:            return \"NAME\";\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 88, 
          "faulty": "canRemove=true;", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 221, 
          "faulty": "return \"synthetic\";", 
          "type": "Delete", 
          "seed": "return Token.XMLATTR;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1427, 
          "faulty": "return res;", 
          "type": "Delete", 
          "seed": "return Token.STRING;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 310, 
          "faulty": "return \"GETELEM\";", 
          "type": "Delete", 
          "seed": "consumeToken();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:51:37.259744610 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1351/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 07:08:20.070853942 -0500\n@@ -96,11 +96,6 @@\n               canRemove = true;\n             }\n           }\n-\n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java\t2018-12-02 06:51:39.210768564 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1351/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java\t2018-12-02 07:08:20.070853942 -0500\n@@ -532,7 +532,8 @@\n \n     @Override\n     public void remove() {\n-      NodeUtil.removeChild(exprNode.getParent(), exprNode);\n+      int index = -1;\n+\tNodeUtil.removeChild(exprNode.getParent(), exprNode);\n     }\n \n     @Override\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 06:51:37.283732609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1351/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 07:08:20.070853942 -0500\n@@ -315,7 +315,7 @@\n           case NUMBER:          return \"NUMBER\";\n           case STRING:          return \"STRING\";\n           case NULL:            return \"NULL\";\n-          case THIS:            return \"THIS\";\n+          case THIS:            ;\n           case FALSE:           return \"FALSE\";\n           case TRUE:            return \"TRUE\";\n           case SHEQ:            return \"SHEQ\";\n@@ -359,7 +359,7 @@\n           case LP:              return \"LP\";\n           case RP:              return \"RP\";\n           case COMMA:           return \"COMMA\";\n-          case ASSIGN:          return \"ASSIGN\";\n+          case ASSIGN:          ;\n           case ASSIGN_BITOR:    return \"ASSIGN_BITOR\";\n           case ASSIGN_BITXOR:   return \"ASSIGN_BITXOR\";\n           case ASSIGN_BITAND:   return \"ASSIGN_BITAND\";\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 318, 
          "faulty": "return \"THIS\";", 
          "type": "Delete", 
          "seed": "return Token.STRING;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java", 
          "line": 535, 
          "faulty": "NodeUtil.removeChild(exprNode.getParent(),exprNode);", 
          "type": "InsertBefore", 
          "seed": "int index=-1;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 362, 
          "faulty": "return \"ASSIGN\";", 
          "type": "Delete", 
          "seed": "case 2:"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:51:37.259744610 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_811/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 07:03:40.125769803 -0500\n@@ -85,7 +85,6 @@\n           boolean canRemove = false;\n \n           if (specializationState == null) {\n-            canRemove = true;\n           } else {\n             Node specializableFunction =\n               getSpecializableFunctionFromSymbol(declaration);\n@@ -96,11 +95,6 @@\n               canRemove = true;\n             }\n           }\n-\n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java\t2018-12-02 06:51:39.210768564 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_811/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java\t2018-12-02 07:03:40.125769803 -0500\n@@ -532,7 +532,8 @@\n \n     @Override\n     public void remove() {\n-      NodeUtil.removeChild(exprNode.getParent(), exprNode);\n+      int index = -1;\n+\tNodeUtil.removeChild(exprNode.getParent(), exprNode);\n     }\n \n     @Override\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 06:51:37.283732609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_811/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 07:03:40.129769773 -0500\n@@ -307,7 +307,7 @@\n           case TYPEOF:          return \"TYPEOF\";\n           case GETPROP:         return \"GETPROP\";\n           case SETPROP:         return \"SETPROP\";\n-          case GETELEM:         return \"GETELEM\";\n+          case GETELEM:         ;\n           case SETELEM:         return \"SETELEM\";\n           case CALL:            return \"CALL\";\n           case NAME:            return \"NAME\";\n@@ -359,7 +359,7 @@\n           case LP:              return \"LP\";\n           case RP:              return \"RP\";\n           case COMMA:           return \"COMMA\";\n-          case ASSIGN:          return \"ASSIGN\";\n+          case ASSIGN:          ;\n           case ASSIGN_BITOR:    return \"ASSIGN_BITOR\";\n           case ASSIGN_BITXOR:   return \"ASSIGN_BITXOR\";\n           case ASSIGN_BITAND:   return \"ASSIGN_BITAND\";\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 362, 
          "faulty": "return \"ASSIGN\";", 
          "type": "Delete", 
          "seed": "Node pn=memberExpr(true);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 88, 
          "faulty": "canRemove=true;", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 101, 
          "faulty": "declaration.remove();", 
          "type": "InsertBefore", 
          "seed": "return;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java", 
          "line": 535, 
          "faulty": "NodeUtil.removeChild(exprNode.getParent(),exprNode);", 
          "type": "InsertBefore", 
          "seed": "int index=-1;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 310, 
          "faulty": "return \"GETELEM\";", 
          "type": "Delete", 
          "seed": "if (matchChar('.')) {\n  return Token.DOTDOT;\n}\n else if (matchChar('(')) {\n  return Token.DOTQUERY;\n}\n else {\n  return Token.DOT;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:51:37.259744610 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_817/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 07:03:42.677750868 -0500\n@@ -96,11 +96,6 @@\n               canRemove = true;\n             }\n           }\n-\n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 06:51:37.279734609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_817/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 07:03:42.677750868 -0500\n@@ -1424,7 +1424,6 @@\n       }\n       res = n.checkTreeEqualsImpl(n2);\n       if (res != null) {\n-        return res;\n       }\n     }\n     return res;\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 06:51:37.283732609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_817/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 07:03:42.681750839 -0500\n@@ -315,7 +315,7 @@\n           case NUMBER:          return \"NUMBER\";\n           case STRING:          return \"STRING\";\n           case NULL:            return \"NULL\";\n-          case THIS:            return \"THIS\";\n+          case THIS:            ;\n           case FALSE:           return \"FALSE\";\n           case TRUE:            return \"TRUE\";\n           case SHEQ:            return \"SHEQ\";\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 318, 
          "faulty": "return \"THIS\";", 
          "type": "Delete", 
          "seed": "return Token.XMLATTR;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1427, 
          "faulty": "return res;", 
          "type": "Delete", 
          "seed": "return false;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:51:37.259744610 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_968/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 07:05:00.529277056 -0500\n@@ -97,10 +97,7 @@\n             }\n           }\n \n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n+          return;\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 06:51:37.283732609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_968/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 07:05:00.533277037 -0500\n@@ -315,7 +315,7 @@\n           case NUMBER:          return \"NUMBER\";\n           case STRING:          return \"STRING\";\n           case NULL:            return \"NULL\";\n-          case THIS:            return \"THIS\";\n+          case THIS:            ;\n           case FALSE:           return \"FALSE\";\n           case TRUE:            return \"TRUE\";\n           case SHEQ:            return \"SHEQ\";\n@@ -356,7 +356,7 @@\n           case RB:              return \"RB\";\n           case LC:              return \"LC\";\n           case RC:              return \"RC\";\n-          case LP:              return \"LP\";\n+          case LP:              ;\n           case RP:              return \"RP\";\n           case COMMA:           return \"COMMA\";\n           case ASSIGN:          return \"ASSIGN\";\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 102, 
          "faulty": "changed=true;", 
          "type": "InsertBefore", 
          "seed": "StringBuilder builder=new StringBuilder();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 102, 
          "faulty": "changed=true;", 
          "type": "InsertBefore", 
          "seed": "StringBuilder builder=new StringBuilder();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 318, 
          "faulty": "return \"THIS\";", 
          "type": "Delete", 
          "seed": "return Token.XMLATTR;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "InsertBefore", 
          "seed": "return;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 359, 
          "faulty": "return \"LP\";", 
          "type": "Delete", 
          "seed": "return toString(true,true,true);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:51:37.259744610 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_218/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:58:16.464901094 -0500\n@@ -83,24 +83,6 @@\n       if (!nameInfo.isReferenced()) {\n         for (Symbol declaration : nameInfo.getDeclarations()) {\n           boolean canRemove = false;\n-\n-          if (specializationState == null) {\n-            canRemove = true;\n-          } else {\n-            Node specializableFunction =\n-              getSpecializableFunctionFromSymbol(declaration);\n-\n-            if (specializableFunction != null) {\n-              specializationState.reportRemovedFunction(\n-                  specializableFunction, null);\n-              canRemove = true;\n-            }\n-          }\n-\n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 102, 
          "faulty": "changed=true;", 
          "type": "InsertBefore", 
          "seed": "StringBuilder builder=new StringBuilder();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 87, 
          "faulty": "if (specializationState == null) {\n  canRemove=true;\n}\n else {\n  Node specializableFunction=getSpecializableFunctionFromSymbol(declaration);\n  if (specializableFunction != null) {\n    specializationState.reportRemovedFunction(specializableFunction,null);\n    canRemove=true;\n  }\n}", 
          "type": "Delete", 
          "seed": "return this;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:51:37.259744610 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_752/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 07:03:11.737997227 -0500\n@@ -96,11 +96,6 @@\n               canRemove = true;\n             }\n           }\n-\n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 06:51:37.279734609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_752/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 07:03:11.737997227 -0500\n@@ -218,7 +218,7 @@\n         case QUOTED_PROP:        return \"quoted\";\n         case OPT_ARG_NAME:       return \"opt_arg\";\n \n-        case SYNTHETIC_BLOCK_PROP: return \"synthetic\";\n+        case SYNTHETIC_BLOCK_PROP: ;\n         case EMPTY_BLOCK:        return \"empty_block\";\n         case ORIGINALNAME_PROP:  return \"originalname\";\n         case SIDE_EFFECT_FLAGS:  return \"side_effect_flags\";\n@@ -1424,7 +1424,6 @@\n       }\n       res = n.checkTreeEqualsImpl(n2);\n       if (res != null) {\n-        return res;\n       }\n     }\n     return res;\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 06:51:37.283732609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_752/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 07:03:11.741997194 -0500\n@@ -315,7 +315,7 @@\n           case NUMBER:          return \"NUMBER\";\n           case STRING:          return \"STRING\";\n           case NULL:            return \"NULL\";\n-          case THIS:            return \"THIS\";\n+          case THIS:            ;\n           case FALSE:           return \"FALSE\";\n           case TRUE:            return \"TRUE\";\n           case SHEQ:            return \"SHEQ\";\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 102, 
          "faulty": "changed=true;", 
          "type": "InsertBefore", 
          "seed": "StringBuilder builder=new StringBuilder();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 221, 
          "faulty": "return \"synthetic\";", 
          "type": "Delete", 
          "seed": "consumeToken();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 221, 
          "faulty": "return \"synthetic\";", 
          "type": "Delete", 
          "seed": "consumeToken();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1427, 
          "faulty": "return res;", 
          "type": "Delete", 
          "seed": "boolean first=true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 318, 
          "faulty": "return \"THIS\";", 
          "type": "Delete", 
          "seed": "return Token.XMLATTR;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:51:37.259744610 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_743/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 07:03:07.178036761 -0500\n@@ -85,7 +85,6 @@\n           boolean canRemove = false;\n \n           if (specializationState == null) {\n-            canRemove = true;\n           } else {\n             Node specializableFunction =\n               getSpecializableFunctionFromSymbol(declaration);\n@@ -96,11 +95,6 @@\n               canRemove = true;\n             }\n           }\n-\n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 06:51:37.279734609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_743/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 07:03:07.182036727 -0500\n@@ -937,14 +937,7 @@\n         sb.append(getString());\n       } else if (type == Token.FUNCTION) {\n         sb.append(' ');\n-        // In the case of JsDoc trees, the first child is often not a string\n-        // which causes exceptions to be thrown when calling toString or\n-        // toStringTree.\n-        if (first == null || first.getType() != Token.NAME) {\n-          sb.append(\"<invalid>\");\n-        } else {\n-          sb.append(first.getString());\n-        }\n+        int lineno = getLineno();\n       } else if (this instanceof ScriptOrFnNode) {\n         ScriptOrFnNode sof = (ScriptOrFnNode) this;\n         if (this instanceof FunctionNode) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 88, 
          "faulty": "canRemove=true;", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 943, 
          "faulty": "if (first == null || first.getType() != Token.NAME) {\n  sb.append(\"<invalid>\");\n}\n else {\n  sb.append(first.getString());\n}", 
          "type": "Replace", 
          "seed": "int lineno=getLineno();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:51:37.259744610 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1116/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 07:06:19.756963488 -0500\n@@ -96,11 +96,6 @@\n               canRemove = true;\n             }\n           }\n-\n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 06:51:37.279734609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1116/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 07:06:19.760963476 -0500\n@@ -943,7 +943,6 @@\n         if (first == null || first.getType() != Token.NAME) {\n           sb.append(\"<invalid>\");\n         } else {\n-          sb.append(first.getString());\n         }\n       } else if (this instanceof ScriptOrFnNode) {\n         ScriptOrFnNode sof = (ScriptOrFnNode) this;\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 06:51:37.283732609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1116/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 07:06:19.760963476 -0500\n@@ -315,7 +315,7 @@\n           case NUMBER:          return \"NUMBER\";\n           case STRING:          return \"STRING\";\n           case NULL:            return \"NULL\";\n-          case THIS:            return \"THIS\";\n+          case THIS:            ;\n           case FALSE:           return \"FALSE\";\n           case TRUE:            return \"TRUE\";\n           case SHEQ:            return \"SHEQ\";\n@@ -359,7 +359,7 @@\n           case LP:              return \"LP\";\n           case RP:              return \"RP\";\n           case COMMA:           return \"COMMA\";\n-          case ASSIGN:          return \"ASSIGN\";\n+          case ASSIGN:          ;\n           case ASSIGN_BITOR:    return \"ASSIGN_BITOR\";\n           case ASSIGN_BITXOR:   return \"ASSIGN_BITXOR\";\n           case ASSIGN_BITAND:   return \"ASSIGN_BITAND\";\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 362, 
          "faulty": "return \"ASSIGN\";", 
          "type": "Delete", 
          "seed": "return Token.LP;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 946, 
          "faulty": "sb.append(first.getString());", 
          "type": "Delete", 
          "seed": "matchChar('|');"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 318, 
          "faulty": "return \"THIS\";", 
          "type": "Delete", 
          "seed": "Node pn=memberExpr(true);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:51:37.259744610 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_259/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:58:40.660991797 -0500\n@@ -81,28 +81,6 @@\n     boolean changed = false;\n     for (NameInfo nameInfo : allNameInfo) {\n       if (!nameInfo.isReferenced()) {\n-        for (Symbol declaration : nameInfo.getDeclarations()) {\n-          boolean canRemove = false;\n-\n-          if (specializationState == null) {\n-            canRemove = true;\n-          } else {\n-            Node specializableFunction =\n-              getSpecializableFunctionFromSymbol(declaration);\n-\n-            if (specializableFunction != null) {\n-              specializationState.reportRemovedFunction(\n-                  specializableFunction, null);\n-              canRemove = true;\n-            }\n-          }\n-\n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n-        }\n-\n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n       }\n     }\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 06:51:37.283732609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_259/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 06:58:40.660991797 -0500\n@@ -359,7 +359,7 @@\n           case LP:              return \"LP\";\n           case RP:              return \"RP\";\n           case COMMA:           return \"COMMA\";\n-          case ASSIGN:          return \"ASSIGN\";\n+          case ASSIGN:          Context cx = Context.getCurrentContext();\n           case ASSIGN_BITOR:    return \"ASSIGN_BITOR\";\n           case ASSIGN_BITXOR:   return \"ASSIGN_BITXOR\";\n           case ASSIGN_BITAND:   return \"ASSIGN_BITAND\";\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 84, 
          "faulty": "for (Symbol declaration : nameInfo.getDeclarations()) {\n  boolean canRemove=false;\n  if (specializationState == null) {\n    canRemove=true;\n  }\n else {\n    Node specializableFunction=getSpecializableFunctionFromSymbol(declaration);\n    if (specializableFunction != null) {\n      specializationState.reportRemovedFunction(specializableFunction,null);\n      canRemove=true;\n    }\n  }\n  if (canRemove) {\n    declaration.remove();\n    changed=true;\n  }\n}", 
          "type": "Delete", 
          "seed": "formatConclusion();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 362, 
          "faulty": "return \"ASSIGN\";", 
          "type": "Replace", 
          "seed": "Context cx=Context.getCurrentContext();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:51:37.259744610 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1147/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 07:06:34.868919036 -0500\n@@ -85,7 +85,6 @@\n           boolean canRemove = false;\n \n           if (specializationState == null) {\n-            canRemove = true;\n           } else {\n             Node specializableFunction =\n               getSpecializableFunctionFromSymbol(declaration);\n@@ -96,11 +95,6 @@\n               canRemove = true;\n             }\n           }\n-\n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 06:51:37.279734609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1147/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 07:06:34.868919036 -0500\n@@ -218,7 +218,7 @@\n         case QUOTED_PROP:        return \"quoted\";\n         case OPT_ARG_NAME:       return \"opt_arg\";\n \n-        case SYNTHETIC_BLOCK_PROP: return \"synthetic\";\n+        case SYNTHETIC_BLOCK_PROP: ;\n         case EMPTY_BLOCK:        return \"empty_block\";\n         case ORIGINALNAME_PROP:  return \"originalname\";\n         case SIDE_EFFECT_FLAGS:  return \"side_effect_flags\";\n@@ -937,14 +937,7 @@\n         sb.append(getString());\n       } else if (type == Token.FUNCTION) {\n         sb.append(' ');\n-        // In the case of JsDoc trees, the first child is often not a string\n-        // which causes exceptions to be thrown when calling toString or\n-        // toStringTree.\n-        if (first == null || first.getType() != Token.NAME) {\n-          sb.append(\"<invalid>\");\n-        } else {\n-          sb.append(first.getString());\n-        }\n+        int lineno = getLineno();\n       } else if (this instanceof ScriptOrFnNode) {\n         ScriptOrFnNode sof = (ScriptOrFnNode) this;\n         if (this instanceof FunctionNode) {\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 06:51:37.283732609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1147/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 07:06:34.872919026 -0500\n@@ -307,7 +307,7 @@\n           case TYPEOF:          return \"TYPEOF\";\n           case GETPROP:         return \"GETPROP\";\n           case SETPROP:         return \"SETPROP\";\n-          case GETELEM:         return \"GETELEM\";\n+          case GETELEM:         ;\n           case SETELEM:         return \"SETELEM\";\n           case CALL:            return \"CALL\";\n           case NAME:            return \"NAME\";\n@@ -359,7 +359,7 @@\n           case LP:              return \"LP\";\n           case RP:              return \"RP\";\n           case COMMA:           return \"COMMA\";\n-          case ASSIGN:          return \"ASSIGN\";\n+          case ASSIGN:          Context cx = Context.getCurrentContext();\n           case ASSIGN_BITOR:    return \"ASSIGN_BITOR\";\n           case ASSIGN_BITXOR:   return \"ASSIGN_BITXOR\";\n           case ASSIGN_BITAND:   return \"ASSIGN_BITAND\";\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 88, 
          "faulty": "canRemove=true;", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 943, 
          "faulty": "if (first == null || first.getType() != Token.NAME) {\n  sb.append(\"<invalid>\");\n}\n else {\n  sb.append(first.getString());\n}", 
          "type": "Replace", 
          "seed": "int lineno=getLineno();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 221, 
          "faulty": "return \"synthetic\";", 
          "type": "Delete", 
          "seed": "consumeToken();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 362, 
          "faulty": "return \"ASSIGN\";", 
          "type": "Replace", 
          "seed": "Context cx=Context.getCurrentContext();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 310, 
          "faulty": "return \"GETELEM\";", 
          "type": "Delete", 
          "seed": "int c2=getChar();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:51:37.259744610 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_857/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 07:04:02.589611096 -0500\n@@ -96,11 +96,6 @@\n               canRemove = true;\n             }\n           }\n-\n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 06:51:37.279734609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_857/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 07:04:02.593611070 -0500\n@@ -937,14 +937,7 @@\n         sb.append(getString());\n       } else if (type == Token.FUNCTION) {\n         sb.append(' ');\n-        // In the case of JsDoc trees, the first child is often not a string\n-        // which causes exceptions to be thrown when calling toString or\n-        // toStringTree.\n-        if (first == null || first.getType() != Token.NAME) {\n-          sb.append(\"<invalid>\");\n-        } else {\n-          sb.append(first.getString());\n-        }\n+        int lineno = getLineno();\n       } else if (this instanceof ScriptOrFnNode) {\n         ScriptOrFnNode sof = (ScriptOrFnNode) this;\n         if (this instanceof FunctionNode) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 102, 
          "faulty": "changed=true;", 
          "type": "InsertBefore", 
          "seed": "StringBuilder builder=new StringBuilder();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 943, 
          "faulty": "if (first == null || first.getType() != Token.NAME) {\n  sb.append(\"<invalid>\");\n}\n else {\n  sb.append(first.getString());\n}", 
          "type": "Replace", 
          "seed": "int lineno=getLineno();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:51:37.259744610 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1418/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 07:08:51.463788672 -0500\n@@ -85,7 +85,7 @@\n           boolean canRemove = false;\n \n           if (specializationState == null) {\n-            canRemove = true;\n+            return;\n           } else {\n             Node specializableFunction =\n               getSpecializableFunctionFromSymbol(declaration);\n@@ -96,11 +96,6 @@\n               canRemove = true;\n             }\n           }\n-\n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 06:51:37.279734609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1418/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 07:08:51.467788785 -0500\n@@ -937,14 +937,7 @@\n         sb.append(getString());\n       } else if (type == Token.FUNCTION) {\n         sb.append(' ');\n-        // In the case of JsDoc trees, the first child is often not a string\n-        // which causes exceptions to be thrown when calling toString or\n-        // toStringTree.\n-        if (first == null || first.getType() != Token.NAME) {\n-          sb.append(\"<invalid>\");\n-        } else {\n-          sb.append(first.getString());\n-        }\n+        int lineno = getLineno();\n       } else if (this instanceof ScriptOrFnNode) {\n         ScriptOrFnNode sof = (ScriptOrFnNode) this;\n         if (this instanceof FunctionNode) {\n@@ -1424,7 +1417,6 @@\n       }\n       res = n.checkTreeEqualsImpl(n2);\n       if (res != null) {\n-        return res;\n       }\n     }\n     return res;\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 06:51:37.283732609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1418/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 07:08:51.467788785 -0500\n@@ -315,7 +315,7 @@\n           case NUMBER:          return \"NUMBER\";\n           case STRING:          return \"STRING\";\n           case NULL:            return \"NULL\";\n-          case THIS:            return \"THIS\";\n+          case THIS:            ;\n           case FALSE:           return \"FALSE\";\n           case TRUE:            return \"TRUE\";\n           case SHEQ:            return \"SHEQ\";\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 318, 
          "faulty": "return \"THIS\";", 
          "type": "Delete", 
          "seed": "return Token.STRING;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 88, 
          "faulty": "canRemove=true;", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 943, 
          "faulty": "if (first == null || first.getType() != Token.NAME) {\n  sb.append(\"<invalid>\");\n}\n else {\n  sb.append(first.getString());\n}", 
          "type": "Replace", 
          "seed": "int lineno=getLineno();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1427, 
          "faulty": "return res;", 
          "type": "Delete", 
          "seed": "return Token.STRING;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 88, 
          "faulty": "canRemove=true;", 
          "type": "InsertBefore", 
          "seed": "return;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:51:37.259744610 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1475/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 07:09:22.336620916 -0500\n@@ -81,11 +81,11 @@\n     boolean changed = false;\n     for (NameInfo nameInfo : allNameInfo) {\n       if (!nameInfo.isReferenced()) {\n-        for (Symbol declaration : nameInfo.getDeclarations()) {\n+        int start = 0;\n+\t\tfor (Symbol declaration : nameInfo.getDeclarations()) {\n           boolean canRemove = false;\n \n           if (specializationState == null) {\n-            canRemove = true;\n           } else {\n             Node specializableFunction =\n               getSpecializableFunctionFromSymbol(declaration);\n@@ -96,11 +96,6 @@\n               canRemove = true;\n             }\n           }\n-\n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 06:51:37.279734609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1475/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 07:09:22.336620916 -0500\n@@ -218,7 +218,7 @@\n         case QUOTED_PROP:        return \"quoted\";\n         case OPT_ARG_NAME:       return \"opt_arg\";\n \n-        case SYNTHETIC_BLOCK_PROP: return \"synthetic\";\n+        case SYNTHETIC_BLOCK_PROP: ;\n         case EMPTY_BLOCK:        return \"empty_block\";\n         case ORIGINALNAME_PROP:  return \"originalname\";\n         case SIDE_EFFECT_FLAGS:  return \"side_effect_flags\";\n@@ -937,14 +937,7 @@\n         sb.append(getString());\n       } else if (type == Token.FUNCTION) {\n         sb.append(' ');\n-        // In the case of JsDoc trees, the first child is often not a string\n-        // which causes exceptions to be thrown when calling toString or\n-        // toStringTree.\n-        if (first == null || first.getType() != Token.NAME) {\n-          sb.append(\"<invalid>\");\n-        } else {\n-          sb.append(first.getString());\n-        }\n+        int lineno = getLineno();\n       } else if (this instanceof ScriptOrFnNode) {\n         ScriptOrFnNode sof = (ScriptOrFnNode) this;\n         if (this instanceof FunctionNode) {\n@@ -1424,7 +1417,6 @@\n       }\n       res = n.checkTreeEqualsImpl(n2);\n       if (res != null) {\n-        return res;\n       }\n     }\n     return res;\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 06:51:37.283732609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1475/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 07:09:22.340621019 -0500\n@@ -307,7 +307,7 @@\n           case TYPEOF:          return \"TYPEOF\";\n           case GETPROP:         return \"GETPROP\";\n           case SETPROP:         return \"SETPROP\";\n-          case GETELEM:         return \"GETELEM\";\n+          case GETELEM:         return \"return\";\n           case SETELEM:         return \"SETELEM\";\n           case CALL:            return \"CALL\";\n           case NAME:            return \"NAME\";\n@@ -315,7 +315,7 @@\n           case NUMBER:          return \"NUMBER\";\n           case STRING:          return \"STRING\";\n           case NULL:            return \"NULL\";\n-          case THIS:            return \"THIS\";\n+          case THIS:            ;\n           case FALSE:           return \"FALSE\";\n           case TRUE:            return \"TRUE\";\n           case SHEQ:            return \"SHEQ\";\n@@ -359,7 +359,7 @@\n           case LP:              return \"LP\";\n           case RP:              return \"RP\";\n           case COMMA:           return \"COMMA\";\n-          case ASSIGN:          return \"ASSIGN\";\n+          case ASSIGN:          Context cx = Context.getCurrentContext();\n           case ASSIGN_BITOR:    return \"ASSIGN_BITOR\";\n           case ASSIGN_BITXOR:   return \"ASSIGN_BITXOR\";\n           case ASSIGN_BITAND:   return \"ASSIGN_BITAND\";\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 318, 
          "faulty": "return \"THIS\";", 
          "type": "Delete", 
          "seed": "return Token.STRING;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 88, 
          "faulty": "canRemove=true;", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 943, 
          "faulty": "if (first == null || first.getType() != Token.NAME) {\n  sb.append(\"<invalid>\");\n}\n else {\n  sb.append(first.getString());\n}", 
          "type": "Replace", 
          "seed": "int lineno=getLineno();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1427, 
          "faulty": "return res;", 
          "type": "Delete", 
          "seed": "boolean first=true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 318, 
          "faulty": "return \"THIS\";", 
          "type": "Delete", 
          "seed": "return Token.XMLATTR;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 221, 
          "faulty": "return \"synthetic\";", 
          "type": "Delete", 
          "seed": "return Token.XMLATTR;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 221, 
          "faulty": "return \"synthetic\";", 
          "type": "Delete", 
          "seed": "consumeToken();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 221, 
          "faulty": "return \"synthetic\";", 
          "type": "Delete", 
          "seed": "consumeToken();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 943, 
          "faulty": "if (first == null || first.getType() != Token.NAME) {\n  sb.append(\"<invalid>\");\n}\n else {\n  sb.append(first.getString());\n}", 
          "type": "Replace", 
          "seed": "int lineno=getLineno();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 362, 
          "faulty": "return \"ASSIGN\";", 
          "type": "Replace", 
          "seed": "Context cx=Context.getCurrentContext();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 310, 
          "faulty": "return \"GETELEM\";", 
          "type": "Replace", 
          "seed": "return \"return\";"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 84, 
          "faulty": "for (Symbol declaration : nameInfo.getDeclarations()) {\n  boolean canRemove=false;\n  if (specializationState == null) {\n    canRemove=true;\n  }\n else {\n    Node specializableFunction=getSpecializableFunctionFromSymbol(declaration);\n    if (specializableFunction != null) {\n      specializationState.reportRemovedFunction(specializableFunction,null);\n      canRemove=true;\n    }\n  }\n  if (canRemove) {\n    declaration.remove();\n    changed=true;\n  }\n}", 
          "type": "InsertBefore", 
          "seed": "int start=0;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:51:37.259744610 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1550/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 07:10:01.541568801 -0500\n@@ -85,7 +85,6 @@\n           boolean canRemove = false;\n \n           if (specializationState == null) {\n-            canRemove = true;\n           } else {\n             Node specializableFunction =\n               getSpecializableFunctionFromSymbol(declaration);\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 06:51:37.279734609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1550/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 07:10:01.545568891 -0500\n@@ -937,14 +937,7 @@\n         sb.append(getString());\n       } else if (type == Token.FUNCTION) {\n         sb.append(' ');\n-        // In the case of JsDoc trees, the first child is often not a string\n-        // which causes exceptions to be thrown when calling toString or\n-        // toStringTree.\n-        if (first == null || first.getType() != Token.NAME) {\n-          sb.append(\"<invalid>\");\n-        } else {\n-          sb.append(first.getString());\n-        }\n+        int lineno = getLineno();\n       } else if (this instanceof ScriptOrFnNode) {\n         ScriptOrFnNode sof = (ScriptOrFnNode) this;\n         if (this instanceof FunctionNode) {\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 06:51:37.283732609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1550/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 07:10:01.545568891 -0500\n@@ -307,7 +307,7 @@\n           case TYPEOF:          return \"TYPEOF\";\n           case GETPROP:         return \"GETPROP\";\n           case SETPROP:         return \"SETPROP\";\n-          case GETELEM:         return \"GETELEM\";\n+          case GETELEM:         return \"return\";\n           case SETELEM:         return \"SETELEM\";\n           case CALL:            return \"CALL\";\n           case NAME:            return \"NAME\";\n@@ -315,7 +315,7 @@\n           case NUMBER:          return \"NUMBER\";\n           case STRING:          return \"STRING\";\n           case NULL:            return \"NULL\";\n-          case THIS:            return \"THIS\";\n+          case THIS:            ;\n           case FALSE:           return \"FALSE\";\n           case TRUE:            return \"TRUE\";\n           case SHEQ:            return \"SHEQ\";\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 88, 
          "faulty": "canRemove=true;", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 943, 
          "faulty": "if (first == null || first.getType() != Token.NAME) {\n  sb.append(\"<invalid>\");\n}\n else {\n  sb.append(first.getString());\n}", 
          "type": "Replace", 
          "seed": "int lineno=getLineno();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 310, 
          "faulty": "return \"GETELEM\";", 
          "type": "Replace", 
          "seed": "return \"return\";"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 318, 
          "faulty": "return \"THIS\";", 
          "type": "Delete", 
          "seed": "return Token.ASSIGN;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:51:37.259744610 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1812/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 07:12:16.656114446 -0500\n@@ -85,7 +85,6 @@\n           boolean canRemove = false;\n \n           if (specializationState == null) {\n-            canRemove = true;\n           } else {\n             Node specializableFunction =\n               getSpecializableFunctionFromSymbol(declaration);\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 06:51:37.283732609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1812/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 07:12:16.660114508 -0500\n@@ -307,7 +307,7 @@\n           case TYPEOF:          return \"TYPEOF\";\n           case GETPROP:         return \"GETPROP\";\n           case SETPROP:         return \"SETPROP\";\n-          case GETELEM:         return \"GETELEM\";\n+          case GETELEM:         ;\n           case SETELEM:         return \"SETELEM\";\n           case CALL:            return \"CALL\";\n           case NAME:            return \"NAME\";\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 88, 
          "faulty": "canRemove=true;", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 310, 
          "faulty": "return \"GETELEM\";", 
          "type": "Delete", 
          "seed": "consumeToken();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:51:37.259744610 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_928/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 07:04:39.917384394 -0500\n@@ -96,11 +96,6 @@\n               canRemove = true;\n             }\n           }\n-\n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 06:51:37.283732609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_928/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 07:04:39.921384372 -0500\n@@ -307,7 +307,7 @@\n           case TYPEOF:          return \"TYPEOF\";\n           case GETPROP:         return \"GETPROP\";\n           case SETPROP:         return \"SETPROP\";\n-          case GETELEM:         return \"GETELEM\";\n+          case GETELEM:         ;\n           case SETELEM:         return \"SETELEM\";\n           case CALL:            return \"CALL\";\n           case NAME:            return \"NAME\";\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 310, 
          "faulty": "return \"GETELEM\";", 
          "type": "Delete", 
          "seed": "if (matchChar('.')) {\n  return Token.DOTDOT;\n}\n else if (matchChar('(')) {\n  return Token.DOTQUERY;\n}\n else {\n  return Token.DOT;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:51:37.259744610 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1556/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 07:10:04.173628473 -0500\n@@ -83,24 +83,6 @@\n       if (!nameInfo.isReferenced()) {\n         for (Symbol declaration : nameInfo.getDeclarations()) {\n           boolean canRemove = false;\n-\n-          if (specializationState == null) {\n-            canRemove = true;\n-          } else {\n-            Node specializableFunction =\n-              getSpecializableFunctionFromSymbol(declaration);\n-\n-            if (specializableFunction != null) {\n-              specializationState.reportRemovedFunction(\n-                  specializableFunction, null);\n-              canRemove = true;\n-            }\n-          }\n-\n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 06:51:37.279734609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1556/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 07:10:04.173628473 -0500\n@@ -218,7 +218,7 @@\n         case QUOTED_PROP:        return \"quoted\";\n         case OPT_ARG_NAME:       return \"opt_arg\";\n \n-        case SYNTHETIC_BLOCK_PROP: return \"synthetic\";\n+        case SYNTHETIC_BLOCK_PROP: ;\n         case EMPTY_BLOCK:        return \"empty_block\";\n         case ORIGINALNAME_PROP:  return \"originalname\";\n         case SIDE_EFFECT_FLAGS:  return \"side_effect_flags\";\n@@ -937,14 +937,7 @@\n         sb.append(getString());\n       } else if (type == Token.FUNCTION) {\n         sb.append(' ');\n-        // In the case of JsDoc trees, the first child is often not a string\n-        // which causes exceptions to be thrown when calling toString or\n-        // toStringTree.\n-        if (first == null || first.getType() != Token.NAME) {\n-          sb.append(\"<invalid>\");\n-        } else {\n-          sb.append(first.getString());\n-        }\n+        int lineno = getLineno();\n       } else if (this instanceof ScriptOrFnNode) {\n         ScriptOrFnNode sof = (ScriptOrFnNode) this;\n         if (this instanceof FunctionNode) {\n@@ -1411,7 +1404,8 @@\n    */\n   NodeMismatch checkTreeEqualsImpl(Node node2) {\n     if (!isEquivalentTo(node2, false, false)) {\n-      return new NodeMismatch(this, node2);\n+      boolean nullKey = false;\n+\treturn new NodeMismatch(this, node2);\n     }\n \n     NodeMismatch res = null;\n@@ -1424,7 +1418,6 @@\n       }\n       res = n.checkTreeEqualsImpl(n2);\n       if (res != null) {\n-        return res;\n       }\n     }\n     return res;\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 06:51:37.283732609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1556/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 07:10:04.177628562 -0500\n@@ -359,7 +359,7 @@\n           case LP:              return \"LP\";\n           case RP:              return \"RP\";\n           case COMMA:           return \"COMMA\";\n-          case ASSIGN:          return \"ASSIGN\";\n+          case ASSIGN:          ;\n           case ASSIGN_BITOR:    return \"ASSIGN_BITOR\";\n           case ASSIGN_BITXOR:   return \"ASSIGN_BITXOR\";\n           case ASSIGN_BITAND:   return \"ASSIGN_BITAND\";\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 88, 
          "faulty": "canRemove=true;", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 943, 
          "faulty": "if (first == null || first.getType() != Token.NAME) {\n  sb.append(\"<invalid>\");\n}\n else {\n  sb.append(first.getString());\n}", 
          "type": "Replace", 
          "seed": "int lineno=getLineno();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 221, 
          "faulty": "return \"synthetic\";", 
          "type": "Delete", 
          "seed": "consumeToken();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1427, 
          "faulty": "return res;", 
          "type": "Delete", 
          "seed": "boolean first=true;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 88, 
          "faulty": "canRemove=true;", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 943, 
          "faulty": "if (first == null || first.getType() != Token.NAME) {\n  sb.append(\"<invalid>\");\n}\n else {\n  sb.append(first.getString());\n}", 
          "type": "Replace", 
          "seed": "int lineno=getLineno();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 221, 
          "faulty": "return \"synthetic\";", 
          "type": "Delete", 
          "seed": "consumeToken();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1427, 
          "faulty": "return res;", 
          "type": "Delete", 
          "seed": "boolean first=true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 362, 
          "faulty": "return \"ASSIGN\";", 
          "type": "Delete", 
          "seed": "return Token.LP;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 221, 
          "faulty": "return \"synthetic\";", 
          "type": "Delete", 
          "seed": "return Token.XMLATTR;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 221, 
          "faulty": "return \"synthetic\";", 
          "type": "Delete", 
          "seed": "consumeToken();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1427, 
          "faulty": "return res;", 
          "type": "Delete", 
          "seed": "return Token.STRING;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1414, 
          "faulty": "return new NodeMismatch(this,node2);", 
          "type": "InsertBefore", 
          "seed": "boolean nullKey=false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 87, 
          "faulty": "if (specializationState == null) {\n  canRemove=true;\n}\n else {\n  Node specializableFunction=getSpecializableFunctionFromSymbol(declaration);\n  if (specializableFunction != null) {\n    specializationState.reportRemovedFunction(specializableFunction,null);\n    canRemove=true;\n  }\n}", 
          "type": "Delete", 
          "seed": "break;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:51:37.259744610 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1777/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 07:11:58.739829135 -0500\n@@ -85,7 +85,6 @@\n           boolean canRemove = false;\n \n           if (specializationState == null) {\n-            canRemove = true;\n           } else {\n             Node specializableFunction =\n               getSpecializableFunctionFromSymbol(declaration);\n@@ -96,11 +95,6 @@\n               canRemove = true;\n             }\n           }\n-\n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 06:51:37.279734609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1777/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 07:11:58.739829135 -0500\n@@ -1424,7 +1424,6 @@\n       }\n       res = n.checkTreeEqualsImpl(n2);\n       if (res != null) {\n-        return res;\n       }\n     }\n     return res;\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 06:51:37.283732609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1777/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 07:11:58.743829201 -0500\n@@ -315,7 +315,10 @@\n           case NUMBER:          return \"NUMBER\";\n           case STRING:          return \"STRING\";\n           case NULL:            return \"NULL\";\n-          case THIS:            return \"THIS\";\n+          case THIS:            {\n+\t\t\t\tStringBuilder sb = new StringBuilder();\n+\t\t\t\treturn \"THIS\";\n+\t\t\t}\n           case FALSE:           return \"FALSE\";\n           case TRUE:            return \"TRUE\";\n           case SHEQ:            return \"SHEQ\";\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 318, 
          "faulty": "return \"THIS\";", 
          "type": "Delete", 
          "seed": "return Token.STRING;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 88, 
          "faulty": "canRemove=true;", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 318, 
          "faulty": "return \"THIS\";", 
          "type": "Delete", 
          "seed": "return Token.STRING;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1427, 
          "faulty": "return res;", 
          "type": "Replace", 
          "seed": "Kit.codeBug();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 88, 
          "faulty": "canRemove=true;", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1427, 
          "faulty": "return res;", 
          "type": "Delete", 
          "seed": "return Token.STRING;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 318, 
          "faulty": "return \"THIS\";", 
          "type": "InsertBefore", 
          "seed": "StringBuilder sb=new StringBuilder();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:51:37.259744610 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1187/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 07:06:53.836869233 -0500\n@@ -85,7 +85,6 @@\n           boolean canRemove = false;\n \n           if (specializationState == null) {\n-            canRemove = true;\n           } else {\n             Node specializableFunction =\n               getSpecializableFunctionFromSymbol(declaration);\n@@ -96,11 +95,6 @@\n               canRemove = true;\n             }\n           }\n-\n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 06:51:37.279734609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1187/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 07:06:53.836869233 -0500\n@@ -218,7 +218,7 @@\n         case QUOTED_PROP:        return \"quoted\";\n         case OPT_ARG_NAME:       return \"opt_arg\";\n \n-        case SYNTHETIC_BLOCK_PROP: return \"synthetic\";\n+        case SYNTHETIC_BLOCK_PROP: ;\n         case EMPTY_BLOCK:        return \"empty_block\";\n         case ORIGINALNAME_PROP:  return \"originalname\";\n         case SIDE_EFFECT_FLAGS:  return \"side_effect_flags\";\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 06:51:37.283732609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1187/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 07:06:53.836869233 -0500\n@@ -359,7 +359,7 @@\n           case LP:              return \"LP\";\n           case RP:              return \"RP\";\n           case COMMA:           return \"COMMA\";\n-          case ASSIGN:          return \"ASSIGN\";\n+          case ASSIGN:          ;\n           case ASSIGN_BITOR:    return \"ASSIGN_BITOR\";\n           case ASSIGN_BITXOR:   return \"ASSIGN_BITXOR\";\n           case ASSIGN_BITAND:   return \"ASSIGN_BITAND\";\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 88, 
          "faulty": "canRemove=true;", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 221, 
          "faulty": "return \"synthetic\";", 
          "type": "Delete", 
          "seed": "consumeToken();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 221, 
          "faulty": "return \"synthetic\";", 
          "type": "Delete", 
          "seed": "consumeToken();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 362, 
          "faulty": "return \"ASSIGN\";", 
          "type": "Delete", 
          "seed": "return Token.LP;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:51:37.259744610 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1737/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 07:11:37.863479033 -0500\n@@ -83,24 +83,6 @@\n       if (!nameInfo.isReferenced()) {\n         for (Symbol declaration : nameInfo.getDeclarations()) {\n           boolean canRemove = false;\n-\n-          if (specializationState == null) {\n-            canRemove = true;\n-          } else {\n-            Node specializableFunction =\n-              getSpecializableFunctionFromSymbol(declaration);\n-\n-            if (specializableFunction != null) {\n-              specializationState.reportRemovedFunction(\n-                  specializableFunction, null);\n-              canRemove = true;\n-            }\n-          }\n-\n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 06:51:37.279734609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1737/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 07:11:37.867479102 -0500\n@@ -1411,7 +1411,8 @@\n    */\n   NodeMismatch checkTreeEqualsImpl(Node node2) {\n     if (!isEquivalentTo(node2, false, false)) {\n-      return new NodeMismatch(this, node2);\n+      boolean nullKey = false;\n+\treturn new NodeMismatch(this, node2);\n     }\n \n     NodeMismatch res = null;\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 88, 
          "faulty": "canRemove=true;", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1414, 
          "faulty": "return new NodeMismatch(this,node2);", 
          "type": "InsertBefore", 
          "seed": "boolean nullKey=false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 87, 
          "faulty": "if (specializationState == null) {\n  canRemove=true;\n}\n else {\n  Node specializableFunction=getSpecializableFunctionFromSymbol(declaration);\n  if (specializableFunction != null) {\n    specializationState.reportRemovedFunction(specializableFunction,null);\n    canRemove=true;\n  }\n}", 
          "type": "Delete", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 88, 
          "faulty": "canRemove=true;", 
          "type": "Replace", 
          "seed": "formatConclusion();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:51:37.259744610 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1261/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 07:07:34.905328954 -0500\n@@ -85,7 +85,6 @@\n           boolean canRemove = false;\n \n           if (specializationState == null) {\n-            canRemove = true;\n           } else {\n             Node specializableFunction =\n               getSpecializableFunctionFromSymbol(declaration);\n@@ -96,11 +95,6 @@\n               canRemove = true;\n             }\n           }\n-\n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 06:51:37.279734609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1261/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 07:07:34.909329100 -0500\n@@ -218,7 +218,7 @@\n         case QUOTED_PROP:        return \"quoted\";\n         case OPT_ARG_NAME:       return \"opt_arg\";\n \n-        case SYNTHETIC_BLOCK_PROP: return \"synthetic\";\n+        case SYNTHETIC_BLOCK_PROP: ;\n         case EMPTY_BLOCK:        return \"empty_block\";\n         case ORIGINALNAME_PROP:  return \"originalname\";\n         case SIDE_EFFECT_FLAGS:  return \"side_effect_flags\";\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 06:51:37.283732609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1261/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 07:07:34.909329100 -0500\n@@ -315,7 +315,7 @@\n           case NUMBER:          return \"NUMBER\";\n           case STRING:          return \"STRING\";\n           case NULL:            return \"NULL\";\n-          case THIS:            return \"THIS\";\n+          case THIS:            ;\n           case FALSE:           return \"FALSE\";\n           case TRUE:            return \"TRUE\";\n           case SHEQ:            return \"SHEQ\";\n@@ -359,7 +359,7 @@\n           case LP:              return \"LP\";\n           case RP:              return \"RP\";\n           case COMMA:           return \"COMMA\";\n-          case ASSIGN:          return \"ASSIGN\";\n+          case ASSIGN:          Context cx = Context.getCurrentContext();\n           case ASSIGN_BITOR:    return \"ASSIGN_BITOR\";\n           case ASSIGN_BITXOR:   return \"ASSIGN_BITXOR\";\n           case ASSIGN_BITAND:   return \"ASSIGN_BITAND\";\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 318, 
          "faulty": "return \"THIS\";", 
          "type": "Delete", 
          "seed": "return Token.STRING;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 362, 
          "faulty": "return \"ASSIGN\";", 
          "type": "Delete", 
          "seed": "return Token.LP;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 88, 
          "faulty": "canRemove=true;", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 221, 
          "faulty": "return \"synthetic\";", 
          "type": "Delete", 
          "seed": "consumeToken();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 362, 
          "faulty": "return \"ASSIGN\";", 
          "type": "Replace", 
          "seed": "Context cx=Context.getCurrentContext();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:51:37.259744610 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_945/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 07:04:48.265339484 -0500\n@@ -85,7 +85,6 @@\n           boolean canRemove = false;\n \n           if (specializationState == null) {\n-            canRemove = true;\n           } else {\n             Node specializableFunction =\n               getSpecializableFunctionFromSymbol(declaration);\n@@ -96,11 +95,6 @@\n               canRemove = true;\n             }\n           }\n-\n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 06:51:37.279734609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_945/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 07:04:48.265339484 -0500\n@@ -218,7 +218,7 @@\n         case QUOTED_PROP:        return \"quoted\";\n         case OPT_ARG_NAME:       return \"opt_arg\";\n \n-        case SYNTHETIC_BLOCK_PROP: return \"synthetic\";\n+        case SYNTHETIC_BLOCK_PROP: ;\n         case EMPTY_BLOCK:        return \"empty_block\";\n         case ORIGINALNAME_PROP:  return \"originalname\";\n         case SIDE_EFFECT_FLAGS:  return \"side_effect_flags\";\n@@ -937,14 +937,7 @@\n         sb.append(getString());\n       } else if (type == Token.FUNCTION) {\n         sb.append(' ');\n-        // In the case of JsDoc trees, the first child is often not a string\n-        // which causes exceptions to be thrown when calling toString or\n-        // toStringTree.\n-        if (first == null || first.getType() != Token.NAME) {\n-          sb.append(\"<invalid>\");\n-        } else {\n-          sb.append(first.getString());\n-        }\n+        int lineno = getLineno();\n       } else if (this instanceof ScriptOrFnNode) {\n         ScriptOrFnNode sof = (ScriptOrFnNode) this;\n         if (this instanceof FunctionNode) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 88, 
          "faulty": "canRemove=true;", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 943, 
          "faulty": "if (first == null || first.getType() != Token.NAME) {\n  sb.append(\"<invalid>\");\n}\n else {\n  sb.append(first.getString());\n}", 
          "type": "Replace", 
          "seed": "int lineno=getLineno();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 221, 
          "faulty": "return \"synthetic\";", 
          "type": "Delete", 
          "seed": "boolean nullKey=false;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:51:37.259744610 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1609/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 07:10:30.986210307 -0500\n@@ -85,7 +85,6 @@\n           boolean canRemove = false;\n \n           if (specializationState == null) {\n-            canRemove = true;\n           } else {\n             Node specializableFunction =\n               getSpecializableFunctionFromSymbol(declaration);\n@@ -96,11 +95,6 @@\n               canRemove = true;\n             }\n           }\n-\n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 06:51:37.279734609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1609/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 07:10:30.986210307 -0500\n@@ -218,7 +218,7 @@\n         case QUOTED_PROP:        return \"quoted\";\n         case OPT_ARG_NAME:       return \"opt_arg\";\n \n-        case SYNTHETIC_BLOCK_PROP: return \"synthetic\";\n+        case SYNTHETIC_BLOCK_PROP: ;\n         case EMPTY_BLOCK:        return \"empty_block\";\n         case ORIGINALNAME_PROP:  return \"originalname\";\n         case SIDE_EFFECT_FLAGS:  return \"side_effect_flags\";\n@@ -937,14 +937,7 @@\n         sb.append(getString());\n       } else if (type == Token.FUNCTION) {\n         sb.append(' ');\n-        // In the case of JsDoc trees, the first child is often not a string\n-        // which causes exceptions to be thrown when calling toString or\n-        // toStringTree.\n-        if (first == null || first.getType() != Token.NAME) {\n-          sb.append(\"<invalid>\");\n-        } else {\n-          sb.append(first.getString());\n-        }\n+        int lineno = getLineno();\n       } else if (this instanceof ScriptOrFnNode) {\n         ScriptOrFnNode sof = (ScriptOrFnNode) this;\n         if (this instanceof FunctionNode) {\n@@ -1424,7 +1417,7 @@\n       }\n       res = n.checkTreeEqualsImpl(n2);\n       if (res != null) {\n-        return res;\n+        Kit.codeBug();\n       }\n     }\n     return res;\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 06:51:37.283732609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1609/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 07:10:30.990210390 -0500\n@@ -315,7 +315,7 @@\n           case NUMBER:          return \"NUMBER\";\n           case STRING:          return \"STRING\";\n           case NULL:            return \"NULL\";\n-          case THIS:            return \"THIS\";\n+          case THIS:            ;\n           case FALSE:           return \"FALSE\";\n           case TRUE:            return \"TRUE\";\n           case SHEQ:            return \"SHEQ\";\n@@ -359,7 +359,7 @@\n           case LP:              return \"LP\";\n           case RP:              return \"RP\";\n           case COMMA:           return \"COMMA\";\n-          case ASSIGN:          return \"ASSIGN\";\n+          case ASSIGN:          ;\n           case ASSIGN_BITOR:    return \"ASSIGN_BITOR\";\n           case ASSIGN_BITXOR:   return \"ASSIGN_BITXOR\";\n           case ASSIGN_BITAND:   return \"ASSIGN_BITAND\";\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 88, 
          "faulty": "canRemove=true;", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 943, 
          "faulty": "if (first == null || first.getType() != Token.NAME) {\n  sb.append(\"<invalid>\");\n}\n else {\n  sb.append(first.getString());\n}", 
          "type": "Replace", 
          "seed": "int lineno=getLineno();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 221, 
          "faulty": "return \"synthetic\";", 
          "type": "Delete", 
          "seed": "consumeToken();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1427, 
          "faulty": "return res;", 
          "type": "Delete", 
          "seed": "boolean first=true;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 88, 
          "faulty": "canRemove=true;", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 943, 
          "faulty": "if (first == null || first.getType() != Token.NAME) {\n  sb.append(\"<invalid>\");\n}\n else {\n  sb.append(first.getString());\n}", 
          "type": "Replace", 
          "seed": "int lineno=getLineno();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 221, 
          "faulty": "return \"synthetic\";", 
          "type": "Delete", 
          "seed": "consumeToken();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1427, 
          "faulty": "return res;", 
          "type": "Delete", 
          "seed": "boolean first=true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 362, 
          "faulty": "return \"ASSIGN\";", 
          "type": "Delete", 
          "seed": "return Token.LP;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 221, 
          "faulty": "return \"synthetic\";", 
          "type": "Delete", 
          "seed": "return Token.XMLATTR;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 88, 
          "faulty": "canRemove=true;", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 318, 
          "faulty": "return \"THIS\";", 
          "type": "Delete", 
          "seed": "return Token.STRING;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1427, 
          "faulty": "return res;", 
          "type": "Replace", 
          "seed": "Kit.codeBug();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:51:37.259744610 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1558/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 07:10:04.817642999 -0500\n@@ -85,7 +85,6 @@\n           boolean canRemove = false;\n \n           if (specializationState == null) {\n-            canRemove = true;\n           } else {\n             Node specializableFunction =\n               getSpecializableFunctionFromSymbol(declaration);\n@@ -96,11 +95,6 @@\n               canRemove = true;\n             }\n           }\n-\n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 06:51:37.279734609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1558/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 07:10:04.817642999 -0500\n@@ -218,7 +218,7 @@\n         case QUOTED_PROP:        return \"quoted\";\n         case OPT_ARG_NAME:       return \"opt_arg\";\n \n-        case SYNTHETIC_BLOCK_PROP: return \"synthetic\";\n+        case SYNTHETIC_BLOCK_PROP: ;\n         case EMPTY_BLOCK:        return \"empty_block\";\n         case ORIGINALNAME_PROP:  return \"originalname\";\n         case SIDE_EFFECT_FLAGS:  return \"side_effect_flags\";\n@@ -937,14 +937,7 @@\n         sb.append(getString());\n       } else if (type == Token.FUNCTION) {\n         sb.append(' ');\n-        // In the case of JsDoc trees, the first child is often not a string\n-        // which causes exceptions to be thrown when calling toString or\n-        // toStringTree.\n-        if (first == null || first.getType() != Token.NAME) {\n-          sb.append(\"<invalid>\");\n-        } else {\n-          sb.append(first.getString());\n-        }\n+        int lineno = getLineno();\n       } else if (this instanceof ScriptOrFnNode) {\n         ScriptOrFnNode sof = (ScriptOrFnNode) this;\n         if (this instanceof FunctionNode) {\n@@ -1411,7 +1404,8 @@\n    */\n   NodeMismatch checkTreeEqualsImpl(Node node2) {\n     if (!isEquivalentTo(node2, false, false)) {\n-      return new NodeMismatch(this, node2);\n+      boolean nullKey = false;\n+\treturn new NodeMismatch(this, node2);\n     }\n \n     NodeMismatch res = null;\n@@ -1424,7 +1418,6 @@\n       }\n       res = n.checkTreeEqualsImpl(n2);\n       if (res != null) {\n-        return res;\n       }\n     }\n     return res;\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 06:51:37.283732609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1558/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 07:10:04.821643090 -0500\n@@ -315,7 +315,7 @@\n           case NUMBER:          return \"NUMBER\";\n           case STRING:          return \"STRING\";\n           case NULL:            return \"NULL\";\n-          case THIS:            return \"THIS\";\n+          case THIS:            ;\n           case FALSE:           return \"FALSE\";\n           case TRUE:            return \"TRUE\";\n           case SHEQ:            return \"SHEQ\";\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 318, 
          "faulty": "return \"THIS\";", 
          "type": "Delete", 
          "seed": "return Token.STRING;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 88, 
          "faulty": "canRemove=true;", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 943, 
          "faulty": "if (first == null || first.getType() != Token.NAME) {\n  sb.append(\"<invalid>\");\n}\n else {\n  sb.append(first.getString());\n}", 
          "type": "Replace", 
          "seed": "int lineno=getLineno();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1427, 
          "faulty": "return res;", 
          "type": "Delete", 
          "seed": "return Token.STRING;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 943, 
          "faulty": "if (first == null || first.getType() != Token.NAME) {\n  sb.append(\"<invalid>\");\n}\n else {\n  sb.append(first.getString());\n}", 
          "type": "Replace", 
          "seed": "int lineno=getLineno();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1427, 
          "faulty": "return res;", 
          "type": "Delete", 
          "seed": "boolean first=true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 318, 
          "faulty": "return \"THIS\";", 
          "type": "Delete", 
          "seed": "return Token.XMLATTR;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 221, 
          "faulty": "return \"synthetic\";", 
          "type": "Delete", 
          "seed": "return Token.XMLATTR;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 221, 
          "faulty": "return \"synthetic\";", 
          "type": "Delete", 
          "seed": "consumeToken();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1427, 
          "faulty": "return res;", 
          "type": "Delete", 
          "seed": "return Token.STRING;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1414, 
          "faulty": "return new NodeMismatch(this,node2);", 
          "type": "InsertBefore", 
          "seed": "boolean nullKey=false;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:51:37.259744610 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_169/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:57:50.812661133 -0500\n@@ -96,11 +96,6 @@\n               canRemove = true;\n             }\n           }\n-\n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 06:51:37.279734609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_169/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 06:57:50.816661181 -0500\n@@ -218,7 +218,7 @@\n         case QUOTED_PROP:        return \"quoted\";\n         case OPT_ARG_NAME:       return \"opt_arg\";\n \n-        case SYNTHETIC_BLOCK_PROP: return \"synthetic\";\n+        case SYNTHETIC_BLOCK_PROP: ;\n         case EMPTY_BLOCK:        return \"empty_block\";\n         case ORIGINALNAME_PROP:  return \"originalname\";\n         case SIDE_EFFECT_FLAGS:  return \"side_effect_flags\";\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 221, 
          "faulty": "return \"synthetic\";", 
          "type": "Delete", 
          "seed": "consumeToken();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:51:37.259744610 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1098/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 07:06:11.284990364 -0500\n@@ -96,11 +96,6 @@\n               canRemove = true;\n             }\n           }\n-\n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n@@ -108,7 +103,8 @@\n     }\n \n     if (changed) {\n-      compiler.reportCodeChange();\n+      int index = -1;\n+\tcompiler.reportCodeChange();\n     }\n   }\n \n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 06:51:37.279734609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1098/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 07:06:11.284990364 -0500\n@@ -218,7 +218,7 @@\n         case QUOTED_PROP:        return \"quoted\";\n         case OPT_ARG_NAME:       return \"opt_arg\";\n \n-        case SYNTHETIC_BLOCK_PROP: return \"synthetic\";\n+        case SYNTHETIC_BLOCK_PROP: ;\n         case EMPTY_BLOCK:        return \"empty_block\";\n         case ORIGINALNAME_PROP:  return \"originalname\";\n         case SIDE_EFFECT_FLAGS:  return \"side_effect_flags\";\n@@ -1424,7 +1424,6 @@\n       }\n       res = n.checkTreeEqualsImpl(n2);\n       if (res != null) {\n-        return res;\n       }\n     }\n     return res;\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 06:51:37.283732609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1098/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 07:06:11.284990364 -0500\n@@ -307,7 +307,7 @@\n           case TYPEOF:          return \"TYPEOF\";\n           case GETPROP:         return \"GETPROP\";\n           case SETPROP:         return \"SETPROP\";\n-          case GETELEM:         return \"GETELEM\";\n+          case GETELEM:         ;\n           case SETELEM:         return \"SETELEM\";\n           case CALL:            return \"CALL\";\n           case NAME:            return \"NAME\";\n@@ -315,7 +315,7 @@\n           case NUMBER:          return \"NUMBER\";\n           case STRING:          return \"STRING\";\n           case NULL:            return \"NULL\";\n-          case THIS:            return \"THIS\";\n+          case THIS:            ;\n           case FALSE:           return \"FALSE\";\n           case TRUE:            return \"TRUE\";\n           case SHEQ:            return \"SHEQ\";\n@@ -359,7 +359,7 @@\n           case LP:              return \"LP\";\n           case RP:              return \"RP\";\n           case COMMA:           return \"COMMA\";\n-          case ASSIGN:          return \"ASSIGN\";\n+          case ASSIGN:          ;\n           case ASSIGN_BITOR:    return \"ASSIGN_BITOR\";\n           case ASSIGN_BITXOR:   return \"ASSIGN_BITXOR\";\n           case ASSIGN_BITAND:   return \"ASSIGN_BITAND\";\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 221, 
          "faulty": "return \"synthetic\";", 
          "type": "Delete", 
          "seed": "consumeToken();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1427, 
          "faulty": "return res;", 
          "type": "Delete", 
          "seed": "boolean first=true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 318, 
          "faulty": "return \"THIS\";", 
          "type": "Delete", 
          "seed": "return Token.XMLATTR;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 221, 
          "faulty": "return \"synthetic\";", 
          "type": "Delete", 
          "seed": "return Token.XMLATTR;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 318, 
          "faulty": "return \"THIS\";", 
          "type": "Delete", 
          "seed": "return Token.STRING;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 362, 
          "faulty": "return \"ASSIGN\";", 
          "type": "Delete", 
          "seed": "return Token.LP;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1427, 
          "faulty": "return res;", 
          "type": "Delete", 
          "seed": "return Token.STRING;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 111, 
          "faulty": "compiler.reportCodeChange();", 
          "type": "InsertBefore", 
          "seed": "int index=-1;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 310, 
          "faulty": "return \"GETELEM\";", 
          "type": "Delete", 
          "seed": "return Token.LC;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:51:37.259744610 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1908/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 07:13:06.420841441 -0500\n@@ -85,7 +85,6 @@\n           boolean canRemove = false;\n \n           if (specializationState == null) {\n-            canRemove = true;\n           } else {\n             Node specializableFunction =\n               getSpecializableFunctionFromSymbol(declaration);\n@@ -96,11 +95,6 @@\n               canRemove = true;\n             }\n           }\n-\n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 06:51:37.279734609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1908/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 07:13:06.420841441 -0500\n@@ -218,7 +218,7 @@\n         case QUOTED_PROP:        return \"quoted\";\n         case OPT_ARG_NAME:       return \"opt_arg\";\n \n-        case SYNTHETIC_BLOCK_PROP: return \"synthetic\";\n+        case SYNTHETIC_BLOCK_PROP: ;\n         case EMPTY_BLOCK:        return \"empty_block\";\n         case ORIGINALNAME_PROP:  return \"originalname\";\n         case SIDE_EFFECT_FLAGS:  return \"side_effect_flags\";\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 06:51:37.283732609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1908/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 07:13:06.424841496 -0500\n@@ -307,7 +307,7 @@\n           case TYPEOF:          return \"TYPEOF\";\n           case GETPROP:         return \"GETPROP\";\n           case SETPROP:         return \"SETPROP\";\n-          case GETELEM:         return \"GETELEM\";\n+          case GETELEM:         ;\n           case SETELEM:         return \"SETELEM\";\n           case CALL:            return \"CALL\";\n           case NAME:            return \"NAME\";\n@@ -315,7 +315,7 @@\n           case NUMBER:          return \"NUMBER\";\n           case STRING:          return \"STRING\";\n           case NULL:            return \"NULL\";\n-          case THIS:            return \"THIS\";\n+          case THIS:            ;\n           case FALSE:           return \"FALSE\";\n           case TRUE:            return \"TRUE\";\n           case SHEQ:            return \"SHEQ\";\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 88, 
          "faulty": "canRemove=true;", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 221, 
          "faulty": "return \"synthetic\";", 
          "type": "Delete", 
          "seed": "return Token.XMLATTR;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 318, 
          "faulty": "return \"THIS\";", 
          "type": "Delete", 
          "seed": "return Token.STRING;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 310, 
          "faulty": "return \"GETELEM\";", 
          "type": "Delete", 
          "seed": "consumeToken();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:51:37.259744610 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1502/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 07:09:37.873010266 -0500\n@@ -82,10 +82,10 @@\n     for (NameInfo nameInfo : allNameInfo) {\n       if (!nameInfo.isReferenced()) {\n         for (Symbol declaration : nameInfo.getDeclarations()) {\n-          boolean canRemove = false;\n+          boolean valid = false;\n+\t\tboolean canRemove = false;\n \n           if (specializationState == null) {\n-            canRemove = true;\n           } else {\n             Node specializableFunction =\n               getSpecializableFunctionFromSymbol(declaration);\n@@ -96,11 +96,6 @@\n               canRemove = true;\n             }\n           }\n-\n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java\t2018-12-02 06:51:39.210768564 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1502/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java\t2018-12-02 07:09:37.873010266 -0500\n@@ -532,7 +532,8 @@\n \n     @Override\n     public void remove() {\n-      NodeUtil.removeChild(exprNode.getParent(), exprNode);\n+      int index = -1;\n+\tNodeUtil.removeChild(exprNode.getParent(), exprNode);\n     }\n \n     @Override\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 06:51:37.283732609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1502/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 07:09:37.873010266 -0500\n@@ -359,7 +359,7 @@\n           case LP:              return \"LP\";\n           case RP:              return \"RP\";\n           case COMMA:           return \"COMMA\";\n-          case ASSIGN:          return \"ASSIGN\";\n+          case ASSIGN:          ;\n           case ASSIGN_BITOR:    return \"ASSIGN_BITOR\";\n           case ASSIGN_BITXOR:   return \"ASSIGN_BITXOR\";\n           case ASSIGN_BITAND:   return \"ASSIGN_BITAND\";\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java", 
          "line": 535, 
          "faulty": "NodeUtil.removeChild(exprNode.getParent(),exprNode);", 
          "type": "InsertBefore", 
          "seed": "int index=-1;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 362, 
          "faulty": "return \"ASSIGN\";", 
          "type": "Delete", 
          "seed": "case 2:"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 85, 
          "faulty": "boolean canRemove=false;", 
          "type": "InsertBefore", 
          "seed": "boolean valid=false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 88, 
          "faulty": "canRemove=true;", 
          "type": "Delete", 
          "seed": "return this;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:51:37.259744610 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_425/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 07:00:14.873401709 -0500\n@@ -85,7 +85,6 @@\n           boolean canRemove = false;\n \n           if (specializationState == null) {\n-            canRemove = true;\n           } else {\n             Node specializableFunction =\n               getSpecializableFunctionFromSymbol(declaration);\n@@ -99,7 +98,6 @@\n \n           if (canRemove) {\n             declaration.remove();\n-            changed = true;\n           }\n         }\n \n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 06:51:37.283732609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_425/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 07:00:14.877401412 -0500\n@@ -359,7 +359,7 @@\n           case LP:              return \"LP\";\n           case RP:              return \"RP\";\n           case COMMA:           return \"COMMA\";\n-          case ASSIGN:          return \"ASSIGN\";\n+          case ASSIGN:          ;\n           case ASSIGN_BITOR:    return \"ASSIGN_BITOR\";\n           case ASSIGN_BITXOR:   return \"ASSIGN_BITXOR\";\n           case ASSIGN_BITAND:   return \"ASSIGN_BITAND\";\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 362, 
          "faulty": "return \"ASSIGN\";", 
          "type": "Delete", 
          "seed": "Node pn=memberExpr(true);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 88, 
          "faulty": "canRemove=true;", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 102, 
          "faulty": "changed=true;", 
          "type": "Delete", 
          "seed": "break;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:51:37.259744610 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_622/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 07:02:03.566686760 -0500\n@@ -96,11 +96,6 @@\n               canRemove = true;\n             }\n           }\n-\n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 06:51:37.279734609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_622/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 07:02:03.566686760 -0500\n@@ -218,7 +218,7 @@\n         case QUOTED_PROP:        return \"quoted\";\n         case OPT_ARG_NAME:       return \"opt_arg\";\n \n-        case SYNTHETIC_BLOCK_PROP: return \"synthetic\";\n+        case SYNTHETIC_BLOCK_PROP: ;\n         case EMPTY_BLOCK:        return \"empty_block\";\n         case ORIGINALNAME_PROP:  return \"originalname\";\n         case SIDE_EFFECT_FLAGS:  return \"side_effect_flags\";\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 06:51:37.283732609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_622/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 07:02:03.566686760 -0500\n@@ -307,7 +307,7 @@\n           case TYPEOF:          return \"TYPEOF\";\n           case GETPROP:         return \"GETPROP\";\n           case SETPROP:         return \"SETPROP\";\n-          case GETELEM:         return \"GETELEM\";\n+          case GETELEM:         ;\n           case SETELEM:         return \"SETELEM\";\n           case CALL:            return \"CALL\";\n           case NAME:            return \"NAME\";\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 102, 
          "faulty": "changed=true;", 
          "type": "InsertBefore", 
          "seed": "StringBuilder builder=new StringBuilder();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 221, 
          "faulty": "return \"synthetic\";", 
          "type": "Delete", 
          "seed": "consumeToken();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 310, 
          "faulty": "return \"GETELEM\";", 
          "type": "Delete", 
          "seed": "String namespace=null;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:51:37.259744610 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1743/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 07:11:40.415522898 -0500\n@@ -84,23 +84,7 @@\n         for (Symbol declaration : nameInfo.getDeclarations()) {\n           boolean canRemove = false;\n \n-          if (specializationState == null) {\n-            canRemove = true;\n-          } else {\n-            Node specializableFunction =\n-              getSpecializableFunctionFromSymbol(declaration);\n-\n-            if (specializableFunction != null) {\n-              specializationState.reportRemovedFunction(\n-                  specializableFunction, null);\n-              canRemove = true;\n-            }\n-          }\n-\n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n+          return;\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 06:51:37.279734609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1743/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 07:11:40.419522966 -0500\n@@ -1424,7 +1424,7 @@\n       }\n       res = n.checkTreeEqualsImpl(n2);\n       if (res != null) {\n-        return res;\n+        Kit.codeBug();\n       }\n     }\n     return res;\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 06:51:37.283732609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1743/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 07:11:40.419522966 -0500\n@@ -315,7 +315,7 @@\n           case NUMBER:          return \"NUMBER\";\n           case STRING:          return \"STRING\";\n           case NULL:            return \"NULL\";\n-          case THIS:            return \"THIS\";\n+          case THIS:            ;\n           case FALSE:           return \"FALSE\";\n           case TRUE:            return \"TRUE\";\n           case SHEQ:            return \"SHEQ\";\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 318, 
          "faulty": "return \"THIS\";", 
          "type": "Delete", 
          "seed": "return Token.STRING;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 88, 
          "faulty": "canRemove=true;", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 318, 
          "faulty": "return \"THIS\";", 
          "type": "Delete", 
          "seed": "return Token.STRING;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1427, 
          "faulty": "return res;", 
          "type": "Replace", 
          "seed": "Kit.codeBug();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 318, 
          "faulty": "return \"THIS\";", 
          "type": "Delete", 
          "seed": "if (matchChar('/')) {\n  return Token.EOC;\n}\n else {\n  return Token.STAR;\n}"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 87, 
          "faulty": "if (specializationState == null) {\n  canRemove=true;\n}\n else {\n  Node specializableFunction=getSpecializableFunctionFromSymbol(declaration);\n  if (specializableFunction != null) {\n    specializationState.reportRemovedFunction(specializableFunction,null);\n    canRemove=true;\n  }\n}", 
          "type": "Replace", 
          "seed": "return;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:51:37.259744610 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1387/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 07:08:37.679389871 -0500\n@@ -96,11 +96,6 @@\n               canRemove = true;\n             }\n           }\n-\n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 06:51:37.279734609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1387/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 07:08:37.679389871 -0500\n@@ -1411,7 +1411,8 @@\n    */\n   NodeMismatch checkTreeEqualsImpl(Node node2) {\n     if (!isEquivalentTo(node2, false, false)) {\n-      return new NodeMismatch(this, node2);\n+      boolean nullKey = false;\n+\treturn new NodeMismatch(this, node2);\n     }\n \n     NodeMismatch res = null;\n@@ -1424,7 +1425,6 @@\n       }\n       res = n.checkTreeEqualsImpl(n2);\n       if (res != null) {\n-        return res;\n       }\n     }\n     return res;\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1427, 
          "faulty": "return res;", 
          "type": "Delete", 
          "seed": "return Token.STRING;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1414, 
          "faulty": "return new NodeMismatch(this,node2);", 
          "type": "InsertBefore", 
          "seed": "boolean nullKey=false;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:51:37.259744610 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1828/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 07:12:24.728238690 -0500\n@@ -83,24 +83,6 @@\n       if (!nameInfo.isReferenced()) {\n         for (Symbol declaration : nameInfo.getDeclarations()) {\n           boolean canRemove = false;\n-\n-          if (specializationState == null) {\n-            canRemove = true;\n-          } else {\n-            Node specializableFunction =\n-              getSpecializableFunctionFromSymbol(declaration);\n-\n-            if (specializableFunction != null) {\n-              specializationState.reportRemovedFunction(\n-                  specializableFunction, null);\n-              canRemove = true;\n-            }\n-          }\n-\n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 06:51:37.279734609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1828/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 07:12:24.732238751 -0500\n@@ -218,7 +218,7 @@\n         case QUOTED_PROP:        return \"quoted\";\n         case OPT_ARG_NAME:       return \"opt_arg\";\n \n-        case SYNTHETIC_BLOCK_PROP: return \"synthetic\";\n+        case SYNTHETIC_BLOCK_PROP: ;\n         case EMPTY_BLOCK:        return \"empty_block\";\n         case ORIGINALNAME_PROP:  return \"originalname\";\n         case SIDE_EFFECT_FLAGS:  return \"side_effect_flags\";\n@@ -937,14 +937,7 @@\n         sb.append(getString());\n       } else if (type == Token.FUNCTION) {\n         sb.append(' ');\n-        // In the case of JsDoc trees, the first child is often not a string\n-        // which causes exceptions to be thrown when calling toString or\n-        // toStringTree.\n-        if (first == null || first.getType() != Token.NAME) {\n-          sb.append(\"<invalid>\");\n-        } else {\n-          sb.append(first.getString());\n-        }\n+        int lineno = getLineno();\n       } else if (this instanceof ScriptOrFnNode) {\n         ScriptOrFnNode sof = (ScriptOrFnNode) this;\n         if (this instanceof FunctionNode) {\n@@ -1424,7 +1417,6 @@\n       }\n       res = n.checkTreeEqualsImpl(n2);\n       if (res != null) {\n-        return res;\n       }\n     }\n     return res;\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 06:51:37.283732609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1828/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 07:12:24.732238751 -0500\n@@ -315,7 +315,7 @@\n           case NUMBER:          return \"NUMBER\";\n           case STRING:          return \"STRING\";\n           case NULL:            return \"NULL\";\n-          case THIS:            return \"THIS\";\n+          case THIS:            ;\n           case FALSE:           return \"FALSE\";\n           case TRUE:            return \"TRUE\";\n           case SHEQ:            return \"SHEQ\";\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 318, 
          "faulty": "return \"THIS\";", 
          "type": "Delete", 
          "seed": "return Token.STRING;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 88, 
          "faulty": "canRemove=true;", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 943, 
          "faulty": "if (first == null || first.getType() != Token.NAME) {\n  sb.append(\"<invalid>\");\n}\n else {\n  sb.append(first.getString());\n}", 
          "type": "Replace", 
          "seed": "int lineno=getLineno();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 221, 
          "faulty": "return \"synthetic\";", 
          "type": "Delete", 
          "seed": "consumeToken();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1427, 
          "faulty": "return res;", 
          "type": "Delete", 
          "seed": "boolean first=true;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 88, 
          "faulty": "canRemove=true;", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 943, 
          "faulty": "if (first == null || first.getType() != Token.NAME) {\n  sb.append(\"<invalid>\");\n}\n else {\n  sb.append(first.getString());\n}", 
          "type": "Replace", 
          "seed": "int lineno=getLineno();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 221, 
          "faulty": "return \"synthetic\";", 
          "type": "Delete", 
          "seed": "consumeToken();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1427, 
          "faulty": "return res;", 
          "type": "Delete", 
          "seed": "return Token.STRING;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 87, 
          "faulty": "if (specializationState == null) {\n  canRemove=true;\n}\n else {\n  Node specializableFunction=getSpecializableFunctionFromSymbol(declaration);\n  if (specializableFunction != null) {\n    specializationState.reportRemovedFunction(specializableFunction,null);\n    canRemove=true;\n  }\n}", 
          "type": "Delete", 
          "seed": "StringBuilder builder=new StringBuilder();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:51:37.259744610 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1575/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 07:10:13.185829241 -0500\n@@ -96,11 +96,6 @@\n               canRemove = true;\n             }\n           }\n-\n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 06:51:37.279734609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1575/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 07:10:13.185829241 -0500\n@@ -218,7 +218,7 @@\n         case QUOTED_PROP:        return \"quoted\";\n         case OPT_ARG_NAME:       return \"opt_arg\";\n \n-        case SYNTHETIC_BLOCK_PROP: return \"synthetic\";\n+        case SYNTHETIC_BLOCK_PROP: ;\n         case EMPTY_BLOCK:        return \"empty_block\";\n         case ORIGINALNAME_PROP:  return \"originalname\";\n         case SIDE_EFFECT_FLAGS:  return \"side_effect_flags\";\n@@ -937,14 +937,7 @@\n         sb.append(getString());\n       } else if (type == Token.FUNCTION) {\n         sb.append(' ');\n-        // In the case of JsDoc trees, the first child is often not a string\n-        // which causes exceptions to be thrown when calling toString or\n-        // toStringTree.\n-        if (first == null || first.getType() != Token.NAME) {\n-          sb.append(\"<invalid>\");\n-        } else {\n-          sb.append(first.getString());\n-        }\n+        int lineno = getLineno();\n       } else if (this instanceof ScriptOrFnNode) {\n         ScriptOrFnNode sof = (ScriptOrFnNode) this;\n         if (this instanceof FunctionNode) {\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 06:51:37.283732609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1575/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 07:10:13.189829328 -0500\n@@ -315,7 +315,7 @@\n           case NUMBER:          return \"NUMBER\";\n           case STRING:          return \"STRING\";\n           case NULL:            return \"NULL\";\n-          case THIS:            return \"THIS\";\n+          case THIS:            ;\n           case FALSE:           return \"FALSE\";\n           case TRUE:            return \"TRUE\";\n           case SHEQ:            return \"SHEQ\";\n@@ -359,7 +359,7 @@\n           case LP:              return \"LP\";\n           case RP:              return \"RP\";\n           case COMMA:           return \"COMMA\";\n-          case ASSIGN:          return \"ASSIGN\";\n+          case ASSIGN:          ;\n           case ASSIGN_BITOR:    return \"ASSIGN_BITOR\";\n           case ASSIGN_BITXOR:   return \"ASSIGN_BITXOR\";\n           case ASSIGN_BITAND:   return \"ASSIGN_BITAND\";\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 318, 
          "faulty": "return \"THIS\";", 
          "type": "Delete", 
          "seed": "return Token.STRING;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 221, 
          "faulty": "return \"synthetic\";", 
          "type": "Delete", 
          "seed": "consumeToken();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 943, 
          "faulty": "if (first == null || first.getType() != Token.NAME) {\n  sb.append(\"<invalid>\");\n}\n else {\n  sb.append(first.getString());\n}", 
          "type": "Replace", 
          "seed": "int lineno=getLineno();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 362, 
          "faulty": "return \"ASSIGN\";", 
          "type": "Delete", 
          "seed": "case 2:"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:51:37.259744610 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1582/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 07:10:17.193916807 -0500\n@@ -85,7 +85,6 @@\n           boolean canRemove = false;\n \n           if (specializationState == null) {\n-            canRemove = true;\n           } else {\n             Node specializableFunction =\n               getSpecializableFunctionFromSymbol(declaration);\n@@ -96,11 +95,6 @@\n               canRemove = true;\n             }\n           }\n-\n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 06:51:37.283732609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1582/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 07:10:17.193916807 -0500\n@@ -307,7 +307,7 @@\n           case TYPEOF:          return \"TYPEOF\";\n           case GETPROP:         return \"GETPROP\";\n           case SETPROP:         return \"SETPROP\";\n-          case GETELEM:         return \"GETELEM\";\n+          case GETELEM:         ;\n           case SETELEM:         return \"SETELEM\";\n           case CALL:            return \"CALL\";\n           case NAME:            return \"NAME\";\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 88, 
          "faulty": "canRemove=true;", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 310, 
          "faulty": "return \"GETELEM\";", 
          "type": "Replace", 
          "seed": "return \"return\";"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 310, 
          "faulty": "return \"GETELEM\";", 
          "type": "Delete", 
          "seed": "Node pn=addExpr();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:51:37.259744610 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1785/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 07:12:02.639892395 -0500\n@@ -85,7 +85,6 @@\n           boolean canRemove = false;\n \n           if (specializationState == null) {\n-            canRemove = true;\n           } else {\n             Node specializableFunction =\n               getSpecializableFunctionFromSymbol(declaration);\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 06:51:37.279734609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1785/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 07:12:02.639892395 -0500\n@@ -937,14 +937,7 @@\n         sb.append(getString());\n       } else if (type == Token.FUNCTION) {\n         sb.append(' ');\n-        // In the case of JsDoc trees, the first child is often not a string\n-        // which causes exceptions to be thrown when calling toString or\n-        // toStringTree.\n-        if (first == null || first.getType() != Token.NAME) {\n-          sb.append(\"<invalid>\");\n-        } else {\n-          sb.append(first.getString());\n-        }\n+        int lineno = getLineno();\n       } else if (this instanceof ScriptOrFnNode) {\n         ScriptOrFnNode sof = (ScriptOrFnNode) this;\n         if (this instanceof FunctionNode) {\n@@ -1424,7 +1417,6 @@\n       }\n       res = n.checkTreeEqualsImpl(n2);\n       if (res != null) {\n-        return res;\n       }\n     }\n     return res;\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 06:51:37.283732609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1785/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 07:12:02.639892395 -0500\n@@ -315,7 +315,10 @@\n           case NUMBER:          return \"NUMBER\";\n           case STRING:          return \"STRING\";\n           case NULL:            return \"NULL\";\n-          case THIS:            return \"THIS\";\n+          case THIS:            {\n+\t\t\t\tStringBuilder sb = new StringBuilder();\n+\t\t\t\treturn \"THIS\";\n+\t\t\t}\n           case FALSE:           return \"FALSE\";\n           case TRUE:            return \"TRUE\";\n           case SHEQ:            return \"SHEQ\";\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 88, 
          "faulty": "canRemove=true;", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 943, 
          "faulty": "if (first == null || first.getType() != Token.NAME) {\n  sb.append(\"<invalid>\");\n}\n else {\n  sb.append(first.getString());\n}", 
          "type": "Replace", 
          "seed": "int lineno=getLineno();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1427, 
          "faulty": "return res;", 
          "type": "Delete", 
          "seed": "return Token.STRING;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 318, 
          "faulty": "return \"THIS\";", 
          "type": "InsertBefore", 
          "seed": "StringBuilder sb=new StringBuilder();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:51:37.259744610 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_512/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 07:01:05.239473814 -0500\n@@ -96,11 +96,6 @@\n               canRemove = true;\n             }\n           }\n-\n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 06:51:37.279734609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_512/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 07:01:05.239473814 -0500\n@@ -218,7 +218,7 @@\n         case QUOTED_PROP:        return \"quoted\";\n         case OPT_ARG_NAME:       return \"opt_arg\";\n \n-        case SYNTHETIC_BLOCK_PROP: return \"synthetic\";\n+        case SYNTHETIC_BLOCK_PROP: ;\n         case EMPTY_BLOCK:        return \"empty_block\";\n         case ORIGINALNAME_PROP:  return \"originalname\";\n         case SIDE_EFFECT_FLAGS:  return \"side_effect_flags\";\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 06:51:37.283732609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_512/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 07:01:05.243473752 -0500\n@@ -315,7 +315,7 @@\n           case NUMBER:          return \"NUMBER\";\n           case STRING:          return \"STRING\";\n           case NULL:            return \"NULL\";\n-          case THIS:            return \"THIS\";\n+          case THIS:            ;\n           case FALSE:           return \"FALSE\";\n           case TRUE:            return \"TRUE\";\n           case SHEQ:            return \"SHEQ\";\n@@ -359,7 +359,7 @@\n           case LP:              return \"LP\";\n           case RP:              return \"RP\";\n           case COMMA:           return \"COMMA\";\n-          case ASSIGN:          return \"ASSIGN\";\n+          case ASSIGN:          ;\n           case ASSIGN_BITOR:    return \"ASSIGN_BITOR\";\n           case ASSIGN_BITXOR:   return \"ASSIGN_BITXOR\";\n           case ASSIGN_BITAND:   return \"ASSIGN_BITAND\";\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 102, 
          "faulty": "changed=true;", 
          "type": "InsertBefore", 
          "seed": "StringBuilder builder=new StringBuilder();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 221, 
          "faulty": "return \"synthetic\";", 
          "type": "Delete", 
          "seed": "consumeToken();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 318, 
          "faulty": "return \"THIS\";", 
          "type": "Delete", 
          "seed": "return Token.STRING;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 362, 
          "faulty": "return \"ASSIGN\";", 
          "type": "Delete", 
          "seed": "return Token.LP;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:51:37.259744610 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1793/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 07:12:07.083963691 -0500\n@@ -83,24 +83,6 @@\n       if (!nameInfo.isReferenced()) {\n         for (Symbol declaration : nameInfo.getDeclarations()) {\n           boolean canRemove = false;\n-\n-          if (specializationState == null) {\n-            canRemove = true;\n-          } else {\n-            Node specializableFunction =\n-              getSpecializableFunctionFromSymbol(declaration);\n-\n-            if (specializableFunction != null) {\n-              specializationState.reportRemovedFunction(\n-                  specializableFunction, null);\n-              canRemove = true;\n-            }\n-          }\n-\n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 06:51:37.279734609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1793/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 07:12:07.083963691 -0500\n@@ -218,7 +218,7 @@\n         case QUOTED_PROP:        return \"quoted\";\n         case OPT_ARG_NAME:       return \"opt_arg\";\n \n-        case SYNTHETIC_BLOCK_PROP: return \"synthetic\";\n+        case SYNTHETIC_BLOCK_PROP: ;\n         case EMPTY_BLOCK:        return \"empty_block\";\n         case ORIGINALNAME_PROP:  return \"originalname\";\n         case SIDE_EFFECT_FLAGS:  return \"side_effect_flags\";\n@@ -936,15 +936,9 @@\n         sb.append(' ');\n         sb.append(getString());\n       } else if (type == Token.FUNCTION) {\n-        sb.append(' ');\n-        // In the case of JsDoc trees, the first child is often not a string\n-        // which causes exceptions to be thrown when calling toString or\n-        // toStringTree.\n-        if (first == null || first.getType() != Token.NAME) {\n-          sb.append(\"<invalid>\");\n-        } else {\n-          sb.append(first.getString());\n-        }\n+        JSDocInfo jsDocInfo = getJSDocInfo();\n+\t\tsb.append(' ');\n+        int lineno = getLineno();\n       } else if (this instanceof ScriptOrFnNode) {\n         ScriptOrFnNode sof = (ScriptOrFnNode) this;\n         if (this instanceof FunctionNode) {\n@@ -1411,7 +1405,8 @@\n    */\n   NodeMismatch checkTreeEqualsImpl(Node node2) {\n     if (!isEquivalentTo(node2, false, false)) {\n-      return new NodeMismatch(this, node2);\n+      boolean nullKey = false;\n+\treturn new NodeMismatch(this, node2);\n     }\n \n     NodeMismatch res = null;\n@@ -1424,7 +1419,6 @@\n       }\n       res = n.checkTreeEqualsImpl(n2);\n       if (res != null) {\n-        return res;\n       }\n     }\n     return res;\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 06:51:37.283732609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1793/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 07:12:07.087963754 -0500\n@@ -315,7 +315,7 @@\n           case NUMBER:          return \"NUMBER\";\n           case STRING:          return \"STRING\";\n           case NULL:            return \"NULL\";\n-          case THIS:            return \"THIS\";\n+          case THIS:            ;\n           case FALSE:           return \"FALSE\";\n           case TRUE:            return \"TRUE\";\n           case SHEQ:            return \"SHEQ\";\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 318, 
          "faulty": "return \"THIS\";", 
          "type": "Delete", 
          "seed": "return Token.STRING;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 88, 
          "faulty": "canRemove=true;", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 943, 
          "faulty": "if (first == null || first.getType() != Token.NAME) {\n  sb.append(\"<invalid>\");\n}\n else {\n  sb.append(first.getString());\n}", 
          "type": "Replace", 
          "seed": "int lineno=getLineno();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 221, 
          "faulty": "return \"synthetic\";", 
          "type": "Delete", 
          "seed": "consumeToken();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1427, 
          "faulty": "return res;", 
          "type": "Delete", 
          "seed": "boolean first=true;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 88, 
          "faulty": "canRemove=true;", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 943, 
          "faulty": "if (first == null || first.getType() != Token.NAME) {\n  sb.append(\"<invalid>\");\n}\n else {\n  sb.append(first.getString());\n}", 
          "type": "Replace", 
          "seed": "int lineno=getLineno();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 221, 
          "faulty": "return \"synthetic\";", 
          "type": "Delete", 
          "seed": "consumeToken();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 88, 
          "faulty": "canRemove=true;", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1414, 
          "faulty": "return new NodeMismatch(this,node2);", 
          "type": "InsertBefore", 
          "seed": "boolean nullKey=false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 87, 
          "faulty": "if (specializationState == null) {\n  canRemove=true;\n}\n else {\n  Node specializableFunction=getSpecializableFunctionFromSymbol(declaration);\n  if (specializableFunction != null) {\n    specializationState.reportRemovedFunction(specializableFunction,null);\n    canRemove=true;\n  }\n}", 
          "type": "Delete", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 88, 
          "faulty": "canRemove=true;", 
          "type": "Replace", 
          "seed": "formatConclusion();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 939, 
          "faulty": "sb.append(' ');", 
          "type": "InsertBefore", 
          "seed": "JSDocInfo jsDocInfo=getJSDocInfo();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:51:37.259744610 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1165/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 07:06:42.696897699 -0500\n@@ -96,11 +96,6 @@\n               canRemove = true;\n             }\n           }\n-\n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 06:51:37.279734609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1165/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 07:06:42.696897699 -0500\n@@ -937,14 +937,6 @@\n         sb.append(getString());\n       } else if (type == Token.FUNCTION) {\n         sb.append(' ');\n-        // In the case of JsDoc trees, the first child is often not a string\n-        // which causes exceptions to be thrown when calling toString or\n-        // toStringTree.\n-        if (first == null || first.getType() != Token.NAME) {\n-          sb.append(\"<invalid>\");\n-        } else {\n-          sb.append(first.getString());\n-        }\n       } else if (this instanceof ScriptOrFnNode) {\n         ScriptOrFnNode sof = (ScriptOrFnNode) this;\n         if (this instanceof FunctionNode) {\n@@ -1424,7 +1416,6 @@\n       }\n       res = n.checkTreeEqualsImpl(n2);\n       if (res != null) {\n-        return res;\n       }\n     }\n     return res;\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 06:51:37.283732609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1165/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 07:06:42.700897688 -0500\n@@ -315,7 +315,7 @@\n           case NUMBER:          return \"NUMBER\";\n           case STRING:          return \"STRING\";\n           case NULL:            return \"NULL\";\n-          case THIS:            return \"THIS\";\n+          case THIS:            ;\n           case FALSE:           return \"FALSE\";\n           case TRUE:            return \"TRUE\";\n           case SHEQ:            return \"SHEQ\";\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 318, 
          "faulty": "return \"THIS\";", 
          "type": "Delete", 
          "seed": "return Token.STRING;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 102, 
          "faulty": "changed=true;", 
          "type": "InsertBefore", 
          "seed": "StringBuilder builder=new StringBuilder();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1427, 
          "faulty": "return res;", 
          "type": "Delete", 
          "seed": "return Token.STRING;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 943, 
          "faulty": "if (first == null || first.getType() != Token.NAME) {\n  sb.append(\"<invalid>\");\n}\n else {\n  sb.append(first.getString());\n}", 
          "type": "Delete", 
          "seed": "if (matchChar('=')) {\n  return Token.ASSIGN_ADD;\n}\n else if (matchChar('+')) {\n  return Token.INC;\n}\n else {\n  return Token.ADD;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:51:37.259744610 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1638/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 07:10:47.206540614 -0500\n@@ -85,7 +85,6 @@\n           boolean canRemove = false;\n \n           if (specializationState == null) {\n-            canRemove = true;\n           } else {\n             Node specializableFunction =\n               getSpecializableFunctionFromSymbol(declaration);\n@@ -96,11 +95,6 @@\n               canRemove = true;\n             }\n           }\n-\n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 06:51:37.279734609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1638/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 07:10:47.206540614 -0500\n@@ -1424,7 +1424,7 @@\n       }\n       res = n.checkTreeEqualsImpl(n2);\n       if (res != null) {\n-        return res;\n+        Kit.codeBug();\n       }\n     }\n     return res;\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 06:51:37.283732609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1638/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 07:10:47.210540693 -0500\n@@ -315,7 +315,7 @@\n           case NUMBER:          return \"NUMBER\";\n           case STRING:          return \"STRING\";\n           case NULL:            return \"NULL\";\n-          case THIS:            return \"THIS\";\n+          case THIS:            ;\n           case FALSE:           return \"FALSE\";\n           case TRUE:            return \"TRUE\";\n           case SHEQ:            return \"SHEQ\";\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 318, 
          "faulty": "return \"THIS\";", 
          "type": "Delete", 
          "seed": "return Token.STRING;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 88, 
          "faulty": "canRemove=true;", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 318, 
          "faulty": "return \"THIS\";", 
          "type": "Delete", 
          "seed": "return Token.STRING;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1427, 
          "faulty": "return res;", 
          "type": "Replace", 
          "seed": "Kit.codeBug();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:51:37.259744610 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_46/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:56:42.915612601 -0500\n@@ -96,11 +96,6 @@\n               canRemove = true;\n             }\n           }\n-\n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n@@ -108,7 +103,8 @@\n     }\n \n     if (changed) {\n-      compiler.reportCodeChange();\n+      int index = -1;\n+\tcompiler.reportCodeChange();\n     }\n   }\n \n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 102, 
          "faulty": "changed=true;", 
          "type": "InsertBefore", 
          "seed": "StringBuilder builder=new StringBuilder();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 111, 
          "faulty": "compiler.reportCodeChange();", 
          "type": "InsertBefore", 
          "seed": "int index=-1;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:51:37.259744610 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1311/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 07:07:58.890167100 -0500\n@@ -96,11 +96,6 @@\n               canRemove = true;\n             }\n           }\n-\n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java\t2018-12-02 06:51:39.210768564 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1311/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java\t2018-12-02 07:07:58.894167235 -0500\n@@ -532,7 +532,8 @@\n \n     @Override\n     public void remove() {\n-      NodeUtil.removeChild(exprNode.getParent(), exprNode);\n+      int index = -1;\n+\tNodeUtil.removeChild(exprNode.getParent(), exprNode);\n     }\n \n     @Override\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 06:51:37.279734609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1311/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 07:07:58.894167235 -0500\n@@ -937,14 +937,7 @@\n         sb.append(getString());\n       } else if (type == Token.FUNCTION) {\n         sb.append(' ');\n-        // In the case of JsDoc trees, the first child is often not a string\n-        // which causes exceptions to be thrown when calling toString or\n-        // toStringTree.\n-        if (first == null || first.getType() != Token.NAME) {\n-          sb.append(\"<invalid>\");\n-        } else {\n-          sb.append(first.getString());\n-        }\n+        int lineno = getLineno();\n       } else if (this instanceof ScriptOrFnNode) {\n         ScriptOrFnNode sof = (ScriptOrFnNode) this;\n         if (this instanceof FunctionNode) {\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 06:51:37.283732609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1311/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 07:07:58.898167369 -0500\n@@ -359,7 +359,7 @@\n           case LP:              return \"LP\";\n           case RP:              return \"RP\";\n           case COMMA:           return \"COMMA\";\n-          case ASSIGN:          return \"ASSIGN\";\n+          case ASSIGN:          ;\n           case ASSIGN_BITOR:    return \"ASSIGN_BITOR\";\n           case ASSIGN_BITXOR:   return \"ASSIGN_BITXOR\";\n           case ASSIGN_BITAND:   return \"ASSIGN_BITAND\";\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 943, 
          "faulty": "if (first == null || first.getType() != Token.NAME) {\n  sb.append(\"<invalid>\");\n}\n else {\n  sb.append(first.getString());\n}", 
          "type": "Replace", 
          "seed": "int lineno=getLineno();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 362, 
          "faulty": "return \"ASSIGN\";", 
          "type": "Replace", 
          "seed": "Context cx=Context.getCurrentContext();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 102, 
          "faulty": "changed=true;", 
          "type": "InsertBefore", 
          "seed": "StringBuilder builder=new StringBuilder();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java", 
          "line": 535, 
          "faulty": "NodeUtil.removeChild(exprNode.getParent(),exprNode);", 
          "type": "InsertBefore", 
          "seed": "int index=-1;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 362, 
          "faulty": "return \"ASSIGN\";", 
          "type": "Delete", 
          "seed": "case 2:"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:51:37.259744610 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1264/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 07:07:36.205376121 -0500\n@@ -85,7 +85,6 @@\n           boolean canRemove = false;\n \n           if (specializationState == null) {\n-            canRemove = true;\n           } else {\n             Node specializableFunction =\n               getSpecializableFunctionFromSymbol(declaration);\n@@ -96,11 +95,6 @@\n               canRemove = true;\n             }\n           }\n-\n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 06:51:37.279734609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1264/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 07:07:36.209376264 -0500\n@@ -937,14 +937,7 @@\n         sb.append(getString());\n       } else if (type == Token.FUNCTION) {\n         sb.append(' ');\n-        // In the case of JsDoc trees, the first child is often not a string\n-        // which causes exceptions to be thrown when calling toString or\n-        // toStringTree.\n-        if (first == null || first.getType() != Token.NAME) {\n-          sb.append(\"<invalid>\");\n-        } else {\n-          sb.append(first.getString());\n-        }\n+        int lineno = getLineno();\n       } else if (this instanceof ScriptOrFnNode) {\n         ScriptOrFnNode sof = (ScriptOrFnNode) this;\n         if (this instanceof FunctionNode) {\n@@ -1424,7 +1417,6 @@\n       }\n       res = n.checkTreeEqualsImpl(n2);\n       if (res != null) {\n-        return res;\n       }\n     }\n     return res;\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 06:51:37.283732609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1264/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 07:07:36.209376264 -0500\n@@ -307,7 +307,7 @@\n           case TYPEOF:          return \"TYPEOF\";\n           case GETPROP:         return \"GETPROP\";\n           case SETPROP:         return \"SETPROP\";\n-          case GETELEM:         return \"GETELEM\";\n+          case GETELEM:         ;\n           case SETELEM:         return \"SETELEM\";\n           case CALL:            return \"CALL\";\n           case NAME:            return \"NAME\";\n@@ -315,7 +315,7 @@\n           case NUMBER:          return \"NUMBER\";\n           case STRING:          return \"STRING\";\n           case NULL:            return \"NULL\";\n-          case THIS:            return \"THIS\";\n+          case THIS:            ;\n           case FALSE:           return \"FALSE\";\n           case TRUE:            return \"TRUE\";\n           case SHEQ:            return \"SHEQ\";\n@@ -359,7 +359,7 @@\n           case LP:              return \"LP\";\n           case RP:              return \"RP\";\n           case COMMA:           return \"COMMA\";\n-          case ASSIGN:          return \"ASSIGN\";\n+          case ASSIGN:          Context cx = Context.getCurrentContext();\n           case ASSIGN_BITOR:    return \"ASSIGN_BITOR\";\n           case ASSIGN_BITXOR:   return \"ASSIGN_BITXOR\";\n           case ASSIGN_BITAND:   return \"ASSIGN_BITAND\";\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 318, 
          "faulty": "return \"THIS\";", 
          "type": "Delete", 
          "seed": "return Token.STRING;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 88, 
          "faulty": "canRemove=true;", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 943, 
          "faulty": "if (first == null || first.getType() != Token.NAME) {\n  sb.append(\"<invalid>\");\n}\n else {\n  sb.append(first.getString());\n}", 
          "type": "Replace", 
          "seed": "int lineno=getLineno();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1427, 
          "faulty": "return res;", 
          "type": "Delete", 
          "seed": "boolean first=true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 318, 
          "faulty": "return \"THIS\";", 
          "type": "Delete", 
          "seed": "return Token.XMLATTR;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 362, 
          "faulty": "return \"ASSIGN\";", 
          "type": "Replace", 
          "seed": "Context cx=Context.getCurrentContext();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 310, 
          "faulty": "return \"GETELEM\";", 
          "type": "Delete", 
          "seed": "return false;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:51:37.259744610 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_667/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 07:02:26.542429508 -0500\n@@ -85,7 +85,6 @@\n           boolean canRemove = false;\n \n           if (specializationState == null) {\n-            canRemove = true;\n           } else {\n             Node specializableFunction =\n               getSpecializableFunctionFromSymbol(declaration);\n@@ -96,11 +95,6 @@\n               canRemove = true;\n             }\n           }\n-\n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java\t2018-12-02 06:51:39.210768564 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_667/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java\t2018-12-02 07:02:26.546429466 -0500\n@@ -532,7 +532,8 @@\n \n     @Override\n     public void remove() {\n-      NodeUtil.removeChild(exprNode.getParent(), exprNode);\n+      int index = -1;\n+\tNodeUtil.removeChild(exprNode.getParent(), exprNode);\n     }\n \n     @Override\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 06:51:37.283732609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_667/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 07:02:26.546429466 -0500\n@@ -359,7 +359,7 @@\n           case LP:              return \"LP\";\n           case RP:              return \"RP\";\n           case COMMA:           return \"COMMA\";\n-          case ASSIGN:          return \"ASSIGN\";\n+          case ASSIGN:          ;\n           case ASSIGN_BITOR:    return \"ASSIGN_BITOR\";\n           case ASSIGN_BITXOR:   return \"ASSIGN_BITXOR\";\n           case ASSIGN_BITAND:   return \"ASSIGN_BITAND\";\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 102, 
          "faulty": "changed=true;", 
          "type": "InsertBefore", 
          "seed": "StringBuilder builder=new StringBuilder();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 362, 
          "faulty": "return \"ASSIGN\";", 
          "type": "Delete", 
          "seed": "Node pn=memberExpr(true);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 88, 
          "faulty": "canRemove=true;", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 101, 
          "faulty": "declaration.remove();", 
          "type": "InsertBefore", 
          "seed": "return;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java", 
          "line": 535, 
          "faulty": "NodeUtil.removeChild(exprNode.getParent(),exprNode);", 
          "type": "InsertBefore", 
          "seed": "int index=-1;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:51:37.259744610 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_41/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:56:40.499568847 -0500\n@@ -81,28 +81,6 @@\n     boolean changed = false;\n     for (NameInfo nameInfo : allNameInfo) {\n       if (!nameInfo.isReferenced()) {\n-        for (Symbol declaration : nameInfo.getDeclarations()) {\n-          boolean canRemove = false;\n-\n-          if (specializationState == null) {\n-            canRemove = true;\n-          } else {\n-            Node specializableFunction =\n-              getSpecializableFunctionFromSymbol(declaration);\n-\n-            if (specializableFunction != null) {\n-              specializationState.reportRemovedFunction(\n-                  specializableFunction, null);\n-              canRemove = true;\n-            }\n-          }\n-\n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n-        }\n-\n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n       }\n     }\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 06:51:37.283732609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_41/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 06:56:40.499568847 -0500\n@@ -359,7 +359,7 @@\n           case LP:              return \"LP\";\n           case RP:              return \"RP\";\n           case COMMA:           return \"COMMA\";\n-          case ASSIGN:          return \"ASSIGN\";\n+          case ASSIGN:          int count = 0;\n           case ASSIGN_BITOR:    return \"ASSIGN_BITOR\";\n           case ASSIGN_BITXOR:   return \"ASSIGN_BITXOR\";\n           case ASSIGN_BITAND:   return \"ASSIGN_BITAND\";\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 362, 
          "faulty": "return \"ASSIGN\";", 
          "type": "Replace", 
          "seed": "int count=0;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 84, 
          "faulty": "for (Symbol declaration : nameInfo.getDeclarations()) {\n  boolean canRemove=false;\n  if (specializationState == null) {\n    canRemove=true;\n  }\n else {\n    Node specializableFunction=getSpecializableFunctionFromSymbol(declaration);\n    if (specializableFunction != null) {\n      specializationState.reportRemovedFunction(specializableFunction,null);\n      canRemove=true;\n    }\n  }\n  if (canRemove) {\n    declaration.remove();\n    changed=true;\n  }\n}", 
          "type": "Delete", 
          "seed": "return this;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:51:37.259744610 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_548/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 07:01:24.515190678 -0500\n@@ -85,7 +85,6 @@\n           boolean canRemove = false;\n \n           if (specializationState == null) {\n-            canRemove = true;\n           } else {\n             Node specializableFunction =\n               getSpecializableFunctionFromSymbol(declaration);\n@@ -96,11 +95,6 @@\n               canRemove = true;\n             }\n           }\n-\n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 06:51:37.279734609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_548/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 07:01:24.519190622 -0500\n@@ -937,14 +937,6 @@\n         sb.append(getString());\n       } else if (type == Token.FUNCTION) {\n         sb.append(' ');\n-        // In the case of JsDoc trees, the first child is often not a string\n-        // which causes exceptions to be thrown when calling toString or\n-        // toStringTree.\n-        if (first == null || first.getType() != Token.NAME) {\n-          sb.append(\"<invalid>\");\n-        } else {\n-          sb.append(first.getString());\n-        }\n       } else if (this instanceof ScriptOrFnNode) {\n         ScriptOrFnNode sof = (ScriptOrFnNode) this;\n         if (this instanceof FunctionNode) {\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 06:51:37.283732609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_548/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 07:01:24.519190622 -0500\n@@ -359,7 +359,7 @@\n           case LP:              return \"LP\";\n           case RP:              return \"RP\";\n           case COMMA:           return \"COMMA\";\n-          case ASSIGN:          return \"ASSIGN\";\n+          case ASSIGN:          ;\n           case ASSIGN_BITOR:    return \"ASSIGN_BITOR\";\n           case ASSIGN_BITXOR:   return \"ASSIGN_BITXOR\";\n           case ASSIGN_BITAND:   return \"ASSIGN_BITAND\";\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 102, 
          "faulty": "changed=true;", 
          "type": "InsertBefore", 
          "seed": "StringBuilder builder=new StringBuilder();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 362, 
          "faulty": "return \"ASSIGN\";", 
          "type": "Delete", 
          "seed": "Node pn=memberExpr(true);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 88, 
          "faulty": "canRemove=true;", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 943, 
          "faulty": "if (first == null || first.getType() != Token.NAME) {\n  sb.append(\"<invalid>\");\n}\n else {\n  sb.append(first.getString());\n}", 
          "type": "Delete", 
          "seed": "StringBuilder s=new StringBuilder();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:51:37.259744610 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_883/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 07:04:15.557527338 -0500\n@@ -96,11 +96,6 @@\n               canRemove = true;\n             }\n           }\n-\n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 06:51:37.279734609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_883/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 07:04:15.561527314 -0500\n@@ -943,7 +943,7 @@\n         if (first == null || first.getType() != Token.NAME) {\n           sb.append(\"<invalid>\");\n         } else {\n-          sb.append(first.getString());\n+          Kit.codeBug();\n         }\n       } else if (this instanceof ScriptOrFnNode) {\n         ScriptOrFnNode sof = (ScriptOrFnNode) this;\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 06:51:37.283732609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_883/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 07:04:15.561527314 -0500\n@@ -359,7 +359,7 @@\n           case LP:              return \"LP\";\n           case RP:              return \"RP\";\n           case COMMA:           return \"COMMA\";\n-          case ASSIGN:          return \"ASSIGN\";\n+          case ASSIGN:          ;\n           case ASSIGN_BITOR:    return \"ASSIGN_BITOR\";\n           case ASSIGN_BITXOR:   return \"ASSIGN_BITXOR\";\n           case ASSIGN_BITAND:   return \"ASSIGN_BITAND\";\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 102, 
          "faulty": "changed=true;", 
          "type": "InsertBefore", 
          "seed": "StringBuilder builder=new StringBuilder();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 362, 
          "faulty": "return \"ASSIGN\";", 
          "type": "Delete", 
          "seed": "Node pn=memberExpr(true);"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 362, 
          "faulty": "return \"ASSIGN\";", 
          "type": "Delete", 
          "seed": "return Token.LP;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 946, 
          "faulty": "sb.append(first.getString());", 
          "type": "Replace", 
          "seed": "Kit.codeBug();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:51:37.259744610 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_933/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 07:04:42.197371930 -0500\n@@ -85,7 +85,6 @@\n           boolean canRemove = false;\n \n           if (specializationState == null) {\n-            canRemove = true;\n           } else {\n             Node specializableFunction =\n               getSpecializableFunctionFromSymbol(declaration);\n@@ -96,11 +95,6 @@\n               canRemove = true;\n             }\n           }\n-\n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java\t2018-12-02 06:51:39.210768564 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_933/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java\t2018-12-02 07:04:42.197371930 -0500\n@@ -532,7 +532,8 @@\n \n     @Override\n     public void remove() {\n-      NodeUtil.removeChild(exprNode.getParent(), exprNode);\n+      int index = -1;\n+\tNodeUtil.removeChild(exprNode.getParent(), exprNode);\n     }\n \n     @Override\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 06:51:37.279734609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_933/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 07:04:42.197371930 -0500\n@@ -1424,7 +1424,8 @@\n       }\n       res = n.checkTreeEqualsImpl(n2);\n       if (res != null) {\n-        return res;\n+        StringBuilder s = new StringBuilder();\n+\t\treturn res;\n       }\n     }\n     return res;\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java", 
          "line": 535, 
          "faulty": "NodeUtil.removeChild(exprNode.getParent(),exprNode);", 
          "type": "InsertBefore", 
          "seed": "int index=-1;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 88, 
          "faulty": "canRemove=true;", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1427, 
          "faulty": "return res;", 
          "type": "InsertBefore", 
          "seed": "StringBuilder s=new StringBuilder();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:51:37.259744610 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1404/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 07:08:44.967602934 -0500\n@@ -96,11 +96,6 @@\n               canRemove = true;\n             }\n           }\n-\n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java\t2018-12-02 06:51:39.210768564 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1404/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java\t2018-12-02 07:08:44.967602934 -0500\n@@ -532,7 +532,8 @@\n \n     @Override\n     public void remove() {\n-      NodeUtil.removeChild(exprNode.getParent(), exprNode);\n+      int index = -1;\n+\tNodeUtil.removeChild(exprNode.getParent(), exprNode);\n     }\n \n     @Override\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 06:51:37.279734609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1404/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 07:08:44.967602934 -0500\n@@ -937,14 +937,7 @@\n         sb.append(getString());\n       } else if (type == Token.FUNCTION) {\n         sb.append(' ');\n-        // In the case of JsDoc trees, the first child is often not a string\n-        // which causes exceptions to be thrown when calling toString or\n-        // toStringTree.\n-        if (first == null || first.getType() != Token.NAME) {\n-          sb.append(\"<invalid>\");\n-        } else {\n-          sb.append(first.getString());\n-        }\n+        int lineno = getLineno();\n       } else if (this instanceof ScriptOrFnNode) {\n         ScriptOrFnNode sof = (ScriptOrFnNode) this;\n         if (this instanceof FunctionNode) {\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 06:51:37.283732609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1404/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 07:08:44.971603050 -0500\n@@ -359,7 +359,7 @@\n           case LP:              return \"LP\";\n           case RP:              return \"RP\";\n           case COMMA:           return \"COMMA\";\n-          case ASSIGN:          return \"ASSIGN\";\n+          case ASSIGN:          ;\n           case ASSIGN_BITOR:    return \"ASSIGN_BITOR\";\n           case ASSIGN_BITXOR:   return \"ASSIGN_BITXOR\";\n           case ASSIGN_BITAND:   return \"ASSIGN_BITAND\";\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 943, 
          "faulty": "if (first == null || first.getType() != Token.NAME) {\n  sb.append(\"<invalid>\");\n}\n else {\n  sb.append(first.getString());\n}", 
          "type": "Replace", 
          "seed": "int lineno=getLineno();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 102, 
          "faulty": "changed=true;", 
          "type": "InsertBefore", 
          "seed": "StringBuilder builder=new StringBuilder();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java", 
          "line": 535, 
          "faulty": "NodeUtil.removeChild(exprNode.getParent(),exprNode);", 
          "type": "InsertBefore", 
          "seed": "int index=-1;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 362, 
          "faulty": "return \"ASSIGN\";", 
          "type": "Delete", 
          "seed": "case 2:"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:51:37.259744610 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_420/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 07:00:12.401585704 -0500\n@@ -96,11 +96,6 @@\n               canRemove = true;\n             }\n           }\n-\n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 06:51:37.283732609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_420/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 07:00:12.405585404 -0500\n@@ -356,10 +356,10 @@\n           case RB:              return \"RB\";\n           case LC:              return \"LC\";\n           case RC:              return \"RC\";\n-          case LP:              return \"LP\";\n+          case LP:              int c = 0;\n           case RP:              return \"RP\";\n           case COMMA:           return \"COMMA\";\n-          case ASSIGN:          return \"ASSIGN\";\n+          case ASSIGN:          ;\n           case ASSIGN_BITOR:    return \"ASSIGN_BITOR\";\n           case ASSIGN_BITXOR:   return \"ASSIGN_BITXOR\";\n           case ASSIGN_BITAND:   return \"ASSIGN_BITAND\";\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 362, 
          "faulty": "return \"ASSIGN\";", 
          "type": "Delete", 
          "seed": "Node pn=memberExpr(true);"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 359, 
          "faulty": "return \"LP\";", 
          "type": "Replace", 
          "seed": "int c=0;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:51:37.259744610 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_107/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:57:17.516059587 -0500\n@@ -96,11 +96,6 @@\n               canRemove = true;\n             }\n           }\n-\n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 06:51:37.279734609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_107/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 06:57:17.516059587 -0500\n@@ -1424,7 +1424,7 @@\n       }\n       res = n.checkTreeEqualsImpl(n2);\n       if (res != null) {\n-        return res;\n+        JSDocInfo varInfo = null;\n       }\n     }\n     return res;\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 102, 
          "faulty": "changed=true;", 
          "type": "InsertBefore", 
          "seed": "StringBuilder builder=new StringBuilder();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1427, 
          "faulty": "return res;", 
          "type": "Replace", 
          "seed": "JSDocInfo varInfo=null;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 102, 
          "faulty": "changed=true;", 
          "type": "Delete", 
          "seed": "return;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:51:37.259744610 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_214/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:58:14.500886039 -0500\n@@ -85,7 +85,7 @@\n           boolean canRemove = false;\n \n           if (specializationState == null) {\n-            canRemove = true;\n+            break;\n           } else {\n             Node specializableFunction =\n               getSpecializableFunctionFromSymbol(declaration);\n@@ -108,7 +108,8 @@\n     }\n \n     if (changed) {\n-      compiler.reportCodeChange();\n+      int index = -1;\n+\tcompiler.reportCodeChange();\n     }\n   }\n \n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 111, 
          "faulty": "compiler.reportCodeChange();", 
          "type": "InsertBefore", 
          "seed": "int index=-1;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 88, 
          "faulty": "canRemove=true;", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 88, 
          "faulty": "canRemove=true;", 
          "type": "Replace", 
          "seed": "break;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:51:37.259744610 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1604/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 07:10:29.034169489 -0500\n@@ -85,7 +85,6 @@\n           boolean canRemove = false;\n \n           if (specializationState == null) {\n-            canRemove = true;\n           } else {\n             Node specializableFunction =\n               getSpecializableFunctionFromSymbol(declaration);\n@@ -99,7 +98,6 @@\n \n           if (canRemove) {\n             declaration.remove();\n-            changed = true;\n           }\n         }\n \n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 06:51:37.279734609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1604/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 07:10:29.034169489 -0500\n@@ -1424,7 +1424,7 @@\n       }\n       res = n.checkTreeEqualsImpl(n2);\n       if (res != null) {\n-        return res;\n+        Kit.codeBug();\n       }\n     }\n     return res;\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 06:51:37.283732609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1604/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 07:10:29.034169489 -0500\n@@ -315,7 +315,7 @@\n           case NUMBER:          return \"NUMBER\";\n           case STRING:          return \"STRING\";\n           case NULL:            return \"NULL\";\n-          case THIS:            return \"THIS\";\n+          case THIS:            ;\n           case FALSE:           return \"FALSE\";\n           case TRUE:            return \"TRUE\";\n           case SHEQ:            return \"SHEQ\";\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 88, 
          "faulty": "canRemove=true;", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 318, 
          "faulty": "return \"THIS\";", 
          "type": "Delete", 
          "seed": "return Token.STRING;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1427, 
          "faulty": "return res;", 
          "type": "Replace", 
          "seed": "Kit.codeBug();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 102, 
          "faulty": "changed=true;", 
          "type": "Delete", 
          "seed": "return false;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:51:37.259744610 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1049/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 07:05:45.285082212 -0500\n@@ -96,11 +96,6 @@\n               canRemove = true;\n             }\n           }\n-\n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 06:51:37.279734609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1049/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 07:05:45.289082196 -0500\n@@ -937,7 +937,8 @@\n         sb.append(getString());\n       } else if (type == Token.FUNCTION) {\n         sb.append(' ');\n-        // In the case of JsDoc trees, the first child is often not a string\n+        NodeMismatch res = null;\n+\t\t// In the case of JsDoc trees, the first child is often not a string\n         // which causes exceptions to be thrown when calling toString or\n         // toStringTree.\n         if (first == null || first.getType() != Token.NAME) {\n@@ -1424,7 +1425,6 @@\n       }\n       res = n.checkTreeEqualsImpl(n2);\n       if (res != null) {\n-        return res;\n       }\n     }\n     return res;\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 102, 
          "faulty": "changed=true;", 
          "type": "InsertBefore", 
          "seed": "StringBuilder builder=new StringBuilder();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1427, 
          "faulty": "return res;", 
          "type": "Delete", 
          "seed": "return Token.STRING;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 943, 
          "faulty": "if (first == null || first.getType() != Token.NAME) {\n  sb.append(\"<invalid>\");\n}\n else {\n  sb.append(first.getString());\n}", 
          "type": "InsertBefore", 
          "seed": "NodeMismatch res=null;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:51:37.259744610 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1095/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 07:06:10.004994549 -0500\n@@ -96,11 +96,6 @@\n               canRemove = true;\n             }\n           }\n-\n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n@@ -108,7 +103,8 @@\n     }\n \n     if (changed) {\n-      compiler.reportCodeChange();\n+      int index = -1;\n+\tcompiler.reportCodeChange();\n     }\n   }\n \n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 06:51:37.279734609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1095/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 07:06:10.008994535 -0500\n@@ -218,7 +218,7 @@\n         case QUOTED_PROP:        return \"quoted\";\n         case OPT_ARG_NAME:       return \"opt_arg\";\n \n-        case SYNTHETIC_BLOCK_PROP: return \"synthetic\";\n+        case SYNTHETIC_BLOCK_PROP: ;\n         case EMPTY_BLOCK:        return \"empty_block\";\n         case ORIGINALNAME_PROP:  return \"originalname\";\n         case SIDE_EFFECT_FLAGS:  return \"side_effect_flags\";\n@@ -1424,7 +1424,6 @@\n       }\n       res = n.checkTreeEqualsImpl(n2);\n       if (res != null) {\n-        return res;\n       }\n     }\n     return res;\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 06:51:37.283732609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1095/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 07:06:10.008994535 -0500\n@@ -359,7 +359,7 @@\n           case LP:              return \"LP\";\n           case RP:              return \"RP\";\n           case COMMA:           return \"COMMA\";\n-          case ASSIGN:          return \"ASSIGN\";\n+          case ASSIGN:          ;\n           case ASSIGN_BITOR:    return \"ASSIGN_BITOR\";\n           case ASSIGN_BITXOR:   return \"ASSIGN_BITXOR\";\n           case ASSIGN_BITAND:   return \"ASSIGN_BITAND\";\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 221, 
          "faulty": "return \"synthetic\";", 
          "type": "Delete", 
          "seed": "consumeToken();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 362, 
          "faulty": "return \"ASSIGN\";", 
          "type": "Delete", 
          "seed": "return Token.LP;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1427, 
          "faulty": "return res;", 
          "type": "Delete", 
          "seed": "return Token.STRING;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 111, 
          "faulty": "compiler.reportCodeChange();", 
          "type": "InsertBefore", 
          "seed": "int index=-1;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:51:37.259744610 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1211/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 07:07:06.976838409 -0500\n@@ -85,7 +85,6 @@\n           boolean canRemove = false;\n \n           if (specializationState == null) {\n-            canRemove = true;\n           } else {\n             Node specializableFunction =\n               getSpecializableFunctionFromSymbol(declaration);\n@@ -96,11 +95,6 @@\n               canRemove = true;\n             }\n           }\n-\n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java\t2018-12-02 06:51:39.210768564 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1211/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java\t2018-12-02 07:07:06.980838398 -0500\n@@ -532,7 +532,8 @@\n \n     @Override\n     public void remove() {\n-      NodeUtil.removeChild(exprNode.getParent(), exprNode);\n+      int index = -1;\n+\tNodeUtil.removeChild(exprNode.getParent(), exprNode);\n     }\n \n     @Override\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 06:51:37.279734609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1211/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 07:07:06.980838398 -0500\n@@ -218,7 +218,7 @@\n         case QUOTED_PROP:        return \"quoted\";\n         case OPT_ARG_NAME:       return \"opt_arg\";\n \n-        case SYNTHETIC_BLOCK_PROP: return \"synthetic\";\n+        case SYNTHETIC_BLOCK_PROP: ;\n         case EMPTY_BLOCK:        return \"empty_block\";\n         case ORIGINALNAME_PROP:  return \"originalname\";\n         case SIDE_EFFECT_FLAGS:  return \"side_effect_flags\";\n@@ -937,14 +937,7 @@\n         sb.append(getString());\n       } else if (type == Token.FUNCTION) {\n         sb.append(' ');\n-        // In the case of JsDoc trees, the first child is often not a string\n-        // which causes exceptions to be thrown when calling toString or\n-        // toStringTree.\n-        if (first == null || first.getType() != Token.NAME) {\n-          sb.append(\"<invalid>\");\n-        } else {\n-          sb.append(first.getString());\n-        }\n+        int lineno = getLineno();\n       } else if (this instanceof ScriptOrFnNode) {\n         ScriptOrFnNode sof = (ScriptOrFnNode) this;\n         if (this instanceof FunctionNode) {\n@@ -1424,7 +1417,7 @@\n       }\n       res = n.checkTreeEqualsImpl(n2);\n       if (res != null) {\n-        return res;\n+        StringBuilder sb = new StringBuilder();\n       }\n     }\n     return res;\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 06:51:37.283732609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1211/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 07:07:06.980838398 -0500\n@@ -315,7 +315,7 @@\n           case NUMBER:          return \"NUMBER\";\n           case STRING:          return \"STRING\";\n           case NULL:            return \"NULL\";\n-          case THIS:            return \"THIS\";\n+          case THIS:            ;\n           case FALSE:           return \"FALSE\";\n           case TRUE:            return \"TRUE\";\n           case SHEQ:            return \"SHEQ\";\n@@ -359,7 +359,7 @@\n           case LP:              return \"LP\";\n           case RP:              return \"RP\";\n           case COMMA:           return \"COMMA\";\n-          case ASSIGN:          return \"ASSIGN\";\n+          case ASSIGN:          ;\n           case ASSIGN_BITOR:    return \"ASSIGN_BITOR\";\n           case ASSIGN_BITXOR:   return \"ASSIGN_BITXOR\";\n           case ASSIGN_BITAND:   return \"ASSIGN_BITAND\";\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 318, 
          "faulty": "return \"THIS\";", 
          "type": "Delete", 
          "seed": "return Token.STRING;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 88, 
          "faulty": "canRemove=true;", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 943, 
          "faulty": "if (first == null || first.getType() != Token.NAME) {\n  sb.append(\"<invalid>\");\n}\n else {\n  sb.append(first.getString());\n}", 
          "type": "Replace", 
          "seed": "int lineno=getLineno();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1427, 
          "faulty": "return res;", 
          "type": "Delete", 
          "seed": "boolean first=true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 318, 
          "faulty": "return \"THIS\";", 
          "type": "Delete", 
          "seed": "return Token.XMLATTR;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 221, 
          "faulty": "return \"synthetic\";", 
          "type": "Delete", 
          "seed": "return Token.XMLATTR;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 221, 
          "faulty": "return \"synthetic\";", 
          "type": "Delete", 
          "seed": "consumeToken();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1427, 
          "faulty": "return res;", 
          "type": "Delete", 
          "seed": "boolean first=true;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 221, 
          "faulty": "return \"synthetic\";", 
          "type": "Delete", 
          "seed": "consumeToken();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1427, 
          "faulty": "return res;", 
          "type": "Delete", 
          "seed": "boolean first=true;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 102, 
          "faulty": "changed=true;", 
          "type": "InsertBefore", 
          "seed": "StringBuilder builder=new StringBuilder();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java", 
          "line": 535, 
          "faulty": "NodeUtil.removeChild(exprNode.getParent(),exprNode);", 
          "type": "InsertBefore", 
          "seed": "int index=-1;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 362, 
          "faulty": "return \"ASSIGN\";", 
          "type": "Delete", 
          "seed": "case 2:"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1427, 
          "faulty": "return res;", 
          "type": "Replace", 
          "seed": "StringBuilder sb=new StringBuilder();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 362, 
          "faulty": "return \"ASSIGN\";", 
          "type": "Delete", 
          "seed": "rehashTable();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:51:37.259744610 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1592/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 07:10:23.246047067 -0500\n@@ -96,11 +96,6 @@\n               canRemove = true;\n             }\n           }\n-\n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 06:51:37.283732609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1592/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 07:10:23.246047067 -0500\n@@ -307,7 +307,7 @@\n           case TYPEOF:          return \"TYPEOF\";\n           case GETPROP:         return \"GETPROP\";\n           case SETPROP:         return \"SETPROP\";\n-          case GETELEM:         return \"GETELEM\";\n+          case GETELEM:         return \"return\";\n           case SETELEM:         return \"SETELEM\";\n           case CALL:            return \"CALL\";\n           case NAME:            return \"NAME\";\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 310, 
          "faulty": "return \"GETELEM\";", 
          "type": "Replace", 
          "seed": "return \"return\";"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:51:37.259744610 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_565/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 07:01:32.127085384 -0500\n@@ -85,7 +85,6 @@\n           boolean canRemove = false;\n \n           if (specializationState == null) {\n-            canRemove = true;\n           } else {\n             Node specializableFunction =\n               getSpecializableFunctionFromSymbol(declaration);\n@@ -96,11 +95,6 @@\n               canRemove = true;\n             }\n           }\n-\n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 06:51:37.283732609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_565/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 07:01:32.127085384 -0500\n@@ -315,7 +315,7 @@\n           case NUMBER:          return \"NUMBER\";\n           case STRING:          return \"STRING\";\n           case NULL:            return \"NULL\";\n-          case THIS:            return \"THIS\";\n+          case THIS:            ;\n           case FALSE:           return \"FALSE\";\n           case TRUE:            return \"TRUE\";\n           case SHEQ:            return \"SHEQ\";\n@@ -359,7 +359,7 @@\n           case LP:              return \"LP\";\n           case RP:              return \"RP\";\n           case COMMA:           return \"COMMA\";\n-          case ASSIGN:          return \"ASSIGN\";\n+          case ASSIGN:          ;\n           case ASSIGN_BITOR:    return \"ASSIGN_BITOR\";\n           case ASSIGN_BITXOR:   return \"ASSIGN_BITXOR\";\n           case ASSIGN_BITAND:   return \"ASSIGN_BITAND\";\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 318, 
          "faulty": "return \"THIS\";", 
          "type": "Delete", 
          "seed": "return Token.STRING;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 362, 
          "faulty": "return \"ASSIGN\";", 
          "type": "Delete", 
          "seed": "return Token.LP;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 88, 
          "faulty": "canRemove=true;", 
          "type": "Delete", 
          "seed": "return false;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:51:37.259744610 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_830/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 07:03:49.405702076 -0500\n@@ -85,7 +85,6 @@\n           boolean canRemove = false;\n \n           if (specializationState == null) {\n-            canRemove = true;\n           } else {\n             Node specializableFunction =\n               getSpecializableFunctionFromSymbol(declaration);\n@@ -96,11 +95,6 @@\n               canRemove = true;\n             }\n           }\n-\n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java\t2018-12-02 06:51:39.210768564 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_830/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java\t2018-12-02 07:03:49.409702047 -0500\n@@ -532,7 +532,8 @@\n \n     @Override\n     public void remove() {\n-      NodeUtil.removeChild(exprNode.getParent(), exprNode);\n+      int index = -1;\n+\tNodeUtil.removeChild(exprNode.getParent(), exprNode);\n     }\n \n     @Override\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 06:51:37.279734609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_830/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 07:03:49.409702047 -0500\n@@ -937,14 +937,6 @@\n         sb.append(getString());\n       } else if (type == Token.FUNCTION) {\n         sb.append(' ');\n-        // In the case of JsDoc trees, the first child is often not a string\n-        // which causes exceptions to be thrown when calling toString or\n-        // toStringTree.\n-        if (first == null || first.getType() != Token.NAME) {\n-          sb.append(\"<invalid>\");\n-        } else {\n-          sb.append(first.getString());\n-        }\n       } else if (this instanceof ScriptOrFnNode) {\n         ScriptOrFnNode sof = (ScriptOrFnNode) this;\n         if (this instanceof FunctionNode) {\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 06:51:37.283732609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_830/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 07:03:49.409702047 -0500\n@@ -359,7 +359,7 @@\n           case LP:              return \"LP\";\n           case RP:              return \"RP\";\n           case COMMA:           return \"COMMA\";\n-          case ASSIGN:          return \"ASSIGN\";\n+          case ASSIGN:          ;\n           case ASSIGN_BITOR:    return \"ASSIGN_BITOR\";\n           case ASSIGN_BITXOR:   return \"ASSIGN_BITXOR\";\n           case ASSIGN_BITAND:   return \"ASSIGN_BITAND\";\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 102, 
          "faulty": "changed=true;", 
          "type": "InsertBefore", 
          "seed": "StringBuilder builder=new StringBuilder();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 362, 
          "faulty": "return \"ASSIGN\";", 
          "type": "Delete", 
          "seed": "Node pn=memberExpr(true);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 88, 
          "faulty": "canRemove=true;", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 101, 
          "faulty": "declaration.remove();", 
          "type": "InsertBefore", 
          "seed": "return;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java", 
          "line": 535, 
          "faulty": "NodeUtil.removeChild(exprNode.getParent(),exprNode);", 
          "type": "InsertBefore", 
          "seed": "int index=-1;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 943, 
          "faulty": "if (first == null || first.getType() != Token.NAME) {\n  sb.append(\"<invalid>\");\n}\n else {\n  sb.append(first.getString());\n}", 
          "type": "Delete", 
          "seed": "return Token.RP;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:51:37.259744610 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1522/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 07:09:48.121257067 -0500\n@@ -85,7 +85,7 @@\n           boolean canRemove = false;\n \n           if (specializationState == null) {\n-            canRemove = true;\n+            return;\n           } else {\n             Node specializableFunction =\n               getSpecializableFunctionFromSymbol(declaration);\n@@ -96,11 +96,6 @@\n               canRemove = true;\n             }\n           }\n-\n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 06:51:37.279734609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1522/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 07:09:48.121257067 -0500\n@@ -218,7 +218,7 @@\n         case QUOTED_PROP:        return \"quoted\";\n         case OPT_ARG_NAME:       return \"opt_arg\";\n \n-        case SYNTHETIC_BLOCK_PROP: return \"synthetic\";\n+        case SYNTHETIC_BLOCK_PROP: ;\n         case EMPTY_BLOCK:        return \"empty_block\";\n         case ORIGINALNAME_PROP:  return \"originalname\";\n         case SIDE_EFFECT_FLAGS:  return \"side_effect_flags\";\n@@ -937,14 +937,7 @@\n         sb.append(getString());\n       } else if (type == Token.FUNCTION) {\n         sb.append(' ');\n-        // In the case of JsDoc trees, the first child is often not a string\n-        // which causes exceptions to be thrown when calling toString or\n-        // toStringTree.\n-        if (first == null || first.getType() != Token.NAME) {\n-          sb.append(\"<invalid>\");\n-        } else {\n-          sb.append(first.getString());\n-        }\n+        int lineno = getLineno();\n       } else if (this instanceof ScriptOrFnNode) {\n         ScriptOrFnNode sof = (ScriptOrFnNode) this;\n         if (this instanceof FunctionNode) {\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 06:51:37.283732609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1522/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 07:09:48.125257161 -0500\n@@ -315,7 +315,7 @@\n           case NUMBER:          return \"NUMBER\";\n           case STRING:          return \"STRING\";\n           case NULL:            return \"NULL\";\n-          case THIS:            return \"THIS\";\n+          case THIS:            ;\n           case FALSE:           return \"FALSE\";\n           case TRUE:            return \"TRUE\";\n           case SHEQ:            return \"SHEQ\";\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 88, 
          "faulty": "canRemove=true;", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 318, 
          "faulty": "return \"THIS\";", 
          "type": "Delete", 
          "seed": "return Token.XMLATTR;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 221, 
          "faulty": "return \"synthetic\";", 
          "type": "Delete", 
          "seed": "return Token.XMLATTR;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 221, 
          "faulty": "return \"synthetic\";", 
          "type": "Delete", 
          "seed": "consumeToken();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 943, 
          "faulty": "if (first == null || first.getType() != Token.NAME) {\n  sb.append(\"<invalid>\");\n}\n else {\n  sb.append(first.getString());\n}", 
          "type": "Replace", 
          "seed": "int lineno=getLineno();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 88, 
          "faulty": "canRemove=true;", 
          "type": "InsertBefore", 
          "seed": "return;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:51:37.259744610 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1513/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 07:09:43.737152433 -0500\n@@ -96,11 +96,6 @@\n               canRemove = true;\n             }\n           }\n-\n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 06:51:37.279734609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1513/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 07:09:43.737152433 -0500\n@@ -218,7 +218,7 @@\n         case QUOTED_PROP:        return \"quoted\";\n         case OPT_ARG_NAME:       return \"opt_arg\";\n \n-        case SYNTHETIC_BLOCK_PROP: return \"synthetic\";\n+        case SYNTHETIC_BLOCK_PROP: ;\n         case EMPTY_BLOCK:        return \"empty_block\";\n         case ORIGINALNAME_PROP:  return \"originalname\";\n         case SIDE_EFFECT_FLAGS:  return \"side_effect_flags\";\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 06:51:37.283732609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1513/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 07:09:43.741152529 -0500\n@@ -307,7 +307,7 @@\n           case TYPEOF:          return \"TYPEOF\";\n           case GETPROP:         return \"GETPROP\";\n           case SETPROP:         return \"SETPROP\";\n-          case GETELEM:         return \"GETELEM\";\n+          case GETELEM:         ;\n           case SETELEM:         return \"SETELEM\";\n           case CALL:            return \"CALL\";\n           case NAME:            return \"NAME\";\n@@ -359,7 +359,7 @@\n           case LP:              return \"LP\";\n           case RP:              return \"RP\";\n           case COMMA:           return \"COMMA\";\n-          case ASSIGN:          return \"ASSIGN\";\n+          case ASSIGN:          Context cx = Context.getCurrentContext();\n           case ASSIGN_BITOR:    return \"ASSIGN_BITOR\";\n           case ASSIGN_BITXOR:   return \"ASSIGN_BITXOR\";\n           case ASSIGN_BITAND:   return \"ASSIGN_BITAND\";\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 221, 
          "faulty": "return \"synthetic\";", 
          "type": "Delete", 
          "seed": "consumeToken();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 362, 
          "faulty": "return \"ASSIGN\";", 
          "type": "Replace", 
          "seed": "Context cx=Context.getCurrentContext();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 310, 
          "faulty": "return \"GETELEM\";", 
          "type": "Delete", 
          "seed": "return Token.LT;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:51:37.259744610 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1238/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 07:07:23.748915579 -0500\n@@ -96,11 +96,6 @@\n               canRemove = true;\n             }\n           }\n-\n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 06:51:37.279734609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1238/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 07:07:23.748915579 -0500\n@@ -218,7 +218,7 @@\n         case QUOTED_PROP:        return \"quoted\";\n         case OPT_ARG_NAME:       return \"opt_arg\";\n \n-        case SYNTHETIC_BLOCK_PROP: return \"synthetic\";\n+        case SYNTHETIC_BLOCK_PROP: ;\n         case EMPTY_BLOCK:        return \"empty_block\";\n         case ORIGINALNAME_PROP:  return \"originalname\";\n         case SIDE_EFFECT_FLAGS:  return \"side_effect_flags\";\n@@ -1382,7 +1382,8 @@\n   public String checkTreeEquals(Node node2) {\n       NodeMismatch diff = checkTreeEqualsImpl(node2);\n       if (diff != null) {\n-        return \"Node tree inequality:\" +\n+        int c;\n+\t\treturn \"Node tree inequality:\" +\n             \"\\nTree1:\\n\" + toStringTree() +\n             \"\\n\\nTree2:\\n\" + node2.toStringTree() +\n             \"\\n\\nSubtree1: \" + diff.nodeA.toStringTree() +\n@@ -1424,7 +1425,6 @@\n       }\n       res = n.checkTreeEqualsImpl(n2);\n       if (res != null) {\n-        return res;\n       }\n     }\n     return res;\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 06:51:37.283732609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1238/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 07:07:23.752915732 -0500\n@@ -359,7 +359,7 @@\n           case LP:              return \"LP\";\n           case RP:              return \"RP\";\n           case COMMA:           return \"COMMA\";\n-          case ASSIGN:          return \"ASSIGN\";\n+          case ASSIGN:          ;\n           case ASSIGN_BITOR:    return \"ASSIGN_BITOR\";\n           case ASSIGN_BITXOR:   return \"ASSIGN_BITXOR\";\n           case ASSIGN_BITAND:   return \"ASSIGN_BITAND\";\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 221, 
          "faulty": "return \"synthetic\";", 
          "type": "Delete", 
          "seed": "consumeToken();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1427, 
          "faulty": "return res;", 
          "type": "Delete", 
          "seed": "boolean first=true;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 221, 
          "faulty": "return \"synthetic\";", 
          "type": "Delete", 
          "seed": "consumeToken();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 221, 
          "faulty": "return \"synthetic\";", 
          "type": "Delete", 
          "seed": "consumeToken();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 362, 
          "faulty": "return \"ASSIGN\";", 
          "type": "Delete", 
          "seed": "return Token.LP;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1385, 
          "faulty": "return \"Node tree inequality:\" + \"\\nTree1:\\n\" + toStringTree() + \"\\n\\nTree2:\\n\"+ node2.toStringTree()+ \"\\n\\nSubtree1: \"+ diff.nodeA.toStringTree()+ \"\\n\\nSubtree2: \"+ diff.nodeB.toStringTree();", 
          "type": "InsertBefore", 
          "seed": "int c;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:51:37.259744610 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1430/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 07:08:57.379954516 -0500\n@@ -96,11 +96,6 @@\n               canRemove = true;\n             }\n           }\n-\n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 06:51:37.279734609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1430/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 07:08:57.379954516 -0500\n@@ -218,7 +218,7 @@\n         case QUOTED_PROP:        return \"quoted\";\n         case OPT_ARG_NAME:       return \"opt_arg\";\n \n-        case SYNTHETIC_BLOCK_PROP: return \"synthetic\";\n+        case SYNTHETIC_BLOCK_PROP: ;\n         case EMPTY_BLOCK:        return \"empty_block\";\n         case ORIGINALNAME_PROP:  return \"originalname\";\n         case SIDE_EFFECT_FLAGS:  return \"side_effect_flags\";\n@@ -937,14 +937,7 @@\n         sb.append(getString());\n       } else if (type == Token.FUNCTION) {\n         sb.append(' ');\n-        // In the case of JsDoc trees, the first child is often not a string\n-        // which causes exceptions to be thrown when calling toString or\n-        // toStringTree.\n-        if (first == null || first.getType() != Token.NAME) {\n-          sb.append(\"<invalid>\");\n-        } else {\n-          sb.append(first.getString());\n-        }\n+        int lineno = getLineno();\n       } else if (this instanceof ScriptOrFnNode) {\n         ScriptOrFnNode sof = (ScriptOrFnNode) this;\n         if (this instanceof FunctionNode) {\n@@ -1424,7 +1417,6 @@\n       }\n       res = n.checkTreeEqualsImpl(n2);\n       if (res != null) {\n-        return res;\n       }\n     }\n     return res;\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 06:51:37.283732609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1430/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 07:08:57.383954626 -0500\n@@ -315,7 +315,7 @@\n           case NUMBER:          return \"NUMBER\";\n           case STRING:          return \"STRING\";\n           case NULL:            return \"NULL\";\n-          case THIS:            return \"THIS\";\n+          case THIS:            ;\n           case FALSE:           return \"FALSE\";\n           case TRUE:            return \"TRUE\";\n           case SHEQ:            return \"SHEQ\";\n@@ -356,10 +356,10 @@\n           case RB:              return \"RB\";\n           case LC:              return \"LC\";\n           case RC:              return \"RC\";\n-          case LP:              return \"LP\";\n+          case LP:              ;\n           case RP:              return \"RP\";\n           case COMMA:           return \"COMMA\";\n-          case ASSIGN:          return \"ASSIGN\";\n+          case ASSIGN:          Context cx = Context.getCurrentContext();\n           case ASSIGN_BITOR:    return \"ASSIGN_BITOR\";\n           case ASSIGN_BITXOR:   return \"ASSIGN_BITXOR\";\n           case ASSIGN_BITAND:   return \"ASSIGN_BITAND\";\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 318, 
          "faulty": "return \"THIS\";", 
          "type": "Delete", 
          "seed": "return Token.STRING;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 221, 
          "faulty": "return \"synthetic\";", 
          "type": "Delete", 
          "seed": "consumeToken();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1427, 
          "faulty": "return res;", 
          "type": "Delete", 
          "seed": "boolean first=true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 318, 
          "faulty": "return \"THIS\";", 
          "type": "Delete", 
          "seed": "return Token.XMLATTR;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 221, 
          "faulty": "return \"synthetic\";", 
          "type": "Delete", 
          "seed": "return Token.XMLATTR;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 943, 
          "faulty": "if (first == null || first.getType() != Token.NAME) {\n  sb.append(\"<invalid>\");\n}\n else {\n  sb.append(first.getString());\n}", 
          "type": "Replace", 
          "seed": "int lineno=getLineno();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 362, 
          "faulty": "return \"ASSIGN\";", 
          "type": "Replace", 
          "seed": "Context cx=Context.getCurrentContext();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 359, 
          "faulty": "return \"LP\";", 
          "type": "Delete", 
          "seed": "int lineno=getLineno();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:51:37.259744610 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_898/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 07:04:23.985475814 -0500\n@@ -85,7 +85,6 @@\n           boolean canRemove = false;\n \n           if (specializationState == null) {\n-            canRemove = true;\n           } else {\n             Node specializableFunction =\n               getSpecializableFunctionFromSymbol(declaration);\n@@ -96,11 +95,6 @@\n               canRemove = true;\n             }\n           }\n-\n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 06:51:37.279734609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_898/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 07:04:23.985475814 -0500\n@@ -937,14 +937,7 @@\n         sb.append(getString());\n       } else if (type == Token.FUNCTION) {\n         sb.append(' ');\n-        // In the case of JsDoc trees, the first child is often not a string\n-        // which causes exceptions to be thrown when calling toString or\n-        // toStringTree.\n-        if (first == null || first.getType() != Token.NAME) {\n-          sb.append(\"<invalid>\");\n-        } else {\n-          sb.append(first.getString());\n-        }\n+        int lineno = getLineno();\n       } else if (this instanceof ScriptOrFnNode) {\n         ScriptOrFnNode sof = (ScriptOrFnNode) this;\n         if (this instanceof FunctionNode) {\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 06:51:37.283732609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_898/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 07:04:23.989475790 -0500\n@@ -359,7 +359,7 @@\n           case LP:              return \"LP\";\n           case RP:              return \"RP\";\n           case COMMA:           return \"COMMA\";\n-          case ASSIGN:          return \"ASSIGN\";\n+          case ASSIGN:          ;\n           case ASSIGN_BITOR:    return \"ASSIGN_BITOR\";\n           case ASSIGN_BITXOR:   return \"ASSIGN_BITXOR\";\n           case ASSIGN_BITAND:   return \"ASSIGN_BITAND\";\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 362, 
          "faulty": "return \"ASSIGN\";", 
          "type": "Delete", 
          "seed": "Node pn=memberExpr(true);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 88, 
          "faulty": "canRemove=true;", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 88, 
          "faulty": "canRemove=true;", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 943, 
          "faulty": "if (first == null || first.getType() != Token.NAME) {\n  sb.append(\"<invalid>\");\n}\n else {\n  sb.append(first.getString());\n}", 
          "type": "Replace", 
          "seed": "int lineno=getLineno();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:51:37.259744610 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1071/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 07:05:56.753039905 -0500\n@@ -85,7 +85,6 @@\n           boolean canRemove = false;\n \n           if (specializationState == null) {\n-            canRemove = true;\n           } else {\n             Node specializableFunction =\n               getSpecializableFunctionFromSymbol(declaration);\n@@ -96,11 +95,6 @@\n               canRemove = true;\n             }\n           }\n-\n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 06:51:37.279734609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1071/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 07:05:56.757039891 -0500\n@@ -218,7 +218,7 @@\n         case QUOTED_PROP:        return \"quoted\";\n         case OPT_ARG_NAME:       return \"opt_arg\";\n \n-        case SYNTHETIC_BLOCK_PROP: return \"synthetic\";\n+        case SYNTHETIC_BLOCK_PROP: ;\n         case EMPTY_BLOCK:        return \"empty_block\";\n         case ORIGINALNAME_PROP:  return \"originalname\";\n         case SIDE_EFFECT_FLAGS:  return \"side_effect_flags\";\n@@ -937,14 +937,7 @@\n         sb.append(getString());\n       } else if (type == Token.FUNCTION) {\n         sb.append(' ');\n-        // In the case of JsDoc trees, the first child is often not a string\n-        // which causes exceptions to be thrown when calling toString or\n-        // toStringTree.\n-        if (first == null || first.getType() != Token.NAME) {\n-          sb.append(\"<invalid>\");\n-        } else {\n-          sb.append(first.getString());\n-        }\n+        int lineno = getLineno();\n       } else if (this instanceof ScriptOrFnNode) {\n         ScriptOrFnNode sof = (ScriptOrFnNode) this;\n         if (this instanceof FunctionNode) {\n@@ -1424,7 +1417,6 @@\n       }\n       res = n.checkTreeEqualsImpl(n2);\n       if (res != null) {\n-        return res;\n       }\n     }\n     return res;\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 06:51:37.283732609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1071/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 07:05:56.757039891 -0500\n@@ -315,7 +315,7 @@\n           case NUMBER:          return \"NUMBER\";\n           case STRING:          return \"STRING\";\n           case NULL:            return \"NULL\";\n-          case THIS:            return \"THIS\";\n+          case THIS:            ;\n           case FALSE:           return \"FALSE\";\n           case TRUE:            return \"TRUE\";\n           case SHEQ:            return \"SHEQ\";\n@@ -359,7 +359,7 @@\n           case LP:              return \"LP\";\n           case RP:              return \"RP\";\n           case COMMA:           return \"COMMA\";\n-          case ASSIGN:          return \"ASSIGN\";\n+          case ASSIGN:          ;\n           case ASSIGN_BITOR:    return \"ASSIGN_BITOR\";\n           case ASSIGN_BITXOR:   return \"ASSIGN_BITXOR\";\n           case ASSIGN_BITAND:   return \"ASSIGN_BITAND\";\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 318, 
          "faulty": "return \"THIS\";", 
          "type": "Delete", 
          "seed": "return Token.STRING;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 88, 
          "faulty": "canRemove=true;", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 943, 
          "faulty": "if (first == null || first.getType() != Token.NAME) {\n  sb.append(\"<invalid>\");\n}\n else {\n  sb.append(first.getString());\n}", 
          "type": "Replace", 
          "seed": "int lineno=getLineno();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1427, 
          "faulty": "return res;", 
          "type": "Delete", 
          "seed": "boolean first=true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 318, 
          "faulty": "return \"THIS\";", 
          "type": "Delete", 
          "seed": "return Token.XMLATTR;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 221, 
          "faulty": "return \"synthetic\";", 
          "type": "Delete", 
          "seed": "return Token.XMLATTR;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 221, 
          "faulty": "return \"synthetic\";", 
          "type": "Delete", 
          "seed": "consumeToken();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1427, 
          "faulty": "return res;", 
          "type": "Delete", 
          "seed": "boolean first=true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 318, 
          "faulty": "return \"THIS\";", 
          "type": "Delete", 
          "seed": "return Token.XMLATTR;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 221, 
          "faulty": "return \"synthetic\";", 
          "type": "Delete", 
          "seed": "return Token.XMLATTR;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 362, 
          "faulty": "return \"ASSIGN\";", 
          "type": "Delete", 
          "seed": "return Token.LP;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:51:37.259744610 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1856/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 07:12:40.008466951 -0500\n@@ -85,7 +85,7 @@\n           boolean canRemove = false;\n \n           if (specializationState == null) {\n-            canRemove = true;\n+            break;\n           } else {\n             Node specializableFunction =\n               getSpecializableFunctionFromSymbol(declaration);\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 06:51:37.279734609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1856/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 07:12:40.012467008 -0500\n@@ -937,14 +937,7 @@\n         sb.append(getString());\n       } else if (type == Token.FUNCTION) {\n         sb.append(' ');\n-        // In the case of JsDoc trees, the first child is often not a string\n-        // which causes exceptions to be thrown when calling toString or\n-        // toStringTree.\n-        if (first == null || first.getType() != Token.NAME) {\n-          sb.append(\"<invalid>\");\n-        } else {\n-          sb.append(first.getString());\n-        }\n+        int lineno = getLineno();\n       } else if (this instanceof ScriptOrFnNode) {\n         ScriptOrFnNode sof = (ScriptOrFnNode) this;\n         if (this instanceof FunctionNode) {\n@@ -1424,7 +1417,6 @@\n       }\n       res = n.checkTreeEqualsImpl(n2);\n       if (res != null) {\n-        return res;\n       }\n     }\n     return res;\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 06:51:37.283732609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1856/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 07:12:40.012467008 -0500\n@@ -315,7 +315,10 @@\n           case NUMBER:          return \"NUMBER\";\n           case STRING:          return \"STRING\";\n           case NULL:            return \"NULL\";\n-          case THIS:            return \"THIS\";\n+          case THIS:            {\n+\t\t\t\tStringBuilder sb = new StringBuilder();\n+\t\t\t\treturn \"THIS\";\n+\t\t\t}\n           case FALSE:           return \"FALSE\";\n           case TRUE:            return \"TRUE\";\n           case SHEQ:            return \"SHEQ\";\n@@ -359,7 +362,245 @@\n           case LP:              return \"LP\";\n           case RP:              return \"RP\";\n           case COMMA:           return \"COMMA\";\n-          case ASSIGN:          return \"ASSIGN\";\n+          case ASSIGN:          {\n+\t\t\t\tswitch (token) {\n+\t\t\t\tcase Token.ERROR:\n+\t\t\t\t\treturn \"error\";\n+\t\t\t\tcase Token.EOF:\n+\t\t\t\t\treturn \"eof\";\n+\t\t\t\tcase Token.EOL:\n+\t\t\t\t\treturn \"eol\";\n+\t\t\t\tcase Token.ENTERWITH:\n+\t\t\t\t\treturn \"enterwith\";\n+\t\t\t\tcase Token.LEAVEWITH:\n+\t\t\t\t\treturn \"leavewith\";\n+\t\t\t\tcase Token.RETURN:\n+\t\t\t\t\treturn \"return\";\n+\t\t\t\tcase Token.GOTO:\n+\t\t\t\t\treturn \"goto\";\n+\t\t\t\tcase Token.IFEQ:\n+\t\t\t\t\treturn \"ifeq\";\n+\t\t\t\tcase Token.IFNE:\n+\t\t\t\t\treturn \"ifne\";\n+\t\t\t\tcase Token.SETNAME:\n+\t\t\t\t\treturn \"setname\";\n+\t\t\t\tcase Token.BITOR:\n+\t\t\t\t\treturn \"bitor\";\n+\t\t\t\tcase Token.BITXOR:\n+\t\t\t\t\treturn \"bitxor\";\n+\t\t\t\tcase Token.BITAND:\n+\t\t\t\t\treturn \"bitand\";\n+\t\t\t\tcase Token.EQ:\n+\t\t\t\t\treturn \"eq\";\n+\t\t\t\tcase Token.NE:\n+\t\t\t\t\treturn \"ne\";\n+\t\t\t\tcase Token.LT:\n+\t\t\t\t\treturn \"lt\";\n+\t\t\t\tcase Token.LE:\n+\t\t\t\t\treturn \"le\";\n+\t\t\t\tcase Token.GT:\n+\t\t\t\t\treturn \"gt\";\n+\t\t\t\tcase Token.GE:\n+\t\t\t\t\treturn \"ge\";\n+\t\t\t\tcase Token.LSH:\n+\t\t\t\t\treturn \"lsh\";\n+\t\t\t\tcase Token.RSH:\n+\t\t\t\t\treturn \"rsh\";\n+\t\t\t\tcase Token.URSH:\n+\t\t\t\t\treturn \"ursh\";\n+\t\t\t\tcase Token.ADD:\n+\t\t\t\t\treturn \"add\";\n+\t\t\t\tcase Token.SUB:\n+\t\t\t\t\treturn \"sub\";\n+\t\t\t\tcase Token.MUL:\n+\t\t\t\t\treturn \"mul\";\n+\t\t\t\tcase Token.DIV:\n+\t\t\t\t\treturn \"div\";\n+\t\t\t\tcase Token.MOD:\n+\t\t\t\t\treturn \"mod\";\n+\t\t\t\tcase Token.BITNOT:\n+\t\t\t\t\treturn \"bitnot\";\n+\t\t\t\tcase Token.NEG:\n+\t\t\t\t\treturn \"neg\";\n+\t\t\t\tcase Token.NEW:\n+\t\t\t\t\treturn \"new\";\n+\t\t\t\tcase Token.DELPROP:\n+\t\t\t\t\treturn \"delprop\";\n+\t\t\t\tcase Token.TYPEOF:\n+\t\t\t\t\treturn \"typeof\";\n+\t\t\t\tcase Token.GETPROP:\n+\t\t\t\t\treturn \"getprop\";\n+\t\t\t\tcase Token.SETPROP:\n+\t\t\t\t\treturn \"setprop\";\n+\t\t\t\tcase Token.GETELEM:\n+\t\t\t\t\treturn \"getelem\";\n+\t\t\t\tcase Token.SETELEM:\n+\t\t\t\t\treturn \"setelem\";\n+\t\t\t\tcase Token.CALL:\n+\t\t\t\t\treturn \"call\";\n+\t\t\t\tcase Token.NAME:\n+\t\t\t\t\treturn \"name\";\n+\t\t\t\tcase Token.NUMBER:\n+\t\t\t\t\treturn \"number\";\n+\t\t\t\tcase Token.STRING:\n+\t\t\t\t\treturn \"string\";\n+\t\t\t\tcase Token.NULL:\n+\t\t\t\t\treturn \"null\";\n+\t\t\t\tcase Token.THIS:\n+\t\t\t\t\treturn \"this\";\n+\t\t\t\tcase Token.FALSE:\n+\t\t\t\t\treturn \"false\";\n+\t\t\t\tcase Token.TRUE:\n+\t\t\t\t\treturn \"true\";\n+\t\t\t\tcase Token.SHEQ:\n+\t\t\t\t\treturn \"sheq\";\n+\t\t\t\tcase Token.SHNE:\n+\t\t\t\t\treturn \"shne\";\n+\t\t\t\tcase Token.REGEXP:\n+\t\t\t\t\treturn \"regexp\";\n+\t\t\t\tcase Token.POS:\n+\t\t\t\t\treturn \"pos\";\n+\t\t\t\tcase Token.BINDNAME:\n+\t\t\t\t\treturn \"bindname\";\n+\t\t\t\tcase Token.THROW:\n+\t\t\t\t\treturn \"throw\";\n+\t\t\t\tcase Token.IN:\n+\t\t\t\t\treturn \"in\";\n+\t\t\t\tcase Token.INSTANCEOF:\n+\t\t\t\t\treturn \"instanceof\";\n+\t\t\t\tcase Token.GETVAR:\n+\t\t\t\t\treturn \"getvar\";\n+\t\t\t\tcase Token.SETVAR:\n+\t\t\t\t\treturn \"setvar\";\n+\t\t\t\tcase Token.TRY:\n+\t\t\t\t\treturn \"try\";\n+\t\t\t\tcase Token.TYPEOFNAME:\n+\t\t\t\t\treturn \"typeofname\";\n+\t\t\t\tcase Token.THISFN:\n+\t\t\t\t\treturn \"thisfn\";\n+\t\t\t\tcase Token.SEMI:\n+\t\t\t\t\treturn \"semi\";\n+\t\t\t\tcase Token.LB:\n+\t\t\t\t\treturn \"lb\";\n+\t\t\t\tcase Token.RB:\n+\t\t\t\t\treturn \"rb\";\n+\t\t\t\tcase Token.LC:\n+\t\t\t\t\treturn \"lc\";\n+\t\t\t\tcase Token.RC:\n+\t\t\t\t\treturn \"rc\";\n+\t\t\t\tcase Token.LP:\n+\t\t\t\t\treturn \"lp\";\n+\t\t\t\tcase Token.RP:\n+\t\t\t\t\treturn \"rp\";\n+\t\t\t\tcase Token.COMMA:\n+\t\t\t\t\treturn \"comma\";\n+\t\t\t\tcase Token.ASSIGN:\n+\t\t\t\t\treturn \"assign\";\n+\t\t\t\tcase Token.ASSIGN_BITOR:\n+\t\t\t\t\treturn \"assign_bitor\";\n+\t\t\t\tcase Token.ASSIGN_BITXOR:\n+\t\t\t\t\treturn \"assign_bitxor\";\n+\t\t\t\tcase Token.ASSIGN_BITAND:\n+\t\t\t\t\treturn \"assign_bitand\";\n+\t\t\t\tcase Token.ASSIGN_LSH:\n+\t\t\t\t\treturn \"assign_lsh\";\n+\t\t\t\tcase Token.ASSIGN_RSH:\n+\t\t\t\t\treturn \"assign_rsh\";\n+\t\t\t\tcase Token.ASSIGN_URSH:\n+\t\t\t\t\treturn \"assign_ursh\";\n+\t\t\t\tcase Token.ASSIGN_ADD:\n+\t\t\t\t\treturn \"assign_add\";\n+\t\t\t\tcase Token.ASSIGN_SUB:\n+\t\t\t\t\treturn \"assign_sub\";\n+\t\t\t\tcase Token.ASSIGN_MUL:\n+\t\t\t\t\treturn \"assign_mul\";\n+\t\t\t\tcase Token.ASSIGN_DIV:\n+\t\t\t\t\treturn \"assign_div\";\n+\t\t\t\tcase Token.ASSIGN_MOD:\n+\t\t\t\t\treturn \"assign_mod\";\n+\t\t\t\tcase Token.HOOK:\n+\t\t\t\t\treturn \"hook\";\n+\t\t\t\tcase Token.COLON:\n+\t\t\t\t\treturn \"colon\";\n+\t\t\t\tcase Token.OR:\n+\t\t\t\t\treturn \"or\";\n+\t\t\t\tcase Token.AND:\n+\t\t\t\t\treturn \"and\";\n+\t\t\t\tcase Token.INC:\n+\t\t\t\t\treturn \"inc\";\n+\t\t\t\tcase Token.DEC:\n+\t\t\t\t\treturn \"dec\";\n+\t\t\t\tcase Token.DOT:\n+\t\t\t\t\treturn \"dot\";\n+\t\t\t\tcase Token.FUNCTION:\n+\t\t\t\t\treturn \"function\";\n+\t\t\t\tcase Token.EXPORT:\n+\t\t\t\t\treturn \"export\";\n+\t\t\t\tcase Token.IMPORT:\n+\t\t\t\t\treturn \"import\";\n+\t\t\t\tcase Token.IF:\n+\t\t\t\t\treturn \"if\";\n+\t\t\t\tcase Token.ELSE:\n+\t\t\t\t\treturn \"else\";\n+\t\t\t\tcase Token.SWITCH:\n+\t\t\t\t\treturn \"switch\";\n+\t\t\t\tcase Token.CASE:\n+\t\t\t\t\treturn \"case\";\n+\t\t\t\tcase Token.DEFAULT:\n+\t\t\t\t\treturn \"default\";\n+\t\t\t\tcase Token.WHILE:\n+\t\t\t\t\treturn \"while\";\n+\t\t\t\tcase Token.DO:\n+\t\t\t\t\treturn \"do\";\n+\t\t\t\tcase Token.FOR:\n+\t\t\t\t\treturn \"for\";\n+\t\t\t\tcase Token.BREAK:\n+\t\t\t\t\treturn \"break\";\n+\t\t\t\tcase Token.CONTINUE:\n+\t\t\t\t\treturn \"continue\";\n+\t\t\t\tcase Token.VAR:\n+\t\t\t\t\treturn \"var\";\n+\t\t\t\tcase Token.WITH:\n+\t\t\t\t\treturn \"with\";\n+\t\t\t\tcase Token.CATCH:\n+\t\t\t\t\treturn \"catch\";\n+\t\t\t\tcase Token.FINALLY:\n+\t\t\t\t\treturn \"finally\";\n+\t\t\t\tcase Token.RESERVED:\n+\t\t\t\t\treturn \"reserved\";\n+\t\t\t\tcase Token.NOT:\n+\t\t\t\t\treturn \"not\";\n+\t\t\t\tcase Token.VOID:\n+\t\t\t\t\treturn \"void\";\n+\t\t\t\tcase Token.BLOCK:\n+\t\t\t\t\treturn \"block\";\n+\t\t\t\tcase Token.ARRAYLIT:\n+\t\t\t\t\treturn \"arraylit\";\n+\t\t\t\tcase Token.OBJECTLIT:\n+\t\t\t\t\treturn \"objectlit\";\n+\t\t\t\tcase Token.LABEL:\n+\t\t\t\t\treturn \"label\";\n+\t\t\t\tcase Token.TARGET:\n+\t\t\t\t\treturn \"target\";\n+\t\t\t\tcase Token.LOOP:\n+\t\t\t\t\treturn \"loop\";\n+\t\t\t\tcase Token.EXPR_VOID:\n+\t\t\t\t\treturn \"expr_void\";\n+\t\t\t\tcase Token.EXPR_RESULT:\n+\t\t\t\t\treturn \"expr_result\";\n+\t\t\t\tcase Token.JSR:\n+\t\t\t\t\treturn \"jsr\";\n+\t\t\t\tcase Token.SCRIPT:\n+\t\t\t\t\treturn \"script\";\n+\t\t\t\tcase Token.EMPTY:\n+\t\t\t\t\treturn \"empty\";\n+\t\t\t\tcase Token.GET_REF:\n+\t\t\t\t\treturn \"get_ref\";\n+\t\t\t\tcase Token.REF_SPECIAL:\n+\t\t\t\t\treturn \"ref_special\";\n+\t\t\t\t}\n+\t\t\t\treturn \"ASSIGN\";\n+\t\t\t}\n           case ASSIGN_BITOR:    return \"ASSIGN_BITOR\";\n           case ASSIGN_BITXOR:   return \"ASSIGN_BITXOR\";\n           case ASSIGN_BITAND:   return \"ASSIGN_BITAND\";\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 88, 
          "faulty": "canRemove=true;", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 943, 
          "faulty": "if (first == null || first.getType() != Token.NAME) {\n  sb.append(\"<invalid>\");\n}\n else {\n  sb.append(first.getString());\n}", 
          "type": "Replace", 
          "seed": "int lineno=getLineno();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 88, 
          "faulty": "canRemove=true;", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 318, 
          "faulty": "return \"THIS\";", 
          "type": "Delete", 
          "seed": "return Token.STRING;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1427, 
          "faulty": "return res;", 
          "type": "Delete", 
          "seed": "return Token.STRING;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 318, 
          "faulty": "return \"THIS\";", 
          "type": "InsertBefore", 
          "seed": "StringBuilder sb=new StringBuilder();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 362, 
          "faulty": "return \"ASSIGN\";", 
          "type": "InsertBefore", 
          "seed": "switch (token) {\ncase Token.ERROR:\n  return \"error\";\ncase Token.EOF:\nreturn \"eof\";\ncase Token.EOL:\nreturn \"eol\";\ncase Token.ENTERWITH:\nreturn \"enterwith\";\ncase Token.LEAVEWITH:\nreturn \"leavewith\";\ncase Token.RETURN:\nreturn \"return\";\ncase Token.GOTO:\nreturn \"goto\";\ncase Token.IFEQ:\nreturn \"ifeq\";\ncase Token.IFNE:\nreturn \"ifne\";\ncase Token.SETNAME:\nreturn \"setname\";\ncase Token.BITOR:\nreturn \"bitor\";\ncase Token.BITXOR:\nreturn \"bitxor\";\ncase Token.BITAND:\nreturn \"bitand\";\ncase Token.EQ:\nreturn \"eq\";\ncase Token.NE:\nreturn \"ne\";\ncase Token.LT:\nreturn \"lt\";\ncase Token.LE:\nreturn \"le\";\ncase Token.GT:\nreturn \"gt\";\ncase Token.GE:\nreturn \"ge\";\ncase Token.LSH:\nreturn \"lsh\";\ncase Token.RSH:\nreturn \"rsh\";\ncase Token.URSH:\nreturn \"ursh\";\ncase Token.ADD:\nreturn \"add\";\ncase Token.SUB:\nreturn \"sub\";\ncase Token.MUL:\nreturn \"mul\";\ncase Token.DIV:\nreturn \"div\";\ncase Token.MOD:\nreturn \"mod\";\ncase Token.BITNOT:\nreturn \"bitnot\";\ncase Token.NEG:\nreturn \"neg\";\ncase Token.NEW:\nreturn \"new\";\ncase Token.DELPROP:\nreturn \"delprop\";\ncase Token.TYPEOF:\nreturn \"typeof\";\ncase Token.GETPROP:\nreturn \"getprop\";\ncase Token.SETPROP:\nreturn \"setprop\";\ncase Token.GETELEM:\nreturn \"getelem\";\ncase Token.SETELEM:\nreturn \"setelem\";\ncase Token.CALL:\nreturn \"call\";\ncase Token.NAME:\nreturn \"name\";\ncase Token.NUMBER:\nreturn \"number\";\ncase Token.STRING:\nreturn \"string\";\ncase Token.NULL:\nreturn \"null\";\ncase Token.THIS:\nreturn \"this\";\ncase Token.FALSE:\nreturn \"false\";\ncase Token.TRUE:\nreturn \"true\";\ncase Token.SHEQ:\nreturn \"sheq\";\ncase Token.SHNE:\nreturn \"shne\";\ncase Token.REGEXP:\nreturn \"regexp\";\ncase Token.POS:\nreturn \"pos\";\ncase Token.BINDNAME:\nreturn \"bindname\";\ncase Token.THROW:\nreturn \"throw\";\ncase Token.IN:\nreturn \"in\";\ncase Token.INSTANCEOF:\nreturn \"instanceof\";\ncase Token.GETVAR:\nreturn \"getvar\";\ncase Token.SETVAR:\nreturn \"setvar\";\ncase Token.TRY:\nreturn \"try\";\ncase Token.TYPEOFNAME:\nreturn \"typeofname\";\ncase Token.THISFN:\nreturn \"thisfn\";\ncase Token.SEMI:\nreturn \"semi\";\ncase Token.LB:\nreturn \"lb\";\ncase Token.RB:\nreturn \"rb\";\ncase Token.LC:\nreturn \"lc\";\ncase Token.RC:\nreturn \"rc\";\ncase Token.LP:\nreturn \"lp\";\ncase Token.RP:\nreturn \"rp\";\ncase Token.COMMA:\nreturn \"comma\";\ncase Token.ASSIGN:\nreturn \"assign\";\ncase Token.ASSIGN_BITOR:\nreturn \"assign_bitor\";\ncase Token.ASSIGN_BITXOR:\nreturn \"assign_bitxor\";\ncase Token.ASSIGN_BITAND:\nreturn \"assign_bitand\";\ncase Token.ASSIGN_LSH:\nreturn \"assign_lsh\";\ncase Token.ASSIGN_RSH:\nreturn \"assign_rsh\";\ncase Token.ASSIGN_URSH:\nreturn \"assign_ursh\";\ncase Token.ASSIGN_ADD:\nreturn \"assign_add\";\ncase Token.ASSIGN_SUB:\nreturn \"assign_sub\";\ncase Token.ASSIGN_MUL:\nreturn \"assign_mul\";\ncase Token.ASSIGN_DIV:\nreturn \"assign_div\";\ncase Token.ASSIGN_MOD:\nreturn \"assign_mod\";\ncase Token.HOOK:\nreturn \"hook\";\ncase Token.COLON:\nreturn \"colon\";\ncase Token.OR:\nreturn \"or\";\ncase Token.AND:\nreturn \"and\";\ncase Token.INC:\nreturn \"inc\";\ncase Token.DEC:\nreturn \"dec\";\ncase Token.DOT:\nreturn \"dot\";\ncase Token.FUNCTION:\nreturn \"function\";\ncase Token.EXPORT:\nreturn \"export\";\ncase Token.IMPORT:\nreturn \"import\";\ncase Token.IF:\nreturn \"if\";\ncase Token.ELSE:\nreturn \"else\";\ncase Token.SWITCH:\nreturn \"switch\";\ncase Token.CASE:\nreturn \"case\";\ncase Token.DEFAULT:\nreturn \"default\";\ncase Token.WHILE:\nreturn \"while\";\ncase Token.DO:\nreturn \"do\";\ncase Token.FOR:\nreturn \"for\";\ncase Token.BREAK:\nreturn \"break\";\ncase Token.CONTINUE:\nreturn \"continue\";\ncase Token.VAR:\nreturn \"var\";\ncase Token.WITH:\nreturn \"with\";\ncase Token.CATCH:\nreturn \"catch\";\ncase Token.FINALLY:\nreturn \"finally\";\ncase Token.RESERVED:\nreturn \"reserved\";\ncase Token.NOT:\nreturn \"not\";\ncase Token.VOID:\nreturn \"void\";\ncase Token.BLOCK:\nreturn \"block\";\ncase Token.ARRAYLIT:\nreturn \"arraylit\";\ncase Token.OBJECTLIT:\nreturn \"objectlit\";\ncase Token.LABEL:\nreturn \"label\";\ncase Token.TARGET:\nreturn \"target\";\ncase Token.LOOP:\nreturn \"loop\";\ncase Token.EXPR_VOID:\nreturn \"expr_void\";\ncase Token.EXPR_RESULT:\nreturn \"expr_result\";\ncase Token.JSR:\nreturn \"jsr\";\ncase Token.SCRIPT:\nreturn \"script\";\ncase Token.EMPTY:\nreturn \"empty\";\ncase Token.GET_REF:\nreturn \"get_ref\";\ncase Token.REF_SPECIAL:\nreturn \"ref_special\";\n}"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 88, 
          "faulty": "canRemove=true;", 
          "type": "InsertBefore", 
          "seed": "break;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:51:37.259744610 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_200/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:58:07.288827346 -0500\n@@ -85,7 +85,6 @@\n           boolean canRemove = false;\n \n           if (specializationState == null) {\n-            canRemove = true;\n           } else {\n             Node specializableFunction =\n               getSpecializableFunctionFromSymbol(declaration);\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 06:51:37.283732609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_200/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 06:58:07.292827383 -0500\n@@ -359,7 +359,7 @@\n           case LP:              return \"LP\";\n           case RP:              return \"RP\";\n           case COMMA:           return \"COMMA\";\n-          case ASSIGN:          return \"ASSIGN\";\n+          case ASSIGN:          ;\n           case ASSIGN_BITOR:    return \"ASSIGN_BITOR\";\n           case ASSIGN_BITXOR:   return \"ASSIGN_BITXOR\";\n           case ASSIGN_BITAND:   return \"ASSIGN_BITAND\";\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 362, 
          "faulty": "return \"ASSIGN\";", 
          "type": "Delete", 
          "seed": "Node pn=memberExpr(true);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 88, 
          "faulty": "canRemove=true;", 
          "type": "Delete", 
          "seed": "return null;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:51:37.259744610 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1896/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 07:12:59.852750582 -0500\n@@ -85,7 +85,6 @@\n           boolean canRemove = false;\n \n           if (specializationState == null) {\n-            canRemove = true;\n           } else {\n             Node specializableFunction =\n               getSpecializableFunctionFromSymbol(declaration);\n@@ -96,11 +95,6 @@\n               canRemove = true;\n             }\n           }\n-\n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 06:51:37.279734609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1896/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 07:12:59.852750582 -0500\n@@ -1424,7 +1424,6 @@\n       }\n       res = n.checkTreeEqualsImpl(n2);\n       if (res != null) {\n-        return res;\n       }\n     }\n     return res;\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 06:51:37.283732609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1896/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 07:12:59.852750582 -0500\n@@ -315,7 +315,10 @@\n           case NUMBER:          return \"NUMBER\";\n           case STRING:          return \"STRING\";\n           case NULL:            return \"NULL\";\n-          case THIS:            return \"THIS\";\n+          case THIS:            {\n+\t\t\t\tStringBuilder sb = new StringBuilder();\n+\t\t\t\treturn \"THIS\";\n+\t\t\t}\n           case FALSE:           return \"FALSE\";\n           case TRUE:            return \"TRUE\";\n           case SHEQ:            return \"SHEQ\";\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 318, 
          "faulty": "return \"THIS\";", 
          "type": "Delete", 
          "seed": "return Token.STRING;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 88, 
          "faulty": "canRemove=true;", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 318, 
          "faulty": "return \"THIS\";", 
          "type": "Delete", 
          "seed": "return Token.STRING;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1427, 
          "faulty": "return res;", 
          "type": "Replace", 
          "seed": "Kit.codeBug();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 88, 
          "faulty": "canRemove=true;", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1427, 
          "faulty": "return res;", 
          "type": "Delete", 
          "seed": "return Token.STRING;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 318, 
          "faulty": "return \"THIS\";", 
          "type": "InsertBefore", 
          "seed": "StringBuilder sb=new StringBuilder();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 101, 
          "faulty": "declaration.remove();", 
          "type": "Replace", 
          "seed": "int start=0;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:51:37.259744610 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_930/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 07:04:40.573380796 -0500\n@@ -96,11 +96,6 @@\n               canRemove = true;\n             }\n           }\n-\n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java\t2018-12-02 06:51:39.210768564 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_930/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java\t2018-12-02 07:04:40.573380796 -0500\n@@ -532,7 +532,8 @@\n \n     @Override\n     public void remove() {\n-      NodeUtil.removeChild(exprNode.getParent(), exprNode);\n+      int index = -1;\n+\tNodeUtil.removeChild(exprNode.getParent(), exprNode);\n     }\n \n     @Override\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 06:51:37.283732609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_930/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 07:04:40.573380796 -0500\n@@ -359,7 +359,7 @@\n           case LP:              return \"LP\";\n           case RP:              return \"RP\";\n           case COMMA:           return \"COMMA\";\n-          case ASSIGN:          return \"ASSIGN\";\n+          case ASSIGN:          ;\n           case ASSIGN_BITOR:    return \"ASSIGN_BITOR\";\n           case ASSIGN_BITXOR:   return \"ASSIGN_BITXOR\";\n           case ASSIGN_BITAND:   return \"ASSIGN_BITAND\";\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java", 
          "line": 535, 
          "faulty": "NodeUtil.removeChild(exprNode.getParent(),exprNode);", 
          "type": "InsertBefore", 
          "seed": "int index=-1;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 362, 
          "faulty": "return \"ASSIGN\";", 
          "type": "Delete", 
          "seed": "return Token.LP;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:51:37.259744610 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_924/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 07:04:37.809396056 -0500\n@@ -97,10 +97,7 @@\n             }\n           }\n \n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n+          return;\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 06:51:37.283732609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_924/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 07:04:37.813396034 -0500\n@@ -315,7 +315,7 @@\n           case NUMBER:          return \"NUMBER\";\n           case STRING:          return \"STRING\";\n           case NULL:            return \"NULL\";\n-          case THIS:            return \"THIS\";\n+          case THIS:            ;\n           case FALSE:           return \"FALSE\";\n           case TRUE:            return \"TRUE\";\n           case SHEQ:            return \"SHEQ\";\n@@ -356,10 +356,10 @@\n           case RB:              return \"RB\";\n           case LC:              return \"LC\";\n           case RC:              return \"RC\";\n-          case LP:              return \"LP\";\n+          case LP:              ;\n           case RP:              return \"RP\";\n           case COMMA:           return \"COMMA\";\n-          case ASSIGN:          return \"ASSIGN\";\n+          case ASSIGN:          ;\n           case ASSIGN_BITOR:    return \"ASSIGN_BITOR\";\n           case ASSIGN_BITXOR:   return \"ASSIGN_BITXOR\";\n           case ASSIGN_BITAND:   return \"ASSIGN_BITAND\";\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 318, 
          "faulty": "return \"THIS\";", 
          "type": "Delete", 
          "seed": "return Token.STRING;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 362, 
          "faulty": "return \"ASSIGN\";", 
          "type": "Delete", 
          "seed": "return Token.LP;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 102, 
          "faulty": "changed=true;", 
          "type": "InsertBefore", 
          "seed": "StringBuilder builder=new StringBuilder();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 318, 
          "faulty": "return \"THIS\";", 
          "type": "Delete", 
          "seed": "return Token.XMLATTR;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "InsertBefore", 
          "seed": "return;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 359, 
          "faulty": "return \"LP\";", 
          "type": "Delete", 
          "seed": "return toString(true,true,true);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:51:37.259744610 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_624/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 07:02:04.250678701 -0500\n@@ -96,11 +96,6 @@\n               canRemove = true;\n             }\n           }\n-\n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 06:51:37.279734609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_624/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 07:02:04.250678701 -0500\n@@ -218,7 +218,7 @@\n         case QUOTED_PROP:        return \"quoted\";\n         case OPT_ARG_NAME:       return \"opt_arg\";\n \n-        case SYNTHETIC_BLOCK_PROP: return \"synthetic\";\n+        case SYNTHETIC_BLOCK_PROP: ;\n         case EMPTY_BLOCK:        return \"empty_block\";\n         case ORIGINALNAME_PROP:  return \"originalname\";\n         case SIDE_EFFECT_FLAGS:  return \"side_effect_flags\";\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 06:51:37.283732609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_624/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 07:02:04.250678701 -0500\n@@ -315,7 +315,7 @@\n           case NUMBER:          return \"NUMBER\";\n           case STRING:          return \"STRING\";\n           case NULL:            return \"NULL\";\n-          case THIS:            return \"THIS\";\n+          case THIS:            ;\n           case FALSE:           return \"FALSE\";\n           case TRUE:            return \"TRUE\";\n           case SHEQ:            return \"SHEQ\";\n@@ -356,7 +356,7 @@\n           case RB:              return \"RB\";\n           case LC:              return \"LC\";\n           case RC:              return \"RC\";\n-          case LP:              return \"LP\";\n+          case LP:              ;\n           case RP:              return \"RP\";\n           case COMMA:           return \"COMMA\";\n           case ASSIGN:          return \"ASSIGN\";\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 221, 
          "faulty": "return \"synthetic\";", 
          "type": "Delete", 
          "seed": "consumeToken();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 318, 
          "faulty": "return \"THIS\";", 
          "type": "Delete", 
          "seed": "Node pn=mulExpr();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 359, 
          "faulty": "return \"LP\";", 
          "type": "Delete", 
          "seed": "int c2=getChar();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:51:37.259744610 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_710/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 07:02:49.350199856 -0500\n@@ -96,11 +96,6 @@\n               canRemove = true;\n             }\n           }\n-\n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 06:51:37.279734609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_710/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 07:02:49.350199856 -0500\n@@ -218,7 +218,7 @@\n         case QUOTED_PROP:        return \"quoted\";\n         case OPT_ARG_NAME:       return \"opt_arg\";\n \n-        case SYNTHETIC_BLOCK_PROP: return \"synthetic\";\n+        case SYNTHETIC_BLOCK_PROP: ;\n         case EMPTY_BLOCK:        return \"empty_block\";\n         case ORIGINALNAME_PROP:  return \"originalname\";\n         case SIDE_EFFECT_FLAGS:  return \"side_effect_flags\";\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 06:51:37.283732609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_710/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 07:02:49.354199818 -0500\n@@ -315,7 +315,7 @@\n           case NUMBER:          return \"NUMBER\";\n           case STRING:          return \"STRING\";\n           case NULL:            return \"NULL\";\n-          case THIS:            return \"THIS\";\n+          case THIS:            ;\n           case FALSE:           return \"FALSE\";\n           case TRUE:            return \"TRUE\";\n           case SHEQ:            return \"SHEQ\";\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 102, 
          "faulty": "changed=true;", 
          "type": "InsertBefore", 
          "seed": "StringBuilder builder=new StringBuilder();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 318, 
          "faulty": "return \"THIS\";", 
          "type": "Delete", 
          "seed": "return Token.STRING;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 221, 
          "faulty": "return \"synthetic\";", 
          "type": "Delete", 
          "seed": "return Token.RC;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:51:37.259744610 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_553/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 07:01:27.047155250 -0500\n@@ -85,7 +85,6 @@\n           boolean canRemove = false;\n \n           if (specializationState == null) {\n-            canRemove = true;\n           } else {\n             Node specializableFunction =\n               getSpecializableFunctionFromSymbol(declaration);\n@@ -99,7 +98,8 @@\n \n           if (canRemove) {\n             declaration.remove();\n-            changed = true;\n+            StringBuilder builder = new StringBuilder();\n+\t\t\tchanged = true;\n           }\n         }\n \n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 06:51:37.283732609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_553/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 07:01:27.047155250 -0500\n@@ -359,7 +359,7 @@\n           case LP:              return \"LP\";\n           case RP:              return \"RP\";\n           case COMMA:           return \"COMMA\";\n-          case ASSIGN:          return \"ASSIGN\";\n+          case ASSIGN:          ;\n           case ASSIGN_BITOR:    return \"ASSIGN_BITOR\";\n           case ASSIGN_BITXOR:   return \"ASSIGN_BITXOR\";\n           case ASSIGN_BITAND:   return \"ASSIGN_BITAND\";\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 362, 
          "faulty": "return \"ASSIGN\";", 
          "type": "Delete", 
          "seed": "Node pn=memberExpr(true);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 102, 
          "faulty": "changed=true;", 
          "type": "InsertBefore", 
          "seed": "StringBuilder builder=new StringBuilder();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 88, 
          "faulty": "canRemove=true;", 
          "type": "Delete", 
          "seed": "return null;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:51:37.259744610 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1665/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 07:11:00.506800137 -0500\n@@ -85,7 +85,6 @@\n           boolean canRemove = false;\n \n           if (specializationState == null) {\n-            canRemove = true;\n           } else {\n             Node specializableFunction =\n               getSpecializableFunctionFromSymbol(declaration);\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 06:51:37.279734609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1665/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 07:11:00.506800137 -0500\n@@ -218,7 +218,7 @@\n         case QUOTED_PROP:        return \"quoted\";\n         case OPT_ARG_NAME:       return \"opt_arg\";\n \n-        case SYNTHETIC_BLOCK_PROP: return \"synthetic\";\n+        case SYNTHETIC_BLOCK_PROP: ;\n         case EMPTY_BLOCK:        return \"empty_block\";\n         case ORIGINALNAME_PROP:  return \"originalname\";\n         case SIDE_EFFECT_FLAGS:  return \"side_effect_flags\";\n@@ -937,14 +937,7 @@\n         sb.append(getString());\n       } else if (type == Token.FUNCTION) {\n         sb.append(' ');\n-        // In the case of JsDoc trees, the first child is often not a string\n-        // which causes exceptions to be thrown when calling toString or\n-        // toStringTree.\n-        if (first == null || first.getType() != Token.NAME) {\n-          sb.append(\"<invalid>\");\n-        } else {\n-          sb.append(first.getString());\n-        }\n+        int lineno = getLineno();\n       } else if (this instanceof ScriptOrFnNode) {\n         ScriptOrFnNode sof = (ScriptOrFnNode) this;\n         if (this instanceof FunctionNode) {\n@@ -1424,7 +1417,6 @@\n       }\n       res = n.checkTreeEqualsImpl(n2);\n       if (res != null) {\n-        return res;\n       }\n     }\n     return res;\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 06:51:37.283732609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1665/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 07:11:00.506800137 -0500\n@@ -359,7 +359,7 @@\n           case LP:              return \"LP\";\n           case RP:              return \"RP\";\n           case COMMA:           return \"COMMA\";\n-          case ASSIGN:          return \"ASSIGN\";\n+          case ASSIGN:          ;\n           case ASSIGN_BITOR:    return \"ASSIGN_BITOR\";\n           case ASSIGN_BITXOR:   return \"ASSIGN_BITXOR\";\n           case ASSIGN_BITAND:   return \"ASSIGN_BITAND\";\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 88, 
          "faulty": "canRemove=true;", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 943, 
          "faulty": "if (first == null || first.getType() != Token.NAME) {\n  sb.append(\"<invalid>\");\n}\n else {\n  sb.append(first.getString());\n}", 
          "type": "Replace", 
          "seed": "int lineno=getLineno();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 221, 
          "faulty": "return \"synthetic\";", 
          "type": "Delete", 
          "seed": "consumeToken();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1427, 
          "faulty": "return res;", 
          "type": "Delete", 
          "seed": "boolean first=true;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 88, 
          "faulty": "canRemove=true;", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 943, 
          "faulty": "if (first == null || first.getType() != Token.NAME) {\n  sb.append(\"<invalid>\");\n}\n else {\n  sb.append(first.getString());\n}", 
          "type": "Replace", 
          "seed": "int lineno=getLineno();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 221, 
          "faulty": "return \"synthetic\";", 
          "type": "Delete", 
          "seed": "consumeToken();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1427, 
          "faulty": "return res;", 
          "type": "Delete", 
          "seed": "boolean first=true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 362, 
          "faulty": "return \"ASSIGN\";", 
          "type": "Delete", 
          "seed": "return Token.LP;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 88, 
          "faulty": "canRemove=true;", 
          "type": "Delete", 
          "seed": "return this;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:51:37.259744610 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1434/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 07:08:59.296007563 -0500\n@@ -85,7 +85,6 @@\n           boolean canRemove = false;\n \n           if (specializationState == null) {\n-            canRemove = true;\n           } else {\n             Node specializableFunction =\n               getSpecializableFunctionFromSymbol(declaration);\n@@ -96,11 +95,6 @@\n               canRemove = true;\n             }\n           }\n-\n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java\t2018-12-02 06:51:39.210768564 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1434/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java\t2018-12-02 07:08:59.296007563 -0500\n@@ -532,7 +532,8 @@\n \n     @Override\n     public void remove() {\n-      NodeUtil.removeChild(exprNode.getParent(), exprNode);\n+      int index = -1;\n+\tNodeUtil.removeChild(exprNode.getParent(), exprNode);\n     }\n \n     @Override\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 06:51:37.279734609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1434/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 07:08:59.300007673 -0500\n@@ -218,7 +218,7 @@\n         case QUOTED_PROP:        return \"quoted\";\n         case OPT_ARG_NAME:       return \"opt_arg\";\n \n-        case SYNTHETIC_BLOCK_PROP: return \"synthetic\";\n+        case SYNTHETIC_BLOCK_PROP: ;\n         case EMPTY_BLOCK:        return \"empty_block\";\n         case ORIGINALNAME_PROP:  return \"originalname\";\n         case SIDE_EFFECT_FLAGS:  return \"side_effect_flags\";\n@@ -937,14 +937,7 @@\n         sb.append(getString());\n       } else if (type == Token.FUNCTION) {\n         sb.append(' ');\n-        // In the case of JsDoc trees, the first child is often not a string\n-        // which causes exceptions to be thrown when calling toString or\n-        // toStringTree.\n-        if (first == null || first.getType() != Token.NAME) {\n-          sb.append(\"<invalid>\");\n-        } else {\n-          sb.append(first.getString());\n-        }\n+        int lineno = getLineno();\n       } else if (this instanceof ScriptOrFnNode) {\n         ScriptOrFnNode sof = (ScriptOrFnNode) this;\n         if (this instanceof FunctionNode) {\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 06:51:37.283732609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1434/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 07:08:59.300007673 -0500\n@@ -307,7 +307,7 @@\n           case TYPEOF:          return \"TYPEOF\";\n           case GETPROP:         return \"GETPROP\";\n           case SETPROP:         return \"SETPROP\";\n-          case GETELEM:         return \"GETELEM\";\n+          case GETELEM:         return \"return\";\n           case SETELEM:         return \"SETELEM\";\n           case CALL:            return \"CALL\";\n           case NAME:            return \"NAME\";\n@@ -315,7 +315,7 @@\n           case NUMBER:          return \"NUMBER\";\n           case STRING:          return \"STRING\";\n           case NULL:            return \"NULL\";\n-          case THIS:            return \"THIS\";\n+          case THIS:            ;\n           case FALSE:           return \"FALSE\";\n           case TRUE:            return \"TRUE\";\n           case SHEQ:            return \"SHEQ\";\n@@ -359,7 +359,7 @@\n           case LP:              return \"LP\";\n           case RP:              return \"RP\";\n           case COMMA:           return \"COMMA\";\n-          case ASSIGN:          return \"ASSIGN\";\n+          case ASSIGN:          Context cx = Context.getCurrentContext();\n           case ASSIGN_BITOR:    return \"ASSIGN_BITOR\";\n           case ASSIGN_BITXOR:   return \"ASSIGN_BITXOR\";\n           case ASSIGN_BITAND:   return \"ASSIGN_BITAND\";\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 943, 
          "faulty": "if (first == null || first.getType() != Token.NAME) {\n  sb.append(\"<invalid>\");\n}\n else {\n  sb.append(first.getString());\n}", 
          "type": "Replace", 
          "seed": "int lineno=getLineno();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 362, 
          "faulty": "return \"ASSIGN\";", 
          "type": "Replace", 
          "seed": "Context cx=Context.getCurrentContext();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 102, 
          "faulty": "changed=true;", 
          "type": "InsertBefore", 
          "seed": "StringBuilder builder=new StringBuilder();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java", 
          "line": 535, 
          "faulty": "NodeUtil.removeChild(exprNode.getParent(),exprNode);", 
          "type": "InsertBefore", 
          "seed": "int index=-1;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 943, 
          "faulty": "if (first == null || first.getType() != Token.NAME) {\n  sb.append(\"<invalid>\");\n}\n else {\n  sb.append(first.getString());\n}", 
          "type": "Replace", 
          "seed": "int lineno=getLineno();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 362, 
          "faulty": "return \"ASSIGN\";", 
          "type": "Replace", 
          "seed": "Context cx=Context.getCurrentContext();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 88, 
          "faulty": "canRemove=true;", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 318, 
          "faulty": "return \"THIS\";", 
          "type": "Delete", 
          "seed": "return Token.XMLATTR;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 221, 
          "faulty": "return \"synthetic\";", 
          "type": "Delete", 
          "seed": "return Token.XMLATTR;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 221, 
          "faulty": "return \"synthetic\";", 
          "type": "Delete", 
          "seed": "consumeToken();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 943, 
          "faulty": "if (first == null || first.getType() != Token.NAME) {\n  sb.append(\"<invalid>\");\n}\n else {\n  sb.append(first.getString());\n}", 
          "type": "Replace", 
          "seed": "int lineno=getLineno();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 362, 
          "faulty": "return \"ASSIGN\";", 
          "type": "Replace", 
          "seed": "Context cx=Context.getCurrentContext();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 310, 
          "faulty": "return \"GETELEM\";", 
          "type": "Replace", 
          "seed": "return \"return\";"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:51:37.259744610 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1011/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 07:05:24.237167694 -0500\n@@ -96,11 +96,6 @@\n               canRemove = true;\n             }\n           }\n-\n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 06:51:37.279734609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1011/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 07:05:24.241167677 -0500\n@@ -218,7 +218,7 @@\n         case QUOTED_PROP:        return \"quoted\";\n         case OPT_ARG_NAME:       return \"opt_arg\";\n \n-        case SYNTHETIC_BLOCK_PROP: return \"synthetic\";\n+        case SYNTHETIC_BLOCK_PROP: ;\n         case EMPTY_BLOCK:        return \"empty_block\";\n         case ORIGINALNAME_PROP:  return \"originalname\";\n         case SIDE_EFFECT_FLAGS:  return \"side_effect_flags\";\n@@ -1424,7 +1424,6 @@\n       }\n       res = n.checkTreeEqualsImpl(n2);\n       if (res != null) {\n-        return res;\n       }\n     }\n     return res;\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 221, 
          "faulty": "return \"synthetic\";", 
          "type": "Delete", 
          "seed": "consumeToken();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 102, 
          "faulty": "changed=true;", 
          "type": "InsertBefore", 
          "seed": "StringBuilder builder=new StringBuilder();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1427, 
          "faulty": "return res;", 
          "type": "Delete", 
          "seed": "return Token.STRING;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:51:37.259744610 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_862/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 07:04:05.225593619 -0500\n@@ -96,11 +96,6 @@\n               canRemove = true;\n             }\n           }\n-\n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java\t2018-12-02 06:51:39.210768564 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_862/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java\t2018-12-02 07:04:05.225593619 -0500\n@@ -532,7 +532,8 @@\n \n     @Override\n     public void remove() {\n-      NodeUtil.removeChild(exprNode.getParent(), exprNode);\n+      int index = -1;\n+\tNodeUtil.removeChild(exprNode.getParent(), exprNode);\n     }\n \n     @Override\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 06:51:37.283732609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_862/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 07:04:05.229593592 -0500\n@@ -359,7 +359,7 @@\n           case LP:              return \"LP\";\n           case RP:              return \"RP\";\n           case COMMA:           return \"COMMA\";\n-          case ASSIGN:          return \"ASSIGN\";\n+          case ASSIGN:          ;\n           case ASSIGN_BITOR:    return \"ASSIGN_BITOR\";\n           case ASSIGN_BITXOR:   return \"ASSIGN_BITXOR\";\n           case ASSIGN_BITAND:   return \"ASSIGN_BITAND\";\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 362, 
          "faulty": "return \"ASSIGN\";", 
          "type": "Delete", 
          "seed": "return Token.LP;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 102, 
          "faulty": "changed=true;", 
          "type": "InsertBefore", 
          "seed": "StringBuilder builder=new StringBuilder();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java", 
          "line": 535, 
          "faulty": "NodeUtil.removeChild(exprNode.getParent(),exprNode);", 
          "type": "InsertBefore", 
          "seed": "int index=-1;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:51:37.259744610 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1718/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 07:11:28.823321153 -0500\n@@ -83,24 +83,6 @@\n       if (!nameInfo.isReferenced()) {\n         for (Symbol declaration : nameInfo.getDeclarations()) {\n           boolean canRemove = false;\n-\n-          if (specializationState == null) {\n-            canRemove = true;\n-          } else {\n-            Node specializableFunction =\n-              getSpecializableFunctionFromSymbol(declaration);\n-\n-            if (specializableFunction != null) {\n-              specializationState.reportRemovedFunction(\n-                  specializableFunction, null);\n-              canRemove = true;\n-            }\n-          }\n-\n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 06:51:37.279734609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1718/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 07:11:28.823321153 -0500\n@@ -218,7 +218,7 @@\n         case QUOTED_PROP:        return \"quoted\";\n         case OPT_ARG_NAME:       return \"opt_arg\";\n \n-        case SYNTHETIC_BLOCK_PROP: return \"synthetic\";\n+        case SYNTHETIC_BLOCK_PROP: ;\n         case EMPTY_BLOCK:        return \"empty_block\";\n         case ORIGINALNAME_PROP:  return \"originalname\";\n         case SIDE_EFFECT_FLAGS:  return \"side_effect_flags\";\n@@ -937,14 +937,7 @@\n         sb.append(getString());\n       } else if (type == Token.FUNCTION) {\n         sb.append(' ');\n-        // In the case of JsDoc trees, the first child is often not a string\n-        // which causes exceptions to be thrown when calling toString or\n-        // toStringTree.\n-        if (first == null || first.getType() != Token.NAME) {\n-          sb.append(\"<invalid>\");\n-        } else {\n-          sb.append(first.getString());\n-        }\n+        int lineno = getLineno();\n       } else if (this instanceof ScriptOrFnNode) {\n         ScriptOrFnNode sof = (ScriptOrFnNode) this;\n         if (this instanceof FunctionNode) {\n@@ -1411,7 +1404,8 @@\n    */\n   NodeMismatch checkTreeEqualsImpl(Node node2) {\n     if (!isEquivalentTo(node2, false, false)) {\n-      return new NodeMismatch(this, node2);\n+      boolean nullKey = false;\n+\treturn new NodeMismatch(this, node2);\n     }\n \n     NodeMismatch res = null;\n@@ -1424,7 +1418,6 @@\n       }\n       res = n.checkTreeEqualsImpl(n2);\n       if (res != null) {\n-        return res;\n       }\n     }\n     return res;\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 88, 
          "faulty": "canRemove=true;", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 943, 
          "faulty": "if (first == null || first.getType() != Token.NAME) {\n  sb.append(\"<invalid>\");\n}\n else {\n  sb.append(first.getString());\n}", 
          "type": "Replace", 
          "seed": "int lineno=getLineno();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 221, 
          "faulty": "return \"synthetic\";", 
          "type": "Delete", 
          "seed": "consumeToken();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1427, 
          "faulty": "return res;", 
          "type": "Delete", 
          "seed": "boolean first=true;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 88, 
          "faulty": "canRemove=true;", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 943, 
          "faulty": "if (first == null || first.getType() != Token.NAME) {\n  sb.append(\"<invalid>\");\n}\n else {\n  sb.append(first.getString());\n}", 
          "type": "Replace", 
          "seed": "int lineno=getLineno();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 88, 
          "faulty": "canRemove=true;", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 221, 
          "faulty": "return \"synthetic\";", 
          "type": "Delete", 
          "seed": "return Token.XMLATTR;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1427, 
          "faulty": "return res;", 
          "type": "Delete", 
          "seed": "return Token.STRING;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1414, 
          "faulty": "return new NodeMismatch(this,node2);", 
          "type": "InsertBefore", 
          "seed": "boolean nullKey=false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 87, 
          "faulty": "if (specializationState == null) {\n  canRemove=true;\n}\n else {\n  Node specializableFunction=getSpecializableFunctionFromSymbol(declaration);\n  if (specializableFunction != null) {\n    specializationState.reportRemovedFunction(specializableFunction,null);\n    canRemove=true;\n  }\n}", 
          "type": "Delete", 
          "seed": "break;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:51:37.259744610 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_559/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 07:01:29.563120454 -0500\n@@ -84,23 +84,7 @@\n         for (Symbol declaration : nameInfo.getDeclarations()) {\n           boolean canRemove = false;\n \n-          if (specializationState == null) {\n-            canRemove = true;\n-          } else {\n-            Node specializableFunction =\n-              getSpecializableFunctionFromSymbol(declaration);\n-\n-            if (specializableFunction != null) {\n-              specializationState.reportRemovedFunction(\n-                  specializableFunction, null);\n-              canRemove = true;\n-            }\n-          }\n-\n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n+          int start = 0;\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 06:51:37.279734609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_559/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 07:01:29.567120399 -0500\n@@ -218,7 +218,7 @@\n         case QUOTED_PROP:        return \"quoted\";\n         case OPT_ARG_NAME:       return \"opt_arg\";\n \n-        case SYNTHETIC_BLOCK_PROP: return \"synthetic\";\n+        case SYNTHETIC_BLOCK_PROP: ;\n         case EMPTY_BLOCK:        return \"empty_block\";\n         case ORIGINALNAME_PROP:  return \"originalname\";\n         case SIDE_EFFECT_FLAGS:  return \"side_effect_flags\";\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 06:51:37.283732609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_559/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 07:01:29.567120399 -0500\n@@ -315,7 +315,7 @@\n           case NUMBER:          return \"NUMBER\";\n           case STRING:          return \"STRING\";\n           case NULL:            return \"NULL\";\n-          case THIS:            return \"THIS\";\n+          case THIS:            ;\n           case FALSE:           return \"FALSE\";\n           case TRUE:            return \"TRUE\";\n           case SHEQ:            return \"SHEQ\";\n@@ -359,7 +359,7 @@\n           case LP:              return \"LP\";\n           case RP:              return \"RP\";\n           case COMMA:           return \"COMMA\";\n-          case ASSIGN:          return \"ASSIGN\";\n+          case ASSIGN:          ;\n           case ASSIGN_BITOR:    return \"ASSIGN_BITOR\";\n           case ASSIGN_BITXOR:   return \"ASSIGN_BITXOR\";\n           case ASSIGN_BITAND:   return \"ASSIGN_BITAND\";\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 102, 
          "faulty": "changed=true;", 
          "type": "InsertBefore", 
          "seed": "StringBuilder builder=new StringBuilder();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 221, 
          "faulty": "return \"synthetic\";", 
          "type": "Delete", 
          "seed": "consumeToken();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 318, 
          "faulty": "return \"THIS\";", 
          "type": "Delete", 
          "seed": "return Token.STRING;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 362, 
          "faulty": "return \"ASSIGN\";", 
          "type": "Delete", 
          "seed": "return Token.LP;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 88, 
          "faulty": "canRemove=true;", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 87, 
          "faulty": "if (specializationState == null) {\n  canRemove=true;\n}\n else {\n  Node specializableFunction=getSpecializableFunctionFromSymbol(declaration);\n  if (specializableFunction != null) {\n    specializationState.reportRemovedFunction(specializableFunction,null);\n    canRemove=true;\n  }\n}", 
          "type": "Replace", 
          "seed": "int start=0;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:51:37.259744610 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1532/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 07:09:52.017348885 -0500\n@@ -85,7 +85,6 @@\n           boolean canRemove = false;\n \n           if (specializationState == null) {\n-            canRemove = true;\n           } else {\n             Node specializableFunction =\n               getSpecializableFunctionFromSymbol(declaration);\n@@ -96,11 +95,6 @@\n               canRemove = true;\n             }\n           }\n-\n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 06:51:37.283732609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1532/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 07:09:52.021348978 -0500\n@@ -307,7 +307,7 @@\n           case TYPEOF:          return \"TYPEOF\";\n           case GETPROP:         return \"GETPROP\";\n           case SETPROP:         return \"SETPROP\";\n-          case GETELEM:         return \"GETELEM\";\n+          case GETELEM:         return \"return\";\n           case SETELEM:         return \"SETELEM\";\n           case CALL:            return \"CALL\";\n           case NAME:            return \"NAME\";\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 88, 
          "faulty": "canRemove=true;", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 310, 
          "faulty": "return \"GETELEM\";", 
          "type": "Replace", 
          "seed": "return \"return\";"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:51:37.259744610 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_301/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:59:04.537061061 -0500\n@@ -85,7 +85,6 @@\n           boolean canRemove = false;\n \n           if (specializationState == null) {\n-            canRemove = true;\n           } else {\n             Node specializableFunction =\n               getSpecializableFunctionFromSymbol(declaration);\n@@ -96,11 +95,6 @@\n               canRemove = true;\n             }\n           }\n-\n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 06:51:37.283732609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_301/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 06:59:04.541061071 -0500\n@@ -359,7 +359,7 @@\n           case LP:              return \"LP\";\n           case RP:              return \"RP\";\n           case COMMA:           return \"COMMA\";\n-          case ASSIGN:          return \"ASSIGN\";\n+          case ASSIGN:          ;\n           case ASSIGN_BITOR:    return \"ASSIGN_BITOR\";\n           case ASSIGN_BITXOR:   return \"ASSIGN_BITXOR\";\n           case ASSIGN_BITAND:   return \"ASSIGN_BITAND\";\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 362, 
          "faulty": "return \"ASSIGN\";", 
          "type": "Delete", 
          "seed": "Node pn=memberExpr(true);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 88, 
          "faulty": "canRemove=true;", 
          "type": "Delete", 
          "seed": "return null;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:51:37.259744610 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1234/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 07:07:21.816842405 -0500\n@@ -96,11 +96,6 @@\n               canRemove = true;\n             }\n           }\n-\n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java\t2018-12-02 06:51:39.210768564 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1234/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java\t2018-12-02 07:07:21.820842556 -0500\n@@ -532,7 +532,8 @@\n \n     @Override\n     public void remove() {\n-      NodeUtil.removeChild(exprNode.getParent(), exprNode);\n+      int index = -1;\n+\tNodeUtil.removeChild(exprNode.getParent(), exprNode);\n     }\n \n     @Override\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 06:51:37.279734609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1234/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 07:07:21.820842556 -0500\n@@ -218,7 +218,7 @@\n         case QUOTED_PROP:        return \"quoted\";\n         case OPT_ARG_NAME:       return \"opt_arg\";\n \n-        case SYNTHETIC_BLOCK_PROP: return \"synthetic\";\n+        case SYNTHETIC_BLOCK_PROP: ;\n         case EMPTY_BLOCK:        return \"empty_block\";\n         case ORIGINALNAME_PROP:  return \"originalname\";\n         case SIDE_EFFECT_FLAGS:  return \"side_effect_flags\";\n@@ -937,14 +937,7 @@\n         sb.append(getString());\n       } else if (type == Token.FUNCTION) {\n         sb.append(' ');\n-        // In the case of JsDoc trees, the first child is often not a string\n-        // which causes exceptions to be thrown when calling toString or\n-        // toStringTree.\n-        if (first == null || first.getType() != Token.NAME) {\n-          sb.append(\"<invalid>\");\n-        } else {\n-          sb.append(first.getString());\n-        }\n+        int lineno = getLineno();\n       } else if (this instanceof ScriptOrFnNode) {\n         ScriptOrFnNode sof = (ScriptOrFnNode) this;\n         if (this instanceof FunctionNode) {\n@@ -1424,7 +1417,6 @@\n       }\n       res = n.checkTreeEqualsImpl(n2);\n       if (res != null) {\n-        return res;\n       }\n     }\n     return res;\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 06:51:37.283732609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1234/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 07:07:21.824842708 -0500\n@@ -315,7 +315,7 @@\n           case NUMBER:          return \"NUMBER\";\n           case STRING:          return \"STRING\";\n           case NULL:            return \"NULL\";\n-          case THIS:            return \"THIS\";\n+          case THIS:            ;\n           case FALSE:           return \"FALSE\";\n           case TRUE:            return \"TRUE\";\n           case SHEQ:            return \"SHEQ\";\n@@ -359,7 +359,7 @@\n           case LP:              return \"LP\";\n           case RP:              return \"RP\";\n           case COMMA:           return \"COMMA\";\n-          case ASSIGN:          return \"ASSIGN\";\n+          case ASSIGN:          ;\n           case ASSIGN_BITOR:    return \"ASSIGN_BITOR\";\n           case ASSIGN_BITXOR:   return \"ASSIGN_BITXOR\";\n           case ASSIGN_BITAND:   return \"ASSIGN_BITAND\";\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 318, 
          "faulty": "return \"THIS\";", 
          "type": "Delete", 
          "seed": "return Token.STRING;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 943, 
          "faulty": "if (first == null || first.getType() != Token.NAME) {\n  sb.append(\"<invalid>\");\n}\n else {\n  sb.append(first.getString());\n}", 
          "type": "Replace", 
          "seed": "int lineno=getLineno();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 102, 
          "faulty": "changed=true;", 
          "type": "InsertBefore", 
          "seed": "StringBuilder builder=new StringBuilder();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java", 
          "line": 535, 
          "faulty": "NodeUtil.removeChild(exprNode.getParent(),exprNode);", 
          "type": "InsertBefore", 
          "seed": "int index=-1;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 221, 
          "faulty": "return \"synthetic\";", 
          "type": "Delete", 
          "seed": "consumeToken();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1427, 
          "faulty": "return res;", 
          "type": "Delete", 
          "seed": "boolean first=true;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 362, 
          "faulty": "return \"ASSIGN\";", 
          "type": "Delete", 
          "seed": "return Token.LP;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:51:37.259744610 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1607/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 07:10:30.338196777 -0500\n@@ -82,10 +82,10 @@\n     for (NameInfo nameInfo : allNameInfo) {\n       if (!nameInfo.isReferenced()) {\n         for (Symbol declaration : nameInfo.getDeclarations()) {\n-          boolean canRemove = false;\n+          boolean valid = false;\n+\t\tboolean canRemove = false;\n \n           if (specializationState == null) {\n-            canRemove = true;\n           } else {\n             Node specializableFunction =\n               getSpecializableFunctionFromSymbol(declaration);\n@@ -96,11 +96,6 @@\n               canRemove = true;\n             }\n           }\n-\n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java\t2018-12-02 06:51:39.210768564 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1607/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java\t2018-12-02 07:10:30.342196860 -0500\n@@ -532,7 +532,8 @@\n \n     @Override\n     public void remove() {\n-      NodeUtil.removeChild(exprNode.getParent(), exprNode);\n+      int index = -1;\n+\tNodeUtil.removeChild(exprNode.getParent(), exprNode);\n     }\n \n     @Override\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 06:51:37.279734609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1607/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 07:10:30.342196860 -0500\n@@ -218,7 +218,7 @@\n         case QUOTED_PROP:        return \"quoted\";\n         case OPT_ARG_NAME:       return \"opt_arg\";\n \n-        case SYNTHETIC_BLOCK_PROP: return \"synthetic\";\n+        case SYNTHETIC_BLOCK_PROP: ;\n         case EMPTY_BLOCK:        return \"empty_block\";\n         case ORIGINALNAME_PROP:  return \"originalname\";\n         case SIDE_EFFECT_FLAGS:  return \"side_effect_flags\";\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 06:51:37.283732609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1607/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 07:10:30.346196944 -0500\n@@ -359,7 +359,7 @@\n           case LP:              return \"LP\";\n           case RP:              return \"RP\";\n           case COMMA:           return \"COMMA\";\n-          case ASSIGN:          return \"ASSIGN\";\n+          case ASSIGN:          ;\n           case ASSIGN_BITOR:    return \"ASSIGN_BITOR\";\n           case ASSIGN_BITXOR:   return \"ASSIGN_BITXOR\";\n           case ASSIGN_BITAND:   return \"ASSIGN_BITAND\";\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 221, 
          "faulty": "return \"synthetic\";", 
          "type": "Delete", 
          "seed": "consumeToken();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java", 
          "line": 535, 
          "faulty": "NodeUtil.removeChild(exprNode.getParent(),exprNode);", 
          "type": "InsertBefore", 
          "seed": "int index=-1;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 362, 
          "faulty": "return \"ASSIGN\";", 
          "type": "Delete", 
          "seed": "case 2:"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 85, 
          "faulty": "boolean canRemove=false;", 
          "type": "InsertBefore", 
          "seed": "boolean valid=false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 88, 
          "faulty": "canRemove=true;", 
          "type": "Delete", 
          "seed": "return this;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:51:37.259744610 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1622/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 07:10:38.818371746 -0500\n@@ -83,24 +83,6 @@\n       if (!nameInfo.isReferenced()) {\n         for (Symbol declaration : nameInfo.getDeclarations()) {\n           boolean canRemove = false;\n-\n-          if (specializationState == null) {\n-            canRemove = true;\n-          } else {\n-            Node specializableFunction =\n-              getSpecializableFunctionFromSymbol(declaration);\n-\n-            if (specializableFunction != null) {\n-              specializationState.reportRemovedFunction(\n-                  specializableFunction, null);\n-              canRemove = true;\n-            }\n-          }\n-\n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 06:51:37.279734609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1622/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 07:10:38.818371746 -0500\n@@ -218,7 +218,7 @@\n         case QUOTED_PROP:        return \"quoted\";\n         case OPT_ARG_NAME:       return \"opt_arg\";\n \n-        case SYNTHETIC_BLOCK_PROP: return \"synthetic\";\n+        case SYNTHETIC_BLOCK_PROP: ;\n         case EMPTY_BLOCK:        return \"empty_block\";\n         case ORIGINALNAME_PROP:  return \"originalname\";\n         case SIDE_EFFECT_FLAGS:  return \"side_effect_flags\";\n@@ -1411,7 +1411,8 @@\n    */\n   NodeMismatch checkTreeEqualsImpl(Node node2) {\n     if (!isEquivalentTo(node2, false, false)) {\n-      return new NodeMismatch(this, node2);\n+      boolean nullKey = false;\n+\treturn new NodeMismatch(this, node2);\n     }\n \n     NodeMismatch res = null;\n@@ -1424,7 +1425,6 @@\n       }\n       res = n.checkTreeEqualsImpl(n2);\n       if (res != null) {\n-        return res;\n       }\n     }\n     return res;\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 06:51:37.283732609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1622/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 07:10:38.822371827 -0500\n@@ -315,7 +315,7 @@\n           case NUMBER:          return \"NUMBER\";\n           case STRING:          return \"STRING\";\n           case NULL:            return \"NULL\";\n-          case THIS:            return \"THIS\";\n+          case THIS:            ;\n           case FALSE:           return \"FALSE\";\n           case TRUE:            return \"TRUE\";\n           case SHEQ:            return \"SHEQ\";\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 221, 
          "faulty": "return \"synthetic\";", 
          "type": "Delete", 
          "seed": "consumeToken();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1427, 
          "faulty": "return res;", 
          "type": "Delete", 
          "seed": "boolean first=true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 318, 
          "faulty": "return \"THIS\";", 
          "type": "Delete", 
          "seed": "return Token.XMLATTR;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 221, 
          "faulty": "return \"synthetic\";", 
          "type": "Delete", 
          "seed": "return Token.XMLATTR;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1427, 
          "faulty": "return res;", 
          "type": "Delete", 
          "seed": "return Token.STRING;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1414, 
          "faulty": "return new NodeMismatch(this,node2);", 
          "type": "InsertBefore", 
          "seed": "boolean nullKey=false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 87, 
          "faulty": "if (specializationState == null) {\n  canRemove=true;\n}\n else {\n  Node specializableFunction=getSpecializableFunctionFromSymbol(declaration);\n  if (specializableFunction != null) {\n    specializationState.reportRemovedFunction(specializableFunction,null);\n    canRemove=true;\n  }\n}", 
          "type": "Delete", 
          "seed": "break;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:51:37.259744610 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1760/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 07:11:48.939667239 -0500\n@@ -85,7 +85,6 @@\n           boolean canRemove = false;\n \n           if (specializationState == null) {\n-            canRemove = true;\n           } else {\n             Node specializableFunction =\n               getSpecializableFunctionFromSymbol(declaration);\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 06:51:37.279734609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1760/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 07:11:48.943667306 -0500\n@@ -218,7 +218,7 @@\n         case QUOTED_PROP:        return \"quoted\";\n         case OPT_ARG_NAME:       return \"opt_arg\";\n \n-        case SYNTHETIC_BLOCK_PROP: return \"synthetic\";\n+        case SYNTHETIC_BLOCK_PROP: ;\n         case EMPTY_BLOCK:        return \"empty_block\";\n         case ORIGINALNAME_PROP:  return \"originalname\";\n         case SIDE_EFFECT_FLAGS:  return \"side_effect_flags\";\n@@ -937,14 +937,7 @@\n         sb.append(getString());\n       } else if (type == Token.FUNCTION) {\n         sb.append(' ');\n-        // In the case of JsDoc trees, the first child is often not a string\n-        // which causes exceptions to be thrown when calling toString or\n-        // toStringTree.\n-        if (first == null || first.getType() != Token.NAME) {\n-          sb.append(\"<invalid>\");\n-        } else {\n-          sb.append(first.getString());\n-        }\n+        int lineno = getLineno();\n       } else if (this instanceof ScriptOrFnNode) {\n         ScriptOrFnNode sof = (ScriptOrFnNode) this;\n         if (this instanceof FunctionNode) {\n@@ -1424,7 +1417,7 @@\n       }\n       res = n.checkTreeEqualsImpl(n2);\n       if (res != null) {\n-        return res;\n+        Kit.codeBug();\n       }\n     }\n     return res;\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 06:51:37.283732609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1760/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 07:11:48.943667306 -0500\n@@ -315,7 +315,10 @@\n           case NUMBER:          return \"NUMBER\";\n           case STRING:          return \"STRING\";\n           case NULL:            return \"NULL\";\n-          case THIS:            return \"THIS\";\n+          case THIS:            {\n+\t\t\t\tStringBuilder sb = new StringBuilder();\n+\t\t\t\treturn \"THIS\";\n+\t\t\t}\n           case FALSE:           return \"FALSE\";\n           case TRUE:            return \"TRUE\";\n           case SHEQ:            return \"SHEQ\";\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 88, 
          "faulty": "canRemove=true;", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 943, 
          "faulty": "if (first == null || first.getType() != Token.NAME) {\n  sb.append(\"<invalid>\");\n}\n else {\n  sb.append(first.getString());\n}", 
          "type": "Replace", 
          "seed": "int lineno=getLineno();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 221, 
          "faulty": "return \"synthetic\";", 
          "type": "Delete", 
          "seed": "consumeToken();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1427, 
          "faulty": "return res;", 
          "type": "Delete", 
          "seed": "boolean first=true;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 88, 
          "faulty": "canRemove=true;", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 943, 
          "faulty": "if (first == null || first.getType() != Token.NAME) {\n  sb.append(\"<invalid>\");\n}\n else {\n  sb.append(first.getString());\n}", 
          "type": "Replace", 
          "seed": "int lineno=getLineno();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 221, 
          "faulty": "return \"synthetic\";", 
          "type": "Delete", 
          "seed": "consumeToken();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 318, 
          "faulty": "return \"THIS\";", 
          "type": "Delete", 
          "seed": "return Token.STRING;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1427, 
          "faulty": "return res;", 
          "type": "Replace", 
          "seed": "Kit.codeBug();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 318, 
          "faulty": "return \"THIS\";", 
          "type": "InsertBefore", 
          "seed": "StringBuilder sb=new StringBuilder();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:51:37.259744610 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_352/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:59:33.740714867 -0500\n@@ -85,7 +85,6 @@\n           boolean canRemove = false;\n \n           if (specializationState == null) {\n-            canRemove = true;\n           } else {\n             Node specializableFunction =\n               getSpecializableFunctionFromSymbol(declaration);\n@@ -96,11 +95,6 @@\n               canRemove = true;\n             }\n           }\n-\n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 06:51:37.283732609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_352/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 06:59:33.740714867 -0500\n@@ -315,7 +315,7 @@\n           case NUMBER:          return \"NUMBER\";\n           case STRING:          return \"STRING\";\n           case NULL:            return \"NULL\";\n-          case THIS:            return \"THIS\";\n+          case THIS:            ;\n           case FALSE:           return \"FALSE\";\n           case TRUE:            return \"TRUE\";\n           case SHEQ:            return \"SHEQ\";\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 88, 
          "faulty": "canRemove=true;", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 318, 
          "faulty": "return \"THIS\";", 
          "type": "Delete", 
          "seed": "String str=getStringFromBuffer();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:51:37.259744610 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_855/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 07:04:01.953615344 -0500\n@@ -97,10 +97,7 @@\n             }\n           }\n \n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n+          return;\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 06:51:37.279734609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_855/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 07:04:01.953615344 -0500\n@@ -937,14 +937,7 @@\n         sb.append(getString());\n       } else if (type == Token.FUNCTION) {\n         sb.append(' ');\n-        // In the case of JsDoc trees, the first child is often not a string\n-        // which causes exceptions to be thrown when calling toString or\n-        // toStringTree.\n-        if (first == null || first.getType() != Token.NAME) {\n-          sb.append(\"<invalid>\");\n-        } else {\n-          sb.append(first.getString());\n-        }\n+        int lineno = getLineno();\n       } else if (this instanceof ScriptOrFnNode) {\n         ScriptOrFnNode sof = (ScriptOrFnNode) this;\n         if (this instanceof FunctionNode) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 943, 
          "faulty": "if (first == null || first.getType() != Token.NAME) {\n  sb.append(\"<invalid>\");\n}\n else {\n  sb.append(first.getString());\n}", 
          "type": "Replace", 
          "seed": "int lineno=getLineno();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "InsertBefore", 
          "seed": "return;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:51:37.259744610 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_807/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 07:03:38.209784180 -0500\n@@ -85,7 +85,6 @@\n           boolean canRemove = false;\n \n           if (specializationState == null) {\n-            canRemove = true;\n           } else {\n             Node specializableFunction =\n               getSpecializableFunctionFromSymbol(declaration);\n@@ -96,11 +95,6 @@\n               canRemove = true;\n             }\n           }\n-\n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 06:51:37.279734609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_807/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 07:03:38.209784180 -0500\n@@ -218,7 +218,7 @@\n         case QUOTED_PROP:        return \"quoted\";\n         case OPT_ARG_NAME:       return \"opt_arg\";\n \n-        case SYNTHETIC_BLOCK_PROP: return \"synthetic\";\n+        case SYNTHETIC_BLOCK_PROP: ;\n         case EMPTY_BLOCK:        return \"empty_block\";\n         case ORIGINALNAME_PROP:  return \"originalname\";\n         case SIDE_EFFECT_FLAGS:  return \"side_effect_flags\";\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 06:51:37.283732609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_807/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 07:03:38.213784151 -0500\n@@ -307,7 +307,7 @@\n           case TYPEOF:          return \"TYPEOF\";\n           case GETPROP:         return \"GETPROP\";\n           case SETPROP:         return \"SETPROP\";\n-          case GETELEM:         return \"GETELEM\";\n+          case GETELEM:         ;\n           case SETELEM:         return \"SETELEM\";\n           case CALL:            return \"CALL\";\n           case NAME:            return \"NAME\";\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 221, 
          "faulty": "return \"synthetic\";", 
          "type": "Delete", 
          "seed": "consumeToken();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 310, 
          "faulty": "return \"GETELEM\";", 
          "type": "Delete", 
          "seed": "String namespace=null;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 88, 
          "faulty": "canRemove=true;", 
          "type": "Replace", 
          "seed": "return;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 88, 
          "faulty": "canRemove=true;", 
          "type": "Delete", 
          "seed": "int index=-1;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:51:37.259744610 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_790/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 07:03:30.489843499 -0500\n@@ -81,28 +81,6 @@\n     boolean changed = false;\n     for (NameInfo nameInfo : allNameInfo) {\n       if (!nameInfo.isReferenced()) {\n-        for (Symbol declaration : nameInfo.getDeclarations()) {\n-          boolean canRemove = false;\n-\n-          if (specializationState == null) {\n-            canRemove = true;\n-          } else {\n-            Node specializableFunction =\n-              getSpecializableFunctionFromSymbol(declaration);\n-\n-            if (specializableFunction != null) {\n-              specializationState.reportRemovedFunction(\n-                  specializableFunction, null);\n-              canRemove = true;\n-            }\n-          }\n-\n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n-        }\n-\n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 88, 
          "faulty": "canRemove=true;", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 84, 
          "faulty": "for (Symbol declaration : nameInfo.getDeclarations()) {\n  boolean canRemove=false;\n  if (specializationState == null) {\n    canRemove=true;\n  }\n else {\n    Node specializableFunction=getSpecializableFunctionFromSymbol(declaration);\n    if (specializableFunction != null) {\n      specializationState.reportRemovedFunction(specializableFunction,null);\n      canRemove=true;\n    }\n  }\n  if (canRemove) {\n    declaration.remove();\n    changed=true;\n  }\n}", 
          "type": "Delete", 
          "seed": "break;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:51:37.259744610 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1428/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 07:08:56.735936615 -0500\n@@ -82,7 +82,8 @@\n     for (NameInfo nameInfo : allNameInfo) {\n       if (!nameInfo.isReferenced()) {\n         for (Symbol declaration : nameInfo.getDeclarations()) {\n-          boolean canRemove = false;\n+          boolean valid = false;\n+\t\tboolean canRemove = false;\n \n           if (specializationState == null) {\n             canRemove = true;\n@@ -96,11 +97,6 @@\n               canRemove = true;\n             }\n           }\n-\n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java\t2018-12-02 06:51:39.210768564 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1428/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java\t2018-12-02 07:08:56.735936615 -0500\n@@ -532,7 +532,8 @@\n \n     @Override\n     public void remove() {\n-      NodeUtil.removeChild(exprNode.getParent(), exprNode);\n+      int index = -1;\n+\tNodeUtil.removeChild(exprNode.getParent(), exprNode);\n     }\n \n     @Override\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 06:51:37.283732609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1428/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 07:08:56.739936727 -0500\n@@ -359,7 +359,7 @@\n           case LP:              return \"LP\";\n           case RP:              return \"RP\";\n           case COMMA:           return \"COMMA\";\n-          case ASSIGN:          return \"ASSIGN\";\n+          case ASSIGN:          ;\n           case ASSIGN_BITOR:    return \"ASSIGN_BITOR\";\n           case ASSIGN_BITXOR:   return \"ASSIGN_BITXOR\";\n           case ASSIGN_BITAND:   return \"ASSIGN_BITAND\";\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java", 
          "line": 535, 
          "faulty": "NodeUtil.removeChild(exprNode.getParent(),exprNode);", 
          "type": "InsertBefore", 
          "seed": "int index=-1;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 362, 
          "faulty": "return \"ASSIGN\";", 
          "type": "Delete", 
          "seed": "case 2:"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 85, 
          "faulty": "boolean canRemove=false;", 
          "type": "InsertBefore", 
          "seed": "boolean valid=false;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:51:37.259744610 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_563/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 07:01:31.503093884 -0500\n@@ -85,7 +85,6 @@\n           boolean canRemove = false;\n \n           if (specializationState == null) {\n-            canRemove = true;\n           } else {\n             Node specializableFunction =\n               getSpecializableFunctionFromSymbol(declaration);\n@@ -96,11 +95,6 @@\n               canRemove = true;\n             }\n           }\n-\n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 06:51:37.279734609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_563/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 07:01:31.507093830 -0500\n@@ -218,7 +218,7 @@\n         case QUOTED_PROP:        return \"quoted\";\n         case OPT_ARG_NAME:       return \"opt_arg\";\n \n-        case SYNTHETIC_BLOCK_PROP: return \"synthetic\";\n+        case SYNTHETIC_BLOCK_PROP: ;\n         case EMPTY_BLOCK:        return \"empty_block\";\n         case ORIGINALNAME_PROP:  return \"originalname\";\n         case SIDE_EFFECT_FLAGS:  return \"side_effect_flags\";\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 221, 
          "faulty": "return \"synthetic\";", 
          "type": "Delete", 
          "seed": "consumeToken();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 102, 
          "faulty": "changed=true;", 
          "type": "InsertBefore", 
          "seed": "StringBuilder builder=new StringBuilder();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 88, 
          "faulty": "canRemove=true;", 
          "type": "Delete", 
          "seed": "return null;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:51:37.259744610 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_636/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 07:02:10.170610014 -0500\n@@ -96,11 +96,6 @@\n               canRemove = true;\n             }\n           }\n-\n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java\t2018-12-02 06:51:39.210768564 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_636/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java\t2018-12-02 07:02:10.170610014 -0500\n@@ -532,7 +532,8 @@\n \n     @Override\n     public void remove() {\n-      NodeUtil.removeChild(exprNode.getParent(), exprNode);\n+      int index = -1;\n+\tNodeUtil.removeChild(exprNode.getParent(), exprNode);\n     }\n \n     @Override\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 06:51:37.279734609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_636/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 07:02:10.174609968 -0500\n@@ -218,7 +218,7 @@\n         case QUOTED_PROP:        return \"quoted\";\n         case OPT_ARG_NAME:       return \"opt_arg\";\n \n-        case SYNTHETIC_BLOCK_PROP: return \"synthetic\";\n+        case SYNTHETIC_BLOCK_PROP: ;\n         case EMPTY_BLOCK:        return \"empty_block\";\n         case ORIGINALNAME_PROP:  return \"originalname\";\n         case SIDE_EFFECT_FLAGS:  return \"side_effect_flags\";\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 06:51:37.283732609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_636/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 07:02:10.174609968 -0500\n@@ -315,7 +315,7 @@\n           case NUMBER:          return \"NUMBER\";\n           case STRING:          return \"STRING\";\n           case NULL:            return \"NULL\";\n-          case THIS:            return \"THIS\";\n+          case THIS:            ;\n           case FALSE:           return \"FALSE\";\n           case TRUE:            return \"TRUE\";\n           case SHEQ:            return \"SHEQ\";\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 318, 
          "faulty": "return \"THIS\";", 
          "type": "Delete", 
          "seed": "return Token.STRING;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 101, 
          "faulty": "declaration.remove();", 
          "type": "InsertBefore", 
          "seed": "return;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java", 
          "line": 535, 
          "faulty": "NodeUtil.removeChild(exprNode.getParent(),exprNode);", 
          "type": "InsertBefore", 
          "seed": "int index=-1;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 221, 
          "faulty": "return \"synthetic\";", 
          "type": "Delete", 
          "seed": "mustMatchToken(Token.RP,\"msg.no.paren\");"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:51:37.259744610 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1835/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 07:12:28.196291281 -0500\n@@ -85,7 +85,6 @@\n           boolean canRemove = false;\n \n           if (specializationState == null) {\n-            canRemove = true;\n           } else {\n             Node specializableFunction =\n               getSpecializableFunctionFromSymbol(declaration);\n@@ -96,11 +95,6 @@\n               canRemove = true;\n             }\n           }\n-\n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 06:51:37.279734609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1835/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 07:12:28.196291281 -0500\n@@ -218,7 +218,7 @@\n         case QUOTED_PROP:        return \"quoted\";\n         case OPT_ARG_NAME:       return \"opt_arg\";\n \n-        case SYNTHETIC_BLOCK_PROP: return \"synthetic\";\n+        case SYNTHETIC_BLOCK_PROP: ;\n         case EMPTY_BLOCK:        return \"empty_block\";\n         case ORIGINALNAME_PROP:  return \"originalname\";\n         case SIDE_EFFECT_FLAGS:  return \"side_effect_flags\";\n@@ -1424,7 +1424,7 @@\n       }\n       res = n.checkTreeEqualsImpl(n2);\n       if (res != null) {\n-        return res;\n+        Kit.codeBug();\n       }\n     }\n     return res;\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 06:51:37.283732609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1835/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 07:12:28.200291342 -0500\n@@ -315,7 +315,10 @@\n           case NUMBER:          return \"NUMBER\";\n           case STRING:          return \"STRING\";\n           case NULL:            return \"NULL\";\n-          case THIS:            return \"THIS\";\n+          case THIS:            {\n+\t\t\t\tStringBuilder sb = new StringBuilder();\n+\t\t\t\treturn \"THIS\";\n+\t\t\t}\n           case FALSE:           return \"FALSE\";\n           case TRUE:            return \"TRUE\";\n           case SHEQ:            return \"SHEQ\";\n@@ -359,7 +362,7 @@\n           case LP:              return \"LP\";\n           case RP:              return \"RP\";\n           case COMMA:           return \"COMMA\";\n-          case ASSIGN:          return \"ASSIGN\";\n+          case ASSIGN:          ;\n           case ASSIGN_BITOR:    return \"ASSIGN_BITOR\";\n           case ASSIGN_BITXOR:   return \"ASSIGN_BITXOR\";\n           case ASSIGN_BITAND:   return \"ASSIGN_BITAND\";\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 318, 
          "faulty": "return \"THIS\";", 
          "type": "Delete", 
          "seed": "return Token.STRING;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 88, 
          "faulty": "canRemove=true;", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 318, 
          "faulty": "return \"THIS\";", 
          "type": "Delete", 
          "seed": "return Token.STRING;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1427, 
          "faulty": "return res;", 
          "type": "Replace", 
          "seed": "Kit.codeBug();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 318, 
          "faulty": "return \"THIS\";", 
          "type": "InsertBefore", 
          "seed": "StringBuilder sb=new StringBuilder();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 88, 
          "faulty": "canRemove=true;", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 221, 
          "faulty": "return \"synthetic\";", 
          "type": "Delete", 
          "seed": "consumeToken();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 362, 
          "faulty": "return \"ASSIGN\";", 
          "type": "Delete", 
          "seed": "return Token.LP;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 88, 
          "faulty": "canRemove=true;", 
          "type": "Delete", 
          "seed": "return this;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:51:37.259744610 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_828/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 07:03:48.713707019 -0500\n@@ -96,11 +96,6 @@\n               canRemove = true;\n             }\n           }\n-\n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java\t2018-12-02 06:51:39.210768564 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_828/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java\t2018-12-02 07:03:48.717706990 -0500\n@@ -532,7 +532,8 @@\n \n     @Override\n     public void remove() {\n-      NodeUtil.removeChild(exprNode.getParent(), exprNode);\n+      int index = -1;\n+\tNodeUtil.removeChild(exprNode.getParent(), exprNode);\n     }\n \n     @Override\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 06:51:37.279734609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_828/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 07:03:48.717706990 -0500\n@@ -218,7 +218,7 @@\n         case QUOTED_PROP:        return \"quoted\";\n         case OPT_ARG_NAME:       return \"opt_arg\";\n \n-        case SYNTHETIC_BLOCK_PROP: return \"synthetic\";\n+        case SYNTHETIC_BLOCK_PROP: ;\n         case EMPTY_BLOCK:        return \"empty_block\";\n         case ORIGINALNAME_PROP:  return \"originalname\";\n         case SIDE_EFFECT_FLAGS:  return \"side_effect_flags\";\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 06:51:37.283732609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_828/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 07:03:48.717706990 -0500\n@@ -315,7 +315,7 @@\n           case NUMBER:          return \"NUMBER\";\n           case STRING:          return \"STRING\";\n           case NULL:            return \"NULL\";\n-          case THIS:            return \"THIS\";\n+          case THIS:            ;\n           case FALSE:           return \"FALSE\";\n           case TRUE:            return \"TRUE\";\n           case SHEQ:            return \"SHEQ\";\n@@ -359,7 +359,7 @@\n           case LP:              return \"LP\";\n           case RP:              return \"RP\";\n           case COMMA:           return \"COMMA\";\n-          case ASSIGN:          return \"ASSIGN\";\n+          case ASSIGN:          ;\n           case ASSIGN_BITOR:    return \"ASSIGN_BITOR\";\n           case ASSIGN_BITXOR:   return \"ASSIGN_BITXOR\";\n           case ASSIGN_BITAND:   return \"ASSIGN_BITAND\";\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 102, 
          "faulty": "changed=true;", 
          "type": "InsertBefore", 
          "seed": "StringBuilder builder=new StringBuilder();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 318, 
          "faulty": "return \"THIS\";", 
          "type": "Delete", 
          "seed": "return Token.STRING;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 362, 
          "faulty": "return \"ASSIGN\";", 
          "type": "Delete", 
          "seed": "return Token.LP;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 221, 
          "faulty": "return \"synthetic\";", 
          "type": "Delete", 
          "seed": "consumeToken();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 101, 
          "faulty": "declaration.remove();", 
          "type": "InsertBefore", 
          "seed": "return;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java", 
          "line": 535, 
          "faulty": "NodeUtil.removeChild(exprNode.getParent(),exprNode);", 
          "type": "InsertBefore", 
          "seed": "int index=-1;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:51:37.259744610 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_593/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 07:01:48.546870142 -0500\n@@ -85,7 +85,6 @@\n           boolean canRemove = false;\n \n           if (specializationState == null) {\n-            canRemove = true;\n           } else {\n             Node specializableFunction =\n               getSpecializableFunctionFromSymbol(declaration);\n@@ -96,11 +95,6 @@\n               canRemove = true;\n             }\n           }\n-\n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java\t2018-12-02 06:51:39.210768564 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_593/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java\t2018-12-02 07:01:48.546870142 -0500\n@@ -532,7 +532,8 @@\n \n     @Override\n     public void remove() {\n-      NodeUtil.removeChild(exprNode.getParent(), exprNode);\n+      int index = -1;\n+\tNodeUtil.removeChild(exprNode.getParent(), exprNode);\n     }\n \n     @Override\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 06:51:37.279734609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_593/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 07:01:48.550870092 -0500\n@@ -218,7 +218,7 @@\n         case QUOTED_PROP:        return \"quoted\";\n         case OPT_ARG_NAME:       return \"opt_arg\";\n \n-        case SYNTHETIC_BLOCK_PROP: return \"synthetic\";\n+        case SYNTHETIC_BLOCK_PROP: ;\n         case EMPTY_BLOCK:        return \"empty_block\";\n         case ORIGINALNAME_PROP:  return \"originalname\";\n         case SIDE_EFFECT_FLAGS:  return \"side_effect_flags\";\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 06:51:37.283732609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_593/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 07:01:48.550870092 -0500\n@@ -359,7 +359,7 @@\n           case LP:              return \"LP\";\n           case RP:              return \"RP\";\n           case COMMA:           return \"COMMA\";\n-          case ASSIGN:          return \"ASSIGN\";\n+          case ASSIGN:          ;\n           case ASSIGN_BITOR:    return \"ASSIGN_BITOR\";\n           case ASSIGN_BITXOR:   return \"ASSIGN_BITXOR\";\n           case ASSIGN_BITAND:   return \"ASSIGN_BITAND\";\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 102, 
          "faulty": "changed=true;", 
          "type": "InsertBefore", 
          "seed": "StringBuilder builder=new StringBuilder();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 221, 
          "faulty": "return \"synthetic\";", 
          "type": "Delete", 
          "seed": "consumeToken();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 362, 
          "faulty": "return \"ASSIGN\";", 
          "type": "Delete", 
          "seed": "Node pn=memberExpr(true);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 88, 
          "faulty": "canRemove=true;", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 101, 
          "faulty": "declaration.remove();", 
          "type": "InsertBefore", 
          "seed": "return;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java", 
          "line": 535, 
          "faulty": "NodeUtil.removeChild(exprNode.getParent(),exprNode);", 
          "type": "InsertBefore", 
          "seed": "int index=-1;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:51:37.259744610 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1244/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 07:07:26.449017049 -0500\n@@ -96,11 +96,6 @@\n               canRemove = true;\n             }\n           }\n-\n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 06:51:37.279734609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1244/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 07:07:26.453017198 -0500\n@@ -218,7 +218,7 @@\n         case QUOTED_PROP:        return \"quoted\";\n         case OPT_ARG_NAME:       return \"opt_arg\";\n \n-        case SYNTHETIC_BLOCK_PROP: return \"synthetic\";\n+        case SYNTHETIC_BLOCK_PROP: ;\n         case EMPTY_BLOCK:        return \"empty_block\";\n         case ORIGINALNAME_PROP:  return \"originalname\";\n         case SIDE_EFFECT_FLAGS:  return \"side_effect_flags\";\n@@ -937,14 +937,7 @@\n         sb.append(getString());\n       } else if (type == Token.FUNCTION) {\n         sb.append(' ');\n-        // In the case of JsDoc trees, the first child is often not a string\n-        // which causes exceptions to be thrown when calling toString or\n-        // toStringTree.\n-        if (first == null || first.getType() != Token.NAME) {\n-          sb.append(\"<invalid>\");\n-        } else {\n-          sb.append(first.getString());\n-        }\n+        int lineno = getLineno();\n       } else if (this instanceof ScriptOrFnNode) {\n         ScriptOrFnNode sof = (ScriptOrFnNode) this;\n         if (this instanceof FunctionNode) {\n@@ -1424,7 +1417,6 @@\n       }\n       res = n.checkTreeEqualsImpl(n2);\n       if (res != null) {\n-        return res;\n       }\n     }\n     return res;\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 06:51:37.283732609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1244/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 07:07:26.453017198 -0500\n@@ -307,7 +307,7 @@\n           case TYPEOF:          return \"TYPEOF\";\n           case GETPROP:         return \"GETPROP\";\n           case SETPROP:         return \"SETPROP\";\n-          case GETELEM:         return \"GETELEM\";\n+          case GETELEM:         ;\n           case SETELEM:         return \"SETELEM\";\n           case CALL:            return \"CALL\";\n           case NAME:            return \"NAME\";\n@@ -315,7 +315,7 @@\n           case NUMBER:          return \"NUMBER\";\n           case STRING:          return \"STRING\";\n           case NULL:            return \"NULL\";\n-          case THIS:            return \"THIS\";\n+          case THIS:            ;\n           case FALSE:           return \"FALSE\";\n           case TRUE:            return \"TRUE\";\n           case SHEQ:            return \"SHEQ\";\n@@ -356,10 +356,10 @@\n           case RB:              return \"RB\";\n           case LC:              return \"LC\";\n           case RC:              return \"RC\";\n-          case LP:              return \"LP\";\n+          case LP:              ;\n           case RP:              return \"RP\";\n           case COMMA:           return \"COMMA\";\n-          case ASSIGN:          return \"ASSIGN\";\n+          case ASSIGN:          Context cx = Context.getCurrentContext();\n           case ASSIGN_BITOR:    return \"ASSIGN_BITOR\";\n           case ASSIGN_BITXOR:   return \"ASSIGN_BITXOR\";\n           case ASSIGN_BITAND:   return \"ASSIGN_BITAND\";\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 318, 
          "faulty": "return \"THIS\";", 
          "type": "Delete", 
          "seed": "return Token.STRING;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 318, 
          "faulty": "return \"THIS\";", 
          "type": "Delete", 
          "seed": "return Token.XMLATTR;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 221, 
          "faulty": "return \"synthetic\";", 
          "type": "Delete", 
          "seed": "return Token.XMLATTR;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 221, 
          "faulty": "return \"synthetic\";", 
          "type": "Delete", 
          "seed": "consumeToken();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1427, 
          "faulty": "return res;", 
          "type": "Delete", 
          "seed": "boolean first=true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 318, 
          "faulty": "return \"THIS\";", 
          "type": "Delete", 
          "seed": "return Token.XMLATTR;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 221, 
          "faulty": "return \"synthetic\";", 
          "type": "Delete", 
          "seed": "return Token.XMLATTR;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 943, 
          "faulty": "if (first == null || first.getType() != Token.NAME) {\n  sb.append(\"<invalid>\");\n}\n else {\n  sb.append(first.getString());\n}", 
          "type": "Replace", 
          "seed": "int lineno=getLineno();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 362, 
          "faulty": "return \"ASSIGN\";", 
          "type": "Replace", 
          "seed": "Context cx=Context.getCurrentContext();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 310, 
          "faulty": "return \"GETELEM\";", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 359, 
          "faulty": "return \"LP\";", 
          "type": "Delete", 
          "seed": "return Token.ASSIGN;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:51:37.259744610 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_777/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 07:03:24.773888884 -0500\n@@ -96,11 +96,6 @@\n               canRemove = true;\n             }\n           }\n-\n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java\t2018-12-02 06:51:39.210768564 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_777/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java\t2018-12-02 07:03:24.777888852 -0500\n@@ -532,7 +532,8 @@\n \n     @Override\n     public void remove() {\n-      NodeUtil.removeChild(exprNode.getParent(), exprNode);\n+      int index = -1;\n+\tNodeUtil.removeChild(exprNode.getParent(), exprNode);\n     }\n \n     @Override\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 06:51:37.279734609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_777/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 07:03:24.777888852 -0500\n@@ -218,7 +218,7 @@\n         case QUOTED_PROP:        return \"quoted\";\n         case OPT_ARG_NAME:       return \"opt_arg\";\n \n-        case SYNTHETIC_BLOCK_PROP: return \"synthetic\";\n+        case SYNTHETIC_BLOCK_PROP: ;\n         case EMPTY_BLOCK:        return \"empty_block\";\n         case ORIGINALNAME_PROP:  return \"originalname\";\n         case SIDE_EFFECT_FLAGS:  return \"side_effect_flags\";\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 06:51:37.283732609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_777/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 07:03:24.777888852 -0500\n@@ -315,7 +315,7 @@\n           case NUMBER:          return \"NUMBER\";\n           case STRING:          return \"STRING\";\n           case NULL:            return \"NULL\";\n-          case THIS:            return \"THIS\";\n+          case THIS:            ;\n           case FALSE:           return \"FALSE\";\n           case TRUE:            return \"TRUE\";\n           case SHEQ:            return \"SHEQ\";\n@@ -359,7 +359,7 @@\n           case LP:              return \"LP\";\n           case RP:              return \"RP\";\n           case COMMA:           return \"COMMA\";\n-          case ASSIGN:          return \"ASSIGN\";\n+          case ASSIGN:          ;\n           case ASSIGN_BITOR:    return \"ASSIGN_BITOR\";\n           case ASSIGN_BITXOR:   return \"ASSIGN_BITXOR\";\n           case ASSIGN_BITAND:   return \"ASSIGN_BITAND\";\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 318, 
          "faulty": "return \"THIS\";", 
          "type": "Delete", 
          "seed": "return Token.STRING;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 362, 
          "faulty": "return \"ASSIGN\";", 
          "type": "Delete", 
          "seed": "return Token.LP;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 318, 
          "faulty": "return \"THIS\";", 
          "type": "Delete", 
          "seed": "return Token.STRING;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 362, 
          "faulty": "return \"ASSIGN\";", 
          "type": "Delete", 
          "seed": "return Token.LP;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 221, 
          "faulty": "return \"synthetic\";", 
          "type": "Delete", 
          "seed": "consumeToken();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 101, 
          "faulty": "declaration.remove();", 
          "type": "InsertBefore", 
          "seed": "return;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java", 
          "line": 535, 
          "faulty": "NodeUtil.removeChild(exprNode.getParent(),exprNode);", 
          "type": "InsertBefore", 
          "seed": "int index=-1;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:51:37.259744610 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1457/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 07:09:11.324333308 -0500\n@@ -85,7 +85,6 @@\n           boolean canRemove = false;\n \n           if (specializationState == null) {\n-            canRemove = true;\n           } else {\n             Node specializableFunction =\n               getSpecializableFunctionFromSymbol(declaration);\n@@ -96,11 +95,6 @@\n               canRemove = true;\n             }\n           }\n-\n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 06:51:37.279734609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1457/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 07:09:11.324333308 -0500\n@@ -218,7 +218,7 @@\n         case QUOTED_PROP:        return \"quoted\";\n         case OPT_ARG_NAME:       return \"opt_arg\";\n \n-        case SYNTHETIC_BLOCK_PROP: return \"synthetic\";\n+        case SYNTHETIC_BLOCK_PROP: ;\n         case EMPTY_BLOCK:        return \"empty_block\";\n         case ORIGINALNAME_PROP:  return \"originalname\";\n         case SIDE_EFFECT_FLAGS:  return \"side_effect_flags\";\n@@ -937,14 +937,7 @@\n         sb.append(getString());\n       } else if (type == Token.FUNCTION) {\n         sb.append(' ');\n-        // In the case of JsDoc trees, the first child is often not a string\n-        // which causes exceptions to be thrown when calling toString or\n-        // toStringTree.\n-        if (first == null || first.getType() != Token.NAME) {\n-          sb.append(\"<invalid>\");\n-        } else {\n-          sb.append(first.getString());\n-        }\n+        int lineno = getLineno();\n       } else if (this instanceof ScriptOrFnNode) {\n         ScriptOrFnNode sof = (ScriptOrFnNode) this;\n         if (this instanceof FunctionNode) {\n@@ -1424,7 +1417,6 @@\n       }\n       res = n.checkTreeEqualsImpl(n2);\n       if (res != null) {\n-        return res;\n       }\n     }\n     return res;\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 06:51:37.283732609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1457/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 07:09:11.328333414 -0500\n@@ -315,7 +315,7 @@\n           case NUMBER:          return \"NUMBER\";\n           case STRING:          return \"STRING\";\n           case NULL:            return \"NULL\";\n-          case THIS:            return \"THIS\";\n+          case THIS:            ;\n           case FALSE:           return \"FALSE\";\n           case TRUE:            return \"TRUE\";\n           case SHEQ:            return \"SHEQ\";\n@@ -359,7 +359,7 @@\n           case LP:              return \"LP\";\n           case RP:              return \"RP\";\n           case COMMA:           return \"COMMA\";\n-          case ASSIGN:          return \"ASSIGN\";\n+          case ASSIGN:          ;\n           case ASSIGN_BITOR:    return \"ASSIGN_BITOR\";\n           case ASSIGN_BITXOR:   return \"ASSIGN_BITXOR\";\n           case ASSIGN_BITAND:   return \"ASSIGN_BITAND\";\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 221, 
          "faulty": "return \"synthetic\";", 
          "type": "Delete", 
          "seed": "consumeToken();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 88, 
          "faulty": "canRemove=true;", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 318, 
          "faulty": "return \"THIS\";", 
          "type": "Delete", 
          "seed": "return Token.XMLATTR;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 221, 
          "faulty": "return \"synthetic\";", 
          "type": "Delete", 
          "seed": "return Token.XMLATTR;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 221, 
          "faulty": "return \"synthetic\";", 
          "type": "Delete", 
          "seed": "consumeToken();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 943, 
          "faulty": "if (first == null || first.getType() != Token.NAME) {\n  sb.append(\"<invalid>\");\n}\n else {\n  sb.append(first.getString());\n}", 
          "type": "Replace", 
          "seed": "int lineno=getLineno();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 362, 
          "faulty": "return \"ASSIGN\";", 
          "type": "Replace", 
          "seed": "Context cx=Context.getCurrentContext();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1427, 
          "faulty": "return res;", 
          "type": "Delete", 
          "seed": "boolean first=true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 318, 
          "faulty": "return \"THIS\";", 
          "type": "Delete", 
          "seed": "return Token.XMLATTR;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 221, 
          "faulty": "return \"synthetic\";", 
          "type": "Delete", 
          "seed": "return Token.XMLATTR;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 221, 
          "faulty": "return \"synthetic\";", 
          "type": "Delete", 
          "seed": "consumeToken();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1427, 
          "faulty": "return res;", 
          "type": "Delete", 
          "seed": "boolean first=true;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 102, 
          "faulty": "changed=true;", 
          "type": "InsertBefore", 
          "seed": "StringBuilder builder=new StringBuilder();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 88, 
          "faulty": "canRemove=true;", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 943, 
          "faulty": "if (first == null || first.getType() != Token.NAME) {\n  sb.append(\"<invalid>\");\n}\n else {\n  sb.append(first.getString());\n}", 
          "type": "Replace", 
          "seed": "int lineno=getLineno();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1427, 
          "faulty": "return res;", 
          "type": "Delete", 
          "seed": "boolean first=true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 318, 
          "faulty": "return \"THIS\";", 
          "type": "Delete", 
          "seed": "return Token.XMLATTR;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 221, 
          "faulty": "return \"synthetic\";", 
          "type": "Delete", 
          "seed": "return Token.XMLATTR;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 362, 
          "faulty": "return \"ASSIGN\";", 
          "type": "Delete", 
          "seed": "return Token.LP;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:51:37.259744610 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1356/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 07:08:22.034915252 -0500\n@@ -85,7 +85,6 @@\n           boolean canRemove = false;\n \n           if (specializationState == null) {\n-            canRemove = true;\n           } else {\n             Node specializableFunction =\n               getSpecializableFunctionFromSymbol(declaration);\n@@ -96,11 +95,6 @@\n               canRemove = true;\n             }\n           }\n-\n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java\t2018-12-02 06:51:39.210768564 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1356/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java\t2018-12-02 07:08:22.038915376 -0500\n@@ -532,7 +532,8 @@\n \n     @Override\n     public void remove() {\n-      NodeUtil.removeChild(exprNode.getParent(), exprNode);\n+      int index = -1;\n+\tNodeUtil.removeChild(exprNode.getParent(), exprNode);\n     }\n \n     @Override\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 06:51:37.283732609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1356/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 07:08:22.038915376 -0500\n@@ -315,7 +315,7 @@\n           case NUMBER:          return \"NUMBER\";\n           case STRING:          return \"STRING\";\n           case NULL:            return \"NULL\";\n-          case THIS:            return \"THIS\";\n+          case THIS:            ;\n           case FALSE:           return \"FALSE\";\n           case TRUE:            return \"TRUE\";\n           case SHEQ:            return \"SHEQ\";\n@@ -359,7 +359,7 @@\n           case LP:              return \"LP\";\n           case RP:              return \"RP\";\n           case COMMA:           return \"COMMA\";\n-          case ASSIGN:          return \"ASSIGN\";\n+          case ASSIGN:          ;\n           case ASSIGN_BITOR:    return \"ASSIGN_BITOR\";\n           case ASSIGN_BITXOR:   return \"ASSIGN_BITXOR\";\n           case ASSIGN_BITAND:   return \"ASSIGN_BITAND\";\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 318, 
          "faulty": "return \"THIS\";", 
          "type": "Delete", 
          "seed": "return Token.STRING;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 88, 
          "faulty": "canRemove=true;", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 318, 
          "faulty": "return \"THIS\";", 
          "type": "Delete", 
          "seed": "return Token.STRING;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java", 
          "line": 535, 
          "faulty": "NodeUtil.removeChild(exprNode.getParent(),exprNode);", 
          "type": "InsertBefore", 
          "seed": "int index=-1;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 362, 
          "faulty": "return \"ASSIGN\";", 
          "type": "Delete", 
          "seed": "case 2:"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:51:37.259744610 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1733/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 07:11:35.863444440 -0500\n@@ -85,7 +85,6 @@\n           boolean canRemove = false;\n \n           if (specializationState == null) {\n-            canRemove = true;\n           } else {\n             Node specializableFunction =\n               getSpecializableFunctionFromSymbol(declaration);\n@@ -96,11 +95,6 @@\n               canRemove = true;\n             }\n           }\n-\n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 06:51:37.279734609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1733/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 07:11:35.863444440 -0500\n@@ -218,7 +218,7 @@\n         case QUOTED_PROP:        return \"quoted\";\n         case OPT_ARG_NAME:       return \"opt_arg\";\n \n-        case SYNTHETIC_BLOCK_PROP: return \"synthetic\";\n+        case SYNTHETIC_BLOCK_PROP: ;\n         case EMPTY_BLOCK:        return \"empty_block\";\n         case ORIGINALNAME_PROP:  return \"originalname\";\n         case SIDE_EFFECT_FLAGS:  return \"side_effect_flags\";\n@@ -1424,7 +1424,6 @@\n       }\n       res = n.checkTreeEqualsImpl(n2);\n       if (res != null) {\n-        return res;\n       }\n     }\n     return res;\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 06:51:37.283732609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1733/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 07:11:35.867444510 -0500\n@@ -359,7 +359,7 @@\n           case LP:              return \"LP\";\n           case RP:              return \"RP\";\n           case COMMA:           return \"COMMA\";\n-          case ASSIGN:          return \"ASSIGN\";\n+          case ASSIGN:          ;\n           case ASSIGN_BITOR:    return \"ASSIGN_BITOR\";\n           case ASSIGN_BITXOR:   return \"ASSIGN_BITXOR\";\n           case ASSIGN_BITAND:   return \"ASSIGN_BITAND\";\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 221, 
          "faulty": "return \"synthetic\";", 
          "type": "Delete", 
          "seed": "consumeToken();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1427, 
          "faulty": "return res;", 
          "type": "Delete", 
          "seed": "boolean first=true;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 88, 
          "faulty": "canRemove=true;", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1427, 
          "faulty": "return res;", 
          "type": "Delete", 
          "seed": "return Token.STRING;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 362, 
          "faulty": "return \"ASSIGN\";", 
          "type": "Delete", 
          "seed": "Node pn=unaryExpr();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:51:37.259744610 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_640/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 07:02:11.506594772 -0500\n@@ -85,7 +85,6 @@\n           boolean canRemove = false;\n \n           if (specializationState == null) {\n-            canRemove = true;\n           } else {\n             Node specializableFunction =\n               getSpecializableFunctionFromSymbol(declaration);\n@@ -96,14 +95,10 @@\n               canRemove = true;\n             }\n           }\n-\n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n         }\n \n-        logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n+        int start = 0;\n+\t\tlogger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n       }\n     }\n \n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java\t2018-12-02 06:51:39.210768564 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_640/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java\t2018-12-02 07:02:11.510594727 -0500\n@@ -532,7 +532,8 @@\n \n     @Override\n     public void remove() {\n-      NodeUtil.removeChild(exprNode.getParent(), exprNode);\n+      int index = -1;\n+\tNodeUtil.removeChild(exprNode.getParent(), exprNode);\n     }\n \n     @Override\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 06:51:37.279734609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_640/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 07:02:11.510594727 -0500\n@@ -218,7 +218,7 @@\n         case QUOTED_PROP:        return \"quoted\";\n         case OPT_ARG_NAME:       return \"opt_arg\";\n \n-        case SYNTHETIC_BLOCK_PROP: return \"synthetic\";\n+        case SYNTHETIC_BLOCK_PROP: ;\n         case EMPTY_BLOCK:        return \"empty_block\";\n         case ORIGINALNAME_PROP:  return \"originalname\";\n         case SIDE_EFFECT_FLAGS:  return \"side_effect_flags\";\n@@ -1424,7 +1424,6 @@\n       }\n       res = n.checkTreeEqualsImpl(n2);\n       if (res != null) {\n-        return res;\n       }\n     }\n     return res;\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 06:51:37.283732609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_640/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 07:02:11.510594727 -0500\n@@ -359,7 +359,7 @@\n           case LP:              return \"LP\";\n           case RP:              return \"RP\";\n           case COMMA:           return \"COMMA\";\n-          case ASSIGN:          return \"ASSIGN\";\n+          case ASSIGN:          ;\n           case ASSIGN_BITOR:    return \"ASSIGN_BITOR\";\n           case ASSIGN_BITXOR:   return \"ASSIGN_BITXOR\";\n           case ASSIGN_BITAND:   return \"ASSIGN_BITAND\";\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 102, 
          "faulty": "changed=true;", 
          "type": "InsertBefore", 
          "seed": "StringBuilder builder=new StringBuilder();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 221, 
          "faulty": "return \"synthetic\";", 
          "type": "Delete", 
          "seed": "consumeToken();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 362, 
          "faulty": "return \"ASSIGN\";", 
          "type": "Delete", 
          "seed": "Node pn=memberExpr(true);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 88, 
          "faulty": "canRemove=true;", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 101, 
          "faulty": "declaration.remove();", 
          "type": "InsertBefore", 
          "seed": "return;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java", 
          "line": 535, 
          "faulty": "NodeUtil.removeChild(exprNode.getParent(),exprNode);", 
          "type": "InsertBefore", 
          "seed": "int index=-1;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 106, 
          "faulty": "logger.fine(\"Removed unused prototype property: \" + nameInfo.name);", 
          "type": "InsertBefore", 
          "seed": "int start=0;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 221, 
          "faulty": "return \"synthetic\";", 
          "type": "Delete", 
          "seed": "mustMatchToken(Token.RP,\"msg.no.paren\");"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1427, 
          "faulty": "return res;", 
          "type": "Delete", 
          "seed": "boolean isUnicodeEscapeStart=false;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:51:37.259744610 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1560/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 07:10:05.449657227 -0500\n@@ -85,7 +85,6 @@\n           boolean canRemove = false;\n \n           if (specializationState == null) {\n-            canRemove = true;\n           } else {\n             Node specializableFunction =\n               getSpecializableFunctionFromSymbol(declaration);\n@@ -96,11 +95,6 @@\n               canRemove = true;\n             }\n           }\n-\n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 06:51:37.279734609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1560/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 07:10:05.453657316 -0500\n@@ -218,7 +218,7 @@\n         case QUOTED_PROP:        return \"quoted\";\n         case OPT_ARG_NAME:       return \"opt_arg\";\n \n-        case SYNTHETIC_BLOCK_PROP: return \"synthetic\";\n+        case SYNTHETIC_BLOCK_PROP: ;\n         case EMPTY_BLOCK:        return \"empty_block\";\n         case ORIGINALNAME_PROP:  return \"originalname\";\n         case SIDE_EFFECT_FLAGS:  return \"side_effect_flags\";\n@@ -937,14 +937,7 @@\n         sb.append(getString());\n       } else if (type == Token.FUNCTION) {\n         sb.append(' ');\n-        // In the case of JsDoc trees, the first child is often not a string\n-        // which causes exceptions to be thrown when calling toString or\n-        // toStringTree.\n-        if (first == null || first.getType() != Token.NAME) {\n-          sb.append(\"<invalid>\");\n-        } else {\n-          sb.append(first.getString());\n-        }\n+        int lineno = getLineno();\n       } else if (this instanceof ScriptOrFnNode) {\n         ScriptOrFnNode sof = (ScriptOrFnNode) this;\n         if (this instanceof FunctionNode) {\n@@ -1424,7 +1417,6 @@\n       }\n       res = n.checkTreeEqualsImpl(n2);\n       if (res != null) {\n-        return res;\n       }\n     }\n     return res;\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 06:51:37.283732609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1560/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 07:10:05.453657316 -0500\n@@ -359,7 +359,7 @@\n           case LP:              return \"LP\";\n           case RP:              return \"RP\";\n           case COMMA:           return \"COMMA\";\n-          case ASSIGN:          return \"ASSIGN\";\n+          case ASSIGN:          ;\n           case ASSIGN_BITOR:    return \"ASSIGN_BITOR\";\n           case ASSIGN_BITXOR:   return \"ASSIGN_BITXOR\";\n           case ASSIGN_BITAND:   return \"ASSIGN_BITAND\";\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 88, 
          "faulty": "canRemove=true;", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 943, 
          "faulty": "if (first == null || first.getType() != Token.NAME) {\n  sb.append(\"<invalid>\");\n}\n else {\n  sb.append(first.getString());\n}", 
          "type": "Replace", 
          "seed": "int lineno=getLineno();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 221, 
          "faulty": "return \"synthetic\";", 
          "type": "Delete", 
          "seed": "consumeToken();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1427, 
          "faulty": "return res;", 
          "type": "Delete", 
          "seed": "boolean first=true;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 88, 
          "faulty": "canRemove=true;", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 943, 
          "faulty": "if (first == null || first.getType() != Token.NAME) {\n  sb.append(\"<invalid>\");\n}\n else {\n  sb.append(first.getString());\n}", 
          "type": "Replace", 
          "seed": "int lineno=getLineno();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 221, 
          "faulty": "return \"synthetic\";", 
          "type": "Delete", 
          "seed": "consumeToken();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1427, 
          "faulty": "return res;", 
          "type": "Delete", 
          "seed": "boolean first=true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 362, 
          "faulty": "return \"ASSIGN\";", 
          "type": "Delete", 
          "seed": "return Token.LP;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 221, 
          "faulty": "return \"synthetic\";", 
          "type": "Delete", 
          "seed": "return Token.XMLATTR;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 362, 
          "faulty": "return \"ASSIGN\";", 
          "type": "Delete", 
          "seed": "return Token.LP;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:51:37.259744610 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1015/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 07:05:26.233159134 -0500\n@@ -96,11 +96,6 @@\n               canRemove = true;\n             }\n           }\n-\n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 06:51:37.279734609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1015/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 07:05:26.233159134 -0500\n@@ -937,14 +937,7 @@\n         sb.append(getString());\n       } else if (type == Token.FUNCTION) {\n         sb.append(' ');\n-        // In the case of JsDoc trees, the first child is often not a string\n-        // which causes exceptions to be thrown when calling toString or\n-        // toStringTree.\n-        if (first == null || first.getType() != Token.NAME) {\n-          sb.append(\"<invalid>\");\n-        } else {\n-          sb.append(first.getString());\n-        }\n+        int lineno = getLineno();\n       } else if (this instanceof ScriptOrFnNode) {\n         ScriptOrFnNode sof = (ScriptOrFnNode) this;\n         if (this instanceof FunctionNode) {\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 06:51:37.283732609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1015/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 07:05:26.237159117 -0500\n@@ -359,7 +359,7 @@\n           case LP:              return \"LP\";\n           case RP:              return \"RP\";\n           case COMMA:           return \"COMMA\";\n-          case ASSIGN:          return \"ASSIGN\";\n+          case ASSIGN:          Context cx = Context.getCurrentContext();\n           case ASSIGN_BITOR:    return \"ASSIGN_BITOR\";\n           case ASSIGN_BITXOR:   return \"ASSIGN_BITXOR\";\n           case ASSIGN_BITAND:   return \"ASSIGN_BITAND\";\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 943, 
          "faulty": "if (first == null || first.getType() != Token.NAME) {\n  sb.append(\"<invalid>\");\n}\n else {\n  sb.append(first.getString());\n}", 
          "type": "Replace", 
          "seed": "int lineno=getLineno();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 362, 
          "faulty": "return \"ASSIGN\";", 
          "type": "Replace", 
          "seed": "Context cx=Context.getCurrentContext();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:51:37.259744610 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1862/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 07:12:43.256514338 -0500\n@@ -85,7 +85,6 @@\n           boolean canRemove = false;\n \n           if (specializationState == null) {\n-            canRemove = true;\n           } else {\n             Node specializableFunction =\n               getSpecializableFunctionFromSymbol(declaration);\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 06:51:37.279734609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1862/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 07:12:43.260514396 -0500\n@@ -1424,7 +1424,6 @@\n       }\n       res = n.checkTreeEqualsImpl(n2);\n       if (res != null) {\n-        return res;\n       }\n     }\n     return res;\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 06:51:37.283732609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1862/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 07:12:43.260514396 -0500\n@@ -315,7 +315,10 @@\n           case NUMBER:          return \"NUMBER\";\n           case STRING:          return \"STRING\";\n           case NULL:            return \"NULL\";\n-          case THIS:            return \"THIS\";\n+          case THIS:            {\n+\t\t\t\tStringBuilder sb = new StringBuilder();\n+\t\t\t\treturn \"THIS\";\n+\t\t\t}\n           case FALSE:           return \"FALSE\";\n           case TRUE:            return \"TRUE\";\n           case SHEQ:            return \"SHEQ\";\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1427, 
          "faulty": "return res;", 
          "type": "Replace", 
          "seed": "Kit.codeBug();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 88, 
          "faulty": "canRemove=true;", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1427, 
          "faulty": "return res;", 
          "type": "Delete", 
          "seed": "return Token.STRING;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 318, 
          "faulty": "return \"THIS\";", 
          "type": "InsertBefore", 
          "seed": "StringBuilder sb=new StringBuilder();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:51:37.259744610 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1134/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 07:06:28.288937853 -0500\n@@ -85,7 +85,6 @@\n           boolean canRemove = false;\n \n           if (specializationState == null) {\n-            canRemove = true;\n           } else {\n             Node specializableFunction =\n               getSpecializableFunctionFromSymbol(declaration);\n@@ -96,11 +95,6 @@\n               canRemove = true;\n             }\n           }\n-\n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 06:51:37.279734609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1134/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 07:06:28.292937842 -0500\n@@ -936,7 +936,6 @@\n         sb.append(' ');\n         sb.append(getString());\n       } else if (type == Token.FUNCTION) {\n-        sb.append(' ');\n         // In the case of JsDoc trees, the first child is often not a string\n         // which causes exceptions to be thrown when calling toString or\n         // toStringTree.\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 06:51:37.283732609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1134/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 07:06:28.292937842 -0500\n@@ -315,7 +315,7 @@\n           case NUMBER:          return \"NUMBER\";\n           case STRING:          return \"STRING\";\n           case NULL:            return \"NULL\";\n-          case THIS:            return \"THIS\";\n+          case THIS:            ;\n           case FALSE:           return \"FALSE\";\n           case TRUE:            return \"TRUE\";\n           case SHEQ:            return \"SHEQ\";\n@@ -359,7 +359,7 @@\n           case LP:              return \"LP\";\n           case RP:              return \"RP\";\n           case COMMA:           return \"COMMA\";\n-          case ASSIGN:          return \"ASSIGN\";\n+          case ASSIGN:          ;\n           case ASSIGN_BITOR:    return \"ASSIGN_BITOR\";\n           case ASSIGN_BITXOR:   return \"ASSIGN_BITXOR\";\n           case ASSIGN_BITAND:   return \"ASSIGN_BITAND\";\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 318, 
          "faulty": "return \"THIS\";", 
          "type": "Delete", 
          "seed": "return Token.STRING;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 362, 
          "faulty": "return \"ASSIGN\";", 
          "type": "Delete", 
          "seed": "return Token.LP;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 102, 
          "faulty": "changed=true;", 
          "type": "InsertBefore", 
          "seed": "StringBuilder builder=new StringBuilder();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 362, 
          "faulty": "return \"ASSIGN\";", 
          "type": "Delete", 
          "seed": "return Token.LP;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 88, 
          "faulty": "canRemove=true;", 
          "type": "Delete", 
          "seed": "Node parameterName=Node.newString(Token.NAME,\"jscomp_throw_param\");"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 939, 
          "faulty": "sb.append(' ');", 
          "type": "Delete", 
          "seed": "return Token.GT;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:51:37.259744610 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1104/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 07:06:13.920981846 -0500\n@@ -85,7 +85,6 @@\n           boolean canRemove = false;\n \n           if (specializationState == null) {\n-            canRemove = true;\n           } else {\n             Node specializableFunction =\n               getSpecializableFunctionFromSymbol(declaration);\n@@ -96,11 +95,6 @@\n               canRemove = true;\n             }\n           }\n-\n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 06:51:37.279734609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1104/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 07:06:13.924981832 -0500\n@@ -218,7 +218,7 @@\n         case QUOTED_PROP:        return \"quoted\";\n         case OPT_ARG_NAME:       return \"opt_arg\";\n \n-        case SYNTHETIC_BLOCK_PROP: return \"synthetic\";\n+        case SYNTHETIC_BLOCK_PROP: ;\n         case EMPTY_BLOCK:        return \"empty_block\";\n         case ORIGINALNAME_PROP:  return \"originalname\";\n         case SIDE_EFFECT_FLAGS:  return \"side_effect_flags\";\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 06:51:37.283732609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1104/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 07:06:13.924981832 -0500\n@@ -359,7 +359,7 @@\n           case LP:              return \"LP\";\n           case RP:              return \"RP\";\n           case COMMA:           return \"COMMA\";\n-          case ASSIGN:          return \"ASSIGN\";\n+          case ASSIGN:          Context cx = Context.getCurrentContext();\n           case ASSIGN_BITOR:    return \"ASSIGN_BITOR\";\n           case ASSIGN_BITXOR:   return \"ASSIGN_BITXOR\";\n           case ASSIGN_BITAND:   return \"ASSIGN_BITAND\";\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 88, 
          "faulty": "canRemove=true;", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 221, 
          "faulty": "return \"synthetic\";", 
          "type": "Delete", 
          "seed": "consumeToken();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 362, 
          "faulty": "return \"ASSIGN\";", 
          "type": "Replace", 
          "seed": "Context cx=Context.getCurrentContext();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:51:37.259744610 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_150/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:57:41.988545094 -0500\n@@ -96,11 +96,6 @@\n               canRemove = true;\n             }\n           }\n-\n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 06:51:37.283732609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_150/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 06:57:41.992545151 -0500\n@@ -307,7 +307,7 @@\n           case TYPEOF:          return \"TYPEOF\";\n           case GETPROP:         return \"GETPROP\";\n           case SETPROP:         return \"SETPROP\";\n-          case GETELEM:         return \"GETELEM\";\n+          case GETELEM:         ;\n           case SETELEM:         return \"SETELEM\";\n           case CALL:            return \"CALL\";\n           case NAME:            return \"NAME\";\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 102, 
          "faulty": "changed=true;", 
          "type": "InsertBefore", 
          "seed": "StringBuilder builder=new StringBuilder();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 310, 
          "faulty": "return \"GETELEM\";", 
          "type": "Delete", 
          "seed": "String X=null;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:51:37.259744610 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_358/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:59:37.012430781 -0500\n@@ -96,11 +96,6 @@\n               canRemove = true;\n             }\n           }\n-\n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 06:51:37.283732609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_358/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 06:59:37.012430781 -0500\n@@ -356,10 +356,10 @@\n           case RB:              return \"RB\";\n           case LC:              return \"LC\";\n           case RC:              return \"RC\";\n-          case LP:              return \"LP\";\n+          case LP:              int c = 0;\n           case RP:              return \"RP\";\n           case COMMA:           return \"COMMA\";\n-          case ASSIGN:          return \"ASSIGN\";\n+          case ASSIGN:          ;\n           case ASSIGN_BITOR:    return \"ASSIGN_BITOR\";\n           case ASSIGN_BITXOR:   return \"ASSIGN_BITXOR\";\n           case ASSIGN_BITAND:   return \"ASSIGN_BITAND\";\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 362, 
          "faulty": "return \"ASSIGN\";", 
          "type": "Delete", 
          "seed": "Node pn=memberExpr(true);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 102, 
          "faulty": "changed=true;", 
          "type": "InsertBefore", 
          "seed": "StringBuilder builder=new StringBuilder();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 359, 
          "faulty": "return \"LP\";", 
          "type": "Replace", 
          "seed": "int c=0;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:51:37.259744610 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1392/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 07:08:39.715449895 -0500\n@@ -96,11 +96,6 @@\n               canRemove = true;\n             }\n           }\n-\n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 06:51:37.279734609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1392/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 07:08:39.715449895 -0500\n@@ -218,7 +218,7 @@\n         case QUOTED_PROP:        return \"quoted\";\n         case OPT_ARG_NAME:       return \"opt_arg\";\n \n-        case SYNTHETIC_BLOCK_PROP: return \"synthetic\";\n+        case SYNTHETIC_BLOCK_PROP: ;\n         case EMPTY_BLOCK:        return \"empty_block\";\n         case ORIGINALNAME_PROP:  return \"originalname\";\n         case SIDE_EFFECT_FLAGS:  return \"side_effect_flags\";\n@@ -937,14 +937,7 @@\n         sb.append(getString());\n       } else if (type == Token.FUNCTION) {\n         sb.append(' ');\n-        // In the case of JsDoc trees, the first child is often not a string\n-        // which causes exceptions to be thrown when calling toString or\n-        // toStringTree.\n-        if (first == null || first.getType() != Token.NAME) {\n-          sb.append(\"<invalid>\");\n-        } else {\n-          sb.append(first.getString());\n-        }\n+        int lineno = getLineno();\n       } else if (this instanceof ScriptOrFnNode) {\n         ScriptOrFnNode sof = (ScriptOrFnNode) this;\n         if (this instanceof FunctionNode) {\n@@ -1424,7 +1417,6 @@\n       }\n       res = n.checkTreeEqualsImpl(n2);\n       if (res != null) {\n-        return res;\n       }\n     }\n     return res;\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 06:51:37.283732609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1392/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 07:08:39.719450012 -0500\n@@ -315,7 +315,7 @@\n           case NUMBER:          return \"NUMBER\";\n           case STRING:          return \"STRING\";\n           case NULL:            return \"NULL\";\n-          case THIS:            return \"THIS\";\n+          case THIS:            ;\n           case FALSE:           return \"FALSE\";\n           case TRUE:            return \"TRUE\";\n           case SHEQ:            return \"SHEQ\";\n@@ -359,7 +359,7 @@\n           case LP:              return \"LP\";\n           case RP:              return \"RP\";\n           case COMMA:           return \"COMMA\";\n-          case ASSIGN:          return \"ASSIGN\";\n+          case ASSIGN:          ;\n           case ASSIGN_BITOR:    return \"ASSIGN_BITOR\";\n           case ASSIGN_BITXOR:   return \"ASSIGN_BITXOR\";\n           case ASSIGN_BITAND:   return \"ASSIGN_BITAND\";\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 318, 
          "faulty": "return \"THIS\";", 
          "type": "Delete", 
          "seed": "return Token.STRING;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 362, 
          "faulty": "return \"ASSIGN\";", 
          "type": "Delete", 
          "seed": "return Token.LP;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 362, 
          "faulty": "return \"ASSIGN\";", 
          "type": "Delete", 
          "seed": "return Token.LP;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 943, 
          "faulty": "if (first == null || first.getType() != Token.NAME) {\n  sb.append(\"<invalid>\");\n}\n else {\n  sb.append(first.getString());\n}", 
          "type": "Replace", 
          "seed": "int lineno=getLineno();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 221, 
          "faulty": "return \"synthetic\";", 
          "type": "Delete", 
          "seed": "consumeToken();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 318, 
          "faulty": "return \"THIS\";", 
          "type": "Delete", 
          "seed": "return Token.STRING;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 362, 
          "faulty": "return \"ASSIGN\";", 
          "type": "Delete", 
          "seed": "return Token.LP;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 221, 
          "faulty": "return \"synthetic\";", 
          "type": "Delete", 
          "seed": "return Token.XMLATTR;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 221, 
          "faulty": "return \"synthetic\";", 
          "type": "Delete", 
          "seed": "consumeToken();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1427, 
          "faulty": "return res;", 
          "type": "Delete", 
          "seed": "boolean first=true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1427, 
          "faulty": "return res;", 
          "type": "Delete", 
          "seed": "return Token.STRING;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:51:37.259744610 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1362/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 07:08:24.578994074 -0500\n@@ -85,7 +85,6 @@\n           boolean canRemove = false;\n \n           if (specializationState == null) {\n-            canRemove = true;\n           } else {\n             Node specializableFunction =\n               getSpecializableFunctionFromSymbol(declaration);\n@@ -96,11 +95,6 @@\n               canRemove = true;\n             }\n           }\n-\n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 06:51:37.279734609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1362/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 07:08:24.578994074 -0500\n@@ -218,7 +218,7 @@\n         case QUOTED_PROP:        return \"quoted\";\n         case OPT_ARG_NAME:       return \"opt_arg\";\n \n-        case SYNTHETIC_BLOCK_PROP: return \"synthetic\";\n+        case SYNTHETIC_BLOCK_PROP: ;\n         case EMPTY_BLOCK:        return \"empty_block\";\n         case ORIGINALNAME_PROP:  return \"originalname\";\n         case SIDE_EFFECT_FLAGS:  return \"side_effect_flags\";\n@@ -937,14 +937,7 @@\n         sb.append(getString());\n       } else if (type == Token.FUNCTION) {\n         sb.append(' ');\n-        // In the case of JsDoc trees, the first child is often not a string\n-        // which causes exceptions to be thrown when calling toString or\n-        // toStringTree.\n-        if (first == null || first.getType() != Token.NAME) {\n-          sb.append(\"<invalid>\");\n-        } else {\n-          sb.append(first.getString());\n-        }\n+        int lineno = getLineno();\n       } else if (this instanceof ScriptOrFnNode) {\n         ScriptOrFnNode sof = (ScriptOrFnNode) this;\n         if (this instanceof FunctionNode) {\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 06:51:37.283732609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1362/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 07:08:24.582994197 -0500\n@@ -315,7 +315,7 @@\n           case NUMBER:          return \"NUMBER\";\n           case STRING:          return \"STRING\";\n           case NULL:            return \"NULL\";\n-          case THIS:            return \"THIS\";\n+          case THIS:            ;\n           case FALSE:           return \"FALSE\";\n           case TRUE:            return \"TRUE\";\n           case SHEQ:            return \"SHEQ\";\n@@ -359,7 +359,7 @@\n           case LP:              return \"LP\";\n           case RP:              return \"RP\";\n           case COMMA:           return \"COMMA\";\n-          case ASSIGN:          return \"ASSIGN\";\n+          case ASSIGN:          ;\n           case ASSIGN_BITOR:    return \"ASSIGN_BITOR\";\n           case ASSIGN_BITXOR:   return \"ASSIGN_BITXOR\";\n           case ASSIGN_BITAND:   return \"ASSIGN_BITAND\";\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 88, 
          "faulty": "canRemove=true;", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 318, 
          "faulty": "return \"THIS\";", 
          "type": "Delete", 
          "seed": "return Token.XMLATTR;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 221, 
          "faulty": "return \"synthetic\";", 
          "type": "Delete", 
          "seed": "return Token.XMLATTR;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 221, 
          "faulty": "return \"synthetic\";", 
          "type": "Delete", 
          "seed": "consumeToken();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 943, 
          "faulty": "if (first == null || first.getType() != Token.NAME) {\n  sb.append(\"<invalid>\");\n}\n else {\n  sb.append(first.getString());\n}", 
          "type": "Replace", 
          "seed": "int lineno=getLineno();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 362, 
          "faulty": "return \"ASSIGN\";", 
          "type": "Delete", 
          "seed": "case 2:"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:51:37.259744610 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_163/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:57:47.636621971 -0500\n@@ -96,11 +96,6 @@\n               canRemove = true;\n             }\n           }\n-\n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 06:51:37.283732609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_163/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 06:57:47.636621971 -0500\n@@ -315,7 +315,7 @@\n           case NUMBER:          return \"NUMBER\";\n           case STRING:          return \"STRING\";\n           case NULL:            return \"NULL\";\n-          case THIS:            return \"THIS\";\n+          case THIS:            boolean nullKey = false;\n           case FALSE:           return \"FALSE\";\n           case TRUE:            return \"TRUE\";\n           case SHEQ:            return \"SHEQ\";\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 318, 
          "faulty": "return \"THIS\";", 
          "type": "Replace", 
          "seed": "boolean nullKey=false;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:51:37.259744610 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_848/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 07:03:58.125641225 -0500\n@@ -96,11 +96,6 @@\n               canRemove = true;\n             }\n           }\n-\n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 06:51:37.279734609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_848/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 07:03:58.129641199 -0500\n@@ -1424,7 +1424,6 @@\n       }\n       res = n.checkTreeEqualsImpl(n2);\n       if (res != null) {\n-        return res;\n       }\n     }\n     return res;\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1427, 
          "faulty": "return res;", 
          "type": "Delete", 
          "seed": "return Token.STRING;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:51:37.259744610 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1527/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 07:09:50.093303676 -0500\n@@ -85,7 +85,6 @@\n           boolean canRemove = false;\n \n           if (specializationState == null) {\n-            canRemove = true;\n           } else {\n             Node specializableFunction =\n               getSpecializableFunctionFromSymbol(declaration);\n@@ -96,11 +95,6 @@\n               canRemove = true;\n             }\n           }\n-\n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 06:51:37.279734609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1527/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 07:09:50.097303770 -0500\n@@ -218,7 +218,7 @@\n         case QUOTED_PROP:        return \"quoted\";\n         case OPT_ARG_NAME:       return \"opt_arg\";\n \n-        case SYNTHETIC_BLOCK_PROP: return \"synthetic\";\n+        case SYNTHETIC_BLOCK_PROP: ;\n         case EMPTY_BLOCK:        return \"empty_block\";\n         case ORIGINALNAME_PROP:  return \"originalname\";\n         case SIDE_EFFECT_FLAGS:  return \"side_effect_flags\";\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 06:51:37.283732609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1527/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 07:09:50.097303770 -0500\n@@ -307,7 +307,7 @@\n           case TYPEOF:          return \"TYPEOF\";\n           case GETPROP:         return \"GETPROP\";\n           case SETPROP:         return \"SETPROP\";\n-          case GETELEM:         return \"GETELEM\";\n+          case GETELEM:         return \"return\";\n           case SETELEM:         return \"SETELEM\";\n           case CALL:            return \"CALL\";\n           case NAME:            return \"NAME\";\n@@ -315,7 +315,7 @@\n           case NUMBER:          return \"NUMBER\";\n           case STRING:          return \"STRING\";\n           case NULL:            return \"NULL\";\n-          case THIS:            return \"THIS\";\n+          case THIS:            ;\n           case FALSE:           return \"FALSE\";\n           case TRUE:            return \"TRUE\";\n           case SHEQ:            return \"SHEQ\";\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 88, 
          "faulty": "canRemove=true;", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 318, 
          "faulty": "return \"THIS\";", 
          "type": "Delete", 
          "seed": "return Token.XMLATTR;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 221, 
          "faulty": "return \"synthetic\";", 
          "type": "Delete", 
          "seed": "return Token.XMLATTR;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 221, 
          "faulty": "return \"synthetic\";", 
          "type": "Delete", 
          "seed": "consumeToken();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 88, 
          "faulty": "canRemove=true;", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 310, 
          "faulty": "return \"GETELEM\";", 
          "type": "Replace", 
          "seed": "return \"return\";"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:51:37.259744610 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1021/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 07:05:28.781148347 -0500\n@@ -96,11 +96,6 @@\n               canRemove = true;\n             }\n           }\n-\n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n@@ -108,7 +103,8 @@\n     }\n \n     if (changed) {\n-      compiler.reportCodeChange();\n+      int index = -1;\n+\tcompiler.reportCodeChange();\n     }\n   }\n \n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 06:51:37.279734609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1021/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 07:05:28.781148347 -0500\n@@ -218,7 +218,7 @@\n         case QUOTED_PROP:        return \"quoted\";\n         case OPT_ARG_NAME:       return \"opt_arg\";\n \n-        case SYNTHETIC_BLOCK_PROP: return \"synthetic\";\n+        case SYNTHETIC_BLOCK_PROP: ;\n         case EMPTY_BLOCK:        return \"empty_block\";\n         case ORIGINALNAME_PROP:  return \"originalname\";\n         case SIDE_EFFECT_FLAGS:  return \"side_effect_flags\";\n@@ -1424,7 +1424,6 @@\n       }\n       res = n.checkTreeEqualsImpl(n2);\n       if (res != null) {\n-        return res;\n       }\n     }\n     return res;\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 06:51:37.283732609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1021/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 07:05:28.781148347 -0500\n@@ -315,7 +315,7 @@\n           case NUMBER:          return \"NUMBER\";\n           case STRING:          return \"STRING\";\n           case NULL:            return \"NULL\";\n-          case THIS:            return \"THIS\";\n+          case THIS:            ;\n           case FALSE:           return \"FALSE\";\n           case TRUE:            return \"TRUE\";\n           case SHEQ:            return \"SHEQ\";\n@@ -359,7 +359,7 @@\n           case LP:              return \"LP\";\n           case RP:              return \"RP\";\n           case COMMA:           return \"COMMA\";\n-          case ASSIGN:          return \"ASSIGN\";\n+          case ASSIGN:          ;\n           case ASSIGN_BITOR:    return \"ASSIGN_BITOR\";\n           case ASSIGN_BITXOR:   return \"ASSIGN_BITXOR\";\n           case ASSIGN_BITAND:   return \"ASSIGN_BITAND\";\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 221, 
          "faulty": "return \"synthetic\";", 
          "type": "Delete", 
          "seed": "consumeToken();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1427, 
          "faulty": "return res;", 
          "type": "Delete", 
          "seed": "boolean first=true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 318, 
          "faulty": "return \"THIS\";", 
          "type": "Delete", 
          "seed": "return Token.XMLATTR;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 221, 
          "faulty": "return \"synthetic\";", 
          "type": "Delete", 
          "seed": "return Token.XMLATTR;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 318, 
          "faulty": "return \"THIS\";", 
          "type": "Delete", 
          "seed": "return Token.STRING;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 362, 
          "faulty": "return \"ASSIGN\";", 
          "type": "Delete", 
          "seed": "return Token.LP;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1427, 
          "faulty": "return res;", 
          "type": "Delete", 
          "seed": "return Token.STRING;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 111, 
          "faulty": "compiler.reportCodeChange();", 
          "type": "InsertBefore", 
          "seed": "int index=-1;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:51:37.259744610 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_524/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 07:01:11.611377530 -0500\n@@ -85,7 +85,6 @@\n           boolean canRemove = false;\n \n           if (specializationState == null) {\n-            canRemove = true;\n           } else {\n             Node specializableFunction =\n               getSpecializableFunctionFromSymbol(declaration);\n@@ -96,11 +95,6 @@\n               canRemove = true;\n             }\n           }\n-\n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 06:51:37.283732609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_524/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 07:01:11.611377530 -0500\n@@ -359,7 +359,7 @@\n           case LP:              return \"LP\";\n           case RP:              return \"RP\";\n           case COMMA:           return \"COMMA\";\n-          case ASSIGN:          return \"ASSIGN\";\n+          case ASSIGN:          ;\n           case ASSIGN_BITOR:    return \"ASSIGN_BITOR\";\n           case ASSIGN_BITXOR:   return \"ASSIGN_BITXOR\";\n           case ASSIGN_BITAND:   return \"ASSIGN_BITAND\";\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 362, 
          "faulty": "return \"ASSIGN\";", 
          "type": "Delete", 
          "seed": "Node pn=memberExpr(true);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 102, 
          "faulty": "changed=true;", 
          "type": "InsertBefore", 
          "seed": "StringBuilder builder=new StringBuilder();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 362, 
          "faulty": "return \"ASSIGN\";", 
          "type": "Delete", 
          "seed": "Node pn=memberExpr(true);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 88, 
          "faulty": "canRemove=true;", 
          "type": "Delete", 
          "seed": "return null;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:51:37.259744610 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1323/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 07:08:04.686359829 -0500\n@@ -85,7 +85,6 @@\n           boolean canRemove = false;\n \n           if (specializationState == null) {\n-            canRemove = true;\n           } else {\n             Node specializableFunction =\n               getSpecializableFunctionFromSymbol(declaration);\n@@ -96,14 +95,7 @@\n               canRemove = true;\n             }\n           }\n-\n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n         }\n-\n-        logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n       }\n     }\n \n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 06:51:37.279734609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1323/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 07:08:04.690359960 -0500\n@@ -937,14 +937,7 @@\n         sb.append(getString());\n       } else if (type == Token.FUNCTION) {\n         sb.append(' ');\n-        // In the case of JsDoc trees, the first child is often not a string\n-        // which causes exceptions to be thrown when calling toString or\n-        // toStringTree.\n-        if (first == null || first.getType() != Token.NAME) {\n-          sb.append(\"<invalid>\");\n-        } else {\n-          sb.append(first.getString());\n-        }\n+        int lineno = getLineno();\n       } else if (this instanceof ScriptOrFnNode) {\n         ScriptOrFnNode sof = (ScriptOrFnNode) this;\n         if (this instanceof FunctionNode) {\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 06:51:37.283732609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1323/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 07:08:04.690359960 -0500\n@@ -315,7 +315,7 @@\n           case NUMBER:          return \"NUMBER\";\n           case STRING:          return \"STRING\";\n           case NULL:            return \"NULL\";\n-          case THIS:            return \"THIS\";\n+          case THIS:            ;\n           case FALSE:           return \"FALSE\";\n           case TRUE:            return \"TRUE\";\n           case SHEQ:            return \"SHEQ\";\n@@ -359,7 +359,7 @@\n           case LP:              return \"LP\";\n           case RP:              return \"RP\";\n           case COMMA:           return \"COMMA\";\n-          case ASSIGN:          return \"ASSIGN\";\n+          case ASSIGN:          Context cx = Context.getCurrentContext();\n           case ASSIGN_BITOR:    return \"ASSIGN_BITOR\";\n           case ASSIGN_BITXOR:   return \"ASSIGN_BITXOR\";\n           case ASSIGN_BITAND:   return \"ASSIGN_BITAND\";\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 318, 
          "faulty": "return \"THIS\";", 
          "type": "Delete", 
          "seed": "return Token.STRING;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 88, 
          "faulty": "canRemove=true;", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 943, 
          "faulty": "if (first == null || first.getType() != Token.NAME) {\n  sb.append(\"<invalid>\");\n}\n else {\n  sb.append(first.getString());\n}", 
          "type": "Replace", 
          "seed": "int lineno=getLineno();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 943, 
          "faulty": "if (first == null || first.getType() != Token.NAME) {\n  sb.append(\"<invalid>\");\n}\n else {\n  sb.append(first.getString());\n}", 
          "type": "Replace", 
          "seed": "int lineno=getLineno();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 362, 
          "faulty": "return \"ASSIGN\";", 
          "type": "Replace", 
          "seed": "Context cx=Context.getCurrentContext();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 106, 
          "faulty": "logger.fine(\"Removed unused prototype property: \" + nameInfo.name);", 
          "type": "Delete", 
          "seed": "int start=0;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:51:37.259744610 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_619/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 07:02:02.310701618 -0500\n@@ -85,7 +85,6 @@\n           boolean canRemove = false;\n \n           if (specializationState == null) {\n-            canRemove = true;\n           } else {\n             Node specializableFunction =\n               getSpecializableFunctionFromSymbol(declaration);\n@@ -96,11 +95,6 @@\n               canRemove = true;\n             }\n           }\n-\n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 06:51:37.283732609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_619/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 07:02:02.310701618 -0500\n@@ -315,7 +315,7 @@\n           case NUMBER:          return \"NUMBER\";\n           case STRING:          return \"STRING\";\n           case NULL:            return \"NULL\";\n-          case THIS:            return \"THIS\";\n+          case THIS:            ;\n           case FALSE:           return \"FALSE\";\n           case TRUE:            return \"TRUE\";\n           case SHEQ:            return \"SHEQ\";\n@@ -359,7 +359,7 @@\n           case LP:              return \"LP\";\n           case RP:              return \"RP\";\n           case COMMA:           return \"COMMA\";\n-          case ASSIGN:          return \"ASSIGN\";\n+          case ASSIGN:          ;\n           case ASSIGN_BITOR:    return \"ASSIGN_BITOR\";\n           case ASSIGN_BITXOR:   return \"ASSIGN_BITXOR\";\n           case ASSIGN_BITAND:   return \"ASSIGN_BITAND\";\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 102, 
          "faulty": "changed=true;", 
          "type": "InsertBefore", 
          "seed": "StringBuilder builder=new StringBuilder();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 318, 
          "faulty": "return \"THIS\";", 
          "type": "Delete", 
          "seed": "return Token.STRING;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 362, 
          "faulty": "return \"ASSIGN\";", 
          "type": "Delete", 
          "seed": "return Token.LP;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 88, 
          "faulty": "canRemove=true;", 
          "type": "Delete", 
          "seed": "return false;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:51:37.259744610 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_568/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 07:01:33.475067112 -0500\n@@ -85,7 +85,6 @@\n           boolean canRemove = false;\n \n           if (specializationState == null) {\n-            canRemove = true;\n           } else {\n             Node specializableFunction =\n               getSpecializableFunctionFromSymbol(declaration);\n@@ -96,11 +95,6 @@\n               canRemove = true;\n             }\n           }\n-\n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java\t2018-12-02 06:51:39.210768564 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_568/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java\t2018-12-02 07:01:33.475067112 -0500\n@@ -532,7 +532,8 @@\n \n     @Override\n     public void remove() {\n-      NodeUtil.removeChild(exprNode.getParent(), exprNode);\n+      int index = -1;\n+\tNodeUtil.removeChild(exprNode.getParent(), exprNode);\n     }\n \n     @Override\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 06:51:37.279734609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_568/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 07:01:33.479067059 -0500\n@@ -218,7 +218,7 @@\n         case QUOTED_PROP:        return \"quoted\";\n         case OPT_ARG_NAME:       return \"opt_arg\";\n \n-        case SYNTHETIC_BLOCK_PROP: return \"synthetic\";\n+        case SYNTHETIC_BLOCK_PROP: ;\n         case EMPTY_BLOCK:        return \"empty_block\";\n         case ORIGINALNAME_PROP:  return \"originalname\";\n         case SIDE_EFFECT_FLAGS:  return \"side_effect_flags\";\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 06:51:37.283732609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_568/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 07:01:33.479067059 -0500\n@@ -359,7 +359,7 @@\n           case LP:              return \"LP\";\n           case RP:              return \"RP\";\n           case COMMA:           return \"COMMA\";\n-          case ASSIGN:          return \"ASSIGN\";\n+          case ASSIGN:          ;\n           case ASSIGN_BITOR:    return \"ASSIGN_BITOR\";\n           case ASSIGN_BITXOR:   return \"ASSIGN_BITXOR\";\n           case ASSIGN_BITAND:   return \"ASSIGN_BITAND\";\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 221, 
          "faulty": "return \"synthetic\";", 
          "type": "Delete", 
          "seed": "consumeToken();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 362, 
          "faulty": "return \"ASSIGN\";", 
          "type": "Delete", 
          "seed": "Node pn=memberExpr(true);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 88, 
          "faulty": "canRemove=true;", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 101, 
          "faulty": "declaration.remove();", 
          "type": "InsertBefore", 
          "seed": "return;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java", 
          "line": 535, 
          "faulty": "NodeUtil.removeChild(exprNode.getParent(),exprNode);", 
          "type": "InsertBefore", 
          "seed": "int index=-1;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:51:37.259744610 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1000/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 07:05:18.417193213 -0500\n@@ -96,11 +96,6 @@\n               canRemove = true;\n             }\n           }\n-\n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 06:51:37.279734609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1000/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 07:05:18.421193194 -0500\n@@ -218,7 +218,7 @@\n         case QUOTED_PROP:        return \"quoted\";\n         case OPT_ARG_NAME:       return \"opt_arg\";\n \n-        case SYNTHETIC_BLOCK_PROP: return \"synthetic\";\n+        case SYNTHETIC_BLOCK_PROP: ;\n         case EMPTY_BLOCK:        return \"empty_block\";\n         case ORIGINALNAME_PROP:  return \"originalname\";\n         case SIDE_EFFECT_FLAGS:  return \"side_effect_flags\";\n@@ -937,7 +937,8 @@\n         sb.append(getString());\n       } else if (type == Token.FUNCTION) {\n         sb.append(' ');\n-        // In the case of JsDoc trees, the first child is often not a string\n+        NodeMismatch res = null;\n+\t\t// In the case of JsDoc trees, the first child is often not a string\n         // which causes exceptions to be thrown when calling toString or\n         // toStringTree.\n         if (first == null || first.getType() != Token.NAME) {\n@@ -1424,7 +1425,6 @@\n       }\n       res = n.checkTreeEqualsImpl(n2);\n       if (res != null) {\n-        return res;\n       }\n     }\n     return res;\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 221, 
          "faulty": "return \"synthetic\";", 
          "type": "Delete", 
          "seed": "consumeToken();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1427, 
          "faulty": "return res;", 
          "type": "Delete", 
          "seed": "boolean first=true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 221, 
          "faulty": "return \"synthetic\";", 
          "type": "Delete", 
          "seed": "boolean nullKey=false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 943, 
          "faulty": "if (first == null || first.getType() != Token.NAME) {\n  sb.append(\"<invalid>\");\n}\n else {\n  sb.append(first.getString());\n}", 
          "type": "InsertBefore", 
          "seed": "NodeMismatch res=null;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:51:37.259744610 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1454/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 07:09:09.972297314 -0500\n@@ -85,7 +85,6 @@\n           boolean canRemove = false;\n \n           if (specializationState == null) {\n-            canRemove = true;\n           } else {\n             Node specializableFunction =\n               getSpecializableFunctionFromSymbol(declaration);\n@@ -96,11 +95,6 @@\n               canRemove = true;\n             }\n           }\n-\n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 06:51:37.279734609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1454/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 07:09:09.972297314 -0500\n@@ -218,7 +218,7 @@\n         case QUOTED_PROP:        return \"quoted\";\n         case OPT_ARG_NAME:       return \"opt_arg\";\n \n-        case SYNTHETIC_BLOCK_PROP: return \"synthetic\";\n+        case SYNTHETIC_BLOCK_PROP: ;\n         case EMPTY_BLOCK:        return \"empty_block\";\n         case ORIGINALNAME_PROP:  return \"originalname\";\n         case SIDE_EFFECT_FLAGS:  return \"side_effect_flags\";\n@@ -937,14 +937,7 @@\n         sb.append(getString());\n       } else if (type == Token.FUNCTION) {\n         sb.append(' ');\n-        // In the case of JsDoc trees, the first child is often not a string\n-        // which causes exceptions to be thrown when calling toString or\n-        // toStringTree.\n-        if (first == null || first.getType() != Token.NAME) {\n-          sb.append(\"<invalid>\");\n-        } else {\n-          sb.append(first.getString());\n-        }\n+        int lineno = getLineno();\n       } else if (this instanceof ScriptOrFnNode) {\n         ScriptOrFnNode sof = (ScriptOrFnNode) this;\n         if (this instanceof FunctionNode) {\n@@ -1024,7 +1017,8 @@\n               if (obj != null) {\n                 value = obj.toString();\n               } else {\n-                value = String.valueOf(x.intValue);\n+                sourcePosition = -1;\n+\t\t\t\tvalue = String.valueOf(x.intValue);\n               }\n               break;\n           }\n@@ -1424,7 +1418,6 @@\n       }\n       res = n.checkTreeEqualsImpl(n2);\n       if (res != null) {\n-        return res;\n       }\n     }\n     return res;\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 06:51:37.283732609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1454/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 07:09:09.976297421 -0500\n@@ -315,7 +315,7 @@\n           case NUMBER:          return \"NUMBER\";\n           case STRING:          return \"STRING\";\n           case NULL:            return \"NULL\";\n-          case THIS:            return \"THIS\";\n+          case THIS:            ;\n           case FALSE:           return \"FALSE\";\n           case TRUE:            return \"TRUE\";\n           case SHEQ:            return \"SHEQ\";\n@@ -359,7 +359,7 @@\n           case LP:              return \"LP\";\n           case RP:              return \"RP\";\n           case COMMA:           return \"COMMA\";\n-          case ASSIGN:          return \"ASSIGN\";\n+          case ASSIGN:          ;\n           case ASSIGN_BITOR:    return \"ASSIGN_BITOR\";\n           case ASSIGN_BITXOR:   return \"ASSIGN_BITXOR\";\n           case ASSIGN_BITAND:   return \"ASSIGN_BITAND\";\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 318, 
          "faulty": "return \"THIS\";", 
          "type": "Delete", 
          "seed": "return Token.STRING;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 88, 
          "faulty": "canRemove=true;", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 943, 
          "faulty": "if (first == null || first.getType() != Token.NAME) {\n  sb.append(\"<invalid>\");\n}\n else {\n  sb.append(first.getString());\n}", 
          "type": "Replace", 
          "seed": "int lineno=getLineno();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1427, 
          "faulty": "return res;", 
          "type": "Delete", 
          "seed": "boolean first=true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 318, 
          "faulty": "return \"THIS\";", 
          "type": "Delete", 
          "seed": "return Token.XMLATTR;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 221, 
          "faulty": "return \"synthetic\";", 
          "type": "Delete", 
          "seed": "return Token.XMLATTR;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 221, 
          "faulty": "return \"synthetic\";", 
          "type": "Delete", 
          "seed": "consumeToken();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1427, 
          "faulty": "return res;", 
          "type": "Delete", 
          "seed": "boolean first=true;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 102, 
          "faulty": "changed=true;", 
          "type": "InsertBefore", 
          "seed": "StringBuilder builder=new StringBuilder();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 88, 
          "faulty": "canRemove=true;", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 943, 
          "faulty": "if (first == null || first.getType() != Token.NAME) {\n  sb.append(\"<invalid>\");\n}\n else {\n  sb.append(first.getString());\n}", 
          "type": "Replace", 
          "seed": "int lineno=getLineno();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1427, 
          "faulty": "return res;", 
          "type": "Delete", 
          "seed": "boolean first=true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 318, 
          "faulty": "return \"THIS\";", 
          "type": "Delete", 
          "seed": "return Token.XMLATTR;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 221, 
          "faulty": "return \"synthetic\";", 
          "type": "Delete", 
          "seed": "return Token.XMLATTR;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 362, 
          "faulty": "return \"ASSIGN\";", 
          "type": "Delete", 
          "seed": "return Token.LP;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1027, 
          "faulty": "value=String.valueOf(x.intValue);", 
          "type": "InsertBefore", 
          "seed": "sourcePosition=-1;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:51:37.259744610 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1270/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 07:07:38.821470420 -0500\n@@ -85,7 +85,7 @@\n           boolean canRemove = false;\n \n           if (specializationState == null) {\n-            canRemove = true;\n+            return;\n           } else {\n             Node specializableFunction =\n               getSpecializableFunctionFromSymbol(declaration);\n@@ -96,11 +96,6 @@\n               canRemove = true;\n             }\n           }\n-\n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 06:51:37.279734609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1270/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 07:07:38.825470563 -0500\n@@ -218,7 +218,7 @@\n         case QUOTED_PROP:        return \"quoted\";\n         case OPT_ARG_NAME:       return \"opt_arg\";\n \n-        case SYNTHETIC_BLOCK_PROP: return \"synthetic\";\n+        case SYNTHETIC_BLOCK_PROP: ;\n         case EMPTY_BLOCK:        return \"empty_block\";\n         case ORIGINALNAME_PROP:  return \"originalname\";\n         case SIDE_EFFECT_FLAGS:  return \"side_effect_flags\";\n@@ -937,14 +937,7 @@\n         sb.append(getString());\n       } else if (type == Token.FUNCTION) {\n         sb.append(' ');\n-        // In the case of JsDoc trees, the first child is often not a string\n-        // which causes exceptions to be thrown when calling toString or\n-        // toStringTree.\n-        if (first == null || first.getType() != Token.NAME) {\n-          sb.append(\"<invalid>\");\n-        } else {\n-          sb.append(first.getString());\n-        }\n+        int lineno = getLineno();\n       } else if (this instanceof ScriptOrFnNode) {\n         ScriptOrFnNode sof = (ScriptOrFnNode) this;\n         if (this instanceof FunctionNode) {\n@@ -1424,7 +1417,6 @@\n       }\n       res = n.checkTreeEqualsImpl(n2);\n       if (res != null) {\n-        return res;\n       }\n     }\n     return res;\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 06:51:37.283732609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1270/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 07:07:38.825470563 -0500\n@@ -315,7 +315,7 @@\n           case NUMBER:          return \"NUMBER\";\n           case STRING:          return \"STRING\";\n           case NULL:            return \"NULL\";\n-          case THIS:            return \"THIS\";\n+          case THIS:            ;\n           case FALSE:           return \"FALSE\";\n           case TRUE:            return \"TRUE\";\n           case SHEQ:            return \"SHEQ\";\n@@ -359,7 +359,7 @@\n           case LP:              return \"LP\";\n           case RP:              return \"RP\";\n           case COMMA:           return \"COMMA\";\n-          case ASSIGN:          return \"ASSIGN\";\n+          case ASSIGN:          ;\n           case ASSIGN_BITOR:    return \"ASSIGN_BITOR\";\n           case ASSIGN_BITXOR:   return \"ASSIGN_BITXOR\";\n           case ASSIGN_BITAND:   return \"ASSIGN_BITAND\";\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 318, 
          "faulty": "return \"THIS\";", 
          "type": "Delete", 
          "seed": "return Token.STRING;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 88, 
          "faulty": "canRemove=true;", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 943, 
          "faulty": "if (first == null || first.getType() != Token.NAME) {\n  sb.append(\"<invalid>\");\n}\n else {\n  sb.append(first.getString());\n}", 
          "type": "Replace", 
          "seed": "int lineno=getLineno();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1427, 
          "faulty": "return res;", 
          "type": "Delete", 
          "seed": "boolean first=true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 318, 
          "faulty": "return \"THIS\";", 
          "type": "Delete", 
          "seed": "return Token.XMLATTR;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 221, 
          "faulty": "return \"synthetic\";", 
          "type": "Delete", 
          "seed": "return Token.XMLATTR;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 221, 
          "faulty": "return \"synthetic\";", 
          "type": "Delete", 
          "seed": "consumeToken();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1427, 
          "faulty": "return res;", 
          "type": "Delete", 
          "seed": "boolean first=true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 362, 
          "faulty": "return \"ASSIGN\";", 
          "type": "Replace", 
          "seed": "Context cx=Context.getCurrentContext();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 362, 
          "faulty": "return \"ASSIGN\";", 
          "type": "Delete", 
          "seed": "if (matchChar('=')) {\n  return Token.ASSIGN_ADD;\n}\n else if (matchChar('+')) {\n  return Token.INC;\n}\n else {\n  return Token.ADD;\n}"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 88, 
          "faulty": "canRemove=true;", 
          "type": "Replace", 
          "seed": "return;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:51:37.259744610 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_846/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 07:03:57.465645741 -0500\n@@ -96,11 +96,6 @@\n               canRemove = true;\n             }\n           }\n-\n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 06:51:37.279734609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_846/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 07:03:57.465645741 -0500\n@@ -218,7 +218,7 @@\n         case QUOTED_PROP:        return \"quoted\";\n         case OPT_ARG_NAME:       return \"opt_arg\";\n \n-        case SYNTHETIC_BLOCK_PROP: return \"synthetic\";\n+        case SYNTHETIC_BLOCK_PROP: ;\n         case EMPTY_BLOCK:        return \"empty_block\";\n         case ORIGINALNAME_PROP:  return \"originalname\";\n         case SIDE_EFFECT_FLAGS:  return \"side_effect_flags\";\n@@ -1424,7 +1424,6 @@\n       }\n       res = n.checkTreeEqualsImpl(n2);\n       if (res != null) {\n-        return res;\n       }\n     }\n     return res;\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 06:51:37.283732609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_846/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 07:03:57.465645741 -0500\n@@ -315,7 +315,7 @@\n           case NUMBER:          return \"NUMBER\";\n           case STRING:          return \"STRING\";\n           case NULL:            return \"NULL\";\n-          case THIS:            return \"THIS\";\n+          case THIS:            ;\n           case FALSE:           return \"FALSE\";\n           case TRUE:            return \"TRUE\";\n           case SHEQ:            return \"SHEQ\";\n@@ -359,7 +359,7 @@\n           case LP:              return \"LP\";\n           case RP:              return \"RP\";\n           case COMMA:           return \"COMMA\";\n-          case ASSIGN:          return \"ASSIGN\";\n+          case ASSIGN:          ;\n           case ASSIGN_BITOR:    return \"ASSIGN_BITOR\";\n           case ASSIGN_BITXOR:   return \"ASSIGN_BITXOR\";\n           case ASSIGN_BITAND:   return \"ASSIGN_BITAND\";\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 221, 
          "faulty": "return \"synthetic\";", 
          "type": "Delete", 
          "seed": "consumeToken();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1427, 
          "faulty": "return res;", 
          "type": "Delete", 
          "seed": "boolean first=true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 318, 
          "faulty": "return \"THIS\";", 
          "type": "Delete", 
          "seed": "return Token.XMLATTR;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 221, 
          "faulty": "return \"synthetic\";", 
          "type": "Delete", 
          "seed": "return Token.XMLATTR;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 362, 
          "faulty": "return \"ASSIGN\";", 
          "type": "Delete", 
          "seed": "return Token.LP;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:51:37.259744610 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_102/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:57:14.824008413 -0500\n@@ -85,7 +85,6 @@\n           boolean canRemove = false;\n \n           if (specializationState == null) {\n-            canRemove = true;\n           } else {\n             Node specializableFunction =\n               getSpecializableFunctionFromSymbol(declaration);\n@@ -96,11 +95,6 @@\n               canRemove = true;\n             }\n           }\n-\n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n@@ -108,7 +102,8 @@\n     }\n \n     if (changed) {\n-      compiler.reportCodeChange();\n+      int index = -1;\n+\tcompiler.reportCodeChange();\n     }\n   }\n \n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 102, 
          "faulty": "changed=true;", 
          "type": "InsertBefore", 
          "seed": "StringBuilder builder=new StringBuilder();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 111, 
          "faulty": "compiler.reportCodeChange();", 
          "type": "InsertBefore", 
          "seed": "int index=-1;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 88, 
          "faulty": "canRemove=true;", 
          "type": "Delete", 
          "seed": "return null;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:51:37.259744610 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1698/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 07:11:18.371133628 -0500\n@@ -85,7 +85,6 @@\n           boolean canRemove = false;\n \n           if (specializationState == null) {\n-            canRemove = true;\n           } else {\n             Node specializableFunction =\n               getSpecializableFunctionFromSymbol(declaration);\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 06:51:37.279734609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1698/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 07:11:18.375133701 -0500\n@@ -218,7 +218,7 @@\n         case QUOTED_PROP:        return \"quoted\";\n         case OPT_ARG_NAME:       return \"opt_arg\";\n \n-        case SYNTHETIC_BLOCK_PROP: return \"synthetic\";\n+        case SYNTHETIC_BLOCK_PROP: ;\n         case EMPTY_BLOCK:        return \"empty_block\";\n         case ORIGINALNAME_PROP:  return \"originalname\";\n         case SIDE_EFFECT_FLAGS:  return \"side_effect_flags\";\n@@ -1424,7 +1424,6 @@\n       }\n       res = n.checkTreeEqualsImpl(n2);\n       if (res != null) {\n-        return res;\n       }\n     }\n     return res;\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 221, 
          "faulty": "return \"synthetic\";", 
          "type": "Delete", 
          "seed": "return Token.XMLATTR;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 221, 
          "faulty": "return \"synthetic\";", 
          "type": "Delete", 
          "seed": "consumeToken();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1427, 
          "faulty": "return res;", 
          "type": "Delete", 
          "seed": "boolean first=true;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 88, 
          "faulty": "canRemove=true;", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1427, 
          "faulty": "return res;", 
          "type": "Delete", 
          "seed": "return Token.STRING;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:51:37.259744610 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_428/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 07:00:16.185304811 -0500\n@@ -96,11 +96,6 @@\n               canRemove = true;\n             }\n           }\n-\n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 06:51:37.279734609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_428/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 07:00:16.185304811 -0500\n@@ -218,7 +218,7 @@\n         case QUOTED_PROP:        return \"quoted\";\n         case OPT_ARG_NAME:       return \"opt_arg\";\n \n-        case SYNTHETIC_BLOCK_PROP: return \"synthetic\";\n+        case SYNTHETIC_BLOCK_PROP: ;\n         case EMPTY_BLOCK:        return \"empty_block\";\n         case ORIGINALNAME_PROP:  return \"originalname\";\n         case SIDE_EFFECT_FLAGS:  return \"side_effect_flags\";\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 06:51:37.283732609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_428/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 07:00:16.189304516 -0500\n@@ -315,7 +315,7 @@\n           case NUMBER:          return \"NUMBER\";\n           case STRING:          return \"STRING\";\n           case NULL:            return \"NULL\";\n-          case THIS:            return \"THIS\";\n+          case THIS:            ;\n           case FALSE:           return \"FALSE\";\n           case TRUE:            return \"TRUE\";\n           case SHEQ:            return \"SHEQ\";\n@@ -359,7 +359,7 @@\n           case LP:              return \"LP\";\n           case RP:              return \"RP\";\n           case COMMA:           return \"COMMA\";\n-          case ASSIGN:          return \"ASSIGN\";\n+          case ASSIGN:          ;\n           case ASSIGN_BITOR:    return \"ASSIGN_BITOR\";\n           case ASSIGN_BITXOR:   return \"ASSIGN_BITXOR\";\n           case ASSIGN_BITAND:   return \"ASSIGN_BITAND\";\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 221, 
          "faulty": "return \"synthetic\";", 
          "type": "Delete", 
          "seed": "consumeToken();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 318, 
          "faulty": "return \"THIS\";", 
          "type": "Delete", 
          "seed": "return Token.STRING;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 362, 
          "faulty": "return \"ASSIGN\";", 
          "type": "Delete", 
          "seed": "return Token.LP;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:51:37.259744610 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_984/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 07:05:09.893232126 -0500\n@@ -96,11 +96,6 @@\n               canRemove = true;\n             }\n           }\n-\n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 06:51:37.279734609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_984/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 07:05:09.893232126 -0500\n@@ -218,7 +218,7 @@\n         case QUOTED_PROP:        return \"quoted\";\n         case OPT_ARG_NAME:       return \"opt_arg\";\n \n-        case SYNTHETIC_BLOCK_PROP: return \"synthetic\";\n+        case SYNTHETIC_BLOCK_PROP: ;\n         case EMPTY_BLOCK:        return \"empty_block\";\n         case ORIGINALNAME_PROP:  return \"originalname\";\n         case SIDE_EFFECT_FLAGS:  return \"side_effect_flags\";\n@@ -1424,7 +1424,6 @@\n       }\n       res = n.checkTreeEqualsImpl(n2);\n       if (res != null) {\n-        return res;\n       }\n     }\n     return res;\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 221, 
          "faulty": "return \"synthetic\";", 
          "type": "Delete", 
          "seed": "consumeToken();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1427, 
          "faulty": "return res;", 
          "type": "Delete", 
          "seed": "boolean first=true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 221, 
          "faulty": "return \"synthetic\";", 
          "type": "Delete", 
          "seed": "boolean nullKey=false;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:51:37.259744610 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1602/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 07:10:28.402156218 -0500\n@@ -85,7 +85,6 @@\n           boolean canRemove = false;\n \n           if (specializationState == null) {\n-            canRemove = true;\n           } else {\n             Node specializableFunction =\n               getSpecializableFunctionFromSymbol(declaration);\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 06:51:37.279734609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1602/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 07:10:28.402156218 -0500\n@@ -1424,7 +1424,7 @@\n       }\n       res = n.checkTreeEqualsImpl(n2);\n       if (res != null) {\n-        return res;\n+        Kit.codeBug();\n       }\n     }\n     return res;\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 06:51:37.283732609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1602/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 07:10:28.406156301 -0500\n@@ -315,7 +315,7 @@\n           case NUMBER:          return \"NUMBER\";\n           case STRING:          return \"STRING\";\n           case NULL:            return \"NULL\";\n-          case THIS:            return \"THIS\";\n+          case THIS:            ;\n           case FALSE:           return \"FALSE\";\n           case TRUE:            return \"TRUE\";\n           case SHEQ:            return \"SHEQ\";\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 88, 
          "faulty": "canRemove=true;", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 318, 
          "faulty": "return \"THIS\";", 
          "type": "Delete", 
          "seed": "return Token.STRING;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1427, 
          "faulty": "return res;", 
          "type": "Replace", 
          "seed": "Kit.codeBug();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:51:37.259744610 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_321/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:59:15.981094936 -0500\n@@ -96,11 +96,6 @@\n               canRemove = true;\n             }\n           }\n-\n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 06:51:37.279734609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_321/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 06:59:15.985094949 -0500\n@@ -218,7 +218,7 @@\n         case QUOTED_PROP:        return \"quoted\";\n         case OPT_ARG_NAME:       return \"opt_arg\";\n \n-        case SYNTHETIC_BLOCK_PROP: return \"synthetic\";\n+        case SYNTHETIC_BLOCK_PROP: ;\n         case EMPTY_BLOCK:        return \"empty_block\";\n         case ORIGINALNAME_PROP:  return \"originalname\";\n         case SIDE_EFFECT_FLAGS:  return \"side_effect_flags\";\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 06:51:37.283732609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_321/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 06:59:15.985094949 -0500\n@@ -315,7 +315,10 @@\n           case NUMBER:          return \"NUMBER\";\n           case STRING:          return \"STRING\";\n           case NULL:            return \"NULL\";\n-          case THIS:            return \"THIS\";\n+          case THIS:            {\n+\t\t\t\tfinal String defaultResource = \"rhino_ast.java.com.google.javascript.rhino.Messages\";\n+\t\t\t\treturn \"THIS\";\n+\t\t\t}\n           case FALSE:           return \"FALSE\";\n           case TRUE:            return \"TRUE\";\n           case SHEQ:            return \"SHEQ\";\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 102, 
          "faulty": "changed=true;", 
          "type": "InsertBefore", 
          "seed": "StringBuilder builder=new StringBuilder();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 102, 
          "faulty": "changed=true;", 
          "type": "InsertBefore", 
          "seed": "StringBuilder builder=new StringBuilder();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 221, 
          "faulty": "return \"synthetic\";", 
          "type": "Delete", 
          "seed": "consumeToken();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 318, 
          "faulty": "return \"THIS\";", 
          "type": "InsertBefore", 
          "seed": "final String defaultResource=\"rhino_ast.java.com.google.javascript.rhino.Messages\";"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:51:37.259744610 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1255/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 07:07:31.717212399 -0500\n@@ -85,7 +85,8 @@\n           boolean canRemove = false;\n \n           if (specializationState == null) {\n-            canRemove = true;\n+            StringBuilder builder = new StringBuilder();\n+\t\t\tcanRemove = true;\n           } else {\n             Node specializableFunction =\n               getSpecializableFunctionFromSymbol(declaration);\n@@ -96,11 +97,6 @@\n               canRemove = true;\n             }\n           }\n-\n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 06:51:37.279734609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1255/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 07:07:31.721212547 -0500\n@@ -218,7 +218,7 @@\n         case QUOTED_PROP:        return \"quoted\";\n         case OPT_ARG_NAME:       return \"opt_arg\";\n \n-        case SYNTHETIC_BLOCK_PROP: return \"synthetic\";\n+        case SYNTHETIC_BLOCK_PROP: ;\n         case EMPTY_BLOCK:        return \"empty_block\";\n         case ORIGINALNAME_PROP:  return \"originalname\";\n         case SIDE_EFFECT_FLAGS:  return \"side_effect_flags\";\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 06:51:37.283732609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1255/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 07:07:31.721212547 -0500\n@@ -315,7 +315,7 @@\n           case NUMBER:          return \"NUMBER\";\n           case STRING:          return \"STRING\";\n           case NULL:            return \"NULL\";\n-          case THIS:            return \"THIS\";\n+          case THIS:            ;\n           case FALSE:           return \"FALSE\";\n           case TRUE:            return \"TRUE\";\n           case SHEQ:            return \"SHEQ\";\n@@ -359,7 +359,7 @@\n           case LP:              return \"LP\";\n           case RP:              return \"RP\";\n           case COMMA:           return \"COMMA\";\n-          case ASSIGN:          return \"ASSIGN\";\n+          case ASSIGN:          ;\n           case ASSIGN_BITOR:    return \"ASSIGN_BITOR\";\n           case ASSIGN_BITXOR:   return \"ASSIGN_BITXOR\";\n           case ASSIGN_BITAND:   return \"ASSIGN_BITAND\";\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 221, 
          "faulty": "return \"synthetic\";", 
          "type": "Delete", 
          "seed": "consumeToken();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 318, 
          "faulty": "return \"THIS\";", 
          "type": "Delete", 
          "seed": "return Token.STRING;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 362, 
          "faulty": "return \"ASSIGN\";", 
          "type": "Delete", 
          "seed": "return Token.LP;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 362, 
          "faulty": "return \"ASSIGN\";", 
          "type": "Delete", 
          "seed": "return Token.LP;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 88, 
          "faulty": "canRemove=true;", 
          "type": "InsertBefore", 
          "seed": "StringBuilder builder=new StringBuilder();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:51:37.259744610 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_798/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 07:03:34.377813343 -0500\n@@ -81,28 +81,6 @@\n     boolean changed = false;\n     for (NameInfo nameInfo : allNameInfo) {\n       if (!nameInfo.isReferenced()) {\n-        for (Symbol declaration : nameInfo.getDeclarations()) {\n-          boolean canRemove = false;\n-\n-          if (specializationState == null) {\n-            canRemove = true;\n-          } else {\n-            Node specializableFunction =\n-              getSpecializableFunctionFromSymbol(declaration);\n-\n-            if (specializableFunction != null) {\n-              specializationState.reportRemovedFunction(\n-                  specializableFunction, null);\n-              canRemove = true;\n-            }\n-          }\n-\n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n-        }\n-\n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n       }\n     }\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 06:51:37.279734609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_798/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 07:03:34.381813312 -0500\n@@ -218,7 +218,7 @@\n         case QUOTED_PROP:        return \"quoted\";\n         case OPT_ARG_NAME:       return \"opt_arg\";\n \n-        case SYNTHETIC_BLOCK_PROP: return \"synthetic\";\n+        case SYNTHETIC_BLOCK_PROP: ;\n         case EMPTY_BLOCK:        return \"empty_block\";\n         case ORIGINALNAME_PROP:  return \"originalname\";\n         case SIDE_EFFECT_FLAGS:  return \"side_effect_flags\";\n@@ -1424,7 +1424,6 @@\n       }\n       res = n.checkTreeEqualsImpl(n2);\n       if (res != null) {\n-        return res;\n       }\n     }\n     return res;\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 06:51:37.283732609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_798/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 07:03:34.381813312 -0500\n@@ -315,7 +315,7 @@\n           case NUMBER:          return \"NUMBER\";\n           case STRING:          return \"STRING\";\n           case NULL:            return \"NULL\";\n-          case THIS:            return \"THIS\";\n+          case THIS:            ;\n           case FALSE:           return \"FALSE\";\n           case TRUE:            return \"TRUE\";\n           case SHEQ:            return \"SHEQ\";\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 102, 
          "faulty": "changed=true;", 
          "type": "InsertBefore", 
          "seed": "StringBuilder builder=new StringBuilder();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 221, 
          "faulty": "return \"synthetic\";", 
          "type": "Delete", 
          "seed": "consumeToken();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1427, 
          "faulty": "return res;", 
          "type": "Delete", 
          "seed": "boolean first=true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 318, 
          "faulty": "return \"THIS\";", 
          "type": "Delete", 
          "seed": "return Token.XMLATTR;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 221, 
          "faulty": "return \"synthetic\";", 
          "type": "Delete", 
          "seed": "return Token.XMLATTR;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1427, 
          "faulty": "return res;", 
          "type": "Delete", 
          "seed": "return Token.STRING;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 84, 
          "faulty": "for (Symbol declaration : nameInfo.getDeclarations()) {\n  boolean canRemove=false;\n  if (specializationState == null) {\n    canRemove=true;\n  }\n else {\n    Node specializableFunction=getSpecializableFunctionFromSymbol(declaration);\n    if (specializableFunction != null) {\n      specializationState.reportRemovedFunction(specializableFunction,null);\n      canRemove=true;\n    }\n  }\n  if (canRemove) {\n    declaration.remove();\n    changed=true;\n  }\n}", 
          "type": "Delete", 
          "seed": "return this;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:51:37.259744610 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_375/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:59:47.055581787 -0500\n@@ -96,11 +96,6 @@\n               canRemove = true;\n             }\n           }\n-\n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 06:51:37.279734609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_375/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 06:59:47.055581787 -0500\n@@ -218,7 +218,7 @@\n         case QUOTED_PROP:        return \"quoted\";\n         case OPT_ARG_NAME:       return \"opt_arg\";\n \n-        case SYNTHETIC_BLOCK_PROP: return \"synthetic\";\n+        case SYNTHETIC_BLOCK_PROP: ;\n         case EMPTY_BLOCK:        return \"empty_block\";\n         case ORIGINALNAME_PROP:  return \"originalname\";\n         case SIDE_EFFECT_FLAGS:  return \"side_effect_flags\";\n@@ -1424,7 +1424,6 @@\n       }\n       res = n.checkTreeEqualsImpl(n2);\n       if (res != null) {\n-        return res;\n       }\n     }\n     return res;\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 06:51:37.283732609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_375/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 06:59:47.059581456 -0500\n@@ -356,7 +356,7 @@\n           case RB:              return \"RB\";\n           case LC:              return \"LC\";\n           case RC:              return \"RC\";\n-          case LP:              return \"LP\";\n+          case LP:              ;\n           case RP:              return \"RP\";\n           case COMMA:           return \"COMMA\";\n           case ASSIGN:          return \"ASSIGN\";\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 102, 
          "faulty": "changed=true;", 
          "type": "InsertBefore", 
          "seed": "StringBuilder builder=new StringBuilder();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 102, 
          "faulty": "changed=true;", 
          "type": "InsertBefore", 
          "seed": "StringBuilder builder=new StringBuilder();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 221, 
          "faulty": "return \"synthetic\";", 
          "type": "Delete", 
          "seed": "consumeToken();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 221, 
          "faulty": "return \"synthetic\";", 
          "type": "Delete", 
          "seed": "consumeToken();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1427, 
          "faulty": "return res;", 
          "type": "Delete", 
          "seed": "return jsType;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 359, 
          "faulty": "return \"LP\";", 
          "type": "Delete", 
          "seed": "case Token.SCRIPT:"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:51:37.259744610 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_461/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 07:00:35.715956966 -0500\n@@ -96,11 +96,6 @@\n               canRemove = true;\n             }\n           }\n-\n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 06:51:37.283732609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_461/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 07:00:35.719956896 -0500\n@@ -315,7 +315,10 @@\n           case NUMBER:          return \"NUMBER\";\n           case STRING:          return \"STRING\";\n           case NULL:            return \"NULL\";\n-          case THIS:            return \"THIS\";\n+          case THIS:            {\n+\t\t\t\tNode pn = null;\n+\t\t\t\treturn \"THIS\";\n+\t\t\t}\n           case FALSE:           return \"FALSE\";\n           case TRUE:            return \"TRUE\";\n           case SHEQ:            return \"SHEQ\";\n@@ -359,7 +362,7 @@\n           case LP:              return \"LP\";\n           case RP:              return \"RP\";\n           case COMMA:           return \"COMMA\";\n-          case ASSIGN:          return \"ASSIGN\";\n+          case ASSIGN:          ;\n           case ASSIGN_BITOR:    return \"ASSIGN_BITOR\";\n           case ASSIGN_BITXOR:   return \"ASSIGN_BITXOR\";\n           case ASSIGN_BITAND:   return \"ASSIGN_BITAND\";\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 362, 
          "faulty": "return \"ASSIGN\";", 
          "type": "Delete", 
          "seed": "return Token.LP;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 318, 
          "faulty": "return \"THIS\";", 
          "type": "InsertBefore", 
          "seed": "Node pn=null;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:51:37.259744610 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1113/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 07:06:18.500967382 -0500\n@@ -85,7 +85,6 @@\n           boolean canRemove = false;\n \n           if (specializationState == null) {\n-            canRemove = true;\n           } else {\n             Node specializableFunction =\n               getSpecializableFunctionFromSymbol(declaration);\n@@ -96,11 +95,6 @@\n               canRemove = true;\n             }\n           }\n-\n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 06:51:37.279734609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1113/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 07:06:18.504967370 -0500\n@@ -218,7 +218,7 @@\n         case QUOTED_PROP:        return \"quoted\";\n         case OPT_ARG_NAME:       return \"opt_arg\";\n \n-        case SYNTHETIC_BLOCK_PROP: return \"synthetic\";\n+        case SYNTHETIC_BLOCK_PROP: ;\n         case EMPTY_BLOCK:        return \"empty_block\";\n         case ORIGINALNAME_PROP:  return \"originalname\";\n         case SIDE_EFFECT_FLAGS:  return \"side_effect_flags\";\n@@ -937,14 +937,7 @@\n         sb.append(getString());\n       } else if (type == Token.FUNCTION) {\n         sb.append(' ');\n-        // In the case of JsDoc trees, the first child is often not a string\n-        // which causes exceptions to be thrown when calling toString or\n-        // toStringTree.\n-        if (first == null || first.getType() != Token.NAME) {\n-          sb.append(\"<invalid>\");\n-        } else {\n-          sb.append(first.getString());\n-        }\n+        int lineno = getLineno();\n       } else if (this instanceof ScriptOrFnNode) {\n         ScriptOrFnNode sof = (ScriptOrFnNode) this;\n         if (this instanceof FunctionNode) {\n@@ -1424,7 +1417,6 @@\n       }\n       res = n.checkTreeEqualsImpl(n2);\n       if (res != null) {\n-        return res;\n       }\n     }\n     return res;\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 06:51:37.283732609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1113/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 07:06:18.504967370 -0500\n@@ -307,7 +307,7 @@\n           case TYPEOF:          return \"TYPEOF\";\n           case GETPROP:         return \"GETPROP\";\n           case SETPROP:         return \"SETPROP\";\n-          case GETELEM:         return \"GETELEM\";\n+          case GETELEM:         ;\n           case SETELEM:         return \"SETELEM\";\n           case CALL:            return \"CALL\";\n           case NAME:            return \"NAME\";\n@@ -315,7 +315,7 @@\n           case NUMBER:          return \"NUMBER\";\n           case STRING:          return \"STRING\";\n           case NULL:            return \"NULL\";\n-          case THIS:            return \"THIS\";\n+          case THIS:            ;\n           case FALSE:           return \"FALSE\";\n           case TRUE:            return \"TRUE\";\n           case SHEQ:            return \"SHEQ\";\n@@ -359,7 +359,7 @@\n           case LP:              return \"LP\";\n           case RP:              return \"RP\";\n           case COMMA:           return \"COMMA\";\n-          case ASSIGN:          return \"ASSIGN\";\n+          case ASSIGN:          Context cx = Context.getCurrentContext();\n           case ASSIGN_BITOR:    return \"ASSIGN_BITOR\";\n           case ASSIGN_BITXOR:   return \"ASSIGN_BITXOR\";\n           case ASSIGN_BITAND:   return \"ASSIGN_BITAND\";\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 318, 
          "faulty": "return \"THIS\";", 
          "type": "Delete", 
          "seed": "return Token.STRING;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 88, 
          "faulty": "canRemove=true;", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 943, 
          "faulty": "if (first == null || first.getType() != Token.NAME) {\n  sb.append(\"<invalid>\");\n}\n else {\n  sb.append(first.getString());\n}", 
          "type": "Replace", 
          "seed": "int lineno=getLineno();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1427, 
          "faulty": "return res;", 
          "type": "Delete", 
          "seed": "boolean first=true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 318, 
          "faulty": "return \"THIS\";", 
          "type": "Delete", 
          "seed": "return Token.XMLATTR;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 221, 
          "faulty": "return \"synthetic\";", 
          "type": "Delete", 
          "seed": "return Token.XMLATTR;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 221, 
          "faulty": "return \"synthetic\";", 
          "type": "Delete", 
          "seed": "consumeToken();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1427, 
          "faulty": "return res;", 
          "type": "Delete", 
          "seed": "boolean first=true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 318, 
          "faulty": "return \"THIS\";", 
          "type": "Delete", 
          "seed": "return Token.XMLATTR;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 221, 
          "faulty": "return \"synthetic\";", 
          "type": "Delete", 
          "seed": "return Token.XMLATTR;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 943, 
          "faulty": "if (first == null || first.getType() != Token.NAME) {\n  sb.append(\"<invalid>\");\n}\n else {\n  sb.append(first.getString());\n}", 
          "type": "Replace", 
          "seed": "int lineno=getLineno();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 362, 
          "faulty": "return \"ASSIGN\";", 
          "type": "Replace", 
          "seed": "Context cx=Context.getCurrentContext();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 310, 
          "faulty": "return \"GETELEM\";", 
          "type": "Delete", 
          "seed": "return false;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:51:37.259744610 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1869/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 07:12:46.388559671 -0500\n@@ -83,24 +83,6 @@\n       if (!nameInfo.isReferenced()) {\n         for (Symbol declaration : nameInfo.getDeclarations()) {\n           boolean canRemove = false;\n-\n-          if (specializationState == null) {\n-            canRemove = true;\n-          } else {\n-            Node specializableFunction =\n-              getSpecializableFunctionFromSymbol(declaration);\n-\n-            if (specializableFunction != null) {\n-              specializationState.reportRemovedFunction(\n-                  specializableFunction, null);\n-              canRemove = true;\n-            }\n-          }\n-\n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 06:51:37.279734609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1869/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 07:12:46.392559727 -0500\n@@ -218,7 +218,7 @@\n         case QUOTED_PROP:        return \"quoted\";\n         case OPT_ARG_NAME:       return \"opt_arg\";\n \n-        case SYNTHETIC_BLOCK_PROP: return \"synthetic\";\n+        case SYNTHETIC_BLOCK_PROP: ;\n         case EMPTY_BLOCK:        return \"empty_block\";\n         case ORIGINALNAME_PROP:  return \"originalname\";\n         case SIDE_EFFECT_FLAGS:  return \"side_effect_flags\";\n@@ -1382,11 +1382,12 @@\n   public String checkTreeEquals(Node node2) {\n       NodeMismatch diff = checkTreeEqualsImpl(node2);\n       if (diff != null) {\n-        return \"Node tree inequality:\" +\n-            \"\\nTree1:\\n\" + toStringTree() +\n-            \"\\n\\nTree2:\\n\" + node2.toStringTree() +\n-            \"\\n\\nSubtree1: \" + diff.nodeA.toStringTree() +\n-            \"\\n\\nSubtree2: \" + diff.nodeB.toStringTree();\n+        if (diff != null) {\n+\t\t\treturn \"Node tree inequality:\" + \"\\nTree1:\\n\" + toStringTree()\n+\t\t\t\t\t+ \"\\n\\nTree2:\\n\" + node2.toStringTree() + \"\\n\\nSubtree1: \"\n+\t\t\t\t\t+ diff.nodeA.toStringTree() + \"\\n\\nSubtree2: \"\n+\t\t\t\t\t+ diff.nodeB.toStringTree();\n+\t\t}\n       }\n       return null;\n   }\n@@ -1411,7 +1412,8 @@\n    */\n   NodeMismatch checkTreeEqualsImpl(Node node2) {\n     if (!isEquivalentTo(node2, false, false)) {\n-      return new NodeMismatch(this, node2);\n+      boolean nullKey = false;\n+\treturn new NodeMismatch(this, node2);\n     }\n \n     NodeMismatch res = null;\n@@ -1424,7 +1426,6 @@\n       }\n       res = n.checkTreeEqualsImpl(n2);\n       if (res != null) {\n-        return res;\n       }\n     }\n     return res;\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 06:51:37.283732609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1869/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 07:12:46.392559727 -0500\n@@ -315,7 +315,7 @@\n           case NUMBER:          return \"NUMBER\";\n           case STRING:          return \"STRING\";\n           case NULL:            return \"NULL\";\n-          case THIS:            return \"THIS\";\n+          case THIS:            ;\n           case FALSE:           return \"FALSE\";\n           case TRUE:            return \"TRUE\";\n           case SHEQ:            return \"SHEQ\";\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 88, 
          "faulty": "canRemove=true;", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 221, 
          "faulty": "return \"synthetic\";", 
          "type": "Delete", 
          "seed": "return Token.XMLATTR;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1427, 
          "faulty": "return res;", 
          "type": "Delete", 
          "seed": "return Token.STRING;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1414, 
          "faulty": "return new NodeMismatch(this,node2);", 
          "type": "InsertBefore", 
          "seed": "boolean nullKey=false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 87, 
          "faulty": "if (specializationState == null) {\n  canRemove=true;\n}\n else {\n  Node specializableFunction=getSpecializableFunctionFromSymbol(declaration);\n  if (specializableFunction != null) {\n    specializationState.reportRemovedFunction(specializableFunction,null);\n    canRemove=true;\n  }\n}", 
          "type": "Delete", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1427, 
          "faulty": "return res;", 
          "type": "Delete", 
          "seed": "return Token.STRING;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 318, 
          "faulty": "return \"THIS\";", 
          "type": "Delete", 
          "seed": "if (matchChar('/')) {\n  return Token.EOC;\n}\n else {\n  return Token.STAR;\n}"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 318, 
          "faulty": "return \"THIS\";", 
          "type": "Delete", 
          "seed": "return \"BLOCK\";"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1385, 
          "faulty": "return \"Node tree inequality:\" + \"\\nTree1:\\n\" + toStringTree() + \"\\n\\nTree2:\\n\"+ node2.toStringTree()+ \"\\n\\nSubtree1: \"+ diff.nodeA.toStringTree()+ \"\\n\\nSubtree2: \"+ diff.nodeB.toStringTree();", 
          "type": "Replace", 
          "seed": "if (diff != null) {\n  return \"Node tree inequality:\" + \"\\nTree1:\\n\" + toStringTree() + \"\\n\\nTree2:\\n\"+ node2.toStringTree()+ \"\\n\\nSubtree1: \"+ diff.nodeA.toStringTree()+ \"\\n\\nSubtree2: \"+ diff.nodeB.toStringTree();\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:51:37.259744610 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1841/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 07:12:30.964332924 -0500\n@@ -83,24 +83,6 @@\n       if (!nameInfo.isReferenced()) {\n         for (Symbol declaration : nameInfo.getDeclarations()) {\n           boolean canRemove = false;\n-\n-          if (specializationState == null) {\n-            canRemove = true;\n-          } else {\n-            Node specializableFunction =\n-              getSpecializableFunctionFromSymbol(declaration);\n-\n-            if (specializableFunction != null) {\n-              specializationState.reportRemovedFunction(\n-                  specializableFunction, null);\n-              canRemove = true;\n-            }\n-          }\n-\n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 06:51:37.279734609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1841/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 07:12:30.968332983 -0500\n@@ -218,7 +218,7 @@\n         case QUOTED_PROP:        return \"quoted\";\n         case OPT_ARG_NAME:       return \"opt_arg\";\n \n-        case SYNTHETIC_BLOCK_PROP: return \"synthetic\";\n+        case SYNTHETIC_BLOCK_PROP: ;\n         case EMPTY_BLOCK:        return \"empty_block\";\n         case ORIGINALNAME_PROP:  return \"originalname\";\n         case SIDE_EFFECT_FLAGS:  return \"side_effect_flags\";\n@@ -1411,7 +1411,8 @@\n    */\n   NodeMismatch checkTreeEqualsImpl(Node node2) {\n     if (!isEquivalentTo(node2, false, false)) {\n-      return new NodeMismatch(this, node2);\n+      boolean nullKey = false;\n+\treturn new NodeMismatch(this, node2);\n     }\n \n     NodeMismatch res = null;\n@@ -1424,7 +1425,6 @@\n       }\n       res = n.checkTreeEqualsImpl(n2);\n       if (res != null) {\n-        return res;\n       }\n     }\n     return res;\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 06:51:37.283732609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1841/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 07:12:30.968332983 -0500\n@@ -315,7 +315,7 @@\n           case NUMBER:          return \"NUMBER\";\n           case STRING:          return \"STRING\";\n           case NULL:            return \"NULL\";\n-          case THIS:            return \"THIS\";\n+          case THIS:            ;\n           case FALSE:           return \"FALSE\";\n           case TRUE:            return \"TRUE\";\n           case SHEQ:            return \"SHEQ\";\n@@ -359,7 +359,7 @@\n           case LP:              return \"LP\";\n           case RP:              return \"RP\";\n           case COMMA:           return \"COMMA\";\n-          case ASSIGN:          return \"ASSIGN\";\n+          case ASSIGN:          ;\n           case ASSIGN_BITOR:    return \"ASSIGN_BITOR\";\n           case ASSIGN_BITXOR:   return \"ASSIGN_BITXOR\";\n           case ASSIGN_BITAND:   return \"ASSIGN_BITAND\";\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 88, 
          "faulty": "canRemove=true;", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 88, 
          "faulty": "canRemove=true;", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 318, 
          "faulty": "return \"THIS\";", 
          "type": "Delete", 
          "seed": "return Token.STRING;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1427, 
          "faulty": "return res;", 
          "type": "Replace", 
          "seed": "Kit.codeBug();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 318, 
          "faulty": "return \"THIS\";", 
          "type": "InsertBefore", 
          "seed": "StringBuilder sb=new StringBuilder();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 221, 
          "faulty": "return \"synthetic\";", 
          "type": "Delete", 
          "seed": "return Token.XMLATTR;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1427, 
          "faulty": "return res;", 
          "type": "Delete", 
          "seed": "return Token.STRING;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1414, 
          "faulty": "return new NodeMismatch(this,node2);", 
          "type": "InsertBefore", 
          "seed": "boolean nullKey=false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 87, 
          "faulty": "if (specializationState == null) {\n  canRemove=true;\n}\n else {\n  Node specializableFunction=getSpecializableFunctionFromSymbol(declaration);\n  if (specializableFunction != null) {\n    specializationState.reportRemovedFunction(specializableFunction,null);\n    canRemove=true;\n  }\n}", 
          "type": "Delete", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1427, 
          "faulty": "return res;", 
          "type": "Delete", 
          "seed": "return Token.STRING;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 318, 
          "faulty": "return \"THIS\";", 
          "type": "Delete", 
          "seed": "if (matchChar('/')) {\n  return Token.EOC;\n}\n else {\n  return Token.STAR;\n}"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 318, 
          "faulty": "return \"THIS\";", 
          "type": "Delete", 
          "seed": "return \"BLOCK\";"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 362, 
          "faulty": "return \"ASSIGN\";", 
          "type": "Delete", 
          "seed": "mustMatchToken(Token.RP,\"msg.no.paren\");"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:51:37.259744610 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1394/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 07:08:40.371469150 -0500\n@@ -96,11 +96,6 @@\n               canRemove = true;\n             }\n           }\n-\n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java\t2018-12-02 06:51:39.210768564 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1394/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java\t2018-12-02 07:08:40.375469267 -0500\n@@ -532,7 +532,8 @@\n \n     @Override\n     public void remove() {\n-      NodeUtil.removeChild(exprNode.getParent(), exprNode);\n+      int index = -1;\n+\tNodeUtil.removeChild(exprNode.getParent(), exprNode);\n     }\n \n     @Override\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 06:51:37.279734609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1394/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 07:08:40.375469267 -0500\n@@ -943,7 +943,6 @@\n         if (first == null || first.getType() != Token.NAME) {\n           sb.append(\"<invalid>\");\n         } else {\n-          sb.append(first.getString());\n         }\n       } else if (this instanceof ScriptOrFnNode) {\n         ScriptOrFnNode sof = (ScriptOrFnNode) this;\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 06:51:37.283732609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1394/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 07:08:40.375469267 -0500\n@@ -359,7 +359,7 @@\n           case LP:              return \"LP\";\n           case RP:              return \"RP\";\n           case COMMA:           return \"COMMA\";\n-          case ASSIGN:          return \"ASSIGN\";\n+          case ASSIGN:          ;\n           case ASSIGN_BITOR:    return \"ASSIGN_BITOR\";\n           case ASSIGN_BITXOR:   return \"ASSIGN_BITXOR\";\n           case ASSIGN_BITAND:   return \"ASSIGN_BITAND\";\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 102, 
          "faulty": "changed=true;", 
          "type": "InsertBefore", 
          "seed": "StringBuilder builder=new StringBuilder();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java", 
          "line": 535, 
          "faulty": "NodeUtil.removeChild(exprNode.getParent(),exprNode);", 
          "type": "InsertBefore", 
          "seed": "int index=-1;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 362, 
          "faulty": "return \"ASSIGN\";", 
          "type": "Delete", 
          "seed": "case 2:"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 946, 
          "faulty": "sb.append(first.getString());", 
          "type": "Delete", 
          "seed": "return Token.RP;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:51:37.259744610 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_691/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 07:02:39.750293540 -0500\n@@ -85,7 +85,6 @@\n           boolean canRemove = false;\n \n           if (specializationState == null) {\n-            canRemove = true;\n           } else {\n             Node specializableFunction =\n               getSpecializableFunctionFromSymbol(declaration);\n@@ -96,11 +95,6 @@\n               canRemove = true;\n             }\n           }\n-\n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 06:51:37.279734609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_691/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 07:02:39.754293500 -0500\n@@ -218,7 +218,7 @@\n         case QUOTED_PROP:        return \"quoted\";\n         case OPT_ARG_NAME:       return \"opt_arg\";\n \n-        case SYNTHETIC_BLOCK_PROP: return \"synthetic\";\n+        case SYNTHETIC_BLOCK_PROP: ;\n         case EMPTY_BLOCK:        return \"empty_block\";\n         case ORIGINALNAME_PROP:  return \"originalname\";\n         case SIDE_EFFECT_FLAGS:  return \"side_effect_flags\";\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 06:51:37.283732609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_691/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 07:02:39.754293500 -0500\n@@ -315,7 +315,7 @@\n           case NUMBER:          return \"NUMBER\";\n           case STRING:          return \"STRING\";\n           case NULL:            return \"NULL\";\n-          case THIS:            return \"THIS\";\n+          case THIS:            ;\n           case FALSE:           return \"FALSE\";\n           case TRUE:            return \"TRUE\";\n           case SHEQ:            return \"SHEQ\";\n@@ -359,7 +359,7 @@\n           case LP:              return \"LP\";\n           case RP:              return \"RP\";\n           case COMMA:           return \"COMMA\";\n-          case ASSIGN:          return \"ASSIGN\";\n+          case ASSIGN:          ;\n           case ASSIGN_BITOR:    return \"ASSIGN_BITOR\";\n           case ASSIGN_BITXOR:   return \"ASSIGN_BITXOR\";\n           case ASSIGN_BITAND:   return \"ASSIGN_BITAND\";\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 318, 
          "faulty": "return \"THIS\";", 
          "type": "Delete", 
          "seed": "return Token.STRING;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 362, 
          "faulty": "return \"ASSIGN\";", 
          "type": "Delete", 
          "seed": "return Token.LP;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 221, 
          "faulty": "return \"synthetic\";", 
          "type": "Delete", 
          "seed": "consumeToken();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 318, 
          "faulty": "return \"THIS\";", 
          "type": "Delete", 
          "seed": "return Token.STRING;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 102, 
          "faulty": "changed=true;", 
          "type": "InsertBefore", 
          "seed": "StringBuilder builder=new StringBuilder();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 318, 
          "faulty": "return \"THIS\";", 
          "type": "Delete", 
          "seed": "return Token.STRING;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 362, 
          "faulty": "return \"ASSIGN\";", 
          "type": "Delete", 
          "seed": "return Token.LP;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 88, 
          "faulty": "canRemove=true;", 
          "type": "Delete", 
          "seed": "return false;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:51:37.259744610 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1318/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 07:08:02.122275029 -0500\n@@ -96,11 +96,6 @@\n               canRemove = true;\n             }\n           }\n-\n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java\t2018-12-02 06:51:39.210768564 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1318/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java\t2018-12-02 07:08:02.122275029 -0500\n@@ -532,7 +532,8 @@\n \n     @Override\n     public void remove() {\n-      NodeUtil.removeChild(exprNode.getParent(), exprNode);\n+      int index = -1;\n+\tNodeUtil.removeChild(exprNode.getParent(), exprNode);\n     }\n \n     @Override\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 06:51:37.279734609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1318/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 07:08:02.126275161 -0500\n@@ -937,14 +937,7 @@\n         sb.append(getString());\n       } else if (type == Token.FUNCTION) {\n         sb.append(' ');\n-        // In the case of JsDoc trees, the first child is often not a string\n-        // which causes exceptions to be thrown when calling toString or\n-        // toStringTree.\n-        if (first == null || first.getType() != Token.NAME) {\n-          sb.append(\"<invalid>\");\n-        } else {\n-          sb.append(first.getString());\n-        }\n+        int lineno = getLineno();\n       } else if (this instanceof ScriptOrFnNode) {\n         ScriptOrFnNode sof = (ScriptOrFnNode) this;\n         if (this instanceof FunctionNode) {\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 06:51:37.283732609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1318/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 07:08:02.126275161 -0500\n@@ -315,7 +315,7 @@\n           case NUMBER:          return \"NUMBER\";\n           case STRING:          return \"STRING\";\n           case NULL:            return \"NULL\";\n-          case THIS:            return \"THIS\";\n+          case THIS:            ;\n           case FALSE:           return \"FALSE\";\n           case TRUE:            return \"TRUE\";\n           case SHEQ:            return \"SHEQ\";\n@@ -359,7 +359,7 @@\n           case LP:              return \"LP\";\n           case RP:              return \"RP\";\n           case COMMA:           return \"COMMA\";\n-          case ASSIGN:          return \"ASSIGN\";\n+          case ASSIGN:          ;\n           case ASSIGN_BITOR:    return \"ASSIGN_BITOR\";\n           case ASSIGN_BITXOR:   return \"ASSIGN_BITXOR\";\n           case ASSIGN_BITAND:   return \"ASSIGN_BITAND\";\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 318, 
          "faulty": "return \"THIS\";", 
          "type": "Delete", 
          "seed": "return Token.STRING;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 362, 
          "faulty": "return \"ASSIGN\";", 
          "type": "Delete", 
          "seed": "return Token.LP;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 362, 
          "faulty": "return \"ASSIGN\";", 
          "type": "Delete", 
          "seed": "return Token.LP;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 943, 
          "faulty": "if (first == null || first.getType() != Token.NAME) {\n  sb.append(\"<invalid>\");\n}\n else {\n  sb.append(first.getString());\n}", 
          "type": "Replace", 
          "seed": "int lineno=getLineno();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 102, 
          "faulty": "changed=true;", 
          "type": "InsertBefore", 
          "seed": "StringBuilder builder=new StringBuilder();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java", 
          "line": 535, 
          "faulty": "NodeUtil.removeChild(exprNode.getParent(),exprNode);", 
          "type": "InsertBefore", 
          "seed": "int index=-1;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 362, 
          "faulty": "return \"ASSIGN\";", 
          "type": "Delete", 
          "seed": "case 2:"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 946, 
          "faulty": "sb.append(first.getString());", 
          "type": "Delete", 
          "seed": "return Token.RP;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:51:37.259744610 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1755/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 07:11:47.023635086 -0500\n@@ -85,7 +85,6 @@\n           boolean canRemove = false;\n \n           if (specializationState == null) {\n-            canRemove = true;\n           } else {\n             Node specializableFunction =\n               getSpecializableFunctionFromSymbol(declaration);\n@@ -96,11 +95,6 @@\n               canRemove = true;\n             }\n           }\n-\n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java\t2018-12-02 06:51:39.210768564 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1755/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java\t2018-12-02 07:11:47.023635086 -0500\n@@ -532,7 +532,8 @@\n \n     @Override\n     public void remove() {\n-      NodeUtil.removeChild(exprNode.getParent(), exprNode);\n+      StringBuilder builder = new StringBuilder();\n+\tNodeUtil.removeChild(exprNode.getParent(), exprNode);\n     }\n \n     @Override\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 06:51:37.279734609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1755/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 07:11:47.023635086 -0500\n@@ -1424,7 +1424,7 @@\n       }\n       res = n.checkTreeEqualsImpl(n2);\n       if (res != null) {\n-        return res;\n+        Kit.codeBug();\n       }\n     }\n     return res;\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 06:51:37.283732609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1755/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 07:11:47.027635152 -0500\n@@ -315,7 +315,10 @@\n           case NUMBER:          return \"NUMBER\";\n           case STRING:          return \"STRING\";\n           case NULL:            return \"NULL\";\n-          case THIS:            return \"THIS\";\n+          case THIS:            {\n+\t\t\t\tStringBuilder sb = new StringBuilder();\n+\t\t\t\treturn \"THIS\";\n+\t\t\t}\n           case FALSE:           return \"FALSE\";\n           case TRUE:            return \"TRUE\";\n           case SHEQ:            return \"SHEQ\";\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 318, 
          "faulty": "return \"THIS\";", 
          "type": "Delete", 
          "seed": "return Token.STRING;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 88, 
          "faulty": "canRemove=true;", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 318, 
          "faulty": "return \"THIS\";", 
          "type": "Delete", 
          "seed": "return Token.STRING;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1427, 
          "faulty": "return res;", 
          "type": "Replace", 
          "seed": "Kit.codeBug();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 318, 
          "faulty": "return \"THIS\";", 
          "type": "InsertBefore", 
          "seed": "StringBuilder sb=new StringBuilder();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java", 
          "line": 535, 
          "faulty": "NodeUtil.removeChild(exprNode.getParent(),exprNode);", 
          "type": "InsertBefore", 
          "seed": "StringBuilder builder=new StringBuilder();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:51:37.259744610 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1364/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 07:08:25.207013439 -0500\n@@ -96,11 +96,6 @@\n               canRemove = true;\n             }\n           }\n-\n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java\t2018-12-02 06:51:39.210768564 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1364/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java\t2018-12-02 07:08:25.211013562 -0500\n@@ -532,7 +532,8 @@\n \n     @Override\n     public void remove() {\n-      NodeUtil.removeChild(exprNode.getParent(), exprNode);\n+      int index = -1;\n+\tNodeUtil.removeChild(exprNode.getParent(), exprNode);\n     }\n \n     @Override\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 06:51:37.283732609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1364/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 07:08:25.211013562 -0500\n@@ -315,7 +315,7 @@\n           case NUMBER:          return \"NUMBER\";\n           case STRING:          return \"STRING\";\n           case NULL:            return \"NULL\";\n-          case THIS:            return \"THIS\";\n+          case THIS:            ;\n           case FALSE:           return \"FALSE\";\n           case TRUE:            return \"TRUE\";\n           case SHEQ:            return \"SHEQ\";\n@@ -359,7 +359,7 @@\n           case LP:              return \"LP\";\n           case RP:              return \"RP\";\n           case COMMA:           return \"COMMA\";\n-          case ASSIGN:          return \"ASSIGN\";\n+          case ASSIGN:          Context cx = Context.getCurrentContext();\n           case ASSIGN_BITOR:    return \"ASSIGN_BITOR\";\n           case ASSIGN_BITXOR:   return \"ASSIGN_BITXOR\";\n           case ASSIGN_BITAND:   return \"ASSIGN_BITAND\";\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 318, 
          "faulty": "return \"THIS\";", 
          "type": "Delete", 
          "seed": "return Token.STRING;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java", 
          "line": 535, 
          "faulty": "NodeUtil.removeChild(exprNode.getParent(),exprNode);", 
          "type": "InsertBefore", 
          "seed": "int index=-1;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 362, 
          "faulty": "return \"ASSIGN\";", 
          "type": "Replace", 
          "seed": "Context cx=Context.getCurrentContext();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:51:37.259744610 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_123/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:57:26.652277458 -0500\n@@ -96,11 +96,6 @@\n               canRemove = true;\n             }\n           }\n-\n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 102, 
          "faulty": "changed=true;", 
          "type": "InsertBefore", 
          "seed": "StringBuilder builder=new StringBuilder();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 102, 
          "faulty": "changed=true;", 
          "type": "Delete", 
          "seed": "return;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:51:37.259744610 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_813/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 07:03:40.757765092 -0500\n@@ -85,7 +85,6 @@\n           boolean canRemove = false;\n \n           if (specializationState == null) {\n-            canRemove = true;\n           } else {\n             Node specializableFunction =\n               getSpecializableFunctionFromSymbol(declaration);\n@@ -96,11 +95,6 @@\n               canRemove = true;\n             }\n           }\n-\n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 06:51:37.279734609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_813/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 07:03:40.761765062 -0500\n@@ -937,14 +937,7 @@\n         sb.append(getString());\n       } else if (type == Token.FUNCTION) {\n         sb.append(' ');\n-        // In the case of JsDoc trees, the first child is often not a string\n-        // which causes exceptions to be thrown when calling toString or\n-        // toStringTree.\n-        if (first == null || first.getType() != Token.NAME) {\n-          sb.append(\"<invalid>\");\n-        } else {\n-          sb.append(first.getString());\n-        }\n+        int lineno = getLineno();\n       } else if (this instanceof ScriptOrFnNode) {\n         ScriptOrFnNode sof = (ScriptOrFnNode) this;\n         if (this instanceof FunctionNode) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 102, 
          "faulty": "changed=true;", 
          "type": "InsertBefore", 
          "seed": "StringBuilder builder=new StringBuilder();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 88, 
          "faulty": "canRemove=true;", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 943, 
          "faulty": "if (first == null || first.getType() != Token.NAME) {\n  sb.append(\"<invalid>\");\n}\n else {\n  sb.append(first.getString());\n}", 
          "type": "Replace", 
          "seed": "int lineno=getLineno();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:51:37.259744610 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1248/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 07:07:28.365088499 -0500\n@@ -96,11 +96,6 @@\n               canRemove = true;\n             }\n           }\n-\n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 06:51:37.279734609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1248/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 07:07:28.365088499 -0500\n@@ -937,14 +937,7 @@\n         sb.append(getString());\n       } else if (type == Token.FUNCTION) {\n         sb.append(' ');\n-        // In the case of JsDoc trees, the first child is often not a string\n-        // which causes exceptions to be thrown when calling toString or\n-        // toStringTree.\n-        if (first == null || first.getType() != Token.NAME) {\n-          sb.append(\"<invalid>\");\n-        } else {\n-          sb.append(first.getString());\n-        }\n+        int lineno = getLineno();\n       } else if (this instanceof ScriptOrFnNode) {\n         ScriptOrFnNode sof = (ScriptOrFnNode) this;\n         if (this instanceof FunctionNode) {\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 06:51:37.283732609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1248/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 07:07:28.365088499 -0500\n@@ -307,7 +307,7 @@\n           case TYPEOF:          return \"TYPEOF\";\n           case GETPROP:         return \"GETPROP\";\n           case SETPROP:         return \"SETPROP\";\n-          case GETELEM:         return \"GETELEM\";\n+          case GETELEM:         ;\n           case SETELEM:         return \"SETELEM\";\n           case CALL:            return \"CALL\";\n           case NAME:            return \"NAME\";\n@@ -359,7 +359,7 @@\n           case LP:              return \"LP\";\n           case RP:              return \"RP\";\n           case COMMA:           return \"COMMA\";\n-          case ASSIGN:          return \"ASSIGN\";\n+          case ASSIGN:          Context cx = Context.getCurrentContext();\n           case ASSIGN_BITOR:    return \"ASSIGN_BITOR\";\n           case ASSIGN_BITXOR:   return \"ASSIGN_BITXOR\";\n           case ASSIGN_BITAND:   return \"ASSIGN_BITAND\";\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 943, 
          "faulty": "if (first == null || first.getType() != Token.NAME) {\n  sb.append(\"<invalid>\");\n}\n else {\n  sb.append(first.getString());\n}", 
          "type": "Replace", 
          "seed": "int lineno=getLineno();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 362, 
          "faulty": "return \"ASSIGN\";", 
          "type": "Replace", 
          "seed": "Context cx=Context.getCurrentContext();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 310, 
          "faulty": "return \"GETELEM\";", 
          "type": "Delete", 
          "seed": "return false;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:51:37.259744610 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_400/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 07:00:00.774476124 -0500\n@@ -83,24 +83,6 @@\n       if (!nameInfo.isReferenced()) {\n         for (Symbol declaration : nameInfo.getDeclarations()) {\n           boolean canRemove = false;\n-\n-          if (specializationState == null) {\n-            canRemove = true;\n-          } else {\n-            Node specializableFunction =\n-              getSpecializableFunctionFromSymbol(declaration);\n-\n-            if (specializableFunction != null) {\n-              specializationState.reportRemovedFunction(\n-                  specializableFunction, null);\n-              canRemove = true;\n-            }\n-          }\n-\n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 87, 
          "faulty": "if (specializationState == null) {\n  canRemove=true;\n}\n else {\n  Node specializableFunction=getSpecializableFunctionFromSymbol(declaration);\n  if (specializableFunction != null) {\n    specializationState.reportRemovedFunction(specializableFunction,null);\n    canRemove=true;\n  }\n}", 
          "type": "Delete", 
          "seed": "return this;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:51:37.259744610 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1451/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 07:09:08.640261686 -0500\n@@ -85,7 +85,6 @@\n           boolean canRemove = false;\n \n           if (specializationState == null) {\n-            canRemove = true;\n           } else {\n             Node specializableFunction =\n               getSpecializableFunctionFromSymbol(declaration);\n@@ -96,11 +95,6 @@\n               canRemove = true;\n             }\n           }\n-\n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 06:51:37.279734609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1451/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 07:09:08.644261793 -0500\n@@ -218,7 +218,7 @@\n         case QUOTED_PROP:        return \"quoted\";\n         case OPT_ARG_NAME:       return \"opt_arg\";\n \n-        case SYNTHETIC_BLOCK_PROP: return \"synthetic\";\n+        case SYNTHETIC_BLOCK_PROP: ;\n         case EMPTY_BLOCK:        return \"empty_block\";\n         case ORIGINALNAME_PROP:  return \"originalname\";\n         case SIDE_EFFECT_FLAGS:  return \"side_effect_flags\";\n@@ -937,14 +937,7 @@\n         sb.append(getString());\n       } else if (type == Token.FUNCTION) {\n         sb.append(' ');\n-        // In the case of JsDoc trees, the first child is often not a string\n-        // which causes exceptions to be thrown when calling toString or\n-        // toStringTree.\n-        if (first == null || first.getType() != Token.NAME) {\n-          sb.append(\"<invalid>\");\n-        } else {\n-          sb.append(first.getString());\n-        }\n+        int lineno = getLineno();\n       } else if (this instanceof ScriptOrFnNode) {\n         ScriptOrFnNode sof = (ScriptOrFnNode) this;\n         if (this instanceof FunctionNode) {\n@@ -1411,7 +1404,8 @@\n    */\n   NodeMismatch checkTreeEqualsImpl(Node node2) {\n     if (!isEquivalentTo(node2, false, false)) {\n-      return new NodeMismatch(this, node2);\n+      boolean nullKey = false;\n+\treturn new NodeMismatch(this, node2);\n     }\n \n     NodeMismatch res = null;\n@@ -1424,7 +1418,6 @@\n       }\n       res = n.checkTreeEqualsImpl(n2);\n       if (res != null) {\n-        return res;\n       }\n     }\n     return res;\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 06:51:37.283732609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1451/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 07:09:08.644261793 -0500\n@@ -359,7 +359,7 @@\n           case LP:              return \"LP\";\n           case RP:              return \"RP\";\n           case COMMA:           return \"COMMA\";\n-          case ASSIGN:          return \"ASSIGN\";\n+          case ASSIGN:          ;\n           case ASSIGN_BITOR:    return \"ASSIGN_BITOR\";\n           case ASSIGN_BITXOR:   return \"ASSIGN_BITXOR\";\n           case ASSIGN_BITAND:   return \"ASSIGN_BITAND\";\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 88, 
          "faulty": "canRemove=true;", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 943, 
          "faulty": "if (first == null || first.getType() != Token.NAME) {\n  sb.append(\"<invalid>\");\n}\n else {\n  sb.append(first.getString());\n}", 
          "type": "Replace", 
          "seed": "int lineno=getLineno();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 221, 
          "faulty": "return \"synthetic\";", 
          "type": "Delete", 
          "seed": "consumeToken();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1427, 
          "faulty": "return res;", 
          "type": "Delete", 
          "seed": "boolean first=true;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 88, 
          "faulty": "canRemove=true;", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 943, 
          "faulty": "if (first == null || first.getType() != Token.NAME) {\n  sb.append(\"<invalid>\");\n}\n else {\n  sb.append(first.getString());\n}", 
          "type": "Replace", 
          "seed": "int lineno=getLineno();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 221, 
          "faulty": "return \"synthetic\";", 
          "type": "Delete", 
          "seed": "consumeToken();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1427, 
          "faulty": "return res;", 
          "type": "Delete", 
          "seed": "boolean first=true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 362, 
          "faulty": "return \"ASSIGN\";", 
          "type": "Delete", 
          "seed": "return Token.LP;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 221, 
          "faulty": "return \"synthetic\";", 
          "type": "Delete", 
          "seed": "return Token.XMLATTR;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 221, 
          "faulty": "return \"synthetic\";", 
          "type": "Delete", 
          "seed": "consumeToken();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1427, 
          "faulty": "return res;", 
          "type": "Delete", 
          "seed": "return Token.STRING;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1414, 
          "faulty": "return new NodeMismatch(this,node2);", 
          "type": "InsertBefore", 
          "seed": "boolean nullKey=false;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:51:37.259744610 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_293/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:59:00.133048136 -0500\n@@ -85,7 +85,6 @@\n           boolean canRemove = false;\n \n           if (specializationState == null) {\n-            canRemove = true;\n           } else {\n             Node specializableFunction =\n               getSpecializableFunctionFromSymbol(declaration);\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 88, 
          "faulty": "canRemove=true;", 
          "type": "Delete", 
          "seed": "return null;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:51:37.259744610 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1867/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 07:12:45.740550320 -0500\n@@ -85,7 +85,6 @@\n           boolean canRemove = false;\n \n           if (specializationState == null) {\n-            canRemove = true;\n           } else {\n             Node specializableFunction =\n               getSpecializableFunctionFromSymbol(declaration);\n@@ -96,11 +95,6 @@\n               canRemove = true;\n             }\n           }\n-\n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 06:51:37.279734609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1867/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 07:12:45.744550378 -0500\n@@ -1424,7 +1424,6 @@\n       }\n       res = n.checkTreeEqualsImpl(n2);\n       if (res != null) {\n-        return res;\n       }\n     }\n     return res;\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 06:51:37.283732609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1867/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 07:12:45.744550378 -0500\n@@ -307,7 +307,7 @@\n           case TYPEOF:          return \"TYPEOF\";\n           case GETPROP:         return \"GETPROP\";\n           case SETPROP:         return \"SETPROP\";\n-          case GETELEM:         return \"GETELEM\";\n+          case GETELEM:         ;\n           case SETELEM:         return \"SETELEM\";\n           case CALL:            return \"CALL\";\n           case NAME:            return \"NAME\";\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 88, 
          "faulty": "canRemove=true;", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1427, 
          "faulty": "return res;", 
          "type": "Delete", 
          "seed": "return Token.STRING;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 310, 
          "faulty": "return \"GETELEM\";", 
          "type": "Delete", 
          "seed": "consumeToken();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:51:37.259744610 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_697/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 07:02:42.322268025 -0500\n@@ -85,7 +85,6 @@\n           boolean canRemove = false;\n \n           if (specializationState == null) {\n-            canRemove = true;\n           } else {\n             Node specializableFunction =\n               getSpecializableFunctionFromSymbol(declaration);\n@@ -96,11 +95,6 @@\n               canRemove = true;\n             }\n           }\n-\n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 06:51:37.279734609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_697/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 07:02:42.326267985 -0500\n@@ -218,7 +218,7 @@\n         case QUOTED_PROP:        return \"quoted\";\n         case OPT_ARG_NAME:       return \"opt_arg\";\n \n-        case SYNTHETIC_BLOCK_PROP: return \"synthetic\";\n+        case SYNTHETIC_BLOCK_PROP: ;\n         case EMPTY_BLOCK:        return \"empty_block\";\n         case ORIGINALNAME_PROP:  return \"originalname\";\n         case SIDE_EFFECT_FLAGS:  return \"side_effect_flags\";\n@@ -1424,7 +1424,6 @@\n       }\n       res = n.checkTreeEqualsImpl(n2);\n       if (res != null) {\n-        return res;\n       }\n     }\n     return res;\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 06:51:37.283732609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_697/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 07:02:42.326267985 -0500\n@@ -315,7 +315,7 @@\n           case NUMBER:          return \"NUMBER\";\n           case STRING:          return \"STRING\";\n           case NULL:            return \"NULL\";\n-          case THIS:            return \"THIS\";\n+          case THIS:            ;\n           case FALSE:           return \"FALSE\";\n           case TRUE:            return \"TRUE\";\n           case SHEQ:            return \"SHEQ\";\n@@ -359,7 +359,7 @@\n           case LP:              return \"LP\";\n           case RP:              return \"RP\";\n           case COMMA:           return \"COMMA\";\n-          case ASSIGN:          return \"ASSIGN\";\n+          case ASSIGN:          ;\n           case ASSIGN_BITOR:    return \"ASSIGN_BITOR\";\n           case ASSIGN_BITXOR:   return \"ASSIGN_BITXOR\";\n           case ASSIGN_BITAND:   return \"ASSIGN_BITAND\";\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 88, 
          "faulty": "canRemove=true;", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1427, 
          "faulty": "return res;", 
          "type": "Delete", 
          "seed": "return Token.SEMI;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 102, 
          "faulty": "changed=true;", 
          "type": "InsertBefore", 
          "seed": "StringBuilder builder=new StringBuilder();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 221, 
          "faulty": "return \"synthetic\";", 
          "type": "Delete", 
          "seed": "consumeToken();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 318, 
          "faulty": "return \"THIS\";", 
          "type": "Delete", 
          "seed": "return Token.STRING;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 362, 
          "faulty": "return \"ASSIGN\";", 
          "type": "Delete", 
          "seed": "return Token.LP;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:51:37.259744610 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_159/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:57:45.792598183 -0500\n@@ -84,19 +84,6 @@\n         for (Symbol declaration : nameInfo.getDeclarations()) {\n           boolean canRemove = false;\n \n-          if (specializationState == null) {\n-            canRemove = true;\n-          } else {\n-            Node specializableFunction =\n-              getSpecializableFunctionFromSymbol(declaration);\n-\n-            if (specializableFunction != null) {\n-              specializationState.reportRemovedFunction(\n-                  specializableFunction, null);\n-              canRemove = true;\n-            }\n-          }\n-\n           if (canRemove) {\n             declaration.remove();\n             changed = true;\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 06:51:37.283732609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_159/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 06:57:45.792598183 -0500\n@@ -359,7 +359,7 @@\n           case LP:              return \"LP\";\n           case RP:              return \"RP\";\n           case COMMA:           return \"COMMA\";\n-          case ASSIGN:          return \"ASSIGN\";\n+          case ASSIGN:          ;\n           case ASSIGN_BITOR:    return \"ASSIGN_BITOR\";\n           case ASSIGN_BITXOR:   return \"ASSIGN_BITXOR\";\n           case ASSIGN_BITAND:   return \"ASSIGN_BITAND\";\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 362, 
          "faulty": "return \"ASSIGN\";", 
          "type": "Delete", 
          "seed": "Node pn=memberExpr(true);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 87, 
          "faulty": "if (specializationState == null) {\n  canRemove=true;\n}\n else {\n  Node specializableFunction=getSpecializableFunctionFromSymbol(declaration);\n  if (specializableFunction != null) {\n    specializationState.reportRemovedFunction(specializableFunction,null);\n    canRemove=true;\n  }\n}", 
          "type": "Delete", 
          "seed": "return this;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:51:37.259744610 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_580/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 07:01:40.698971035 -0500\n@@ -85,7 +85,6 @@\n           boolean canRemove = false;\n \n           if (specializationState == null) {\n-            canRemove = true;\n           } else {\n             Node specializableFunction =\n               getSpecializableFunctionFromSymbol(declaration);\n@@ -96,11 +95,6 @@\n               canRemove = true;\n             }\n           }\n-\n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 06:51:37.279734609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_580/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 07:01:40.698971035 -0500\n@@ -1424,7 +1424,6 @@\n       }\n       res = n.checkTreeEqualsImpl(n2);\n       if (res != null) {\n-        return res;\n       }\n     }\n     return res;\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 06:51:37.283732609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_580/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 07:01:40.698971035 -0500\n@@ -356,7 +356,7 @@\n           case RB:              return \"RB\";\n           case LC:              return \"LC\";\n           case RC:              return \"RC\";\n-          case LP:              return \"LP\";\n+          case LP:              ;\n           case RP:              return \"RP\";\n           case COMMA:           return \"COMMA\";\n           case ASSIGN:          return \"ASSIGN\";\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 88, 
          "faulty": "canRemove=true;", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1427, 
          "faulty": "return res;", 
          "type": "Delete", 
          "seed": "return Token.SEMI;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 359, 
          "faulty": "return \"LP\";", 
          "type": "Delete", 
          "seed": "case ENTERWITH:"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:51:37.259744610 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_784/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 07:03:27.393867924 -0500\n@@ -85,7 +85,6 @@\n           boolean canRemove = false;\n \n           if (specializationState == null) {\n-            canRemove = true;\n           } else {\n             Node specializableFunction =\n               getSpecializableFunctionFromSymbol(declaration);\n@@ -96,11 +95,6 @@\n               canRemove = true;\n             }\n           }\n-\n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 06:51:37.279734609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_784/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 07:03:27.393867924 -0500\n@@ -218,7 +218,7 @@\n         case QUOTED_PROP:        return \"quoted\";\n         case OPT_ARG_NAME:       return \"opt_arg\";\n \n-        case SYNTHETIC_BLOCK_PROP: return \"synthetic\";\n+        case SYNTHETIC_BLOCK_PROP: ;\n         case EMPTY_BLOCK:        return \"empty_block\";\n         case ORIGINALNAME_PROP:  return \"originalname\";\n         case SIDE_EFFECT_FLAGS:  return \"side_effect_flags\";\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 221, 
          "faulty": "return \"synthetic\";", 
          "type": "Delete", 
          "seed": "consumeToken();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 88, 
          "faulty": "canRemove=true;", 
          "type": "Delete", 
          "seed": "return false;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:51:37.259744610 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_326/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:59:18.849103492 -0500\n@@ -96,11 +96,6 @@\n               canRemove = true;\n             }\n           }\n-\n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 06:51:37.279734609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_326/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 06:59:18.853103505 -0500\n@@ -218,7 +218,7 @@\n         case QUOTED_PROP:        return \"quoted\";\n         case OPT_ARG_NAME:       return \"opt_arg\";\n \n-        case SYNTHETIC_BLOCK_PROP: return \"synthetic\";\n+        case SYNTHETIC_BLOCK_PROP: ;\n         case EMPTY_BLOCK:        return \"empty_block\";\n         case ORIGINALNAME_PROP:  return \"originalname\";\n         case SIDE_EFFECT_FLAGS:  return \"side_effect_flags\";\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 221, 
          "faulty": "return \"synthetic\";", 
          "type": "Delete", 
          "seed": "consumeToken();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 102, 
          "faulty": "changed=true;", 
          "type": "Replace", 
          "seed": "return 0;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:51:37.259744610 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1411/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 07:08:48.227696627 -0500\n@@ -96,11 +96,6 @@\n               canRemove = true;\n             }\n           }\n-\n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 06:51:37.279734609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1411/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 07:08:48.227696627 -0500\n@@ -218,7 +218,7 @@\n         case QUOTED_PROP:        return \"quoted\";\n         case OPT_ARG_NAME:       return \"opt_arg\";\n \n-        case SYNTHETIC_BLOCK_PROP: return \"synthetic\";\n+        case SYNTHETIC_BLOCK_PROP: ;\n         case EMPTY_BLOCK:        return \"empty_block\";\n         case ORIGINALNAME_PROP:  return \"originalname\";\n         case SIDE_EFFECT_FLAGS:  return \"side_effect_flags\";\n@@ -1411,7 +1411,8 @@\n    */\n   NodeMismatch checkTreeEqualsImpl(Node node2) {\n     if (!isEquivalentTo(node2, false, false)) {\n-      return new NodeMismatch(this, node2);\n+      boolean nullKey = false;\n+\treturn new NodeMismatch(this, node2);\n     }\n \n     NodeMismatch res = null;\n@@ -1424,7 +1425,6 @@\n       }\n       res = n.checkTreeEqualsImpl(n2);\n       if (res != null) {\n-        return res;\n       }\n     }\n     return res;\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 06:51:37.283732609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1411/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 07:08:48.231696741 -0500\n@@ -315,7 +315,7 @@\n           case NUMBER:          return \"NUMBER\";\n           case STRING:          return \"STRING\";\n           case NULL:            return \"NULL\";\n-          case THIS:            return \"THIS\";\n+          case THIS:            ;\n           case FALSE:           return \"FALSE\";\n           case TRUE:            return \"TRUE\";\n           case SHEQ:            return \"SHEQ\";\n@@ -359,7 +359,7 @@\n           case LP:              return \"LP\";\n           case RP:              return \"RP\";\n           case COMMA:           return \"COMMA\";\n-          case ASSIGN:          return \"ASSIGN\";\n+          case ASSIGN:          ;\n           case ASSIGN_BITOR:    return \"ASSIGN_BITOR\";\n           case ASSIGN_BITXOR:   return \"ASSIGN_BITXOR\";\n           case ASSIGN_BITAND:   return \"ASSIGN_BITAND\";\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 221, 
          "faulty": "return \"synthetic\";", 
          "type": "Delete", 
          "seed": "consumeToken();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 318, 
          "faulty": "return \"THIS\";", 
          "type": "Delete", 
          "seed": "return Token.STRING;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 362, 
          "faulty": "return \"ASSIGN\";", 
          "type": "Delete", 
          "seed": "return Token.LP;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 221, 
          "faulty": "return \"synthetic\";", 
          "type": "Delete", 
          "seed": "return Token.XMLATTR;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 221, 
          "faulty": "return \"synthetic\";", 
          "type": "Delete", 
          "seed": "consumeToken();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1427, 
          "faulty": "return res;", 
          "type": "Delete", 
          "seed": "return Token.STRING;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1414, 
          "faulty": "return new NodeMismatch(this,node2);", 
          "type": "InsertBefore", 
          "seed": "boolean nullKey=false;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:51:37.259744610 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1192/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 07:06:56.468862826 -0500\n@@ -85,7 +85,6 @@\n           boolean canRemove = false;\n \n           if (specializationState == null) {\n-            canRemove = true;\n           } else {\n             Node specializableFunction =\n               getSpecializableFunctionFromSymbol(declaration);\n@@ -96,11 +95,6 @@\n               canRemove = true;\n             }\n           }\n-\n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 06:51:37.279734609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1192/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 07:06:56.468862826 -0500\n@@ -218,7 +218,7 @@\n         case QUOTED_PROP:        return \"quoted\";\n         case OPT_ARG_NAME:       return \"opt_arg\";\n \n-        case SYNTHETIC_BLOCK_PROP: return \"synthetic\";\n+        case SYNTHETIC_BLOCK_PROP: ;\n         case EMPTY_BLOCK:        return \"empty_block\";\n         case ORIGINALNAME_PROP:  return \"originalname\";\n         case SIDE_EFFECT_FLAGS:  return \"side_effect_flags\";\n@@ -1382,7 +1382,8 @@\n   public String checkTreeEquals(Node node2) {\n       NodeMismatch diff = checkTreeEqualsImpl(node2);\n       if (diff != null) {\n-        return \"Node tree inequality:\" +\n+        int c;\n+\t\treturn \"Node tree inequality:\" +\n             \"\\nTree1:\\n\" + toStringTree() +\n             \"\\n\\nTree2:\\n\" + node2.toStringTree() +\n             \"\\n\\nSubtree1: \" + diff.nodeA.toStringTree() +\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 06:51:37.283732609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1192/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 07:06:56.472862816 -0500\n@@ -359,7 +359,7 @@\n           case LP:              return \"LP\";\n           case RP:              return \"RP\";\n           case COMMA:           return \"COMMA\";\n-          case ASSIGN:          return \"ASSIGN\";\n+          case ASSIGN:          ;\n           case ASSIGN_BITOR:    return \"ASSIGN_BITOR\";\n           case ASSIGN_BITXOR:   return \"ASSIGN_BITXOR\";\n           case ASSIGN_BITAND:   return \"ASSIGN_BITAND\";\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 88, 
          "faulty": "canRemove=true;", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 221, 
          "faulty": "return \"synthetic\";", 
          "type": "Delete", 
          "seed": "consumeToken();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 221, 
          "faulty": "return \"synthetic\";", 
          "type": "Delete", 
          "seed": "consumeToken();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 362, 
          "faulty": "return \"ASSIGN\";", 
          "type": "Delete", 
          "seed": "return Token.LP;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1385, 
          "faulty": "return \"Node tree inequality:\" + \"\\nTree1:\\n\" + toStringTree() + \"\\n\\nTree2:\\n\"+ node2.toStringTree()+ \"\\n\\nSubtree1: \"+ diff.nodeA.toStringTree()+ \"\\n\\nSubtree2: \"+ diff.nodeB.toStringTree();", 
          "type": "InsertBefore", 
          "seed": "int c;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:51:37.259744610 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_871/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 07:04:09.637564887 -0500\n@@ -96,11 +96,6 @@\n               canRemove = true;\n             }\n           }\n-\n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java\t2018-12-02 06:51:39.210768564 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_871/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java\t2018-12-02 07:04:09.637564887 -0500\n@@ -532,7 +532,8 @@\n \n     @Override\n     public void remove() {\n-      NodeUtil.removeChild(exprNode.getParent(), exprNode);\n+      int index = -1;\n+\tNodeUtil.removeChild(exprNode.getParent(), exprNode);\n     }\n \n     @Override\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 06:51:37.283732609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_871/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 07:04:09.641564863 -0500\n@@ -315,7 +315,7 @@\n           case NUMBER:          return \"NUMBER\";\n           case STRING:          return \"STRING\";\n           case NULL:            return \"NULL\";\n-          case THIS:            return \"THIS\";\n+          case THIS:            ;\n           case FALSE:           return \"FALSE\";\n           case TRUE:            return \"TRUE\";\n           case SHEQ:            return \"SHEQ\";\n@@ -359,7 +359,7 @@\n           case LP:              return \"LP\";\n           case RP:              return \"RP\";\n           case COMMA:           return \"COMMA\";\n-          case ASSIGN:          return \"ASSIGN\";\n+          case ASSIGN:          ;\n           case ASSIGN_BITOR:    return \"ASSIGN_BITOR\";\n           case ASSIGN_BITXOR:   return \"ASSIGN_BITXOR\";\n           case ASSIGN_BITAND:   return \"ASSIGN_BITAND\";\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 318, 
          "faulty": "return \"THIS\";", 
          "type": "Delete", 
          "seed": "return Token.STRING;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 362, 
          "faulty": "return \"ASSIGN\";", 
          "type": "Delete", 
          "seed": "return Token.LP;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 102, 
          "faulty": "changed=true;", 
          "type": "InsertBefore", 
          "seed": "StringBuilder builder=new StringBuilder();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java", 
          "line": 535, 
          "faulty": "NodeUtil.removeChild(exprNode.getParent(),exprNode);", 
          "type": "InsertBefore", 
          "seed": "int index=-1;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:51:37.259744610 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_648/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 07:02:15.334551604 -0500\n@@ -85,7 +85,6 @@\n           boolean canRemove = false;\n \n           if (specializationState == null) {\n-            canRemove = true;\n           } else {\n             Node specializableFunction =\n               getSpecializableFunctionFromSymbol(declaration);\n@@ -96,11 +95,6 @@\n               canRemove = true;\n             }\n           }\n-\n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 06:51:37.279734609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_648/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 07:02:15.334551604 -0500\n@@ -218,7 +218,7 @@\n         case QUOTED_PROP:        return \"quoted\";\n         case OPT_ARG_NAME:       return \"opt_arg\";\n \n-        case SYNTHETIC_BLOCK_PROP: return \"synthetic\";\n+        case SYNTHETIC_BLOCK_PROP: ;\n         case EMPTY_BLOCK:        return \"empty_block\";\n         case ORIGINALNAME_PROP:  return \"originalname\";\n         case SIDE_EFFECT_FLAGS:  return \"side_effect_flags\";\n@@ -1424,7 +1424,6 @@\n       }\n       res = n.checkTreeEqualsImpl(n2);\n       if (res != null) {\n-        return res;\n       }\n     }\n     return res;\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 06:51:37.283732609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_648/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 07:02:15.338551561 -0500\n@@ -315,7 +315,7 @@\n           case NUMBER:          return \"NUMBER\";\n           case STRING:          return \"STRING\";\n           case NULL:            return \"NULL\";\n-          case THIS:            return \"THIS\";\n+          case THIS:            ;\n           case FALSE:           return \"FALSE\";\n           case TRUE:            return \"TRUE\";\n           case SHEQ:            return \"SHEQ\";\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 88, 
          "faulty": "canRemove=true;", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1427, 
          "faulty": "return res;", 
          "type": "Delete", 
          "seed": "return Token.SEMI;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 221, 
          "faulty": "return \"synthetic\";", 
          "type": "Delete", 
          "seed": "consumeToken();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1427, 
          "faulty": "return res;", 
          "type": "Delete", 
          "seed": "boolean first=true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 318, 
          "faulty": "return \"THIS\";", 
          "type": "Delete", 
          "seed": "return Token.XMLATTR;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:51:37.259744610 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1672/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 07:11:04.162869768 -0500\n@@ -85,7 +85,6 @@\n           boolean canRemove = false;\n \n           if (specializationState == null) {\n-            canRemove = true;\n           } else {\n             Node specializableFunction =\n               getSpecializableFunctionFromSymbol(declaration);\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 06:51:37.279734609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1672/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 07:11:04.166869844 -0500\n@@ -1424,7 +1424,7 @@\n       }\n       res = n.checkTreeEqualsImpl(n2);\n       if (res != null) {\n-        return res;\n+        Kit.codeBug();\n       }\n     }\n     return res;\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 06:51:37.283732609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1672/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 07:11:04.166869844 -0500\n@@ -307,7 +307,7 @@\n           case TYPEOF:          return \"TYPEOF\";\n           case GETPROP:         return \"GETPROP\";\n           case SETPROP:         return \"SETPROP\";\n-          case GETELEM:         return \"GETELEM\";\n+          case GETELEM:         return \"return\";\n           case SETELEM:         return \"SETELEM\";\n           case CALL:            return \"CALL\";\n           case NAME:            return \"NAME\";\n@@ -315,7 +315,7 @@\n           case NUMBER:          return \"NUMBER\";\n           case STRING:          return \"STRING\";\n           case NULL:            return \"NULL\";\n-          case THIS:            return \"THIS\";\n+          case THIS:            ;\n           case FALSE:           return \"FALSE\";\n           case TRUE:            return \"TRUE\";\n           case SHEQ:            return \"SHEQ\";\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 88, 
          "faulty": "canRemove=true;", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 318, 
          "faulty": "return \"THIS\";", 
          "type": "Delete", 
          "seed": "return Token.STRING;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1427, 
          "faulty": "return res;", 
          "type": "Replace", 
          "seed": "Kit.codeBug();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 88, 
          "faulty": "canRemove=true;", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 310, 
          "faulty": "return \"GETELEM\";", 
          "type": "Replace", 
          "seed": "return \"return\";"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 318, 
          "faulty": "return \"THIS\";", 
          "type": "Delete", 
          "seed": "return Token.STRING;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:51:37.259744610 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1644/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 07:10:49.758591182 -0500\n@@ -96,11 +96,6 @@\n               canRemove = true;\n             }\n           }\n-\n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 06:51:37.279734609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1644/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 07:10:49.758591182 -0500\n@@ -218,7 +218,7 @@\n         case QUOTED_PROP:        return \"quoted\";\n         case OPT_ARG_NAME:       return \"opt_arg\";\n \n-        case SYNTHETIC_BLOCK_PROP: return \"synthetic\";\n+        case SYNTHETIC_BLOCK_PROP: ;\n         case EMPTY_BLOCK:        return \"empty_block\";\n         case ORIGINALNAME_PROP:  return \"originalname\";\n         case SIDE_EFFECT_FLAGS:  return \"side_effect_flags\";\n@@ -1424,7 +1424,6 @@\n       }\n       res = n.checkTreeEqualsImpl(n2);\n       if (res != null) {\n-        return res;\n       }\n     }\n     return res;\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 06:51:37.283732609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1644/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 07:10:49.762591261 -0500\n@@ -307,7 +307,7 @@\n           case TYPEOF:          return \"TYPEOF\";\n           case GETPROP:         return \"GETPROP\";\n           case SETPROP:         return \"SETPROP\";\n-          case GETELEM:         return \"GETELEM\";\n+          case GETELEM:         ;\n           case SETELEM:         return \"SETELEM\";\n           case CALL:            return \"CALL\";\n           case NAME:            return \"NAME\";\n@@ -315,7 +315,7 @@\n           case NUMBER:          return \"NUMBER\";\n           case STRING:          return \"STRING\";\n           case NULL:            return \"NULL\";\n-          case THIS:            return \"THIS\";\n+          case THIS:            ;\n           case FALSE:           return \"FALSE\";\n           case TRUE:            return \"TRUE\";\n           case SHEQ:            return \"SHEQ\";\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 221, 
          "faulty": "return \"synthetic\";", 
          "type": "Delete", 
          "seed": "consumeToken();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1427, 
          "faulty": "return res;", 
          "type": "Delete", 
          "seed": "boolean first=true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 318, 
          "faulty": "return \"THIS\";", 
          "type": "Delete", 
          "seed": "return Token.XMLATTR;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 310, 
          "faulty": "return \"GETELEM\";", 
          "type": "Replace", 
          "seed": "return \"return\";"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 310, 
          "faulty": "return \"GETELEM\";", 
          "type": "Delete", 
          "seed": "Node pn=addExpr();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:51:37.259744610 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1291/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 07:07:49.217837126 -0500\n@@ -96,11 +96,6 @@\n               canRemove = true;\n             }\n           }\n-\n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java\t2018-12-02 06:51:39.210768564 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1291/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java\t2018-12-02 07:07:49.217837126 -0500\n@@ -532,7 +532,6 @@\n \n     @Override\n     public void remove() {\n-      NodeUtil.removeChild(exprNode.getParent(), exprNode);\n     }\n \n     @Override\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 06:51:37.279734609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1291/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 07:07:49.217837126 -0500\n@@ -218,7 +218,7 @@\n         case QUOTED_PROP:        return \"quoted\";\n         case OPT_ARG_NAME:       return \"opt_arg\";\n \n-        case SYNTHETIC_BLOCK_PROP: return \"synthetic\";\n+        case SYNTHETIC_BLOCK_PROP: ;\n         case EMPTY_BLOCK:        return \"empty_block\";\n         case ORIGINALNAME_PROP:  return \"originalname\";\n         case SIDE_EFFECT_FLAGS:  return \"side_effect_flags\";\n@@ -1424,7 +1424,6 @@\n       }\n       res = n.checkTreeEqualsImpl(n2);\n       if (res != null) {\n-        return res;\n       }\n     }\n     return res;\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 06:51:37.283732609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1291/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 07:07:49.221837266 -0500\n@@ -359,7 +359,7 @@\n           case LP:              return \"LP\";\n           case RP:              return \"RP\";\n           case COMMA:           return \"COMMA\";\n-          case ASSIGN:          return \"ASSIGN\";\n+          case ASSIGN:          ;\n           case ASSIGN_BITOR:    return \"ASSIGN_BITOR\";\n           case ASSIGN_BITXOR:   return \"ASSIGN_BITXOR\";\n           case ASSIGN_BITAND:   return \"ASSIGN_BITAND\";\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 221, 
          "faulty": "return \"synthetic\";", 
          "type": "Delete", 
          "seed": "consumeToken();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1427, 
          "faulty": "return res;", 
          "type": "Delete", 
          "seed": "boolean first=true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 362, 
          "faulty": "return \"ASSIGN\";", 
          "type": "Delete", 
          "seed": "case 2:"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java", 
          "line": 535, 
          "faulty": "NodeUtil.removeChild(exprNode.getParent(),exprNode);", 
          "type": "Delete", 
          "seed": "int index=-1;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:51:37.259744610 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_196/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:58:05.908815064 -0500\n@@ -85,7 +85,6 @@\n           boolean canRemove = false;\n \n           if (specializationState == null) {\n-            canRemove = true;\n           } else {\n             Node specializableFunction =\n               getSpecializableFunctionFromSymbol(declaration);\n@@ -99,7 +98,7 @@\n \n           if (canRemove) {\n             declaration.remove();\n-            changed = true;\n+            StringBuilder builder = new StringBuilder();\n           }\n         }\n \n@@ -108,7 +107,8 @@\n     }\n \n     if (changed) {\n-      compiler.reportCodeChange();\n+      int index = -1;\n+\tcompiler.reportCodeChange();\n     }\n   }\n \n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 102, 
          "faulty": "changed=true;", 
          "type": "Delete", 
          "seed": "return;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 102, 
          "faulty": "changed=true;", 
          "type": "InsertBefore", 
          "seed": "StringBuilder builder=new StringBuilder();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 111, 
          "faulty": "compiler.reportCodeChange();", 
          "type": "InsertBefore", 
          "seed": "int index=-1;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 88, 
          "faulty": "canRemove=true;", 
          "type": "Delete", 
          "seed": "return null;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:51:37.259744610 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1775/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 07:11:58.107818824 -0500\n@@ -85,7 +85,6 @@\n           boolean canRemove = false;\n \n           if (specializationState == null) {\n-            canRemove = true;\n           } else {\n             Node specializableFunction =\n               getSpecializableFunctionFromSymbol(declaration);\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 06:51:37.283732609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1775/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 07:11:58.111818889 -0500\n@@ -315,7 +315,10 @@\n           case NUMBER:          return \"NUMBER\";\n           case STRING:          return \"STRING\";\n           case NULL:            return \"NULL\";\n-          case THIS:            return \"THIS\";\n+          case THIS:            {\n+\t\t\t\tStringBuilder sb = new StringBuilder();\n+\t\t\t\treturn \"THIS\";\n+\t\t\t}\n           case FALSE:           return \"FALSE\";\n           case TRUE:            return \"TRUE\";\n           case SHEQ:            return \"SHEQ\";\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 88, 
          "faulty": "canRemove=true;", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 318, 
          "faulty": "return \"THIS\";", 
          "type": "InsertBefore", 
          "seed": "StringBuilder sb=new StringBuilder();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:51:37.259744610 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1033/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 07:05:35.317121394 -0500\n@@ -85,7 +85,6 @@\n           boolean canRemove = false;\n \n           if (specializationState == null) {\n-            canRemove = true;\n           } else {\n             Node specializableFunction =\n               getSpecializableFunctionFromSymbol(declaration);\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 06:51:37.279734609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1033/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 07:05:35.321121378 -0500\n@@ -937,14 +937,7 @@\n         sb.append(getString());\n       } else if (type == Token.FUNCTION) {\n         sb.append(' ');\n-        // In the case of JsDoc trees, the first child is often not a string\n-        // which causes exceptions to be thrown when calling toString or\n-        // toStringTree.\n-        if (first == null || first.getType() != Token.NAME) {\n-          sb.append(\"<invalid>\");\n-        } else {\n-          sb.append(first.getString());\n-        }\n+        int lineno = getLineno();\n       } else if (this instanceof ScriptOrFnNode) {\n         ScriptOrFnNode sof = (ScriptOrFnNode) this;\n         if (this instanceof FunctionNode) {\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 06:51:37.283732609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1033/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 07:05:35.321121378 -0500\n@@ -359,7 +359,7 @@\n           case LP:              return \"LP\";\n           case RP:              return \"RP\";\n           case COMMA:           return \"COMMA\";\n-          case ASSIGN:          return \"ASSIGN\";\n+          case ASSIGN:          Context cx = Context.getCurrentContext();\n           case ASSIGN_BITOR:    return \"ASSIGN_BITOR\";\n           case ASSIGN_BITXOR:   return \"ASSIGN_BITXOR\";\n           case ASSIGN_BITAND:   return \"ASSIGN_BITAND\";\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 88, 
          "faulty": "canRemove=true;", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 943, 
          "faulty": "if (first == null || first.getType() != Token.NAME) {\n  sb.append(\"<invalid>\");\n}\n else {\n  sb.append(first.getString());\n}", 
          "type": "Replace", 
          "seed": "int lineno=getLineno();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 362, 
          "faulty": "return \"ASSIGN\";", 
          "type": "Replace", 
          "seed": "Context cx=Context.getCurrentContext();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:51:37.259744610 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1368/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 07:08:27.371079846 -0500\n@@ -96,14 +96,7 @@\n               canRemove = true;\n             }\n           }\n-\n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n         }\n-\n-        logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n       }\n     }\n \n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 06:51:37.279734609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1368/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 07:08:27.371079846 -0500\n@@ -218,7 +218,7 @@\n         case QUOTED_PROP:        return \"quoted\";\n         case OPT_ARG_NAME:       return \"opt_arg\";\n \n-        case SYNTHETIC_BLOCK_PROP: return \"synthetic\";\n+        case SYNTHETIC_BLOCK_PROP: ;\n         case EMPTY_BLOCK:        return \"empty_block\";\n         case ORIGINALNAME_PROP:  return \"originalname\";\n         case SIDE_EFFECT_FLAGS:  return \"side_effect_flags\";\n@@ -937,14 +937,7 @@\n         sb.append(getString());\n       } else if (type == Token.FUNCTION) {\n         sb.append(' ');\n-        // In the case of JsDoc trees, the first child is often not a string\n-        // which causes exceptions to be thrown when calling toString or\n-        // toStringTree.\n-        if (first == null || first.getType() != Token.NAME) {\n-          sb.append(\"<invalid>\");\n-        } else {\n-          sb.append(first.getString());\n-        }\n+        int lineno = getLineno();\n       } else if (this instanceof ScriptOrFnNode) {\n         ScriptOrFnNode sof = (ScriptOrFnNode) this;\n         if (this instanceof FunctionNode) {\n@@ -1424,7 +1417,6 @@\n       }\n       res = n.checkTreeEqualsImpl(n2);\n       if (res != null) {\n-        return res;\n       }\n     }\n     return res;\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 06:51:37.283732609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1368/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 07:08:27.375079968 -0500\n@@ -315,7 +315,7 @@\n           case NUMBER:          return \"NUMBER\";\n           case STRING:          return \"STRING\";\n           case NULL:            return \"NULL\";\n-          case THIS:            return \"THIS\";\n+          case THIS:            ;\n           case FALSE:           return \"FALSE\";\n           case TRUE:            return \"TRUE\";\n           case SHEQ:            return \"SHEQ\";\n@@ -359,7 +359,7 @@\n           case LP:              return \"LP\";\n           case RP:              return \"RP\";\n           case COMMA:           return \"COMMA\";\n-          case ASSIGN:          return \"ASSIGN\";\n+          case ASSIGN:          Context cx = Context.getCurrentContext();\n           case ASSIGN_BITOR:    return \"ASSIGN_BITOR\";\n           case ASSIGN_BITXOR:   return \"ASSIGN_BITXOR\";\n           case ASSIGN_BITAND:   return \"ASSIGN_BITAND\";\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 221, 
          "faulty": "return \"synthetic\";", 
          "type": "Delete", 
          "seed": "consumeToken();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 318, 
          "faulty": "return \"THIS\";", 
          "type": "Delete", 
          "seed": "return Token.STRING;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 362, 
          "faulty": "return \"ASSIGN\";", 
          "type": "Delete", 
          "seed": "return Token.LP;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 221, 
          "faulty": "return \"synthetic\";", 
          "type": "Delete", 
          "seed": "return Token.XMLATTR;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 221, 
          "faulty": "return \"synthetic\";", 
          "type": "Delete", 
          "seed": "consumeToken();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1427, 
          "faulty": "return res;", 
          "type": "Delete", 
          "seed": "boolean first=true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 943, 
          "faulty": "if (first == null || first.getType() != Token.NAME) {\n  sb.append(\"<invalid>\");\n}\n else {\n  sb.append(first.getString());\n}", 
          "type": "Replace", 
          "seed": "int lineno=getLineno();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 362, 
          "faulty": "return \"ASSIGN\";", 
          "type": "Replace", 
          "seed": "Context cx=Context.getCurrentContext();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 106, 
          "faulty": "logger.fine(\"Removed unused prototype property: \" + nameInfo.name);", 
          "type": "Delete", 
          "seed": "int start=0;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:51:37.259744610 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_70/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:56:56.559815518 -0500\n@@ -96,11 +96,6 @@\n               canRemove = true;\n             }\n           }\n-\n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 06:51:37.279734609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_70/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 06:56:56.559815518 -0500\n@@ -1424,7 +1424,7 @@\n       }\n       res = n.checkTreeEqualsImpl(n2);\n       if (res != null) {\n-        return res;\n+        JSDocInfo varInfo = null;\n       }\n     }\n     return res;\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 06:51:37.283732609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_70/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 06:56:56.559815518 -0500\n@@ -359,7 +359,7 @@\n           case LP:              return \"LP\";\n           case RP:              return \"RP\";\n           case COMMA:           return \"COMMA\";\n-          case ASSIGN:          return \"ASSIGN\";\n+          case ASSIGN:          ;\n           case ASSIGN_BITOR:    return \"ASSIGN_BITOR\";\n           case ASSIGN_BITXOR:   return \"ASSIGN_BITXOR\";\n           case ASSIGN_BITAND:   return \"ASSIGN_BITAND\";\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 102, 
          "faulty": "changed=true;", 
          "type": "InsertBefore", 
          "seed": "StringBuilder builder=new StringBuilder();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1427, 
          "faulty": "return res;", 
          "type": "Replace", 
          "seed": "JSDocInfo varInfo=null;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 362, 
          "faulty": "return \"ASSIGN\";", 
          "type": "Delete", 
          "seed": "return \"BITOR\";"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:51:37.259744610 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1679/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 07:11:07.898940178 -0500\n@@ -85,7 +85,6 @@\n           boolean canRemove = false;\n \n           if (specializationState == null) {\n-            canRemove = true;\n           } else {\n             Node specializableFunction =\n               getSpecializableFunctionFromSymbol(declaration);\n@@ -96,11 +95,6 @@\n               canRemove = true;\n             }\n           }\n-\n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 06:51:37.279734609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1679/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 07:11:07.898940178 -0500\n@@ -1424,7 +1424,7 @@\n       }\n       res = n.checkTreeEqualsImpl(n2);\n       if (res != null) {\n-        return res;\n+        Kit.codeBug();\n       }\n     }\n     return res;\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 06:51:37.283732609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1679/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 07:11:07.902940253 -0500\n@@ -315,7 +315,10 @@\n           case NUMBER:          return \"NUMBER\";\n           case STRING:          return \"STRING\";\n           case NULL:            return \"NULL\";\n-          case THIS:            return \"THIS\";\n+          case THIS:            {\n+\t\t\t\tStringBuilder sb = new StringBuilder();\n+\t\t\t\treturn \"THIS\";\n+\t\t\t}\n           case FALSE:           return \"FALSE\";\n           case TRUE:            return \"TRUE\";\n           case SHEQ:            return \"SHEQ\";\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 318, 
          "faulty": "return \"THIS\";", 
          "type": "Delete", 
          "seed": "return Token.STRING;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 88, 
          "faulty": "canRemove=true;", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 318, 
          "faulty": "return \"THIS\";", 
          "type": "Delete", 
          "seed": "return Token.STRING;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1427, 
          "faulty": "return res;", 
          "type": "Replace", 
          "seed": "Kit.codeBug();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 318, 
          "faulty": "return \"THIS\";", 
          "type": "InsertBefore", 
          "seed": "StringBuilder sb=new StringBuilder();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:51:37.259744610 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_714/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 07:02:51.230181999 -0500\n@@ -96,11 +96,6 @@\n               canRemove = true;\n             }\n           }\n-\n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 06:51:37.283732609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_714/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 07:02:51.234181960 -0500\n@@ -315,7 +315,7 @@\n           case NUMBER:          return \"NUMBER\";\n           case STRING:          return \"STRING\";\n           case NULL:            return \"NULL\";\n-          case THIS:            return \"THIS\";\n+          case THIS:            ;\n           case FALSE:           return \"FALSE\";\n           case TRUE:            return \"TRUE\";\n           case SHEQ:            return \"SHEQ\";\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 318, 
          "faulty": "return \"THIS\";", 
          "type": "Delete", 
          "seed": "return Token.XMLATTR;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:51:37.259744610 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_555/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 07:01:27.675146532 -0500\n@@ -85,7 +85,6 @@\n           boolean canRemove = false;\n \n           if (specializationState == null) {\n-            canRemove = true;\n           } else {\n             Node specializableFunction =\n               getSpecializableFunctionFromSymbol(declaration);\n@@ -96,11 +95,6 @@\n               canRemove = true;\n             }\n           }\n-\n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 88, 
          "faulty": "canRemove=true;", 
          "type": "Delete", 
          "seed": "return null;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:51:37.259744610 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_673/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 07:02:29.850394664 -0500\n@@ -85,7 +85,6 @@\n           boolean canRemove = false;\n \n           if (specializationState == null) {\n-            canRemove = true;\n           } else {\n             Node specializableFunction =\n               getSpecializableFunctionFromSymbol(declaration);\n@@ -96,11 +95,6 @@\n               canRemove = true;\n             }\n           }\n-\n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java\t2018-12-02 06:51:39.210768564 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_673/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java\t2018-12-02 07:02:29.854394622 -0500\n@@ -532,7 +532,7 @@\n \n     @Override\n     public void remove() {\n-      NodeUtil.removeChild(exprNode.getParent(), exprNode);\n+      int index = -1;\n     }\n \n     @Override\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 06:51:37.283732609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_673/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 07:02:29.854394622 -0500\n@@ -315,7 +315,7 @@\n           case NUMBER:          return \"NUMBER\";\n           case STRING:          return \"STRING\";\n           case NULL:            return \"NULL\";\n-          case THIS:            return \"THIS\";\n+          case THIS:            ;\n           case FALSE:           return \"FALSE\";\n           case TRUE:            return \"TRUE\";\n           case SHEQ:            return \"SHEQ\";\n@@ -359,7 +359,7 @@\n           case LP:              return \"LP\";\n           case RP:              return \"RP\";\n           case COMMA:           return \"COMMA\";\n-          case ASSIGN:          return \"ASSIGN\";\n+          case ASSIGN:          ;\n           case ASSIGN_BITOR:    return \"ASSIGN_BITOR\";\n           case ASSIGN_BITXOR:   return \"ASSIGN_BITXOR\";\n           case ASSIGN_BITAND:   return \"ASSIGN_BITAND\";\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 102, 
          "faulty": "changed=true;", 
          "type": "InsertBefore", 
          "seed": "StringBuilder builder=new StringBuilder();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 318, 
          "faulty": "return \"THIS\";", 
          "type": "Delete", 
          "seed": "return Token.STRING;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 362, 
          "faulty": "return \"ASSIGN\";", 
          "type": "Delete", 
          "seed": "return Token.LP;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 362, 
          "faulty": "return \"ASSIGN\";", 
          "type": "Delete", 
          "seed": "Node pn=memberExpr(true);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 88, 
          "faulty": "canRemove=true;", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 101, 
          "faulty": "declaration.remove();", 
          "type": "InsertBefore", 
          "seed": "return;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java", 
          "line": 535, 
          "faulty": "NodeUtil.removeChild(exprNode.getParent(),exprNode);", 
          "type": "InsertBefore", 
          "seed": "int index=-1;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java", 
          "line": 535, 
          "faulty": "NodeUtil.removeChild(exprNode.getParent(),exprNode);", 
          "type": "Delete", 
          "seed": "return null;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:51:37.259744610 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_992/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 07:05:14.441211133 -0500\n@@ -81,7 +81,8 @@\n     boolean changed = false;\n     for (NameInfo nameInfo : allNameInfo) {\n       if (!nameInfo.isReferenced()) {\n-        for (Symbol declaration : nameInfo.getDeclarations()) {\n+        int start = 0;\n+\t\tfor (Symbol declaration : nameInfo.getDeclarations()) {\n           boolean canRemove = false;\n \n           if (specializationState == null) {\n@@ -96,11 +97,6 @@\n               canRemove = true;\n             }\n           }\n-\n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java\t2018-12-02 06:51:39.210768564 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_992/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java\t2018-12-02 07:05:14.445211115 -0500\n@@ -532,7 +532,8 @@\n \n     @Override\n     public void remove() {\n-      NodeUtil.removeChild(exprNode.getParent(), exprNode);\n+      int index = -1;\n+\tNodeUtil.removeChild(exprNode.getParent(), exprNode);\n     }\n \n     @Override\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 06:51:37.283732609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_992/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 07:05:14.445211115 -0500\n@@ -315,7 +315,7 @@\n           case NUMBER:          return \"NUMBER\";\n           case STRING:          return \"STRING\";\n           case NULL:            return \"NULL\";\n-          case THIS:            return \"THIS\";\n+          case THIS:            ;\n           case FALSE:           return \"FALSE\";\n           case TRUE:            return \"TRUE\";\n           case SHEQ:            return \"SHEQ\";\n@@ -359,7 +359,7 @@\n           case LP:              return \"LP\";\n           case RP:              return \"RP\";\n           case COMMA:           return \"COMMA\";\n-          case ASSIGN:          return \"ASSIGN\";\n+          case ASSIGN:          ;\n           case ASSIGN_BITOR:    return \"ASSIGN_BITOR\";\n           case ASSIGN_BITXOR:   return \"ASSIGN_BITXOR\";\n           case ASSIGN_BITAND:   return \"ASSIGN_BITAND\";\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 318, 
          "faulty": "return \"THIS\";", 
          "type": "Delete", 
          "seed": "return Token.STRING;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 362, 
          "faulty": "return \"ASSIGN\";", 
          "type": "Delete", 
          "seed": "return Token.LP;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 102, 
          "faulty": "changed=true;", 
          "type": "InsertBefore", 
          "seed": "StringBuilder builder=new StringBuilder();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java", 
          "line": 535, 
          "faulty": "NodeUtil.removeChild(exprNode.getParent(),exprNode);", 
          "type": "InsertBefore", 
          "seed": "int index=-1;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 362, 
          "faulty": "return \"ASSIGN\";", 
          "type": "Delete", 
          "seed": "case 2:"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 84, 
          "faulty": "for (Symbol declaration : nameInfo.getDeclarations()) {\n  boolean canRemove=false;\n  if (specializationState == null) {\n    canRemove=true;\n  }\n else {\n    Node specializableFunction=getSpecializableFunctionFromSymbol(declaration);\n    if (specializableFunction != null) {\n      specializationState.reportRemovedFunction(specializableFunction,null);\n      canRemove=true;\n    }\n  }\n  if (canRemove) {\n    declaration.remove();\n    changed=true;\n  }\n}", 
          "type": "InsertBefore", 
          "seed": "int start=0;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:51:37.259744610 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_940/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 07:04:45.629353451 -0500\n@@ -85,7 +85,6 @@\n           boolean canRemove = false;\n \n           if (specializationState == null) {\n-            canRemove = true;\n           } else {\n             Node specializableFunction =\n               getSpecializableFunctionFromSymbol(declaration);\n@@ -96,11 +95,6 @@\n               canRemove = true;\n             }\n           }\n-\n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 06:51:37.279734609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_940/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 07:04:45.633353428 -0500\n@@ -937,14 +937,7 @@\n         sb.append(getString());\n       } else if (type == Token.FUNCTION) {\n         sb.append(' ');\n-        // In the case of JsDoc trees, the first child is often not a string\n-        // which causes exceptions to be thrown when calling toString or\n-        // toStringTree.\n-        if (first == null || first.getType() != Token.NAME) {\n-          sb.append(\"<invalid>\");\n-        } else {\n-          sb.append(first.getString());\n-        }\n+        int lineno = getLineno();\n       } else if (this instanceof ScriptOrFnNode) {\n         ScriptOrFnNode sof = (ScriptOrFnNode) this;\n         if (this instanceof FunctionNode) {\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 06:51:37.283732609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_940/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 07:04:45.633353428 -0500\n@@ -359,7 +359,7 @@\n           case LP:              return \"LP\";\n           case RP:              return \"RP\";\n           case COMMA:           return \"COMMA\";\n-          case ASSIGN:          return \"ASSIGN\";\n+          case ASSIGN:          Context cx = Context.getCurrentContext();\n           case ASSIGN_BITOR:    return \"ASSIGN_BITOR\";\n           case ASSIGN_BITXOR:   return \"ASSIGN_BITXOR\";\n           case ASSIGN_BITAND:   return \"ASSIGN_BITAND\";\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 88, 
          "faulty": "canRemove=true;", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 943, 
          "faulty": "if (first == null || first.getType() != Token.NAME) {\n  sb.append(\"<invalid>\");\n}\n else {\n  sb.append(first.getString());\n}", 
          "type": "Replace", 
          "seed": "int lineno=getLineno();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 362, 
          "faulty": "return \"ASSIGN\";", 
          "type": "Replace", 
          "seed": "Context cx=Context.getCurrentContext();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:51:37.259744610 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_760/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 07:03:14.917970163 -0500\n@@ -96,11 +96,6 @@\n               canRemove = true;\n             }\n           }\n-\n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java\t2018-12-02 06:51:39.210768564 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_760/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java\t2018-12-02 07:03:14.917970163 -0500\n@@ -532,7 +532,8 @@\n \n     @Override\n     public void remove() {\n-      NodeUtil.removeChild(exprNode.getParent(), exprNode);\n+      int index = -1;\n+\tNodeUtil.removeChild(exprNode.getParent(), exprNode);\n     }\n \n     @Override\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 102, 
          "faulty": "changed=true;", 
          "type": "InsertBefore", 
          "seed": "StringBuilder builder=new StringBuilder();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java", 
          "line": 535, 
          "faulty": "NodeUtil.removeChild(exprNode.getParent(),exprNode);", 
          "type": "InsertBefore", 
          "seed": "int index=-1;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:51:37.259744610 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1370/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 07:08:28.007099286 -0500\n@@ -85,7 +85,6 @@\n           boolean canRemove = false;\n \n           if (specializationState == null) {\n-            canRemove = true;\n           } else {\n             Node specializableFunction =\n               getSpecializableFunctionFromSymbol(declaration);\n@@ -96,11 +95,6 @@\n               canRemove = true;\n             }\n           }\n-\n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 06:51:37.279734609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1370/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 07:08:28.011099407 -0500\n@@ -937,14 +937,7 @@\n         sb.append(getString());\n       } else if (type == Token.FUNCTION) {\n         sb.append(' ');\n-        // In the case of JsDoc trees, the first child is often not a string\n-        // which causes exceptions to be thrown when calling toString or\n-        // toStringTree.\n-        if (first == null || first.getType() != Token.NAME) {\n-          sb.append(\"<invalid>\");\n-        } else {\n-          sb.append(first.getString());\n-        }\n+        int lineno = getLineno();\n       } else if (this instanceof ScriptOrFnNode) {\n         ScriptOrFnNode sof = (ScriptOrFnNode) this;\n         if (this instanceof FunctionNode) {\n@@ -1424,7 +1417,6 @@\n       }\n       res = n.checkTreeEqualsImpl(n2);\n       if (res != null) {\n-        return res;\n       }\n     }\n     return res;\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 06:51:37.283732609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1370/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 07:08:28.011099407 -0500\n@@ -315,7 +315,7 @@\n           case NUMBER:          return \"NUMBER\";\n           case STRING:          return \"STRING\";\n           case NULL:            return \"NULL\";\n-          case THIS:            return \"THIS\";\n+          case THIS:            ;\n           case FALSE:           return \"FALSE\";\n           case TRUE:            return \"TRUE\";\n           case SHEQ:            return \"SHEQ\";\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 318, 
          "faulty": "return \"THIS\";", 
          "type": "Delete", 
          "seed": "return Token.STRING;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 88, 
          "faulty": "canRemove=true;", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 943, 
          "faulty": "if (first == null || first.getType() != Token.NAME) {\n  sb.append(\"<invalid>\");\n}\n else {\n  sb.append(first.getString());\n}", 
          "type": "Replace", 
          "seed": "int lineno=getLineno();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1427, 
          "faulty": "return res;", 
          "type": "Delete", 
          "seed": "return Token.STRING;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:51:37.259744610 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1316/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 07:08:01.466253206 -0500\n@@ -85,7 +85,8 @@\n           boolean canRemove = false;\n \n           if (specializationState == null) {\n-            canRemove = true;\n+            StringBuilder builder = new StringBuilder();\n+\t\t\tcanRemove = true;\n           } else {\n             Node specializableFunction =\n               getSpecializableFunctionFromSymbol(declaration);\n@@ -96,11 +97,6 @@\n               canRemove = true;\n             }\n           }\n-\n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 06:51:37.279734609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1316/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 07:08:01.466253206 -0500\n@@ -218,7 +218,7 @@\n         case QUOTED_PROP:        return \"quoted\";\n         case OPT_ARG_NAME:       return \"opt_arg\";\n \n-        case SYNTHETIC_BLOCK_PROP: return \"synthetic\";\n+        case SYNTHETIC_BLOCK_PROP: ;\n         case EMPTY_BLOCK:        return \"empty_block\";\n         case ORIGINALNAME_PROP:  return \"originalname\";\n         case SIDE_EFFECT_FLAGS:  return \"side_effect_flags\";\n@@ -1424,7 +1424,6 @@\n       }\n       res = n.checkTreeEqualsImpl(n2);\n       if (res != null) {\n-        return res;\n       }\n     }\n     return res;\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 06:51:37.283732609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1316/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 07:08:01.470253340 -0500\n@@ -315,7 +315,7 @@\n           case NUMBER:          return \"NUMBER\";\n           case STRING:          return \"STRING\";\n           case NULL:            return \"NULL\";\n-          case THIS:            return \"THIS\";\n+          case THIS:            ;\n           case FALSE:           return \"FALSE\";\n           case TRUE:            return \"TRUE\";\n           case SHEQ:            return \"SHEQ\";\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 221, 
          "faulty": "return \"synthetic\";", 
          "type": "Delete", 
          "seed": "consumeToken();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1427, 
          "faulty": "return res;", 
          "type": "Delete", 
          "seed": "boolean first=true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 318, 
          "faulty": "return \"THIS\";", 
          "type": "Delete", 
          "seed": "return Token.XMLATTR;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 221, 
          "faulty": "return \"synthetic\";", 
          "type": "Delete", 
          "seed": "return Token.XMLATTR;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 221, 
          "faulty": "return \"synthetic\";", 
          "type": "Delete", 
          "seed": "consumeToken();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 88, 
          "faulty": "canRemove=true;", 
          "type": "InsertBefore", 
          "seed": "StringBuilder builder=new StringBuilder();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:51:37.259744610 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_267/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:58:45.249004951 -0500\n@@ -96,11 +96,6 @@\n               canRemove = true;\n             }\n           }\n-\n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 06:51:37.279734609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_267/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 06:58:45.249004951 -0500\n@@ -218,7 +218,7 @@\n         case QUOTED_PROP:        return \"quoted\";\n         case OPT_ARG_NAME:       return \"opt_arg\";\n \n-        case SYNTHETIC_BLOCK_PROP: return \"synthetic\";\n+        case SYNTHETIC_BLOCK_PROP: ;\n         case EMPTY_BLOCK:        return \"empty_block\";\n         case ORIGINALNAME_PROP:  return \"originalname\";\n         case SIDE_EFFECT_FLAGS:  return \"side_effect_flags\";\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 102, 
          "faulty": "changed=true;", 
          "type": "InsertBefore", 
          "seed": "StringBuilder builder=new StringBuilder();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 221, 
          "faulty": "return \"synthetic\";", 
          "type": "Delete", 
          "seed": "consumeToken();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:51:37.259744610 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1723/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 07:11:31.407366678 -0500\n@@ -85,7 +85,6 @@\n           boolean canRemove = false;\n \n           if (specializationState == null) {\n-            canRemove = true;\n           } else {\n             Node specializableFunction =\n               getSpecializableFunctionFromSymbol(declaration);\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 06:51:37.279734609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1723/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 07:11:31.411366749 -0500\n@@ -218,7 +218,7 @@\n         case QUOTED_PROP:        return \"quoted\";\n         case OPT_ARG_NAME:       return \"opt_arg\";\n \n-        case SYNTHETIC_BLOCK_PROP: return \"synthetic\";\n+        case SYNTHETIC_BLOCK_PROP: ;\n         case EMPTY_BLOCK:        return \"empty_block\";\n         case ORIGINALNAME_PROP:  return \"originalname\";\n         case SIDE_EFFECT_FLAGS:  return \"side_effect_flags\";\n@@ -937,14 +937,7 @@\n         sb.append(getString());\n       } else if (type == Token.FUNCTION) {\n         sb.append(' ');\n-        // In the case of JsDoc trees, the first child is often not a string\n-        // which causes exceptions to be thrown when calling toString or\n-        // toStringTree.\n-        if (first == null || first.getType() != Token.NAME) {\n-          sb.append(\"<invalid>\");\n-        } else {\n-          sb.append(first.getString());\n-        }\n+        int lineno = getLineno();\n       } else if (this instanceof ScriptOrFnNode) {\n         ScriptOrFnNode sof = (ScriptOrFnNode) this;\n         if (this instanceof FunctionNode) {\n@@ -1424,7 +1417,15 @@\n       }\n       res = n.checkTreeEqualsImpl(n2);\n       if (res != null) {\n-        return res;\n+        for (n = first, n2 = node2.first; res == null && n != null; n = n.next, n2 = n2.next) {\n+\t\t\tif (node2 == null) {\n+\t\t\t\tthrow new IllegalStateException();\n+\t\t\t}\n+\t\t\tres = n.checkTreeEqualsImpl(n2);\n+\t\t\tif (res != null) {\n+\t\t\t\treturn res;\n+\t\t\t}\n+\t\t}\n       }\n     }\n     return res;\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 88, 
          "faulty": "canRemove=true;", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 943, 
          "faulty": "if (first == null || first.getType() != Token.NAME) {\n  sb.append(\"<invalid>\");\n}\n else {\n  sb.append(first.getString());\n}", 
          "type": "Replace", 
          "seed": "int lineno=getLineno();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 221, 
          "faulty": "return \"synthetic\";", 
          "type": "Delete", 
          "seed": "consumeToken();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1427, 
          "faulty": "return res;", 
          "type": "Delete", 
          "seed": "boolean first=true;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 88, 
          "faulty": "canRemove=true;", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1427, 
          "faulty": "return res;", 
          "type": "Delete", 
          "seed": "return Token.STRING;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1427, 
          "faulty": "return res;", 
          "type": "Replace", 
          "seed": "for (n=first, n2=node2.first; res == null && n != null; n=n.next, n2=n2.next) {\n  if (node2 == null) {\n    throw new IllegalStateException();\n  }\n  res=n.checkTreeEqualsImpl(n2);\n  if (res != null) {\n    return res;\n  }\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:51:37.259744610 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1598/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 07:10:26.450115089 -0500\n@@ -85,7 +85,6 @@\n           boolean canRemove = false;\n \n           if (specializationState == null) {\n-            canRemove = true;\n           } else {\n             Node specializableFunction =\n               getSpecializableFunctionFromSymbol(declaration);\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 06:51:37.279734609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1598/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 07:10:26.450115089 -0500\n@@ -218,7 +218,10 @@\n         case QUOTED_PROP:        return \"quoted\";\n         case OPT_ARG_NAME:       return \"opt_arg\";\n \n-        case SYNTHETIC_BLOCK_PROP: return \"synthetic\";\n+        case SYNTHETIC_BLOCK_PROP: {\n+\t\t\tString X = null;\n+\t\t\treturn \"synthetic\";\n+\t\t}\n         case EMPTY_BLOCK:        return \"empty_block\";\n         case ORIGINALNAME_PROP:  return \"originalname\";\n         case SIDE_EFFECT_FLAGS:  return \"side_effect_flags\";\n@@ -937,14 +940,7 @@\n         sb.append(getString());\n       } else if (type == Token.FUNCTION) {\n         sb.append(' ');\n-        // In the case of JsDoc trees, the first child is often not a string\n-        // which causes exceptions to be thrown when calling toString or\n-        // toStringTree.\n-        if (first == null || first.getType() != Token.NAME) {\n-          sb.append(\"<invalid>\");\n-        } else {\n-          sb.append(first.getString());\n-        }\n+        int lineno = getLineno();\n       } else if (this instanceof ScriptOrFnNode) {\n         ScriptOrFnNode sof = (ScriptOrFnNode) this;\n         if (this instanceof FunctionNode) {\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 06:51:37.283732609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1598/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 07:10:26.454115174 -0500\n@@ -315,7 +315,7 @@\n           case NUMBER:          return \"NUMBER\";\n           case STRING:          return \"STRING\";\n           case NULL:            return \"NULL\";\n-          case THIS:            return \"THIS\";\n+          case THIS:            ;\n           case FALSE:           return \"FALSE\";\n           case TRUE:            return \"TRUE\";\n           case SHEQ:            return \"SHEQ\";\n@@ -359,7 +359,7 @@\n           case LP:              return \"LP\";\n           case RP:              return \"RP\";\n           case COMMA:           return \"COMMA\";\n-          case ASSIGN:          return \"ASSIGN\";\n+          case ASSIGN:          Context cx = Context.getCurrentContext();\n           case ASSIGN_BITOR:    return \"ASSIGN_BITOR\";\n           case ASSIGN_BITXOR:   return \"ASSIGN_BITXOR\";\n           case ASSIGN_BITAND:   return \"ASSIGN_BITAND\";\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 318, 
          "faulty": "return \"THIS\";", 
          "type": "Delete", 
          "seed": "return Token.STRING;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 88, 
          "faulty": "canRemove=true;", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 943, 
          "faulty": "if (first == null || first.getType() != Token.NAME) {\n  sb.append(\"<invalid>\");\n}\n else {\n  sb.append(first.getString());\n}", 
          "type": "Replace", 
          "seed": "int lineno=getLineno();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 362, 
          "faulty": "return \"ASSIGN\";", 
          "type": "Replace", 
          "seed": "Context cx=Context.getCurrentContext();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 221, 
          "faulty": "return \"synthetic\";", 
          "type": "InsertBefore", 
          "seed": "String X=null;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:51:37.259744610 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1119/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 07:06:21.104959343 -0500\n@@ -85,7 +85,6 @@\n           boolean canRemove = false;\n \n           if (specializationState == null) {\n-            canRemove = true;\n           } else {\n             Node specializableFunction =\n               getSpecializableFunctionFromSymbol(declaration);\n@@ -96,11 +95,6 @@\n               canRemove = true;\n             }\n           }\n-\n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 06:51:37.279734609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1119/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 07:06:21.108959330 -0500\n@@ -943,7 +943,6 @@\n         if (first == null || first.getType() != Token.NAME) {\n           sb.append(\"<invalid>\");\n         } else {\n-          sb.append(first.getString());\n         }\n       } else if (this instanceof ScriptOrFnNode) {\n         ScriptOrFnNode sof = (ScriptOrFnNode) this;\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 06:51:37.283732609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1119/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 07:06:21.108959330 -0500\n@@ -315,7 +315,7 @@\n           case NUMBER:          return \"NUMBER\";\n           case STRING:          return \"STRING\";\n           case NULL:            return \"NULL\";\n-          case THIS:            return \"THIS\";\n+          case THIS:            ;\n           case FALSE:           return \"FALSE\";\n           case TRUE:            return \"TRUE\";\n           case SHEQ:            return \"SHEQ\";\n@@ -359,7 +359,7 @@\n           case LP:              return \"LP\";\n           case RP:              return \"RP\";\n           case COMMA:           return \"COMMA\";\n-          case ASSIGN:          return \"ASSIGN\";\n+          case ASSIGN:          ;\n           case ASSIGN_BITOR:    return \"ASSIGN_BITOR\";\n           case ASSIGN_BITXOR:   return \"ASSIGN_BITXOR\";\n           case ASSIGN_BITAND:   return \"ASSIGN_BITAND\";\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 318, 
          "faulty": "return \"THIS\";", 
          "type": "Delete", 
          "seed": "return Token.STRING;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 88, 
          "faulty": "canRemove=true;", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 362, 
          "faulty": "return \"ASSIGN\";", 
          "type": "Delete", 
          "seed": "return Token.LP;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 946, 
          "faulty": "sb.append(first.getString());", 
          "type": "Delete", 
          "seed": "matchChar('|');"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:51:37.259744610 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1155/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 07:06:38.016910319 -0500\n@@ -96,11 +96,6 @@\n               canRemove = true;\n             }\n           }\n-\n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 06:51:37.279734609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1155/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 07:06:38.020910308 -0500\n@@ -943,7 +943,6 @@\n         if (first == null || first.getType() != Token.NAME) {\n           sb.append(\"<invalid>\");\n         } else {\n-          sb.append(first.getString());\n         }\n       } else if (this instanceof ScriptOrFnNode) {\n         ScriptOrFnNode sof = (ScriptOrFnNode) this;\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 946, 
          "faulty": "sb.append(first.getString());", 
          "type": "Delete", 
          "seed": "matchChar('|');"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:51:37.259744610 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1277/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 07:07:42.705608910 -0500\n@@ -85,7 +85,8 @@\n           boolean canRemove = false;\n \n           if (specializationState == null) {\n-            canRemove = true;\n+            StringBuilder builder = new StringBuilder();\n+\t\t\tcanRemove = true;\n           } else {\n             Node specializableFunction =\n               getSpecializableFunctionFromSymbol(declaration);\n@@ -96,11 +97,6 @@\n               canRemove = true;\n             }\n           }\n-\n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 88, 
          "faulty": "canRemove=true;", 
          "type": "InsertBefore", 
          "seed": "StringBuilder builder=new StringBuilder();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:51:37.259744610 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1703/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 07:11:20.927179993 -0500\n@@ -85,7 +85,7 @@\n           boolean canRemove = false;\n \n           if (specializationState == null) {\n-            canRemove = true;\n+            break;\n           } else {\n             Node specializableFunction =\n               getSpecializableFunctionFromSymbol(declaration);\n@@ -96,14 +96,9 @@\n               canRemove = true;\n             }\n           }\n-\n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n         }\n \n-        logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n+        return;\n       }\n     }\n \n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 06:51:37.279734609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1703/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 07:11:20.927179993 -0500\n@@ -218,7 +218,7 @@\n         case QUOTED_PROP:        return \"quoted\";\n         case OPT_ARG_NAME:       return \"opt_arg\";\n \n-        case SYNTHETIC_BLOCK_PROP: return \"synthetic\";\n+        case SYNTHETIC_BLOCK_PROP: ;\n         case EMPTY_BLOCK:        return \"empty_block\";\n         case ORIGINALNAME_PROP:  return \"originalname\";\n         case SIDE_EFFECT_FLAGS:  return \"side_effect_flags\";\n@@ -937,14 +937,7 @@\n         sb.append(getString());\n       } else if (type == Token.FUNCTION) {\n         sb.append(' ');\n-        // In the case of JsDoc trees, the first child is often not a string\n-        // which causes exceptions to be thrown when calling toString or\n-        // toStringTree.\n-        if (first == null || first.getType() != Token.NAME) {\n-          sb.append(\"<invalid>\");\n-        } else {\n-          sb.append(first.getString());\n-        }\n+        int lineno = getLineno();\n       } else if (this instanceof ScriptOrFnNode) {\n         ScriptOrFnNode sof = (ScriptOrFnNode) this;\n         if (this instanceof FunctionNode) {\n@@ -1424,7 +1417,6 @@\n       }\n       res = n.checkTreeEqualsImpl(n2);\n       if (res != null) {\n-        return res;\n       }\n     }\n     return res;\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 06:51:37.283732609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1703/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 07:11:20.931180065 -0500\n@@ -307,7 +307,7 @@\n           case TYPEOF:          return \"TYPEOF\";\n           case GETPROP:         return \"GETPROP\";\n           case SETPROP:         return \"SETPROP\";\n-          case GETELEM:         return \"GETELEM\";\n+          case GETELEM:         return \"return\";\n           case SETELEM:         return \"SETELEM\";\n           case CALL:            return \"CALL\";\n           case NAME:            return \"NAME\";\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 88, 
          "faulty": "canRemove=true;", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 943, 
          "faulty": "if (first == null || first.getType() != Token.NAME) {\n  sb.append(\"<invalid>\");\n}\n else {\n  sb.append(first.getString());\n}", 
          "type": "Replace", 
          "seed": "int lineno=getLineno();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 221, 
          "faulty": "return \"synthetic\";", 
          "type": "Delete", 
          "seed": "consumeToken();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 221, 
          "faulty": "return \"synthetic\";", 
          "type": "Delete", 
          "seed": "return Token.XMLATTR;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 221, 
          "faulty": "return \"synthetic\";", 
          "type": "Delete", 
          "seed": "consumeToken();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1427, 
          "faulty": "return res;", 
          "type": "Delete", 
          "seed": "boolean first=true;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 88, 
          "faulty": "canRemove=true;", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 88, 
          "faulty": "canRemove=true;", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 88, 
          "faulty": "canRemove=true;", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 310, 
          "faulty": "return \"GETELEM\";", 
          "type": "Replace", 
          "seed": "return \"return\";"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1427, 
          "faulty": "return res;", 
          "type": "Delete", 
          "seed": "return Token.STRING;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 106, 
          "faulty": "logger.fine(\"Removed unused prototype property: \" + nameInfo.name);", 
          "type": "Replace", 
          "seed": "return;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 88, 
          "faulty": "canRemove=true;", 
          "type": "InsertBefore", 
          "seed": "break;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:51:37.259744610 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_134/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:57:32.700395471 -0500\n@@ -81,28 +81,6 @@\n     boolean changed = false;\n     for (NameInfo nameInfo : allNameInfo) {\n       if (!nameInfo.isReferenced()) {\n-        for (Symbol declaration : nameInfo.getDeclarations()) {\n-          boolean canRemove = false;\n-\n-          if (specializationState == null) {\n-            canRemove = true;\n-          } else {\n-            Node specializableFunction =\n-              getSpecializableFunctionFromSymbol(declaration);\n-\n-            if (specializableFunction != null) {\n-              specializationState.reportRemovedFunction(\n-                  specializableFunction, null);\n-              canRemove = true;\n-            }\n-          }\n-\n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n-        }\n-\n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 84, 
          "faulty": "for (Symbol declaration : nameInfo.getDeclarations()) {\n  boolean canRemove=false;\n  if (specializationState == null) {\n    canRemove=true;\n  }\n else {\n    Node specializableFunction=getSpecializableFunctionFromSymbol(declaration);\n    if (specializableFunction != null) {\n      specializationState.reportRemovedFunction(specializableFunction,null);\n      canRemove=true;\n    }\n  }\n  if (canRemove) {\n    declaration.remove();\n    changed=true;\n  }\n}", 
          "type": "Delete", 
          "seed": "formatConclusion();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:51:37.259744610 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1288/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 07:07:47.901791409 -0500\n@@ -85,7 +85,6 @@\n           boolean canRemove = false;\n \n           if (specializationState == null) {\n-            canRemove = true;\n           } else {\n             Node specializableFunction =\n               getSpecializableFunctionFromSymbol(declaration);\n@@ -96,11 +95,6 @@\n               canRemove = true;\n             }\n           }\n-\n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 06:51:37.279734609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1288/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 07:07:47.901791409 -0500\n@@ -218,7 +218,7 @@\n         case QUOTED_PROP:        return \"quoted\";\n         case OPT_ARG_NAME:       return \"opt_arg\";\n \n-        case SYNTHETIC_BLOCK_PROP: return \"synthetic\";\n+        case SYNTHETIC_BLOCK_PROP: ;\n         case EMPTY_BLOCK:        return \"empty_block\";\n         case ORIGINALNAME_PROP:  return \"originalname\";\n         case SIDE_EFFECT_FLAGS:  return \"side_effect_flags\";\n@@ -937,14 +937,7 @@\n         sb.append(getString());\n       } else if (type == Token.FUNCTION) {\n         sb.append(' ');\n-        // In the case of JsDoc trees, the first child is often not a string\n-        // which causes exceptions to be thrown when calling toString or\n-        // toStringTree.\n-        if (first == null || first.getType() != Token.NAME) {\n-          sb.append(\"<invalid>\");\n-        } else {\n-          sb.append(first.getString());\n-        }\n+        int lineno = getLineno();\n       } else if (this instanceof ScriptOrFnNode) {\n         ScriptOrFnNode sof = (ScriptOrFnNode) this;\n         if (this instanceof FunctionNode) {\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 06:51:37.283732609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1288/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 07:07:47.901791409 -0500\n@@ -359,7 +359,7 @@\n           case LP:              return \"LP\";\n           case RP:              return \"RP\";\n           case COMMA:           return \"COMMA\";\n-          case ASSIGN:          return \"ASSIGN\";\n+          case ASSIGN:          Context cx = Context.getCurrentContext();\n           case ASSIGN_BITOR:    return \"ASSIGN_BITOR\";\n           case ASSIGN_BITXOR:   return \"ASSIGN_BITXOR\";\n           case ASSIGN_BITAND:   return \"ASSIGN_BITAND\";\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 88, 
          "faulty": "canRemove=true;", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 943, 
          "faulty": "if (first == null || first.getType() != Token.NAME) {\n  sb.append(\"<invalid>\");\n}\n else {\n  sb.append(first.getString());\n}", 
          "type": "Replace", 
          "seed": "int lineno=getLineno();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 362, 
          "faulty": "return \"ASSIGN\";", 
          "type": "Replace", 
          "seed": "Context cx=Context.getCurrentContext();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 88, 
          "faulty": "canRemove=true;", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 221, 
          "faulty": "return \"synthetic\";", 
          "type": "Delete", 
          "seed": "consumeToken();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 362, 
          "faulty": "return \"ASSIGN\";", 
          "type": "Replace", 
          "seed": "Context cx=Context.getCurrentContext();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:51:37.259744610 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1354/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 07:08:21.338893560 -0500\n@@ -82,7 +82,8 @@\n     for (NameInfo nameInfo : allNameInfo) {\n       if (!nameInfo.isReferenced()) {\n         for (Symbol declaration : nameInfo.getDeclarations()) {\n-          boolean canRemove = false;\n+          boolean valid = false;\n+\t\tboolean canRemove = false;\n \n           if (specializationState == null) {\n             canRemove = true;\n@@ -96,11 +97,6 @@\n               canRemove = true;\n             }\n           }\n-\n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java\t2018-12-02 06:51:39.210768564 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1354/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java\t2018-12-02 07:08:21.342893684 -0500\n@@ -532,7 +532,8 @@\n \n     @Override\n     public void remove() {\n-      NodeUtil.removeChild(exprNode.getParent(), exprNode);\n+      int index = -1;\n+\tNodeUtil.removeChild(exprNode.getParent(), exprNode);\n     }\n \n     @Override\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 06:51:37.283732609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1354/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 07:08:21.342893684 -0500\n@@ -315,7 +315,7 @@\n           case NUMBER:          return \"NUMBER\";\n           case STRING:          return \"STRING\";\n           case NULL:            return \"NULL\";\n-          case THIS:            return \"THIS\";\n+          case THIS:            ;\n           case FALSE:           return \"FALSE\";\n           case TRUE:            return \"TRUE\";\n           case SHEQ:            return \"SHEQ\";\n@@ -359,7 +359,7 @@\n           case LP:              return \"LP\";\n           case RP:              return \"RP\";\n           case COMMA:           return \"COMMA\";\n-          case ASSIGN:          return \"ASSIGN\";\n+          case ASSIGN:          ;\n           case ASSIGN_BITOR:    return \"ASSIGN_BITOR\";\n           case ASSIGN_BITXOR:   return \"ASSIGN_BITXOR\";\n           case ASSIGN_BITAND:   return \"ASSIGN_BITAND\";\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 318, 
          "faulty": "return \"THIS\";", 
          "type": "Delete", 
          "seed": "return Token.STRING;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java", 
          "line": 535, 
          "faulty": "NodeUtil.removeChild(exprNode.getParent(),exprNode);", 
          "type": "InsertBefore", 
          "seed": "int index=-1;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 362, 
          "faulty": "return \"ASSIGN\";", 
          "type": "Delete", 
          "seed": "case 2:"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 85, 
          "faulty": "boolean canRemove=false;", 
          "type": "InsertBefore", 
          "seed": "boolean valid=false;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:51:37.259744610 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1025/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 07:05:30.753140108 -0500\n@@ -85,7 +85,6 @@\n           boolean canRemove = false;\n \n           if (specializationState == null) {\n-            canRemove = true;\n           } else {\n             Node specializableFunction =\n               getSpecializableFunctionFromSymbol(declaration);\n@@ -96,11 +95,6 @@\n               canRemove = true;\n             }\n           }\n-\n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 06:51:37.279734609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1025/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 07:05:30.753140108 -0500\n@@ -218,7 +218,7 @@\n         case QUOTED_PROP:        return \"quoted\";\n         case OPT_ARG_NAME:       return \"opt_arg\";\n \n-        case SYNTHETIC_BLOCK_PROP: return \"synthetic\";\n+        case SYNTHETIC_BLOCK_PROP: ;\n         case EMPTY_BLOCK:        return \"empty_block\";\n         case ORIGINALNAME_PROP:  return \"originalname\";\n         case SIDE_EFFECT_FLAGS:  return \"side_effect_flags\";\n@@ -937,14 +937,7 @@\n         sb.append(getString());\n       } else if (type == Token.FUNCTION) {\n         sb.append(' ');\n-        // In the case of JsDoc trees, the first child is often not a string\n-        // which causes exceptions to be thrown when calling toString or\n-        // toStringTree.\n-        if (first == null || first.getType() != Token.NAME) {\n-          sb.append(\"<invalid>\");\n-        } else {\n-          sb.append(first.getString());\n-        }\n+        int lineno = getLineno();\n       } else if (this instanceof ScriptOrFnNode) {\n         ScriptOrFnNode sof = (ScriptOrFnNode) this;\n         if (this instanceof FunctionNode) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 102, 
          "faulty": "changed=true;", 
          "type": "InsertBefore", 
          "seed": "StringBuilder builder=new StringBuilder();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 88, 
          "faulty": "canRemove=true;", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 943, 
          "faulty": "if (first == null || first.getType() != Token.NAME) {\n  sb.append(\"<invalid>\");\n}\n else {\n  sb.append(first.getString());\n}", 
          "type": "Replace", 
          "seed": "int lineno=getLineno();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 221, 
          "faulty": "return \"synthetic\";", 
          "type": "Delete", 
          "seed": "boolean nullKey=false;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:51:37.259744610 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1741/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 07:11:39.767511790 -0500\n@@ -85,7 +85,6 @@\n           boolean canRemove = false;\n \n           if (specializationState == null) {\n-            canRemove = true;\n           } else {\n             Node specializableFunction =\n               getSpecializableFunctionFromSymbol(declaration);\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 06:51:37.279734609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1741/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 07:11:39.767511790 -0500\n@@ -1424,7 +1424,6 @@\n       }\n       res = n.checkTreeEqualsImpl(n2);\n       if (res != null) {\n-        return res;\n       }\n     }\n     return res;\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 06:51:37.283732609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1741/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 07:11:39.767511790 -0500\n@@ -315,7 +315,10 @@\n           case NUMBER:          return \"NUMBER\";\n           case STRING:          return \"STRING\";\n           case NULL:            return \"NULL\";\n-          case THIS:            return \"THIS\";\n+          case THIS:            {\n+\t\t\t\tStringBuilder sb = new StringBuilder();\n+\t\t\t\treturn \"THIS\";\n+\t\t\t}\n           case FALSE:           return \"FALSE\";\n           case TRUE:            return \"TRUE\";\n           case SHEQ:            return \"SHEQ\";\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 88, 
          "faulty": "canRemove=true;", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 88, 
          "faulty": "canRemove=true;", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1427, 
          "faulty": "return res;", 
          "type": "Delete", 
          "seed": "return Token.STRING;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 318, 
          "faulty": "return \"THIS\";", 
          "type": "InsertBefore", 
          "seed": "StringBuilder sb=new StringBuilder();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:51:37.259744610 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1069/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 07:05:56.093042259 -0500\n@@ -96,11 +96,6 @@\n               canRemove = true;\n             }\n           }\n-\n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 06:51:37.279734609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1069/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 07:05:56.093042259 -0500\n@@ -218,7 +218,7 @@\n         case QUOTED_PROP:        return \"quoted\";\n         case OPT_ARG_NAME:       return \"opt_arg\";\n \n-        case SYNTHETIC_BLOCK_PROP: return \"synthetic\";\n+        case SYNTHETIC_BLOCK_PROP: ;\n         case EMPTY_BLOCK:        return \"empty_block\";\n         case ORIGINALNAME_PROP:  return \"originalname\";\n         case SIDE_EFFECT_FLAGS:  return \"side_effect_flags\";\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 06:51:37.283732609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1069/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 07:05:56.097042247 -0500\n@@ -359,7 +359,7 @@\n           case LP:              return \"LP\";\n           case RP:              return \"RP\";\n           case COMMA:           return \"COMMA\";\n-          case ASSIGN:          return \"ASSIGN\";\n+          case ASSIGN:          Context cx = Context.getCurrentContext();\n           case ASSIGN_BITOR:    return \"ASSIGN_BITOR\";\n           case ASSIGN_BITXOR:   return \"ASSIGN_BITXOR\";\n           case ASSIGN_BITAND:   return \"ASSIGN_BITAND\";\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 221, 
          "faulty": "return \"synthetic\";", 
          "type": "Delete", 
          "seed": "consumeToken();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 362, 
          "faulty": "return \"ASSIGN\";", 
          "type": "Replace", 
          "seed": "Context cx=Context.getCurrentContext();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:51:37.259744610 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_79/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:57:01.687876861 -0500\n@@ -85,7 +85,7 @@\n           boolean canRemove = false;\n \n           if (specializationState == null) {\n-            canRemove = true;\n+            int index = -1;\n           } else {\n             Node specializableFunction =\n               getSpecializableFunctionFromSymbol(declaration);\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 06:51:37.279734609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_79/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 06:57:01.691876904 -0500\n@@ -1424,7 +1424,6 @@\n       }\n       res = n.checkTreeEqualsImpl(n2);\n       if (res != null) {\n-        return res;\n       }\n     }\n     return res;\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1427, 
          "faulty": "return res;", 
          "type": "Delete", 
          "seed": "return Token.GT;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 88, 
          "faulty": "canRemove=true;", 
          "type": "Replace", 
          "seed": "int index=-1;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:51:37.259744610 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1525/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 07:09:49.401287347 -0500\n@@ -85,7 +85,6 @@\n           boolean canRemove = false;\n \n           if (specializationState == null) {\n-            canRemove = true;\n           } else {\n             Node specializableFunction =\n               getSpecializableFunctionFromSymbol(declaration);\n@@ -96,11 +95,6 @@\n               canRemove = true;\n             }\n           }\n-\n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 06:51:37.279734609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1525/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 07:09:49.401287347 -0500\n@@ -218,7 +218,7 @@\n         case QUOTED_PROP:        return \"quoted\";\n         case OPT_ARG_NAME:       return \"opt_arg\";\n \n-        case SYNTHETIC_BLOCK_PROP: return \"synthetic\";\n+        case SYNTHETIC_BLOCK_PROP: ;\n         case EMPTY_BLOCK:        return \"empty_block\";\n         case ORIGINALNAME_PROP:  return \"originalname\";\n         case SIDE_EFFECT_FLAGS:  return \"side_effect_flags\";\n@@ -937,14 +937,7 @@\n         sb.append(getString());\n       } else if (type == Token.FUNCTION) {\n         sb.append(' ');\n-        // In the case of JsDoc trees, the first child is often not a string\n-        // which causes exceptions to be thrown when calling toString or\n-        // toStringTree.\n-        if (first == null || first.getType() != Token.NAME) {\n-          sb.append(\"<invalid>\");\n-        } else {\n-          sb.append(first.getString());\n-        }\n+        int lineno = getLineno();\n       } else if (this instanceof ScriptOrFnNode) {\n         ScriptOrFnNode sof = (ScriptOrFnNode) this;\n         if (this instanceof FunctionNode) {\n@@ -1424,7 +1417,6 @@\n       }\n       res = n.checkTreeEqualsImpl(n2);\n       if (res != null) {\n-        return res;\n       }\n     }\n     return res;\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 06:51:37.283732609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1525/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 07:09:49.405287441 -0500\n@@ -307,7 +307,7 @@\n           case TYPEOF:          return \"TYPEOF\";\n           case GETPROP:         return \"GETPROP\";\n           case SETPROP:         return \"SETPROP\";\n-          case GETELEM:         return \"GETELEM\";\n+          case GETELEM:         ;\n           case SETELEM:         return \"SETELEM\";\n           case CALL:            return \"CALL\";\n           case NAME:            return \"NAME\";\n@@ -315,7 +315,7 @@\n           case NUMBER:          return \"NUMBER\";\n           case STRING:          return \"STRING\";\n           case NULL:            return \"NULL\";\n-          case THIS:            return \"THIS\";\n+          case THIS:            ;\n           case FALSE:           return \"FALSE\";\n           case TRUE:            return \"TRUE\";\n           case SHEQ:            return \"SHEQ\";\n@@ -359,7 +359,7 @@\n           case LP:              return \"LP\";\n           case RP:              return \"RP\";\n           case COMMA:           return \"COMMA\";\n-          case ASSIGN:          return \"ASSIGN\";\n+          case ASSIGN:          ;\n           case ASSIGN_BITOR:    return \"ASSIGN_BITOR\";\n           case ASSIGN_BITXOR:   return \"ASSIGN_BITXOR\";\n           case ASSIGN_BITAND:   return \"ASSIGN_BITAND\";\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 88, 
          "faulty": "canRemove=true;", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 318, 
          "faulty": "return \"THIS\";", 
          "type": "Delete", 
          "seed": "return Token.XMLATTR;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 221, 
          "faulty": "return \"synthetic\";", 
          "type": "Delete", 
          "seed": "return Token.XMLATTR;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 221, 
          "faulty": "return \"synthetic\";", 
          "type": "Delete", 
          "seed": "consumeToken();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 943, 
          "faulty": "if (first == null || first.getType() != Token.NAME) {\n  sb.append(\"<invalid>\");\n}\n else {\n  sb.append(first.getString());\n}", 
          "type": "Replace", 
          "seed": "int lineno=getLineno();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 943, 
          "faulty": "if (first == null || first.getType() != Token.NAME) {\n  sb.append(\"<invalid>\");\n}\n else {\n  sb.append(first.getString());\n}", 
          "type": "Replace", 
          "seed": "int lineno=getLineno();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1427, 
          "faulty": "return res;", 
          "type": "Delete", 
          "seed": "boolean first=true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 318, 
          "faulty": "return \"THIS\";", 
          "type": "Delete", 
          "seed": "return Token.XMLATTR;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 221, 
          "faulty": "return \"synthetic\";", 
          "type": "Delete", 
          "seed": "return Token.XMLATTR;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 362, 
          "faulty": "return \"ASSIGN\";", 
          "type": "Delete", 
          "seed": "return Token.LP;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 310, 
          "faulty": "return \"GETELEM\";", 
          "type": "Delete", 
          "seed": "return Token.RC;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:51:37.259744610 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1061/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 07:05:51.737058051 -0500\n@@ -85,7 +85,6 @@\n           boolean canRemove = false;\n \n           if (specializationState == null) {\n-            canRemove = true;\n           } else {\n             Node specializableFunction =\n               getSpecializableFunctionFromSymbol(declaration);\n@@ -96,11 +95,6 @@\n               canRemove = true;\n             }\n           }\n-\n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 06:51:37.279734609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1061/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 07:05:51.741058036 -0500\n@@ -937,14 +937,7 @@\n         sb.append(getString());\n       } else if (type == Token.FUNCTION) {\n         sb.append(' ');\n-        // In the case of JsDoc trees, the first child is often not a string\n-        // which causes exceptions to be thrown when calling toString or\n-        // toStringTree.\n-        if (first == null || first.getType() != Token.NAME) {\n-          sb.append(\"<invalid>\");\n-        } else {\n-          sb.append(first.getString());\n-        }\n+        int lineno = getLineno();\n       } else if (this instanceof ScriptOrFnNode) {\n         ScriptOrFnNode sof = (ScriptOrFnNode) this;\n         if (this instanceof FunctionNode) {\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 06:51:37.283732609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1061/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 07:05:51.741058036 -0500\n@@ -315,7 +315,7 @@\n           case NUMBER:          return \"NUMBER\";\n           case STRING:          return \"STRING\";\n           case NULL:            return \"NULL\";\n-          case THIS:            return \"THIS\";\n+          case THIS:            ;\n           case FALSE:           return \"FALSE\";\n           case TRUE:            return \"TRUE\";\n           case SHEQ:            return \"SHEQ\";\n@@ -359,7 +359,7 @@\n           case LP:              return \"LP\";\n           case RP:              return \"RP\";\n           case COMMA:           return \"COMMA\";\n-          case ASSIGN:          return \"ASSIGN\";\n+          case ASSIGN:          Context cx = Context.getCurrentContext();\n           case ASSIGN_BITOR:    return \"ASSIGN_BITOR\";\n           case ASSIGN_BITXOR:   return \"ASSIGN_BITXOR\";\n           case ASSIGN_BITAND:   return \"ASSIGN_BITAND\";\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 318, 
          "faulty": "return \"THIS\";", 
          "type": "Delete", 
          "seed": "return Token.STRING;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 88, 
          "faulty": "canRemove=true;", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 943, 
          "faulty": "if (first == null || first.getType() != Token.NAME) {\n  sb.append(\"<invalid>\");\n}\n else {\n  sb.append(first.getString());\n}", 
          "type": "Replace", 
          "seed": "int lineno=getLineno();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 362, 
          "faulty": "return \"ASSIGN\";", 
          "type": "Replace", 
          "seed": "Context cx=Context.getCurrentContext();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:51:37.259744610 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1149/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 07:06:35.484917318 -0500\n@@ -85,7 +85,6 @@\n           boolean canRemove = false;\n \n           if (specializationState == null) {\n-            canRemove = true;\n           } else {\n             Node specializableFunction =\n               getSpecializableFunctionFromSymbol(declaration);\n@@ -96,11 +95,6 @@\n               canRemove = true;\n             }\n           }\n-\n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 06:51:37.283732609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1149/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 07:06:35.484917318 -0500\n@@ -359,7 +359,7 @@\n           case LP:              return \"LP\";\n           case RP:              return \"RP\";\n           case COMMA:           return \"COMMA\";\n-          case ASSIGN:          return \"ASSIGN\";\n+          case ASSIGN:          Context cx = Context.getCurrentContext();\n           case ASSIGN_BITOR:    return \"ASSIGN_BITOR\";\n           case ASSIGN_BITXOR:   return \"ASSIGN_BITXOR\";\n           case ASSIGN_BITAND:   return \"ASSIGN_BITAND\";\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 88, 
          "faulty": "canRemove=true;", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 362, 
          "faulty": "return \"ASSIGN\";", 
          "type": "Replace", 
          "seed": "Context cx=Context.getCurrentContext();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:51:37.259744610 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_198/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:58:06.668821828 -0500\n@@ -84,19 +84,6 @@\n         for (Symbol declaration : nameInfo.getDeclarations()) {\n           boolean canRemove = false;\n \n-          if (specializationState == null) {\n-            canRemove = true;\n-          } else {\n-            Node specializableFunction =\n-              getSpecializableFunctionFromSymbol(declaration);\n-\n-            if (specializableFunction != null) {\n-              specializationState.reportRemovedFunction(\n-                  specializableFunction, null);\n-              canRemove = true;\n-            }\n-          }\n-\n           if (canRemove) {\n             declaration.remove();\n             changed = true;\n@@ -108,7 +95,8 @@\n     }\n \n     if (changed) {\n-      compiler.reportCodeChange();\n+      int index = -1;\n+\tcompiler.reportCodeChange();\n     }\n   }\n \n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 111, 
          "faulty": "compiler.reportCodeChange();", 
          "type": "InsertBefore", 
          "seed": "int index=-1;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 87, 
          "faulty": "if (specializationState == null) {\n  canRemove=true;\n}\n else {\n  Node specializableFunction=getSpecializableFunctionFromSymbol(declaration);\n  if (specializableFunction != null) {\n    specializationState.reportRemovedFunction(specializableFunction,null);\n    canRemove=true;\n  }\n}", 
          "type": "Delete", 
          "seed": "return this;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:51:37.259744610 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1477/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 07:09:22.976637337 -0500\n@@ -85,7 +85,6 @@\n           boolean canRemove = false;\n \n           if (specializationState == null) {\n-            canRemove = true;\n           } else {\n             Node specializableFunction =\n               getSpecializableFunctionFromSymbol(declaration);\n@@ -96,14 +95,7 @@\n               canRemove = true;\n             }\n           }\n-\n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n         }\n-\n-        logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n       }\n     }\n \n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 06:51:37.279734609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1477/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 07:09:22.980637438 -0500\n@@ -218,7 +218,7 @@\n         case QUOTED_PROP:        return \"quoted\";\n         case OPT_ARG_NAME:       return \"opt_arg\";\n \n-        case SYNTHETIC_BLOCK_PROP: return \"synthetic\";\n+        case SYNTHETIC_BLOCK_PROP: ;\n         case EMPTY_BLOCK:        return \"empty_block\";\n         case ORIGINALNAME_PROP:  return \"originalname\";\n         case SIDE_EFFECT_FLAGS:  return \"side_effect_flags\";\n@@ -937,14 +937,7 @@\n         sb.append(getString());\n       } else if (type == Token.FUNCTION) {\n         sb.append(' ');\n-        // In the case of JsDoc trees, the first child is often not a string\n-        // which causes exceptions to be thrown when calling toString or\n-        // toStringTree.\n-        if (first == null || first.getType() != Token.NAME) {\n-          sb.append(\"<invalid>\");\n-        } else {\n-          sb.append(first.getString());\n-        }\n+        int lineno = getLineno();\n       } else if (this instanceof ScriptOrFnNode) {\n         ScriptOrFnNode sof = (ScriptOrFnNode) this;\n         if (this instanceof FunctionNode) {\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 06:51:37.283732609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1477/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 07:09:22.980637438 -0500\n@@ -315,7 +315,7 @@\n           case NUMBER:          return \"NUMBER\";\n           case STRING:          return \"STRING\";\n           case NULL:            return \"NULL\";\n-          case THIS:            return \"THIS\";\n+          case THIS:            ;\n           case FALSE:           return \"FALSE\";\n           case TRUE:            return \"TRUE\";\n           case SHEQ:            return \"SHEQ\";\n@@ -359,7 +359,7 @@\n           case LP:              return \"LP\";\n           case RP:              return \"RP\";\n           case COMMA:           return \"COMMA\";\n-          case ASSIGN:          return \"ASSIGN\";\n+          case ASSIGN:          ;\n           case ASSIGN_BITOR:    return \"ASSIGN_BITOR\";\n           case ASSIGN_BITXOR:   return \"ASSIGN_BITXOR\";\n           case ASSIGN_BITAND:   return \"ASSIGN_BITAND\";\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 88, 
          "faulty": "canRemove=true;", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 318, 
          "faulty": "return \"THIS\";", 
          "type": "Delete", 
          "seed": "return Token.XMLATTR;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 221, 
          "faulty": "return \"synthetic\";", 
          "type": "Delete", 
          "seed": "return Token.XMLATTR;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 221, 
          "faulty": "return \"synthetic\";", 
          "type": "Delete", 
          "seed": "consumeToken();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 943, 
          "faulty": "if (first == null || first.getType() != Token.NAME) {\n  sb.append(\"<invalid>\");\n}\n else {\n  sb.append(first.getString());\n}", 
          "type": "Replace", 
          "seed": "int lineno=getLineno();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 362, 
          "faulty": "return \"ASSIGN\";", 
          "type": "Delete", 
          "seed": "case 2:"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 106, 
          "faulty": "logger.fine(\"Removed unused prototype property: \" + nameInfo.name);", 
          "type": "Delete", 
          "seed": "int start=0;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:51:37.259744610 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_394/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:59:57.406741931 -0500\n@@ -96,11 +96,6 @@\n               canRemove = true;\n             }\n           }\n-\n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 06:51:37.279734609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_394/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 06:59:57.410741613 -0500\n@@ -218,7 +218,7 @@\n         case QUOTED_PROP:        return \"quoted\";\n         case OPT_ARG_NAME:       return \"opt_arg\";\n \n-        case SYNTHETIC_BLOCK_PROP: return \"synthetic\";\n+        case SYNTHETIC_BLOCK_PROP: ;\n         case EMPTY_BLOCK:        return \"empty_block\";\n         case ORIGINALNAME_PROP:  return \"originalname\";\n         case SIDE_EFFECT_FLAGS:  return \"side_effect_flags\";\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 06:51:37.283732609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_394/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 06:59:57.410741613 -0500\n@@ -359,7 +359,7 @@\n           case LP:              return \"LP\";\n           case RP:              return \"RP\";\n           case COMMA:           return \"COMMA\";\n-          case ASSIGN:          return \"ASSIGN\";\n+          case ASSIGN:          ;\n           case ASSIGN_BITOR:    return \"ASSIGN_BITOR\";\n           case ASSIGN_BITXOR:   return \"ASSIGN_BITXOR\";\n           case ASSIGN_BITAND:   return \"ASSIGN_BITAND\";\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 362, 
          "faulty": "return \"ASSIGN\";", 
          "type": "Delete", 
          "seed": "Node pn=memberExpr(true);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 102, 
          "faulty": "changed=true;", 
          "type": "InsertBefore", 
          "seed": "StringBuilder builder=new StringBuilder();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 221, 
          "faulty": "return \"synthetic\";", 
          "type": "Delete", 
          "seed": "consumeToken();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 102, 
          "faulty": "changed=true;", 
          "type": "Replace", 
          "seed": "return 0;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:51:37.259744610 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_748/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 07:03:09.714014669 -0500\n@@ -85,7 +85,6 @@\n           boolean canRemove = false;\n \n           if (specializationState == null) {\n-            canRemove = true;\n           } else {\n             Node specializableFunction =\n               getSpecializableFunctionFromSymbol(declaration);\n@@ -96,11 +95,6 @@\n               canRemove = true;\n             }\n           }\n-\n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 06:51:37.279734609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_748/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 07:03:09.714014669 -0500\n@@ -218,7 +218,7 @@\n         case QUOTED_PROP:        return \"quoted\";\n         case OPT_ARG_NAME:       return \"opt_arg\";\n \n-        case SYNTHETIC_BLOCK_PROP: return \"synthetic\";\n+        case SYNTHETIC_BLOCK_PROP: ;\n         case EMPTY_BLOCK:        return \"empty_block\";\n         case ORIGINALNAME_PROP:  return \"originalname\";\n         case SIDE_EFFECT_FLAGS:  return \"side_effect_flags\";\n@@ -1424,7 +1424,6 @@\n       }\n       res = n.checkTreeEqualsImpl(n2);\n       if (res != null) {\n-        return res;\n       }\n     }\n     return res;\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 06:51:37.283732609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_748/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 07:03:09.714014669 -0500\n@@ -359,7 +359,7 @@\n           case LP:              return \"LP\";\n           case RP:              return \"RP\";\n           case COMMA:           return \"COMMA\";\n-          case ASSIGN:          return \"ASSIGN\";\n+          case ASSIGN:          ;\n           case ASSIGN_BITOR:    return \"ASSIGN_BITOR\";\n           case ASSIGN_BITXOR:   return \"ASSIGN_BITXOR\";\n           case ASSIGN_BITAND:   return \"ASSIGN_BITAND\";\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 102, 
          "faulty": "changed=true;", 
          "type": "InsertBefore", 
          "seed": "StringBuilder builder=new StringBuilder();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 362, 
          "faulty": "return \"ASSIGN\";", 
          "type": "Delete", 
          "seed": "Node pn=memberExpr(true);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 88, 
          "faulty": "canRemove=true;", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 101, 
          "faulty": "declaration.remove();", 
          "type": "InsertBefore", 
          "seed": "return;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 221, 
          "faulty": "return \"synthetic\";", 
          "type": "Delete", 
          "seed": "consumeToken();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1427, 
          "faulty": "return res;", 
          "type": "Delete", 
          "seed": "boolean first=true;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 88, 
          "faulty": "canRemove=true;", 
          "type": "Delete", 
          "seed": "return null;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:51:37.259744610 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1826/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 07:12:23.996227533 -0500\n@@ -85,7 +85,6 @@\n           boolean canRemove = false;\n \n           if (specializationState == null) {\n-            canRemove = true;\n           } else {\n             Node specializableFunction =\n               getSpecializableFunctionFromSymbol(declaration);\n@@ -96,11 +95,6 @@\n               canRemove = true;\n             }\n           }\n-\n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 06:51:37.279734609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1826/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 07:12:23.996227533 -0500\n@@ -1424,7 +1424,6 @@\n       }\n       res = n.checkTreeEqualsImpl(n2);\n       if (res != null) {\n-        return res;\n       }\n     }\n     return res;\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 06:51:37.283732609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1826/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 07:12:23.996227533 -0500\n@@ -315,7 +315,10 @@\n           case NUMBER:          return \"NUMBER\";\n           case STRING:          return \"STRING\";\n           case NULL:            return \"NULL\";\n-          case THIS:            return \"THIS\";\n+          case THIS:            {\n+\t\t\t\tStringBuilder sb = new StringBuilder();\n+\t\t\t\treturn \"THIS\";\n+\t\t\t}\n           case FALSE:           return \"FALSE\";\n           case TRUE:            return \"TRUE\";\n           case SHEQ:            return \"SHEQ\";\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 318, 
          "faulty": "return \"THIS\";", 
          "type": "Delete", 
          "seed": "return Token.STRING;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 88, 
          "faulty": "canRemove=true;", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 318, 
          "faulty": "return \"THIS\";", 
          "type": "Delete", 
          "seed": "return Token.STRING;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1427, 
          "faulty": "return res;", 
          "type": "Delete", 
          "seed": "return Token.STRING;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 318, 
          "faulty": "return \"THIS\";", 
          "type": "InsertBefore", 
          "seed": "StringBuilder sb=new StringBuilder();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:51:37.259744610 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_638/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 07:02:10.834602426 -0500\n@@ -85,7 +85,6 @@\n           boolean canRemove = false;\n \n           if (specializationState == null) {\n-            canRemove = true;\n           } else {\n             Node specializableFunction =\n               getSpecializableFunctionFromSymbol(declaration);\n@@ -96,14 +95,10 @@\n               canRemove = true;\n             }\n           }\n-\n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n         }\n \n-        logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n+        int start = 0;\n+\t\tlogger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n       }\n     }\n \n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java\t2018-12-02 06:51:39.210768564 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_638/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java\t2018-12-02 07:02:10.834602426 -0500\n@@ -532,7 +532,8 @@\n \n     @Override\n     public void remove() {\n-      NodeUtil.removeChild(exprNode.getParent(), exprNode);\n+      int index = -1;\n+\tNodeUtil.removeChild(exprNode.getParent(), exprNode);\n     }\n \n     @Override\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 06:51:37.279734609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_638/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 07:02:10.838602380 -0500\n@@ -218,7 +218,7 @@\n         case QUOTED_PROP:        return \"quoted\";\n         case OPT_ARG_NAME:       return \"opt_arg\";\n \n-        case SYNTHETIC_BLOCK_PROP: return \"synthetic\";\n+        case SYNTHETIC_BLOCK_PROP: ;\n         case EMPTY_BLOCK:        return \"empty_block\";\n         case ORIGINALNAME_PROP:  return \"originalname\";\n         case SIDE_EFFECT_FLAGS:  return \"side_effect_flags\";\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 06:51:37.283732609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_638/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 07:02:10.838602380 -0500\n@@ -359,7 +359,7 @@\n           case LP:              return \"LP\";\n           case RP:              return \"RP\";\n           case COMMA:           return \"COMMA\";\n-          case ASSIGN:          return \"ASSIGN\";\n+          case ASSIGN:          ;\n           case ASSIGN_BITOR:    return \"ASSIGN_BITOR\";\n           case ASSIGN_BITXOR:   return \"ASSIGN_BITXOR\";\n           case ASSIGN_BITAND:   return \"ASSIGN_BITAND\";\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 102, 
          "faulty": "changed=true;", 
          "type": "InsertBefore", 
          "seed": "StringBuilder builder=new StringBuilder();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 221, 
          "faulty": "return \"synthetic\";", 
          "type": "Delete", 
          "seed": "consumeToken();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 362, 
          "faulty": "return \"ASSIGN\";", 
          "type": "Delete", 
          "seed": "Node pn=memberExpr(true);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 88, 
          "faulty": "canRemove=true;", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 101, 
          "faulty": "declaration.remove();", 
          "type": "InsertBefore", 
          "seed": "return;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java", 
          "line": 535, 
          "faulty": "NodeUtil.removeChild(exprNode.getParent(),exprNode);", 
          "type": "InsertBefore", 
          "seed": "int index=-1;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 106, 
          "faulty": "logger.fine(\"Removed unused prototype property: \" + nameInfo.name);", 
          "type": "InsertBefore", 
          "seed": "int start=0;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:51:37.259744610 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_455/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 07:00:32.124167602 -0500\n@@ -96,11 +96,6 @@\n               canRemove = true;\n             }\n           }\n-\n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 06:51:37.279734609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_455/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 07:00:32.128167326 -0500\n@@ -218,7 +218,7 @@\n         case QUOTED_PROP:        return \"quoted\";\n         case OPT_ARG_NAME:       return \"opt_arg\";\n \n-        case SYNTHETIC_BLOCK_PROP: return \"synthetic\";\n+        case SYNTHETIC_BLOCK_PROP: ;\n         case EMPTY_BLOCK:        return \"empty_block\";\n         case ORIGINALNAME_PROP:  return \"originalname\";\n         case SIDE_EFFECT_FLAGS:  return \"side_effect_flags\";\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 06:51:37.283732609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_455/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 07:00:32.128167326 -0500\n@@ -359,7 +359,7 @@\n           case LP:              return \"LP\";\n           case RP:              return \"RP\";\n           case COMMA:           return \"COMMA\";\n-          case ASSIGN:          return \"ASSIGN\";\n+          case ASSIGN:          ;\n           case ASSIGN_BITOR:    return \"ASSIGN_BITOR\";\n           case ASSIGN_BITXOR:   return \"ASSIGN_BITXOR\";\n           case ASSIGN_BITAND:   return \"ASSIGN_BITAND\";\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 362, 
          "faulty": "return \"ASSIGN\";", 
          "type": "Delete", 
          "seed": "Node pn=memberExpr(true);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 362, 
          "faulty": "return \"ASSIGN\";", 
          "type": "Delete", 
          "seed": "Node pn=memberExpr(true);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 102, 
          "faulty": "changed=true;", 
          "type": "InsertBefore", 
          "seed": "StringBuilder builder=new StringBuilder();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 221, 
          "faulty": "return \"synthetic\";", 
          "type": "Delete", 
          "seed": "consumeToken();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 101, 
          "faulty": "declaration.remove();", 
          "type": "Delete", 
          "seed": "return false;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:51:37.259744610 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1007/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 07:05:22.289176141 -0500\n@@ -85,7 +85,6 @@\n           boolean canRemove = false;\n \n           if (specializationState == null) {\n-            canRemove = true;\n           } else {\n             Node specializableFunction =\n               getSpecializableFunctionFromSymbol(declaration);\n@@ -96,11 +95,6 @@\n               canRemove = true;\n             }\n           }\n-\n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java\t2018-12-02 06:51:39.210768564 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1007/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java\t2018-12-02 07:05:22.293176124 -0500\n@@ -532,7 +532,8 @@\n \n     @Override\n     public void remove() {\n-      NodeUtil.removeChild(exprNode.getParent(), exprNode);\n+      int index = -1;\n+\tNodeUtil.removeChild(exprNode.getParent(), exprNode);\n     }\n \n     @Override\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 06:51:37.279734609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1007/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 07:05:22.293176124 -0500\n@@ -937,14 +937,7 @@\n         sb.append(getString());\n       } else if (type == Token.FUNCTION) {\n         sb.append(' ');\n-        // In the case of JsDoc trees, the first child is often not a string\n-        // which causes exceptions to be thrown when calling toString or\n-        // toStringTree.\n-        if (first == null || first.getType() != Token.NAME) {\n-          sb.append(\"<invalid>\");\n-        } else {\n-          sb.append(first.getString());\n-        }\n+        int lineno = getLineno();\n       } else if (this instanceof ScriptOrFnNode) {\n         ScriptOrFnNode sof = (ScriptOrFnNode) this;\n         if (this instanceof FunctionNode) {\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 06:51:37.283732609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1007/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 07:05:22.297176105 -0500\n@@ -359,7 +359,7 @@\n           case LP:              return \"LP\";\n           case RP:              return \"RP\";\n           case COMMA:           return \"COMMA\";\n-          case ASSIGN:          return \"ASSIGN\";\n+          case ASSIGN:          ;\n           case ASSIGN_BITOR:    return \"ASSIGN_BITOR\";\n           case ASSIGN_BITXOR:   return \"ASSIGN_BITXOR\";\n           case ASSIGN_BITAND:   return \"ASSIGN_BITAND\";\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 88, 
          "faulty": "canRemove=true;", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 943, 
          "faulty": "if (first == null || first.getType() != Token.NAME) {\n  sb.append(\"<invalid>\");\n}\n else {\n  sb.append(first.getString());\n}", 
          "type": "Replace", 
          "seed": "int lineno=getLineno();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 102, 
          "faulty": "changed=true;", 
          "type": "InsertBefore", 
          "seed": "StringBuilder builder=new StringBuilder();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java", 
          "line": 535, 
          "faulty": "NodeUtil.removeChild(exprNode.getParent(),exprNode);", 
          "type": "InsertBefore", 
          "seed": "int index=-1;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 362, 
          "faulty": "return \"ASSIGN\";", 
          "type": "Delete", 
          "seed": "case 2:"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:51:37.259744610 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_916/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 07:04:33.349421162 -0500\n@@ -97,10 +97,7 @@\n             }\n           }\n \n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n+          return;\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 06:51:37.279734609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_916/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 07:04:33.353421139 -0500\n@@ -218,7 +218,7 @@\n         case QUOTED_PROP:        return \"quoted\";\n         case OPT_ARG_NAME:       return \"opt_arg\";\n \n-        case SYNTHETIC_BLOCK_PROP: return \"synthetic\";\n+        case SYNTHETIC_BLOCK_PROP: ;\n         case EMPTY_BLOCK:        return \"empty_block\";\n         case ORIGINALNAME_PROP:  return \"originalname\";\n         case SIDE_EFFECT_FLAGS:  return \"side_effect_flags\";\n@@ -1424,7 +1424,6 @@\n       }\n       res = n.checkTreeEqualsImpl(n2);\n       if (res != null) {\n-        return res;\n       }\n     }\n     return res;\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 06:51:37.283732609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_916/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 07:04:33.353421139 -0500\n@@ -315,7 +315,7 @@\n           case NUMBER:          return \"NUMBER\";\n           case STRING:          return \"STRING\";\n           case NULL:            return \"NULL\";\n-          case THIS:            return \"THIS\";\n+          case THIS:            ;\n           case FALSE:           return \"FALSE\";\n           case TRUE:            return \"TRUE\";\n           case SHEQ:            return \"SHEQ\";\n@@ -356,7 +356,7 @@\n           case RB:              return \"RB\";\n           case LC:              return \"LC\";\n           case RC:              return \"RC\";\n-          case LP:              return \"LP\";\n+          case LP:              ;\n           case RP:              return \"RP\";\n           case COMMA:           return \"COMMA\";\n           case ASSIGN:          return \"ASSIGN\";\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 221, 
          "faulty": "return \"synthetic\";", 
          "type": "Delete", 
          "seed": "consumeToken();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1427, 
          "faulty": "return res;", 
          "type": "Delete", 
          "seed": "boolean first=true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 318, 
          "faulty": "return \"THIS\";", 
          "type": "Delete", 
          "seed": "return Token.XMLATTR;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "InsertBefore", 
          "seed": "return;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 359, 
          "faulty": "return \"LP\";", 
          "type": "Delete", 
          "seed": "return toString(true,true,true);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:51:37.259744610 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1516/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 07:09:44.961181792 -0500\n@@ -85,7 +85,6 @@\n           boolean canRemove = false;\n \n           if (specializationState == null) {\n-            canRemove = true;\n           } else {\n             Node specializableFunction =\n               getSpecializableFunctionFromSymbol(declaration);\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 06:51:37.283732609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1516/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 07:09:44.961181792 -0500\n@@ -307,7 +307,7 @@\n           case TYPEOF:          return \"TYPEOF\";\n           case GETPROP:         return \"GETPROP\";\n           case SETPROP:         return \"SETPROP\";\n-          case GETELEM:         return \"GETELEM\";\n+          case GETELEM:         return \"return\";\n           case SETELEM:         return \"SETELEM\";\n           case CALL:            return \"CALL\";\n           case NAME:            return \"NAME\";\n@@ -315,7 +315,7 @@\n           case NUMBER:          return \"NUMBER\";\n           case STRING:          return \"STRING\";\n           case NULL:            return \"NULL\";\n-          case THIS:            return \"THIS\";\n+          case THIS:            ;\n           case FALSE:           return \"FALSE\";\n           case TRUE:            return \"TRUE\";\n           case SHEQ:            return \"SHEQ\";\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 88, 
          "faulty": "canRemove=true;", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 310, 
          "faulty": "return \"GETELEM\";", 
          "type": "Replace", 
          "seed": "return \"return\";"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 318, 
          "faulty": "return \"THIS\";", 
          "type": "Delete", 
          "seed": "return Token.STRING;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 06:51:37.259744610 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_978/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-02 07:05:06.417248536 -0500\n@@ -96,11 +96,6 @@\n               canRemove = true;\n             }\n           }\n-\n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 06:51:37.279734609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_978/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-02 07:05:06.421248517 -0500\n@@ -1424,7 +1424,6 @@\n       }\n       res = n.checkTreeEqualsImpl(n2);\n       if (res != null) {\n-        return res;\n       }\n     }\n     return res;\n\n\n--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 06:51:37.283732609 -0500\n+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_978/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-02 07:05:06.421248517 -0500\n@@ -359,7 +359,7 @@\n           case LP:              return \"LP\";\n           case RP:              return \"RP\";\n           case COMMA:           return \"COMMA\";\n-          case ASSIGN:          return \"ASSIGN\";\n+          case ASSIGN:          ;\n           case ASSIGN_BITOR:    return \"ASSIGN_BITOR\";\n           case ASSIGN_BITXOR:   return \"ASSIGN_BITXOR\";\n           case ASSIGN_BITAND:   return \"ASSIGN_BITAND\";\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 102, 
          "faulty": "changed=true;", 
          "type": "InsertBefore", 
          "seed": "StringBuilder builder=new StringBuilder();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 362, 
          "faulty": "return \"ASSIGN\";", 
          "type": "Delete", 
          "seed": "Node pn=memberExpr(true);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1427, 
          "faulty": "return res;", 
          "type": "Delete", 
          "seed": "return Token.STRING;"
        }
      ]
    }
  ]
}