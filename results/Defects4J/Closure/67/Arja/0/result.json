{
  "repair_end": "2018-12-01 15:46:28.275163", 
  "repair_begin": "2018-12-01 15:26:03.257598", 
  "patches": [
    {
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1427, 
          "faulty": "return res;", 
          "type": "Delete", 
          "seed": "return new NodeMismatch(this,node2);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 87, 
          "faulty": "if (specializationState == null) {\n  canRemove=true;\n}\n else {\n  Node specializableFunction=getSpecializableFunctionFromSymbol(declaration);\n  if (specializableFunction != null) {\n    specializationState.reportRemovedFunction(specializableFunction,null);\n    canRemove=true;\n  }\n}", 
          "type": "Delete", 
          "seed": "break;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-01 09:25:47.602554953 -0500\n+++ /tmp/Arja_Defects4J_Closure_67/patches_k844/Patch_417/patched/tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-01 09:34:32.818172973 -0500\n@@ -84,19 +84,6 @@\n         for (Symbol declaration : nameInfo.getDeclarations()) {\n           boolean canRemove = false;\n \n-          if (specializationState == null) {\n-            canRemove = true;\n-          } else {\n-            Node specializableFunction =\n-              getSpecializableFunctionFromSymbol(declaration);\n-\n-            if (specializableFunction != null) {\n-              specializationState.reportRemovedFunction(\n-                  specializableFunction, null);\n-              canRemove = true;\n-            }\n-          }\n-\n           if (canRemove) {\n             declaration.remove();\n             changed = true;\n\n\n--- /tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-01 09:25:47.626555117 -0500\n+++ /tmp/Arja_Defects4J_Closure_67/patches_k844/Patch_417/patched/tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-01 09:34:32.822173000 -0500\n@@ -1424,7 +1424,6 @@\n       }\n       res = n.checkTreeEqualsImpl(n2);\n       if (res != null) {\n-        return res;\n       }\n     }\n     return res;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Replace", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 946, 
          "faulty": "sb.append(first.getString());", 
          "type": "Delete", 
          "seed": "toString(sb,printSource,printAnnotations,printType);"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-01 09:25:47.602554953 -0500\n+++ /tmp/Arja_Defects4J_Closure_67/patches_k844/Patch_1162/patched/tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-01 09:45:15.934612772 -0500\n@@ -97,10 +97,7 @@\n             }\n           }\n \n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n+          break;\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n--- /tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-01 09:25:47.626555117 -0500\n+++ /tmp/Arja_Defects4J_Closure_67/patches_k844/Patch_1162/patched/tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-01 09:45:15.938612800 -0500\n@@ -943,7 +943,6 @@\n         if (first == null || first.getType() != Token.NAME) {\n           sb.append(\"<invalid>\");\n         } else {\n-          sb.append(first.getString());\n         }\n       } else if (this instanceof ScriptOrFnNode) {\n         ScriptOrFnNode sof = (ScriptOrFnNode) this;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1427, 
          "faulty": "return res;", 
          "type": "Delete", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 87, 
          "faulty": "if (specializationState == null) {\n  canRemove=true;\n}\n else {\n  Node specializableFunction=getSpecializableFunctionFromSymbol(declaration);\n  if (specializableFunction != null) {\n    specializationState.reportRemovedFunction(specializableFunction,null);\n    canRemove=true;\n  }\n}", 
          "type": "Delete", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 359, 
          "faulty": "return \"LP\";", 
          "type": "InsertBefore", 
          "seed": "if (!(0 <= token && token <= Token.LAST_TOKEN)) throw new IllegalArgumentException();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Replace", 
          "seed": "return;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-01 09:25:47.602554953 -0500\n+++ /tmp/Arja_Defects4J_Closure_67/patches_k844/Patch_1049/patched/tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-01 09:43:33.885908318 -0500\n@@ -84,23 +84,7 @@\n         for (Symbol declaration : nameInfo.getDeclarations()) {\n           boolean canRemove = false;\n \n-          if (specializationState == null) {\n-            canRemove = true;\n-          } else {\n-            Node specializableFunction =\n-              getSpecializableFunctionFromSymbol(declaration);\n-\n-            if (specializableFunction != null) {\n-              specializationState.reportRemovedFunction(\n-                  specializableFunction, null);\n-              canRemove = true;\n-            }\n-          }\n-\n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n+          return;\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n--- /tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-01 09:25:47.626555117 -0500\n+++ /tmp/Arja_Defects4J_Closure_67/patches_k844/Patch_1049/patched/tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-01 09:43:33.889908346 -0500\n@@ -1424,7 +1424,6 @@\n       }\n       res = n.checkTreeEqualsImpl(n2);\n       if (res != null) {\n-        return res;\n       }\n     }\n     return res;\n\n\n--- /tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-01 09:25:47.626555117 -0500\n+++ /tmp/Arja_Defects4J_Closure_67/patches_k844/Patch_1049/patched/tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-01 09:43:33.889908346 -0500\n@@ -356,7 +356,11 @@\n           case RB:              return \"RB\";\n           case LC:              return \"LC\";\n           case RC:              return \"RC\";\n-          case LP:              return \"LP\";\n+          case LP:              {\n+\t\t\t\tif (!(0 <= token && token <= Token.LAST_TOKEN))\n+\t\t\t\t\tthrow new IllegalArgumentException();\n+\t\t\t\treturn \"LP\";\n+\t\t\t}\n           case RP:              return \"RP\";\n           case COMMA:           return \"COMMA\";\n           case ASSIGN:          return \"ASSIGN\";\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 87, 
          "faulty": "if (specializationState == null) {\n  canRemove=true;\n}\n else {\n  Node specializableFunction=getSpecializableFunctionFromSymbol(declaration);\n  if (specializableFunction != null) {\n    specializationState.reportRemovedFunction(specializableFunction,null);\n    canRemove=true;\n  }\n}", 
          "type": "Delete", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 101, 
          "faulty": "declaration.remove();", 
          "type": "Delete", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 939, 
          "faulty": "sb.append(' ');", 
          "type": "InsertBefore", 
          "seed": "sb.append(Token.name(type));"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-01 09:25:47.602554953 -0500\n+++ /tmp/Arja_Defects4J_Closure_67/patches_k844/Patch_766/patched/tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-01 09:39:40.620297994 -0500\n@@ -84,21 +84,7 @@\n         for (Symbol declaration : nameInfo.getDeclarations()) {\n           boolean canRemove = false;\n \n-          if (specializationState == null) {\n-            canRemove = true;\n-          } else {\n-            Node specializableFunction =\n-              getSpecializableFunctionFromSymbol(declaration);\n-\n-            if (specializableFunction != null) {\n-              specializationState.reportRemovedFunction(\n-                  specializableFunction, null);\n-              canRemove = true;\n-            }\n-          }\n-\n           if (canRemove) {\n-            declaration.remove();\n             changed = true;\n           }\n         }\n\n\n--- /tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-01 09:25:47.626555117 -0500\n+++ /tmp/Arja_Defects4J_Closure_67/patches_k844/Patch_766/patched/tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-01 09:39:40.620297994 -0500\n@@ -936,7 +936,8 @@\n         sb.append(' ');\n         sb.append(getString());\n       } else if (type == Token.FUNCTION) {\n-        sb.append(' ');\n+        sb.append(Token.name(type));\n+\t\tsb.append(' ');\n         // In the case of JsDoc trees, the first child is often not a string\n         // which causes exceptions to be thrown when calling toString or\n         // toStringTree.\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 359, 
          "faulty": "return \"LP\";", 
          "type": "Delete", 
          "seed": "case BLOCK:"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Replace", 
          "seed": "return;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-01 09:25:47.602554953 -0500\n+++ /tmp/Arja_Defects4J_Closure_67/patches_k844/Patch_335/patched/tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-01 09:33:06.653578071 -0500\n@@ -97,10 +97,7 @@\n             }\n           }\n \n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n+          return;\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n--- /tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-01 09:25:47.626555117 -0500\n+++ /tmp/Arja_Defects4J_Closure_67/patches_k844/Patch_335/patched/tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-01 09:33:06.653578071 -0500\n@@ -356,7 +356,7 @@\n           case RB:              return \"RB\";\n           case LC:              return \"LC\";\n           case RC:              return \"RC\";\n-          case LP:              return \"LP\";\n+          case LP:              ;\n           case RP:              return \"RP\";\n           case COMMA:           return \"COMMA\";\n           case ASSIGN:          return \"ASSIGN\";\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 88, 
          "faulty": "canRemove=true;", 
          "type": "Replace", 
          "seed": "break;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-01 09:25:47.602554953 -0500\n+++ /tmp/Arja_Defects4J_Closure_67/patches_k844/Patch_156/patched/tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-01 09:31:40.892986941 -0500\n@@ -85,7 +85,7 @@\n           boolean canRemove = false;\n \n           if (specializationState == null) {\n-            canRemove = true;\n+            break;\n           } else {\n             Node specializableFunction =\n               getSpecializableFunctionFromSymbol(declaration);\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 88, 
          "faulty": "canRemove=true;", 
          "type": "Replace", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 87, 
          "faulty": "if (specializationState == null) {\n  canRemove=true;\n}\n else {\n  Node specializableFunction=getSpecializableFunctionFromSymbol(declaration);\n  if (specializableFunction != null) {\n    specializationState.reportRemovedFunction(specializableFunction,null);\n    canRemove=true;\n  }\n}", 
          "type": "Delete", 
          "seed": "break;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-01 09:25:47.602554953 -0500\n+++ /tmp/Arja_Defects4J_Closure_67/patches_k844/Patch_461/patched/tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-01 09:34:58.290348836 -0500\n@@ -84,19 +84,6 @@\n         for (Symbol declaration : nameInfo.getDeclarations()) {\n           boolean canRemove = false;\n \n-          if (specializationState == null) {\n-            canRemove = true;\n-          } else {\n-            Node specializableFunction =\n-              getSpecializableFunctionFromSymbol(declaration);\n-\n-            if (specializableFunction != null) {\n-              specializationState.reportRemovedFunction(\n-                  specializableFunction, null);\n-              canRemove = true;\n-            }\n-          }\n-\n           if (canRemove) {\n             declaration.remove();\n             changed = true;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 87, 
          "faulty": "if (specializationState == null) {\n  canRemove=true;\n}\n else {\n  Node specializableFunction=getSpecializableFunctionFromSymbol(declaration);\n  if (specializableFunction != null) {\n    specializationState.reportRemovedFunction(specializableFunction,null);\n    canRemove=true;\n  }\n}", 
          "type": "Delete", 
          "seed": "break;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-01 09:25:47.602554953 -0500\n+++ /tmp/Arja_Defects4J_Closure_67/patches_k844/Patch_7/patched/tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-01 09:30:19.012423265 -0500\n@@ -84,19 +84,6 @@\n         for (Symbol declaration : nameInfo.getDeclarations()) {\n           boolean canRemove = false;\n \n-          if (specializationState == null) {\n-            canRemove = true;\n-          } else {\n-            Node specializableFunction =\n-              getSpecializableFunctionFromSymbol(declaration);\n-\n-            if (specializableFunction != null) {\n-              specializationState.reportRemovedFunction(\n-                  specializableFunction, null);\n-              canRemove = true;\n-            }\n-          }\n-\n           if (canRemove) {\n             declaration.remove();\n             changed = true;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 87, 
          "faulty": "if (specializationState == null) {\n  canRemove=true;\n}\n else {\n  Node specializableFunction=getSpecializableFunctionFromSymbol(declaration);\n  if (specializableFunction != null) {\n    specializationState.reportRemovedFunction(specializableFunction,null);\n    canRemove=true;\n  }\n}", 
          "type": "Delete", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 359, 
          "faulty": "return \"LP\";", 
          "type": "InsertBefore", 
          "seed": "if (!(0 <= token && token <= Token.LAST_TOKEN)) throw new IllegalArgumentException();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 946, 
          "faulty": "sb.append(first.getString());", 
          "type": "Replace", 
          "seed": "toString(sb,printSource,printAnnotations,printType);"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-01 09:25:47.602554953 -0500\n+++ /tmp/Arja_Defects4J_Closure_67/patches_k844/Patch_445/patched/tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-01 09:34:46.822269659 -0500\n@@ -84,19 +84,6 @@\n         for (Symbol declaration : nameInfo.getDeclarations()) {\n           boolean canRemove = false;\n \n-          if (specializationState == null) {\n-            canRemove = true;\n-          } else {\n-            Node specializableFunction =\n-              getSpecializableFunctionFromSymbol(declaration);\n-\n-            if (specializableFunction != null) {\n-              specializationState.reportRemovedFunction(\n-                  specializableFunction, null);\n-              canRemove = true;\n-            }\n-          }\n-\n           if (canRemove) {\n             declaration.remove();\n             changed = true;\n\n\n--- /tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-01 09:25:47.626555117 -0500\n+++ /tmp/Arja_Defects4J_Closure_67/patches_k844/Patch_445/patched/tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-01 09:34:46.822269659 -0500\n@@ -356,7 +356,11 @@\n           case RB:              return \"RB\";\n           case LC:              return \"LC\";\n           case RC:              return \"RC\";\n-          case LP:              return \"LP\";\n+          case LP:              {\n+\t\t\t\tif (!(0 <= token && token <= Token.LAST_TOKEN))\n+\t\t\t\t\tthrow new IllegalArgumentException();\n+\t\t\t\treturn \"LP\";\n+\t\t\t}\n           case RP:              return \"RP\";\n           case COMMA:           return \"COMMA\";\n           case ASSIGN:          return \"ASSIGN\";\n\n\n--- /tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-01 09:25:47.626555117 -0500\n+++ /tmp/Arja_Defects4J_Closure_67/patches_k844/Patch_445/patched/tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-01 09:34:46.826269686 -0500\n@@ -943,7 +943,7 @@\n         if (first == null || first.getType() != Token.NAME) {\n           sb.append(\"<invalid>\");\n         } else {\n-          sb.append(first.getString());\n+          toString(sb, printSource, printAnnotations, printType);\n         }\n       } else if (this instanceof ScriptOrFnNode) {\n         ScriptOrFnNode sof = (ScriptOrFnNode) this;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Replace", 
          "seed": "return;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 946, 
          "faulty": "sb.append(first.getString());", 
          "type": "Replace", 
          "seed": "parent=null;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-01 09:25:47.602554953 -0500\n+++ /tmp/Arja_Defects4J_Closure_67/patches_k844/Patch_231/patched/tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-01 09:32:16.105229350 -0500\n@@ -97,10 +97,7 @@\n             }\n           }\n \n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n+          return;\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n--- /tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-01 09:25:47.626555117 -0500\n+++ /tmp/Arja_Defects4J_Closure_67/patches_k844/Patch_231/patched/tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-01 09:32:16.109229378 -0500\n@@ -943,7 +943,7 @@\n         if (first == null || first.getType() != Token.NAME) {\n           sb.append(\"<invalid>\");\n         } else {\n-          sb.append(first.getString());\n+          parent = null;\n         }\n       } else if (this instanceof ScriptOrFnNode) {\n         ScriptOrFnNode sof = (ScriptOrFnNode) this;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 88, 
          "faulty": "canRemove=true;", 
          "type": "Replace", 
          "seed": "return;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 87, 
          "faulty": "if (specializationState == null) {\n  canRemove=true;\n}\n else {\n  Node specializableFunction=getSpecializableFunctionFromSymbol(declaration);\n  if (specializableFunction != null) {\n    specializationState.reportRemovedFunction(specializableFunction,null);\n    canRemove=true;\n  }\n}", 
          "type": "Delete", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 359, 
          "faulty": "return \"LP\";", 
          "type": "InsertBefore", 
          "seed": "if (!(0 <= token && token <= Token.LAST_TOKEN)) throw new IllegalArgumentException();"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-01 09:25:47.602554953 -0500\n+++ /tmp/Arja_Defects4J_Closure_67/patches_k844/Patch_241/patched/tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-01 09:32:21.389265726 -0500\n@@ -84,19 +84,6 @@\n         for (Symbol declaration : nameInfo.getDeclarations()) {\n           boolean canRemove = false;\n \n-          if (specializationState == null) {\n-            canRemove = true;\n-          } else {\n-            Node specializableFunction =\n-              getSpecializableFunctionFromSymbol(declaration);\n-\n-            if (specializableFunction != null) {\n-              specializationState.reportRemovedFunction(\n-                  specializableFunction, null);\n-              canRemove = true;\n-            }\n-          }\n-\n           if (canRemove) {\n             declaration.remove();\n             changed = true;\n\n\n--- /tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-01 09:25:47.626555117 -0500\n+++ /tmp/Arja_Defects4J_Closure_67/patches_k844/Patch_241/patched/tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-01 09:32:21.389265726 -0500\n@@ -356,7 +356,11 @@\n           case RB:              return \"RB\";\n           case LC:              return \"LC\";\n           case RC:              return \"RC\";\n-          case LP:              return \"LP\";\n+          case LP:              {\n+\t\t\t\tif (!(0 <= token && token <= Token.LAST_TOKEN))\n+\t\t\t\t\tthrow new IllegalArgumentException();\n+\t\t\t\treturn \"LP\";\n+\t\t\t}\n           case RP:              return \"RP\";\n           case COMMA:           return \"COMMA\";\n           case ASSIGN:          return \"ASSIGN\";\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 101, 
          "faulty": "declaration.remove();", 
          "type": "InsertBefore", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Replace", 
          "seed": "break;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-01 09:25:47.602554953 -0500\n+++ /tmp/Arja_Defects4J_Closure_67/patches_k844/Patch_267/patched/tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-01 09:32:33.801351252 -0500\n@@ -97,10 +97,7 @@\n             }\n           }\n \n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n+          break;\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 318, 
          "faulty": "return \"THIS\";", 
          "type": "Replace", 
          "seed": "return \"script\";"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Replace", 
          "seed": "return;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 946, 
          "faulty": "sb.append(first.getString());", 
          "type": "Replace", 
          "seed": "toString(sb,printSource,printAnnotations,printType);"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-01 09:25:47.602554953 -0500\n+++ /tmp/Arja_Defects4J_Closure_67/patches_k844/Patch_315/patched/tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-01 09:32:56.201505910 -0500\n@@ -97,10 +97,7 @@\n             }\n           }\n \n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n+          return;\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n--- /tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-01 09:25:47.626555117 -0500\n+++ /tmp/Arja_Defects4J_Closure_67/patches_k844/Patch_315/patched/tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-01 09:32:56.201505910 -0500\n@@ -315,7 +315,7 @@\n           case NUMBER:          return \"NUMBER\";\n           case STRING:          return \"STRING\";\n           case NULL:            return \"NULL\";\n-          case THIS:            return \"THIS\";\n+          case THIS:            return \"script\";\n           case FALSE:           return \"FALSE\";\n           case TRUE:            return \"TRUE\";\n           case SHEQ:            return \"SHEQ\";\n\n\n--- /tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-01 09:25:47.626555117 -0500\n+++ /tmp/Arja_Defects4J_Closure_67/patches_k844/Patch_315/patched/tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-01 09:32:56.205505938 -0500\n@@ -943,7 +943,7 @@\n         if (first == null || first.getType() != Token.NAME) {\n           sb.append(\"<invalid>\");\n         } else {\n-          sb.append(first.getString());\n+          toString(sb, printSource, printAnnotations, printType);\n         }\n       } else if (this instanceof ScriptOrFnNode) {\n         ScriptOrFnNode sof = (ScriptOrFnNode) this;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Replace", 
          "seed": "return;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 362, 
          "faulty": "return \"ASSIGN\";", 
          "type": "Replace", 
          "seed": "return \"script\";"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-01 09:25:47.602554953 -0500\n+++ /tmp/Arja_Defects4J_Closure_67/patches_k844/Patch_907/patched/tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-01 09:41:09.192909456 -0500\n@@ -97,10 +97,7 @@\n             }\n           }\n \n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n+          return;\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n--- /tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-01 09:25:47.626555117 -0500\n+++ /tmp/Arja_Defects4J_Closure_67/patches_k844/Patch_907/patched/tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-01 09:41:09.196909483 -0500\n@@ -359,7 +359,7 @@\n           case LP:              return \"LP\";\n           case RP:              return \"RP\";\n           case COMMA:           return \"COMMA\";\n-          case ASSIGN:          return \"ASSIGN\";\n+          case ASSIGN:          return \"script\";\n           case ASSIGN_BITOR:    return \"ASSIGN_BITOR\";\n           case ASSIGN_BITXOR:   return \"ASSIGN_BITXOR\";\n           case ASSIGN_BITAND:   return \"ASSIGN_BITAND\";\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 87, 
          "faulty": "if (specializationState == null) {\n  canRemove=true;\n}\n else {\n  Node specializableFunction=getSpecializableFunctionFromSymbol(declaration);\n  if (specializableFunction != null) {\n    specializationState.reportRemovedFunction(specializableFunction,null);\n    canRemove=true;\n  }\n}", 
          "type": "Delete", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 946, 
          "faulty": "sb.append(first.getString());", 
          "type": "Replace", 
          "seed": "toString(sb,printSource,printAnnotations,printType);"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-01 09:25:47.602554953 -0500\n+++ /tmp/Arja_Defects4J_Closure_67/patches_k844/Patch_189/patched/tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-01 09:31:56.945097446 -0500\n@@ -84,19 +84,6 @@\n         for (Symbol declaration : nameInfo.getDeclarations()) {\n           boolean canRemove = false;\n \n-          if (specializationState == null) {\n-            canRemove = true;\n-          } else {\n-            Node specializableFunction =\n-              getSpecializableFunctionFromSymbol(declaration);\n-\n-            if (specializableFunction != null) {\n-              specializationState.reportRemovedFunction(\n-                  specializableFunction, null);\n-              canRemove = true;\n-            }\n-          }\n-\n           if (canRemove) {\n             declaration.remove();\n             changed = true;\n\n\n--- /tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-01 09:25:47.626555117 -0500\n+++ /tmp/Arja_Defects4J_Closure_67/patches_k844/Patch_189/patched/tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-01 09:31:56.945097446 -0500\n@@ -943,7 +943,7 @@\n         if (first == null || first.getType() != Token.NAME) {\n           sb.append(\"<invalid>\");\n         } else {\n-          sb.append(first.getString());\n+          toString(sb, printSource, printAnnotations, printType);\n         }\n       } else if (this instanceof ScriptOrFnNode) {\n         ScriptOrFnNode sof = (ScriptOrFnNode) this;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1427, 
          "faulty": "return res;", 
          "type": "Delete", 
          "seed": "Kit.codeBug();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 84, 
          "faulty": "for (Symbol declaration : nameInfo.getDeclarations()) {\n  boolean canRemove=false;\n  if (specializationState == null) {\n    canRemove=true;\n  }\n else {\n    Node specializableFunction=getSpecializableFunctionFromSymbol(declaration);\n    if (specializableFunction != null) {\n      specializationState.reportRemovedFunction(specializableFunction,null);\n      canRemove=true;\n    }\n  }\n  if (canRemove) {\n    declaration.remove();\n    changed=true;\n  }\n}", 
          "type": "Delete", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 106, 
          "faulty": "logger.fine(\"Removed unused prototype property: \" + nameInfo.name);", 
          "type": "Replace", 
          "seed": "return;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-01 09:25:47.602554953 -0500\n+++ /tmp/Arja_Defects4J_Closure_67/patches_k844/Patch_63/patched/tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-01 09:30:52.252652093 -0500\n@@ -81,29 +81,7 @@\n     boolean changed = false;\n     for (NameInfo nameInfo : allNameInfo) {\n       if (!nameInfo.isReferenced()) {\n-        for (Symbol declaration : nameInfo.getDeclarations()) {\n-          boolean canRemove = false;\n-\n-          if (specializationState == null) {\n-            canRemove = true;\n-          } else {\n-            Node specializableFunction =\n-              getSpecializableFunctionFromSymbol(declaration);\n-\n-            if (specializableFunction != null) {\n-              specializationState.reportRemovedFunction(\n-                  specializableFunction, null);\n-              canRemove = true;\n-            }\n-          }\n-\n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n-        }\n-\n-        logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n+        return;\n       }\n     }\n \n\n\n--- /tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-01 09:25:47.626555117 -0500\n+++ /tmp/Arja_Defects4J_Closure_67/patches_k844/Patch_63/patched/tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-01 09:30:52.256652121 -0500\n@@ -1424,7 +1424,6 @@\n       }\n       res = n.checkTreeEqualsImpl(n2);\n       if (res != null) {\n-        return res;\n       }\n     }\n     return res;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 88, 
          "faulty": "canRemove=true;", 
          "type": "Replace", 
          "seed": "return;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 87, 
          "faulty": "if (specializationState == null) {\n  canRemove=true;\n}\n else {\n  Node specializableFunction=getSpecializableFunctionFromSymbol(declaration);\n  if (specializableFunction != null) {\n    specializationState.reportRemovedFunction(specializableFunction,null);\n    canRemove=true;\n  }\n}", 
          "type": "Delete", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 101, 
          "faulty": "declaration.remove();", 
          "type": "Delete", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 943, 
          "faulty": "if (first == null || first.getType() != Token.NAME) {\n  sb.append(\"<invalid>\");\n}\n else {\n  sb.append(first.getString());\n}", 
          "type": "Delete", 
          "seed": "sb.append(Token.name(type));"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-01 09:25:47.602554953 -0500\n+++ /tmp/Arja_Defects4J_Closure_67/patches_k844/Patch_682/patched/tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-01 09:38:43.651904705 -0500\n@@ -84,21 +84,7 @@\n         for (Symbol declaration : nameInfo.getDeclarations()) {\n           boolean canRemove = false;\n \n-          if (specializationState == null) {\n-            canRemove = true;\n-          } else {\n-            Node specializableFunction =\n-              getSpecializableFunctionFromSymbol(declaration);\n-\n-            if (specializableFunction != null) {\n-              specializationState.reportRemovedFunction(\n-                  specializableFunction, null);\n-              canRemove = true;\n-            }\n-          }\n-\n           if (canRemove) {\n-            declaration.remove();\n             changed = true;\n           }\n         }\n\n\n--- /tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-01 09:25:47.626555117 -0500\n+++ /tmp/Arja_Defects4J_Closure_67/patches_k844/Patch_682/patched/tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-01 09:38:43.651904705 -0500\n@@ -937,14 +937,6 @@\n         sb.append(getString());\n       } else if (type == Token.FUNCTION) {\n         sb.append(' ');\n-        // In the case of JsDoc trees, the first child is often not a string\n-        // which causes exceptions to be thrown when calling toString or\n-        // toStringTree.\n-        if (first == null || first.getType() != Token.NAME) {\n-          sb.append(\"<invalid>\");\n-        } else {\n-          sb.append(first.getString());\n-        }\n       } else if (this instanceof ScriptOrFnNode) {\n         ScriptOrFnNode sof = (ScriptOrFnNode) this;\n         if (this instanceof FunctionNode) {\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 101, 
          "faulty": "declaration.remove();", 
          "type": "InsertBefore", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Replace", 
          "seed": "return;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 102, 
          "faulty": "changed=true;", 
          "type": "Delete", 
          "seed": "return;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-01 09:25:47.602554953 -0500\n+++ /tmp/Arja_Defects4J_Closure_67/patches_k844/Patch_797/patched/tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-01 09:39:57.960417703 -0500\n@@ -97,10 +97,7 @@\n             }\n           }\n \n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n+          return;\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1427, 
          "faulty": "return res;", 
          "type": "Delete", 
          "seed": "break L0;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 88, 
          "faulty": "canRemove=true;", 
          "type": "Replace", 
          "seed": "return;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Replace", 
          "seed": "return;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-01 09:25:47.602554953 -0500\n+++ /tmp/Arja_Defects4J_Closure_67/patches_k844/Patch_191/patched/tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-01 09:31:57.561101688 -0500\n@@ -85,7 +85,7 @@\n           boolean canRemove = false;\n \n           if (specializationState == null) {\n-            canRemove = true;\n+            return;\n           } else {\n             Node specializableFunction =\n               getSpecializableFunctionFromSymbol(declaration);\n@@ -97,10 +97,7 @@\n             }\n           }\n \n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n+          return;\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n--- /tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-01 09:25:47.626555117 -0500\n+++ /tmp/Arja_Defects4J_Closure_67/patches_k844/Patch_191/patched/tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-01 09:31:57.565101715 -0500\n@@ -1424,7 +1424,6 @@\n       }\n       res = n.checkTreeEqualsImpl(n2);\n       if (res != null) {\n-        return res;\n       }\n     }\n     return res;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 310, 
          "faulty": "return \"GETELEM\";", 
          "type": "Replace", 
          "seed": "if (!(0 <= token && token <= Token.LAST_TOKEN)) throw new IllegalArgumentException();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 88, 
          "faulty": "canRemove=true;", 
          "type": "Replace", 
          "seed": "return;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-01 09:25:47.602554953 -0500\n+++ /tmp/Arja_Defects4J_Closure_67/patches_k844/Patch_209/patched/tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-01 09:32:06.165160920 -0500\n@@ -85,7 +85,7 @@\n           boolean canRemove = false;\n \n           if (specializationState == null) {\n-            canRemove = true;\n+            return;\n           } else {\n             Node specializableFunction =\n               getSpecializableFunctionFromSymbol(declaration);\n@@ -96,11 +96,6 @@\n               canRemove = true;\n             }\n           }\n-\n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n--- /tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-01 09:25:47.626555117 -0500\n+++ /tmp/Arja_Defects4J_Closure_67/patches_k844/Patch_209/patched/tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-01 09:32:06.193161113 -0500\n@@ -307,7 +307,8 @@\n           case TYPEOF:          return \"TYPEOF\";\n           case GETPROP:         return \"GETPROP\";\n           case SETPROP:         return \"SETPROP\";\n-          case GETELEM:         return \"GETELEM\";\n+          case GETELEM:         if (!(0 <= token && token <= Token.LAST_TOKEN))\n+\t\t\t\tthrow new IllegalArgumentException();\n           case SETELEM:         return \"SETELEM\";\n           case CALL:            return \"CALL\";\n           case NAME:            return \"NAME\";\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Replace", 
          "seed": "return;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 946, 
          "faulty": "sb.append(first.getString());", 
          "type": "InsertBefore", 
          "seed": "toString(sb,printSource,printAnnotations,printType);"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-01 09:25:47.602554953 -0500\n+++ /tmp/Arja_Defects4J_Closure_67/patches_k844/Patch_898/patched/tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-01 09:40:56.340820732 -0500\n@@ -97,10 +97,7 @@\n             }\n           }\n \n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n+          return;\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n--- /tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-01 09:25:47.626555117 -0500\n+++ /tmp/Arja_Defects4J_Closure_67/patches_k844/Patch_898/patched/tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-01 09:40:56.340820732 -0500\n@@ -943,7 +943,8 @@\n         if (first == null || first.getType() != Token.NAME) {\n           sb.append(\"<invalid>\");\n         } else {\n-          sb.append(first.getString());\n+          toString(sb, printSource, printAnnotations, printType);\n+\t\tsb.append(first.getString());\n         }\n       } else if (this instanceof ScriptOrFnNode) {\n         ScriptOrFnNode sof = (ScriptOrFnNode) this;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Replace", 
          "seed": "return;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 221, 
          "faulty": "return \"synthetic\";", 
          "type": "Delete", 
          "seed": "return \"return\";"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-01 09:25:47.602554953 -0500\n+++ /tmp/Arja_Defects4J_Closure_67/patches_k844/Patch_79/patched/tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-01 09:31:02.292721210 -0500\n@@ -97,10 +97,7 @@\n             }\n           }\n \n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n+          return;\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n--- /tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-01 09:25:47.626555117 -0500\n+++ /tmp/Arja_Defects4J_Closure_67/patches_k844/Patch_79/patched/tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-01 09:31:02.308721320 -0500\n@@ -218,7 +218,7 @@\n         case QUOTED_PROP:        return \"quoted\";\n         case OPT_ARG_NAME:       return \"opt_arg\";\n \n-        case SYNTHETIC_BLOCK_PROP: return \"synthetic\";\n+        case SYNTHETIC_BLOCK_PROP: ;\n         case EMPTY_BLOCK:        return \"empty_block\";\n         case ORIGINALNAME_PROP:  return \"originalname\";\n         case SIDE_EFFECT_FLAGS:  return \"side_effect_flags\";\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 310, 
          "faulty": "return \"GETELEM\";", 
          "type": "Replace", 
          "seed": "if (!(0 <= token && token <= Token.LAST_TOKEN)) throw new IllegalArgumentException();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-01 09:25:47.602554953 -0500\n+++ /tmp/Arja_Defects4J_Closure_67/patches_k844/Patch_143/patched/tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-01 09:31:34.896945663 -0500\n@@ -96,11 +96,6 @@\n               canRemove = true;\n             }\n           }\n-\n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n--- /tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-01 09:25:47.626555117 -0500\n+++ /tmp/Arja_Defects4J_Closure_67/patches_k844/Patch_143/patched/tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-01 09:31:34.900945690 -0500\n@@ -307,7 +307,8 @@\n           case TYPEOF:          return \"TYPEOF\";\n           case GETPROP:         return \"GETPROP\";\n           case SETPROP:         return \"SETPROP\";\n-          case GETELEM:         return \"GETELEM\";\n+          case GETELEM:         if (!(0 <= token && token <= Token.LAST_TOKEN))\n+\t\t\t\tthrow new IllegalArgumentException();\n           case SETELEM:         return \"SETELEM\";\n           case CALL:            return \"CALL\";\n           case NAME:            return \"NAME\";\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 310, 
          "faulty": "return \"GETELEM\";", 
          "type": "Delete", 
          "seed": "return \"BITOR\";"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Replace", 
          "seed": "return;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 221, 
          "faulty": "return \"synthetic\";", 
          "type": "Delete", 
          "seed": "return \"BLOCK\";"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-01 09:25:47.602554953 -0500\n+++ /tmp/Arja_Defects4J_Closure_67/patches_k844/Patch_943/patched/tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-01 09:41:48.617181618 -0500\n@@ -97,10 +97,7 @@\n             }\n           }\n \n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n+          return;\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n--- /tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-01 09:25:47.626555117 -0500\n+++ /tmp/Arja_Defects4J_Closure_67/patches_k844/Patch_943/patched/tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-01 09:41:48.621181645 -0500\n@@ -307,7 +307,7 @@\n           case TYPEOF:          return \"TYPEOF\";\n           case GETPROP:         return \"GETPROP\";\n           case SETPROP:         return \"SETPROP\";\n-          case GETELEM:         return \"GETELEM\";\n+          case GETELEM:         ;\n           case SETELEM:         return \"SETELEM\";\n           case CALL:            return \"CALL\";\n           case NAME:            return \"NAME\";\n\n\n--- /tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-01 09:25:47.626555117 -0500\n+++ /tmp/Arja_Defects4J_Closure_67/patches_k844/Patch_943/patched/tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-01 09:41:48.621181645 -0500\n@@ -218,7 +218,7 @@\n         case QUOTED_PROP:        return \"quoted\";\n         case OPT_ARG_NAME:       return \"opt_arg\";\n \n-        case SYNTHETIC_BLOCK_PROP: return \"synthetic\";\n+        case SYNTHETIC_BLOCK_PROP: ;\n         case EMPTY_BLOCK:        return \"empty_block\";\n         case ORIGINALNAME_PROP:  return \"originalname\";\n         case SIDE_EFFECT_FLAGS:  return \"side_effect_flags\";\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 88, 
          "faulty": "canRemove=true;", 
          "type": "Replace", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1027, 
          "faulty": "value=String.valueOf(x.intValue);", 
          "type": "InsertBefore", 
          "seed": "sourcePosition=-1;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-01 09:25:47.602554953 -0500\n+++ /tmp/Arja_Defects4J_Closure_67/patches_k844/Patch_297/patched/tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-01 09:32:47.729447417 -0500\n@@ -85,7 +85,7 @@\n           boolean canRemove = false;\n \n           if (specializationState == null) {\n-            canRemove = true;\n+            break;\n           } else {\n             Node specializableFunction =\n               getSpecializableFunctionFromSymbol(declaration);\n\n\n--- /tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-01 09:25:47.626555117 -0500\n+++ /tmp/Arja_Defects4J_Closure_67/patches_k844/Patch_297/patched/tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-01 09:32:47.729447417 -0500\n@@ -1024,7 +1024,8 @@\n               if (obj != null) {\n                 value = obj.toString();\n               } else {\n-                value = String.valueOf(x.intValue);\n+                sourcePosition = -1;\n+\t\t\t\tvalue = String.valueOf(x.intValue);\n               }\n               break;\n           }\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 88, 
          "faulty": "canRemove=true;", 
          "type": "Delete", 
          "seed": "return;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 221, 
          "faulty": "return \"synthetic\";", 
          "type": "Delete", 
          "seed": "break tailLoop;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-01 09:25:47.602554953 -0500\n+++ /tmp/Arja_Defects4J_Closure_67/patches_k844/Patch_112/patched/tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-01 09:31:18.868835323 -0500\n@@ -85,7 +85,6 @@\n           boolean canRemove = false;\n \n           if (specializationState == null) {\n-            canRemove = true;\n           } else {\n             Node specializableFunction =\n               getSpecializableFunctionFromSymbol(declaration);\n\n\n--- /tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-01 09:25:47.626555117 -0500\n+++ /tmp/Arja_Defects4J_Closure_67/patches_k844/Patch_112/patched/tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-01 09:31:18.868835323 -0500\n@@ -218,7 +218,7 @@\n         case QUOTED_PROP:        return \"quoted\";\n         case OPT_ARG_NAME:       return \"opt_arg\";\n \n-        case SYNTHETIC_BLOCK_PROP: return \"synthetic\";\n+        case SYNTHETIC_BLOCK_PROP: ;\n         case EMPTY_BLOCK:        return \"empty_block\";\n         case ORIGINALNAME_PROP:  return \"originalname\";\n         case SIDE_EFFECT_FLAGS:  return \"side_effect_flags\";\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Replace", 
          "seed": "return;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 939, 
          "faulty": "sb.append(' ');", 
          "type": "InsertBefore", 
          "seed": "sb.append(Token.name(type));"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-01 09:25:47.602554953 -0500\n+++ /tmp/Arja_Defects4J_Closure_67/patches_k844/Patch_506/patched/tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-01 09:35:48.082692604 -0500\n@@ -97,10 +97,7 @@\n             }\n           }\n \n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n+          return;\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n--- /tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-01 09:25:47.626555117 -0500\n+++ /tmp/Arja_Defects4J_Closure_67/patches_k844/Patch_506/patched/tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-01 09:35:48.082692604 -0500\n@@ -936,7 +936,8 @@\n         sb.append(' ');\n         sb.append(getString());\n       } else if (type == Token.FUNCTION) {\n-        sb.append(' ');\n+        sb.append(Token.name(type));\n+\t\tsb.append(' ');\n         // In the case of JsDoc trees, the first child is often not a string\n         // which causes exceptions to be thrown when calling toString or\n         // toStringTree.\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Replace", 
          "seed": "return;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1385, 
          "faulty": "return \"Node tree inequality:\" + \"\\nTree1:\\n\" + toStringTree() + \"\\n\\nTree2:\\n\"+ node2.toStringTree()+ \"\\n\\nSubtree1: \"+ diff.nodeA.toStringTree()+ \"\\n\\nSubtree2: \"+ diff.nodeB.toStringTree();", 
          "type": "Replace", 
          "seed": "return \"BITOR\";"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-01 09:25:47.602554953 -0500\n+++ /tmp/Arja_Defects4J_Closure_67/patches_k844/Patch_673/patched/tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-01 09:38:36.859857815 -0500\n@@ -97,10 +97,7 @@\n             }\n           }\n \n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n+          return;\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n--- /tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-01 09:25:47.626555117 -0500\n+++ /tmp/Arja_Defects4J_Closure_67/patches_k844/Patch_673/patched/tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-01 09:38:36.859857815 -0500\n@@ -1382,11 +1382,7 @@\n   public String checkTreeEquals(Node node2) {\n       NodeMismatch diff = checkTreeEqualsImpl(node2);\n       if (diff != null) {\n-        return \"Node tree inequality:\" +\n-            \"\\nTree1:\\n\" + toStringTree() +\n-            \"\\n\\nTree2:\\n\" + node2.toStringTree() +\n-            \"\\n\\nSubtree1: \" + diff.nodeA.toStringTree() +\n-            \"\\n\\nSubtree2: \" + diff.nodeB.toStringTree();\n+        return \"BITOR\";\n       }\n       return null;\n   }\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Replace", 
          "seed": "return;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 221, 
          "faulty": "case SYNTHETIC_BLOCK_PROP:", 
          "type": "Replace", 
          "seed": "case Token.SCRIPT:"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-01 09:25:47.602554953 -0500\n+++ /tmp/Arja_Defects4J_Closure_67/patches_k844/Patch_405/patched/tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-01 09:34:20.154085538 -0500\n@@ -97,10 +97,7 @@\n             }\n           }\n \n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n+          return;\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n--- /tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-01 09:25:47.626555117 -0500\n+++ /tmp/Arja_Defects4J_Closure_67/patches_k844/Patch_405/patched/tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-01 09:34:20.154085538 -0500\n@@ -218,7 +218,7 @@\n         case QUOTED_PROP:        return \"quoted\";\n         case OPT_ARG_NAME:       return \"opt_arg\";\n \n-        case SYNTHETIC_BLOCK_PROP: return \"synthetic\";\n+\tcase Token.SCRIPT: return \"synthetic\";\n         case EMPTY_BLOCK:        return \"empty_block\";\n         case ORIGINALNAME_PROP:  return \"originalname\";\n         case SIDE_EFFECT_FLAGS:  return \"side_effect_flags\";\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 359, 
          "faulty": "return \"LP\";", 
          "type": "Delete", 
          "seed": "case 4:"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Replace", 
          "seed": "return;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 221, 
          "faulty": "return \"synthetic\";", 
          "type": "Delete", 
          "seed": "case 2:"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-01 09:25:47.602554953 -0500\n+++ /tmp/Arja_Defects4J_Closure_67/patches_k844/Patch_948/patched/tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-01 09:41:51.633202439 -0500\n@@ -97,10 +97,7 @@\n             }\n           }\n \n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n+          return;\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n--- /tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-01 09:25:47.626555117 -0500\n+++ /tmp/Arja_Defects4J_Closure_67/patches_k844/Patch_948/patched/tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-01 09:41:51.633202439 -0500\n@@ -356,7 +356,7 @@\n           case RB:              return \"RB\";\n           case LC:              return \"LC\";\n           case RC:              return \"RC\";\n-          case LP:              return \"LP\";\n+          case LP:              ;\n           case RP:              return \"RP\";\n           case COMMA:           return \"COMMA\";\n           case ASSIGN:          return \"ASSIGN\";\n\n\n--- /tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-01 09:25:47.626555117 -0500\n+++ /tmp/Arja_Defects4J_Closure_67/patches_k844/Patch_948/patched/tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-01 09:41:51.633202439 -0500\n@@ -218,7 +218,7 @@\n         case QUOTED_PROP:        return \"quoted\";\n         case OPT_ARG_NAME:       return \"opt_arg\";\n \n-        case SYNTHETIC_BLOCK_PROP: return \"synthetic\";\n+        case SYNTHETIC_BLOCK_PROP: ;\n         case EMPTY_BLOCK:        return \"empty_block\";\n         case ORIGINALNAME_PROP:  return \"originalname\";\n         case SIDE_EFFECT_FLAGS:  return \"side_effect_flags\";\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Replace", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 221, 
          "faulty": "return \"synthetic\";", 
          "type": "Delete", 
          "seed": "return \"BLOCK\";"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-01 09:25:47.602554953 -0500\n+++ /tmp/Arja_Defects4J_Closure_67/patches_k844/Patch_467/patched/tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-01 09:35:01.778372917 -0500\n@@ -97,10 +97,7 @@\n             }\n           }\n \n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n+          break;\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n--- /tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-01 09:25:47.626555117 -0500\n+++ /tmp/Arja_Defects4J_Closure_67/patches_k844/Patch_467/patched/tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-01 09:35:01.778372917 -0500\n@@ -218,7 +218,7 @@\n         case QUOTED_PROP:        return \"quoted\";\n         case OPT_ARG_NAME:       return \"opt_arg\";\n \n-        case SYNTHETIC_BLOCK_PROP: return \"synthetic\";\n+        case SYNTHETIC_BLOCK_PROP: ;\n         case EMPTY_BLOCK:        return \"empty_block\";\n         case ORIGINALNAME_PROP:  return \"originalname\";\n         case SIDE_EFFECT_FLAGS:  return \"side_effect_flags\";\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 318, 
          "faulty": "return \"THIS\";", 
          "type": "Replace", 
          "seed": "return \"ENTERWITH\";"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 87, 
          "faulty": "if (specializationState == null) {\n  canRemove=true;\n}\n else {\n  Node specializableFunction=getSpecializableFunctionFromSymbol(declaration);\n  if (specializableFunction != null) {\n    specializationState.reportRemovedFunction(specializableFunction,null);\n    canRemove=true;\n  }\n}", 
          "type": "Delete", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 939, 
          "faulty": "sb.append(' ');", 
          "type": "InsertBefore", 
          "seed": "if (printSource) {\n  int lineno=getLineno();\n  if (lineno != -1) {\n    sb.append(' ');\n    sb.append(lineno);\n  }\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-01 09:25:47.602554953 -0500\n+++ /tmp/Arja_Defects4J_Closure_67/patches_k844/Patch_819/patched/tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-01 09:40:10.304502921 -0500\n@@ -84,19 +84,6 @@\n         for (Symbol declaration : nameInfo.getDeclarations()) {\n           boolean canRemove = false;\n \n-          if (specializationState == null) {\n-            canRemove = true;\n-          } else {\n-            Node specializableFunction =\n-              getSpecializableFunctionFromSymbol(declaration);\n-\n-            if (specializableFunction != null) {\n-              specializationState.reportRemovedFunction(\n-                  specializableFunction, null);\n-              canRemove = true;\n-            }\n-          }\n-\n           if (canRemove) {\n             declaration.remove();\n             changed = true;\n\n\n--- /tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-01 09:25:47.626555117 -0500\n+++ /tmp/Arja_Defects4J_Closure_67/patches_k844/Patch_819/patched/tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-01 09:40:10.308502948 -0500\n@@ -315,7 +315,7 @@\n           case NUMBER:          return \"NUMBER\";\n           case STRING:          return \"STRING\";\n           case NULL:            return \"NULL\";\n-          case THIS:            return \"THIS\";\n+          case THIS:            return \"ENTERWITH\";\n           case FALSE:           return \"FALSE\";\n           case TRUE:            return \"TRUE\";\n           case SHEQ:            return \"SHEQ\";\n\n\n--- /tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-01 09:25:47.626555117 -0500\n+++ /tmp/Arja_Defects4J_Closure_67/patches_k844/Patch_819/patched/tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-01 09:40:10.308502948 -0500\n@@ -936,7 +936,14 @@\n         sb.append(' ');\n         sb.append(getString());\n       } else if (type == Token.FUNCTION) {\n-        sb.append(' ');\n+        if (printSource) {\n+\t\t\tint lineno = getLineno();\n+\t\t\tif (lineno != -1) {\n+\t\t\t\tsb.append(' ');\n+\t\t\t\tsb.append(lineno);\n+\t\t\t}\n+\t\t}\n+\t\tsb.append(' ');\n         // In the case of JsDoc trees, the first child is often not a string\n         // which causes exceptions to be thrown when calling toString or\n         // toStringTree.\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 101, 
          "faulty": "declaration.remove();", 
          "type": "InsertBefore", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Replace", 
          "seed": "return;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-01 09:25:47.602554953 -0500\n+++ /tmp/Arja_Defects4J_Closure_67/patches_k844/Patch_264/patched/tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-01 09:32:32.613343050 -0500\n@@ -97,10 +97,7 @@\n             }\n           }\n \n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n+          return;\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1427, 
          "faulty": "return res;", 
          "type": "Delete", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 87, 
          "faulty": "if (specializationState == null) {\n  canRemove=true;\n}\n else {\n  Node specializableFunction=getSpecializableFunctionFromSymbol(declaration);\n  if (specializableFunction != null) {\n    specializationState.reportRemovedFunction(specializableFunction,null);\n    canRemove=true;\n  }\n}", 
          "type": "Delete", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 939, 
          "faulty": "sb.append(' ');", 
          "type": "InsertBefore", 
          "seed": "sb.append(Token.name(type));"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-01 09:25:47.602554953 -0500\n+++ /tmp/Arja_Defects4J_Closure_67/patches_k844/Patch_561/patched/tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-01 09:36:22.362929273 -0500\n@@ -84,19 +84,6 @@\n         for (Symbol declaration : nameInfo.getDeclarations()) {\n           boolean canRemove = false;\n \n-          if (specializationState == null) {\n-            canRemove = true;\n-          } else {\n-            Node specializableFunction =\n-              getSpecializableFunctionFromSymbol(declaration);\n-\n-            if (specializableFunction != null) {\n-              specializationState.reportRemovedFunction(\n-                  specializableFunction, null);\n-              canRemove = true;\n-            }\n-          }\n-\n           if (canRemove) {\n             declaration.remove();\n             changed = true;\n\n\n--- /tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-01 09:25:47.626555117 -0500\n+++ /tmp/Arja_Defects4J_Closure_67/patches_k844/Patch_561/patched/tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-01 09:36:22.362929273 -0500\n@@ -936,7 +936,8 @@\n         sb.append(' ');\n         sb.append(getString());\n       } else if (type == Token.FUNCTION) {\n-        sb.append(' ');\n+        sb.append(Token.name(type));\n+\t\tsb.append(' ');\n         // In the case of JsDoc trees, the first child is often not a string\n         // which causes exceptions to be thrown when calling toString or\n         // toStringTree.\n@@ -1424,7 +1425,6 @@\n       }\n       res = n.checkTreeEqualsImpl(n2);\n       if (res != null) {\n-        return res;\n       }\n     }\n     return res;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 359, 
          "faulty": "return \"LP\";", 
          "type": "InsertBefore", 
          "seed": "if (!(0 <= token && token <= Token.LAST_TOKEN)) throw new IllegalArgumentException();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Replace", 
          "seed": "return;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 946, 
          "faulty": "sb.append(first.getString());", 
          "type": "Delete", 
          "seed": "toString(sb,printSource,printAnnotations,printType);"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-01 09:25:47.602554953 -0500\n+++ /tmp/Arja_Defects4J_Closure_67/patches_k844/Patch_196/patched/tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-01 09:32:00.137119421 -0500\n@@ -97,10 +97,7 @@\n             }\n           }\n \n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n+          return;\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n--- /tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-01 09:25:47.626555117 -0500\n+++ /tmp/Arja_Defects4J_Closure_67/patches_k844/Patch_196/patched/tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-01 09:32:00.137119421 -0500\n@@ -356,7 +356,11 @@\n           case RB:              return \"RB\";\n           case LC:              return \"LC\";\n           case RC:              return \"RC\";\n-          case LP:              return \"LP\";\n+          case LP:              {\n+\t\t\t\tif (!(0 <= token && token <= Token.LAST_TOKEN))\n+\t\t\t\t\tthrow new IllegalArgumentException();\n+\t\t\t\treturn \"LP\";\n+\t\t\t}\n           case RP:              return \"RP\";\n           case COMMA:           return \"COMMA\";\n           case ASSIGN:          return \"ASSIGN\";\n\n\n--- /tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-01 09:25:47.626555117 -0500\n+++ /tmp/Arja_Defects4J_Closure_67/patches_k844/Patch_196/patched/tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-01 09:32:00.137119421 -0500\n@@ -943,7 +943,6 @@\n         if (first == null || first.getType() != Token.NAME) {\n           sb.append(\"<invalid>\");\n         } else {\n-          sb.append(first.getString());\n         }\n       } else if (this instanceof ScriptOrFnNode) {\n         ScriptOrFnNode sof = (ScriptOrFnNode) this;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 87, 
          "faulty": "if (specializationState == null) {\n  canRemove=true;\n}\n else {\n  Node specializableFunction=getSpecializableFunctionFromSymbol(declaration);\n  if (specializableFunction != null) {\n    specializationState.reportRemovedFunction(specializableFunction,null);\n    canRemove=true;\n  }\n}", 
          "type": "Delete", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 939, 
          "faulty": "sb.append(' ');", 
          "type": "InsertBefore", 
          "seed": "sb.append(Token.name(type));"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-01 09:25:47.602554953 -0500\n+++ /tmp/Arja_Defects4J_Closure_67/patches_k844/Patch_964/patched/tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-01 09:42:05.997301599 -0500\n@@ -84,19 +84,6 @@\n         for (Symbol declaration : nameInfo.getDeclarations()) {\n           boolean canRemove = false;\n \n-          if (specializationState == null) {\n-            canRemove = true;\n-          } else {\n-            Node specializableFunction =\n-              getSpecializableFunctionFromSymbol(declaration);\n-\n-            if (specializableFunction != null) {\n-              specializationState.reportRemovedFunction(\n-                  specializableFunction, null);\n-              canRemove = true;\n-            }\n-          }\n-\n           if (canRemove) {\n             declaration.remove();\n             changed = true;\n\n\n--- /tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-01 09:25:47.626555117 -0500\n+++ /tmp/Arja_Defects4J_Closure_67/patches_k844/Patch_964/patched/tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-01 09:42:06.009301682 -0500\n@@ -936,7 +936,8 @@\n         sb.append(' ');\n         sb.append(getString());\n       } else if (type == Token.FUNCTION) {\n-        sb.append(' ');\n+        sb.append(Token.name(type));\n+\t\tsb.append(' ');\n         // In the case of JsDoc trees, the first child is often not a string\n         // which causes exceptions to be thrown when calling toString or\n         // toStringTree.\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1427, 
          "faulty": "return res;", 
          "type": "Delete", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 87, 
          "faulty": "if (specializationState == null) {\n  canRemove=true;\n}\n else {\n  Node specializableFunction=getSpecializableFunctionFromSymbol(declaration);\n  if (specializableFunction != null) {\n    specializationState.reportRemovedFunction(specializableFunction,null);\n    canRemove=true;\n  }\n}", 
          "type": "Delete", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 359, 
          "faulty": "return \"LP\";", 
          "type": "InsertBefore", 
          "seed": "if (!(0 <= token && token <= Token.LAST_TOKEN)) throw new IllegalArgumentException();"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-01 09:25:47.602554953 -0500\n+++ /tmp/Arja_Defects4J_Closure_67/patches_k844/Patch_658/patched/tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-01 09:38:28.551800458 -0500\n@@ -84,19 +84,6 @@\n         for (Symbol declaration : nameInfo.getDeclarations()) {\n           boolean canRemove = false;\n \n-          if (specializationState == null) {\n-            canRemove = true;\n-          } else {\n-            Node specializableFunction =\n-              getSpecializableFunctionFromSymbol(declaration);\n-\n-            if (specializableFunction != null) {\n-              specializationState.reportRemovedFunction(\n-                  specializableFunction, null);\n-              canRemove = true;\n-            }\n-          }\n-\n           if (canRemove) {\n             declaration.remove();\n             changed = true;\n\n\n--- /tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-01 09:25:47.626555117 -0500\n+++ /tmp/Arja_Defects4J_Closure_67/patches_k844/Patch_658/patched/tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-01 09:38:28.555800486 -0500\n@@ -1424,7 +1424,6 @@\n       }\n       res = n.checkTreeEqualsImpl(n2);\n       if (res != null) {\n-        return res;\n       }\n     }\n     return res;\n\n\n--- /tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-01 09:25:47.626555117 -0500\n+++ /tmp/Arja_Defects4J_Closure_67/patches_k844/Patch_658/patched/tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-01 09:38:28.555800486 -0500\n@@ -356,7 +356,11 @@\n           case RB:              return \"RB\";\n           case LC:              return \"LC\";\n           case RC:              return \"RC\";\n-          case LP:              return \"LP\";\n+          case LP:              {\n+\t\t\t\tif (!(0 <= token && token <= Token.LAST_TOKEN))\n+\t\t\t\t\tthrow new IllegalArgumentException();\n+\t\t\t\treturn \"LP\";\n+\t\t\t}\n           case RP:              return \"RP\";\n           case COMMA:           return \"COMMA\";\n           case ASSIGN:          return \"ASSIGN\";\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 88, 
          "faulty": "canRemove=true;", 
          "type": "Delete", 
          "seed": "break;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-01 09:25:47.602554953 -0500\n+++ /tmp/Arja_Defects4J_Closure_67/patches_k844/Patch_1168/patched/tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-01 09:46:16.839033196 -0500\n@@ -85,7 +85,6 @@\n           boolean canRemove = false;\n \n           if (specializationState == null) {\n-            canRemove = true;\n           } else {\n             Node specializableFunction =\n               getSpecializableFunctionFromSymbol(declaration);\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 87, 
          "faulty": "if (specializationState == null) {\n  canRemove=true;\n}\n else {\n  Node specializableFunction=getSpecializableFunctionFromSymbol(declaration);\n  if (specializableFunction != null) {\n    specializationState.reportRemovedFunction(specializableFunction,null);\n    canRemove=true;\n  }\n}", 
          "type": "Delete", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 362, 
          "faulty": "return \"ASSIGN\";", 
          "type": "Delete", 
          "seed": "return \"EOL\";"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 111, 
          "faulty": "compiler.reportCodeChange();", 
          "type": "Delete", 
          "seed": "return;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-01 09:25:47.602554953 -0500\n+++ /tmp/Arja_Defects4J_Closure_67/patches_k844/Patch_764/patched/tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-01 09:39:40.016293825 -0500\n@@ -84,19 +84,6 @@\n         for (Symbol declaration : nameInfo.getDeclarations()) {\n           boolean canRemove = false;\n \n-          if (specializationState == null) {\n-            canRemove = true;\n-          } else {\n-            Node specializableFunction =\n-              getSpecializableFunctionFromSymbol(declaration);\n-\n-            if (specializableFunction != null) {\n-              specializationState.reportRemovedFunction(\n-                  specializableFunction, null);\n-              canRemove = true;\n-            }\n-          }\n-\n           if (canRemove) {\n             declaration.remove();\n             changed = true;\n@@ -108,7 +95,6 @@\n     }\n \n     if (changed) {\n-      compiler.reportCodeChange();\n     }\n   }\n \n\n\n--- /tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-01 09:25:47.626555117 -0500\n+++ /tmp/Arja_Defects4J_Closure_67/patches_k844/Patch_764/patched/tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-01 09:39:40.016293825 -0500\n@@ -359,7 +359,7 @@\n           case LP:              return \"LP\";\n           case RP:              return \"RP\";\n           case COMMA:           return \"COMMA\";\n-          case ASSIGN:          return \"ASSIGN\";\n+          case ASSIGN:          ;\n           case ASSIGN_BITOR:    return \"ASSIGN_BITOR\";\n           case ASSIGN_BITXOR:   return \"ASSIGN_BITXOR\";\n           case ASSIGN_BITAND:   return \"ASSIGN_BITAND\";\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 87, 
          "faulty": "if (specializationState == null) {\n  canRemove=true;\n}\n else {\n  Node specializableFunction=getSpecializableFunctionFromSymbol(declaration);\n  if (specializableFunction != null) {\n    specializationState.reportRemovedFunction(specializableFunction,null);\n    canRemove=true;\n  }\n}", 
          "type": "Delete", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 101, 
          "faulty": "declaration.remove();", 
          "type": "Delete", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 943, 
          "faulty": "if (first == null || first.getType() != Token.NAME) {\n  sb.append(\"<invalid>\");\n}\n else {\n  sb.append(first.getString());\n}", 
          "type": "Delete", 
          "seed": "sb.append('\\n');"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-01 09:25:47.602554953 -0500\n+++ /tmp/Arja_Defects4J_Closure_67/patches_k844/Patch_519/patched/tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-01 09:35:56.202748665 -0500\n@@ -84,21 +84,7 @@\n         for (Symbol declaration : nameInfo.getDeclarations()) {\n           boolean canRemove = false;\n \n-          if (specializationState == null) {\n-            canRemove = true;\n-          } else {\n-            Node specializableFunction =\n-              getSpecializableFunctionFromSymbol(declaration);\n-\n-            if (specializableFunction != null) {\n-              specializationState.reportRemovedFunction(\n-                  specializableFunction, null);\n-              canRemove = true;\n-            }\n-          }\n-\n           if (canRemove) {\n-            declaration.remove();\n             changed = true;\n           }\n         }\n\n\n--- /tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-01 09:25:47.626555117 -0500\n+++ /tmp/Arja_Defects4J_Closure_67/patches_k844/Patch_519/patched/tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-01 09:35:56.202748665 -0500\n@@ -937,14 +937,6 @@\n         sb.append(getString());\n       } else if (type == Token.FUNCTION) {\n         sb.append(' ');\n-        // In the case of JsDoc trees, the first child is often not a string\n-        // which causes exceptions to be thrown when calling toString or\n-        // toStringTree.\n-        if (first == null || first.getType() != Token.NAME) {\n-          sb.append(\"<invalid>\");\n-        } else {\n-          sb.append(first.getString());\n-        }\n       } else if (this instanceof ScriptOrFnNode) {\n         ScriptOrFnNode sof = (ScriptOrFnNode) this;\n         if (this instanceof FunctionNode) {\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 310, 
          "faulty": "return \"GETELEM\";", 
          "type": "Delete", 
          "seed": "case ENTERWITH:"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 88, 
          "faulty": "canRemove=true;", 
          "type": "Replace", 
          "seed": "return;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 943, 
          "faulty": "if (first == null || first.getType() != Token.NAME) {\n  sb.append(\"<invalid>\");\n}\n else {\n  sb.append(first.getString());\n}", 
          "type": "Replace", 
          "seed": "sb.append(Token.name(type));"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-01 09:25:47.602554953 -0500\n+++ /tmp/Arja_Defects4J_Closure_67/patches_k844/Patch_896/patched/tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-01 09:40:55.732816535 -0500\n@@ -85,7 +85,7 @@\n           boolean canRemove = false;\n \n           if (specializationState == null) {\n-            canRemove = true;\n+            return;\n           } else {\n             Node specializableFunction =\n               getSpecializableFunctionFromSymbol(declaration);\n\n\n--- /tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-01 09:25:47.626555117 -0500\n+++ /tmp/Arja_Defects4J_Closure_67/patches_k844/Patch_896/patched/tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-01 09:40:55.736816562 -0500\n@@ -307,7 +307,7 @@\n           case TYPEOF:          return \"TYPEOF\";\n           case GETPROP:         return \"GETPROP\";\n           case SETPROP:         return \"SETPROP\";\n-          case GETELEM:         return \"GETELEM\";\n+          case GETELEM:         ;\n           case SETELEM:         return \"SETELEM\";\n           case CALL:            return \"CALL\";\n           case NAME:            return \"NAME\";\n\n\n--- /tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-01 09:25:47.626555117 -0500\n+++ /tmp/Arja_Defects4J_Closure_67/patches_k844/Patch_896/patched/tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-01 09:40:55.736816562 -0500\n@@ -937,14 +937,7 @@\n         sb.append(getString());\n       } else if (type == Token.FUNCTION) {\n         sb.append(' ');\n-        // In the case of JsDoc trees, the first child is often not a string\n-        // which causes exceptions to be thrown when calling toString or\n-        // toStringTree.\n-        if (first == null || first.getType() != Token.NAME) {\n-          sb.append(\"<invalid>\");\n-        } else {\n-          sb.append(first.getString());\n-        }\n+        sb.append(Token.name(type));\n       } else if (this instanceof ScriptOrFnNode) {\n         ScriptOrFnNode sof = (ScriptOrFnNode) this;\n         if (this instanceof FunctionNode) {\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 87, 
          "faulty": "if (specializationState == null) {\n  canRemove=true;\n}\n else {\n  Node specializableFunction=getSpecializableFunctionFromSymbol(declaration);\n  if (specializableFunction != null) {\n    specializationState.reportRemovedFunction(specializableFunction,null);\n    canRemove=true;\n  }\n}", 
          "type": "Delete", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 101, 
          "faulty": "declaration.remove();", 
          "type": "Delete", 
          "seed": "break;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-01 09:25:47.602554953 -0500\n+++ /tmp/Arja_Defects4J_Closure_67/patches_k844/Patch_1045/patched/tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-01 09:43:31.985895202 -0500\n@@ -84,21 +84,7 @@\n         for (Symbol declaration : nameInfo.getDeclarations()) {\n           boolean canRemove = false;\n \n-          if (specializationState == null) {\n-            canRemove = true;\n-          } else {\n-            Node specializableFunction =\n-              getSpecializableFunctionFromSymbol(declaration);\n-\n-            if (specializableFunction != null) {\n-              specializationState.reportRemovedFunction(\n-                  specializableFunction, null);\n-              canRemove = true;\n-            }\n-          }\n-\n           if (canRemove) {\n-            declaration.remove();\n             changed = true;\n           }\n         }\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 101, 
          "faulty": "declaration.remove();", 
          "type": "Delete", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Replace", 
          "seed": "return;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-01 09:25:47.602554953 -0500\n+++ /tmp/Arja_Defects4J_Closure_67/patches_k844/Patch_279/patched/tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-01 09:32:39.329389420 -0500\n@@ -97,10 +97,7 @@\n             }\n           }\n \n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n+          return;\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 88, 
          "faulty": "canRemove=true;", 
          "type": "Replace", 
          "seed": "return;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Replace", 
          "seed": "return;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-01 09:25:47.602554953 -0500\n+++ /tmp/Arja_Defects4J_Closure_67/patches_k844/Patch_206/patched/tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-01 09:32:05.005152934 -0500\n@@ -85,7 +85,7 @@\n           boolean canRemove = false;\n \n           if (specializationState == null) {\n-            canRemove = true;\n+            return;\n           } else {\n             Node specializableFunction =\n               getSpecializableFunctionFromSymbol(declaration);\n@@ -97,10 +97,7 @@\n             }\n           }\n \n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n+          return;\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java", 
          "line": 535, 
          "faulty": "NodeUtil.removeChild(exprNode.getParent(),exprNode);", 
          "type": "Replace", 
          "seed": "return;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 87, 
          "faulty": "if (specializationState == null) {\n  canRemove=true;\n}\n else {\n  Node specializableFunction=getSpecializableFunctionFromSymbol(declaration);\n  if (specializableFunction != null) {\n    specializationState.reportRemovedFunction(specializableFunction,null);\n    canRemove=true;\n  }\n}", 
          "type": "Delete", 
          "seed": "break;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java\t2018-12-01 09:25:49.286566544 -0500\n+++ /tmp/Arja_Defects4J_Closure_67/patches_k844/Patch_842/patched/tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java\t2018-12-01 09:40:23.552594379 -0500\n@@ -532,7 +532,7 @@\n \n     @Override\n     public void remove() {\n-      NodeUtil.removeChild(exprNode.getParent(), exprNode);\n+      return;\n     }\n \n     @Override\n\n\n--- /tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-01 09:25:47.602554953 -0500\n+++ /tmp/Arja_Defects4J_Closure_67/patches_k844/Patch_842/patched/tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-01 09:40:23.552594379 -0500\n@@ -84,19 +84,6 @@\n         for (Symbol declaration : nameInfo.getDeclarations()) {\n           boolean canRemove = false;\n \n-          if (specializationState == null) {\n-            canRemove = true;\n-          } else {\n-            Node specializableFunction =\n-              getSpecializableFunctionFromSymbol(declaration);\n-\n-            if (specializableFunction != null) {\n-              specializationState.reportRemovedFunction(\n-                  specializableFunction, null);\n-              canRemove = true;\n-            }\n-          }\n-\n           if (canRemove) {\n             declaration.remove();\n             changed = true;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 318, 
          "faulty": "return \"THIS\";", 
          "type": "Delete", 
          "seed": "return \"ENTERWITH\";"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 87, 
          "faulty": "if (specializationState == null) {\n  canRemove=true;\n}\n else {\n  Node specializableFunction=getSpecializableFunctionFromSymbol(declaration);\n  if (specializableFunction != null) {\n    specializationState.reportRemovedFunction(specializableFunction,null);\n    canRemove=true;\n  }\n}", 
          "type": "Delete", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 939, 
          "faulty": "sb.append(' ');", 
          "type": "InsertBefore", 
          "seed": "sb.append(Token.name(type));"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-01 09:25:47.602554953 -0500\n+++ /tmp/Arja_Defects4J_Closure_67/patches_k844/Patch_1100/patched/tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-01 09:44:14.758190466 -0500\n@@ -84,19 +84,6 @@\n         for (Symbol declaration : nameInfo.getDeclarations()) {\n           boolean canRemove = false;\n \n-          if (specializationState == null) {\n-            canRemove = true;\n-          } else {\n-            Node specializableFunction =\n-              getSpecializableFunctionFromSymbol(declaration);\n-\n-            if (specializableFunction != null) {\n-              specializationState.reportRemovedFunction(\n-                  specializableFunction, null);\n-              canRemove = true;\n-            }\n-          }\n-\n           if (canRemove) {\n             declaration.remove();\n             changed = true;\n\n\n--- /tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-01 09:25:47.626555117 -0500\n+++ /tmp/Arja_Defects4J_Closure_67/patches_k844/Patch_1100/patched/tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-01 09:44:14.758190466 -0500\n@@ -315,7 +315,7 @@\n           case NUMBER:          return \"NUMBER\";\n           case STRING:          return \"STRING\";\n           case NULL:            return \"NULL\";\n-          case THIS:            return \"THIS\";\n+          case THIS:            ;\n           case FALSE:           return \"FALSE\";\n           case TRUE:            return \"TRUE\";\n           case SHEQ:            return \"SHEQ\";\n\n\n--- /tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-01 09:25:47.626555117 -0500\n+++ /tmp/Arja_Defects4J_Closure_67/patches_k844/Patch_1100/patched/tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-01 09:44:14.762190494 -0500\n@@ -936,7 +936,8 @@\n         sb.append(' ');\n         sb.append(getString());\n       } else if (type == Token.FUNCTION) {\n-        sb.append(' ');\n+        sb.append(Token.name(type));\n+\t\tsb.append(' ');\n         // In the case of JsDoc trees, the first child is often not a string\n         // which causes exceptions to be thrown when calling toString or\n         // toStringTree.\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java", 
          "line": 535, 
          "faulty": "NodeUtil.removeChild(exprNode.getParent(),exprNode);", 
          "type": "Delete", 
          "seed": "return;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 87, 
          "faulty": "if (specializationState == null) {\n  canRemove=true;\n}\n else {\n  Node specializableFunction=getSpecializableFunctionFromSymbol(declaration);\n  if (specializableFunction != null) {\n    specializationState.reportRemovedFunction(specializableFunction,null);\n    canRemove=true;\n  }\n}", 
          "type": "Delete", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 359, 
          "faulty": "return \"LP\";", 
          "type": "InsertBefore", 
          "seed": "if (!(0 <= token && token <= Token.LAST_TOKEN)) throw new IllegalArgumentException();"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java\t2018-12-01 09:25:49.286566544 -0500\n+++ /tmp/Arja_Defects4J_Closure_67/patches_k844/Patch_952/patched/tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java\t2018-12-01 09:41:56.653237094 -0500\n@@ -532,7 +532,6 @@\n \n     @Override\n     public void remove() {\n-      NodeUtil.removeChild(exprNode.getParent(), exprNode);\n     }\n \n     @Override\n\n\n--- /tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-01 09:25:47.602554953 -0500\n+++ /tmp/Arja_Defects4J_Closure_67/patches_k844/Patch_952/patched/tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-01 09:41:56.657237121 -0500\n@@ -84,19 +84,6 @@\n         for (Symbol declaration : nameInfo.getDeclarations()) {\n           boolean canRemove = false;\n \n-          if (specializationState == null) {\n-            canRemove = true;\n-          } else {\n-            Node specializableFunction =\n-              getSpecializableFunctionFromSymbol(declaration);\n-\n-            if (specializableFunction != null) {\n-              specializationState.reportRemovedFunction(\n-                  specializableFunction, null);\n-              canRemove = true;\n-            }\n-          }\n-\n           if (canRemove) {\n             declaration.remove();\n             changed = true;\n\n\n--- /tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-01 09:25:47.626555117 -0500\n+++ /tmp/Arja_Defects4J_Closure_67/patches_k844/Patch_952/patched/tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-01 09:41:56.657237121 -0500\n@@ -356,7 +356,11 @@\n           case RB:              return \"RB\";\n           case LC:              return \"LC\";\n           case RC:              return \"RC\";\n-          case LP:              return \"LP\";\n+          case LP:              {\n+\t\t\t\tif (!(0 <= token && token <= Token.LAST_TOKEN))\n+\t\t\t\t\tthrow new IllegalArgumentException();\n+\t\t\t\treturn \"LP\";\n+\t\t\t}\n           case RP:              return \"RP\";\n           case COMMA:           return \"COMMA\";\n           case ASSIGN:          return \"ASSIGN\";\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java", 
          "line": 535, 
          "faulty": "NodeUtil.removeChild(exprNode.getParent(),exprNode);", 
          "type": "Delete", 
          "seed": "return;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 87, 
          "faulty": "if (specializationState == null) {\n  canRemove=true;\n}\n else {\n  Node specializableFunction=getSpecializableFunctionFromSymbol(declaration);\n  if (specializableFunction != null) {\n    specializationState.reportRemovedFunction(specializableFunction,null);\n    canRemove=true;\n  }\n}", 
          "type": "Delete", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 946, 
          "faulty": "sb.append(first.getString());", 
          "type": "Replace", 
          "seed": "if (type == Token.NUMBER) {\n  sb.append(' ');\n  sb.append(getDouble());\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java\t2018-12-01 09:25:49.286566544 -0500\n+++ /tmp/Arja_Defects4J_Closure_67/patches_k844/Patch_204/patched/tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java\t2018-12-01 09:32:04.261147812 -0500\n@@ -532,7 +532,6 @@\n \n     @Override\n     public void remove() {\n-      NodeUtil.removeChild(exprNode.getParent(), exprNode);\n     }\n \n     @Override\n\n\n--- /tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-01 09:25:47.602554953 -0500\n+++ /tmp/Arja_Defects4J_Closure_67/patches_k844/Patch_204/patched/tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-01 09:32:04.261147812 -0500\n@@ -84,19 +84,6 @@\n         for (Symbol declaration : nameInfo.getDeclarations()) {\n           boolean canRemove = false;\n \n-          if (specializationState == null) {\n-            canRemove = true;\n-          } else {\n-            Node specializableFunction =\n-              getSpecializableFunctionFromSymbol(declaration);\n-\n-            if (specializableFunction != null) {\n-              specializationState.reportRemovedFunction(\n-                  specializableFunction, null);\n-              canRemove = true;\n-            }\n-          }\n-\n           if (canRemove) {\n             declaration.remove();\n             changed = true;\n\n\n--- /tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-01 09:25:47.626555117 -0500\n+++ /tmp/Arja_Defects4J_Closure_67/patches_k844/Patch_204/patched/tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-01 09:32:04.265147839 -0500\n@@ -943,7 +943,10 @@\n         if (first == null || first.getType() != Token.NAME) {\n           sb.append(\"<invalid>\");\n         } else {\n-          sb.append(first.getString());\n+          if (type == Token.NUMBER) {\n+\t\t\tsb.append(' ');\n+\t\t\tsb.append(getDouble());\n+\t\t}\n         }\n       } else if (this instanceof ScriptOrFnNode) {\n         ScriptOrFnNode sof = (ScriptOrFnNode) this;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1427, 
          "faulty": "return res;", 
          "type": "Replace", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Replace", 
          "seed": "return;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 946, 
          "faulty": "sb.append(first.getString());", 
          "type": "Replace", 
          "seed": "toString(sb,printSource,printAnnotations,printType);"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-01 09:25:47.602554953 -0500\n+++ /tmp/Arja_Defects4J_Closure_67/patches_k844/Patch_1102/patched/tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-01 09:44:15.366194663 -0500\n@@ -97,10 +97,7 @@\n             }\n           }\n \n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n+          return;\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n--- /tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-01 09:25:47.626555117 -0500\n+++ /tmp/Arja_Defects4J_Closure_67/patches_k844/Patch_1102/patched/tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-01 09:44:15.370194691 -0500\n@@ -943,7 +943,7 @@\n         if (first == null || first.getType() != Token.NAME) {\n           sb.append(\"<invalid>\");\n         } else {\n-          sb.append(first.getString());\n+          toString(sb, printSource, printAnnotations, printType);\n         }\n       } else if (this instanceof ScriptOrFnNode) {\n         ScriptOrFnNode sof = (ScriptOrFnNode) this;\n@@ -1424,7 +1424,7 @@\n       }\n       res = n.checkTreeEqualsImpl(n2);\n       if (res != null) {\n-        return res;\n+        break;\n       }\n     }\n     return res;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 310, 
          "faulty": "return \"GETELEM\";", 
          "type": "Delete", 
          "seed": "case 2:"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 88, 
          "faulty": "canRemove=true;", 
          "type": "Delete", 
          "seed": "return;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 102, 
          "faulty": "changed=true;", 
          "type": "Replace", 
          "seed": "break;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-01 09:25:47.602554953 -0500\n+++ /tmp/Arja_Defects4J_Closure_67/patches_k844/Patch_104/patched/tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-01 09:31:15.268810540 -0500\n@@ -85,7 +85,6 @@\n           boolean canRemove = false;\n \n           if (specializationState == null) {\n-            canRemove = true;\n           } else {\n             Node specializableFunction =\n               getSpecializableFunctionFromSymbol(declaration);\n@@ -99,7 +98,7 @@\n \n           if (canRemove) {\n             declaration.remove();\n-            changed = true;\n+            break;\n           }\n         }\n \n\n\n--- /tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-01 09:25:47.626555117 -0500\n+++ /tmp/Arja_Defects4J_Closure_67/patches_k844/Patch_104/patched/tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-01 09:31:15.268810540 -0500\n@@ -307,7 +307,7 @@\n           case TYPEOF:          return \"TYPEOF\";\n           case GETPROP:         return \"GETPROP\";\n           case SETPROP:         return \"SETPROP\";\n-          case GETELEM:         return \"GETELEM\";\n+          case GETELEM:         ;\n           case SETELEM:         return \"SETELEM\";\n           case CALL:            return \"CALL\";\n           case NAME:            return \"NAME\";\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1427, 
          "faulty": "return res;", 
          "type": "Replace", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Replace", 
          "seed": "return;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-01 09:25:47.602554953 -0500\n+++ /tmp/Arja_Defects4J_Closure_67/patches_k844/Patch_251/patched/tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-01 09:32:26.305299570 -0500\n@@ -97,10 +97,7 @@\n             }\n           }\n \n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n+          return;\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n--- /tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-01 09:25:47.626555117 -0500\n+++ /tmp/Arja_Defects4J_Closure_67/patches_k844/Patch_251/patched/tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-01 09:32:26.305299570 -0500\n@@ -1424,7 +1424,7 @@\n       }\n       res = n.checkTreeEqualsImpl(n2);\n       if (res != null) {\n-        return res;\n+        break;\n       }\n     }\n     return res;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 101, 
          "faulty": "declaration.remove();", 
          "type": "Delete", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 102, 
          "faulty": "changed=true;", 
          "type": "Delete", 
          "seed": "return;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-01 09:25:47.602554953 -0500\n+++ /tmp/Arja_Defects4J_Closure_67/patches_k844/Patch_261/patched/tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-01 09:32:31.253333660 -0500\n@@ -98,8 +98,6 @@\n           }\n \n           if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n           }\n         }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 310, 
          "faulty": "return \"GETELEM\";", 
          "type": "Delete", 
          "seed": "case 2:"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-01 09:25:47.602554953 -0500\n+++ /tmp/Arja_Defects4J_Closure_67/patches_k844/Patch_165/patched/tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-01 09:31:45.157016295 -0500\n@@ -96,11 +96,6 @@\n               canRemove = true;\n             }\n           }\n-\n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n--- /tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-01 09:25:47.626555117 -0500\n+++ /tmp/Arja_Defects4J_Closure_67/patches_k844/Patch_165/patched/tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-01 09:31:45.157016295 -0500\n@@ -307,7 +307,7 @@\n           case TYPEOF:          return \"TYPEOF\";\n           case GETPROP:         return \"GETPROP\";\n           case SETPROP:         return \"SETPROP\";\n-          case GETELEM:         return \"GETELEM\";\n+          case GETELEM:         ;\n           case SETELEM:         return \"SETELEM\";\n           case CALL:            return \"CALL\";\n           case NAME:            return \"NAME\";\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1427, 
          "faulty": "return res;", 
          "type": "Delete", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Replace", 
          "seed": "return;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-01 09:25:47.602554953 -0500\n+++ /tmp/Arja_Defects4J_Closure_67/patches_k844/Patch_396/patched/tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-01 09:34:05.593985013 -0500\n@@ -97,10 +97,7 @@\n             }\n           }\n \n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n+          return;\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n--- /tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-01 09:25:47.626555117 -0500\n+++ /tmp/Arja_Defects4J_Closure_67/patches_k844/Patch_396/patched/tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-01 09:34:05.593985013 -0500\n@@ -1424,7 +1424,6 @@\n       }\n       res = n.checkTreeEqualsImpl(n2);\n       if (res != null) {\n-        return res;\n       }\n     }\n     return res;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Replace", 
          "seed": "return;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 362, 
          "faulty": "return \"ASSIGN\";", 
          "type": "Replace", 
          "seed": "break;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-01 09:25:47.602554953 -0500\n+++ /tmp/Arja_Defects4J_Closure_67/patches_k844/Patch_332/patched/tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-01 09:33:05.397569403 -0500\n@@ -97,10 +97,7 @@\n             }\n           }\n \n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n+          return;\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n--- /tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-01 09:25:47.626555117 -0500\n+++ /tmp/Arja_Defects4J_Closure_67/patches_k844/Patch_332/patched/tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-01 09:33:05.397569403 -0500\n@@ -359,7 +359,7 @@\n           case LP:              return \"LP\";\n           case RP:              return \"RP\";\n           case COMMA:           return \"COMMA\";\n-          case ASSIGN:          return \"ASSIGN\";\n+          case ASSIGN:          break;\n           case ASSIGN_BITOR:    return \"ASSIGN_BITOR\";\n           case ASSIGN_BITXOR:   return \"ASSIGN_BITXOR\";\n           case ASSIGN_BITAND:   return \"ASSIGN_BITAND\";\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Replace", 
          "seed": "return;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 939, 
          "faulty": "sb.append(' ');", 
          "type": "InsertBefore", 
          "seed": "sb.append(Token.name(type));"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 946, 
          "faulty": "sb.append(first.getString());", 
          "type": "Delete", 
          "seed": "toString(sb,printSource,printAnnotations,printType);"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-01 09:25:47.602554953 -0500\n+++ /tmp/Arja_Defects4J_Closure_67/patches_k844/Patch_1017/patched/tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-01 09:43:14.405773842 -0500\n@@ -97,10 +97,7 @@\n             }\n           }\n \n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n+          return;\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n--- /tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-01 09:25:47.626555117 -0500\n+++ /tmp/Arja_Defects4J_Closure_67/patches_k844/Patch_1017/patched/tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-01 09:43:14.405773842 -0500\n@@ -936,14 +936,14 @@\n         sb.append(' ');\n         sb.append(getString());\n       } else if (type == Token.FUNCTION) {\n-        sb.append(' ');\n+        sb.append(Token.name(type));\n+\t\tsb.append(' ');\n         // In the case of JsDoc trees, the first child is often not a string\n         // which causes exceptions to be thrown when calling toString or\n         // toStringTree.\n         if (first == null || first.getType() != Token.NAME) {\n           sb.append(\"<invalid>\");\n         } else {\n-          sb.append(first.getString());\n         }\n       } else if (this instanceof ScriptOrFnNode) {\n         ScriptOrFnNode sof = (ScriptOrFnNode) this;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 88, 
          "faulty": "canRemove=true;", 
          "type": "Replace", 
          "seed": "return;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-01 09:25:47.602554953 -0500\n+++ /tmp/Arja_Defects4J_Closure_67/patches_k844/Patch_125/patched/tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-01 09:31:25.548881309 -0500\n@@ -85,7 +85,7 @@\n           boolean canRemove = false;\n \n           if (specializationState == null) {\n-            canRemove = true;\n+            return;\n           } else {\n             Node specializableFunction =\n               getSpecializableFunctionFromSymbol(declaration);\n@@ -96,11 +96,6 @@\n               canRemove = true;\n             }\n           }\n-\n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 318, 
          "faulty": "return \"THIS\";", 
          "type": "Replace", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Replace", 
          "seed": "return;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-01 09:25:47.602554953 -0500\n+++ /tmp/Arja_Defects4J_Closure_67/patches_k844/Patch_1034/patched/tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-01 09:43:25.941853479 -0500\n@@ -97,10 +97,7 @@\n             }\n           }\n \n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n+          return;\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n--- /tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-01 09:25:47.626555117 -0500\n+++ /tmp/Arja_Defects4J_Closure_67/patches_k844/Patch_1034/patched/tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-01 09:43:25.945853506 -0500\n@@ -315,7 +315,7 @@\n           case NUMBER:          return \"NUMBER\";\n           case STRING:          return \"STRING\";\n           case NULL:            return \"NULL\";\n-          case THIS:            return \"THIS\";\n+          case THIS:            break;\n           case FALSE:           return \"FALSE\";\n           case TRUE:            return \"TRUE\";\n           case SHEQ:            return \"SHEQ\";\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Replace", 
          "seed": "return;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 943, 
          "faulty": "if (first == null || first.getType() != Token.NAME) {\n  sb.append(\"<invalid>\");\n}\n else {\n  sb.append(first.getString());\n}", 
          "type": "Delete", 
          "seed": "sb.append(Token.name(type));"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 946, 
          "faulty": "sb.append(first.getString());", 
          "type": "Replace", 
          "seed": "toString(sb,printSource,printAnnotations,printType);"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-01 09:25:47.602554953 -0500\n+++ /tmp/Arja_Defects4J_Closure_67/patches_k844/Patch_377/patched/tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-01 09:33:29.261734167 -0500\n@@ -97,10 +97,7 @@\n             }\n           }\n \n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n+          return;\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n--- /tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-01 09:25:47.626555117 -0500\n+++ /tmp/Arja_Defects4J_Closure_67/patches_k844/Patch_377/patched/tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-01 09:33:43.593833119 -0500\n@@ -937,14 +937,6 @@\n         sb.append(getString());\n       } else if (type == Token.FUNCTION) {\n         sb.append(' ');\n-        // In the case of JsDoc trees, the first child is often not a string\n-        // which causes exceptions to be thrown when calling toString or\n-        // toStringTree.\n-        if (first == null || first.getType() != Token.NAME) {\n-          sb.append(\"<invalid>\");\n-        } else {\n-          sb.append(first.getString());\n-        }\n       } else if (this instanceof ScriptOrFnNode) {\n         ScriptOrFnNode sof = (ScriptOrFnNode) this;\n         if (this instanceof FunctionNode) {\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 88, 
          "faulty": "canRemove=true;", 
          "type": "Delete", 
          "seed": "return;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Replace", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 102, 
          "faulty": "changed=true;", 
          "type": "Replace", 
          "seed": "break;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-01 09:25:47.602554953 -0500\n+++ /tmp/Arja_Defects4J_Closure_67/patches_k844/Patch_168/patched/tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-01 09:31:46.357024556 -0500\n@@ -85,7 +85,6 @@\n           boolean canRemove = false;\n \n           if (specializationState == null) {\n-            canRemove = true;\n           } else {\n             Node specializableFunction =\n               getSpecializableFunctionFromSymbol(declaration);\n@@ -97,10 +96,7 @@\n             }\n           }\n \n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n+          break;\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 87, 
          "faulty": "if (specializationState == null) {\n  canRemove=true;\n}\n else {\n  Node specializableFunction=getSpecializableFunctionFromSymbol(declaration);\n  if (specializableFunction != null) {\n    specializationState.reportRemovedFunction(specializableFunction,null);\n    canRemove=true;\n  }\n}", 
          "type": "Delete", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 946, 
          "faulty": "sb.append(first.getString());", 
          "type": "Replace", 
          "seed": "if (this instanceof ScriptOrFnNode) {\n  ScriptOrFnNode sof=(ScriptOrFnNode)this;\n  if (this instanceof FunctionNode) {\n    FunctionNode fn=(FunctionNode)this;\n    sb.append(' ');\n    sb.append(fn.getFunctionName());\n  }\n  if (printSource) {\n    sb.append(\" [source name: \");\n    sb.append(sof.getSourceName());\n    sb.append(\"] [encoded source length: \");\n    sb.append(sof.getEncodedSourceEnd() - sof.getEncodedSourceStart());\n    sb.append(\"] [base line: \");\n    sb.append(sof.getBaseLineno());\n    sb.append(\"] [end line: \");\n    sb.append(sof.getEndLineno());\n    sb.append(']');\n  }\n}\n else if (type == Token.NUMBER) {\n  sb.append(' ');\n  sb.append(getDouble());\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-01 09:25:47.602554953 -0500\n+++ /tmp/Arja_Defects4J_Closure_67/patches_k844/Patch_902/patched/tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-01 09:40:58.252833932 -0500\n@@ -84,19 +84,6 @@\n         for (Symbol declaration : nameInfo.getDeclarations()) {\n           boolean canRemove = false;\n \n-          if (specializationState == null) {\n-            canRemove = true;\n-          } else {\n-            Node specializableFunction =\n-              getSpecializableFunctionFromSymbol(declaration);\n-\n-            if (specializableFunction != null) {\n-              specializationState.reportRemovedFunction(\n-                  specializableFunction, null);\n-              canRemove = true;\n-            }\n-          }\n-\n           if (canRemove) {\n             declaration.remove();\n             changed = true;\n\n\n--- /tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-01 09:25:47.626555117 -0500\n+++ /tmp/Arja_Defects4J_Closure_67/patches_k844/Patch_902/patched/tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-01 09:40:58.252833932 -0500\n@@ -943,7 +943,29 @@\n         if (first == null || first.getType() != Token.NAME) {\n           sb.append(\"<invalid>\");\n         } else {\n-          sb.append(first.getString());\n+          if (this instanceof ScriptOrFnNode) {\n+\t\t\tScriptOrFnNode sof = (ScriptOrFnNode) this;\n+\t\t\tif (this instanceof FunctionNode) {\n+\t\t\t\tFunctionNode fn = (FunctionNode) this;\n+\t\t\t\tsb.append(' ');\n+\t\t\t\tsb.append(fn.getFunctionName());\n+\t\t\t}\n+\t\t\tif (printSource) {\n+\t\t\t\tsb.append(\" [source name: \");\n+\t\t\t\tsb.append(sof.getSourceName());\n+\t\t\t\tsb.append(\"] [encoded source length: \");\n+\t\t\t\tsb.append(sof.getEncodedSourceEnd()\n+\t\t\t\t\t\t- sof.getEncodedSourceStart());\n+\t\t\t\tsb.append(\"] [base line: \");\n+\t\t\t\tsb.append(sof.getBaseLineno());\n+\t\t\t\tsb.append(\"] [end line: \");\n+\t\t\t\tsb.append(sof.getEndLineno());\n+\t\t\t\tsb.append(']');\n+\t\t\t}\n+\t\t} else if (type == Token.NUMBER) {\n+\t\t\tsb.append(' ');\n+\t\t\tsb.append(getDouble());\n+\t\t}\n         }\n       } else if (this instanceof ScriptOrFnNode) {\n         ScriptOrFnNode sof = (ScriptOrFnNode) this;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 87, 
          "faulty": "if (specializationState == null) {\n  canRemove=true;\n}\n else {\n  Node specializableFunction=getSpecializableFunctionFromSymbol(declaration);\n  if (specializableFunction != null) {\n    specializationState.reportRemovedFunction(specializableFunction,null);\n    canRemove=true;\n  }\n}", 
          "type": "Delete", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 943, 
          "faulty": "if (first == null || first.getType() != Token.NAME) {\n  sb.append(\"<invalid>\");\n}\n else {\n  sb.append(first.getString());\n}", 
          "type": "Replace", 
          "seed": "if (printSource) {\n  int lineno=getLineno();\n  if (lineno != -1) {\n    sb.append(' ');\n    sb.append(lineno);\n  }\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-01 09:25:47.602554953 -0500\n+++ /tmp/Arja_Defects4J_Closure_67/patches_k844/Patch_435/patched/tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-01 09:34:42.002236381 -0500\n@@ -84,19 +84,6 @@\n         for (Symbol declaration : nameInfo.getDeclarations()) {\n           boolean canRemove = false;\n \n-          if (specializationState == null) {\n-            canRemove = true;\n-          } else {\n-            Node specializableFunction =\n-              getSpecializableFunctionFromSymbol(declaration);\n-\n-            if (specializableFunction != null) {\n-              specializationState.reportRemovedFunction(\n-                  specializableFunction, null);\n-              canRemove = true;\n-            }\n-          }\n-\n           if (canRemove) {\n             declaration.remove();\n             changed = true;\n\n\n--- /tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-01 09:25:47.626555117 -0500\n+++ /tmp/Arja_Defects4J_Closure_67/patches_k844/Patch_435/patched/tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-01 09:34:42.002236381 -0500\n@@ -937,14 +937,13 @@\n         sb.append(getString());\n       } else if (type == Token.FUNCTION) {\n         sb.append(' ');\n-        // In the case of JsDoc trees, the first child is often not a string\n-        // which causes exceptions to be thrown when calling toString or\n-        // toStringTree.\n-        if (first == null || first.getType() != Token.NAME) {\n-          sb.append(\"<invalid>\");\n-        } else {\n-          sb.append(first.getString());\n-        }\n+        if (printSource) {\n+\t\t\tint lineno = getLineno();\n+\t\t\tif (lineno != -1) {\n+\t\t\t\tsb.append(' ');\n+\t\t\t\tsb.append(lineno);\n+\t\t\t}\n+\t\t}\n       } else if (this instanceof ScriptOrFnNode) {\n         ScriptOrFnNode sof = (ScriptOrFnNode) this;\n         if (this instanceof FunctionNode) {\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 318, 
          "faulty": "return \"THIS\";", 
          "type": "Delete", 
          "seed": "break L;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Replace", 
          "seed": "return;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-01 09:25:47.602554953 -0500\n+++ /tmp/Arja_Defects4J_Closure_67/patches_k844/Patch_311/patched/tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-01 09:32:54.993497570 -0500\n@@ -97,10 +97,7 @@\n             }\n           }\n \n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n+          return;\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n--- /tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-01 09:25:47.626555117 -0500\n+++ /tmp/Arja_Defects4J_Closure_67/patches_k844/Patch_311/patched/tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-01 09:32:54.993497570 -0500\n@@ -315,7 +315,7 @@\n           case NUMBER:          return \"NUMBER\";\n           case STRING:          return \"STRING\";\n           case NULL:            return \"NULL\";\n-          case THIS:            return \"THIS\";\n+          case THIS:            ;\n           case FALSE:           return \"FALSE\";\n           case TRUE:            return \"TRUE\";\n           case SHEQ:            return \"SHEQ\";\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1427, 
          "faulty": "return res;", 
          "type": "Delete", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 87, 
          "faulty": "if (specializationState == null) {\n  canRemove=true;\n}\n else {\n  Node specializableFunction=getSpecializableFunctionFromSymbol(declaration);\n  if (specializableFunction != null) {\n    specializationState.reportRemovedFunction(specializableFunction,null);\n    canRemove=true;\n  }\n}", 
          "type": "Delete", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 946, 
          "faulty": "sb.append(first.getString());", 
          "type": "Replace", 
          "seed": "parent=null;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-01 09:25:47.602554953 -0500\n+++ /tmp/Arja_Defects4J_Closure_67/patches_k844/Patch_535/patched/tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-01 09:36:05.302811491 -0500\n@@ -84,19 +84,6 @@\n         for (Symbol declaration : nameInfo.getDeclarations()) {\n           boolean canRemove = false;\n \n-          if (specializationState == null) {\n-            canRemove = true;\n-          } else {\n-            Node specializableFunction =\n-              getSpecializableFunctionFromSymbol(declaration);\n-\n-            if (specializableFunction != null) {\n-              specializationState.reportRemovedFunction(\n-                  specializableFunction, null);\n-              canRemove = true;\n-            }\n-          }\n-\n           if (canRemove) {\n             declaration.remove();\n             changed = true;\n\n\n--- /tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-01 09:25:47.626555117 -0500\n+++ /tmp/Arja_Defects4J_Closure_67/patches_k844/Patch_535/patched/tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-01 09:36:05.302811491 -0500\n@@ -943,7 +943,7 @@\n         if (first == null || first.getType() != Token.NAME) {\n           sb.append(\"<invalid>\");\n         } else {\n-          sb.append(first.getString());\n+          parent = null;\n         }\n       } else if (this instanceof ScriptOrFnNode) {\n         ScriptOrFnNode sof = (ScriptOrFnNode) this;\n@@ -1424,7 +1424,6 @@\n       }\n       res = n.checkTreeEqualsImpl(n2);\n       if (res != null) {\n-        return res;\n       }\n     }\n     return res;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 221, 
          "faulty": "return \"synthetic\";", 
          "type": "Delete", 
          "seed": "return \"BLOCK\";"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-01 09:25:47.602554953 -0500\n+++ /tmp/Arja_Defects4J_Closure_67/patches_k844/Patch_295/patched/tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-01 09:32:47.125443246 -0500\n@@ -96,11 +96,6 @@\n               canRemove = true;\n             }\n           }\n-\n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n--- /tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-01 09:25:47.626555117 -0500\n+++ /tmp/Arja_Defects4J_Closure_67/patches_k844/Patch_295/patched/tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-01 09:32:47.125443246 -0500\n@@ -218,7 +218,7 @@\n         case QUOTED_PROP:        return \"quoted\";\n         case OPT_ARG_NAME:       return \"opt_arg\";\n \n-        case SYNTHETIC_BLOCK_PROP: return \"synthetic\";\n+        case SYNTHETIC_BLOCK_PROP: ;\n         case EMPTY_BLOCK:        return \"empty_block\";\n         case ORIGINALNAME_PROP:  return \"originalname\";\n         case SIDE_EFFECT_FLAGS:  return \"side_effect_flags\";\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Replace", 
          "seed": "return;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 943, 
          "faulty": "if (first == null || first.getType() != Token.NAME) {\n  sb.append(\"<invalid>\");\n}\n else {\n  sb.append(first.getString());\n}", 
          "type": "Delete", 
          "seed": "if (printSource) {\n  int lineno=getLineno();\n  if (lineno != -1) {\n    sb.append(' ');\n    sb.append(lineno);\n  }\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-01 09:25:47.602554953 -0500\n+++ /tmp/Arja_Defects4J_Closure_67/patches_k844/Patch_313/patched/tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-01 09:32:55.593501712 -0500\n@@ -97,10 +97,7 @@\n             }\n           }\n \n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n+          return;\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n--- /tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-01 09:25:47.626555117 -0500\n+++ /tmp/Arja_Defects4J_Closure_67/patches_k844/Patch_313/patched/tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-01 09:32:55.597501740 -0500\n@@ -937,14 +937,6 @@\n         sb.append(getString());\n       } else if (type == Token.FUNCTION) {\n         sb.append(' ');\n-        // In the case of JsDoc trees, the first child is often not a string\n-        // which causes exceptions to be thrown when calling toString or\n-        // toStringTree.\n-        if (first == null || first.getType() != Token.NAME) {\n-          sb.append(\"<invalid>\");\n-        } else {\n-          sb.append(first.getString());\n-        }\n       } else if (this instanceof ScriptOrFnNode) {\n         ScriptOrFnNode sof = (ScriptOrFnNode) this;\n         if (this instanceof FunctionNode) {\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 318, 
          "faulty": "return \"THIS\";", 
          "type": "Delete", 
          "seed": "return \"ENTERWITH\";"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Replace", 
          "seed": "return;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 946, 
          "faulty": "sb.append(first.getString());", 
          "type": "InsertBefore", 
          "seed": "toString(sb,printSource,printAnnotations,printType);"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-01 09:25:47.602554953 -0500\n+++ /tmp/Arja_Defects4J_Closure_67/patches_k844/Patch_931/patched/tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-01 09:41:42.093136580 -0500\n@@ -97,10 +97,7 @@\n             }\n           }\n \n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n+          return;\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n--- /tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-01 09:25:47.626555117 -0500\n+++ /tmp/Arja_Defects4J_Closure_67/patches_k844/Patch_931/patched/tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-01 09:41:42.309138069 -0500\n@@ -315,7 +315,7 @@\n           case NUMBER:          return \"NUMBER\";\n           case STRING:          return \"STRING\";\n           case NULL:            return \"NULL\";\n-          case THIS:            return \"THIS\";\n+          case THIS:            ;\n           case FALSE:           return \"FALSE\";\n           case TRUE:            return \"TRUE\";\n           case SHEQ:            return \"SHEQ\";\n\n\n--- /tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-01 09:25:47.626555117 -0500\n+++ /tmp/Arja_Defects4J_Closure_67/patches_k844/Patch_931/patched/tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-01 09:41:42.313138097 -0500\n@@ -943,7 +943,8 @@\n         if (first == null || first.getType() != Token.NAME) {\n           sb.append(\"<invalid>\");\n         } else {\n-          sb.append(first.getString());\n+          toString(sb, printSource, printAnnotations, printType);\n+\t\tsb.append(first.getString());\n         }\n       } else if (this instanceof ScriptOrFnNode) {\n         ScriptOrFnNode sof = (ScriptOrFnNode) this;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 310, 
          "faulty": "return \"GETELEM\";", 
          "type": "Delete", 
          "seed": "case 2:"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 88, 
          "faulty": "canRemove=true;", 
          "type": "Replace", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-01 09:25:47.602554953 -0500\n+++ /tmp/Arja_Defects4J_Closure_67/patches_k844/Patch_184/patched/tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-01 09:31:55.141085027 -0500\n@@ -85,7 +85,7 @@\n           boolean canRemove = false;\n \n           if (specializationState == null) {\n-            canRemove = true;\n+            break;\n           } else {\n             Node specializableFunction =\n               getSpecializableFunctionFromSymbol(declaration);\n@@ -96,11 +96,6 @@\n               canRemove = true;\n             }\n           }\n-\n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n--- /tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-01 09:25:47.626555117 -0500\n+++ /tmp/Arja_Defects4J_Closure_67/patches_k844/Patch_184/patched/tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-01 09:31:55.141085027 -0500\n@@ -307,7 +307,7 @@\n           case TYPEOF:          return \"TYPEOF\";\n           case GETPROP:         return \"GETPROP\";\n           case SETPROP:         return \"SETPROP\";\n-          case GETELEM:         return \"GETELEM\";\n+          case GETELEM:         ;\n           case SETELEM:         return \"SETELEM\";\n           case CALL:            return \"CALL\";\n           case NAME:            return \"NAME\";\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 88, 
          "faulty": "canRemove=true;", 
          "type": "Replace", 
          "seed": "return;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Replace", 
          "seed": "return;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 939, 
          "faulty": "sb.append(' ');", 
          "type": "InsertBefore", 
          "seed": "sb.append(Token.name(type));"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-01 09:25:47.602554953 -0500\n+++ /tmp/Arja_Defects4J_Closure_67/patches_k844/Patch_939/patched/tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-01 09:41:46.861169495 -0500\n@@ -85,7 +85,7 @@\n           boolean canRemove = false;\n \n           if (specializationState == null) {\n-            canRemove = true;\n+            return;\n           } else {\n             Node specializableFunction =\n               getSpecializableFunctionFromSymbol(declaration);\n@@ -97,10 +97,7 @@\n             }\n           }\n \n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n+          return;\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n--- /tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-01 09:25:47.626555117 -0500\n+++ /tmp/Arja_Defects4J_Closure_67/patches_k844/Patch_939/patched/tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-01 09:41:46.865169523 -0500\n@@ -936,7 +936,8 @@\n         sb.append(' ');\n         sb.append(getString());\n       } else if (type == Token.FUNCTION) {\n-        sb.append(' ');\n+        sb.append(Token.name(type));\n+\t\tsb.append(' ');\n         // In the case of JsDoc trees, the first child is often not a string\n         // which causes exceptions to be thrown when calling toString or\n         // toStringTree.\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Replace", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1385, 
          "faulty": "return \"Node tree inequality:\" + \"\\nTree1:\\n\" + toStringTree() + \"\\n\\nTree2:\\n\"+ node2.toStringTree()+ \"\\n\\nSubtree1: \"+ diff.nodeA.toStringTree()+ \"\\n\\nSubtree2: \"+ diff.nodeB.toStringTree();", 
          "type": "Replace", 
          "seed": "return \"BITOR\";"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-01 09:25:47.602554953 -0500\n+++ /tmp/Arja_Defects4J_Closure_67/patches_k844/Patch_160/patched/tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-01 09:31:42.696999360 -0500\n@@ -97,10 +97,7 @@\n             }\n           }\n \n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n+          break;\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n--- /tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-01 09:25:47.626555117 -0500\n+++ /tmp/Arja_Defects4J_Closure_67/patches_k844/Patch_160/patched/tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-01 09:31:42.700999387 -0500\n@@ -1382,11 +1382,7 @@\n   public String checkTreeEquals(Node node2) {\n       NodeMismatch diff = checkTreeEqualsImpl(node2);\n       if (diff != null) {\n-        return \"Node tree inequality:\" +\n-            \"\\nTree1:\\n\" + toStringTree() +\n-            \"\\n\\nTree2:\\n\" + node2.toStringTree() +\n-            \"\\n\\nSubtree1: \" + diff.nodeA.toStringTree() +\n-            \"\\n\\nSubtree2: \" + diff.nodeB.toStringTree();\n+        return \"BITOR\";\n       }\n       return null;\n   }\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Replace", 
          "seed": "break;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-01 09:25:47.602554953 -0500\n+++ /tmp/Arja_Defects4J_Closure_67/patches_k844/Patch_129/patched/tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-01 09:31:27.356893755 -0500\n@@ -97,10 +97,7 @@\n             }\n           }\n \n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n+          break;\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 318, 
          "faulty": "return \"THIS\";", 
          "type": "Replace", 
          "seed": "return \"script\";"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Replace", 
          "seed": "return;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-01 09:25:47.602554953 -0500\n+++ /tmp/Arja_Defects4J_Closure_67/patches_k844/Patch_283/patched/tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-01 09:32:41.385403615 -0500\n@@ -97,10 +97,7 @@\n             }\n           }\n \n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n+          return;\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n--- /tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-01 09:25:47.626555117 -0500\n+++ /tmp/Arja_Defects4J_Closure_67/patches_k844/Patch_283/patched/tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-01 09:32:41.385403615 -0500\n@@ -315,7 +315,7 @@\n           case NUMBER:          return \"NUMBER\";\n           case STRING:          return \"STRING\";\n           case NULL:            return \"NULL\";\n-          case THIS:            return \"THIS\";\n+          case THIS:            return \"script\";\n           case FALSE:           return \"FALSE\";\n           case TRUE:            return \"TRUE\";\n           case SHEQ:            return \"SHEQ\";\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java", 
          "line": 535, 
          "faulty": "NodeUtil.removeChild(exprNode.getParent(),exprNode);", 
          "type": "Delete", 
          "seed": "return;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 87, 
          "faulty": "if (specializationState == null) {\n  canRemove=true;\n}\n else {\n  Node specializableFunction=getSpecializableFunctionFromSymbol(declaration);\n  if (specializableFunction != null) {\n    specializationState.reportRemovedFunction(specializableFunction,null);\n    canRemove=true;\n  }\n}", 
          "type": "Delete", 
          "seed": "break;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java\t2018-12-01 09:25:49.286566544 -0500\n+++ /tmp/Arja_Defects4J_Closure_67/patches_k844/Patch_110/patched/tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java\t2018-12-01 09:31:18.084829925 -0500\n@@ -532,7 +532,6 @@\n \n     @Override\n     public void remove() {\n-      NodeUtil.removeChild(exprNode.getParent(), exprNode);\n     }\n \n     @Override\n\n\n--- /tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-01 09:25:47.602554953 -0500\n+++ /tmp/Arja_Defects4J_Closure_67/patches_k844/Patch_110/patched/tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-01 09:31:18.084829925 -0500\n@@ -84,19 +84,6 @@\n         for (Symbol declaration : nameInfo.getDeclarations()) {\n           boolean canRemove = false;\n \n-          if (specializationState == null) {\n-            canRemove = true;\n-          } else {\n-            Node specializableFunction =\n-              getSpecializableFunctionFromSymbol(declaration);\n-\n-            if (specializableFunction != null) {\n-              specializationState.reportRemovedFunction(\n-                  specializableFunction, null);\n-              canRemove = true;\n-            }\n-          }\n-\n           if (canRemove) {\n             declaration.remove();\n             changed = true;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 359, 
          "faulty": "return \"LP\";", 
          "type": "InsertBefore", 
          "seed": "if (!(0 <= token && token <= Token.LAST_TOKEN)) throw new IllegalArgumentException();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Replace", 
          "seed": "return;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 939, 
          "faulty": "sb.append(' ');", 
          "type": "InsertBefore", 
          "seed": "if (printSource) {\n  int lineno=getLineno();\n  if (lineno != -1) {\n    sb.append(' ');\n    sb.append(lineno);\n  }\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-01 09:25:47.602554953 -0500\n+++ /tmp/Arja_Defects4J_Closure_67/patches_k844/Patch_999/patched/tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-01 09:43:01.825686999 -0500\n@@ -97,10 +97,7 @@\n             }\n           }\n \n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n+          return;\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n--- /tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-01 09:25:47.626555117 -0500\n+++ /tmp/Arja_Defects4J_Closure_67/patches_k844/Patch_999/patched/tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-01 09:43:01.829687027 -0500\n@@ -356,7 +356,11 @@\n           case RB:              return \"RB\";\n           case LC:              return \"LC\";\n           case RC:              return \"RC\";\n-          case LP:              return \"LP\";\n+          case LP:              {\n+\t\t\t\tif (!(0 <= token && token <= Token.LAST_TOKEN))\n+\t\t\t\t\tthrow new IllegalArgumentException();\n+\t\t\t\treturn \"LP\";\n+\t\t\t}\n           case RP:              return \"RP\";\n           case COMMA:           return \"COMMA\";\n           case ASSIGN:          return \"ASSIGN\";\n\n\n--- /tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-01 09:25:47.626555117 -0500\n+++ /tmp/Arja_Defects4J_Closure_67/patches_k844/Patch_999/patched/tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-01 09:43:01.829687027 -0500\n@@ -936,7 +936,14 @@\n         sb.append(' ');\n         sb.append(getString());\n       } else if (type == Token.FUNCTION) {\n-        sb.append(' ');\n+        if (printSource) {\n+\t\t\tint lineno = getLineno();\n+\t\t\tif (lineno != -1) {\n+\t\t\t\tsb.append(' ');\n+\t\t\t\tsb.append(lineno);\n+\t\t\t}\n+\t\t}\n+\t\tsb.append(' ');\n         // In the case of JsDoc trees, the first child is often not a string\n         // which causes exceptions to be thrown when calling toString or\n         // toStringTree.\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Replace", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 362, 
          "faulty": "return \"ASSIGN\";", 
          "type": "Replace", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 939, 
          "faulty": "sb.append(' ');", 
          "type": "Delete", 
          "seed": "if (printSource) {\n  int lineno=getLineno();\n  if (lineno != -1) {\n    sb.append(' ');\n    sb.append(lineno);\n  }\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-01 09:25:47.602554953 -0500\n+++ /tmp/Arja_Defects4J_Closure_67/patches_k844/Patch_981/patched/tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-01 09:42:52.265621004 -0500\n@@ -97,10 +97,7 @@\n             }\n           }\n \n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n+          break;\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n--- /tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-01 09:25:47.626555117 -0500\n+++ /tmp/Arja_Defects4J_Closure_67/patches_k844/Patch_981/patched/tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-01 09:42:52.269621031 -0500\n@@ -359,7 +359,7 @@\n           case LP:              return \"LP\";\n           case RP:              return \"RP\";\n           case COMMA:           return \"COMMA\";\n-          case ASSIGN:          return \"ASSIGN\";\n+          case ASSIGN:          break;\n           case ASSIGN_BITOR:    return \"ASSIGN_BITOR\";\n           case ASSIGN_BITXOR:   return \"ASSIGN_BITXOR\";\n           case ASSIGN_BITAND:   return \"ASSIGN_BITAND\";\n\n\n--- /tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-01 09:25:47.626555117 -0500\n+++ /tmp/Arja_Defects4J_Closure_67/patches_k844/Patch_981/patched/tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-01 09:42:52.269621031 -0500\n@@ -936,7 +936,6 @@\n         sb.append(' ');\n         sb.append(getString());\n       } else if (type == Token.FUNCTION) {\n-        sb.append(' ');\n         // In the case of JsDoc trees, the first child is often not a string\n         // which causes exceptions to be thrown when calling toString or\n         // toStringTree.\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java", 
          "line": 535, 
          "faulty": "NodeUtil.removeChild(exprNode.getParent(),exprNode);", 
          "type": "Delete", 
          "seed": "return;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Replace", 
          "seed": "break;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java\t2018-12-01 09:25:49.286566544 -0500\n+++ /tmp/Arja_Defects4J_Closure_67/patches_k844/Patch_1090/patched/tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java\t2018-12-01 09:44:09.630155067 -0500\n@@ -532,7 +532,6 @@\n \n     @Override\n     public void remove() {\n-      NodeUtil.removeChild(exprNode.getParent(), exprNode);\n     }\n \n     @Override\n\n\n--- /tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-01 09:25:47.602554953 -0500\n+++ /tmp/Arja_Defects4J_Closure_67/patches_k844/Patch_1090/patched/tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-01 09:44:09.630155067 -0500\n@@ -97,10 +97,7 @@\n             }\n           }\n \n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n+          break;\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Replace", 
          "seed": "return;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 943, 
          "faulty": "if (first == null || first.getType() != Token.NAME) {\n  sb.append(\"<invalid>\");\n}\n else {\n  sb.append(first.getString());\n}", 
          "type": "Replace", 
          "seed": "sb.append('\\n');"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-01 09:25:47.602554953 -0500\n+++ /tmp/Arja_Defects4J_Closure_67/patches_k844/Patch_494/patched/tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-01 09:35:40.570640740 -0500\n@@ -97,10 +97,7 @@\n             }\n           }\n \n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n+          return;\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n--- /tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-01 09:25:47.626555117 -0500\n+++ /tmp/Arja_Defects4J_Closure_67/patches_k844/Patch_494/patched/tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-01 09:35:40.570640740 -0500\n@@ -937,14 +937,7 @@\n         sb.append(getString());\n       } else if (type == Token.FUNCTION) {\n         sb.append(' ');\n-        // In the case of JsDoc trees, the first child is often not a string\n-        // which causes exceptions to be thrown when calling toString or\n-        // toStringTree.\n-        if (first == null || first.getType() != Token.NAME) {\n-          sb.append(\"<invalid>\");\n-        } else {\n-          sb.append(first.getString());\n-        }\n+        sb.append('\\n');\n       } else if (this instanceof ScriptOrFnNode) {\n         ScriptOrFnNode sof = (ScriptOrFnNode) this;\n         if (this instanceof FunctionNode) {\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 87, 
          "faulty": "if (specializationState == null) {\n  canRemove=true;\n}\n else {\n  Node specializableFunction=getSpecializableFunctionFromSymbol(declaration);\n  if (specializableFunction != null) {\n    specializationState.reportRemovedFunction(specializableFunction,null);\n    canRemove=true;\n  }\n}", 
          "type": "Delete", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 943, 
          "faulty": "if (first == null || first.getType() != Token.NAME) {\n  sb.append(\"<invalid>\");\n}\n else {\n  sb.append(first.getString());\n}", 
          "type": "Delete", 
          "seed": "sb.append(Token.name(type));"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-01 09:25:47.602554953 -0500\n+++ /tmp/Arja_Defects4J_Closure_67/patches_k844/Patch_856/patched/tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-01 09:40:31.552649608 -0500\n@@ -84,19 +84,6 @@\n         for (Symbol declaration : nameInfo.getDeclarations()) {\n           boolean canRemove = false;\n \n-          if (specializationState == null) {\n-            canRemove = true;\n-          } else {\n-            Node specializableFunction =\n-              getSpecializableFunctionFromSymbol(declaration);\n-\n-            if (specializableFunction != null) {\n-              specializationState.reportRemovedFunction(\n-                  specializableFunction, null);\n-              canRemove = true;\n-            }\n-          }\n-\n           if (canRemove) {\n             declaration.remove();\n             changed = true;\n\n\n--- /tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-01 09:25:47.626555117 -0500\n+++ /tmp/Arja_Defects4J_Closure_67/patches_k844/Patch_856/patched/tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-01 09:40:31.556649636 -0500\n@@ -937,14 +937,6 @@\n         sb.append(getString());\n       } else if (type == Token.FUNCTION) {\n         sb.append(' ');\n-        // In the case of JsDoc trees, the first child is often not a string\n-        // which causes exceptions to be thrown when calling toString or\n-        // toStringTree.\n-        if (first == null || first.getType() != Token.NAME) {\n-          sb.append(\"<invalid>\");\n-        } else {\n-          sb.append(first.getString());\n-        }\n       } else if (this instanceof ScriptOrFnNode) {\n         ScriptOrFnNode sof = (ScriptOrFnNode) this;\n         if (this instanceof FunctionNode) {\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 310, 
          "faulty": "return \"GETELEM\";", 
          "type": "Replace", 
          "seed": "if (!(0 <= token && token <= Token.LAST_TOKEN)) throw new IllegalArgumentException();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Replace", 
          "seed": "return;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 946, 
          "faulty": "sb.append(first.getString());", 
          "type": "InsertBefore", 
          "seed": "toString(sb,printSource,printAnnotations,printType);"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-01 09:25:47.602554953 -0500\n+++ /tmp/Arja_Defects4J_Closure_67/patches_k844/Patch_1141/patched/tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-01 09:44:42.114379310 -0500\n@@ -97,10 +97,7 @@\n             }\n           }\n \n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n+          return;\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n--- /tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-01 09:25:47.626555117 -0500\n+++ /tmp/Arja_Defects4J_Closure_67/patches_k844/Patch_1141/patched/tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-01 09:44:42.114379310 -0500\n@@ -307,7 +307,8 @@\n           case TYPEOF:          return \"TYPEOF\";\n           case GETPROP:         return \"GETPROP\";\n           case SETPROP:         return \"SETPROP\";\n-          case GETELEM:         return \"GETELEM\";\n+          case GETELEM:         if (!(0 <= token && token <= Token.LAST_TOKEN))\n+\t\t\t\tthrow new IllegalArgumentException();\n           case SETELEM:         return \"SETELEM\";\n           case CALL:            return \"CALL\";\n           case NAME:            return \"NAME\";\n\n\n--- /tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-01 09:25:47.626555117 -0500\n+++ /tmp/Arja_Defects4J_Closure_67/patches_k844/Patch_1141/patched/tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-01 09:44:42.118379337 -0500\n@@ -943,7 +943,8 @@\n         if (first == null || first.getType() != Token.NAME) {\n           sb.append(\"<invalid>\");\n         } else {\n-          sb.append(first.getString());\n+          toString(sb, printSource, printAnnotations, printType);\n+\t\tsb.append(first.getString());\n         }\n       } else if (this instanceof ScriptOrFnNode) {\n         ScriptOrFnNode sof = (ScriptOrFnNode) this;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 318, 
          "faulty": "return \"THIS\";", 
          "type": "Replace", 
          "seed": "return \"script\";"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Replace", 
          "seed": "break;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-01 09:25:47.602554953 -0500\n+++ /tmp/Arja_Defects4J_Closure_67/patches_k844/Patch_327/patched/tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-01 09:33:02.933552390 -0500\n@@ -97,10 +97,7 @@\n             }\n           }\n \n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n+          break;\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n--- /tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-01 09:25:47.626555117 -0500\n+++ /tmp/Arja_Defects4J_Closure_67/patches_k844/Patch_327/patched/tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-01 09:33:02.937552418 -0500\n@@ -315,7 +315,7 @@\n           case NUMBER:          return \"NUMBER\";\n           case STRING:          return \"STRING\";\n           case NULL:            return \"NULL\";\n-          case THIS:            return \"THIS\";\n+          case THIS:            return \"script\";\n           case FALSE:           return \"FALSE\";\n           case TRUE:            return \"TRUE\";\n           case SHEQ:            return \"SHEQ\";\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 88, 
          "faulty": "canRemove=true;", 
          "type": "Replace", 
          "seed": "return;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-01 09:25:47.602554953 -0500\n+++ /tmp/Arja_Defects4J_Closure_67/patches_k844/Patch_574/patched/tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-01 09:36:29.958981715 -0500\n@@ -85,7 +85,7 @@\n           boolean canRemove = false;\n \n           if (specializationState == null) {\n-            canRemove = true;\n+            return;\n           } else {\n             Node specializableFunction =\n               getSpecializableFunctionFromSymbol(declaration);\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Replace", 
          "seed": "return;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 111, 
          "faulty": "compiler.reportCodeChange();", 
          "type": "Delete", 
          "seed": "return;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-01 09:25:47.602554953 -0500\n+++ /tmp/Arja_Defects4J_Closure_67/patches_k844/Patch_918/patched/tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-01 09:41:25.029018780 -0500\n@@ -97,10 +97,7 @@\n             }\n           }\n \n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n+          return;\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n@@ -108,7 +105,6 @@\n     }\n \n     if (changed) {\n-      compiler.reportCodeChange();\n     }\n   }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Replace", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 102, 
          "faulty": "changed=true;", 
          "type": "Replace", 
          "seed": "break;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-01 09:25:47.602554953 -0500\n+++ /tmp/Arja_Defects4J_Closure_67/patches_k844/Patch_499/patched/tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-01 09:35:42.734655682 -0500\n@@ -97,10 +97,7 @@\n             }\n           }\n \n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n+          break;\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1427, 
          "faulty": "return res;", 
          "type": "Delete", 
          "seed": "throw new IllegalArgumentException();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Replace", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 102, 
          "faulty": "changed=true;", 
          "type": "Replace", 
          "seed": "return;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 221, 
          "faulty": "return \"synthetic\";", 
          "type": "Delete", 
          "seed": "return \"BLOCK\";"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 946, 
          "faulty": "sb.append(first.getString());", 
          "type": "Replace", 
          "seed": "toString(sb,printSource,printAnnotations,printType);"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-01 09:25:47.602554953 -0500\n+++ /tmp/Arja_Defects4J_Closure_67/patches_k844/Patch_721/patched/tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-01 09:39:14.220115738 -0500\n@@ -97,10 +97,7 @@\n             }\n           }\n \n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n+          break;\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n--- /tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-01 09:25:47.626555117 -0500\n+++ /tmp/Arja_Defects4J_Closure_67/patches_k844/Patch_721/patched/tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-01 09:39:14.224115765 -0500\n@@ -218,7 +218,7 @@\n         case QUOTED_PROP:        return \"quoted\";\n         case OPT_ARG_NAME:       return \"opt_arg\";\n \n-        case SYNTHETIC_BLOCK_PROP: return \"synthetic\";\n+        case SYNTHETIC_BLOCK_PROP: ;\n         case EMPTY_BLOCK:        return \"empty_block\";\n         case ORIGINALNAME_PROP:  return \"originalname\";\n         case SIDE_EFFECT_FLAGS:  return \"side_effect_flags\";\n@@ -943,7 +943,7 @@\n         if (first == null || first.getType() != Token.NAME) {\n           sb.append(\"<invalid>\");\n         } else {\n-          sb.append(first.getString());\n+          toString(sb, printSource, printAnnotations, printType);\n         }\n       } else if (this instanceof ScriptOrFnNode) {\n         ScriptOrFnNode sof = (ScriptOrFnNode) this;\n@@ -1424,7 +1424,6 @@\n       }\n       res = n.checkTreeEqualsImpl(n2);\n       if (res != null) {\n-        return res;\n       }\n     }\n     return res;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Replace", 
          "seed": "return;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 221, 
          "faulty": "return \"synthetic\";", 
          "type": "Delete", 
          "seed": "return \"BLOCK\";"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1414, 
          "faulty": "return new NodeMismatch(this,node2);", 
          "type": "InsertBefore", 
          "seed": "sourcePosition=-1;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-01 09:25:47.602554953 -0500\n+++ /tmp/Arja_Defects4J_Closure_67/patches_k844/Patch_703/patched/tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-01 09:39:02.076031899 -0500\n@@ -97,10 +97,7 @@\n             }\n           }\n \n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n+          return;\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n--- /tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-01 09:25:47.626555117 -0500\n+++ /tmp/Arja_Defects4J_Closure_67/patches_k844/Patch_703/patched/tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-01 09:39:02.076031899 -0500\n@@ -218,7 +218,7 @@\n         case QUOTED_PROP:        return \"quoted\";\n         case OPT_ARG_NAME:       return \"opt_arg\";\n \n-        case SYNTHETIC_BLOCK_PROP: return \"synthetic\";\n+        case SYNTHETIC_BLOCK_PROP: ;\n         case EMPTY_BLOCK:        return \"empty_block\";\n         case ORIGINALNAME_PROP:  return \"originalname\";\n         case SIDE_EFFECT_FLAGS:  return \"side_effect_flags\";\n@@ -1411,7 +1411,8 @@\n    */\n   NodeMismatch checkTreeEqualsImpl(Node node2) {\n     if (!isEquivalentTo(node2, false, false)) {\n-      return new NodeMismatch(this, node2);\n+      sourcePosition = -1;\n+\treturn new NodeMismatch(this, node2);\n     }\n \n     NodeMismatch res = null;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 88, 
          "faulty": "canRemove=true;", 
          "type": "Replace", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Replace", 
          "seed": "return;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-01 09:25:47.602554953 -0500\n+++ /tmp/Arja_Defects4J_Closure_67/patches_k844/Patch_1087/patched/tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-01 09:44:07.754142116 -0500\n@@ -85,7 +85,7 @@\n           boolean canRemove = false;\n \n           if (specializationState == null) {\n-            canRemove = true;\n+            break;\n           } else {\n             Node specializableFunction =\n               getSpecializableFunctionFromSymbol(declaration);\n@@ -97,10 +97,7 @@\n             }\n           }\n \n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n+          return;\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 318, 
          "faulty": "return \"THIS\";", 
          "type": "Delete", 
          "seed": "break L;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Replace", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 362, 
          "faulty": "return \"ASSIGN\";", 
          "type": "Replace", 
          "seed": "break;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-01 09:25:47.602554953 -0500\n+++ /tmp/Arja_Defects4J_Closure_67/patches_k844/Patch_496/patched/tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-01 09:35:41.162644828 -0500\n@@ -97,10 +97,7 @@\n             }\n           }\n \n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n+          break;\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n--- /tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-01 09:25:47.626555117 -0500\n+++ /tmp/Arja_Defects4J_Closure_67/patches_k844/Patch_496/patched/tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-01 09:35:41.162644828 -0500\n@@ -315,7 +315,7 @@\n           case NUMBER:          return \"NUMBER\";\n           case STRING:          return \"STRING\";\n           case NULL:            return \"NULL\";\n-          case THIS:            return \"THIS\";\n+          case THIS:            ;\n           case FALSE:           return \"FALSE\";\n           case TRUE:            return \"TRUE\";\n           case SHEQ:            return \"SHEQ\";\n@@ -359,7 +359,7 @@\n           case LP:              return \"LP\";\n           case RP:              return \"RP\";\n           case COMMA:           return \"COMMA\";\n-          case ASSIGN:          return \"ASSIGN\";\n+          case ASSIGN:          break;\n           case ASSIGN_BITOR:    return \"ASSIGN_BITOR\";\n           case ASSIGN_BITXOR:   return \"ASSIGN_BITXOR\";\n           case ASSIGN_BITAND:   return \"ASSIGN_BITAND\";\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Replace", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 939, 
          "faulty": "sb.append(' ');", 
          "type": "Delete", 
          "seed": "if (printSource) {\n  int lineno=getLineno();\n  if (lineno != -1) {\n    sb.append(' ');\n    sb.append(lineno);\n  }\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-01 09:25:47.602554953 -0500\n+++ /tmp/Arja_Defects4J_Closure_67/patches_k844/Patch_698/patched/tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-01 09:38:59.252012403 -0500\n@@ -97,10 +97,7 @@\n             }\n           }\n \n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n+          break;\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n--- /tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-01 09:25:47.626555117 -0500\n+++ /tmp/Arja_Defects4J_Closure_67/patches_k844/Patch_698/patched/tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-01 09:38:59.252012403 -0500\n@@ -936,7 +936,6 @@\n         sb.append(' ');\n         sb.append(getString());\n       } else if (type == Token.FUNCTION) {\n-        sb.append(' ');\n         // In the case of JsDoc trees, the first child is often not a string\n         // which causes exceptions to be thrown when calling toString or\n         // toStringTree.\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 88, 
          "faulty": "canRemove=true;", 
          "type": "Replace", 
          "seed": "return;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 87, 
          "faulty": "if (specializationState == null) {\n  canRemove=true;\n}\n else {\n  Node specializableFunction=getSpecializableFunctionFromSymbol(declaration);\n  if (specializableFunction != null) {\n    specializationState.reportRemovedFunction(specializableFunction,null);\n    canRemove=true;\n  }\n}", 
          "type": "Delete", 
          "seed": "break;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-01 09:25:47.602554953 -0500\n+++ /tmp/Arja_Defects4J_Closure_67/patches_k844/Patch_442/patched/tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-01 09:34:45.638261484 -0500\n@@ -84,19 +84,6 @@\n         for (Symbol declaration : nameInfo.getDeclarations()) {\n           boolean canRemove = false;\n \n-          if (specializationState == null) {\n-            canRemove = true;\n-          } else {\n-            Node specializableFunction =\n-              getSpecializableFunctionFromSymbol(declaration);\n-\n-            if (specializableFunction != null) {\n-              specializationState.reportRemovedFunction(\n-                  specializableFunction, null);\n-              canRemove = true;\n-            }\n-          }\n-\n           if (canRemove) {\n             declaration.remove();\n             changed = true;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java", 
          "line": 535, 
          "faulty": "NodeUtil.removeChild(exprNode.getParent(),exprNode);", 
          "type": "Replace", 
          "seed": "return;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Replace", 
          "seed": "return;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java\t2018-12-01 09:25:49.286566544 -0500\n+++ /tmp/Arja_Defects4J_Closure_67/patches_k844/Patch_141/patched/tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java\t2018-12-01 09:31:34.312941642 -0500\n@@ -532,7 +532,7 @@\n \n     @Override\n     public void remove() {\n-      NodeUtil.removeChild(exprNode.getParent(), exprNode);\n+      return;\n     }\n \n     @Override\n\n\n--- /tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-01 09:25:47.602554953 -0500\n+++ /tmp/Arja_Defects4J_Closure_67/patches_k844/Patch_141/patched/tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-01 09:31:34.316941669 -0500\n@@ -97,10 +97,7 @@\n             }\n           }\n \n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n+          return;\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Replace", 
          "seed": "return;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 939, 
          "faulty": "sb.append(' ');", 
          "type": "InsertBefore", 
          "seed": "sb.append(Token.name(type));"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 943, 
          "faulty": "if (first == null || first.getType() != Token.NAME) {\n  sb.append(\"<invalid>\");\n}\n else {\n  sb.append(first.getString());\n}", 
          "type": "Replace", 
          "seed": "this.type=type;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-01 09:25:47.602554953 -0500\n+++ /tmp/Arja_Defects4J_Closure_67/patches_k844/Patch_293/patched/tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-01 09:32:46.493438883 -0500\n@@ -97,10 +97,7 @@\n             }\n           }\n \n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n+          return;\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n--- /tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-01 09:25:47.626555117 -0500\n+++ /tmp/Arja_Defects4J_Closure_67/patches_k844/Patch_293/patched/tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-01 09:32:46.493438883 -0500\n@@ -936,15 +936,9 @@\n         sb.append(' ');\n         sb.append(getString());\n       } else if (type == Token.FUNCTION) {\n-        sb.append(' ');\n-        // In the case of JsDoc trees, the first child is often not a string\n-        // which causes exceptions to be thrown when calling toString or\n-        // toStringTree.\n-        if (first == null || first.getType() != Token.NAME) {\n-          sb.append(\"<invalid>\");\n-        } else {\n-          sb.append(first.getString());\n-        }\n+        sb.append(Token.name(type));\n+\t\tsb.append(' ');\n+        this.type = type;\n       } else if (this instanceof ScriptOrFnNode) {\n         ScriptOrFnNode sof = (ScriptOrFnNode) this;\n         if (this instanceof FunctionNode) {\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 87, 
          "faulty": "if (specializationState == null) {\n  canRemove=true;\n}\n else {\n  Node specializableFunction=getSpecializableFunctionFromSymbol(declaration);\n  if (specializableFunction != null) {\n    specializationState.reportRemovedFunction(specializableFunction,null);\n    canRemove=true;\n  }\n}", 
          "type": "Delete", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 359, 
          "faulty": "return \"LP\";", 
          "type": "InsertBefore", 
          "seed": "if (!(0 <= token && token <= Token.LAST_TOKEN)) throw new IllegalArgumentException();"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-01 09:25:47.602554953 -0500\n+++ /tmp/Arja_Defects4J_Closure_67/patches_k844/Patch_337/patched/tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-01 09:33:07.237582107 -0500\n@@ -84,19 +84,6 @@\n         for (Symbol declaration : nameInfo.getDeclarations()) {\n           boolean canRemove = false;\n \n-          if (specializationState == null) {\n-            canRemove = true;\n-          } else {\n-            Node specializableFunction =\n-              getSpecializableFunctionFromSymbol(declaration);\n-\n-            if (specializableFunction != null) {\n-              specializationState.reportRemovedFunction(\n-                  specializableFunction, null);\n-              canRemove = true;\n-            }\n-          }\n-\n           if (canRemove) {\n             declaration.remove();\n             changed = true;\n\n\n--- /tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-01 09:25:47.626555117 -0500\n+++ /tmp/Arja_Defects4J_Closure_67/patches_k844/Patch_337/patched/tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-01 09:33:07.237582107 -0500\n@@ -356,7 +356,11 @@\n           case RB:              return \"RB\";\n           case LC:              return \"LC\";\n           case RC:              return \"RC\";\n-          case LP:              return \"LP\";\n+          case LP:              {\n+\t\t\t\tif (!(0 <= token && token <= Token.LAST_TOKEN))\n+\t\t\t\t\tthrow new IllegalArgumentException();\n+\t\t\t\treturn \"LP\";\n+\t\t\t}\n           case RP:              return \"RP\";\n           case COMMA:           return \"COMMA\";\n           case ASSIGN:          return \"ASSIGN\";\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 359, 
          "faulty": "return \"LP\";", 
          "type": "InsertBefore", 
          "seed": "if (!(0 <= token && token <= Token.LAST_TOKEN)) throw new IllegalArgumentException();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Replace", 
          "seed": "return;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-01 09:25:47.602554953 -0500\n+++ /tmp/Arja_Defects4J_Closure_67/patches_k844/Patch_102/patched/tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-01 09:31:14.576805776 -0500\n@@ -97,10 +97,7 @@\n             }\n           }\n \n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n+          return;\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n--- /tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-01 09:25:47.626555117 -0500\n+++ /tmp/Arja_Defects4J_Closure_67/patches_k844/Patch_102/patched/tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-01 09:31:14.580805803 -0500\n@@ -356,7 +356,11 @@\n           case RB:              return \"RB\";\n           case LC:              return \"LC\";\n           case RC:              return \"RC\";\n-          case LP:              return \"LP\";\n+          case LP:              {\n+\t\t\t\tif (!(0 <= token && token <= Token.LAST_TOKEN))\n+\t\t\t\t\tthrow new IllegalArgumentException();\n+\t\t\t\treturn \"LP\";\n+\t\t\t}\n           case RP:              return \"RP\";\n           case COMMA:           return \"COMMA\";\n           case ASSIGN:          return \"ASSIGN\";\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java", 
          "line": 535, 
          "faulty": "NodeUtil.removeChild(exprNode.getParent(),exprNode);", 
          "type": "Delete", 
          "seed": "return;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Replace", 
          "seed": "return;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java\t2018-12-01 09:25:49.286566544 -0500\n+++ /tmp/Arja_Defects4J_Closure_67/patches_k844/Patch_474/patched/tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java\t2018-12-01 09:35:06.790407520 -0500\n@@ -532,7 +532,6 @@\n \n     @Override\n     public void remove() {\n-      NodeUtil.removeChild(exprNode.getParent(), exprNode);\n     }\n \n     @Override\n\n\n--- /tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-01 09:25:47.602554953 -0500\n+++ /tmp/Arja_Defects4J_Closure_67/patches_k844/Patch_474/patched/tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-01 09:35:06.790407520 -0500\n@@ -97,10 +97,7 @@\n             }\n           }\n \n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n+          return;\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 88, 
          "faulty": "canRemove=true;", 
          "type": "Delete", 
          "seed": "return;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Replace", 
          "seed": "break;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-01 09:25:47.602554953 -0500\n+++ /tmp/Arja_Defects4J_Closure_67/patches_k844/Patch_1129/patched/tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-01 09:44:33.830322123 -0500\n@@ -85,7 +85,6 @@\n           boolean canRemove = false;\n \n           if (specializationState == null) {\n-            canRemove = true;\n           } else {\n             Node specializableFunction =\n               getSpecializableFunctionFromSymbol(declaration);\n@@ -97,10 +96,7 @@\n             }\n           }\n \n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n+          break;\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 88, 
          "faulty": "canRemove=true;", 
          "type": "Delete", 
          "seed": "return;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 102, 
          "faulty": "changed=true;", 
          "type": "Replace", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 946, 
          "faulty": "sb.append(first.getString());", 
          "type": "InsertBefore", 
          "seed": "if (jsType != null) {\n  String jsTypeString=jsType.toString();\n  if (jsTypeString != null) {\n    sb.append(\" : \");\n    sb.append(jsTypeString);\n  }\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-01 09:25:47.602554953 -0500\n+++ /tmp/Arja_Defects4J_Closure_67/patches_k844/Patch_41/patched/tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-01 09:30:40.392570448 -0500\n@@ -85,7 +85,6 @@\n           boolean canRemove = false;\n \n           if (specializationState == null) {\n-            canRemove = true;\n           } else {\n             Node specializableFunction =\n               getSpecializableFunctionFromSymbol(declaration);\n@@ -99,7 +98,7 @@\n \n           if (canRemove) {\n             declaration.remove();\n-            changed = true;\n+            break;\n           }\n         }\n \n\n\n--- /tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-01 09:25:47.626555117 -0500\n+++ /tmp/Arja_Defects4J_Closure_67/patches_k844/Patch_41/patched/tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-01 09:30:40.392570448 -0500\n@@ -943,7 +943,14 @@\n         if (first == null || first.getType() != Token.NAME) {\n           sb.append(\"<invalid>\");\n         } else {\n-          sb.append(first.getString());\n+          if (jsType != null) {\n+\t\t\t\tString jsTypeString = jsType.toString();\n+\t\t\t\tif (jsTypeString != null) {\n+\t\t\t\t\tsb.append(\" : \");\n+\t\t\t\t\tsb.append(jsTypeString);\n+\t\t\t\t}\n+\t\t\t}\n+\t\tsb.append(first.getString());\n         }\n       } else if (this instanceof ScriptOrFnNode) {\n         ScriptOrFnNode sof = (ScriptOrFnNode) this;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Replace", 
          "seed": "return;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 943, 
          "faulty": "if (first == null || first.getType() != Token.NAME) {\n  sb.append(\"<invalid>\");\n}\n else {\n  sb.append(first.getString());\n}", 
          "type": "Replace", 
          "seed": "sb.append(Token.name(type));"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-01 09:25:47.602554953 -0500\n+++ /tmp/Arja_Defects4J_Closure_67/patches_k844/Patch_390/patched/tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-01 09:34:02.385962864 -0500\n@@ -97,10 +97,7 @@\n             }\n           }\n \n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n+          return;\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n--- /tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-01 09:25:47.626555117 -0500\n+++ /tmp/Arja_Defects4J_Closure_67/patches_k844/Patch_390/patched/tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-01 09:34:02.385962864 -0500\n@@ -937,14 +937,7 @@\n         sb.append(getString());\n       } else if (type == Token.FUNCTION) {\n         sb.append(' ');\n-        // In the case of JsDoc trees, the first child is often not a string\n-        // which causes exceptions to be thrown when calling toString or\n-        // toStringTree.\n-        if (first == null || first.getType() != Token.NAME) {\n-          sb.append(\"<invalid>\");\n-        } else {\n-          sb.append(first.getString());\n-        }\n+        sb.append(Token.name(type));\n       } else if (this instanceof ScriptOrFnNode) {\n         ScriptOrFnNode sof = (ScriptOrFnNode) this;\n         if (this instanceof FunctionNode) {\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1427, 
          "faulty": "return res;", 
          "type": "Delete", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 310, 
          "faulty": "return \"GETELEM\";", 
          "type": "Replace", 
          "seed": "if (!(0 <= token && token <= Token.LAST_TOKEN)) throw new IllegalArgumentException();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 88, 
          "faulty": "canRemove=true;", 
          "type": "Replace", 
          "seed": "return;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Replace", 
          "seed": "return;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 221, 
          "faulty": "return \"synthetic\";", 
          "type": "Delete", 
          "seed": "break L;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-01 09:25:47.602554953 -0500\n+++ /tmp/Arja_Defects4J_Closure_67/patches_k844/Patch_788/patched/tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-01 09:39:53.148384483 -0500\n@@ -85,7 +85,7 @@\n           boolean canRemove = false;\n \n           if (specializationState == null) {\n-            canRemove = true;\n+            return;\n           } else {\n             Node specializableFunction =\n               getSpecializableFunctionFromSymbol(declaration);\n@@ -97,10 +97,7 @@\n             }\n           }\n \n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n+          return;\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n--- /tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-01 09:25:47.626555117 -0500\n+++ /tmp/Arja_Defects4J_Closure_67/patches_k844/Patch_788/patched/tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-01 09:39:53.148384483 -0500\n@@ -218,7 +218,7 @@\n         case QUOTED_PROP:        return \"quoted\";\n         case OPT_ARG_NAME:       return \"opt_arg\";\n \n-        case SYNTHETIC_BLOCK_PROP: return \"synthetic\";\n+        case SYNTHETIC_BLOCK_PROP: ;\n         case EMPTY_BLOCK:        return \"empty_block\";\n         case ORIGINALNAME_PROP:  return \"originalname\";\n         case SIDE_EFFECT_FLAGS:  return \"side_effect_flags\";\n@@ -1424,7 +1424,6 @@\n       }\n       res = n.checkTreeEqualsImpl(n2);\n       if (res != null) {\n-        return res;\n       }\n     }\n     return res;\n\n\n--- /tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-01 09:25:47.626555117 -0500\n+++ /tmp/Arja_Defects4J_Closure_67/patches_k844/Patch_788/patched/tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-01 09:39:53.148384483 -0500\n@@ -307,7 +307,8 @@\n           case TYPEOF:          return \"TYPEOF\";\n           case GETPROP:         return \"GETPROP\";\n           case SETPROP:         return \"SETPROP\";\n-          case GETELEM:         return \"GETELEM\";\n+          case GETELEM:         if (!(0 <= token && token <= Token.LAST_TOKEN))\n+\t\t\t\tthrow new IllegalArgumentException();\n           case SETELEM:         return \"SETELEM\";\n           case CALL:            return \"CALL\";\n           case NAME:            return \"NAME\";\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 310, 
          "faulty": "return \"GETELEM\";", 
          "type": "Replace", 
          "seed": "if (!(0 <= token && token <= Token.LAST_TOKEN)) throw new IllegalArgumentException();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 87, 
          "faulty": "if (specializationState == null) {\n  canRemove=true;\n}\n else {\n  Node specializableFunction=getSpecializableFunctionFromSymbol(declaration);\n  if (specializableFunction != null) {\n    specializationState.reportRemovedFunction(specializableFunction,null);\n    canRemove=true;\n  }\n}", 
          "type": "Delete", 
          "seed": "break;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-01 09:25:47.602554953 -0500\n+++ /tmp/Arja_Defects4J_Closure_67/patches_k844/Patch_96/patched/tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-01 09:31:11.552784958 -0500\n@@ -84,19 +84,6 @@\n         for (Symbol declaration : nameInfo.getDeclarations()) {\n           boolean canRemove = false;\n \n-          if (specializationState == null) {\n-            canRemove = true;\n-          } else {\n-            Node specializableFunction =\n-              getSpecializableFunctionFromSymbol(declaration);\n-\n-            if (specializableFunction != null) {\n-              specializationState.reportRemovedFunction(\n-                  specializableFunction, null);\n-              canRemove = true;\n-            }\n-          }\n-\n           if (canRemove) {\n             declaration.remove();\n             changed = true;\n\n\n--- /tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-01 09:25:47.626555117 -0500\n+++ /tmp/Arja_Defects4J_Closure_67/patches_k844/Patch_96/patched/tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-01 09:31:11.556784986 -0500\n@@ -307,7 +307,8 @@\n           case TYPEOF:          return \"TYPEOF\";\n           case GETPROP:         return \"GETPROP\";\n           case SETPROP:         return \"SETPROP\";\n-          case GETELEM:         return \"GETELEM\";\n+          case GETELEM:         if (!(0 <= token && token <= Token.LAST_TOKEN))\n+\t\t\t\tthrow new IllegalArgumentException();\n           case SETELEM:         return \"SETELEM\";\n           case CALL:            return \"CALL\";\n           case NAME:            return \"NAME\";\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1427, 
          "faulty": "return res;", 
          "type": "Replace", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Replace", 
          "seed": "return;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 946, 
          "faulty": "sb.append(first.getString());", 
          "type": "InsertBefore", 
          "seed": "toString(sb,printSource,printAnnotations,printType);"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-01 09:25:47.602554953 -0500\n+++ /tmp/Arja_Defects4J_Closure_67/patches_k844/Patch_760/patched/tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-01 09:39:38.264281729 -0500\n@@ -97,10 +97,7 @@\n             }\n           }\n \n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n+          return;\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n--- /tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-01 09:25:47.626555117 -0500\n+++ /tmp/Arja_Defects4J_Closure_67/patches_k844/Patch_760/patched/tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-01 09:39:38.264281729 -0500\n@@ -943,7 +943,8 @@\n         if (first == null || first.getType() != Token.NAME) {\n           sb.append(\"<invalid>\");\n         } else {\n-          sb.append(first.getString());\n+          toString(sb, printSource, printAnnotations, printType);\n+\t\tsb.append(first.getString());\n         }\n       } else if (this instanceof ScriptOrFnNode) {\n         ScriptOrFnNode sof = (ScriptOrFnNode) this;\n@@ -1424,7 +1425,7 @@\n       }\n       res = n.checkTreeEqualsImpl(n2);\n       if (res != null) {\n-        return res;\n+        break;\n       }\n     }\n     return res;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 101, 
          "faulty": "declaration.remove();", 
          "type": "Delete", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Replace", 
          "seed": "return;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 362, 
          "faulty": "return \"ASSIGN\";", 
          "type": "Replace", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 939, 
          "faulty": "sb.append(' ');", 
          "type": "InsertBefore", 
          "seed": "if (printSource) {\n  int lineno=getLineno();\n  if (lineno != -1) {\n    sb.append(' ');\n    sb.append(lineno);\n  }\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-01 09:25:47.602554953 -0500\n+++ /tmp/Arja_Defects4J_Closure_67/patches_k844/Patch_411/patched/tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-01 09:34:28.302141794 -0500\n@@ -97,10 +97,7 @@\n             }\n           }\n \n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n+          return;\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n--- /tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-01 09:25:47.626555117 -0500\n+++ /tmp/Arja_Defects4J_Closure_67/patches_k844/Patch_411/patched/tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-01 09:34:28.302141794 -0500\n@@ -359,7 +359,7 @@\n           case LP:              return \"LP\";\n           case RP:              return \"RP\";\n           case COMMA:           return \"COMMA\";\n-          case ASSIGN:          return \"ASSIGN\";\n+          case ASSIGN:          break;\n           case ASSIGN_BITOR:    return \"ASSIGN_BITOR\";\n           case ASSIGN_BITXOR:   return \"ASSIGN_BITXOR\";\n           case ASSIGN_BITAND:   return \"ASSIGN_BITAND\";\n\n\n--- /tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-01 09:25:47.626555117 -0500\n+++ /tmp/Arja_Defects4J_Closure_67/patches_k844/Patch_411/patched/tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-01 09:34:28.302141794 -0500\n@@ -936,7 +936,14 @@\n         sb.append(' ');\n         sb.append(getString());\n       } else if (type == Token.FUNCTION) {\n-        sb.append(' ');\n+        if (printSource) {\n+\t\t\tint lineno = getLineno();\n+\t\t\tif (lineno != -1) {\n+\t\t\t\tsb.append(' ');\n+\t\t\t\tsb.append(lineno);\n+\t\t\t}\n+\t\t}\n+\t\tsb.append(' ');\n         // In the case of JsDoc trees, the first child is often not a string\n         // which causes exceptions to be thrown when calling toString or\n         // toStringTree.\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Replace", 
          "seed": "return;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 102, 
          "faulty": "changed=true;", 
          "type": "Replace", 
          "seed": "return;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-01 09:25:47.602554953 -0500\n+++ /tmp/Arja_Defects4J_Closure_67/patches_k844/Patch_828/patched/tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-01 09:40:15.268537190 -0500\n@@ -97,10 +97,7 @@\n             }\n           }\n \n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n+          return;\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 87, 
          "faulty": "if (specializationState == null) {\n  canRemove=true;\n}\n else {\n  Node specializableFunction=getSpecializableFunctionFromSymbol(declaration);\n  if (specializableFunction != null) {\n    specializationState.reportRemovedFunction(specializableFunction,null);\n    canRemove=true;\n  }\n}", 
          "type": "Delete", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 106, 
          "faulty": "logger.fine(\"Removed unused prototype property: \" + nameInfo.name);", 
          "type": "Replace", 
          "seed": "return;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 946, 
          "faulty": "sb.append(first.getString());", 
          "type": "InsertBefore", 
          "seed": "parent=null;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-01 09:25:47.602554953 -0500\n+++ /tmp/Arja_Defects4J_Closure_67/patches_k844/Patch_154/patched/tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-01 09:31:40.316982975 -0500\n@@ -84,26 +84,13 @@\n         for (Symbol declaration : nameInfo.getDeclarations()) {\n           boolean canRemove = false;\n \n-          if (specializationState == null) {\n-            canRemove = true;\n-          } else {\n-            Node specializableFunction =\n-              getSpecializableFunctionFromSymbol(declaration);\n-\n-            if (specializableFunction != null) {\n-              specializationState.reportRemovedFunction(\n-                  specializableFunction, null);\n-              canRemove = true;\n-            }\n-          }\n-\n           if (canRemove) {\n             declaration.remove();\n             changed = true;\n           }\n         }\n \n-        logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n+        return;\n       }\n     }\n \n\n\n--- /tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-01 09:25:47.626555117 -0500\n+++ /tmp/Arja_Defects4J_Closure_67/patches_k844/Patch_154/patched/tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-01 09:31:40.316982975 -0500\n@@ -943,7 +943,8 @@\n         if (first == null || first.getType() != Token.NAME) {\n           sb.append(\"<invalid>\");\n         } else {\n-          sb.append(first.getString());\n+          parent = null;\n+\t\tsb.append(first.getString());\n         }\n       } else if (this instanceof ScriptOrFnNode) {\n         ScriptOrFnNode sof = (ScriptOrFnNode) this;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Replace", 
          "seed": "return;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 946, 
          "faulty": "sb.append(first.getString());", 
          "type": "Replace", 
          "seed": "toString(sb,printSource,printAnnotations,printType);"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-01 09:25:47.602554953 -0500\n+++ /tmp/Arja_Defects4J_Closure_67/patches_k844/Patch_214/patched/tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-01 09:32:08.117174358 -0500\n@@ -97,10 +97,7 @@\n             }\n           }\n \n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n+          return;\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n--- /tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-01 09:25:47.626555117 -0500\n+++ /tmp/Arja_Defects4J_Closure_67/patches_k844/Patch_214/patched/tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-01 09:32:08.121174385 -0500\n@@ -943,7 +943,7 @@\n         if (first == null || first.getType() != Token.NAME) {\n           sb.append(\"<invalid>\");\n         } else {\n-          sb.append(first.getString());\n+          toString(sb, printSource, printAnnotations, printType);\n         }\n       } else if (this instanceof ScriptOrFnNode) {\n         ScriptOrFnNode sof = (ScriptOrFnNode) this;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 87, 
          "faulty": "if (specializationState == null) {\n  canRemove=true;\n}\n else {\n  Node specializableFunction=getSpecializableFunctionFromSymbol(declaration);\n  if (specializableFunction != null) {\n    specializationState.reportRemovedFunction(specializableFunction,null);\n    canRemove=true;\n  }\n}", 
          "type": "Delete", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 102, 
          "faulty": "changed=true;", 
          "type": "Delete", 
          "seed": "return;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 939, 
          "faulty": "sb.append(' ');", 
          "type": "InsertBefore", 
          "seed": "if (this instanceof StringNode) {\n  sb.append(' ');\n  sb.append(getString());\n}\n else if (type == Token.FUNCTION) {\n  sb.append(' ');\n  if (first == null || first.getType() != Token.NAME) {\n    sb.append(\"<invalid>\");\n  }\n else {\n    sb.append(first.getString());\n  }\n}\n else if (this instanceof ScriptOrFnNode) {\n  ScriptOrFnNode sof=(ScriptOrFnNode)this;\n  if (this instanceof FunctionNode) {\n    FunctionNode fn=(FunctionNode)this;\n    sb.append(' ');\n    sb.append(fn.getFunctionName());\n  }\n  if (printSource) {\n    sb.append(\" [source name: \");\n    sb.append(sof.getSourceName());\n    sb.append(\"] [encoded source length: \");\n    sb.append(sof.getEncodedSourceEnd() - sof.getEncodedSourceStart());\n    sb.append(\"] [base line: \");\n    sb.append(sof.getBaseLineno());\n    sb.append(\"] [end line: \");\n    sb.append(sof.getEndLineno());\n    sb.append(']');\n  }\n}\n else if (type == Token.NUMBER) {\n  sb.append(' ');\n  sb.append(getDouble());\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-01 09:25:47.602554953 -0500\n+++ /tmp/Arja_Defects4J_Closure_67/patches_k844/Patch_58/patched/tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-01 09:30:49.856635598 -0500\n@@ -84,22 +84,8 @@\n         for (Symbol declaration : nameInfo.getDeclarations()) {\n           boolean canRemove = false;\n \n-          if (specializationState == null) {\n-            canRemove = true;\n-          } else {\n-            Node specializableFunction =\n-              getSpecializableFunctionFromSymbol(declaration);\n-\n-            if (specializableFunction != null) {\n-              specializationState.reportRemovedFunction(\n-                  specializableFunction, null);\n-              canRemove = true;\n-            }\n-          }\n-\n           if (canRemove) {\n             declaration.remove();\n-            changed = true;\n           }\n         }\n \n\n\n--- /tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-01 09:25:47.626555117 -0500\n+++ /tmp/Arja_Defects4J_Closure_67/patches_k844/Patch_58/patched/tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-01 09:30:49.856635598 -0500\n@@ -936,7 +936,40 @@\n         sb.append(' ');\n         sb.append(getString());\n       } else if (type == Token.FUNCTION) {\n-        sb.append(' ');\n+        if (this instanceof StringNode) {\n+\t\t\tsb.append(' ');\n+\t\t\tsb.append(getString());\n+\t\t} else if (type == Token.FUNCTION) {\n+\t\t\tsb.append(' ');\n+\t\t\tif (first == null || first.getType() != Token.NAME) {\n+\t\t\t\tsb.append(\"<invalid>\");\n+\t\t\t} else {\n+\t\t\t\tsb.append(first.getString());\n+\t\t\t}\n+\t\t} else if (this instanceof ScriptOrFnNode) {\n+\t\t\tScriptOrFnNode sof = (ScriptOrFnNode) this;\n+\t\t\tif (this instanceof FunctionNode) {\n+\t\t\t\tFunctionNode fn = (FunctionNode) this;\n+\t\t\t\tsb.append(' ');\n+\t\t\t\tsb.append(fn.getFunctionName());\n+\t\t\t}\n+\t\t\tif (printSource) {\n+\t\t\t\tsb.append(\" [source name: \");\n+\t\t\t\tsb.append(sof.getSourceName());\n+\t\t\t\tsb.append(\"] [encoded source length: \");\n+\t\t\t\tsb.append(sof.getEncodedSourceEnd()\n+\t\t\t\t\t\t- sof.getEncodedSourceStart());\n+\t\t\t\tsb.append(\"] [base line: \");\n+\t\t\t\tsb.append(sof.getBaseLineno());\n+\t\t\t\tsb.append(\"] [end line: \");\n+\t\t\t\tsb.append(sof.getEndLineno());\n+\t\t\t\tsb.append(']');\n+\t\t\t}\n+\t\t} else if (type == Token.NUMBER) {\n+\t\t\tsb.append(' ');\n+\t\t\tsb.append(getDouble());\n+\t\t}\n+\t\tsb.append(' ');\n         // In the case of JsDoc trees, the first child is often not a string\n         // which causes exceptions to be thrown when calling toString or\n         // toStringTree.\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 359, 
          "faulty": "return \"LP\";", 
          "type": "InsertBefore", 
          "seed": "if (!(0 <= token && token <= Token.LAST_TOKEN)) throw new IllegalArgumentException();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 101, 
          "faulty": "declaration.remove();", 
          "type": "InsertBefore", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Replace", 
          "seed": "return;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-01 09:25:47.602554953 -0500\n+++ /tmp/Arja_Defects4J_Closure_67/patches_k844/Patch_1184/patched/tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-01 09:46:27.131104241 -0500\n@@ -97,10 +97,7 @@\n             }\n           }\n \n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n+          return;\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n--- /tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-01 09:25:47.626555117 -0500\n+++ /tmp/Arja_Defects4J_Closure_67/patches_k844/Patch_1184/patched/tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-01 09:46:27.135104268 -0500\n@@ -356,7 +356,11 @@\n           case RB:              return \"RB\";\n           case LC:              return \"LC\";\n           case RC:              return \"RC\";\n-          case LP:              return \"LP\";\n+          case LP:              {\n+\t\t\t\tif (!(0 <= token && token <= Token.LAST_TOKEN))\n+\t\t\t\t\tthrow new IllegalArgumentException();\n+\t\t\t\treturn \"LP\";\n+\t\t\t}\n           case RP:              return \"RP\";\n           case COMMA:           return \"COMMA\";\n           case ASSIGN:          return \"ASSIGN\";\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Replace", 
          "seed": "return;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 943, 
          "faulty": "if (first == null || first.getType() != Token.NAME) {\n  sb.append(\"<invalid>\");\n}\n else {\n  sb.append(first.getString());\n}", 
          "type": "Replace", 
          "seed": "if (printSource) {\n  int lineno=getLineno();\n  if (lineno != -1) {\n    sb.append(' ');\n    sb.append(lineno);\n  }\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-01 09:25:47.602554953 -0500\n+++ /tmp/Arja_Defects4J_Closure_67/patches_k844/Patch_1082/patched/tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-01 09:44:03.970115995 -0500\n@@ -97,10 +97,7 @@\n             }\n           }\n \n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n+          return;\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n--- /tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-01 09:25:47.626555117 -0500\n+++ /tmp/Arja_Defects4J_Closure_67/patches_k844/Patch_1082/patched/tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-01 09:44:03.974116022 -0500\n@@ -937,14 +937,13 @@\n         sb.append(getString());\n       } else if (type == Token.FUNCTION) {\n         sb.append(' ');\n-        // In the case of JsDoc trees, the first child is often not a string\n-        // which causes exceptions to be thrown when calling toString or\n-        // toStringTree.\n-        if (first == null || first.getType() != Token.NAME) {\n-          sb.append(\"<invalid>\");\n-        } else {\n-          sb.append(first.getString());\n-        }\n+        if (printSource) {\n+\t\t\tint lineno = getLineno();\n+\t\t\tif (lineno != -1) {\n+\t\t\t\tsb.append(' ');\n+\t\t\t\tsb.append(lineno);\n+\t\t\t}\n+\t\t}\n       } else if (this instanceof ScriptOrFnNode) {\n         ScriptOrFnNode sof = (ScriptOrFnNode) this;\n         if (this instanceof FunctionNode) {\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 88, 
          "faulty": "canRemove=true;", 
          "type": "Replace", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 946, 
          "faulty": "sb.append(first.getString());", 
          "type": "Delete", 
          "seed": "parent=null;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-01 09:25:47.602554953 -0500\n+++ /tmp/Arja_Defects4J_Closure_67/patches_k844/Patch_90/patched/tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-01 09:31:08.480763810 -0500\n@@ -85,7 +85,7 @@\n           boolean canRemove = false;\n \n           if (specializationState == null) {\n-            canRemove = true;\n+            break;\n           } else {\n             Node specializableFunction =\n               getSpecializableFunctionFromSymbol(declaration);\n\n\n--- /tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-01 09:25:47.626555117 -0500\n+++ /tmp/Arja_Defects4J_Closure_67/patches_k844/Patch_90/patched/tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-01 09:31:08.484763837 -0500\n@@ -943,7 +943,6 @@\n         if (first == null || first.getType() != Token.NAME) {\n           sb.append(\"<invalid>\");\n         } else {\n-          sb.append(first.getString());\n         }\n       } else if (this instanceof ScriptOrFnNode) {\n         ScriptOrFnNode sof = (ScriptOrFnNode) this;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 310, 
          "faulty": "return \"GETELEM\";", 
          "type": "Delete", 
          "seed": "case 2:"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 101, 
          "faulty": "declaration.remove();", 
          "type": "InsertBefore", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Replace", 
          "seed": "return;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-01 09:25:47.602554953 -0500\n+++ /tmp/Arja_Defects4J_Closure_67/patches_k844/Patch_717/patched/tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-01 09:39:12.160101516 -0500\n@@ -97,10 +97,7 @@\n             }\n           }\n \n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n+          return;\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n--- /tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-01 09:25:47.626555117 -0500\n+++ /tmp/Arja_Defects4J_Closure_67/patches_k844/Patch_717/patched/tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-01 09:39:12.164101544 -0500\n@@ -307,7 +307,7 @@\n           case TYPEOF:          return \"TYPEOF\";\n           case GETPROP:         return \"GETPROP\";\n           case SETPROP:         return \"SETPROP\";\n-          case GETELEM:         return \"GETELEM\";\n+          case GETELEM:         ;\n           case SETELEM:         return \"SETELEM\";\n           case CALL:            return \"CALL\";\n           case NAME:            return \"NAME\";\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-01 09:25:47.602554953 -0500\n+++ /tmp/Arja_Defects4J_Closure_67/patches_k844/Patch_349/patched/tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-01 09:33:14.941635298 -0500\n@@ -96,11 +96,6 @@\n               canRemove = true;\n             }\n           }\n-\n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Replace", 
          "seed": "return;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 939, 
          "faulty": "sb.append(' ');", 
          "type": "Delete", 
          "seed": "if (printSource) {\n  int lineno=getLineno();\n  if (lineno != -1) {\n    sb.append(' ');\n    sb.append(lineno);\n  }\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-01 09:25:47.602554953 -0500\n+++ /tmp/Arja_Defects4J_Closure_67/patches_k844/Patch_228/patched/tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-01 09:32:14.841220648 -0500\n@@ -97,10 +97,7 @@\n             }\n           }\n \n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n+          return;\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n--- /tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-01 09:25:47.626555117 -0500\n+++ /tmp/Arja_Defects4J_Closure_67/patches_k844/Patch_228/patched/tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-01 09:32:14.845220675 -0500\n@@ -936,7 +936,6 @@\n         sb.append(' ');\n         sb.append(getString());\n       } else if (type == Token.FUNCTION) {\n-        sb.append(' ');\n         // In the case of JsDoc trees, the first child is often not a string\n         // which causes exceptions to be thrown when calling toString or\n         // toStringTree.\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 310, 
          "faulty": "return \"GETELEM\";", 
          "type": "Replace", 
          "seed": "if (!(0 <= token && token <= Token.LAST_TOKEN)) throw new IllegalArgumentException();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Replace", 
          "seed": "return;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-01 09:25:47.602554953 -0500\n+++ /tmp/Arja_Defects4J_Closure_67/patches_k844/Patch_269/patched/tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-01 09:32:34.437355644 -0500\n@@ -97,10 +97,7 @@\n             }\n           }\n \n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n+          return;\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n--- /tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-01 09:25:47.626555117 -0500\n+++ /tmp/Arja_Defects4J_Closure_67/patches_k844/Patch_269/patched/tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-01 09:32:34.441355671 -0500\n@@ -307,7 +307,8 @@\n           case TYPEOF:          return \"TYPEOF\";\n           case GETPROP:         return \"GETPROP\";\n           case SETPROP:         return \"SETPROP\";\n-          case GETELEM:         return \"GETELEM\";\n+          case GETELEM:         if (!(0 <= token && token <= Token.LAST_TOKEN))\n+\t\t\t\tthrow new IllegalArgumentException();\n           case SETELEM:         return \"SETELEM\";\n           case CALL:            return \"CALL\";\n           case NAME:            return \"NAME\";\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java", 
          "line": 535, 
          "faulty": "NodeUtil.removeChild(exprNode.getParent(),exprNode);", 
          "type": "Replace", 
          "seed": "return;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 310, 
          "faulty": "return \"GETELEM\";", 
          "type": "Replace", 
          "seed": "if (!(0 <= token && token <= Token.LAST_TOKEN)) throw new IllegalArgumentException();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Replace", 
          "seed": "return;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java\t2018-12-01 09:25:49.286566544 -0500\n+++ /tmp/Arja_Defects4J_Closure_67/patches_k844/Patch_289/patched/tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java\t2018-12-01 09:32:44.585425709 -0500\n@@ -532,7 +532,7 @@\n \n     @Override\n     public void remove() {\n-      NodeUtil.removeChild(exprNode.getParent(), exprNode);\n+      return;\n     }\n \n     @Override\n\n\n--- /tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-01 09:25:47.602554953 -0500\n+++ /tmp/Arja_Defects4J_Closure_67/patches_k844/Patch_289/patched/tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-01 09:32:44.585425709 -0500\n@@ -97,10 +97,7 @@\n             }\n           }\n \n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n+          return;\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n--- /tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-01 09:25:47.626555117 -0500\n+++ /tmp/Arja_Defects4J_Closure_67/patches_k844/Patch_289/patched/tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-01 09:32:44.589425737 -0500\n@@ -307,7 +307,8 @@\n           case TYPEOF:          return \"TYPEOF\";\n           case GETPROP:         return \"GETPROP\";\n           case SETPROP:         return \"SETPROP\";\n-          case GETELEM:         return \"GETELEM\";\n+          case GETELEM:         if (!(0 <= token && token <= Token.LAST_TOKEN))\n+\t\t\t\tthrow new IllegalArgumentException();\n           case SETELEM:         return \"SETELEM\";\n           case CALL:            return \"CALL\";\n           case NAME:            return \"NAME\";\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1427, 
          "faulty": "return res;", 
          "type": "Replace", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Replace", 
          "seed": "return;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 943, 
          "faulty": "if (first == null || first.getType() != Token.NAME) {\n  sb.append(\"<invalid>\");\n}\n else {\n  sb.append(first.getString());\n}", 
          "type": "Delete", 
          "seed": "sb.append(Token.name(type));"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-01 09:25:47.602554953 -0500\n+++ /tmp/Arja_Defects4J_Closure_67/patches_k844/Patch_578/patched/tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-01 09:36:36.875029464 -0500\n@@ -97,10 +97,7 @@\n             }\n           }\n \n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n+          return;\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n--- /tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-01 09:25:47.626555117 -0500\n+++ /tmp/Arja_Defects4J_Closure_67/patches_k844/Patch_578/patched/tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-01 09:36:37.343032694 -0500\n@@ -937,14 +937,6 @@\n         sb.append(getString());\n       } else if (type == Token.FUNCTION) {\n         sb.append(' ');\n-        // In the case of JsDoc trees, the first child is often not a string\n-        // which causes exceptions to be thrown when calling toString or\n-        // toStringTree.\n-        if (first == null || first.getType() != Token.NAME) {\n-          sb.append(\"<invalid>\");\n-        } else {\n-          sb.append(first.getString());\n-        }\n       } else if (this instanceof ScriptOrFnNode) {\n         ScriptOrFnNode sof = (ScriptOrFnNode) this;\n         if (this instanceof FunctionNode) {\n@@ -1424,7 +1416,7 @@\n       }\n       res = n.checkTreeEqualsImpl(n2);\n       if (res != null) {\n-        return res;\n+        break;\n       }\n     }\n     return res;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Replace", 
          "seed": "return;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 102, 
          "faulty": "changed=true;", 
          "type": "Replace", 
          "seed": "break;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-01 09:25:47.602554953 -0500\n+++ /tmp/Arja_Defects4J_Closure_67/patches_k844/Patch_779/patched/tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-01 09:39:48.792354410 -0500\n@@ -97,10 +97,7 @@\n             }\n           }\n \n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n+          return;\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 310, 
          "faulty": "return \"GETELEM\";", 
          "type": "Delete", 
          "seed": "case 2:"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 87, 
          "faulty": "if (specializationState == null) {\n  canRemove=true;\n}\n else {\n  Node specializableFunction=getSpecializableFunctionFromSymbol(declaration);\n  if (specializableFunction != null) {\n    specializationState.reportRemovedFunction(specializableFunction,null);\n    canRemove=true;\n  }\n}", 
          "type": "Delete", 
          "seed": "break;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-01 09:25:47.602554953 -0500\n+++ /tmp/Arja_Defects4J_Closure_67/patches_k844/Patch_359/patched/tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-01 09:33:19.789668770 -0500\n@@ -84,19 +84,6 @@\n         for (Symbol declaration : nameInfo.getDeclarations()) {\n           boolean canRemove = false;\n \n-          if (specializationState == null) {\n-            canRemove = true;\n-          } else {\n-            Node specializableFunction =\n-              getSpecializableFunctionFromSymbol(declaration);\n-\n-            if (specializableFunction != null) {\n-              specializationState.reportRemovedFunction(\n-                  specializableFunction, null);\n-              canRemove = true;\n-            }\n-          }\n-\n           if (canRemove) {\n             declaration.remove();\n             changed = true;\n\n\n--- /tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-01 09:25:47.626555117 -0500\n+++ /tmp/Arja_Defects4J_Closure_67/patches_k844/Patch_359/patched/tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-01 09:33:19.789668770 -0500\n@@ -307,7 +307,7 @@\n           case TYPEOF:          return \"TYPEOF\";\n           case GETPROP:         return \"GETPROP\";\n           case SETPROP:         return \"SETPROP\";\n-          case GETELEM:         return \"GETELEM\";\n+          case GETELEM:         ;\n           case SETELEM:         return \"SETELEM\";\n           case CALL:            return \"CALL\";\n           case NAME:            return \"NAME\";\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 359, 
          "faulty": "return \"LP\";", 
          "type": "InsertBefore", 
          "seed": "if (!(0 <= token && token <= Token.LAST_TOKEN)) throw new IllegalArgumentException();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Replace", 
          "seed": "break;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-01 09:25:47.602554953 -0500\n+++ /tmp/Arja_Defects4J_Closure_67/patches_k844/Patch_524/patched/tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-01 09:35:58.562764958 -0500\n@@ -97,10 +97,7 @@\n             }\n           }\n \n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n+          break;\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n--- /tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-01 09:25:47.626555117 -0500\n+++ /tmp/Arja_Defects4J_Closure_67/patches_k844/Patch_524/patched/tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-01 09:35:58.566764986 -0500\n@@ -356,7 +356,11 @@\n           case RB:              return \"RB\";\n           case LC:              return \"LC\";\n           case RC:              return \"RC\";\n-          case LP:              return \"LP\";\n+          case LP:              {\n+\t\t\t\tif (!(0 <= token && token <= Token.LAST_TOKEN))\n+\t\t\t\t\tthrow new IllegalArgumentException();\n+\t\t\t\treturn \"LP\";\n+\t\t\t}\n           case RP:              return \"RP\";\n           case COMMA:           return \"COMMA\";\n           case ASSIGN:          return \"ASSIGN\";\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Replace", 
          "seed": "return;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 939, 
          "faulty": "sb.append(' ');", 
          "type": "Delete", 
          "seed": "sb.append(Token.name(type));"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 943, 
          "faulty": "if (first == null || first.getType() != Token.NAME) {\n  sb.append(\"<invalid>\");\n}\n else {\n  sb.append(first.getString());\n}", 
          "type": "Replace", 
          "seed": "sb.append(Token.name(type));"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-01 09:25:47.602554953 -0500\n+++ /tmp/Arja_Defects4J_Closure_67/patches_k844/Patch_373/patched/tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-01 09:33:27.193719889 -0500\n@@ -97,10 +97,7 @@\n             }\n           }\n \n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n+          return;\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n--- /tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-01 09:25:47.626555117 -0500\n+++ /tmp/Arja_Defects4J_Closure_67/patches_k844/Patch_373/patched/tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-01 09:33:27.193719889 -0500\n@@ -936,15 +936,7 @@\n         sb.append(' ');\n         sb.append(getString());\n       } else if (type == Token.FUNCTION) {\n-        sb.append(' ');\n-        // In the case of JsDoc trees, the first child is often not a string\n-        // which causes exceptions to be thrown when calling toString or\n-        // toStringTree.\n-        if (first == null || first.getType() != Token.NAME) {\n-          sb.append(\"<invalid>\");\n-        } else {\n-          sb.append(first.getString());\n-        }\n+        sb.append(Token.name(type));\n       } else if (this instanceof ScriptOrFnNode) {\n         ScriptOrFnNode sof = (ScriptOrFnNode) this;\n         if (this instanceof FunctionNode) {\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 87, 
          "faulty": "if (specializationState == null) {\n  canRemove=true;\n}\n else {\n  Node specializableFunction=getSpecializableFunctionFromSymbol(declaration);\n  if (specializableFunction != null) {\n    specializationState.reportRemovedFunction(specializableFunction,null);\n    canRemove=true;\n  }\n}", 
          "type": "Delete", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 111, 
          "faulty": "compiler.reportCodeChange();", 
          "type": "Delete", 
          "seed": "return;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-01 09:25:47.602554953 -0500\n+++ /tmp/Arja_Defects4J_Closure_67/patches_k844/Patch_301/patched/tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-01 09:32:49.621460479 -0500\n@@ -84,19 +84,6 @@\n         for (Symbol declaration : nameInfo.getDeclarations()) {\n           boolean canRemove = false;\n \n-          if (specializationState == null) {\n-            canRemove = true;\n-          } else {\n-            Node specializableFunction =\n-              getSpecializableFunctionFromSymbol(declaration);\n-\n-            if (specializableFunction != null) {\n-              specializationState.reportRemovedFunction(\n-                  specializableFunction, null);\n-              canRemove = true;\n-            }\n-          }\n-\n           if (canRemove) {\n             declaration.remove();\n             changed = true;\n@@ -108,7 +95,6 @@\n     }\n \n     if (changed) {\n-      compiler.reportCodeChange();\n     }\n   }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 88, 
          "faulty": "canRemove=true;", 
          "type": "Replace", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-01 09:25:47.602554953 -0500\n+++ /tmp/Arja_Defects4J_Closure_67/patches_k844/Patch_601/patched/tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-01 09:37:09.319253454 -0500\n@@ -85,7 +85,7 @@\n           boolean canRemove = false;\n \n           if (specializationState == null) {\n-            canRemove = true;\n+            break;\n           } else {\n             Node specializableFunction =\n               getSpecializableFunctionFromSymbol(declaration);\n@@ -96,11 +96,6 @@\n               canRemove = true;\n             }\n           }\n-\n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 318, 
          "faulty": "return \"THIS\";", 
          "type": "Delete", 
          "seed": "return \"script\";"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Replace", 
          "seed": "break;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-01 09:25:47.602554953 -0500\n+++ /tmp/Arja_Defects4J_Closure_67/patches_k844/Patch_802/patched/tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-01 09:40:00.672436425 -0500\n@@ -97,10 +97,7 @@\n             }\n           }\n \n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n+          break;\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n--- /tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-01 09:25:47.626555117 -0500\n+++ /tmp/Arja_Defects4J_Closure_67/patches_k844/Patch_802/patched/tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-01 09:40:00.672436425 -0500\n@@ -315,7 +315,7 @@\n           case NUMBER:          return \"NUMBER\";\n           case STRING:          return \"STRING\";\n           case NULL:            return \"NULL\";\n-          case THIS:            return \"THIS\";\n+          case THIS:            ;\n           case FALSE:           return \"FALSE\";\n           case TRUE:            return \"TRUE\";\n           case SHEQ:            return \"SHEQ\";\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java", 
          "line": 535, 
          "faulty": "NodeUtil.removeChild(exprNode.getParent(),exprNode);", 
          "type": "Delete", 
          "seed": "return;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Replace", 
          "seed": "return;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 939, 
          "faulty": "sb.append(' ');", 
          "type": "InsertBefore", 
          "seed": "sb.append(Token.name(type));"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java\t2018-12-01 09:25:49.286566544 -0500\n+++ /tmp/Arja_Defects4J_Closure_67/patches_k844/Patch_1119/patched/tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java\t2018-12-01 09:44:24.230255853 -0500\n@@ -532,7 +532,6 @@\n \n     @Override\n     public void remove() {\n-      NodeUtil.removeChild(exprNode.getParent(), exprNode);\n     }\n \n     @Override\n\n\n--- /tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-01 09:25:47.602554953 -0500\n+++ /tmp/Arja_Defects4J_Closure_67/patches_k844/Patch_1119/patched/tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-01 09:44:24.230255853 -0500\n@@ -97,10 +97,7 @@\n             }\n           }\n \n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n+          return;\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n--- /tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-01 09:25:47.626555117 -0500\n+++ /tmp/Arja_Defects4J_Closure_67/patches_k844/Patch_1119/patched/tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-01 09:44:24.230255853 -0500\n@@ -936,7 +936,8 @@\n         sb.append(' ');\n         sb.append(getString());\n       } else if (type == Token.FUNCTION) {\n-        sb.append(' ');\n+        sb.append(Token.name(type));\n+\t\tsb.append(' ');\n         // In the case of JsDoc trees, the first child is often not a string\n         // which causes exceptions to be thrown when calling toString or\n         // toStringTree.\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 318, 
          "faulty": "return \"THIS\";", 
          "type": "Delete", 
          "seed": "break L;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 101, 
          "faulty": "declaration.remove();", 
          "type": "InsertBefore", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Replace", 
          "seed": "return;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-01 09:25:47.602554953 -0500\n+++ /tmp/Arja_Defects4J_Closure_67/patches_k844/Patch_605/patched/tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-01 09:37:11.139266020 -0500\n@@ -97,10 +97,7 @@\n             }\n           }\n \n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n+          return;\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n--- /tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-01 09:25:47.626555117 -0500\n+++ /tmp/Arja_Defects4J_Closure_67/patches_k844/Patch_605/patched/tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-01 09:37:11.139266020 -0500\n@@ -315,7 +315,7 @@\n           case NUMBER:          return \"NUMBER\";\n           case STRING:          return \"STRING\";\n           case NULL:            return \"NULL\";\n-          case THIS:            return \"THIS\";\n+          case THIS:            ;\n           case FALSE:           return \"FALSE\";\n           case TRUE:            return \"TRUE\";\n           case SHEQ:            return \"SHEQ\";\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 88, 
          "faulty": "canRemove=true;", 
          "type": "Delete", 
          "seed": "return;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 102, 
          "faulty": "changed=true;", 
          "type": "Replace", 
          "seed": "break;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-01 09:25:47.602554953 -0500\n+++ /tmp/Arja_Defects4J_Closure_67/patches_k844/Patch_20/patched/tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-01 09:30:27.728483267 -0500\n@@ -85,7 +85,6 @@\n           boolean canRemove = false;\n \n           if (specializationState == null) {\n-            canRemove = true;\n           } else {\n             Node specializableFunction =\n               getSpecializableFunctionFromSymbol(declaration);\n@@ -99,7 +98,7 @@\n \n           if (canRemove) {\n             declaration.remove();\n-            changed = true;\n+            break;\n           }\n         }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java", 
          "line": 535, 
          "faulty": "NodeUtil.removeChild(exprNode.getParent(),exprNode);", 
          "type": "Delete", 
          "seed": "return;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 87, 
          "faulty": "if (specializationState == null) {\n  canRemove=true;\n}\n else {\n  Node specializableFunction=getSpecializableFunctionFromSymbol(declaration);\n  if (specializableFunction != null) {\n    specializationState.reportRemovedFunction(specializableFunction,null);\n    canRemove=true;\n  }\n}", 
          "type": "Delete", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 221, 
          "faulty": "return \"synthetic\";", 
          "type": "Delete", 
          "seed": "return \"ENTERWITH\";"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java\t2018-12-01 09:25:49.286566544 -0500\n+++ /tmp/Arja_Defects4J_Closure_67/patches_k844/Patch_783/patched/tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java\t2018-12-01 09:39:50.804368301 -0500\n@@ -532,7 +532,6 @@\n \n     @Override\n     public void remove() {\n-      NodeUtil.removeChild(exprNode.getParent(), exprNode);\n     }\n \n     @Override\n\n\n--- /tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-01 09:25:47.602554953 -0500\n+++ /tmp/Arja_Defects4J_Closure_67/patches_k844/Patch_783/patched/tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-01 09:39:50.804368301 -0500\n@@ -84,19 +84,6 @@\n         for (Symbol declaration : nameInfo.getDeclarations()) {\n           boolean canRemove = false;\n \n-          if (specializationState == null) {\n-            canRemove = true;\n-          } else {\n-            Node specializableFunction =\n-              getSpecializableFunctionFromSymbol(declaration);\n-\n-            if (specializableFunction != null) {\n-              specializationState.reportRemovedFunction(\n-                  specializableFunction, null);\n-              canRemove = true;\n-            }\n-          }\n-\n           if (canRemove) {\n             declaration.remove();\n             changed = true;\n\n\n--- /tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-01 09:25:47.626555117 -0500\n+++ /tmp/Arja_Defects4J_Closure_67/patches_k844/Patch_783/patched/tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-01 09:39:50.804368301 -0500\n@@ -218,7 +218,7 @@\n         case QUOTED_PROP:        return \"quoted\";\n         case OPT_ARG_NAME:       return \"opt_arg\";\n \n-        case SYNTHETIC_BLOCK_PROP: return \"synthetic\";\n+        case SYNTHETIC_BLOCK_PROP: ;\n         case EMPTY_BLOCK:        return \"empty_block\";\n         case ORIGINALNAME_PROP:  return \"originalname\";\n         case SIDE_EFFECT_FLAGS:  return \"side_effect_flags\";\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 359, 
          "faulty": "return \"LP\";", 
          "type": "Delete", 
          "seed": "if (!(0 <= token && token <= Token.LAST_TOKEN)) throw new IllegalArgumentException();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Replace", 
          "seed": "return;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 939, 
          "faulty": "sb.append(' ');", 
          "type": "Delete", 
          "seed": "sb.append(Token.name(type));"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-01 09:25:47.602554953 -0500\n+++ /tmp/Arja_Defects4J_Closure_67/patches_k844/Patch_744/patched/tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-01 09:39:28.792216337 -0500\n@@ -97,10 +97,7 @@\n             }\n           }\n \n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n+          return;\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n--- /tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-01 09:25:47.626555117 -0500\n+++ /tmp/Arja_Defects4J_Closure_67/patches_k844/Patch_744/patched/tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-01 09:39:28.792216337 -0500\n@@ -356,7 +356,7 @@\n           case RB:              return \"RB\";\n           case LC:              return \"LC\";\n           case RC:              return \"RC\";\n-          case LP:              return \"LP\";\n+          case LP:              ;\n           case RP:              return \"RP\";\n           case COMMA:           return \"COMMA\";\n           case ASSIGN:          return \"ASSIGN\";\n\n\n--- /tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-01 09:25:47.626555117 -0500\n+++ /tmp/Arja_Defects4J_Closure_67/patches_k844/Patch_744/patched/tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-01 09:39:28.796216365 -0500\n@@ -936,7 +936,6 @@\n         sb.append(' ');\n         sb.append(getString());\n       } else if (type == Token.FUNCTION) {\n-        sb.append(' ');\n         // In the case of JsDoc trees, the first child is often not a string\n         // which causes exceptions to be thrown when calling toString or\n         // toStringTree.\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Replace", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 102, 
          "faulty": "changed=true;", 
          "type": "Delete", 
          "seed": "break;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-01 09:25:47.602554953 -0500\n+++ /tmp/Arja_Defects4J_Closure_67/patches_k844/Patch_1015/patched/tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-01 09:43:13.805769700 -0500\n@@ -97,10 +97,7 @@\n             }\n           }\n \n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n+          break;\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 88, 
          "faulty": "canRemove=true;", 
          "type": "Replace", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 939, 
          "faulty": "sb.append(' ');", 
          "type": "Delete", 
          "seed": "toString(sb,printSource,printAnnotations,printType);"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-01 09:25:47.602554953 -0500\n+++ /tmp/Arja_Defects4J_Closure_67/patches_k844/Patch_272/patched/tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-01 09:32:35.725364536 -0500\n@@ -85,7 +85,7 @@\n           boolean canRemove = false;\n \n           if (specializationState == null) {\n-            canRemove = true;\n+            break;\n           } else {\n             Node specializableFunction =\n               getSpecializableFunctionFromSymbol(declaration);\n\n\n--- /tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-01 09:25:47.626555117 -0500\n+++ /tmp/Arja_Defects4J_Closure_67/patches_k844/Patch_272/patched/tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-01 09:32:35.729364564 -0500\n@@ -936,7 +936,6 @@\n         sb.append(' ');\n         sb.append(getString());\n       } else if (type == Token.FUNCTION) {\n-        sb.append(' ');\n         // In the case of JsDoc trees, the first child is often not a string\n         // which causes exceptions to be thrown when calling toString or\n         // toStringTree.\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 88, 
          "faulty": "canRemove=true;", 
          "type": "Delete", 
          "seed": "return;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 359, 
          "faulty": "return \"LP\";", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Replace", 
          "seed": "break;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-01 09:25:47.602554953 -0500\n+++ /tmp/Arja_Defects4J_Closure_67/patches_k844/Patch_642/patched/tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-01 09:38:03.271625931 -0500\n@@ -85,7 +85,6 @@\n           boolean canRemove = false;\n \n           if (specializationState == null) {\n-            canRemove = true;\n           } else {\n             Node specializableFunction =\n               getSpecializableFunctionFromSymbol(declaration);\n@@ -97,10 +96,7 @@\n             }\n           }\n \n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n+          break;\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n--- /tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-01 09:25:47.626555117 -0500\n+++ /tmp/Arja_Defects4J_Closure_67/patches_k844/Patch_642/patched/tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-01 09:38:03.271625931 -0500\n@@ -356,7 +356,7 @@\n           case RB:              return \"RB\";\n           case LC:              return \"LC\";\n           case RC:              return \"RC\";\n-          case LP:              return \"LP\";\n+          case LP:              ;\n           case RP:              return \"RP\";\n           case COMMA:           return \"COMMA\";\n           case ASSIGN:          return \"ASSIGN\";\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Replace", 
          "seed": "return;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 943, 
          "faulty": "if (first == null || first.getType() != Token.NAME) {\n  sb.append(\"<invalid>\");\n}\n else {\n  sb.append(first.getString());\n}", 
          "type": "Delete", 
          "seed": "sb.append(Token.name(type));"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 946, 
          "faulty": "sb.append(first.getString());", 
          "type": "InsertBefore", 
          "seed": "toString(sb,printSource,printAnnotations,printType);"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-01 09:25:47.602554953 -0500\n+++ /tmp/Arja_Defects4J_Closure_67/patches_k844/Patch_448/patched/tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-01 09:34:48.078278331 -0500\n@@ -97,10 +97,7 @@\n             }\n           }\n \n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n+          return;\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n--- /tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-01 09:25:47.626555117 -0500\n+++ /tmp/Arja_Defects4J_Closure_67/patches_k844/Patch_448/patched/tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-01 09:34:48.082278359 -0500\n@@ -937,14 +937,6 @@\n         sb.append(getString());\n       } else if (type == Token.FUNCTION) {\n         sb.append(' ');\n-        // In the case of JsDoc trees, the first child is often not a string\n-        // which causes exceptions to be thrown when calling toString or\n-        // toStringTree.\n-        if (first == null || first.getType() != Token.NAME) {\n-          sb.append(\"<invalid>\");\n-        } else {\n-          sb.append(first.getString());\n-        }\n       } else if (this instanceof ScriptOrFnNode) {\n         ScriptOrFnNode sof = (ScriptOrFnNode) this;\n         if (this instanceof FunctionNode) {\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 318, 
          "faulty": "return \"THIS\";", 
          "type": "Delete", 
          "seed": "break L;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-01 09:25:47.602554953 -0500\n+++ /tmp/Arja_Defects4J_Closure_67/patches_k844/Patch_651/patched/tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-01 09:38:17.359723191 -0500\n@@ -96,11 +96,6 @@\n               canRemove = true;\n             }\n           }\n-\n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n--- /tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-01 09:25:47.626555117 -0500\n+++ /tmp/Arja_Defects4J_Closure_67/patches_k844/Patch_651/patched/tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-01 09:38:17.579724711 -0500\n@@ -315,7 +315,7 @@\n           case NUMBER:          return \"NUMBER\";\n           case STRING:          return \"STRING\";\n           case NULL:            return \"NULL\";\n-          case THIS:            return \"THIS\";\n+          case THIS:            ;\n           case FALSE:           return \"FALSE\";\n           case TRUE:            return \"TRUE\";\n           case SHEQ:            return \"SHEQ\";\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 87, 
          "faulty": "if (specializationState == null) {\n  canRemove=true;\n}\n else {\n  Node specializableFunction=getSpecializableFunctionFromSymbol(declaration);\n  if (specializableFunction != null) {\n    specializationState.reportRemovedFunction(specializableFunction,null);\n    canRemove=true;\n  }\n}", 
          "type": "Delete", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 221, 
          "faulty": "return \"synthetic\";", 
          "type": "Delete", 
          "seed": "break L;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 943, 
          "faulty": "if (first == null || first.getType() != Token.NAME) {\n  sb.append(\"<invalid>\");\n}\n else {\n  sb.append(first.getString());\n}", 
          "type": "Delete", 
          "seed": "sb.append(Token.name(type));"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-01 09:25:47.602554953 -0500\n+++ /tmp/Arja_Defects4J_Closure_67/patches_k844/Patch_551/patched/tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-01 09:36:17.398895003 -0500\n@@ -84,19 +84,6 @@\n         for (Symbol declaration : nameInfo.getDeclarations()) {\n           boolean canRemove = false;\n \n-          if (specializationState == null) {\n-            canRemove = true;\n-          } else {\n-            Node specializableFunction =\n-              getSpecializableFunctionFromSymbol(declaration);\n-\n-            if (specializableFunction != null) {\n-              specializationState.reportRemovedFunction(\n-                  specializableFunction, null);\n-              canRemove = true;\n-            }\n-          }\n-\n           if (canRemove) {\n             declaration.remove();\n             changed = true;\n\n\n--- /tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-01 09:25:47.626555117 -0500\n+++ /tmp/Arja_Defects4J_Closure_67/patches_k844/Patch_551/patched/tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-01 09:36:17.398895003 -0500\n@@ -218,7 +218,7 @@\n         case QUOTED_PROP:        return \"quoted\";\n         case OPT_ARG_NAME:       return \"opt_arg\";\n \n-        case SYNTHETIC_BLOCK_PROP: return \"synthetic\";\n+        case SYNTHETIC_BLOCK_PROP: ;\n         case EMPTY_BLOCK:        return \"empty_block\";\n         case ORIGINALNAME_PROP:  return \"originalname\";\n         case SIDE_EFFECT_FLAGS:  return \"side_effect_flags\";\n@@ -937,14 +937,6 @@\n         sb.append(getString());\n       } else if (type == Token.FUNCTION) {\n         sb.append(' ');\n-        // In the case of JsDoc trees, the first child is often not a string\n-        // which causes exceptions to be thrown when calling toString or\n-        // toStringTree.\n-        if (first == null || first.getType() != Token.NAME) {\n-          sb.append(\"<invalid>\");\n-        } else {\n-          sb.append(first.getString());\n-        }\n       } else if (this instanceof ScriptOrFnNode) {\n         ScriptOrFnNode sof = (ScriptOrFnNode) this;\n         if (this instanceof FunctionNode) {\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 87, 
          "faulty": "if (specializationState == null) {\n  canRemove=true;\n}\n else {\n  Node specializableFunction=getSpecializableFunctionFromSymbol(declaration);\n  if (specializableFunction != null) {\n    specializationState.reportRemovedFunction(specializableFunction,null);\n    canRemove=true;\n  }\n}", 
          "type": "Delete", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 106, 
          "faulty": "logger.fine(\"Removed unused prototype property: \" + nameInfo.name);", 
          "type": "Replace", 
          "seed": "return;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-01 09:25:47.602554953 -0500\n+++ /tmp/Arja_Defects4J_Closure_67/patches_k844/Patch_29/patched/tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-01 09:30:32.464515870 -0500\n@@ -84,26 +84,13 @@\n         for (Symbol declaration : nameInfo.getDeclarations()) {\n           boolean canRemove = false;\n \n-          if (specializationState == null) {\n-            canRemove = true;\n-          } else {\n-            Node specializableFunction =\n-              getSpecializableFunctionFromSymbol(declaration);\n-\n-            if (specializableFunction != null) {\n-              specializationState.reportRemovedFunction(\n-                  specializableFunction, null);\n-              canRemove = true;\n-            }\n-          }\n-\n           if (canRemove) {\n             declaration.remove();\n             changed = true;\n           }\n         }\n \n-        logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n+        return;\n       }\n     }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 310, 
          "faulty": "return \"GETELEM\";", 
          "type": "Replace", 
          "seed": "if (!(0 <= token && token <= Token.LAST_TOKEN)) throw new IllegalArgumentException();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Replace", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1385, 
          "faulty": "return \"Node tree inequality:\" + \"\\nTree1:\\n\" + toStringTree() + \"\\n\\nTree2:\\n\"+ node2.toStringTree()+ \"\\n\\nSubtree1: \"+ diff.nodeA.toStringTree()+ \"\\n\\nSubtree2: \"+ diff.nodeB.toStringTree();", 
          "type": "Replace", 
          "seed": "return \"BITOR\";"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-01 09:25:47.602554953 -0500\n+++ /tmp/Arja_Defects4J_Closure_67/patches_k844/Patch_198/patched/tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-01 09:32:00.953125039 -0500\n@@ -97,10 +97,7 @@\n             }\n           }\n \n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n+          break;\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n--- /tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-01 09:25:47.626555117 -0500\n+++ /tmp/Arja_Defects4J_Closure_67/patches_k844/Patch_198/patched/tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-01 09:32:00.953125039 -0500\n@@ -307,7 +307,8 @@\n           case TYPEOF:          return \"TYPEOF\";\n           case GETPROP:         return \"GETPROP\";\n           case SETPROP:         return \"SETPROP\";\n-          case GETELEM:         return \"GETELEM\";\n+          case GETELEM:         if (!(0 <= token && token <= Token.LAST_TOKEN))\n+\t\t\t\tthrow new IllegalArgumentException();\n           case SETELEM:         return \"SETELEM\";\n           case CALL:            return \"CALL\";\n           case NAME:            return \"NAME\";\n\n\n--- /tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-01 09:25:47.626555117 -0500\n+++ /tmp/Arja_Defects4J_Closure_67/patches_k844/Patch_198/patched/tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-01 09:32:00.957125067 -0500\n@@ -1382,11 +1382,7 @@\n   public String checkTreeEquals(Node node2) {\n       NodeMismatch diff = checkTreeEqualsImpl(node2);\n       if (diff != null) {\n-        return \"Node tree inequality:\" +\n-            \"\\nTree1:\\n\" + toStringTree() +\n-            \"\\n\\nTree2:\\n\" + node2.toStringTree() +\n-            \"\\n\\nSubtree1: \" + diff.nodeA.toStringTree() +\n-            \"\\n\\nSubtree2: \" + diff.nodeB.toStringTree();\n+        return \"BITOR\";\n       }\n       return null;\n   }\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Replace", 
          "seed": "return;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 221, 
          "faulty": "case SYNTHETIC_BLOCK_PROP:", 
          "type": "Replace", 
          "seed": "case Token.SCRIPT:"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 102, 
          "faulty": "changed=true;", 
          "type": "Replace", 
          "seed": "return;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 946, 
          "faulty": "sb.append(first.getString());", 
          "type": "Replace", 
          "seed": "toString(sb,printSource,printAnnotations,printType);"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-01 09:25:47.602554953 -0500\n+++ /tmp/Arja_Defects4J_Closure_67/patches_k844/Patch_1107/patched/tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-01 09:44:18.030213053 -0500\n@@ -97,10 +97,7 @@\n             }\n           }\n \n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n+          return;\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n--- /tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-01 09:25:47.626555117 -0500\n+++ /tmp/Arja_Defects4J_Closure_67/patches_k844/Patch_1107/patched/tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-01 09:44:18.034213081 -0500\n@@ -218,7 +218,7 @@\n         case QUOTED_PROP:        return \"quoted\";\n         case OPT_ARG_NAME:       return \"opt_arg\";\n \n-        case SYNTHETIC_BLOCK_PROP: return \"synthetic\";\n+\tcase Token.SCRIPT: return \"synthetic\";\n         case EMPTY_BLOCK:        return \"empty_block\";\n         case ORIGINALNAME_PROP:  return \"originalname\";\n         case SIDE_EFFECT_FLAGS:  return \"side_effect_flags\";\n@@ -943,7 +943,7 @@\n         if (first == null || first.getType() != Token.NAME) {\n           sb.append(\"<invalid>\");\n         } else {\n-          sb.append(first.getString());\n+          toString(sb, printSource, printAnnotations, printType);\n         }\n       } else if (this instanceof ScriptOrFnNode) {\n         ScriptOrFnNode sof = (ScriptOrFnNode) this;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1427, 
          "faulty": "return res;", 
          "type": "Delete", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 318, 
          "faulty": "return \"THIS\";", 
          "type": "Delete", 
          "seed": "return \"ENTERWITH\";"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 87, 
          "faulty": "if (specializationState == null) {\n  canRemove=true;\n}\n else {\n  Node specializableFunction=getSpecializableFunctionFromSymbol(declaration);\n  if (specializableFunction != null) {\n    specializationState.reportRemovedFunction(specializableFunction,null);\n    canRemove=true;\n  }\n}", 
          "type": "Delete", 
          "seed": "break;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-01 09:25:47.602554953 -0500\n+++ /tmp/Arja_Defects4J_Closure_67/patches_k844/Patch_253/patched/tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-01 09:32:26.913303755 -0500\n@@ -84,19 +84,6 @@\n         for (Symbol declaration : nameInfo.getDeclarations()) {\n           boolean canRemove = false;\n \n-          if (specializationState == null) {\n-            canRemove = true;\n-          } else {\n-            Node specializableFunction =\n-              getSpecializableFunctionFromSymbol(declaration);\n-\n-            if (specializableFunction != null) {\n-              specializationState.reportRemovedFunction(\n-                  specializableFunction, null);\n-              canRemove = true;\n-            }\n-          }\n-\n           if (canRemove) {\n             declaration.remove();\n             changed = true;\n\n\n--- /tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-01 09:25:47.626555117 -0500\n+++ /tmp/Arja_Defects4J_Closure_67/patches_k844/Patch_253/patched/tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-01 09:32:26.913303755 -0500\n@@ -1424,7 +1424,6 @@\n       }\n       res = n.checkTreeEqualsImpl(n2);\n       if (res != null) {\n-        return res;\n       }\n     }\n     return res;\n\n\n--- /tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-01 09:25:47.626555117 -0500\n+++ /tmp/Arja_Defects4J_Closure_67/patches_k844/Patch_253/patched/tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-01 09:32:26.913303755 -0500\n@@ -315,7 +315,7 @@\n           case NUMBER:          return \"NUMBER\";\n           case STRING:          return \"STRING\";\n           case NULL:            return \"NULL\";\n-          case THIS:            return \"THIS\";\n+          case THIS:            ;\n           case FALSE:           return \"FALSE\";\n           case TRUE:            return \"TRUE\";\n           case SHEQ:            return \"SHEQ\";\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Replace", 
          "seed": "return;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 102, 
          "faulty": "changed=true;", 
          "type": "Replace", 
          "seed": "return;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 943, 
          "faulty": "if (first == null || first.getType() != Token.NAME) {\n  sb.append(\"<invalid>\");\n}\n else {\n  sb.append(first.getString());\n}", 
          "type": "Replace", 
          "seed": "sb.append(Token.name(type));"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-01 09:25:47.602554953 -0500\n+++ /tmp/Arja_Defects4J_Closure_67/patches_k844/Patch_612/patched/tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-01 09:37:16.055299959 -0500\n@@ -97,10 +97,7 @@\n             }\n           }\n \n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n+          return;\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n--- /tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-01 09:25:47.626555117 -0500\n+++ /tmp/Arja_Defects4J_Closure_67/patches_k844/Patch_612/patched/tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-01 09:37:16.707304460 -0500\n@@ -937,14 +937,7 @@\n         sb.append(getString());\n       } else if (type == Token.FUNCTION) {\n         sb.append(' ');\n-        // In the case of JsDoc trees, the first child is often not a string\n-        // which causes exceptions to be thrown when calling toString or\n-        // toStringTree.\n-        if (first == null || first.getType() != Token.NAME) {\n-          sb.append(\"<invalid>\");\n-        } else {\n-          sb.append(first.getString());\n-        }\n+        sb.append(Token.name(type));\n       } else if (this instanceof ScriptOrFnNode) {\n         ScriptOrFnNode sof = (ScriptOrFnNode) this;\n         if (this instanceof FunctionNode) {\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 310, 
          "faulty": "return \"GETELEM\";", 
          "type": "Delete", 
          "seed": "case 2:"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Replace", 
          "seed": "return;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-01 09:25:47.602554953 -0500\n+++ /tmp/Arja_Defects4J_Closure_67/patches_k844/Patch_388/patched/tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-01 09:34:01.781958694 -0500\n@@ -97,10 +97,7 @@\n             }\n           }\n \n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n+          return;\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n--- /tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-01 09:25:47.626555117 -0500\n+++ /tmp/Arja_Defects4J_Closure_67/patches_k844/Patch_388/patched/tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-01 09:34:01.781958694 -0500\n@@ -307,7 +307,7 @@\n           case TYPEOF:          return \"TYPEOF\";\n           case GETPROP:         return \"GETPROP\";\n           case SETPROP:         return \"SETPROP\";\n-          case GETELEM:         return \"GETELEM\";\n+          case GETELEM:         ;\n           case SETELEM:         return \"SETELEM\";\n           case CALL:            return \"CALL\";\n           case NAME:            return \"NAME\";\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 101, 
          "faulty": "declaration.remove();", 
          "type": "Delete", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 106, 
          "faulty": "logger.fine(\"Removed unused prototype property: \" + nameInfo.name);", 
          "type": "Replace", 
          "seed": "return;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 946, 
          "faulty": "sb.append(first.getString());", 
          "type": "InsertBefore", 
          "seed": "this.type=type;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-01 09:25:47.602554953 -0500\n+++ /tmp/Arja_Defects4J_Closure_67/patches_k844/Patch_147/patched/tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-01 09:31:36.692958027 -0500\n@@ -98,12 +98,11 @@\n           }\n \n           if (canRemove) {\n-            declaration.remove();\n             changed = true;\n           }\n         }\n \n-        logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n+        return;\n       }\n     }\n \n\n\n--- /tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-01 09:25:47.626555117 -0500\n+++ /tmp/Arja_Defects4J_Closure_67/patches_k844/Patch_147/patched/tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-01 09:31:36.692958027 -0500\n@@ -943,7 +943,8 @@\n         if (first == null || first.getType() != Token.NAME) {\n           sb.append(\"<invalid>\");\n         } else {\n-          sb.append(first.getString());\n+          this.type = type;\n+\t\tsb.append(first.getString());\n         }\n       } else if (this instanceof ScriptOrFnNode) {\n         ScriptOrFnNode sof = (ScriptOrFnNode) this;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 310, 
          "faulty": "return \"GETELEM\";", 
          "type": "Delete", 
          "seed": "case 2:"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Replace", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 221, 
          "faulty": "return \"synthetic\";", 
          "type": "Delete", 
          "seed": "case 2:"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-01 09:25:47.602554953 -0500\n+++ /tmp/Arja_Defects4J_Closure_67/patches_k844/Patch_1132/patched/tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-01 09:44:35.246331898 -0500\n@@ -97,10 +97,7 @@\n             }\n           }\n \n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n+          break;\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n--- /tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-01 09:25:47.626555117 -0500\n+++ /tmp/Arja_Defects4J_Closure_67/patches_k844/Patch_1132/patched/tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-01 09:44:35.246331898 -0500\n@@ -307,7 +307,7 @@\n           case TYPEOF:          return \"TYPEOF\";\n           case GETPROP:         return \"GETPROP\";\n           case SETPROP:         return \"SETPROP\";\n-          case GETELEM:         return \"GETELEM\";\n+          case GETELEM:         ;\n           case SETELEM:         return \"SETELEM\";\n           case CALL:            return \"CALL\";\n           case NAME:            return \"NAME\";\n\n\n--- /tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-01 09:25:47.626555117 -0500\n+++ /tmp/Arja_Defects4J_Closure_67/patches_k844/Patch_1132/patched/tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-01 09:44:35.246331898 -0500\n@@ -218,7 +218,7 @@\n         case QUOTED_PROP:        return \"quoted\";\n         case OPT_ARG_NAME:       return \"opt_arg\";\n \n-        case SYNTHETIC_BLOCK_PROP: return \"synthetic\";\n+        case SYNTHETIC_BLOCK_PROP: ;\n         case EMPTY_BLOCK:        return \"empty_block\";\n         case ORIGINALNAME_PROP:  return \"originalname\";\n         case SIDE_EFFECT_FLAGS:  return \"side_effect_flags\";\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 88, 
          "faulty": "canRemove=true;", 
          "type": "Delete", 
          "seed": "return;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 939, 
          "faulty": "sb.append(' ');", 
          "type": "Delete", 
          "seed": "toString(sb,printSource,printAnnotations,printType);"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 946, 
          "faulty": "sb.append(first.getString());", 
          "type": "InsertBefore", 
          "seed": "if (jsType != null) {\n  String jsTypeString=jsType.toString();\n  if (jsTypeString != null) {\n    sb.append(\" : \");\n    sb.append(jsTypeString);\n  }\n}"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1027, 
          "faulty": "value=String.valueOf(x.intValue);", 
          "type": "InsertBefore", 
          "seed": "if (type == Token.FUNCTION) {\n  sb.append(' ');\n  if (first == null || first.getType() != Token.NAME) {\n    sb.append(\"<invalid>\");\n  }\n else {\n    sb.append(first.getString());\n  }\n}\n else if (this instanceof ScriptOrFnNode) {\n  ScriptOrFnNode sof=(ScriptOrFnNode)this;\n  if (this instanceof FunctionNode) {\n    FunctionNode fn=(FunctionNode)this;\n    sb.append(' ');\n    sb.append(fn.getFunctionName());\n  }\n  if (printSource) {\n    sb.append(\" [source name: \");\n    sb.append(sof.getSourceName());\n    sb.append(\"] [encoded source length: \");\n    sb.append(sof.getEncodedSourceEnd() - sof.getEncodedSourceStart());\n    sb.append(\"] [base line: \");\n    sb.append(sof.getBaseLineno());\n    sb.append(\"] [end line: \");\n    sb.append(sof.getEndLineno());\n    sb.append(']');\n  }\n}\n else if (type == Token.NUMBER) {\n  sb.append(' ');\n  sb.append(getDouble());\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-01 09:25:47.602554953 -0500\n+++ /tmp/Arja_Defects4J_Closure_67/patches_k844/Patch_74/patched/tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-01 09:30:59.304700640 -0500\n@@ -85,7 +85,6 @@\n           boolean canRemove = false;\n \n           if (specializationState == null) {\n-            canRemove = true;\n           } else {\n             Node specializableFunction =\n               getSpecializableFunctionFromSymbol(declaration);\n\n\n--- /tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-01 09:25:47.626555117 -0500\n+++ /tmp/Arja_Defects4J_Closure_67/patches_k844/Patch_74/patched/tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-01 09:30:59.308700668 -0500\n@@ -936,14 +936,20 @@\n         sb.append(' ');\n         sb.append(getString());\n       } else if (type == Token.FUNCTION) {\n-        sb.append(' ');\n         // In the case of JsDoc trees, the first child is often not a string\n         // which causes exceptions to be thrown when calling toString or\n         // toStringTree.\n         if (first == null || first.getType() != Token.NAME) {\n           sb.append(\"<invalid>\");\n         } else {\n-          sb.append(first.getString());\n+          if (jsType != null) {\n+\t\t\t\tString jsTypeString = jsType.toString();\n+\t\t\t\tif (jsTypeString != null) {\n+\t\t\t\t\tsb.append(\" : \");\n+\t\t\t\t\tsb.append(jsTypeString);\n+\t\t\t\t}\n+\t\t\t}\n+\t\tsb.append(first.getString());\n         }\n       } else if (this instanceof ScriptOrFnNode) {\n         ScriptOrFnNode sof = (ScriptOrFnNode) this;\n@@ -1024,7 +1030,37 @@\n               if (obj != null) {\n                 value = obj.toString();\n               } else {\n-                value = String.valueOf(x.intValue);\n+                if (type == Token.FUNCTION) {\n+\t\t\t\t\tsb.append(' ');\n+\t\t\t\t\tif (first == null || first.getType() != Token.NAME) {\n+\t\t\t\t\t\tsb.append(\"<invalid>\");\n+\t\t\t\t\t} else {\n+\t\t\t\t\t\tsb.append(first.getString());\n+\t\t\t\t\t}\n+\t\t\t\t} else if (this instanceof ScriptOrFnNode) {\n+\t\t\t\t\tScriptOrFnNode sof = (ScriptOrFnNode) this;\n+\t\t\t\t\tif (this instanceof FunctionNode) {\n+\t\t\t\t\t\tFunctionNode fn = (FunctionNode) this;\n+\t\t\t\t\t\tsb.append(' ');\n+\t\t\t\t\t\tsb.append(fn.getFunctionName());\n+\t\t\t\t\t}\n+\t\t\t\t\tif (printSource) {\n+\t\t\t\t\t\tsb.append(\" [source name: \");\n+\t\t\t\t\t\tsb.append(sof.getSourceName());\n+\t\t\t\t\t\tsb.append(\"] [encoded source length: \");\n+\t\t\t\t\t\tsb.append(sof.getEncodedSourceEnd()\n+\t\t\t\t\t\t\t\t- sof.getEncodedSourceStart());\n+\t\t\t\t\t\tsb.append(\"] [base line: \");\n+\t\t\t\t\t\tsb.append(sof.getBaseLineno());\n+\t\t\t\t\t\tsb.append(\"] [end line: \");\n+\t\t\t\t\t\tsb.append(sof.getEndLineno());\n+\t\t\t\t\t\tsb.append(']');\n+\t\t\t\t\t}\n+\t\t\t\t} else if (type == Token.NUMBER) {\n+\t\t\t\t\tsb.append(' ');\n+\t\t\t\t\tsb.append(getDouble());\n+\t\t\t\t}\n+\t\t\t\tvalue = String.valueOf(x.intValue);\n               }\n               break;\n           }\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 318, 
          "faulty": "return \"THIS\";", 
          "type": "Delete", 
          "seed": "break L;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Replace", 
          "seed": "return;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 102, 
          "faulty": "changed=true;", 
          "type": "Replace", 
          "seed": "return;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 946, 
          "faulty": "sb.append(first.getString());", 
          "type": "Replace", 
          "seed": "sb.append('\\n');"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-01 09:25:47.602554953 -0500\n+++ /tmp/Arja_Defects4J_Closure_67/patches_k844/Patch_356/patched/tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-01 09:33:18.509659932 -0500\n@@ -97,10 +97,7 @@\n             }\n           }\n \n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n+          return;\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n--- /tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-01 09:25:47.626555117 -0500\n+++ /tmp/Arja_Defects4J_Closure_67/patches_k844/Patch_356/patched/tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-01 09:33:18.509659932 -0500\n@@ -315,7 +315,7 @@\n           case NUMBER:          return \"NUMBER\";\n           case STRING:          return \"STRING\";\n           case NULL:            return \"NULL\";\n-          case THIS:            return \"THIS\";\n+          case THIS:            ;\n           case FALSE:           return \"FALSE\";\n           case TRUE:            return \"TRUE\";\n           case SHEQ:            return \"SHEQ\";\n\n\n--- /tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-01 09:25:47.626555117 -0500\n+++ /tmp/Arja_Defects4J_Closure_67/patches_k844/Patch_356/patched/tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-01 09:33:18.509659932 -0500\n@@ -943,7 +943,7 @@\n         if (first == null || first.getType() != Token.NAME) {\n           sb.append(\"<invalid>\");\n         } else {\n-          sb.append(first.getString());\n+          sb.append('\\n');\n         }\n       } else if (this instanceof ScriptOrFnNode) {\n         ScriptOrFnNode sof = (ScriptOrFnNode) this;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Replace", 
          "seed": "return;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 943, 
          "faulty": "if (first == null || first.getType() != Token.NAME) {\n  sb.append(\"<invalid>\");\n}\n else {\n  sb.append(first.getString());\n}", 
          "type": "Replace", 
          "seed": "throw new IllegalArgumentException();"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-01 09:25:47.602554953 -0500\n+++ /tmp/Arja_Defects4J_Closure_67/patches_k844/Patch_736/patched/tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-01 09:39:24.056183642 -0500\n@@ -97,10 +97,7 @@\n             }\n           }\n \n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n+          return;\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n--- /tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-01 09:25:47.626555117 -0500\n+++ /tmp/Arja_Defects4J_Closure_67/patches_k844/Patch_736/patched/tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-01 09:39:24.056183642 -0500\n@@ -937,14 +937,7 @@\n         sb.append(getString());\n       } else if (type == Token.FUNCTION) {\n         sb.append(' ');\n-        // In the case of JsDoc trees, the first child is often not a string\n-        // which causes exceptions to be thrown when calling toString or\n-        // toStringTree.\n-        if (first == null || first.getType() != Token.NAME) {\n-          sb.append(\"<invalid>\");\n-        } else {\n-          sb.append(first.getString());\n-        }\n+        throw new IllegalArgumentException();\n       } else if (this instanceof ScriptOrFnNode) {\n         ScriptOrFnNode sof = (ScriptOrFnNode) this;\n         if (this instanceof FunctionNode) {\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Replace", 
          "seed": "return;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-01 09:25:47.602554953 -0500\n+++ /tmp/Arja_Defects4J_Closure_67/patches_k844/Patch_24/patched/tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-01 09:30:29.732497063 -0500\n@@ -97,10 +97,7 @@\n             }\n           }\n \n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n+          return;\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 101, 
          "faulty": "declaration.remove();", 
          "type": "InsertBefore", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Replace", 
          "seed": "return;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 221, 
          "faulty": "return \"synthetic\";", 
          "type": "Delete", 
          "seed": "return \"BLOCK\";"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-01 09:25:47.602554953 -0500\n+++ /tmp/Arja_Defects4J_Closure_67/patches_k844/Patch_424/patched/tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-01 09:34:35.866194017 -0500\n@@ -97,10 +97,7 @@\n             }\n           }\n \n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n+          return;\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n--- /tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-01 09:25:47.626555117 -0500\n+++ /tmp/Arja_Defects4J_Closure_67/patches_k844/Patch_424/patched/tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-01 09:34:35.866194017 -0500\n@@ -218,7 +218,7 @@\n         case QUOTED_PROP:        return \"quoted\";\n         case OPT_ARG_NAME:       return \"opt_arg\";\n \n-        case SYNTHETIC_BLOCK_PROP: return \"synthetic\";\n+        case SYNTHETIC_BLOCK_PROP: ;\n         case EMPTY_BLOCK:        return \"empty_block\";\n         case ORIGINALNAME_PROP:  return \"originalname\";\n         case SIDE_EFFECT_FLAGS:  return \"side_effect_flags\";\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 939, 
          "faulty": "sb.append(' ');", 
          "type": "Delete", 
          "seed": "sb.append(Token.name(type));"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-01 09:25:47.602554953 -0500\n+++ /tmp/Arja_Defects4J_Closure_67/patches_k844/Patch_661/patched/tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-01 09:38:29.751808743 -0500\n@@ -96,11 +96,6 @@\n               canRemove = true;\n             }\n           }\n-\n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n--- /tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-01 09:25:47.626555117 -0500\n+++ /tmp/Arja_Defects4J_Closure_67/patches_k844/Patch_661/patched/tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-01 09:38:29.751808743 -0500\n@@ -936,7 +936,6 @@\n         sb.append(' ');\n         sb.append(getString());\n       } else if (type == Token.FUNCTION) {\n-        sb.append(' ');\n         // In the case of JsDoc trees, the first child is often not a string\n         // which causes exceptions to be thrown when calling toString or\n         // toStringTree.\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Replace", 
          "seed": "return;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 106, 
          "faulty": "logger.fine(\"Removed unused prototype property: \" + nameInfo.name);", 
          "type": "Replace", 
          "seed": "break;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-01 09:25:47.602554953 -0500\n+++ /tmp/Arja_Defects4J_Closure_67/patches_k844/Patch_1022/patched/tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-01 09:43:17.021791901 -0500\n@@ -97,13 +97,10 @@\n             }\n           }\n \n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n+          return;\n         }\n \n-        logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n+        break;\n       }\n     }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 88, 
          "faulty": "canRemove=true;", 
          "type": "Replace", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 939, 
          "faulty": "sb.append(' ');", 
          "type": "InsertBefore", 
          "seed": "toString(sb,printSource,printAnnotations,printType);"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-01 09:25:47.602554953 -0500\n+++ /tmp/Arja_Defects4J_Closure_67/patches_k844/Patch_1005/patched/tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-01 09:43:04.821707681 -0500\n@@ -85,7 +85,7 @@\n           boolean canRemove = false;\n \n           if (specializationState == null) {\n-            canRemove = true;\n+            break;\n           } else {\n             Node specializableFunction =\n               getSpecializableFunctionFromSymbol(declaration);\n\n\n--- /tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-01 09:25:47.626555117 -0500\n+++ /tmp/Arja_Defects4J_Closure_67/patches_k844/Patch_1005/patched/tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-01 09:43:04.821707681 -0500\n@@ -936,7 +936,8 @@\n         sb.append(' ');\n         sb.append(getString());\n       } else if (type == Token.FUNCTION) {\n-        sb.append(' ');\n+        toString(sb, printSource, printAnnotations, printType);\n+\t\tsb.append(' ');\n         // In the case of JsDoc trees, the first child is often not a string\n         // which causes exceptions to be thrown when calling toString or\n         // toStringTree.\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1427, 
          "faulty": "return res;", 
          "type": "Delete", 
          "seed": "if (!isEquivalentTo(node2,false,false)) {\n  return new NodeMismatch(this,node2);\n}"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 318, 
          "faulty": "return \"THIS\";", 
          "type": "Delete", 
          "seed": "break L;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Replace", 
          "seed": "break;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-01 09:25:47.602554953 -0500\n+++ /tmp/Arja_Defects4J_Closure_67/patches_k844/Patch_693/patched/tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-01 09:38:54.491979542 -0500\n@@ -97,10 +97,7 @@\n             }\n           }\n \n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n+          break;\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n--- /tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-01 09:25:47.626555117 -0500\n+++ /tmp/Arja_Defects4J_Closure_67/patches_k844/Patch_693/patched/tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-01 09:38:54.707981029 -0500\n@@ -1424,7 +1424,6 @@\n       }\n       res = n.checkTreeEqualsImpl(n2);\n       if (res != null) {\n-        return res;\n       }\n     }\n     return res;\n\n\n--- /tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-01 09:25:47.626555117 -0500\n+++ /tmp/Arja_Defects4J_Closure_67/patches_k844/Patch_693/patched/tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-01 09:38:54.707981029 -0500\n@@ -315,7 +315,7 @@\n           case NUMBER:          return \"NUMBER\";\n           case STRING:          return \"STRING\";\n           case NULL:            return \"NULL\";\n-          case THIS:            return \"THIS\";\n+          case THIS:            ;\n           case FALSE:           return \"FALSE\";\n           case TRUE:            return \"TRUE\";\n           case SHEQ:            return \"SHEQ\";\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 359, 
          "faulty": "return \"LP\";", 
          "type": "Delete", 
          "seed": "if (!(0 <= token && token <= Token.LAST_TOKEN)) throw new IllegalArgumentException();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 946, 
          "faulty": "sb.append(first.getString());", 
          "type": "InsertBefore", 
          "seed": "toString(sb,printSource,printAnnotations,printType);"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-01 09:25:47.602554953 -0500\n+++ /tmp/Arja_Defects4J_Closure_67/patches_k844/Patch_371/patched/tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-01 09:33:26.465714863 -0500\n@@ -96,11 +96,6 @@\n               canRemove = true;\n             }\n           }\n-\n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n--- /tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-01 09:25:47.626555117 -0500\n+++ /tmp/Arja_Defects4J_Closure_67/patches_k844/Patch_371/patched/tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-01 09:33:26.469714890 -0500\n@@ -356,7 +356,7 @@\n           case RB:              return \"RB\";\n           case LC:              return \"LC\";\n           case RC:              return \"RC\";\n-          case LP:              return \"LP\";\n+          case LP:              ;\n           case RP:              return \"RP\";\n           case COMMA:           return \"COMMA\";\n           case ASSIGN:          return \"ASSIGN\";\n\n\n--- /tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-01 09:25:47.626555117 -0500\n+++ /tmp/Arja_Defects4J_Closure_67/patches_k844/Patch_371/patched/tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-01 09:33:26.469714890 -0500\n@@ -943,7 +943,8 @@\n         if (first == null || first.getType() != Token.NAME) {\n           sb.append(\"<invalid>\");\n         } else {\n-          sb.append(first.getString());\n+          toString(sb, printSource, printAnnotations, printType);\n+\t\tsb.append(first.getString());\n         }\n       } else if (this instanceof ScriptOrFnNode) {\n         ScriptOrFnNode sof = (ScriptOrFnNode) this;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java", 
          "line": 535, 
          "faulty": "NodeUtil.removeChild(exprNode.getParent(),exprNode);", 
          "type": "Replace", 
          "seed": "return;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java\t2018-12-01 09:25:49.286566544 -0500\n+++ /tmp/Arja_Defects4J_Closure_67/patches_k844/Patch_108/patched/tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java\t2018-12-01 09:31:17.460825630 -0500\n@@ -532,7 +532,7 @@\n \n     @Override\n     public void remove() {\n-      NodeUtil.removeChild(exprNode.getParent(), exprNode);\n+      return;\n     }\n \n     @Override\n\n\n--- /tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-01 09:25:47.602554953 -0500\n+++ /tmp/Arja_Defects4J_Closure_67/patches_k844/Patch_108/patched/tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-01 09:31:17.460825630 -0500\n@@ -96,11 +96,6 @@\n               canRemove = true;\n             }\n           }\n-\n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 87, 
          "faulty": "if (specializationState == null) {\n  canRemove=true;\n}\n else {\n  Node specializableFunction=getSpecializableFunctionFromSymbol(declaration);\n  if (specializableFunction != null) {\n    specializationState.reportRemovedFunction(specializableFunction,null);\n    canRemove=true;\n  }\n}", 
          "type": "Delete", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 359, 
          "faulty": "return \"LP\";", 
          "type": "InsertBefore", 
          "seed": "if (!(0 <= token && token <= Token.LAST_TOKEN)) throw new IllegalArgumentException();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Replace", 
          "seed": "return;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-01 09:25:47.602554953 -0500\n+++ /tmp/Arja_Defects4J_Closure_67/patches_k844/Patch_1092/patched/tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-01 09:44:10.282159568 -0500\n@@ -84,23 +84,7 @@\n         for (Symbol declaration : nameInfo.getDeclarations()) {\n           boolean canRemove = false;\n \n-          if (specializationState == null) {\n-            canRemove = true;\n-          } else {\n-            Node specializableFunction =\n-              getSpecializableFunctionFromSymbol(declaration);\n-\n-            if (specializableFunction != null) {\n-              specializationState.reportRemovedFunction(\n-                  specializableFunction, null);\n-              canRemove = true;\n-            }\n-          }\n-\n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n+          return;\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n--- /tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-01 09:25:47.626555117 -0500\n+++ /tmp/Arja_Defects4J_Closure_67/patches_k844/Patch_1092/patched/tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-01 09:44:10.286159595 -0500\n@@ -356,7 +356,11 @@\n           case RB:              return \"RB\";\n           case LC:              return \"LC\";\n           case RC:              return \"RC\";\n-          case LP:              return \"LP\";\n+          case LP:              {\n+\t\t\t\tif (!(0 <= token && token <= Token.LAST_TOKEN))\n+\t\t\t\t\tthrow new IllegalArgumentException();\n+\t\t\t\treturn \"LP\";\n+\t\t\t}\n           case RP:              return \"RP\";\n           case COMMA:           return \"COMMA\";\n           case ASSIGN:          return \"ASSIGN\";\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Replace", 
          "seed": "return;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 221, 
          "faulty": "return \"synthetic\";", 
          "type": "Delete", 
          "seed": "return \"BLOCK\";"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 939, 
          "faulty": "sb.append(' ');", 
          "type": "Delete", 
          "seed": "if (printSource) {\n  int lineno=getLineno();\n  if (lineno != -1) {\n    sb.append(' ');\n    sb.append(lineno);\n  }\n}"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 946, 
          "faulty": "sb.append(first.getString());", 
          "type": "Replace", 
          "seed": "sb.append('\\n');"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-01 09:25:47.602554953 -0500\n+++ /tmp/Arja_Defects4J_Closure_67/patches_k844/Patch_1135/patched/tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-01 09:44:36.602341260 -0500\n@@ -97,10 +97,7 @@\n             }\n           }\n \n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n+          return;\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n--- /tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-01 09:25:47.626555117 -0500\n+++ /tmp/Arja_Defects4J_Closure_67/patches_k844/Patch_1135/patched/tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-01 09:44:36.606341286 -0500\n@@ -218,7 +218,7 @@\n         case QUOTED_PROP:        return \"quoted\";\n         case OPT_ARG_NAME:       return \"opt_arg\";\n \n-        case SYNTHETIC_BLOCK_PROP: return \"synthetic\";\n+        case SYNTHETIC_BLOCK_PROP: ;\n         case EMPTY_BLOCK:        return \"empty_block\";\n         case ORIGINALNAME_PROP:  return \"originalname\";\n         case SIDE_EFFECT_FLAGS:  return \"side_effect_flags\";\n@@ -936,14 +936,13 @@\n         sb.append(' ');\n         sb.append(getString());\n       } else if (type == Token.FUNCTION) {\n-        sb.append(' ');\n         // In the case of JsDoc trees, the first child is often not a string\n         // which causes exceptions to be thrown when calling toString or\n         // toStringTree.\n         if (first == null || first.getType() != Token.NAME) {\n           sb.append(\"<invalid>\");\n         } else {\n-          sb.append(first.getString());\n+          sb.append('\\n');\n         }\n       } else if (this instanceof ScriptOrFnNode) {\n         ScriptOrFnNode sof = (ScriptOrFnNode) this;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 88, 
          "faulty": "canRemove=true;", 
          "type": "Replace", 
          "seed": "return;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Replace", 
          "seed": "return;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 221, 
          "faulty": "return \"synthetic\";", 
          "type": "Delete", 
          "seed": "return \"ENTERWITH\";"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-01 09:25:47.602554953 -0500\n+++ /tmp/Arja_Defects4J_Closure_67/patches_k844/Patch_419/patched/tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-01 09:34:33.470177475 -0500\n@@ -85,7 +85,7 @@\n           boolean canRemove = false;\n \n           if (specializationState == null) {\n-            canRemove = true;\n+            return;\n           } else {\n             Node specializableFunction =\n               getSpecializableFunctionFromSymbol(declaration);\n@@ -97,10 +97,7 @@\n             }\n           }\n \n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n+          return;\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n--- /tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-01 09:25:47.626555117 -0500\n+++ /tmp/Arja_Defects4J_Closure_67/patches_k844/Patch_419/patched/tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-01 09:34:33.474177502 -0500\n@@ -218,7 +218,7 @@\n         case QUOTED_PROP:        return \"quoted\";\n         case OPT_ARG_NAME:       return \"opt_arg\";\n \n-        case SYNTHETIC_BLOCK_PROP: return \"synthetic\";\n+        case SYNTHETIC_BLOCK_PROP: ;\n         case EMPTY_BLOCK:        return \"empty_block\";\n         case ORIGINALNAME_PROP:  return \"originalname\";\n         case SIDE_EFFECT_FLAGS:  return \"side_effect_flags\";\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Delete", 
          "seed": "return;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 946, 
          "faulty": "sb.append(first.getString());", 
          "type": "InsertBefore", 
          "seed": "if (type == Token.NUMBER) {\n  sb.append(' ');\n  sb.append(getDouble());\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-01 09:25:47.602554953 -0500\n+++ /tmp/Arja_Defects4J_Closure_67/patches_k844/Patch_178/patched/tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-01 09:31:52.117064209 -0500\n@@ -96,11 +96,6 @@\n               canRemove = true;\n             }\n           }\n-\n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n--- /tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-01 09:25:47.626555117 -0500\n+++ /tmp/Arja_Defects4J_Closure_67/patches_k844/Patch_178/patched/tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-01 09:31:52.117064209 -0500\n@@ -943,7 +943,11 @@\n         if (first == null || first.getType() != Token.NAME) {\n           sb.append(\"<invalid>\");\n         } else {\n-          sb.append(first.getString());\n+          if (type == Token.NUMBER) {\n+\t\t\t\tsb.append(' ');\n+\t\t\t\tsb.append(getDouble());\n+\t\t\t}\n+\t\tsb.append(first.getString());\n         }\n       } else if (this instanceof ScriptOrFnNode) {\n         ScriptOrFnNode sof = (ScriptOrFnNode) this;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Replace", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 946, 
          "faulty": "sb.append(first.getString());", 
          "type": "Replace", 
          "seed": "if (this instanceof ScriptOrFnNode) {\n  ScriptOrFnNode sof=(ScriptOrFnNode)this;\n  if (this instanceof FunctionNode) {\n    FunctionNode fn=(FunctionNode)this;\n    sb.append(' ');\n    sb.append(fn.getFunctionName());\n  }\n  if (printSource) {\n    sb.append(\" [source name: \");\n    sb.append(sof.getSourceName());\n    sb.append(\"] [encoded source length: \");\n    sb.append(sof.getEncodedSourceEnd() - sof.getEncodedSourceStart());\n    sb.append(\"] [base line: \");\n    sb.append(sof.getBaseLineno());\n    sb.append(\"] [end line: \");\n    sb.append(sof.getEndLineno());\n    sb.append(']');\n  }\n}\n else if (type == Token.NUMBER) {\n  sb.append(' ');\n  sb.append(getDouble());\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-01 09:25:47.602554953 -0500\n+++ /tmp/Arja_Defects4J_Closure_67/patches_k844/Patch_996/patched/tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-01 09:43:00.577678384 -0500\n@@ -97,10 +97,7 @@\n             }\n           }\n \n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n+          break;\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n--- /tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-01 09:25:47.626555117 -0500\n+++ /tmp/Arja_Defects4J_Closure_67/patches_k844/Patch_996/patched/tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-01 09:43:00.577678384 -0500\n@@ -943,7 +943,29 @@\n         if (first == null || first.getType() != Token.NAME) {\n           sb.append(\"<invalid>\");\n         } else {\n-          sb.append(first.getString());\n+          if (this instanceof ScriptOrFnNode) {\n+\t\t\tScriptOrFnNode sof = (ScriptOrFnNode) this;\n+\t\t\tif (this instanceof FunctionNode) {\n+\t\t\t\tFunctionNode fn = (FunctionNode) this;\n+\t\t\t\tsb.append(' ');\n+\t\t\t\tsb.append(fn.getFunctionName());\n+\t\t\t}\n+\t\t\tif (printSource) {\n+\t\t\t\tsb.append(\" [source name: \");\n+\t\t\t\tsb.append(sof.getSourceName());\n+\t\t\t\tsb.append(\"] [encoded source length: \");\n+\t\t\t\tsb.append(sof.getEncodedSourceEnd()\n+\t\t\t\t\t\t- sof.getEncodedSourceStart());\n+\t\t\t\tsb.append(\"] [base line: \");\n+\t\t\t\tsb.append(sof.getBaseLineno());\n+\t\t\t\tsb.append(\"] [end line: \");\n+\t\t\t\tsb.append(sof.getEndLineno());\n+\t\t\t\tsb.append(']');\n+\t\t\t}\n+\t\t} else if (type == Token.NUMBER) {\n+\t\t\tsb.append(' ');\n+\t\t\tsb.append(getDouble());\n+\t\t}\n         }\n       } else if (this instanceof ScriptOrFnNode) {\n         ScriptOrFnNode sof = (ScriptOrFnNode) this;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 88, 
          "faulty": "canRemove=true;", 
          "type": "Replace", 
          "seed": "return;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 939, 
          "faulty": "sb.append(' ');", 
          "type": "Delete", 
          "seed": "sb.append(Token.name(type));"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-01 09:25:47.602554953 -0500\n+++ /tmp/Arja_Defects4J_Closure_67/patches_k844/Patch_554/patched/tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-01 09:36:18.654903673 -0500\n@@ -85,7 +85,7 @@\n           boolean canRemove = false;\n \n           if (specializationState == null) {\n-            canRemove = true;\n+            return;\n           } else {\n             Node specializableFunction =\n               getSpecializableFunctionFromSymbol(declaration);\n\n\n--- /tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-01 09:25:47.626555117 -0500\n+++ /tmp/Arja_Defects4J_Closure_67/patches_k844/Patch_554/patched/tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-01 09:36:18.658903702 -0500\n@@ -936,7 +936,6 @@\n         sb.append(' ');\n         sb.append(getString());\n       } else if (type == Token.FUNCTION) {\n-        sb.append(' ');\n         // In the case of JsDoc trees, the first child is often not a string\n         // which causes exceptions to be thrown when calling toString or\n         // toStringTree.\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 310, 
          "faulty": "return \"GETELEM\";", 
          "type": "Replace", 
          "seed": "if (!(0 <= token && token <= Token.LAST_TOKEN)) throw new IllegalArgumentException();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 318, 
          "faulty": "return \"THIS\";", 
          "type": "Delete", 
          "seed": "return \"ENTERWITH\";"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Replace", 
          "seed": "return;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 943, 
          "faulty": "if (first == null || first.getType() != Token.NAME) {\n  sb.append(\"<invalid>\");\n}\n else {\n  sb.append(first.getString());\n}", 
          "type": "Replace", 
          "seed": "sb.append(Token.name(type));"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-01 09:25:47.602554953 -0500\n+++ /tmp/Arja_Defects4J_Closure_67/patches_k844/Patch_513/patched/tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-01 09:35:53.182727814 -0500\n@@ -97,10 +97,7 @@\n             }\n           }\n \n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n+          return;\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n--- /tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-01 09:25:47.626555117 -0500\n+++ /tmp/Arja_Defects4J_Closure_67/patches_k844/Patch_513/patched/tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-01 09:35:53.182727814 -0500\n@@ -307,7 +307,8 @@\n           case TYPEOF:          return \"TYPEOF\";\n           case GETPROP:         return \"GETPROP\";\n           case SETPROP:         return \"SETPROP\";\n-          case GETELEM:         return \"GETELEM\";\n+          case GETELEM:         if (!(0 <= token && token <= Token.LAST_TOKEN))\n+\t\t\t\tthrow new IllegalArgumentException();\n           case SETELEM:         return \"SETELEM\";\n           case CALL:            return \"CALL\";\n           case NAME:            return \"NAME\";\n@@ -315,7 +316,7 @@\n           case NUMBER:          return \"NUMBER\";\n           case STRING:          return \"STRING\";\n           case NULL:            return \"NULL\";\n-          case THIS:            return \"THIS\";\n+          case THIS:            ;\n           case FALSE:           return \"FALSE\";\n           case TRUE:            return \"TRUE\";\n           case SHEQ:            return \"SHEQ\";\n\n\n--- /tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-01 09:25:47.626555117 -0500\n+++ /tmp/Arja_Defects4J_Closure_67/patches_k844/Patch_513/patched/tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-01 09:35:53.186727843 -0500\n@@ -937,14 +937,7 @@\n         sb.append(getString());\n       } else if (type == Token.FUNCTION) {\n         sb.append(' ');\n-        // In the case of JsDoc trees, the first child is often not a string\n-        // which causes exceptions to be thrown when calling toString or\n-        // toStringTree.\n-        if (first == null || first.getType() != Token.NAME) {\n-          sb.append(\"<invalid>\");\n-        } else {\n-          sb.append(first.getString());\n-        }\n+        sb.append(Token.name(type));\n       } else if (this instanceof ScriptOrFnNode) {\n         ScriptOrFnNode sof = (ScriptOrFnNode) this;\n         if (this instanceof FunctionNode) {\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Replace", 
          "seed": "return;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 946, 
          "faulty": "sb.append(first.getString());", 
          "type": "Replace", 
          "seed": "sb.append('\\n');"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-01 09:25:47.602554953 -0500\n+++ /tmp/Arja_Defects4J_Closure_67/patches_k844/Patch_212/patched/tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-01 09:32:07.513170200 -0500\n@@ -97,10 +97,7 @@\n             }\n           }\n \n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n+          return;\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n--- /tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-01 09:25:47.626555117 -0500\n+++ /tmp/Arja_Defects4J_Closure_67/patches_k844/Patch_212/patched/tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-01 09:32:07.513170200 -0500\n@@ -943,7 +943,7 @@\n         if (first == null || first.getType() != Token.NAME) {\n           sb.append(\"<invalid>\");\n         } else {\n-          sb.append(first.getString());\n+          sb.append('\\n');\n         }\n       } else if (this instanceof ScriptOrFnNode) {\n         ScriptOrFnNode sof = (ScriptOrFnNode) this;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Replace", 
          "seed": "return;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 102, 
          "faulty": "changed=true;", 
          "type": "Delete", 
          "seed": "return;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-01 09:25:47.602554953 -0500\n+++ /tmp/Arja_Defects4J_Closure_67/patches_k844/Patch_223/patched/tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-01 09:32:12.453204209 -0500\n@@ -97,10 +97,7 @@\n             }\n           }\n \n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n+          return;\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 87, 
          "faulty": "if (specializationState == null) {\n  canRemove=true;\n}\n else {\n  Node specializableFunction=getSpecializableFunctionFromSymbol(declaration);\n  if (specializableFunction != null) {\n    specializationState.reportRemovedFunction(specializableFunction,null);\n    canRemove=true;\n  }\n}", 
          "type": "Delete", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Replace", 
          "seed": "return;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-01 09:25:47.602554953 -0500\n+++ /tmp/Arja_Defects4J_Closure_67/patches_k844/Patch_627/patched/tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-01 09:37:25.859367644 -0500\n@@ -84,23 +84,7 @@\n         for (Symbol declaration : nameInfo.getDeclarations()) {\n           boolean canRemove = false;\n \n-          if (specializationState == null) {\n-            canRemove = true;\n-          } else {\n-            Node specializableFunction =\n-              getSpecializableFunctionFromSymbol(declaration);\n-\n-            if (specializableFunction != null) {\n-              specializationState.reportRemovedFunction(\n-                  specializableFunction, null);\n-              canRemove = true;\n-            }\n-          }\n-\n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n+          return;\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java", 
          "line": 535, 
          "faulty": "NodeUtil.removeChild(exprNode.getParent(),exprNode);", 
          "type": "Replace", 
          "seed": "return;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 102, 
          "faulty": "changed=true;", 
          "type": "Replace", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 943, 
          "faulty": "if (first == null || first.getType() != Token.NAME) {\n  sb.append(\"<invalid>\");\n}\n else {\n  sb.append(first.getString());\n}", 
          "type": "Delete", 
          "seed": "if (type == Token.FUNCTION) {\n  sb.append(' ');\n  if (first == null || first.getType() != Token.NAME) {\n    sb.append(\"<invalid>\");\n  }\n else {\n    sb.append(first.getString());\n  }\n}\n else if (this instanceof ScriptOrFnNode) {\n  ScriptOrFnNode sof=(ScriptOrFnNode)this;\n  if (this instanceof FunctionNode) {\n    FunctionNode fn=(FunctionNode)this;\n    sb.append(' ');\n    sb.append(fn.getFunctionName());\n  }\n  if (printSource) {\n    sb.append(\" [source name: \");\n    sb.append(sof.getSourceName());\n    sb.append(\"] [encoded source length: \");\n    sb.append(sof.getEncodedSourceEnd() - sof.getEncodedSourceStart());\n    sb.append(\"] [base line: \");\n    sb.append(sof.getBaseLineno());\n    sb.append(\"] [end line: \");\n    sb.append(sof.getEndLineno());\n    sb.append(']');\n  }\n}\n else if (type == Token.NUMBER) {\n  sb.append(' ');\n  sb.append(getDouble());\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java\t2018-12-01 09:25:49.286566544 -0500\n+++ /tmp/Arja_Defects4J_Closure_67/patches_k844/Patch_53/patched/tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java\t2018-12-01 09:30:47.272617810 -0500\n@@ -532,7 +532,7 @@\n \n     @Override\n     public void remove() {\n-      NodeUtil.removeChild(exprNode.getParent(), exprNode);\n+      return;\n     }\n \n     @Override\n\n\n--- /tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-01 09:25:47.602554953 -0500\n+++ /tmp/Arja_Defects4J_Closure_67/patches_k844/Patch_53/patched/tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-01 09:30:47.276617837 -0500\n@@ -99,7 +99,7 @@\n \n           if (canRemove) {\n             declaration.remove();\n-            changed = true;\n+            break;\n           }\n         }\n \n\n\n--- /tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-01 09:25:47.626555117 -0500\n+++ /tmp/Arja_Defects4J_Closure_67/patches_k844/Patch_53/patched/tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-01 09:30:47.276617837 -0500\n@@ -937,14 +937,6 @@\n         sb.append(getString());\n       } else if (type == Token.FUNCTION) {\n         sb.append(' ');\n-        // In the case of JsDoc trees, the first child is often not a string\n-        // which causes exceptions to be thrown when calling toString or\n-        // toStringTree.\n-        if (first == null || first.getType() != Token.NAME) {\n-          sb.append(\"<invalid>\");\n-        } else {\n-          sb.append(first.getString());\n-        }\n       } else if (this instanceof ScriptOrFnNode) {\n         ScriptOrFnNode sof = (ScriptOrFnNode) this;\n         if (this instanceof FunctionNode) {\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 101, 
          "faulty": "declaration.remove();", 
          "type": "Delete", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Replace", 
          "seed": "return;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 943, 
          "faulty": "if (first == null || first.getType() != Token.NAME) {\n  sb.append(\"<invalid>\");\n}\n else {\n  sb.append(first.getString());\n}", 
          "type": "Replace", 
          "seed": "sb.append(Token.name(type));"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-01 09:25:47.602554953 -0500\n+++ /tmp/Arja_Defects4J_Closure_67/patches_k844/Patch_715/patched/tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-01 09:39:11.580097512 -0500\n@@ -97,10 +97,7 @@\n             }\n           }\n \n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n+          return;\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n--- /tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-01 09:25:47.626555117 -0500\n+++ /tmp/Arja_Defects4J_Closure_67/patches_k844/Patch_715/patched/tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-01 09:39:11.580097512 -0500\n@@ -937,14 +937,7 @@\n         sb.append(getString());\n       } else if (type == Token.FUNCTION) {\n         sb.append(' ');\n-        // In the case of JsDoc trees, the first child is often not a string\n-        // which causes exceptions to be thrown when calling toString or\n-        // toStringTree.\n-        if (first == null || first.getType() != Token.NAME) {\n-          sb.append(\"<invalid>\");\n-        } else {\n-          sb.append(first.getString());\n-        }\n+        sb.append(Token.name(type));\n       } else if (this instanceof ScriptOrFnNode) {\n         ScriptOrFnNode sof = (ScriptOrFnNode) this;\n         if (this instanceof FunctionNode) {\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 87, 
          "faulty": "if (specializationState == null) {\n  canRemove=true;\n}\n else {\n  Node specializableFunction=getSpecializableFunctionFromSymbol(declaration);\n  if (specializableFunction != null) {\n    specializationState.reportRemovedFunction(specializableFunction,null);\n    canRemove=true;\n  }\n}", 
          "type": "Delete", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 221, 
          "faulty": "return \"synthetic\";", 
          "type": "Delete", 
          "seed": "return \"ENTERWITH\";"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-01 09:25:47.602554953 -0500\n+++ /tmp/Arja_Defects4J_Closure_67/patches_k844/Patch_216/patched/tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-01 09:32:08.725178544 -0500\n@@ -84,19 +84,6 @@\n         for (Symbol declaration : nameInfo.getDeclarations()) {\n           boolean canRemove = false;\n \n-          if (specializationState == null) {\n-            canRemove = true;\n-          } else {\n-            Node specializableFunction =\n-              getSpecializableFunctionFromSymbol(declaration);\n-\n-            if (specializableFunction != null) {\n-              specializationState.reportRemovedFunction(\n-                  specializableFunction, null);\n-              canRemove = true;\n-            }\n-          }\n-\n           if (canRemove) {\n             declaration.remove();\n             changed = true;\n\n\n--- /tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-01 09:25:47.626555117 -0500\n+++ /tmp/Arja_Defects4J_Closure_67/patches_k844/Patch_216/patched/tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-01 09:32:08.725178544 -0500\n@@ -218,7 +218,7 @@\n         case QUOTED_PROP:        return \"quoted\";\n         case OPT_ARG_NAME:       return \"opt_arg\";\n \n-        case SYNTHETIC_BLOCK_PROP: return \"synthetic\";\n+        case SYNTHETIC_BLOCK_PROP: ;\n         case EMPTY_BLOCK:        return \"empty_block\";\n         case ORIGINALNAME_PROP:  return \"originalname\";\n         case SIDE_EFFECT_FLAGS:  return \"side_effect_flags\";\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 88, 
          "faulty": "canRemove=true;", 
          "type": "Replace", 
          "seed": "return;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 221, 
          "faulty": "return \"synthetic\";", 
          "type": "Delete", 
          "seed": "return \"ENTERWITH\";"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-01 09:25:47.602554953 -0500\n+++ /tmp/Arja_Defects4J_Closure_67/patches_k844/Patch_138/patched/tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-01 09:31:32.688930462 -0500\n@@ -85,7 +85,7 @@\n           boolean canRemove = false;\n \n           if (specializationState == null) {\n-            canRemove = true;\n+            return;\n           } else {\n             Node specializableFunction =\n               getSpecializableFunctionFromSymbol(declaration);\n\n\n--- /tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-01 09:25:47.626555117 -0500\n+++ /tmp/Arja_Defects4J_Closure_67/patches_k844/Patch_138/patched/tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-01 09:31:32.688930462 -0500\n@@ -218,7 +218,7 @@\n         case QUOTED_PROP:        return \"quoted\";\n         case OPT_ARG_NAME:       return \"opt_arg\";\n \n-        case SYNTHETIC_BLOCK_PROP: return \"synthetic\";\n+        case SYNTHETIC_BLOCK_PROP: ;\n         case EMPTY_BLOCK:        return \"empty_block\";\n         case ORIGINALNAME_PROP:  return \"originalname\";\n         case SIDE_EFFECT_FLAGS:  return \"side_effect_flags\";\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java", 
          "line": 535, 
          "faulty": "NodeUtil.removeChild(exprNode.getParent(),exprNode);", 
          "type": "Replace", 
          "seed": "return;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Replace", 
          "seed": "return;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 362, 
          "faulty": "return \"ASSIGN\";", 
          "type": "Delete", 
          "seed": "case 4:"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java\t2018-12-01 09:25:49.286566544 -0500\n+++ /tmp/Arja_Defects4J_Closure_67/patches_k844/Patch_768/patched/tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java\t2018-12-01 09:39:41.220302136 -0500\n@@ -532,7 +532,7 @@\n \n     @Override\n     public void remove() {\n-      NodeUtil.removeChild(exprNode.getParent(), exprNode);\n+      return;\n     }\n \n     @Override\n\n\n--- /tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-01 09:25:47.602554953 -0500\n+++ /tmp/Arja_Defects4J_Closure_67/patches_k844/Patch_768/patched/tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-01 09:39:41.224302164 -0500\n@@ -97,10 +97,7 @@\n             }\n           }\n \n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n+          return;\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n--- /tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-01 09:25:47.626555117 -0500\n+++ /tmp/Arja_Defects4J_Closure_67/patches_k844/Patch_768/patched/tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java\t2018-12-01 09:39:41.224302164 -0500\n@@ -359,7 +359,7 @@\n           case LP:              return \"LP\";\n           case RP:              return \"RP\";\n           case COMMA:           return \"COMMA\";\n-          case ASSIGN:          return \"ASSIGN\";\n+          case ASSIGN:          ;\n           case ASSIGN_BITOR:    return \"ASSIGN_BITOR\";\n           case ASSIGN_BITXOR:   return \"ASSIGN_BITXOR\";\n           case ASSIGN_BITAND:   return \"ASSIGN_BITAND\";\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Replace", 
          "seed": "return;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 106, 
          "faulty": "logger.fine(\"Removed unused prototype property: \" + nameInfo.name);", 
          "type": "Replace", 
          "seed": "return;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-01 09:25:47.602554953 -0500\n+++ /tmp/Arja_Defects4J_Closure_67/patches_k844/Patch_187/patched/tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-01 09:31:56.285092903 -0500\n@@ -97,13 +97,10 @@\n             }\n           }\n \n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n+          return;\n         }\n \n-        logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n+        return;\n       }\n     }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Replace", 
          "seed": "return;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 221, 
          "faulty": "return \"synthetic\";", 
          "type": "Delete", 
          "seed": "return \"ENTERWITH\";"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 939, 
          "faulty": "sb.append(' ');", 
          "type": "InsertBefore", 
          "seed": "sb.append(Token.name(type));"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-01 09:25:47.602554953 -0500\n+++ /tmp/Arja_Defects4J_Closure_67/patches_k844/Patch_1151/patched/tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-01 09:44:59.886501992 -0500\n@@ -97,10 +97,7 @@\n             }\n           }\n \n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n+          return;\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n--- /tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-01 09:25:47.626555117 -0500\n+++ /tmp/Arja_Defects4J_Closure_67/patches_k844/Patch_1151/patched/tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java\t2018-12-01 09:44:59.886501992 -0500\n@@ -218,7 +218,7 @@\n         case QUOTED_PROP:        return \"quoted\";\n         case OPT_ARG_NAME:       return \"opt_arg\";\n \n-        case SYNTHETIC_BLOCK_PROP: return \"synthetic\";\n+        case SYNTHETIC_BLOCK_PROP: ;\n         case EMPTY_BLOCK:        return \"empty_block\";\n         case ORIGINALNAME_PROP:  return \"originalname\";\n         case SIDE_EFFECT_FLAGS:  return \"side_effect_flags\";\n@@ -936,7 +936,8 @@\n         sb.append(' ');\n         sb.append(getString());\n       } else if (type == Token.FUNCTION) {\n-        sb.append(' ');\n+        sb.append(Token.name(type));\n+\t\tsb.append(' ');\n         // In the case of JsDoc trees, the first child is often not a string\n         // which causes exceptions to be thrown when calling toString or\n         // toStringTree.\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java", 
          "line": 535, 
          "faulty": "NodeUtil.removeChild(exprNode.getParent(),exprNode);", 
          "type": "Delete", 
          "seed": "return;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 100, 
          "faulty": "if (canRemove) {\n  declaration.remove();\n  changed=true;\n}", 
          "type": "Replace", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 102, 
          "faulty": "changed=true;", 
          "type": "Replace", 
          "seed": "break;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java\t2018-12-01 09:25:49.286566544 -0500\n+++ /tmp/Arja_Defects4J_Closure_67/patches_k844/Patch_1111/patched/tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java\t2018-12-01 09:44:19.854225645 -0500\n@@ -532,7 +532,6 @@\n \n     @Override\n     public void remove() {\n-      NodeUtil.removeChild(exprNode.getParent(), exprNode);\n     }\n \n     @Override\n\n\n--- /tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-01 09:25:47.602554953 -0500\n+++ /tmp/Arja_Defects4J_Closure_67/patches_k844/Patch_1111/patched/tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-01 09:44:19.854225645 -0500\n@@ -97,10 +97,7 @@\n             }\n           }\n \n-          if (canRemove) {\n-            declaration.remove();\n-            changed = true;\n-          }\n+          break;\n         }\n \n         logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 87, 
          "faulty": "if (specializationState == null) {\n  canRemove=true;\n}\n else {\n  Node specializableFunction=getSpecializableFunctionFromSymbol(declaration);\n  if (specializableFunction != null) {\n    specializationState.reportRemovedFunction(specializableFunction,null);\n    canRemove=true;\n  }\n}", 
          "type": "Delete", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 102, 
          "faulty": "changed=true;", 
          "type": "Delete", 
          "seed": "return;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-01 09:25:47.602554953 -0500\n+++ /tmp/Arja_Defects4J_Closure_67/patches_k844/Patch_243/patched/tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-01 09:32:21.973269747 -0500\n@@ -84,22 +84,8 @@\n         for (Symbol declaration : nameInfo.getDeclarations()) {\n           boolean canRemove = false;\n \n-          if (specializationState == null) {\n-            canRemove = true;\n-          } else {\n-            Node specializableFunction =\n-              getSpecializableFunctionFromSymbol(declaration);\n-\n-            if (specializableFunction != null) {\n-              specializationState.reportRemovedFunction(\n-                  specializableFunction, null);\n-              canRemove = true;\n-            }\n-          }\n-\n           if (canRemove) {\n             declaration.remove();\n-            changed = true;\n           }\n         }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java", 
          "line": 535, 
          "faulty": "NodeUtil.removeChild(exprNode.getParent(),exprNode);", 
          "type": "Replace", 
          "seed": "return;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java", 
          "line": 106, 
          "faulty": "logger.fine(\"Removed unused prototype property: \" + nameInfo.name);", 
          "type": "Replace", 
          "seed": "return;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java\t2018-12-01 09:25:49.286566544 -0500\n+++ /tmp/Arja_Defects4J_Closure_67/patches_k844/Patch_120/patched/tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java\t2018-12-01 09:31:22.996863740 -0500\n@@ -532,7 +532,7 @@\n \n     @Override\n     public void remove() {\n-      NodeUtil.removeChild(exprNode.getParent(), exprNode);\n+      return;\n     }\n \n     @Override\n\n\n--- /tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-01 09:25:47.602554953 -0500\n+++ /tmp/Arja_Defects4J_Closure_67/patches_k844/Patch_120/patched/tmp/Arja_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java\t2018-12-01 09:31:22.996863740 -0500\n@@ -103,7 +103,7 @@\n           }\n         }\n \n-        logger.fine(\"Removed unused prototype property: \" + nameInfo.name);\n+        return;\n       }\n     }\n \n\n\n"
    }
  ]
}