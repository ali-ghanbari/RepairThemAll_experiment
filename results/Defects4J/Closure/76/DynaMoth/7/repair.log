cd /tmp/DynaMoth_Defects4J_Closure_76;
export JAVA_TOOL_OPTIONS="-Dfile.encoding=UTF8 -Duser.language=en-US -Duser.country=US -Duser.language=en";
TZ="America/New_York"; export TZ;
export PATH="/usr/lib/jvm/java-1.8.0-openjdk-amd64/bin/:$PATH";
export JAVA_HOME="/usr/lib/jvm/java-1.8.0-openjdk-amd64/bin/";
time java -d64 -Xmx4g -Xms1g -XX:MaxPermSize=1024m -XX:+UseConcMarkSweepGC -XX:+CMSClassUnloadingEnabled -XX:+CMSClassUnloadingEnabled -cp /home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/bin//../lib/tools.jar fr.inria.lille.repair.Main \
	--mode repair \
	--type pre_then_cond \
	--oracle angelic \
	--synthesis dynamoth \
	--flocal gzoltar \
	--json \
	--solver z3 \
	--solver-path /home/tdurieux/defects4j4repair/script/../libs/z3/build/z3 \
	--complianceLevel 6 \
	--source src/ \
	--classpath "build/classes/:build/test/:/tmp/DynaMoth_Defects4J_Closure_76/build/classes:/tmp/DynaMoth_Defects4J_Closure_76/build/test:/tmp/DynaMoth_Defects4J_Closure_76/lib/ant.jar:/tmp/DynaMoth_Defects4J_Closure_76/lib/libtrunk_rhino_parser_jarjared.jar:/tmp/DynaMoth_Defects4J_Closure_76/lib/junit.jar:/tmp/DynaMoth_Defects4J_Closure_76/lib/json.jar:/tmp/DynaMoth_Defects4J_Closure_76/lib/args4j.jar:/tmp/DynaMoth_Defects4J_Closure_76/lib/guava.jar:/tmp/DynaMoth_Defects4J_Closure_76/lib/protobuf-java.jar:/tmp/DynaMoth_Defects4J_Closure_76/lib/jsr305.jar:/tmp/DynaMoth_Defects4J_Closure_76/lib/ant-launcher.jar:/tmp/DynaMoth_Defects4J_Closure_76/lib/caja-r4314.jar:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar";
	echo "\n\nNode: `hostname`\n";
	echo "\n\nDate: `date`\n";
Picked up JAVA_TOOL_OPTIONS: -Dfile.encoding=UTF8 -Duser.language=en-US -Duser.country=US -Duser.language=en
OpenJDK 64-Bit Server VM warning: ignoring option MaxPermSize=1024m; support was removed in 8.0
18:28:21.937 [main] INFO  fr.inria.lille.repair.nopol.NoPol - Source files: [src]
18:28:21.939 [main] INFO  fr.inria.lille.repair.nopol.NoPol - Classpath: [file:/tmp/DynaMoth_Defects4J_Closure_76/build/classes/, file:/tmp/DynaMoth_Defects4J_Closure_76/build/test/, file:/tmp/DynaMoth_Defects4J_Closure_76/build/classes/, file:/tmp/DynaMoth_Defects4J_Closure_76/build/test/, file:/tmp/DynaMoth_Defects4J_Closure_76/lib/ant.jar, file:/tmp/DynaMoth_Defects4J_Closure_76/lib/libtrunk_rhino_parser_jarjared.jar, file:/tmp/DynaMoth_Defects4J_Closure_76/lib/junit.jar, file:/tmp/DynaMoth_Defects4J_Closure_76/lib/json.jar, file:/tmp/DynaMoth_Defects4J_Closure_76/lib/args4j.jar, file:/tmp/DynaMoth_Defects4J_Closure_76/lib/guava.jar, file:/tmp/DynaMoth_Defects4J_Closure_76/lib/protobuf-java.jar, file:/tmp/DynaMoth_Defects4J_Closure_76/lib/jsr305.jar, file:/tmp/DynaMoth_Defects4J_Closure_76/lib/ant-launcher.jar, file:/tmp/DynaMoth_Defects4J_Closure_76/lib/caja-r4314.jar, file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar]
18:28:21.939 [main] INFO  fr.inria.lille.repair.nopol.NoPol - Statement type: PRE_THEN_COND
18:28:21.940 [main] INFO  fr.inria.lille.repair.nopol.NoPol - Args: [com.google.debugging.sourcemap.SourceMapGeneratorV1Test, com.google.debugging.sourcemap.SourceMapGeneratorV1Test, com.google.debugging.sourcemap.SourceMapGeneratorV2Test, com.google.debugging.sourcemap.SourceMapGeneratorV2Test, com.google.javascript.jscomp.AliasExternalsTest, com.google.javascript.jscomp.AliasExternalsTest, com.google.javascript.jscomp.AliasKeywordsTest, com.google.javascript.jscomp.AliasKeywordsTest, com.google.javascript.jscomp.AliasStringsTest, com.google.javascript.jscomp.AliasStringsTest, com.google.javascript.jscomp.AmbiguatePropertiesTest, com.google.javascript.jscomp.AmbiguatePropertiesTest, com.google.javascript.jscomp.AstParallelizerTest, com.google.javascript.jscomp.AstParallelizerTest, com.google.javascript.jscomp.BasicErrorManagerTest, com.google.javascript.jscomp.BasicErrorManagerTest, com.google.javascript.jscomp.CallGraphTest, com.google.javascript.jscomp.CallGraphTest, com.google.javascript.jscomp.ChainCallsTest, com.google.javascript.jscomp.ChainCallsTest, com.google.javascript.jscomp.CheckAccessControlsTest, com.google.javascript.jscomp.CheckAccessControlsTest, com.google.javascript.jscomp.CheckAccidentalSemicolonTest, com.google.javascript.jscomp.CheckAccidentalSemicolonTest, com.google.javascript.jscomp.CheckGlobalNamesTest, com.google.javascript.jscomp.CheckGlobalNamesTest, com.google.javascript.jscomp.CheckGlobalThisTest, com.google.javascript.jscomp.CheckGlobalThisTest, com.google.javascript.jscomp.CheckMissingGetCssNameTest, com.google.javascript.jscomp.CheckMissingGetCssNameTest, com.google.javascript.jscomp.CheckMissingReturnTest, com.google.javascript.jscomp.CheckMissingReturnTest, com.google.javascript.jscomp.CheckPathsBetweenNodesTest, com.google.javascript.jscomp.CheckPathsBetweenNodesTest, com.google.javascript.jscomp.CheckPropertyOrderTest, com.google.javascript.jscomp.CheckPropertyOrderTest, com.google.javascript.jscomp.CheckProvidesTest, com.google.javascript.jscomp.CheckProvidesTest, com.google.javascript.jscomp.CheckRegExpTest, com.google.javascript.jscomp.CheckRegExpTest, com.google.javascript.jscomp.CheckRequiresForConstructorsTest, com.google.javascript.jscomp.CheckRequiresForConstructorsTest, com.google.javascript.jscomp.CheckSideEffectsTest, com.google.javascript.jscomp.CheckSideEffectsTest, com.google.javascript.jscomp.CheckUnreachableCodeTest, com.google.javascript.jscomp.CheckUnreachableCodeTest, com.google.javascript.jscomp.ClosureCodeRemovalTest, com.google.javascript.jscomp.ClosureCodeRemovalTest, com.google.javascript.jscomp.ClosureCodingConventionTest, com.google.javascript.jscomp.ClosureCodingConventionTest, com.google.javascript.jscomp.ClosureReverseAbstractInterpreterTest, com.google.javascript.jscomp.ClosureReverseAbstractInterpreterTest, com.google.javascript.jscomp.CoalesceVariableNamesTest, com.google.javascript.jscomp.CoalesceVariableNamesTest, com.google.javascript.jscomp.CodePrinterTest, com.google.javascript.jscomp.CodePrinterTest, com.google.javascript.jscomp.CollapseAnonymousFunctionsTest, com.google.javascript.jscomp.CollapseAnonymousFunctionsTest, com.google.javascript.jscomp.CollapsePropertiesTest, com.google.javascript.jscomp.CollapsePropertiesTest, com.google.javascript.jscomp.CollapseVariableDeclarationsTest, com.google.javascript.jscomp.CollapseVariableDeclarationsTest, com.google.javascript.jscomp.CombinedCompilerPassTest, com.google.javascript.jscomp.CombinedCompilerPassTest, com.google.javascript.jscomp.CommandLineRunnerTest, com.google.javascript.jscomp.CommandLineRunnerTest, com.google.javascript.jscomp.CompilerOptionsTest, com.google.javascript.jscomp.CompilerOptionsTest, com.google.javascript.jscomp.CompilerTest, com.google.javascript.jscomp.CompilerTest, com.google.javascript.jscomp.ConcreteTypeTest, com.google.javascript.jscomp.ConcreteTypeTest, com.google.javascript.jscomp.ConstCheckTest, com.google.javascript.jscomp.ConstCheckTest, com.google.javascript.jscomp.ControlFlowAnalysisTest, com.google.javascript.jscomp.ControlFlowAnalysisTest, com.google.javascript.jscomp.ControlStructureCheckTest, com.google.javascript.jscomp.ControlStructureCheckTest, com.google.javascript.jscomp.ConvertToDottedPropertiesTest, com.google.javascript.jscomp.ConvertToDottedPropertiesTest, com.google.javascript.jscomp.CreateSyntheticBlocksTest, com.google.javascript.jscomp.CreateSyntheticBlocksTest, com.google.javascript.jscomp.CrossModuleCodeMotionTest, com.google.javascript.jscomp.CrossModuleCodeMotionTest, com.google.javascript.jscomp.CrossModuleMethodMotionTest, com.google.javascript.jscomp.CrossModuleMethodMotionTest, com.google.javascript.jscomp.DataFlowAnalysisTest, com.google.javascript.jscomp.DataFlowAnalysisTest, com.google.javascript.jscomp.DeadAssignmentsEliminationTest, com.google.javascript.jscomp.DeadAssignmentsEliminationTest, com.google.javascript.jscomp.DefaultCodingConventionTest, com.google.javascript.jscomp.DefaultCodingConventionTest, com.google.javascript.jscomp.DefinitionsRemoverTest, com.google.javascript.jscomp.DefinitionsRemoverTest, com.google.javascript.jscomp.DenormalizeTest, com.google.javascript.jscomp.DenormalizeTest, com.google.javascript.jscomp.DevirtualizePrototypeMethodsTest, com.google.javascript.jscomp.DevirtualizePrototypeMethodsTest, com.google.javascript.jscomp.DiagnosticGroupTest, com.google.javascript.jscomp.DiagnosticGroupTest, com.google.javascript.jscomp.DisambiguatePropertiesTest, com.google.javascript.jscomp.DisambiguatePropertiesTest, com.google.javascript.jscomp.DotFormatterTest, com.google.javascript.jscomp.DotFormatterTest, com.google.javascript.jscomp.ExploitAssignsTest, com.google.javascript.jscomp.ExploitAssignsTest, com.google.javascript.jscomp.ExportTestFunctionsTest, com.google.javascript.jscomp.ExportTestFunctionsTest, com.google.javascript.jscomp.ExpressionDecomposerTest, com.google.javascript.jscomp.ExpressionDecomposerTest, com.google.javascript.jscomp.ExternExportsPassTest, com.google.javascript.jscomp.ExternExportsPassTest, com.google.javascript.jscomp.ExtractPrototypeMemberDeclarationsTest, com.google.javascript.jscomp.ExtractPrototypeMemberDeclarationsTest, com.google.javascript.jscomp.FixedPointGraphTraversalTest, com.google.javascript.jscomp.FixedPointGraphTraversalTest, com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest, com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest, com.google.javascript.jscomp.FunctionArgumentInjectorTest, com.google.javascript.jscomp.FunctionArgumentInjectorTest, com.google.javascript.jscomp.FunctionInjectorTest, com.google.javascript.jscomp.FunctionInjectorTest, com.google.javascript.jscomp.FunctionNamesTest, com.google.javascript.jscomp.FunctionNamesTest, com.google.javascript.jscomp.FunctionRewriterTest, com.google.javascript.jscomp.FunctionRewriterTest, com.google.javascript.jscomp.FunctionToBlockMutatorTest, com.google.javascript.jscomp.FunctionToBlockMutatorTest, com.google.javascript.jscomp.FunctionTypeBuilderTest, com.google.javascript.jscomp.FunctionTypeBuilderTest, com.google.javascript.jscomp.GatherRawExportsTest, com.google.javascript.jscomp.GatherRawExportsTest, com.google.javascript.jscomp.GatherSideEffectSubexpressionsCallbackTest, com.google.javascript.jscomp.GatherSideEffectSubexpressionsCallbackTest, com.google.javascript.jscomp.GenerateExportsTest, com.google.javascript.jscomp.GenerateExportsTest, com.google.javascript.jscomp.GlobalNamespaceTest, com.google.javascript.jscomp.GlobalNamespaceTest, com.google.javascript.jscomp.GoogleCodingConventionTest, com.google.javascript.jscomp.GoogleCodingConventionTest, com.google.javascript.jscomp.GroupVariableDeclarationsTest, com.google.javascript.jscomp.GroupVariableDeclarationsTest, com.google.javascript.jscomp.IgnoreCajaPropertiesTest, com.google.javascript.jscomp.IgnoreCajaPropertiesTest, com.google.javascript.jscomp.InferJSDocInfoTest, com.google.javascript.jscomp.InferJSDocInfoTest, com.google.javascript.jscomp.InlineCostEstimatorTest, com.google.javascript.jscomp.InlineCostEstimatorTest, com.google.javascript.jscomp.InlineFunctionsTest, com.google.javascript.jscomp.InlineFunctionsTest, com.google.javascript.jscomp.InlineSimpleMethodsTest, com.google.javascript.jscomp.InlineSimpleMethodsTest, com.google.javascript.jscomp.InlineVariablesConstantsTest, com.google.javascript.jscomp.InlineVariablesConstantsTest, com.google.javascript.jscomp.InlineVariablesTest, com.google.javascript.jscomp.InlineVariablesTest, com.google.javascript.jscomp.InstrumentFunctionsTest, com.google.javascript.jscomp.InstrumentFunctionsTest, com.google.javascript.jscomp.JSCompilerSourceExcerptProviderTest, com.google.javascript.jscomp.JSCompilerSourceExcerptProviderTest, com.google.javascript.jscomp.JSModuleGraphTest, com.google.javascript.jscomp.JSModuleGraphTest, com.google.javascript.jscomp.JSModuleTest, com.google.javascript.jscomp.JSModuleTest, com.google.javascript.jscomp.JsMessageExtractorTest, com.google.javascript.jscomp.JsMessageExtractorTest, com.google.javascript.jscomp.JsMessageTest, com.google.javascript.jscomp.JsMessageTest, com.google.javascript.jscomp.JsMessageVisitorTest, com.google.javascript.jscomp.JsMessageVisitorTest, com.google.javascript.jscomp.LightweightMessageFormatterTest, com.google.javascript.jscomp.LightweightMessageFormatterTest, com.google.javascript.jscomp.LinkedFlowScopeTest, com.google.javascript.jscomp.LinkedFlowScopeTest, com.google.javascript.jscomp.LiveVariableAnalysisTest, com.google.javascript.jscomp.LiveVariableAnalysisTest, com.google.javascript.jscomp.LooseTypeCheckTest, com.google.javascript.jscomp.LooseTypeCheckTest, com.google.javascript.jscomp.MakeDeclaredNamesUniqueTest, com.google.javascript.jscomp.MakeDeclaredNamesUniqueTest, com.google.javascript.jscomp.MarkNoSideEffectCallsTest, com.google.javascript.jscomp.MarkNoSideEffectCallsTest, com.google.javascript.jscomp.MaybeReachingVariableUseTest, com.google.javascript.jscomp.MaybeReachingVariableUseTest, com.google.javascript.jscomp.MemoizedScopeCreatorTest, com.google.javascript.jscomp.MemoizedScopeCreatorTest, com.google.javascript.jscomp.MinimizeExitPointsTest, com.google.javascript.jscomp.MinimizeExitPointsTest, com.google.javascript.jscomp.MoveFunctionDeclarationsTest, com.google.javascript.jscomp.MoveFunctionDeclarationsTest, com.google.javascript.jscomp.MustBeReachingVariableDefTest, com.google.javascript.jscomp.MustBeReachingVariableDefTest, com.google.javascript.jscomp.NameAnalyzerTest, com.google.javascript.jscomp.NameAnalyzerTest, com.google.javascript.jscomp.NameAnonymousFunctionsMappedTest, com.google.javascript.jscomp.NameAnonymousFunctionsMappedTest, com.google.javascript.jscomp.NameAnonymousFunctionsTest, com.google.javascript.jscomp.NameAnonymousFunctionsTest, com.google.javascript.jscomp.NodeIteratorsTest, com.google.javascript.jscomp.NodeIteratorsTest, com.google.javascript.jscomp.NodeTraversalTest, com.google.javascript.jscomp.NodeTraversalTest, com.google.javascript.jscomp.NodeUtilTest, com.google.javascript.jscomp.NodeUtilTest, com.google.javascript.jscomp.NormalizeTest, com.google.javascript.jscomp.NormalizeTest, com.google.javascript.jscomp.ObjectPropertyStringPostprocessTest, com.google.javascript.jscomp.ObjectPropertyStringPostprocessTest, com.google.javascript.jscomp.ObjectPropertyStringPreprocessTest, com.google.javascript.jscomp.ObjectPropertyStringPreprocessTest, com.google.javascript.jscomp.OptimizeArgumentsArrayTest, com.google.javascript.jscomp.OptimizeArgumentsArrayTest, com.google.javascript.jscomp.OptimizeParametersTest, com.google.javascript.jscomp.OptimizeParametersTest, com.google.javascript.jscomp.OptimizeReturnsTest, com.google.javascript.jscomp.OptimizeReturnsTest, com.google.javascript.jscomp.ParallelCompilerPassTest, com.google.javascript.jscomp.ParallelCompilerPassTest, com.google.javascript.jscomp.PeepholeFoldConstantsTest, com.google.javascript.jscomp.PeepholeFoldConstantsTest, com.google.javascript.jscomp.PeepholeFoldWithTypesTest, com.google.javascript.jscomp.PeepholeFoldWithTypesTest, com.google.javascript.jscomp.PeepholeIntegrationTest, com.google.javascript.jscomp.PeepholeIntegrationTest, com.google.javascript.jscomp.PeepholeOptimizationsPassTest, com.google.javascript.jscomp.PeepholeOptimizationsPassTest, com.google.javascript.jscomp.PeepholeRemoveDeadCodeTest, com.google.javascript.jscomp.PeepholeRemoveDeadCodeTest, com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntaxTest, com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntaxTest, com.google.javascript.jscomp.PhaseOptimizerTest, com.google.javascript.jscomp.PhaseOptimizerTest, com.google.javascript.jscomp.PrepareAstTest, com.google.javascript.jscomp.PrepareAstTest, com.google.javascript.jscomp.ProcessClosurePrimitivesTest, com.google.javascript.jscomp.ProcessClosurePrimitivesTest, com.google.javascript.jscomp.ProcessDefinesTest, com.google.javascript.jscomp.ProcessDefinesTest, com.google.javascript.jscomp.ProcessTweaksTest, com.google.javascript.jscomp.ProcessTweaksTest, com.google.javascript.jscomp.PureFunctionIdentifierTest, com.google.javascript.jscomp.PureFunctionIdentifierTest, com.google.javascript.jscomp.RecordFunctionInformationTest, com.google.javascript.jscomp.RecordFunctionInformationTest, com.google.javascript.jscomp.RemoveTryCatchTest, com.google.javascript.jscomp.RemoveTryCatchTest, com.google.javascript.jscomp.RemoveUnusedNamesTest, com.google.javascript.jscomp.RemoveUnusedNamesTest, com.google.javascript.jscomp.RemoveUnusedPrototypePropertiesTest, com.google.javascript.jscomp.RemoveUnusedPrototypePropertiesTest, com.google.javascript.jscomp.RemoveUnusedVarsTest, com.google.javascript.jscomp.RemoveUnusedVarsTest, com.google.javascript.jscomp.RenameLabelsTest, com.google.javascript.jscomp.RenameLabelsTest, com.google.javascript.jscomp.RenameLocalVarsTest, com.google.javascript.jscomp.RenameLocalVarsTest, com.google.javascript.jscomp.RenamePropertiesTest, com.google.javascript.jscomp.RenamePropertiesTest, com.google.javascript.jscomp.RenamePrototypesTest, com.google.javascript.jscomp.RenamePrototypesTest, com.google.javascript.jscomp.RenameVarsTest, com.google.javascript.jscomp.RenameVarsTest, com.google.javascript.jscomp.ReplaceCssNamesTest, com.google.javascript.jscomp.ReplaceCssNamesTest, com.google.javascript.jscomp.ReplaceIdGeneratorsTest, com.google.javascript.jscomp.ReplaceIdGeneratorsTest, com.google.javascript.jscomp.ReplaceMessagesTest, com.google.javascript.jscomp.ReplaceMessagesTest, com.google.javascript.jscomp.ReplaceStringsTest, com.google.javascript.jscomp.ReplaceStringsTest, com.google.javascript.jscomp.RhinoErrorReporterTest, com.google.javascript.jscomp.RhinoErrorReporterTest, com.google.javascript.jscomp.RuntimeTypeCheckTest, com.google.javascript.jscomp.RuntimeTypeCheckTest, com.google.javascript.jscomp.SanityCheckTest, com.google.javascript.jscomp.SanityCheckTest, com.google.javascript.jscomp.ScopedAliasesTest, com.google.javascript.jscomp.ScopedAliasesTest, com.google.javascript.jscomp.SemanticReverseAbstractInterpreterTest, com.google.javascript.jscomp.SemanticReverseAbstractInterpreterTest, com.google.javascript.jscomp.ShadowVariablesTest, com.google.javascript.jscomp.ShadowVariablesTest, com.google.javascript.jscomp.SideEffectsAnalysisTest, com.google.javascript.jscomp.SideEffectsAnalysisTest, com.google.javascript.jscomp.SimpleDefinitionFinderTest, com.google.javascript.jscomp.SimpleDefinitionFinderTest, com.google.javascript.jscomp.SimpleFunctionAliasAnalysisTest, com.google.javascript.jscomp.SimpleFunctionAliasAnalysisTest, com.google.javascript.jscomp.SpecializeModuleTest, com.google.javascript.jscomp.SpecializeModuleTest, com.google.javascript.jscomp.StatementFusionTest, com.google.javascript.jscomp.StatementFusionTest, com.google.javascript.jscomp.StrictModeCheckTest, com.google.javascript.jscomp.StrictModeCheckTest, com.google.javascript.jscomp.StripCodeTest, com.google.javascript.jscomp.StripCodeTest, com.google.javascript.jscomp.SuspiciousPropertiesCheckTest, com.google.javascript.jscomp.SuspiciousPropertiesCheckTest, com.google.javascript.jscomp.SyntacticScopeCreatorTest, com.google.javascript.jscomp.SyntacticScopeCreatorTest, com.google.javascript.jscomp.TightenTypesTest, com.google.javascript.jscomp.TightenTypesTest, com.google.javascript.jscomp.TypeCheckFunctionCheckTest, com.google.javascript.jscomp.TypeCheckFunctionCheckTest, com.google.javascript.jscomp.TypeCheckTest, com.google.javascript.jscomp.TypeCheckTest, com.google.javascript.jscomp.TypeInferenceTest, com.google.javascript.jscomp.TypeInferenceTest, com.google.javascript.jscomp.TypeValidatorTest, com.google.javascript.jscomp.TypeValidatorTest, com.google.javascript.jscomp.TypedScopeCreatorTest, com.google.javascript.jscomp.TypedScopeCreatorTest, com.google.javascript.jscomp.UnfoldCompoundAssignmentsTest, com.google.javascript.jscomp.UnfoldCompoundAssignmentsTest, com.google.javascript.jscomp.UnreachableCodeEliminationTest, com.google.javascript.jscomp.UnreachableCodeEliminationTest, com.google.javascript.jscomp.VarCheckTest, com.google.javascript.jscomp.VarCheckTest, com.google.javascript.jscomp.VariableMapTest, com.google.javascript.jscomp.VariableMapTest, com.google.javascript.jscomp.VariableReferenceCheckTest, com.google.javascript.jscomp.VariableReferenceCheckTest, com.google.javascript.jscomp.VariableShadowDeclarationCheckTest, com.google.javascript.jscomp.VariableShadowDeclarationCheckTest, com.google.javascript.jscomp.VariableVisibilityAnalysisTest, com.google.javascript.jscomp.VariableVisibilityAnalysisTest, com.google.javascript.jscomp.deps.DepsFileParserTest, com.google.javascript.jscomp.deps.DepsFileParserTest, com.google.javascript.jscomp.deps.JsFileLineParserTest, com.google.javascript.jscomp.deps.JsFileLineParserTest, com.google.javascript.jscomp.deps.JsFileParserTest, com.google.javascript.jscomp.deps.JsFileParserTest, com.google.javascript.jscomp.deps.JsFunctionParserTest, com.google.javascript.jscomp.deps.JsFunctionParserTest, com.google.javascript.jscomp.deps.SortedDependenciesTest, com.google.javascript.jscomp.deps.SortedDependenciesTest, com.google.javascript.jscomp.graph.GraphColoringTest, com.google.javascript.jscomp.graph.GraphColoringTest, com.google.javascript.jscomp.graph.GraphReachabilityTest, com.google.javascript.jscomp.graph.GraphReachabilityTest, com.google.javascript.jscomp.graph.GraphTest, com.google.javascript.jscomp.graph.GraphTest, com.google.javascript.jscomp.graph.StandardUnionFindTest, com.google.javascript.jscomp.graph.StandardUnionFindTest, com.google.javascript.jscomp.jsonml.JsonMLConversionTest, com.google.javascript.jscomp.jsonml.JsonMLConversionTest, com.google.javascript.jscomp.jsonml.JsonMLValidationTest, com.google.javascript.jscomp.jsonml.JsonMLValidationTest, com.google.javascript.jscomp.jsonml.SecureCompilerTest, com.google.javascript.jscomp.jsonml.SecureCompilerTest, com.google.javascript.jscomp.parsing.IRFactoryTest, com.google.javascript.jscomp.parsing.IRFactoryTest, com.google.javascript.jscomp.parsing.JsDocInfoParserTest, com.google.javascript.jscomp.parsing.JsDocInfoParserTest, com.google.javascript.jscomp.parsing.JsDocTokenStreamTest, com.google.javascript.jscomp.parsing.JsDocTokenStreamTest, com.google.javascript.jscomp.parsing.ParserTest, com.google.javascript.jscomp.parsing.ParserTest, com.google.javascript.rhino.JSDocInfoTest, com.google.javascript.rhino.JSDocInfoTest, com.google.javascript.rhino.NodeTest, com.google.javascript.rhino.NodeTest, com.google.javascript.rhino.ParserTest, com.google.javascript.rhino.ParserTest, com.google.javascript.rhino.TokenStreamTest, com.google.javascript.rhino.TokenStreamTest, com.google.javascript.rhino.jstype.BooleanLiteralSetTest, com.google.javascript.rhino.jstype.BooleanLiteralSetTest, com.google.javascript.rhino.jstype.FunctionParamBuilderTest, com.google.javascript.rhino.jstype.FunctionParamBuilderTest, com.google.javascript.rhino.jstype.FunctionTypeTest, com.google.javascript.rhino.jstype.FunctionTypeTest, com.google.javascript.rhino.jstype.JSTypeRegistryTest, com.google.javascript.rhino.jstype.JSTypeRegistryTest, com.google.javascript.rhino.jstype.JSTypeTest, com.google.javascript.rhino.jstype.JSTypeTest, com.google.javascript.rhino.jstype.NamedTypeTest, com.google.javascript.rhino.jstype.NamedTypeTest, com.google.javascript.rhino.jstype.TernaryValueTest, com.google.javascript.rhino.jstype.TernaryValueTest, com.google.javascript.rhino.jstype.UnionTypeBuilderTest, com.google.javascript.rhino.jstype.UnionTypeBuilderTest, com.google.javascript.rhino.jstype.UnionTypeTest, com.google.javascript.rhino.jstype.UnionTypeTest]
18:28:21.942 [main] INFO  fr.inria.lille.repair.nopol.NoPol - Config: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=true, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=PRE_THEN_COND, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='/home/tdurieux/defects4j4repair/script/../libs/z3/build/z3', projectSources=[src], projectClasspath='[Ljava.net.URL;@2ff4f00f', projectTests=[com.google.debugging.sourcemap.SourceMapGeneratorV1Test, com.google.debugging.sourcemap.SourceMapGeneratorV1Test, com.google.debugging.sourcemap.SourceMapGeneratorV2Test, com.google.debugging.sourcemap.SourceMapGeneratorV2Test, com.google.javascript.jscomp.AliasExternalsTest, com.google.javascript.jscomp.AliasExternalsTest, com.google.javascript.jscomp.AliasKeywordsTest, com.google.javascript.jscomp.AliasKeywordsTest, com.google.javascript.jscomp.AliasStringsTest, com.google.javascript.jscomp.AliasStringsTest, com.google.javascript.jscomp.AmbiguatePropertiesTest, com.google.javascript.jscomp.AmbiguatePropertiesTest, com.google.javascript.jscomp.AstParallelizerTest, com.google.javascript.jscomp.AstParallelizerTest, com.google.javascript.jscomp.BasicErrorManagerTest, com.google.javascript.jscomp.BasicErrorManagerTest, com.google.javascript.jscomp.CallGraphTest, com.google.javascript.jscomp.CallGraphTest, com.google.javascript.jscomp.ChainCallsTest, com.google.javascript.jscomp.ChainCallsTest, com.google.javascript.jscomp.CheckAccessControlsTest, com.google.javascript.jscomp.CheckAccessControlsTest, com.google.javascript.jscomp.CheckAccidentalSemicolonTest, com.google.javascript.jscomp.CheckAccidentalSemicolonTest, com.google.javascript.jscomp.CheckGlobalNamesTest, com.google.javascript.jscomp.CheckGlobalNamesTest, com.google.javascript.jscomp.CheckGlobalThisTest, com.google.javascript.jscomp.CheckGlobalThisTest, com.google.javascript.jscomp.CheckMissingGetCssNameTest, com.google.javascript.jscomp.CheckMissingGetCssNameTest, com.google.javascript.jscomp.CheckMissingReturnTest, com.google.javascript.jscomp.CheckMissingReturnTest, com.google.javascript.jscomp.CheckPathsBetweenNodesTest, com.google.javascript.jscomp.CheckPathsBetweenNodesTest, com.google.javascript.jscomp.CheckPropertyOrderTest, com.google.javascript.jscomp.CheckPropertyOrderTest, com.google.javascript.jscomp.CheckProvidesTest, com.google.javascript.jscomp.CheckProvidesTest, com.google.javascript.jscomp.CheckRegExpTest, com.google.javascript.jscomp.CheckRegExpTest, com.google.javascript.jscomp.CheckRequiresForConstructorsTest, com.google.javascript.jscomp.CheckRequiresForConstructorsTest, com.google.javascript.jscomp.CheckSideEffectsTest, com.google.javascript.jscomp.CheckSideEffectsTest, com.google.javascript.jscomp.CheckUnreachableCodeTest, com.google.javascript.jscomp.CheckUnreachableCodeTest, com.google.javascript.jscomp.ClosureCodeRemovalTest, com.google.javascript.jscomp.ClosureCodeRemovalTest, com.google.javascript.jscomp.ClosureCodingConventionTest, com.google.javascript.jscomp.ClosureCodingConventionTest, com.google.javascript.jscomp.ClosureReverseAbstractInterpreterTest, com.google.javascript.jscomp.ClosureReverseAbstractInterpreterTest, com.google.javascript.jscomp.CoalesceVariableNamesTest, com.google.javascript.jscomp.CoalesceVariableNamesTest, com.google.javascript.jscomp.CodePrinterTest, com.google.javascript.jscomp.CodePrinterTest, com.google.javascript.jscomp.CollapseAnonymousFunctionsTest, com.google.javascript.jscomp.CollapseAnonymousFunctionsTest, com.google.javascript.jscomp.CollapsePropertiesTest, com.google.javascript.jscomp.CollapsePropertiesTest, com.google.javascript.jscomp.CollapseVariableDeclarationsTest, com.google.javascript.jscomp.CollapseVariableDeclarationsTest, com.google.javascript.jscomp.CombinedCompilerPassTest, com.google.javascript.jscomp.CombinedCompilerPassTest, com.google.javascript.jscomp.CommandLineRunnerTest, com.google.javascript.jscomp.CommandLineRunnerTest, com.google.javascript.jscomp.CompilerOptionsTest, com.google.javascript.jscomp.CompilerOptionsTest, com.google.javascript.jscomp.CompilerTest, com.google.javascript.jscomp.CompilerTest, com.google.javascript.jscomp.ConcreteTypeTest, com.google.javascript.jscomp.ConcreteTypeTest, com.google.javascript.jscomp.ConstCheckTest, com.google.javascript.jscomp.ConstCheckTest, com.google.javascript.jscomp.ControlFlowAnalysisTest, com.google.javascript.jscomp.ControlFlowAnalysisTest, com.google.javascript.jscomp.ControlStructureCheckTest, com.google.javascript.jscomp.ControlStructureCheckTest, com.google.javascript.jscomp.ConvertToDottedPropertiesTest, com.google.javascript.jscomp.ConvertToDottedPropertiesTest, com.google.javascript.jscomp.CreateSyntheticBlocksTest, com.google.javascript.jscomp.CreateSyntheticBlocksTest, com.google.javascript.jscomp.CrossModuleCodeMotionTest, com.google.javascript.jscomp.CrossModuleCodeMotionTest, com.google.javascript.jscomp.CrossModuleMethodMotionTest, com.google.javascript.jscomp.CrossModuleMethodMotionTest, com.google.javascript.jscomp.DataFlowAnalysisTest, com.google.javascript.jscomp.DataFlowAnalysisTest, com.google.javascript.jscomp.DeadAssignmentsEliminationTest, com.google.javascript.jscomp.DeadAssignmentsEliminationTest, com.google.javascript.jscomp.DefaultCodingConventionTest, com.google.javascript.jscomp.DefaultCodingConventionTest, com.google.javascript.jscomp.DefinitionsRemoverTest, com.google.javascript.jscomp.DefinitionsRemoverTest, com.google.javascript.jscomp.DenormalizeTest, com.google.javascript.jscomp.DenormalizeTest, com.google.javascript.jscomp.DevirtualizePrototypeMethodsTest, com.google.javascript.jscomp.DevirtualizePrototypeMethodsTest, com.google.javascript.jscomp.DiagnosticGroupTest, com.google.javascript.jscomp.DiagnosticGroupTest, com.google.javascript.jscomp.DisambiguatePropertiesTest, com.google.javascript.jscomp.DisambiguatePropertiesTest, com.google.javascript.jscomp.DotFormatterTest, com.google.javascript.jscomp.DotFormatterTest, com.google.javascript.jscomp.ExploitAssignsTest, com.google.javascript.jscomp.ExploitAssignsTest, com.google.javascript.jscomp.ExportTestFunctionsTest, com.google.javascript.jscomp.ExportTestFunctionsTest, com.google.javascript.jscomp.ExpressionDecomposerTest, com.google.javascript.jscomp.ExpressionDecomposerTest, com.google.javascript.jscomp.ExternExportsPassTest, com.google.javascript.jscomp.ExternExportsPassTest, com.google.javascript.jscomp.ExtractPrototypeMemberDeclarationsTest, com.google.javascript.jscomp.ExtractPrototypeMemberDeclarationsTest, com.google.javascript.jscomp.FixedPointGraphTraversalTest, com.google.javascript.jscomp.FixedPointGraphTraversalTest, com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest, com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest, com.google.javascript.jscomp.FunctionArgumentInjectorTest, com.google.javascript.jscomp.FunctionArgumentInjectorTest, com.google.javascript.jscomp.FunctionInjectorTest, com.google.javascript.jscomp.FunctionInjectorTest, com.google.javascript.jscomp.FunctionNamesTest, com.google.javascript.jscomp.FunctionNamesTest, com.google.javascript.jscomp.FunctionRewriterTest, com.google.javascript.jscomp.FunctionRewriterTest, com.google.javascript.jscomp.FunctionToBlockMutatorTest, com.google.javascript.jscomp.FunctionToBlockMutatorTest, com.google.javascript.jscomp.FunctionTypeBuilderTest, com.google.javascript.jscomp.FunctionTypeBuilderTest, com.google.javascript.jscomp.GatherRawExportsTest, com.google.javascript.jscomp.GatherRawExportsTest, com.google.javascript.jscomp.GatherSideEffectSubexpressionsCallbackTest, com.google.javascript.jscomp.GatherSideEffectSubexpressionsCallbackTest, com.google.javascript.jscomp.GenerateExportsTest, com.google.javascript.jscomp.GenerateExportsTest, com.google.javascript.jscomp.GlobalNamespaceTest, com.google.javascript.jscomp.GlobalNamespaceTest, com.google.javascript.jscomp.GoogleCodingConventionTest, com.google.javascript.jscomp.GoogleCodingConventionTest, com.google.javascript.jscomp.GroupVariableDeclarationsTest, com.google.javascript.jscomp.GroupVariableDeclarationsTest, com.google.javascript.jscomp.IgnoreCajaPropertiesTest, com.google.javascript.jscomp.IgnoreCajaPropertiesTest, com.google.javascript.jscomp.InferJSDocInfoTest, com.google.javascript.jscomp.InferJSDocInfoTest, com.google.javascript.jscomp.InlineCostEstimatorTest, com.google.javascript.jscomp.InlineCostEstimatorTest, com.google.javascript.jscomp.InlineFunctionsTest, com.google.javascript.jscomp.InlineFunctionsTest, com.google.javascript.jscomp.InlineSimpleMethodsTest, com.google.javascript.jscomp.InlineSimpleMethodsTest, com.google.javascript.jscomp.InlineVariablesConstantsTest, com.google.javascript.jscomp.InlineVariablesConstantsTest, com.google.javascript.jscomp.InlineVariablesTest, com.google.javascript.jscomp.InlineVariablesTest, com.google.javascript.jscomp.InstrumentFunctionsTest, com.google.javascript.jscomp.InstrumentFunctionsTest, com.google.javascript.jscomp.JSCompilerSourceExcerptProviderTest, com.google.javascript.jscomp.JSCompilerSourceExcerptProviderTest, com.google.javascript.jscomp.JSModuleGraphTest, com.google.javascript.jscomp.JSModuleGraphTest, com.google.javascript.jscomp.JSModuleTest, com.google.javascript.jscomp.JSModuleTest, com.google.javascript.jscomp.JsMessageExtractorTest, com.google.javascript.jscomp.JsMessageExtractorTest, com.google.javascript.jscomp.JsMessageTest, com.google.javascript.jscomp.JsMessageTest, com.google.javascript.jscomp.JsMessageVisitorTest, com.google.javascript.jscomp.JsMessageVisitorTest, com.google.javascript.jscomp.LightweightMessageFormatterTest, com.google.javascript.jscomp.LightweightMessageFormatterTest, com.google.javascript.jscomp.LinkedFlowScopeTest, com.google.javascript.jscomp.LinkedFlowScopeTest, com.google.javascript.jscomp.LiveVariableAnalysisTest, com.google.javascript.jscomp.LiveVariableAnalysisTest, com.google.javascript.jscomp.LooseTypeCheckTest, com.google.javascript.jscomp.LooseTypeCheckTest, com.google.javascript.jscomp.MakeDeclaredNamesUniqueTest, com.google.javascript.jscomp.MakeDeclaredNamesUniqueTest, com.google.javascript.jscomp.MarkNoSideEffectCallsTest, com.google.javascript.jscomp.MarkNoSideEffectCallsTest, com.google.javascript.jscomp.MaybeReachingVariableUseTest, com.google.javascript.jscomp.MaybeReachingVariableUseTest, com.google.javascript.jscomp.MemoizedScopeCreatorTest, com.google.javascript.jscomp.MemoizedScopeCreatorTest, com.google.javascript.jscomp.MinimizeExitPointsTest, com.google.javascript.jscomp.MinimizeExitPointsTest, com.google.javascript.jscomp.MoveFunctionDeclarationsTest, com.google.javascript.jscomp.MoveFunctionDeclarationsTest, com.google.javascript.jscomp.MustBeReachingVariableDefTest, com.google.javascript.jscomp.MustBeReachingVariableDefTest, com.google.javascript.jscomp.NameAnalyzerTest, com.google.javascript.jscomp.NameAnalyzerTest, com.google.javascript.jscomp.NameAnonymousFunctionsMappedTest, com.google.javascript.jscomp.NameAnonymousFunctionsMappedTest, com.google.javascript.jscomp.NameAnonymousFunctionsTest, com.google.javascript.jscomp.NameAnonymousFunctionsTest, com.google.javascript.jscomp.NodeIteratorsTest, com.google.javascript.jscomp.NodeIteratorsTest, com.google.javascript.jscomp.NodeTraversalTest, com.google.javascript.jscomp.NodeTraversalTest, com.google.javascript.jscomp.NodeUtilTest, com.google.javascript.jscomp.NodeUtilTest, com.google.javascript.jscomp.NormalizeTest, com.google.javascript.jscomp.NormalizeTest, com.google.javascript.jscomp.ObjectPropertyStringPostprocessTest, com.google.javascript.jscomp.ObjectPropertyStringPostprocessTest, com.google.javascript.jscomp.ObjectPropertyStringPreprocessTest, com.google.javascript.jscomp.ObjectPropertyStringPreprocessTest, com.google.javascript.jscomp.OptimizeArgumentsArrayTest, com.google.javascript.jscomp.OptimizeArgumentsArrayTest, com.google.javascript.jscomp.OptimizeParametersTest, com.google.javascript.jscomp.OptimizeParametersTest, com.google.javascript.jscomp.OptimizeReturnsTest, com.google.javascript.jscomp.OptimizeReturnsTest, com.google.javascript.jscomp.ParallelCompilerPassTest, com.google.javascript.jscomp.ParallelCompilerPassTest, com.google.javascript.jscomp.PeepholeFoldConstantsTest, com.google.javascript.jscomp.PeepholeFoldConstantsTest, com.google.javascript.jscomp.PeepholeFoldWithTypesTest, com.google.javascript.jscomp.PeepholeFoldWithTypesTest, com.google.javascript.jscomp.PeepholeIntegrationTest, com.google.javascript.jscomp.PeepholeIntegrationTest, com.google.javascript.jscomp.PeepholeOptimizationsPassTest, com.google.javascript.jscomp.PeepholeOptimizationsPassTest, com.google.javascript.jscomp.PeepholeRemoveDeadCodeTest, com.google.javascript.jscomp.PeepholeRemoveDeadCodeTest, com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntaxTest, com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntaxTest, com.google.javascript.jscomp.PhaseOptimizerTest, com.google.javascript.jscomp.PhaseOptimizerTest, com.google.javascript.jscomp.PrepareAstTest, com.google.javascript.jscomp.PrepareAstTest, com.google.javascript.jscomp.ProcessClosurePrimitivesTest, com.google.javascript.jscomp.ProcessClosurePrimitivesTest, com.google.javascript.jscomp.ProcessDefinesTest, com.google.javascript.jscomp.ProcessDefinesTest, com.google.javascript.jscomp.ProcessTweaksTest, com.google.javascript.jscomp.ProcessTweaksTest, com.google.javascript.jscomp.PureFunctionIdentifierTest, com.google.javascript.jscomp.PureFunctionIdentifierTest, com.google.javascript.jscomp.RecordFunctionInformationTest, com.google.javascript.jscomp.RecordFunctionInformationTest, com.google.javascript.jscomp.RemoveTryCatchTest, com.google.javascript.jscomp.RemoveTryCatchTest, com.google.javascript.jscomp.RemoveUnusedNamesTest, com.google.javascript.jscomp.RemoveUnusedNamesTest, com.google.javascript.jscomp.RemoveUnusedPrototypePropertiesTest, com.google.javascript.jscomp.RemoveUnusedPrototypePropertiesTest, com.google.javascript.jscomp.RemoveUnusedVarsTest, com.google.javascript.jscomp.RemoveUnusedVarsTest, com.google.javascript.jscomp.RenameLabelsTest, com.google.javascript.jscomp.RenameLabelsTest, com.google.javascript.jscomp.RenameLocalVarsTest, com.google.javascript.jscomp.RenameLocalVarsTest, com.google.javascript.jscomp.RenamePropertiesTest, com.google.javascript.jscomp.RenamePropertiesTest, com.google.javascript.jscomp.RenamePrototypesTest, com.google.javascript.jscomp.RenamePrototypesTest, com.google.javascript.jscomp.RenameVarsTest, com.google.javascript.jscomp.RenameVarsTest, com.google.javascript.jscomp.ReplaceCssNamesTest, com.google.javascript.jscomp.ReplaceCssNamesTest, com.google.javascript.jscomp.ReplaceIdGeneratorsTest, com.google.javascript.jscomp.ReplaceIdGeneratorsTest, com.google.javascript.jscomp.ReplaceMessagesTest, com.google.javascript.jscomp.ReplaceMessagesTest, com.google.javascript.jscomp.ReplaceStringsTest, com.google.javascript.jscomp.ReplaceStringsTest, com.google.javascript.jscomp.RhinoErrorReporterTest, com.google.javascript.jscomp.RhinoErrorReporterTest, com.google.javascript.jscomp.RuntimeTypeCheckTest, com.google.javascript.jscomp.RuntimeTypeCheckTest, com.google.javascript.jscomp.SanityCheckTest, com.google.javascript.jscomp.SanityCheckTest, com.google.javascript.jscomp.ScopedAliasesTest, com.google.javascript.jscomp.ScopedAliasesTest, com.google.javascript.jscomp.SemanticReverseAbstractInterpreterTest, com.google.javascript.jscomp.SemanticReverseAbstractInterpreterTest, com.google.javascript.jscomp.ShadowVariablesTest, com.google.javascript.jscomp.ShadowVariablesTest, com.google.javascript.jscomp.SideEffectsAnalysisTest, com.google.javascript.jscomp.SideEffectsAnalysisTest, com.google.javascript.jscomp.SimpleDefinitionFinderTest, com.google.javascript.jscomp.SimpleDefinitionFinderTest, com.google.javascript.jscomp.SimpleFunctionAliasAnalysisTest, com.google.javascript.jscomp.SimpleFunctionAliasAnalysisTest, com.google.javascript.jscomp.SpecializeModuleTest, com.google.javascript.jscomp.SpecializeModuleTest, com.google.javascript.jscomp.StatementFusionTest, com.google.javascript.jscomp.StatementFusionTest, com.google.javascript.jscomp.StrictModeCheckTest, com.google.javascript.jscomp.StrictModeCheckTest, com.google.javascript.jscomp.StripCodeTest, com.google.javascript.jscomp.StripCodeTest, com.google.javascript.jscomp.SuspiciousPropertiesCheckTest, com.google.javascript.jscomp.SuspiciousPropertiesCheckTest, com.google.javascript.jscomp.SyntacticScopeCreatorTest, com.google.javascript.jscomp.SyntacticScopeCreatorTest, com.google.javascript.jscomp.TightenTypesTest, com.google.javascript.jscomp.TightenTypesTest, com.google.javascript.jscomp.TypeCheckFunctionCheckTest, com.google.javascript.jscomp.TypeCheckFunctionCheckTest, com.google.javascript.jscomp.TypeCheckTest, com.google.javascript.jscomp.TypeCheckTest, com.google.javascript.jscomp.TypeInferenceTest, com.google.javascript.jscomp.TypeInferenceTest, com.google.javascript.jscomp.TypeValidatorTest, com.google.javascript.jscomp.TypeValidatorTest, com.google.javascript.jscomp.TypedScopeCreatorTest, com.google.javascript.jscomp.TypedScopeCreatorTest, com.google.javascript.jscomp.UnfoldCompoundAssignmentsTest, com.google.javascript.jscomp.UnfoldCompoundAssignmentsTest, com.google.javascript.jscomp.UnreachableCodeEliminationTest, com.google.javascript.jscomp.UnreachableCodeEliminationTest, com.google.javascript.jscomp.VarCheckTest, com.google.javascript.jscomp.VarCheckTest, com.google.javascript.jscomp.VariableMapTest, com.google.javascript.jscomp.VariableMapTest, com.google.javascript.jscomp.VariableReferenceCheckTest, com.google.javascript.jscomp.VariableReferenceCheckTest, com.google.javascript.jscomp.VariableShadowDeclarationCheckTest, com.google.javascript.jscomp.VariableShadowDeclarationCheckTest, com.google.javascript.jscomp.VariableVisibilityAnalysisTest, com.google.javascript.jscomp.VariableVisibilityAnalysisTest, com.google.javascript.jscomp.deps.DepsFileParserTest, com.google.javascript.jscomp.deps.DepsFileParserTest, com.google.javascript.jscomp.deps.JsFileLineParserTest, com.google.javascript.jscomp.deps.JsFileLineParserTest, com.google.javascript.jscomp.deps.JsFileParserTest, com.google.javascript.jscomp.deps.JsFileParserTest, com.google.javascript.jscomp.deps.JsFunctionParserTest, com.google.javascript.jscomp.deps.JsFunctionParserTest, com.google.javascript.jscomp.deps.SortedDependenciesTest, com.google.javascript.jscomp.deps.SortedDependenciesTest, com.google.javascript.jscomp.graph.GraphColoringTest, com.google.javascript.jscomp.graph.GraphColoringTest, com.google.javascript.jscomp.graph.GraphReachabilityTest, com.google.javascript.jscomp.graph.GraphReachabilityTest, com.google.javascript.jscomp.graph.GraphTest, com.google.javascript.jscomp.graph.GraphTest, com.google.javascript.jscomp.graph.StandardUnionFindTest, com.google.javascript.jscomp.graph.StandardUnionFindTest, com.google.javascript.jscomp.jsonml.JsonMLConversionTest, com.google.javascript.jscomp.jsonml.JsonMLConversionTest, com.google.javascript.jscomp.jsonml.JsonMLValidationTest, com.google.javascript.jscomp.jsonml.JsonMLValidationTest, com.google.javascript.jscomp.jsonml.SecureCompilerTest, com.google.javascript.jscomp.jsonml.SecureCompilerTest, com.google.javascript.jscomp.parsing.IRFactoryTest, com.google.javascript.jscomp.parsing.IRFactoryTest, com.google.javascript.jscomp.parsing.JsDocInfoParserTest, com.google.javascript.jscomp.parsing.JsDocInfoParserTest, com.google.javascript.jscomp.parsing.JsDocTokenStreamTest, com.google.javascript.jscomp.parsing.JsDocTokenStreamTest, com.google.javascript.jscomp.parsing.ParserTest, com.google.javascript.jscomp.parsing.ParserTest, com.google.javascript.rhino.JSDocInfoTest, com.google.javascript.rhino.JSDocInfoTest, com.google.javascript.rhino.NodeTest, com.google.javascript.rhino.NodeTest, com.google.javascript.rhino.ParserTest, com.google.javascript.rhino.ParserTest, com.google.javascript.rhino.TokenStreamTest, com.google.javascript.rhino.TokenStreamTest, com.google.javascript.rhino.jstype.BooleanLiteralSetTest, com.google.javascript.rhino.jstype.BooleanLiteralSetTest, com.google.javascript.rhino.jstype.FunctionParamBuilderTest, com.google.javascript.rhino.jstype.FunctionParamBuilderTest, com.google.javascript.rhino.jstype.FunctionTypeTest, com.google.javascript.rhino.jstype.FunctionTypeTest, com.google.javascript.rhino.jstype.JSTypeRegistryTest, com.google.javascript.rhino.jstype.JSTypeRegistryTest, com.google.javascript.rhino.jstype.JSTypeTest, com.google.javascript.rhino.jstype.JSTypeTest, com.google.javascript.rhino.jstype.NamedTypeTest, com.google.javascript.rhino.jstype.NamedTypeTest, com.google.javascript.rhino.jstype.TernaryValueTest, com.google.javascript.rhino.jstype.TernaryValueTest, com.google.javascript.rhino.jstype.UnionTypeBuilderTest, com.google.javascript.rhino.jstype.UnionTypeBuilderTest, com.google.javascript.rhino.jstype.UnionTypeTest, com.google.javascript.rhino.jstype.UnionTypeTest], complianceLevel=6, outputFolder=., json=true}
18:28:21.942 [main] INFO  fr.inria.lille.repair.nopol.NoPol - Available processors (cores): 32
18:28:21.946 [main] INFO  fr.inria.lille.repair.nopol.NoPol - Free memory: 891 MB
18:28:21.947 [main] INFO  fr.inria.lille.repair.nopol.NoPol - Maximum memory: 3 GB
18:28:21.947 [main] INFO  fr.inria.lille.repair.nopol.NoPol - Total memory available to JVM: 989 MB
18:28:21.947 [main] INFO  fr.inria.lille.repair.nopol.NoPol - Java version: 1.8.0_181
18:28:21.948 [main] INFO  fr.inria.lille.repair.nopol.NoPol - JAVA_HOME: /usr/lib/jvm/java-1.8.0-openjdk-amd64/bin/
18:28:21.948 [main] INFO  fr.inria.lille.repair.nopol.NoPol - PATH: /usr/lib/jvm/java-1.8.0-openjdk-amd64/bin/:/usr/lib/oar/oardodo:/usr/lib/oar/oardodo:/usr/local/bin:/usr/bin:/bin:/usr/games
18:29:20.879 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #1
18:29:20.880 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.google.javascript.rhino.Node:1411 which is executed by 7 tests
2433571
18:29:21.232 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_stubMap=[];function JSCompiler_stubMethod(JSCompiler_stubMethod_id){return function(){return JSCompiler_stubMap[JSCompiler_stubMethod_id].apply(this,arguments)}}function JSCompiler_unstubMethod(JSCompiler_unstubMethod_id,JSCompiler_unstubMethod_body){return JSCompiler_stubMap[JSCompiler_unstubMethod_id]=JSCompiler_unstubMethod_body}function Foo(){}Foo.prototype.baz=JSCompiler_stubMethod(1);Foo.prototype.callBaz=JSCompiler_stubMethod(0);Foo.prototype.baz=JSCompiler_unstubMethod(1,function(){});
Foo.prototype.callBaz=JSCompiler_unstubMethod(0,function(){this.baz()});(new Foo).callBaz()
Result: var JSCompiler_stubMap=[];function JSCompiler_stubMethod(JSCompiler_stubMethod_id){return function(){return JSCompiler_stubMap[JSCompiler_stubMethod_id].apply(this,arguments)}}function JSCompiler_unstubMethod(JSCompiler_unstubMethod_id,JSCompiler_unstubMethod_body){return JSCompiler_stubMap[JSCompiler_unstubMethod_id]=JSCompiler_unstubMethod_body}function Foo(){}Foo.prototype.baz=JSCompiler_stubMethod(0);Foo.prototype.callBaz=JSCompiler_stubMethod(1);
Foo.prototype.callBaz=JSCompiler_unstubMethod(1,function(){this.baz()});Foo.prototype.baz=JSCompiler_unstubMethod(0,function(){});(new Foo).callBaz()
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_stubMap 1 [sourcename: expected0]
                ARRAYLIT 1 [sourcename: expected0]
        FUNCTION  1 [sourcename: expected0]
            NAME JSCompiler_stubMethod 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
                NAME JSCompiler_stubMethod_id 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                RETURN 1 [sourcename: expected0]
                    FUNCTION  1 [sourcename: expected0]
                        NAME  1 [sourcename: expected0]
                        LP 1 [sourcename: expected0]
                        BLOCK 1 [sourcename: expected0]
                            RETURN 1 [sourcename: expected0]
                                CALL 1 [sourcename: expected0]
                                    GETPROP 1 [sourcename: expected0]
                                        GETELEM 1 [sourcename: expected0]
                                            NAME JSCompiler_stubMap 1 [sourcename: expected0]
                                            NAME JSCompiler_stubMethod_id 1 [sourcename: expected0]
                                        STRING apply 1 [sourcename: expected0]
                                    THIS 1 [sourcename: expected0]
                                    NAME arguments 1 [sourcename: expected0]
        FUNCTION  1 [sourcename: expected0]
            NAME JSCompiler_unstubMethod 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
                NAME JSCompiler_unstubMethod_id 1 [sourcename: expected0]
                NAME JSCompiler_unstubMethod_body 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                RETURN 1 [sourcename: expected0]
                    ASSIGN 1 [sourcename: expected0]
                        GETELEM 1 [sourcename: expected0]
                            NAME JSCompiler_stubMap 1 [sourcename: expected0]
                            NAME JSCompiler_unstubMethod_id 1 [sourcename: expected0]
                        NAME JSCompiler_unstubMethod_body 1 [sourcename: expected0]
        FUNCTION  1 [sourcename: expected0]
            NAME Foo 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            ASSIGN 1 [sourcename: expected0]
                GETPROP 1 [sourcename: expected0]
                    GETPROP 1 [sourcename: expected0]
                        NAME Foo 1 [sourcename: expected0]
                        STRING prototype 1 [sourcename: expected0]
                    STRING baz 1 [sourcename: expected0]
                CALL 1 [sourcename: expected0] [free_call: 1]
                    NAME JSCompiler_stubMethod 1 [sourcename: expected0]
                    NUMBER 1.0 1 [sourcename: expected0]
    SCRIPT 1 [sourcename: expected1] [synthetic: 1]
        EXPR_RESULT 1 [sourcename: expected1]
            ASSIGN 1 [sourcename: expected1]
                GETPROP 1 [sourcename: expected1]
                    GETPROP 1 [sourcename: expected1]
                        NAME Foo 1 [sourcename: expected1]
                        STRING prototype 1 [sourcename: expected1]
                    STRING callBaz 1 [sourcename: expected1]
                CALL 1 [sourcename: expected1] [free_call: 1]
                    NAME JSCompiler_stubMethod 1 [sourcename: expected1]
                    NUMBER 0.0 1 [sourcename: expected1]
    SCRIPT 1 [sourcename: expected2] [synthetic: 1]
        EXPR_RESULT 1 [sourcename: expected2]
            ASSIGN 1 [sourcename: expected2]
                GETPROP 1 [sourcename: expected2]
                    GETPROP 1 [sourcename: expected2]
                        NAME Foo 1 [sourcename: expected2]
                        STRING prototype 1 [sourcename: expected2]
                    STRING baz 1 [sourcename: expected2]
                CALL 1 [sourcename: expected2] [free_call: 1]
                    NAME JSCompiler_unstubMethod 1 [sourcename: expected2]
                    NUMBER 1.0 1 [sourcename: expected2]
                    FUNCTION  1 [sourcename: expected2]
                        NAME  1 [sourcename: expected2]
                        LP 1 [sourcename: expected2]
                        BLOCK 1 [sourcename: expected2]
        EXPR_RESULT 1 [sourcename: expected2]
            ASSIGN 1 [sourcename: expected2]
                GETPROP 1 [sourcename: expected2]
                    GETPROP 1 [sourcename: expected2]
                        NAME Foo 1 [sourcename: expected2]
                        STRING prototype 1 [sourcename: expected2]
                    STRING callBaz 1 [sourcename: expected2]
                CALL 1 [sourcename: expected2] [free_call: 1]
                    NAME JSCompiler_unstubMethod 1 [sourcename: expected2]
                    NUMBER 0.0 1 [sourcename: expected2]
                    FUNCTION  1 [sourcename: expected2]
                        NAME  1 [sourcename: expected2]
                        LP 1 [sourcename: expected2]
                        BLOCK 1 [sourcename: expected2]
                            EXPR_RESULT 1 [sourcename: expected2]
                                CALL 1 [sourcename: expected2]
                                    GETPROP 1 [sourcename: expected2]
                                        THIS 1 [sourcename: expected2]
                                        STRING baz 1 [sourcename: expected2]
        EXPR_RESULT 1 [sourcename: expected2]
            CALL 1 [sourcename: expected2]
                GETPROP 1 [sourcename: expected2]
                    NEW 1 [sourcename: expected2] [parenthesized: true]
                        NAME Foo 1 [sourcename: expected2]
                    STRING callBaz 1 [sourcename: expected2]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: i0] [synthetic: 1]
        VAR 1 [sourcename:  [synthetic] ]
            NAME JSCompiler_stubMap 1 [sourcename:  [synthetic] ]
                ARRAYLIT 1 [sourcename:  [synthetic] ]
        FUNCTION  1 [sourcename:  [synthetic] ]
            NAME JSCompiler_stubMethod 1 [sourcename:  [synthetic] ]
            LP 1 [sourcename:  [synthetic] ]
                NAME JSCompiler_stubMethod_id 1 [sourcename:  [synthetic] ]
            BLOCK 1 [sourcename:  [synthetic] ]
                RETURN 1 [sourcename:  [synthetic] ]
                    FUNCTION  1 [sourcename:  [synthetic] ]
                        NAME  1 [sourcename:  [synthetic] ]
                        LP 1 [sourcename:  [synthetic] ]
                        BLOCK 1 [sourcename:  [synthetic] ]
                            RETURN 1 [sourcename:  [synthetic] ]
                                CALL 1 [sourcename:  [synthetic] ]
                                    GETPROP 1 [sourcename:  [synthetic] ]
                                        GETELEM 1 [sourcename:  [synthetic] ]
                                            NAME JSCompiler_stubMap 1 [sourcename:  [synthetic] ]
                                            NAME JSCompiler_stubMethod_id 1 [sourcename:  [synthetic] ]
                                        STRING apply 1 [sourcename:  [synthetic] ]
                                    THIS 1 [sourcename:  [synthetic] ]
                                    NAME arguments 1 [sourcename:  [synthetic] ]
        FUNCTION  1 [sourcename:  [synthetic] ]
            NAME JSCompiler_unstubMethod 1 [sourcename:  [synthetic] ]
            LP 1 [sourcename:  [synthetic] ]
                NAME JSCompiler_unstubMethod_id 1 [sourcename:  [synthetic] ]
                NAME JSCompiler_unstubMethod_body 1 [sourcename:  [synthetic] ]
            BLOCK 1 [sourcename:  [synthetic] ]
                RETURN 1 [sourcename:  [synthetic] ]
                    ASSIGN 1 [sourcename:  [synthetic] ]
                        GETELEM 1 [sourcename:  [synthetic] ]
                            NAME JSCompiler_stubMap 1 [sourcename:  [synthetic] ]
                            NAME JSCompiler_unstubMethod_id 1 [sourcename:  [synthetic] ]
                        NAME JSCompiler_unstubMethod_body 1 [sourcename:  [synthetic] ]
        FUNCTION  1 [sourcename: i0]
            NAME Foo 1 [sourcename: i0]
            LP 1 [sourcename: i0]
            BLOCK 1 [sourcename: i0]
        EXPR_RESULT 1 [sourcename: i0]
            ASSIGN 1 [sourcename: i0]
                GETPROP 1 [sourcename: i0]
                    GETPROP 1 [sourcename: i0]
                        NAME Foo 1 [sourcename: i0]
                        STRING prototype 1 [sourcename: i0]
                    STRING baz 1 [sourcename: i0]
                CALL 1 [sourcename: i0]
                    NAME JSCompiler_stubMethod 1 [sourcename: i0]
                    NUMBER 0.0 1 [sourcename: i0]
    SCRIPT 1 [sourcename: i1] [synthetic: 1]
        EXPR_RESULT 1 [sourcename: i1]
            ASSIGN 1 [sourcename: i1]
                GETPROP 1 [sourcename: i1]
                    GETPROP 1 [sourcename: i1]
                        NAME Foo 1 [sourcename: i1]
                        STRING prototype 1 [sourcename: i1]
                    STRING callBaz 1 [sourcename: i1]
                CALL 1 [sourcename: i1]
                    NAME JSCompiler_stubMethod 1 [sourcename: i1]
                    NUMBER 1.0 1 [sourcename: i1]
    SCRIPT 1 [sourcename: i2] [synthetic: 1]
        EXPR_RESULT 1 [sourcename: i1]
            ASSIGN 1 [sourcename: i1]
                GETPROP 1 [sourcename: i1]
                    GETPROP 1 [sourcename: i1]
                        NAME Foo 1 [sourcename: i1]
                        STRING prototype 1 [sourcename: i1]
                    STRING callBaz 1 [sourcename: i1]
                CALL 1 [sourcename: i1]
                    NAME JSCompiler_unstubMethod 1 [sourcename: i1]
                    NUMBER 1.0 1 [sourcename: i1]
                    FUNCTION  1 [sourcename: i1]
                        NAME  1 [sourcename: i1]
                        LP 1 [sourcename: i1]
                        BLOCK 1 [sourcename: i1]
                            EXPR_RESULT 1 [sourcename: i1]
                                CALL 1 [sourcename: i1]
                                    GETPROP 1 [sourcename: i1]
                                        THIS 1 [sourcename: i1]
                                        STRING baz 1 [sourcename: i1]
        EXPR_RESULT 1 [sourcename: i0]
            ASSIGN 1 [sourcename: i0]
                GETPROP 1 [sourcename: i0]
                    GETPROP 1 [sourcename: i0]
                        NAME Foo 1 [sourcename: i0]
                        STRING prototype 1 [sourcename: i0]
                    STRING baz 1 [sourcename: i0]
                CALL 1 [sourcename: i0]
                    NAME JSCompiler_unstubMethod 1 [sourcename: i0]
                    NUMBER 0.0 1 [sourcename: i0]
                    FUNCTION  1 [sourcename: i0]
                        NAME  1 [sourcename: i0]
                        LP 1 [sourcename: i0]
                        BLOCK 1 [sourcename: i0]
        EXPR_RESULT 1 [sourcename: i2]
            CALL 1 [sourcename: i2]
                GETPROP 1 [sourcename: i2]
                    NEW 1 [sourcename: i2] [parenthesized: true]
                        NAME Foo 1 [sourcename: i2]
                    STRING callBaz 1 [sourcename: i2]


Subtree1: NUMBER 1.0 1 [sourcename: expected0]


Subtree2: NUMBER 0.0 1 [sourcename: i0]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:843)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:679)
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_stubMap=[];function JSCompiler_stubMethod(JSCompiler_stubMethod_id){return function(){return JSCompiler_stubMap[JSCompiler_stubMethod_id].apply(this,arguments)}}function JSCompiler_unstubMethod(JSCompiler_unstubMethod_id,JSCompiler_unstubMethod_body){return JSCompiler_stubMap[JSCompiler_unstubMethod_id]=JSCompiler_unstubMethod_body}function Foo(){}Foo.prototype.b1=JSCompiler_stubMethod(0);Foo.prototype.b1=JSCompiler_unstubMethod(0,function(){Foo.prototype.b2=JSCompiler_stubMethod(1)});
var y=new Foo;y.b1();Foo.prototype.b2=JSCompiler_unstubMethod(1,function(){var x=1;Foo.prototype.b3=function(){x}});y=new Foo;z.b2();y=new Foo;z.b3()
Result: var JSCompiler_stubMap=[];function JSCompiler_stubMethod(JSCompiler_stubMethod_id){return function(){return JSCompiler_stubMap[JSCompiler_stubMethod_id].apply(this,arguments)}}function JSCompiler_unstubMethod(JSCompiler_unstubMethod_id,JSCompiler_unstubMethod_body){return JSCompiler_stubMap[JSCompiler_unstubMethod_id]=JSCompiler_unstubMethod_body}function Foo(){}Foo.prototype.b1=JSCompiler_stubMethod(1);Foo.prototype.b1=JSCompiler_unstubMethod(1,function(){Foo.prototype.b2=JSCompiler_stubMethod(0)});
var y=new Foo;y.b1();Foo.prototype.b2=JSCompiler_unstubMethod(0,function(){var x=1;Foo.prototype.b3=function(){x}});y=new Foo;z.b2();y=new Foo;z.b3()
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_stubMap 1 [sourcename: expected0]
                ARRAYLIT 1 [sourcename: expected0]
        FUNCTION  1 [sourcename: expected0]
            NAME JSCompiler_stubMethod 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
                NAME JSCompiler_stubMethod_id 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                RETURN 1 [sourcename: expected0]
                    FUNCTION  1 [sourcename: expected0]
                        NAME  1 [sourcename: expected0]
                        LP 1 [sourcename: expected0]
                        BLOCK 1 [sourcename: expected0]
                            RETURN 1 [sourcename: expected0]
                                CALL 1 [sourcename: expected0]
                                    GETPROP 1 [sourcename: expected0]
                                        GETELEM 1 [sourcename: expected0]
                                            NAME JSCompiler_stubMap 1 [sourcename: expected0]
                                            NAME JSCompiler_stubMethod_id 1 [sourcename: expected0]
                                        STRING apply 1 [sourcename: expected0]
                                    THIS 1 [sourcename: expected0]
                                    NAME arguments 1 [sourcename: expected0]
        FUNCTION  1 [sourcename: expected0]
            NAME JSCompiler_unstubMethod 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
                NAME JSCompiler_unstubMethod_id 1 [sourcename: expected0]
                NAME JSCompiler_unstubMethod_body 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                RETURN 1 [sourcename: expected0]
                    ASSIGN 1 [sourcename: expected0]
                        GETELEM 1 [sourcename: expected0]
                            NAME JSCompiler_stubMap 1 [sourcename: expected0]
                            NAME JSCompiler_unstubMethod_id 1 [sourcename: expected0]
                        NAME JSCompiler_unstubMethod_body 1 [sourcename: expected0]
        FUNCTION  1 [sourcename: expected0]
            NAME Foo 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            ASSIGN 1 [sourcename: expected0]
                GETPROP 1 [sourcename: expected0]
                    GETPROP 1 [sourcename: expected0]
                        NAME Foo 1 [sourcename: expected0]
                        STRING prototype 1 [sourcename: expected0]
                    STRING b1 1 [sourcename: expected0]
                CALL 1 [sourcename: expected0] [free_call: 1]
                    NAME JSCompiler_stubMethod 1 [sourcename: expected0]
                    NUMBER 0.0 1 [sourcename: expected0]
    SCRIPT 1 [sourcename: expected1] [synthetic: 1]
        EXPR_RESULT 1 [sourcename: expected1]
            ASSIGN 1 [sourcename: expected1]
                GETPROP 1 [sourcename: expected1]
                    GETPROP 1 [sourcename: expected1]
                        NAME Foo 1 [sourcename: expected1]
                        STRING prototype 1 [sourcename: expected1]
                    STRING b1 1 [sourcename: expected1]
                CALL 1 [sourcename: expected1] [free_call: 1]
                    NAME JSCompiler_unstubMethod 1 [sourcename: expected1]
                    NUMBER 0.0 1 [sourcename: expected1]
                    FUNCTION  1 [sourcename: expected1]
                        NAME  1 [sourcename: expected1]
                        LP 1 [sourcename: expected1]
                        BLOCK 1 [sourcename: expected1]
                            EXPR_RESULT 1 [sourcename: expected1]
                                ASSIGN 1 [sourcename: expected1]
                                    GETPROP 1 [sourcename: expected1]
                                        GETPROP 1 [sourcename: expected1]
                                            NAME Foo 1 [sourcename: expected1]
                                            STRING prototype 1 [sourcename: expected1]
                                        STRING b2 1 [sourcename: expected1]
                                    CALL 1 [sourcename: expected1] [free_call: 1]
                                        NAME JSCompiler_stubMethod 1 [sourcename: expected1]
                                        NUMBER 1.0 1 [sourcename: expected1]
        VAR 1 [sourcename: expected1]
            NAME y 1 [sourcename: expected1]
                NEW 1 [sourcename: expected1]
                    NAME Foo 1 [sourcename: expected1]
        EXPR_RESULT 1 [sourcename: expected1]
            CALL 1 [sourcename: expected1]
                GETPROP 1 [sourcename: expected1]
                    NAME y 1 [sourcename: expected1]
                    STRING b1 1 [sourcename: expected1]
    SCRIPT 1 [sourcename: expected2] [synthetic: 1]
        EXPR_RESULT 1 [sourcename: expected2]
            ASSIGN 1 [sourcename: expected2]
                GETPROP 1 [sourcename: expected2]
                    GETPROP 1 [sourcename: expected2]
                        NAME Foo 1 [sourcename: expected2]
                        STRING prototype 1 [sourcename: expected2]
                    STRING b2 1 [sourcename: expected2]
                CALL 1 [sourcename: expected2] [free_call: 1]
                    NAME JSCompiler_unstubMethod 1 [sourcename: expected2]
                    NUMBER 1.0 1 [sourcename: expected2]
                    FUNCTION  1 [sourcename: expected2]
                        NAME  1 [sourcename: expected2]
                        LP 1 [sourcename: expected2]
                        BLOCK 1 [sourcename: expected2]
                            VAR 1 [sourcename: expected2]
                                NAME x 1 [sourcename: expected2]
                                    NUMBER 1.0 1 [sourcename: expected2]
                            EXPR_RESULT 1 [sourcename: expected2]
                                ASSIGN 1 [sourcename: expected2]
                                    GETPROP 1 [sourcename: expected2]
                                        GETPROP 1 [sourcename: expected2]
                                            NAME Foo 1 [sourcename: expected2]
                                            STRING prototype 1 [sourcename: expected2]
                                        STRING b3 1 [sourcename: expected2]
                                    FUNCTION  1 [sourcename: expected2]
                                        NAME  1 [sourcename: expected2]
                                        LP 1 [sourcename: expected2]
                                        BLOCK 1 [sourcename: expected2]
                                            EXPR_RESULT 1 [sourcename: expected2]
                                                NAME x 1 [sourcename: expected2]
        EXPR_RESULT 1 [sourcename: expected2]
            ASSIGN 1 [sourcename: expected2]
                NAME y 1 [sourcename: expected2]
                NEW 1 [sourcename: expected2]
                    NAME Foo 1 [sourcename: expected2]
        EXPR_RESULT 1 [sourcename: expected2]
            CALL 1 [sourcename: expected2]
                GETPROP 1 [sourcename: expected2]
                    NAME z 1 [sourcename: expected2]
                    STRING b2 1 [sourcename: expected2]
    SCRIPT 1 [sourcename: expected3] [synthetic: 1]
        EXPR_RESULT 1 [sourcename: expected3]
            ASSIGN 1 [sourcename: expected3]
                NAME y 1 [sourcename: expected3]
                NEW 1 [sourcename: expected3]
                    NAME Foo 1 [sourcename: expected3]
        EXPR_RESULT 1 [sourcename: expected3]
            CALL 1 [sourcename: expected3]
                GETPROP 1 [sourcename: expected3]
                    NAME z 1 [sourcename: expected3]
                    STRING b3 1 [sourcename: expected3]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: i0] [synthetic: 1]
        VAR 1 [sourcename:  [synthetic] ]
            NAME JSCompiler_stubMap 1 [sourcename:  [synthetic] ]
                ARRAYLIT 1 [sourcename:  [synthetic] ]
        FUNCTION  1 [sourcename:  [synthetic] ]
            NAME JSCompiler_stubMethod 1 [sourcename:  [synthetic] ]
            LP 1 [sourcename:  [synthetic] ]
                NAME JSCompiler_stubMethod_id 1 [sourcename:  [synthetic] ]
            BLOCK 1 [sourcename:  [synthetic] ]
                RETURN 1 [sourcename:  [synthetic] ]
                    FUNCTION  1 [sourcename:  [synthetic] ]
                        NAME  1 [sourcename:  [synthetic] ]
                        LP 1 [sourcename:  [synthetic] ]
                        BLOCK 1 [sourcename:  [synthetic] ]
                            RETURN 1 [sourcename:  [synthetic] ]
                                CALL 1 [sourcename:  [synthetic] ]
                                    GETPROP 1 [sourcename:  [synthetic] ]
                                        GETELEM 1 [sourcename:  [synthetic] ]
                                            NAME JSCompiler_stubMap 1 [sourcename:  [synthetic] ]
                                            NAME JSCompiler_stubMethod_id 1 [sourcename:  [synthetic] ]
                                        STRING apply 1 [sourcename:  [synthetic] ]
                                    THIS 1 [sourcename:  [synthetic] ]
                                    NAME arguments 1 [sourcename:  [synthetic] ]
        FUNCTION  1 [sourcename:  [synthetic] ]
            NAME JSCompiler_unstubMethod 1 [sourcename:  [synthetic] ]
            LP 1 [sourcename:  [synthetic] ]
                NAME JSCompiler_unstubMethod_id 1 [sourcename:  [synthetic] ]
                NAME JSCompiler_unstubMethod_body 1 [sourcename:  [synthetic] ]
            BLOCK 1 [sourcename:  [synthetic] ]
                RETURN 1 [sourcename:  [synthetic] ]
                    ASSIGN 1 [sourcename:  [synthetic] ]
                        GETELEM 1 [sourcename:  [synthetic] ]
                            NAME JSCompiler_stubMap 1 [sourcename:  [synthetic] ]
                            NAME JSCompiler_unstubMethod_id 1 [sourcename:  [synthetic] ]
                        NAME JSCompiler_unstubMethod_body 1 [sourcename:  [synthetic] ]
        FUNCTION  1 [sourcename: i0]
            NAME Foo 1 [sourcename: i0]
            LP 1 [sourcename: i0]
            BLOCK 1 [sourcename: i0]
        EXPR_RESULT 1 [sourcename: i0]
            ASSIGN 1 [sourcename: i0]
                GETPROP 1 [sourcename: i0]
                    GETPROP 1 [sourcename: i0]
                        NAME Foo 1 [sourcename: i0]
                        STRING prototype 1 [sourcename: i0]
                    STRING b1 1 [sourcename: i0]
                CALL 1 [sourcename: i0]
                    NAME JSCompiler_stubMethod 1 [sourcename: i0]
                    NUMBER 1.0 1 [sourcename: i0]
    SCRIPT 1 [sourcename: i1] [synthetic: 1]
        EXPR_RESULT 1 [sourcename: i0]
            ASSIGN 1 [sourcename: i0]
                GETPROP 1 [sourcename: i0]
                    GETPROP 1 [sourcename: i0]
                        NAME Foo 1 [sourcename: i0]
                        STRING prototype 1 [sourcename: i0]
                    STRING b1 1 [sourcename: i0]
                CALL 1 [sourcename: i0]
                    NAME JSCompiler_unstubMethod 1 [sourcename: i0]
                    NUMBER 1.0 1 [sourcename: i0]
                    FUNCTION  1 [sourcename: i0]
                        NAME  1 [sourcename: i0]
                        LP 1 [sourcename: i0]
                        BLOCK 1 [sourcename: i0]
                            EXPR_RESULT 1 [sourcename: i0]
                                ASSIGN 1 [sourcename: i0]
                                    GETPROP 1 [sourcename: i0]
                                        GETPROP 1 [sourcename: i0]
                                            NAME Foo 1 [sourcename: i0]
                                            STRING prototype 1 [sourcename: i0]
                                        STRING b2 1 [sourcename: i0]
                                    CALL 1 [sourcename: i0]
                                        NAME JSCompiler_stubMethod 1 [sourcename: i0]
                                        NUMBER 0.0 1 [sourcename: i0]
        VAR 1 [sourcename: i1]
            NAME y 1 [sourcename: i1]
                NEW 1 [sourcename: i1]
                    NAME Foo 1 [sourcename: i1]
        EXPR_RESULT 1 [sourcename: i1]
            CALL 1 [sourcename: i1]
                GETPROP 1 [sourcename: i1]
                    NAME y 1 [sourcename: i1]
                    STRING b1 1 [sourcename: i1]
    SCRIPT 1 [sourcename: i2] [synthetic: 1]
        EXPR_RESULT 1 [sourcename: i0]
            ASSIGN 1 [sourcename: i0]
                GETPROP 1 [sourcename: i0]
                    GETPROP 1 [sourcename: i0]
                        NAME Foo 1 [sourcename: i0]
                        STRING prototype 1 [sourcename: i0]
                    STRING b2 1 [sourcename: i0]
                CALL 1 [sourcename: i0]
                    NAME JSCompiler_unstubMethod 1 [sourcename: i0]
                    NUMBER 0.0 1 [sourcename: i0]
                    FUNCTION  1 [sourcename: i0]
                        NAME  1 [sourcename: i0]
                        LP 1 [sourcename: i0]
                        BLOCK 1 [sourcename: i0]
                            VAR 1 [sourcename: i0]
                                NAME x 1 [sourcename: i0]
                                    NUMBER 1.0 1 [sourcename: i0]
                            EXPR_RESULT 1 [sourcename: i0]
                                ASSIGN 1 [sourcename: i0]
                                    GETPROP 1 [sourcename: i0]
                                        GETPROP 1 [sourcename: i0]
                                            NAME Foo 1 [sourcename: i0]
                                            STRING prototype 1 [sourcename: i0]
                                        STRING b3 1 [sourcename: i0]
                                    FUNCTION  1 [sourcename: i0]
                                        NAME  1 [sourcename: i0]
                                        LP 1 [sourcename: i0]
                                        BLOCK 1 [sourcename: i0]
                                            EXPR_RESULT 1 [sourcename: i0]
                                                NAME x 1 [sourcename: i0]
        EXPR_RESULT 1 [sourcename: i2]
            ASSIGN 1 [sourcename: i2]
                NAME y 1 [sourcename: i2]
                NEW 1 [sourcename: i2]
                    NAME Foo 1 [sourcename: i2]
        EXPR_RESULT 1 [sourcename: i2]
            CALL 1 [sourcename: i2]
                GETPROP 1 [sourcename: i2]
                    NAME z 1 [sourcename: i2]
                    STRING b2 1 [sourcename: i2]
    SCRIPT 1 [sourcename: i3] [synthetic: 1]
        EXPR_RESULT 1 [sourcename: i3]
            ASSIGN 1 [sourcename: i3]
                NAME y 1 [sourcename: i3]
                NEW 1 [sourcename: i3]
                    NAME Foo 1 [sourcename: i3]
        EXPR_RESULT 1 [sourcename: i3]
            CALL 1 [sourcename: i3]
                GETPROP 1 [sourcename: i3]
                    NAME z 1 [sourcename: i3]
                    STRING b3 1 [sourcename: i3]


Subtree1: NUMBER 0.0 1 [sourcename: expected0]


Subtree2: NUMBER 1.0 1 [sourcename: i0]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:843)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:679)
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_stubMap=[];function JSCompiler_stubMethod(JSCompiler_stubMethod_id){return function(){return JSCompiler_stubMap[JSCompiler_stubMethod_id].apply(this,arguments)}}function JSCompiler_unstubMethod(JSCompiler_unstubMethod_id,JSCompiler_unstubMethod_body){return JSCompiler_stubMap[JSCompiler_unstubMethod_id]=JSCompiler_unstubMethod_body}function Foo(){}Foo.prototype.baz=JSCompiler_stubMethod(1);Foo.prototype.callBaz=JSCompiler_stubMethod(0);Foo.prototype.baz=JSCompiler_unstubMethod(1,function(){});
Foo.prototype.callBaz=JSCompiler_unstubMethod(0,function(){this.baz()});(new Foo).callBaz()
Result: var JSCompiler_stubMap=[];function JSCompiler_stubMethod(JSCompiler_stubMethod_id){return function(){return JSCompiler_stubMap[JSCompiler_stubMethod_id].apply(this,arguments)}}function JSCompiler_unstubMethod(JSCompiler_unstubMethod_id,JSCompiler_unstubMethod_body){return JSCompiler_stubMap[JSCompiler_unstubMethod_id]=JSCompiler_unstubMethod_body}function Foo(){}Foo.prototype.baz=JSCompiler_stubMethod(0);Foo.prototype.callBaz=JSCompiler_stubMethod(1);
Foo.prototype.callBaz=JSCompiler_unstubMethod(1,function(){this.baz()});Foo.prototype.baz=JSCompiler_unstubMethod(0,function(){});(new Foo).callBaz()
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_stubMap 1 [sourcename: expected0]
                ARRAYLIT 1 [sourcename: expected0]
        FUNCTION  1 [sourcename: expected0]
            NAME JSCompiler_stubMethod 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
                NAME JSCompiler_stubMethod_id 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                RETURN 1 [sourcename: expected0]
                    FUNCTION  1 [sourcename: expected0]
                        NAME  1 [sourcename: expected0]
                        LP 1 [sourcename: expected0]
                        BLOCK 1 [sourcename: expected0]
                            RETURN 1 [sourcename: expected0]
                                CALL 1 [sourcename: expected0]
                                    GETPROP 1 [sourcename: expected0]
                                        GETELEM 1 [sourcename: expected0]
                                            NAME JSCompiler_stubMap 1 [sourcename: expected0]
                                            NAME JSCompiler_stubMethod_id 1 [sourcename: expected0]
                                        STRING apply 1 [sourcename: expected0]
                                    THIS 1 [sourcename: expected0]
                                    NAME arguments 1 [sourcename: expected0]
        FUNCTION  1 [sourcename: expected0]
            NAME JSCompiler_unstubMethod 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
                NAME JSCompiler_unstubMethod_id 1 [sourcename: expected0]
                NAME JSCompiler_unstubMethod_body 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                RETURN 1 [sourcename: expected0]
                    ASSIGN 1 [sourcename: expected0]
                        GETELEM 1 [sourcename: expected0]
                            NAME JSCompiler_stubMap 1 [sourcename: expected0]
                            NAME JSCompiler_unstubMethod_id 1 [sourcename: expected0]
                        NAME JSCompiler_unstubMethod_body 1 [sourcename: expected0]
        FUNCTION  1 [sourcename: expected0]
            NAME Foo 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            ASSIGN 1 [sourcename: expected0]
                GETPROP 1 [sourcename: expected0]
                    GETPROP 1 [sourcename: expected0]
                        NAME Foo 1 [sourcename: expected0]
                        STRING prototype 1 [sourcename: expected0]
                    STRING baz 1 [sourcename: expected0]
                CALL 1 [sourcename: expected0] [free_call: 1]
                    NAME JSCompiler_stubMethod 1 [sourcename: expected0]
                    NUMBER 1.0 1 [sourcename: expected0]
    SCRIPT 1 [sourcename: expected1] [synthetic: 1]
        EXPR_RESULT 1 [sourcename: expected1]
            ASSIGN 1 [sourcename: expected1]
                GETPROP 1 [sourcename: expected1]
                    GETPROP 1 [sourcename: expected1]
                        NAME Foo 1 [sourcename: expected1]
                        STRING prototype 1 [sourcename: expected1]
                    STRING callBaz 1 [sourcename: expected1]
                CALL 1 [sourcename: expected1] [free_call: 1]
                    NAME JSCompiler_stubMethod 1 [sourcename: expected1]
                    NUMBER 0.0 1 [sourcename: expected1]
    SCRIPT 1 [sourcename: expected2] [synthetic: 1]
        EXPR_RESULT 1 [sourcename: expected2]
            ASSIGN 1 [sourcename: expected2]
                GETPROP 1 [sourcename: expected2]
                    GETPROP 1 [sourcename: expected2]
                        NAME Foo 1 [sourcename: expected2]
                        STRING prototype 1 [sourcename: expected2]
                    STRING baz 1 [sourcename: expected2]
                CALL 1 [sourcename: expected2] [free_call: 1]
                    NAME JSCompiler_unstubMethod 1 [sourcename: expected2]
                    NUMBER 1.0 1 [sourcename: expected2]
                    FUNCTION  1 [sourcename: expected2]
                        NAME  1 [sourcename: expected2]
                        LP 1 [sourcename: expected2]
                        BLOCK 1 [sourcename: expected2]
        EXPR_RESULT 1 [sourcename: expected2]
            ASSIGN 1 [sourcename: expected2]
                GETPROP 1 [sourcename: expected2]
                    GETPROP 1 [sourcename: expected2]
                        NAME Foo 1 [sourcename: expected2]
                        STRING prototype 1 [sourcename: expected2]
                    STRING callBaz 1 [sourcename: expected2]
                CALL 1 [sourcename: expected2] [free_call: 1]
                    NAME JSCompiler_unstubMethod 1 [sourcename: expected2]
                    NUMBER 0.0 1 [sourcename: expected2]
                    FUNCTION  1 [sourcename: expected2]
                        NAME  1 [sourcename: expected2]
                        LP 1 [sourcename: expected2]
                        BLOCK 1 [sourcename: expected2]
                            EXPR_RESULT 1 [sourcename: expected2]
                                CALL 1 [sourcename: expected2]
                                    GETPROP 1 [sourcename: expected2]
                                        THIS 1 [sourcename: expected2]
                                        STRING baz 1 [sourcename: expected2]
        EXPR_RESULT 1 [sourcename: expected2]
            CALL 1 [sourcename: expected2]
                GETPROP 1 [sourcename: expected2]
                    NEW 1 [sourcename: expected2] [parenthesized: true]
                        NAME Foo 1 [sourcename: expected2]
                    STRING callBaz 1 [sourcename: expected2]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: i0] [synthetic: 1]
        VAR 1 [sourcename:  [synthetic] ]
            NAME JSCompiler_stubMap 1 [sourcename:  [synthetic] ]
                ARRAYLIT 1 [sourcename:  [synthetic] ]
        FUNCTION  1 [sourcename:  [synthetic] ]
            NAME JSCompiler_stubMethod 1 [sourcename:  [synthetic] ]
            LP 1 [sourcename:  [synthetic] ]
                NAME JSCompiler_stubMethod_id 1 [sourcename:  [synthetic] ]
            BLOCK 1 [sourcename:  [synthetic] ]
                RETURN 1 [sourcename:  [synthetic] ]
                    FUNCTION  1 [sourcename:  [synthetic] ]
                        NAME  1 [sourcename:  [synthetic] ]
                        LP 1 [sourcename:  [synthetic] ]
                        BLOCK 1 [sourcename:  [synthetic] ]
                            RETURN 1 [sourcename:  [synthetic] ]
                                CALL 1 [sourcename:  [synthetic] ]
                                    GETPROP 1 [sourcename:  [synthetic] ]
                                        GETELEM 1 [sourcename:  [synthetic] ]
                                            NAME JSCompiler_stubMap 1 [sourcename:  [synthetic] ]
                                            NAME JSCompiler_stubMethod_id 1 [sourcename:  [synthetic] ]
                                        STRING apply 1 [sourcename:  [synthetic] ]
                                    THIS 1 [sourcename:  [synthetic] ]
                                    NAME arguments 1 [sourcename:  [synthetic] ]
        FUNCTION  1 [sourcename:  [synthetic] ]
            NAME JSCompiler_unstubMethod 1 [sourcename:  [synthetic] ]
            LP 1 [sourcename:  [synthetic] ]
                NAME JSCompiler_unstubMethod_id 1 [sourcename:  [synthetic] ]
                NAME JSCompiler_unstubMethod_body 1 [sourcename:  [synthetic] ]
            BLOCK 1 [sourcename:  [synthetic] ]
                RETURN 1 [sourcename:  [synthetic] ]
                    ASSIGN 1 [sourcename:  [synthetic] ]
                        GETELEM 1 [sourcename:  [synthetic] ]
                            NAME JSCompiler_stubMap 1 [sourcename:  [synthetic] ]
                            NAME JSCompiler_unstubMethod_id 1 [sourcename:  [synthetic] ]
                        NAME JSCompiler_unstubMethod_body 1 [sourcename:  [synthetic] ]
        FUNCTION  1 [sourcename: i0]
            NAME Foo 1 [sourcename: i0]
            LP 1 [sourcename: i0]
            BLOCK 1 [sourcename: i0]
        EXPR_RESULT 1 [sourcename: i0]
            ASSIGN 1 [sourcename: i0]
                GETPROP 1 [sourcename: i0]
                    GETPROP 1 [sourcename: i0]
                        NAME Foo 1 [sourcename: i0]
                        STRING prototype 1 [sourcename: i0]
                    STRING baz 1 [sourcename: i0]
                CALL 1 [sourcename: i0]
                    NAME JSCompiler_stubMethod 1 [sourcename: i0]
                    NUMBER 0.0 1 [sourcename: i0]
    SCRIPT 1 [sourcename: i1] [synthetic: 1]
        EXPR_RESULT 1 [sourcename: i1]
            ASSIGN 1 [sourcename: i1]
                GETPROP 1 [sourcename: i1]
                    GETPROP 1 [sourcename: i1]
                        NAME Foo 1 [sourcename: i1]
                        STRING prototype 1 [sourcename: i1]
                    STRING callBaz 1 [sourcename: i1]
                CALL 1 [sourcename: i1]
                    NAME JSCompiler_stubMethod 1 [sourcename: i1]
                    NUMBER 1.0 1 [sourcename: i1]
    SCRIPT 1 [sourcename: i2] [synthetic: 1]
        EXPR_RESULT 1 [sourcename: i1]
            ASSIGN 1 [sourcename: i1]
                GETPROP 1 [sourcename: i1]
                    GETPROP 1 [sourcename: i1]
                        NAME Foo 1 [sourcename: i1]
                        STRING prototype 1 [sourcename: i1]
                    STRING callBaz 1 [sourcename: i1]
                CALL 1 [sourcename: i1]
                    NAME JSCompiler_unstubMethod 1 [sourcename: i1]
                    NUMBER 1.0 1 [sourcename: i1]
                    FUNCTION  1 [sourcename: i1]
                        NAME  1 [sourcename: i1]
                        LP 1 [sourcename: i1]
                        BLOCK 1 [sourcename: i1]
                            EXPR_RESULT 1 [sourcename: i1]
                                CALL 1 [sourcename: i1]
                                    GETPROP 1 [sourcename: i1]
                                        THIS 1 [sourcename: i1]
                                        STRING baz 1 [sourcename: i1]
        EXPR_RESULT 1 [sourcename: i0]
            ASSIGN 1 [sourcename: i0]
                GETPROP 1 [sourcename: i0]
                    GETPROP 1 [sourcename: i0]
                        NAME Foo 1 [sourcename: i0]
                        STRING prototype 1 [sourcename: i0]
                    STRING baz 1 [sourcename: i0]
                CALL 1 [sourcename: i0]
                    NAME JSCompiler_unstubMethod 1 [sourcename: i0]
                    NUMBER 0.0 1 [sourcename: i0]
                    FUNCTION  1 [sourcename: i0]
                        NAME  1 [sourcename: i0]
                        LP 1 [sourcename: i0]
                        BLOCK 1 [sourcename: i0]
        EXPR_RESULT 1 [sourcename: i2]
            CALL 1 [sourcename: i2]
                GETPROP 1 [sourcename: i2]
                    NEW 1 [sourcename: i2] [parenthesized: true]
                        NAME Foo 1 [sourcename: i2]
                    STRING callBaz 1 [sourcename: i2]


Subtree1: NUMBER 1.0 1 [sourcename: expected0]


Subtree2: NUMBER 0.0 1 [sourcename: i0]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:843)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:679)
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_stubMap=[];function JSCompiler_stubMethod(JSCompiler_stubMethod_id){return function(){return JSCompiler_stubMap[JSCompiler_stubMethod_id].apply(this,arguments)}}function JSCompiler_unstubMethod(JSCompiler_unstubMethod_id,JSCompiler_unstubMethod_body){return JSCompiler_stubMap[JSCompiler_unstubMethod_id]=JSCompiler_unstubMethod_body}function Foo(){}Foo.prototype.b1=JSCompiler_stubMethod(0);Foo.prototype.b1=JSCompiler_unstubMethod(0,function(){Foo.prototype.b2=JSCompiler_stubMethod(1)});
var y=new Foo;y.b1();Foo.prototype.b2=JSCompiler_unstubMethod(1,function(){var x=1;Foo.prototype.b3=function(){x}});y=new Foo;z.b2();y=new Foo;z.b3()
Result: var JSCompiler_stubMap=[];function JSCompiler_stubMethod(JSCompiler_stubMethod_id){return function(){return JSCompiler_stubMap[JSCompiler_stubMethod_id].apply(this,arguments)}}function JSCompiler_unstubMethod(JSCompiler_unstubMethod_id,JSCompiler_unstubMethod_body){return JSCompiler_stubMap[JSCompiler_unstubMethod_id]=JSCompiler_unstubMethod_body}function Foo(){}Foo.prototype.b1=JSCompiler_stubMethod(1);Foo.prototype.b1=JSCompiler_unstubMethod(1,function(){Foo.prototype.b2=JSCompiler_stubMethod(0)});
var y=new Foo;y.b1();Foo.prototype.b2=JSCompiler_unstubMethod(0,function(){var x=1;Foo.prototype.b3=function(){x}});y=new Foo;z.b2();y=new Foo;z.b3()
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_stubMap 1 [sourcename: expected0]
                ARRAYLIT 1 [sourcename: expected0]
        FUNCTION  1 [sourcename: expected0]
            NAME JSCompiler_stubMethod 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
                NAME JSCompiler_stubMethod_id 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                RETURN 1 [sourcename: expected0]
                    FUNCTION  1 [sourcename: expected0]
                        NAME  1 [sourcename: expected0]
                        LP 1 [sourcename: expected0]
                        BLOCK 1 [sourcename: expected0]
                            RETURN 1 [sourcename: expected0]
                                CALL 1 [sourcename: expected0]
                                    GETPROP 1 [sourcename: expected0]
                                        GETELEM 1 [sourcename: expected0]
                                            NAME JSCompiler_stubMap 1 [sourcename: expected0]
                                            NAME JSCompiler_stubMethod_id 1 [sourcename: expected0]
                                        STRING apply 1 [sourcename: expected0]
                                    THIS 1 [sourcename: expected0]
                                    NAME arguments 1 [sourcename: expected0]
        FUNCTION  1 [sourcename: expected0]
            NAME JSCompiler_unstubMethod 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
                NAME JSCompiler_unstubMethod_id 1 [sourcename: expected0]
                NAME JSCompiler_unstubMethod_body 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                RETURN 1 [sourcename: expected0]
                    ASSIGN 1 [sourcename: expected0]
                        GETELEM 1 [sourcename: expected0]
                            NAME JSCompiler_stubMap 1 [sourcename: expected0]
                            NAME JSCompiler_unstubMethod_id 1 [sourcename: expected0]
                        NAME JSCompiler_unstubMethod_body 1 [sourcename: expected0]
        FUNCTION  1 [sourcename: expected0]
            NAME Foo 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            ASSIGN 1 [sourcename: expected0]
                GETPROP 1 [sourcename: expected0]
                    GETPROP 1 [sourcename: expected0]
                        NAME Foo 1 [sourcename: expected0]
                        STRING prototype 1 [sourcename: expected0]
                    STRING b1 1 [sourcename: expected0]
                CALL 1 [sourcename: expected0] [free_call: 1]
                    NAME JSCompiler_stubMethod 1 [sourcename: expected0]
                    NUMBER 0.0 1 [sourcename: expected0]
    SCRIPT 1 [sourcename: expected1] [synthetic: 1]
        EXPR_RESULT 1 [sourcename: expected1]
            ASSIGN 1 [sourcename: expected1]
                GETPROP 1 [sourcename: expected1]
                    GETPROP 1 [sourcename: expected1]
                        NAME Foo 1 [sourcename: expected1]
                        STRING prototype 1 [sourcename: expected1]
                    STRING b1 1 [sourcename: expected1]
                CALL 1 [sourcename: expected1] [free_call: 1]
                    NAME JSCompiler_unstubMethod 1 [sourcename: expected1]
                    NUMBER 0.0 1 [sourcename: expected1]
                    FUNCTION  1 [sourcename: expected1]
                        NAME  1 [sourcename: expected1]
                        LP 1 [sourcename: expected1]
                        BLOCK 1 [sourcename: expected1]
                            EXPR_RESULT 1 [sourcename: expected1]
                                ASSIGN 1 [sourcename: expected1]
                                    GETPROP 1 [sourcename: expected1]
                                        GETPROP 1 [sourcename: expected1]
                                            NAME Foo 1 [sourcename: expected1]
                                            STRING prototype 1 [sourcename: expected1]
                                        STRING b2 1 [sourcename: expected1]
                                    CALL 1 [sourcename: expected1] [free_call: 1]
                                        NAME JSCompiler_stubMethod 1 [sourcename: expected1]
                                        NUMBER 1.0 1 [sourcename: expected1]
        VAR 1 [sourcename: expected1]
            NAME y 1 [sourcename: expected1]
                NEW 1 [sourcename: expected1]
                    NAME Foo 1 [sourcename: expected1]
        EXPR_RESULT 1 [sourcename: expected1]
            CALL 1 [sourcename: expected1]
                GETPROP 1 [sourcename: expected1]
                    NAME y 1 [sourcename: expected1]
                    STRING b1 1 [sourcename: expected1]
    SCRIPT 1 [sourcename: expected2] [synthetic: 1]
        EXPR_RESULT 1 [sourcename: expected2]
            ASSIGN 1 [sourcename: expected2]
                GETPROP 1 [sourcename: expected2]
                    GETPROP 1 [sourcename: expected2]
                        NAME Foo 1 [sourcename: expected2]
                        STRING prototype 1 [sourcename: expected2]
                    STRING b2 1 [sourcename: expected2]
                CALL 1 [sourcename: expected2] [free_call: 1]
                    NAME JSCompiler_unstubMethod 1 [sourcename: expected2]
                    NUMBER 1.0 1 [sourcename: expected2]
                    FUNCTION  1 [sourcename: expected2]
                        NAME  1 [sourcename: expected2]
                        LP 1 [sourcename: expected2]
                        BLOCK 1 [sourcename: expected2]
                            VAR 1 [sourcename: expected2]
                                NAME x 1 [sourcename: expected2]
                                    NUMBER 1.0 1 [sourcename: expected2]
                            EXPR_RESULT 1 [sourcename: expected2]
                                ASSIGN 1 [sourcename: expected2]
                                    GETPROP 1 [sourcename: expected2]
                                        GETPROP 1 [sourcename: expected2]
                                            NAME Foo 1 [sourcename: expected2]
                                            STRING prototype 1 [sourcename: expected2]
                                        STRING b3 1 [sourcename: expected2]
                                    FUNCTION  1 [sourcename: expected2]
                                        NAME  1 [sourcename: expected2]
                                        LP 1 [sourcename: expected2]
                                        BLOCK 1 [sourcename: expected2]
                                            EXPR_RESULT 1 [sourcename: expected2]
                                                NAME x 1 [sourcename: expected2]
        EXPR_RESULT 1 [sourcename: expected2]
            ASSIGN 1 [sourcename: expected2]
                NAME y 1 [sourcename: expected2]
                NEW 1 [sourcename: expected2]
                    NAME Foo 1 [sourcename: expected2]
        EXPR_RESULT 1 [sourcename: expected2]
            CALL 1 [sourcename: expected2]
                GETPROP 1 [sourcename: expected2]
                    NAME z 1 [sourcename: expected2]
                    STRING b2 1 [sourcename: expected2]
    SCRIPT 1 [sourcename: expected3] [synthetic: 1]
        EXPR_RESULT 1 [sourcename: expected3]
            ASSIGN 1 [sourcename: expected3]
                NAME y 1 [sourcename: expected3]
                NEW 1 [sourcename: expected3]
                    NAME Foo 1 [sourcename: expected3]
        EXPR_RESULT 1 [sourcename: expected3]
            CALL 1 [sourcename: expected3]
                GETPROP 1 [sourcename: expected3]
                    NAME z 1 [sourcename: expected3]
                    STRING b3 1 [sourcename: expected3]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: i0] [synthetic: 1]
        VAR 1 [sourcename:  [synthetic] ]
            NAME JSCompiler_stubMap 1 [sourcename:  [synthetic] ]
                ARRAYLIT 1 [sourcename:  [synthetic] ]
        FUNCTION  1 [sourcename:  [synthetic] ]
            NAME JSCompiler_stubMethod 1 [sourcename:  [synthetic] ]
            LP 1 [sourcename:  [synthetic] ]
                NAME JSCompiler_stubMethod_id 1 [sourcename:  [synthetic] ]
            BLOCK 1 [sourcename:  [synthetic] ]
                RETURN 1 [sourcename:  [synthetic] ]
                    FUNCTION  1 [sourcename:  [synthetic] ]
                        NAME  1 [sourcename:  [synthetic] ]
                        LP 1 [sourcename:  [synthetic] ]
                        BLOCK 1 [sourcename:  [synthetic] ]
                            RETURN 1 [sourcename:  [synthetic] ]
                                CALL 1 [sourcename:  [synthetic] ]
                                    GETPROP 1 [sourcename:  [synthetic] ]
                                        GETELEM 1 [sourcename:  [synthetic] ]
                                            NAME JSCompiler_stubMap 1 [sourcename:  [synthetic] ]
                                            NAME JSCompiler_stubMethod_id 1 [sourcename:  [synthetic] ]
                                        STRING apply 1 [sourcename:  [synthetic] ]
                                    THIS 1 [sourcename:  [synthetic] ]
                                    NAME arguments 1 [sourcename:  [synthetic] ]
        FUNCTION  1 [sourcename:  [synthetic] ]
            NAME JSCompiler_unstubMethod 1 [sourcename:  [synthetic] ]
            LP 1 [sourcename:  [synthetic] ]
                NAME JSCompiler_unstubMethod_id 1 [sourcename:  [synthetic] ]
                NAME JSCompiler_unstubMethod_body 1 [sourcename:  [synthetic] ]
            BLOCK 1 [sourcename:  [synthetic] ]
                RETURN 1 [sourcename:  [synthetic] ]
                    ASSIGN 1 [sourcename:  [synthetic] ]
                        GETELEM 1 [sourcename:  [synthetic] ]
                            NAME JSCompiler_stubMap 1 [sourcename:  [synthetic] ]
                            NAME JSCompiler_unstubMethod_id 1 [sourcename:  [synthetic] ]
                        NAME JSCompiler_unstubMethod_body 1 [sourcename:  [synthetic] ]
        FUNCTION  1 [sourcename: i0]
            NAME Foo 1 [sourcename: i0]
            LP 1 [sourcename: i0]
            BLOCK 1 [sourcename: i0]
        EXPR_RESULT 1 [sourcename: i0]
            ASSIGN 1 [sourcename: i0]
                GETPROP 1 [sourcename: i0]
                    GETPROP 1 [sourcename: i0]
                        NAME Foo 1 [sourcename: i0]
                        STRING prototype 1 [sourcename: i0]
                    STRING b1 1 [sourcename: i0]
                CALL 1 [sourcename: i0]
                    NAME JSCompiler_stubMethod 1 [sourcename: i0]
                    NUMBER 1.0 1 [sourcename: i0]
    SCRIPT 1 [sourcename: i1] [synthetic: 1]
        EXPR_RESULT 1 [sourcename: i0]
            ASSIGN 1 [sourcename: i0]
                GETPROP 1 [sourcename: i0]
                    GETPROP 1 [sourcename: i0]
                        NAME Foo 1 [sourcename: i0]
                        STRING prototype 1 [sourcename: i0]
                    STRING b1 1 [sourcename: i0]
                CALL 1 [sourcename: i0]
                    NAME JSCompiler_unstubMethod 1 [sourcename: i0]
                    NUMBER 1.0 1 [sourcename: i0]
                    FUNCTION  1 [sourcename: i0]
                        NAME  1 [sourcename: i0]
                        LP 1 [sourcename: i0]
                        BLOCK 1 [sourcename: i0]
                            EXPR_RESULT 1 [sourcename: i0]
                                ASSIGN 1 [sourcename: i0]
                                    GETPROP 1 [sourcename: i0]
                                        GETPROP 1 [sourcename: i0]
                                            NAME Foo 1 [sourcename: i0]
                                            STRING prototype 1 [sourcename: i0]
                                        STRING b2 1 [sourcename: i0]
                                    CALL 1 [sourcename: i0]
                                        NAME JSCompiler_stubMethod 1 [sourcename: i0]
                                        NUMBER 0.0 1 [sourcename: i0]
        VAR 1 [sourcename: i1]
            NAME y 1 [sourcename: i1]
                NEW 1 [sourcename: i1]
                    NAME Foo 1 [sourcename: i1]
        EXPR_RESULT 1 [sourcename: i1]
            CALL 1 [sourcename: i1]
                GETPROP 1 [sourcename: i1]
                    NAME y 1 [sourcename: i1]
                    STRING b1 1 [sourcename: i1]
    SCRIPT 1 [sourcename: i2] [synthetic: 1]
        EXPR_RESULT 1 [sourcename: i0]
            ASSIGN 1 [sourcename: i0]
                GETPROP 1 [sourcename: i0]
                    GETPROP 1 [sourcename: i0]
                        NAME Foo 1 [sourcename: i0]
                        STRING prototype 1 [sourcename: i0]
                    STRING b2 1 [sourcename: i0]
                CALL 1 [sourcename: i0]
                    NAME JSCompiler_unstubMethod 1 [sourcename: i0]
                    NUMBER 0.0 1 [sourcename: i0]
                    FUNCTION  1 [sourcename: i0]
                        NAME  1 [sourcename: i0]
                        LP 1 [sourcename: i0]
                        BLOCK 1 [sourcename: i0]
                            VAR 1 [sourcename: i0]
                                NAME x 1 [sourcename: i0]
                                    NUMBER 1.0 1 [sourcename: i0]
                            EXPR_RESULT 1 [sourcename: i0]
                                ASSIGN 1 [sourcename: i0]
                                    GETPROP 1 [sourcename: i0]
                                        GETPROP 1 [sourcename: i0]
                                            NAME Foo 1 [sourcename: i0]
                                            STRING prototype 1 [sourcename: i0]
                                        STRING b3 1 [sourcename: i0]
                                    FUNCTION  1 [sourcename: i0]
                                        NAME  1 [sourcename: i0]
                                        LP 1 [sourcename: i0]
                                        BLOCK 1 [sourcename: i0]
                                            EXPR_RESULT 1 [sourcename: i0]
                                                NAME x 1 [sourcename: i0]
        EXPR_RESULT 1 [sourcename: i2]
            ASSIGN 1 [sourcename: i2]
                NAME y 1 [sourcename: i2]
                NEW 1 [sourcename: i2]
                    NAME Foo 1 [sourcename: i2]
        EXPR_RESULT 1 [sourcename: i2]
            CALL 1 [sourcename: i2]
                GETPROP 1 [sourcename: i2]
                    NAME z 1 [sourcename: i2]
                    STRING b2 1 [sourcename: i2]
    SCRIPT 1 [sourcename: i3] [synthetic: 1]
        EXPR_RESULT 1 [sourcename: i3]
            ASSIGN 1 [sourcename: i3]
                NAME y 1 [sourcename: i3]
                NEW 1 [sourcename: i3]
                    NAME Foo 1 [sourcename: i3]
        EXPR_RESULT 1 [sourcename: i3]
            CALL 1 [sourcename: i3]
                GETPROP 1 [sourcename: i3]
                    NAME z 1 [sourcename: i3]
                    STRING b3 1 [sourcename: i3]


Subtree1: NUMBER 0.0 1 [sourcename: expected0]


Subtree2: NUMBER 1.0 1 [sourcename: i0]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:843)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:679)
junit.framework.AssertionFailedError: 
Expected: function FUNC(param1,param2){var a;a=1;if(2||(a=3)||a);}
Result: function FUNC(param1,param2){var a;a=1;if((a=2)||(a=3)||a);}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        FUNCTION  1 [sourcename: expected0]
            NAME FUNC 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
                NAME param1 1 [sourcename: expected0]
                NAME param2 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                VAR 1 [sourcename: expected0]
                    NAME a 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    ASSIGN 1 [sourcename: expected0]
                        NAME a 1 [sourcename: expected0]
                        NUMBER 1.0 1 [sourcename: expected0]
                IF 1 [sourcename: expected0]
                    OR 1 [sourcename: expected0]
                        NUMBER 2.0 1 [sourcename: expected0] [parenthesized: true]
                        OR 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0] [parenthesized: true]
                                NAME a 1 [sourcename: expected0]
                                NUMBER 3.0 1 [sourcename: expected0]
                            NAME a 1 [sourcename: expected0] [parenthesized: true]
                    BLOCK 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        FUNCTION  1 [sourcename: testcode]
            NAME FUNC 1 [sourcename: testcode]
            LP 1 [sourcename: testcode]
                NAME param1 1 [sourcename: testcode]
                NAME param2 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                VAR 1 [sourcename: testcode]
                    NAME a 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    ASSIGN 1 [sourcename: testcode]
                        NAME a 1 [sourcename: testcode]
                        NUMBER 1.0 1 [sourcename: testcode]
                IF 1 [sourcename: testcode]
                    OR 1 [sourcename: testcode]
                        ASSIGN 1 [sourcename: testcode] [parenthesized: true]
                            NAME a 1 [sourcename: testcode]
                            NUMBER 2.0 1 [sourcename: testcode]
                        OR 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode] [parenthesized: true]
                                NAME a 1 [sourcename: testcode]
                                NUMBER 3.0 1 [sourcename: testcode]
                            NAME a 1 [sourcename: testcode] [parenthesized: true]
                    BLOCK 1 [sourcename: testcode]


Subtree1: NUMBER 2.0 1 [sourcename: expected0] [parenthesized: true]


Subtree2: ASSIGN 1 [sourcename: testcode] [parenthesized: true]
    NAME a 1 [sourcename: testcode]
    NUMBER 2.0 1 [sourcename: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:843)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:410)
junit.framework.AssertionFailedError: 
Expected: function FUNC(param1,param2){var a,b;f(b=true)||f(b=false)?a=b:a=null;return a}
Result: function FUNC(param1,param2){var a,b;f(true)||f(b=false)?a=b:a=null;return a}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        FUNCTION  1 [sourcename: expected0]
            NAME FUNC 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
                NAME param1 1 [sourcename: expected0]
                NAME param2 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                VAR 1 [sourcename: expected0]
                    NAME a 1 [sourcename: expected0]
                    NAME b 1 [sourcename: expected0]
                EXPR_RESULT 2 [sourcename: expected0]
                    HOOK 2 [sourcename: expected0]
                        OR 2 [sourcename: expected0] [parenthesized: true]
                            CALL 2 [sourcename: expected0] [free_call: 1]
                                NAME f 2 [sourcename: expected0]
                                ASSIGN 2 [sourcename: expected0]
                                    NAME b 2 [sourcename: expected0]
                                    TRUE 2 [sourcename: expected0]
                            CALL 2 [sourcename: expected0] [free_call: 1]
                                NAME f 2 [sourcename: expected0]
                                ASSIGN 2 [sourcename: expected0]
                                    NAME b 2 [sourcename: expected0]
                                    FALSE 2 [sourcename: expected0]
                        ASSIGN 2 [sourcename: expected0] [parenthesized: true]
                            NAME a 2 [sourcename: expected0]
                            NAME b 2 [sourcename: expected0]
                        ASSIGN 2 [sourcename: expected0] [parenthesized: true]
                            NAME a 2 [sourcename: expected0]
                            NULL 2 [sourcename: expected0]
                RETURN 3 [sourcename: expected0]
                    NAME a 3 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        FUNCTION  1 [sourcename: testcode]
            NAME FUNC 1 [sourcename: testcode]
            LP 1 [sourcename: testcode]
                NAME param1 1 [sourcename: testcode]
                NAME param2 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                VAR 1 [sourcename: testcode]
                    NAME a 1 [sourcename: testcode]
                    NAME b 1 [sourcename: testcode]
                EXPR_RESULT 2 [sourcename: testcode]
                    HOOK 2 [sourcename: testcode]
                        OR 2 [sourcename: testcode] [parenthesized: true]
                            CALL 2 [sourcename: testcode] [free_call: 1]
                                NAME f 2 [sourcename: testcode]
                                TRUE 2 [sourcename: testcode]
                            CALL 2 [sourcename: testcode] [free_call: 1]
                                NAME f 2 [sourcename: testcode]
                                ASSIGN 2 [sourcename: testcode]
                                    NAME b 2 [sourcename: testcode]
                                    FALSE 2 [sourcename: testcode]
                        ASSIGN 2 [sourcename: testcode] [parenthesized: true]
                            NAME a 2 [sourcename: testcode]
                            NAME b 2 [sourcename: testcode]
                        ASSIGN 2 [sourcename: testcode] [parenthesized: true]
                            NAME a 2 [sourcename: testcode]
                            NULL 2 [sourcename: testcode]
                RETURN 3 [sourcename: testcode]
                    NAME a 3 [sourcename: testcode]


Subtree1: ASSIGN 2 [sourcename: expected0]
    NAME b 2 [sourcename: expected0]
    TRUE 2 [sourcename: expected0]


Subtree2: TRUE 2 [sourcename: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:843)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:410)
junit.framework.AssertionFailedError: 
Expected: function FUNC(param1,param2){var a,b;(a?f(b=true):f(b=false))&&(a=b);return a}
Result: function FUNC(param1,param2){var a,b;(a?f(true):f(b=false))&&(a=b);return a}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        FUNCTION  1 [sourcename: expected0]
            NAME FUNC 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
                NAME param1 1 [sourcename: expected0]
                NAME param2 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                VAR 1 [sourcename: expected0]
                    NAME a 1 [sourcename: expected0]
                    NAME b 1 [sourcename: expected0]
                EXPR_RESULT 2 [sourcename: expected0]
                    AND 2 [sourcename: expected0]
                        HOOK 2 [sourcename: expected0] [parenthesized: true]
                            NAME a 2 [sourcename: expected0]
                            CALL 2 [sourcename: expected0] [free_call: 1]
                                NAME f 2 [sourcename: expected0]
                                ASSIGN 2 [sourcename: expected0]
                                    NAME b 2 [sourcename: expected0]
                                    TRUE 2 [sourcename: expected0]
                            CALL 2 [sourcename: expected0] [free_call: 1]
                                NAME f 2 [sourcename: expected0]
                                ASSIGN 2 [sourcename: expected0]
                                    NAME b 2 [sourcename: expected0]
                                    FALSE 2 [sourcename: expected0]
                        ASSIGN 2 [sourcename: expected0] [parenthesized: true]
                            NAME a 2 [sourcename: expected0]
                            NAME b 2 [sourcename: expected0]
                RETURN 3 [sourcename: expected0]
                    NAME a 3 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        FUNCTION  1 [sourcename: testcode]
            NAME FUNC 1 [sourcename: testcode]
            LP 1 [sourcename: testcode]
                NAME param1 1 [sourcename: testcode]
                NAME param2 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                VAR 1 [sourcename: testcode]
                    NAME a 1 [sourcename: testcode]
                    NAME b 1 [sourcename: testcode]
                EXPR_RESULT 2 [sourcename: testcode]
                    AND 2 [sourcename: testcode]
                        HOOK 2 [sourcename: testcode] [parenthesized: true]
                            NAME a 2 [sourcename: testcode]
                            CALL 2 [sourcename: testcode] [free_call: 1]
                                NAME f 2 [sourcename: testcode]
                                TRUE 2 [sourcename: testcode]
                            CALL 2 [sourcename: testcode] [free_call: 1]
                                NAME f 2 [sourcename: testcode]
                                ASSIGN 2 [sourcename: testcode]
                                    NAME b 2 [sourcename: testcode]
                                    FALSE 2 [sourcename: testcode]
                        ASSIGN 2 [sourcename: testcode] [parenthesized: true]
                            NAME a 2 [sourcename: testcode]
                            NAME b 2 [sourcename: testcode]
                RETURN 3 [sourcename: testcode]
                    NAME a 3 [sourcename: testcode]


Subtree1: ASSIGN 2 [sourcename: expected0]
    NAME b 2 [sourcename: expected0]
    TRUE 2 [sourcename: expected0]


Subtree2: TRUE 2 [sourcename: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:843)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:410)
junit.framework.AssertionFailedError: 
Expected: function FUNC(param1,param2){var a,b;(f(b=true)||f(b=false))&&(a=b);return a}
Result: function FUNC(param1,param2){var a,b;(f(true)||f(b=false))&&(a=b);return a}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        FUNCTION  1 [sourcename: expected0]
            NAME FUNC 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
                NAME param1 1 [sourcename: expected0]
                NAME param2 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                VAR 1 [sourcename: expected0]
                    NAME a 1 [sourcename: expected0]
                    NAME b 1 [sourcename: expected0]
                EXPR_RESULT 2 [sourcename: expected0]
                    AND 2 [sourcename: expected0]
                        OR 2 [sourcename: expected0] [parenthesized: true]
                            CALL 2 [sourcename: expected0] [free_call: 1]
                                NAME f 2 [sourcename: expected0]
                                ASSIGN 2 [sourcename: expected0]
                                    NAME b 2 [sourcename: expected0]
                                    TRUE 2 [sourcename: expected0]
                            CALL 2 [sourcename: expected0] [free_call: 1]
                                NAME f 2 [sourcename: expected0]
                                ASSIGN 2 [sourcename: expected0]
                                    NAME b 2 [sourcename: expected0]
                                    FALSE 2 [sourcename: expected0]
                        ASSIGN 2 [sourcename: expected0] [parenthesized: true]
                            NAME a 2 [sourcename: expected0]
                            NAME b 2 [sourcename: expected0]
                RETURN 3 [sourcename: expected0]
                    NAME a 3 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        FUNCTION  1 [sourcename: testcode]
            NAME FUNC 1 [sourcename: testcode]
            LP 1 [sourcename: testcode]
                NAME param1 1 [sourcename: testcode]
                NAME param2 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                VAR 1 [sourcename: testcode]
                    NAME a 1 [sourcename: testcode]
                    NAME b 1 [sourcename: testcode]
                EXPR_RESULT 2 [sourcename: testcode]
                    AND 2 [sourcename: testcode]
                        OR 2 [sourcename: testcode] [parenthesized: true]
                            CALL 2 [sourcename: testcode] [free_call: 1]
                                NAME f 2 [sourcename: testcode]
                                TRUE 2 [sourcename: testcode]
                            CALL 2 [sourcename: testcode] [free_call: 1]
                                NAME f 2 [sourcename: testcode]
                                ASSIGN 2 [sourcename: testcode]
                                    NAME b 2 [sourcename: testcode]
                                    FALSE 2 [sourcename: testcode]
                        ASSIGN 2 [sourcename: testcode] [parenthesized: true]
                            NAME a 2 [sourcename: testcode]
                            NAME b 2 [sourcename: testcode]
                RETURN 3 [sourcename: testcode]
                    NAME a 3 [sourcename: testcode]


Subtree1: ASSIGN 2 [sourcename: expected0]
    NAME b 2 [sourcename: expected0]
    TRUE 2 [sourcename: expected0]


Subtree2: TRUE 2 [sourcename: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:843)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:410)
junit.framework.AssertionFailedError: 
Expected: function FUNC(param1,param2){var a;a=1;if(2||(a=3)||a);}
Result: function FUNC(param1,param2){var a;a=1;if((a=2)||(a=3)||a);}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        FUNCTION  1 [sourcename: expected0]
            NAME FUNC 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
                NAME param1 1 [sourcename: expected0]
                NAME param2 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                VAR 1 [sourcename: expected0]
                    NAME a 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    ASSIGN 1 [sourcename: expected0]
                        NAME a 1 [sourcename: expected0]
                        NUMBER 1.0 1 [sourcename: expected0]
                IF 1 [sourcename: expected0]
                    OR 1 [sourcename: expected0]
                        NUMBER 2.0 1 [sourcename: expected0] [parenthesized: true]
                        OR 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0] [parenthesized: true]
                                NAME a 1 [sourcename: expected0]
                                NUMBER 3.0 1 [sourcename: expected0]
                            NAME a 1 [sourcename: expected0] [parenthesized: true]
                    BLOCK 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        FUNCTION  1 [sourcename: testcode]
            NAME FUNC 1 [sourcename: testcode]
            LP 1 [sourcename: testcode]
                NAME param1 1 [sourcename: testcode]
                NAME param2 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                VAR 1 [sourcename: testcode]
                    NAME a 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    ASSIGN 1 [sourcename: testcode]
                        NAME a 1 [sourcename: testcode]
                        NUMBER 1.0 1 [sourcename: testcode]
                IF 1 [sourcename: testcode]
                    OR 1 [sourcename: testcode]
                        ASSIGN 1 [sourcename: testcode] [parenthesized: true]
                            NAME a 1 [sourcename: testcode]
                            NUMBER 2.0 1 [sourcename: testcode]
                        OR 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode] [parenthesized: true]
                                NAME a 1 [sourcename: testcode]
                                NUMBER 3.0 1 [sourcename: testcode]
                            NAME a 1 [sourcename: testcode] [parenthesized: true]
                    BLOCK 1 [sourcename: testcode]


Subtree1: NUMBER 2.0 1 [sourcename: expected0] [parenthesized: true]


Subtree2: ASSIGN 1 [sourcename: testcode] [parenthesized: true]
    NAME a 1 [sourcename: testcode]
    NUMBER 2.0 1 [sourcename: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:843)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:410)
junit.framework.AssertionFailedError: 
Expected: function FUNC(param1,param2){var a,b;f(b=true)||f(b=false)?a=b:a=null;return a}
Result: function FUNC(param1,param2){var a,b;f(true)||f(b=false)?a=b:a=null;return a}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        FUNCTION  1 [sourcename: expected0]
            NAME FUNC 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
                NAME param1 1 [sourcename: expected0]
                NAME param2 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                VAR 1 [sourcename: expected0]
                    NAME a 1 [sourcename: expected0]
                    NAME b 1 [sourcename: expected0]
                EXPR_RESULT 2 [sourcename: expected0]
                    HOOK 2 [sourcename: expected0]
                        OR 2 [sourcename: expected0] [parenthesized: true]
                            CALL 2 [sourcename: expected0] [free_call: 1]
                                NAME f 2 [sourcename: expected0]
                                ASSIGN 2 [sourcename: expected0]
                                    NAME b 2 [sourcename: expected0]
                                    TRUE 2 [sourcename: expected0]
                            CALL 2 [sourcename: expected0] [free_call: 1]
                                NAME f 2 [sourcename: expected0]
                                ASSIGN 2 [sourcename: expected0]
                                    NAME b 2 [sourcename: expected0]
                                    FALSE 2 [sourcename: expected0]
                        ASSIGN 2 [sourcename: expected0] [parenthesized: true]
                            NAME a 2 [sourcename: expected0]
                            NAME b 2 [sourcename: expected0]
                        ASSIGN 2 [sourcename: expected0] [parenthesized: true]
                            NAME a 2 [sourcename: expected0]
                            NULL 2 [sourcename: expected0]
                RETURN 3 [sourcename: expected0]
                    NAME a 3 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        FUNCTION  1 [sourcename: testcode]
            NAME FUNC 1 [sourcename: testcode]
            LP 1 [sourcename: testcode]
                NAME param1 1 [sourcename: testcode]
                NAME param2 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                VAR 1 [sourcename: testcode]
                    NAME a 1 [sourcename: testcode]
                    NAME b 1 [sourcename: testcode]
                EXPR_RESULT 2 [sourcename: testcode]
                    HOOK 2 [sourcename: testcode]
                        OR 2 [sourcename: testcode] [parenthesized: true]
                            CALL 2 [sourcename: testcode] [free_call: 1]
                                NAME f 2 [sourcename: testcode]
                                TRUE 2 [sourcename: testcode]
                            CALL 2 [sourcename: testcode] [free_call: 1]
                                NAME f 2 [sourcename: testcode]
                                ASSIGN 2 [sourcename: testcode]
                                    NAME b 2 [sourcename: testcode]
                                    FALSE 2 [sourcename: testcode]
                        ASSIGN 2 [sourcename: testcode] [parenthesized: true]
                            NAME a 2 [sourcename: testcode]
                            NAME b 2 [sourcename: testcode]
                        ASSIGN 2 [sourcename: testcode] [parenthesized: true]
                            NAME a 2 [sourcename: testcode]
                            NULL 2 [sourcename: testcode]
                RETURN 3 [sourcename: testcode]
                    NAME a 3 [sourcename: testcode]


Subtree1: ASSIGN 2 [sourcename: expected0]
    NAME b 2 [sourcename: expected0]
    TRUE 2 [sourcename: expected0]


Subtree2: TRUE 2 [sourcename: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:843)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:410)
junit.framework.AssertionFailedError: 
Expected: function FUNC(param1,param2){var a,b;(a?f(b=true):f(b=false))&&(a=b);return a}
Result: function FUNC(param1,param2){var a,b;(a?f(true):f(b=false))&&(a=b);return a}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        FUNCTION  1 [sourcename: expected0]
            NAME FUNC 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
                NAME param1 1 [sourcename: expected0]
                NAME param2 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                VAR 1 [sourcename: expected0]
                    NAME a 1 [sourcename: expected0]
                    NAME b 1 [sourcename: expected0]
                EXPR_RESULT 2 [sourcename: expected0]
                    AND 2 [sourcename: expected0]
                        HOOK 2 [sourcename: expected0] [parenthesized: true]
                            NAME a 2 [sourcename: expected0]
                            CALL 2 [sourcename: expected0] [free_call: 1]
                                NAME f 2 [sourcename: expected0]
                                ASSIGN 2 [sourcename: expected0]
                                    NAME b 2 [sourcename: expected0]
                                    TRUE 2 [sourcename: expected0]
                            CALL 2 [sourcename: expected0] [free_call: 1]
                                NAME f 2 [sourcename: expected0]
                                ASSIGN 2 [sourcename: expected0]
                                    NAME b 2 [sourcename: expected0]
                                    FALSE 2 [sourcename: expected0]
                        ASSIGN 2 [sourcename: expected0] [parenthesized: true]
                            NAME a 2 [sourcename: expected0]
                            NAME b 2 [sourcename: expected0]
                RETURN 3 [sourcename: expected0]
                    NAME a 3 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        FUNCTION  1 [sourcename: testcode]
            NAME FUNC 1 [sourcename: testcode]
            LP 1 [sourcename: testcode]
                NAME param1 1 [sourcename: testcode]
                NAME param2 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                VAR 1 [sourcename: testcode]
                    NAME a 1 [sourcename: testcode]
                    NAME b 1 [sourcename: testcode]
                EXPR_RESULT 2 [sourcename: testcode]
                    AND 2 [sourcename: testcode]
                        HOOK 2 [sourcename: testcode] [parenthesized: true]
                            NAME a 2 [sourcename: testcode]
                            CALL 2 [sourcename: testcode] [free_call: 1]
                                NAME f 2 [sourcename: testcode]
                                TRUE 2 [sourcename: testcode]
                            CALL 2 [sourcename: testcode] [free_call: 1]
                                NAME f 2 [sourcename: testcode]
                                ASSIGN 2 [sourcename: testcode]
                                    NAME b 2 [sourcename: testcode]
                                    FALSE 2 [sourcename: testcode]
                        ASSIGN 2 [sourcename: testcode] [parenthesized: true]
                            NAME a 2 [sourcename: testcode]
                            NAME b 2 [sourcename: testcode]
                RETURN 3 [sourcename: testcode]
                    NAME a 3 [sourcename: testcode]


Subtree1: ASSIGN 2 [sourcename: expected0]
    NAME b 2 [sourcename: expected0]
    TRUE 2 [sourcename: expected0]


Subtree2: TRUE 2 [sourcename: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:843)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:410)
junit.framework.AssertionFailedError: 
Expected: function FUNC(param1,param2){var a,b;(f(b=true)||f(b=false))&&(a=b);return a}
Result: function FUNC(param1,param2){var a,b;(f(true)||f(b=false))&&(a=b);return a}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        FUNCTION  1 [sourcename: expected0]
            NAME FUNC 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
                NAME param1 1 [sourcename: expected0]
                NAME param2 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                VAR 1 [sourcename: expected0]
                    NAME a 1 [sourcename: expected0]
                    NAME b 1 [sourcename: expected0]
                EXPR_RESULT 2 [sourcename: expected0]
                    AND 2 [sourcename: expected0]
                        OR 2 [sourcename: expected0] [parenthesized: true]
                            CALL 2 [sourcename: expected0] [free_call: 1]
                                NAME f 2 [sourcename: expected0]
                                ASSIGN 2 [sourcename: expected0]
                                    NAME b 2 [sourcename: expected0]
                                    TRUE 2 [sourcename: expected0]
                            CALL 2 [sourcename: expected0] [free_call: 1]
                                NAME f 2 [sourcename: expected0]
                                ASSIGN 2 [sourcename: expected0]
                                    NAME b 2 [sourcename: expected0]
                                    FALSE 2 [sourcename: expected0]
                        ASSIGN 2 [sourcename: expected0] [parenthesized: true]
                            NAME a 2 [sourcename: expected0]
                            NAME b 2 [sourcename: expected0]
                RETURN 3 [sourcename: expected0]
                    NAME a 3 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        FUNCTION  1 [sourcename: testcode]
            NAME FUNC 1 [sourcename: testcode]
            LP 1 [sourcename: testcode]
                NAME param1 1 [sourcename: testcode]
                NAME param2 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                VAR 1 [sourcename: testcode]
                    NAME a 1 [sourcename: testcode]
                    NAME b 1 [sourcename: testcode]
                EXPR_RESULT 2 [sourcename: testcode]
                    AND 2 [sourcename: testcode]
                        OR 2 [sourcename: testcode] [parenthesized: true]
                            CALL 2 [sourcename: testcode] [free_call: 1]
                                NAME f 2 [sourcename: testcode]
                                TRUE 2 [sourcename: testcode]
                            CALL 2 [sourcename: testcode] [free_call: 1]
                                NAME f 2 [sourcename: testcode]
                                ASSIGN 2 [sourcename: testcode]
                                    NAME b 2 [sourcename: testcode]
                                    FALSE 2 [sourcename: testcode]
                        ASSIGN 2 [sourcename: testcode] [parenthesized: true]
                            NAME a 2 [sourcename: testcode]
                            NAME b 2 [sourcename: testcode]
                RETURN 3 [sourcename: testcode]
                    NAME a 3 [sourcename: testcode]


Subtree1: ASSIGN 2 [sourcename: expected0]
    NAME b 2 [sourcename: expected0]
    TRUE 2 [sourcename: expected0]


Subtree2: TRUE 2 [sourcename: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:843)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:410)
junit.framework.AssertionFailedError: 
Expected: function FUNC(param1,param2){var a;a=1;if(2||(a=3)||a);}
Result: function FUNC(param1,param2){var a;a=1;if((a=2)||(a=3)||a);}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        FUNCTION  1 [sourcename: expected0]
            NAME FUNC 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
                NAME param1 1 [sourcename: expected0]
                NAME param2 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                VAR 1 [sourcename: expected0]
                    NAME a 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    ASSIGN 1 [sourcename: expected0]
                        NAME a 1 [sourcename: expected0]
                        NUMBER 1.0 1 [sourcename: expected0]
                IF 1 [sourcename: expected0]
                    OR 1 [sourcename: expected0]
                        NUMBER 2.0 1 [sourcename: expected0] [parenthesized: true]
                        OR 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0] [parenthesized: true]
                                NAME a 1 [sourcename: expected0]
                                NUMBER 3.0 1 [sourcename: expected0]
                            NAME a 1 [sourcename: expected0] [parenthesized: true]
                    BLOCK 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        FUNCTION  1 [sourcename: testcode]
            NAME FUNC 1 [sourcename: testcode]
            LP 1 [sourcename: testcode]
                NAME param1 1 [sourcename: testcode]
                NAME param2 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                VAR 1 [sourcename: testcode]
                    NAME a 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    ASSIGN 1 [sourcename: testcode]
                        NAME a 1 [sourcename: testcode]
                        NUMBER 1.0 1 [sourcename: testcode]
                IF 1 [sourcename: testcode]
                    OR 1 [sourcename: testcode]
                        ASSIGN 1 [sourcename: testcode] [parenthesized: true]
                            NAME a 1 [sourcename: testcode]
                            NUMBER 2.0 1 [sourcename: testcode]
                        OR 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode] [parenthesized: true]
                                NAME a 1 [sourcename: testcode]
                                NUMBER 3.0 1 [sourcename: testcode]
                            NAME a 1 [sourcename: testcode] [parenthesized: true]
                    BLOCK 1 [sourcename: testcode]


Subtree1: NUMBER 2.0 1 [sourcename: expected0] [parenthesized: true]


Subtree2: ASSIGN 1 [sourcename: testcode] [parenthesized: true]
    NAME a 1 [sourcename: testcode]
    NUMBER 2.0 1 [sourcename: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:843)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:410)
junit.framework.AssertionFailedError: 
Expected: function FUNC(param1,param2){var a,b;f(b=true)||f(b=false)?a=b:a=null;return a}
Result: function FUNC(param1,param2){var a,b;f(true)||f(b=false)?a=b:a=null;return a}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        FUNCTION  1 [sourcename: expected0]
            NAME FUNC 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
                NAME param1 1 [sourcename: expected0]
                NAME param2 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                VAR 1 [sourcename: expected0]
                    NAME a 1 [sourcename: expected0]
                    NAME b 1 [sourcename: expected0]
                EXPR_RESULT 2 [sourcename: expected0]
                    HOOK 2 [sourcename: expected0]
                        OR 2 [sourcename: expected0] [parenthesized: true]
                            CALL 2 [sourcename: expected0] [free_call: 1]
                                NAME f 2 [sourcename: expected0]
                                ASSIGN 2 [sourcename: expected0]
                                    NAME b 2 [sourcename: expected0]
                                    TRUE 2 [sourcename: expected0]
                            CALL 2 [sourcename: expected0] [free_call: 1]
                                NAME f 2 [sourcename: expected0]
                                ASSIGN 2 [sourcename: expected0]
                                    NAME b 2 [sourcename: expected0]
                                    FALSE 2 [sourcename: expected0]
                        ASSIGN 2 [sourcename: expected0] [parenthesized: true]
                            NAME a 2 [sourcename: expected0]
                            NAME b 2 [sourcename: expected0]
                        ASSIGN 2 [sourcename: expected0] [parenthesized: true]
                            NAME a 2 [sourcename: expected0]
                            NULL 2 [sourcename: expected0]
                RETURN 3 [sourcename: expected0]
                    NAME a 3 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        FUNCTION  1 [sourcename: testcode]
            NAME FUNC 1 [sourcename: testcode]
            LP 1 [sourcename: testcode]
                NAME param1 1 [sourcename: testcode]
                NAME param2 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                VAR 1 [sourcename: testcode]
                    NAME a 1 [sourcename: testcode]
                    NAME b 1 [sourcename: testcode]
                EXPR_RESULT 2 [sourcename: testcode]
                    HOOK 2 [sourcename: testcode]
                        OR 2 [sourcename: testcode] [parenthesized: true]
                            CALL 2 [sourcename: testcode] [free_call: 1]
                                NAME f 2 [sourcename: testcode]
                                TRUE 2 [sourcename: testcode]
                            CALL 2 [sourcename: testcode] [free_call: 1]
                                NAME f 2 [sourcename: testcode]
                                ASSIGN 2 [sourcename: testcode]
                                    NAME b 2 [sourcename: testcode]
                                    FALSE 2 [sourcename: testcode]
                        ASSIGN 2 [sourcename: testcode] [parenthesized: true]
                            NAME a 2 [sourcename: testcode]
                            NAME b 2 [sourcename: testcode]
                        ASSIGN 2 [sourcename: testcode] [parenthesized: true]
                            NAME a 2 [sourcename: testcode]
                            NULL 2 [sourcename: testcode]
                RETURN 3 [sourcename: testcode]
                    NAME a 3 [sourcename: testcode]


Subtree1: ASSIGN 2 [sourcename: expected0]
    NAME b 2 [sourcename: expected0]
    TRUE 2 [sourcename: expected0]


Subtree2: TRUE 2 [sourcename: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:843)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:410)
junit.framework.AssertionFailedError: 
Expected: function FUNC(param1,param2){var a,b;(a?f(b=true):f(b=false))&&(a=b);return a}
Result: function FUNC(param1,param2){var a,b;(a?f(true):f(b=false))&&(a=b);return a}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        FUNCTION  1 [sourcename: expected0]
            NAME FUNC 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
                NAME param1 1 [sourcename: expected0]
                NAME param2 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                VAR 1 [sourcename: expected0]
                    NAME a 1 [sourcename: expected0]
                    NAME b 1 [sourcename: expected0]
                EXPR_RESULT 2 [sourcename: expected0]
                    AND 2 [sourcename: expected0]
                        HOOK 2 [sourcename: expected0] [parenthesized: true]
                            NAME a 2 [sourcename: expected0]
                            CALL 2 [sourcename: expected0] [free_call: 1]
                                NAME f 2 [sourcename: expected0]
                                ASSIGN 2 [sourcename: expected0]
                                    NAME b 2 [sourcename: expected0]
                                    TRUE 2 [sourcename: expected0]
                            CALL 2 [sourcename: expected0] [free_call: 1]
                                NAME f 2 [sourcename: expected0]
                                ASSIGN 2 [sourcename: expected0]
                                    NAME b 2 [sourcename: expected0]
                                    FALSE 2 [sourcename: expected0]
                        ASSIGN 2 [sourcename: expected0] [parenthesized: true]
                            NAME a 2 [sourcename: expected0]
                            NAME b 2 [sourcename: expected0]
                RETURN 3 [sourcename: expected0]
                    NAME a 3 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        FUNCTION  1 [sourcename: testcode]
            NAME FUNC 1 [sourcename: testcode]
            LP 1 [sourcename: testcode]
                NAME param1 1 [sourcename: testcode]
                NAME param2 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                VAR 1 [sourcename: testcode]
                    NAME a 1 [sourcename: testcode]
                    NAME b 1 [sourcename: testcode]
                EXPR_RESULT 2 [sourcename: testcode]
                    AND 2 [sourcename: testcode]
                        HOOK 2 [sourcename: testcode] [parenthesized: true]
                            NAME a 2 [sourcename: testcode]
                            CALL 2 [sourcename: testcode] [free_call: 1]
                                NAME f 2 [sourcename: testcode]
                                TRUE 2 [sourcename: testcode]
                            CALL 2 [sourcename: testcode] [free_call: 1]
                                NAME f 2 [sourcename: testcode]
                                ASSIGN 2 [sourcename: testcode]
                                    NAME b 2 [sourcename: testcode]
                                    FALSE 2 [sourcename: testcode]
                        ASSIGN 2 [sourcename: testcode] [parenthesized: true]
                            NAME a 2 [sourcename: testcode]
                            NAME b 2 [sourcename: testcode]
                RETURN 3 [sourcename: testcode]
                    NAME a 3 [sourcename: testcode]


Subtree1: ASSIGN 2 [sourcename: expected0]
    NAME b 2 [sourcename: expected0]
    TRUE 2 [sourcename: expected0]


Subtree2: TRUE 2 [sourcename: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:843)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:410)
junit.framework.AssertionFailedError: 
Expected: function FUNC(param1,param2){var a,b;(f(b=true)||f(b=false))&&(a=b);return a}
Result: function FUNC(param1,param2){var a,b;(f(true)||f(b=false))&&(a=b);return a}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        FUNCTION  1 [sourcename: expected0]
            NAME FUNC 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
                NAME param1 1 [sourcename: expected0]
                NAME param2 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                VAR 1 [sourcename: expected0]
                    NAME a 1 [sourcename: expected0]
                    NAME b 1 [sourcename: expected0]
                EXPR_RESULT 2 [sourcename: expected0]
                    AND 2 [sourcename: expected0]
                        OR 2 [sourcename: expected0] [parenthesized: true]
                            CALL 2 [sourcename: expected0] [free_call: 1]
                                NAME f 2 [sourcename: expected0]
                                ASSIGN 2 [sourcename: expected0]
                                    NAME b 2 [sourcename: expected0]
                                    TRUE 2 [sourcename: expected0]
                            CALL 2 [sourcename: expected0] [free_call: 1]
                                NAME f 2 [sourcename: expected0]
                                ASSIGN 2 [sourcename: expected0]
                                    NAME b 2 [sourcename: expected0]
                                    FALSE 2 [sourcename: expected0]
                        ASSIGN 2 [sourcename: expected0] [parenthesized: true]
                            NAME a 2 [sourcename: expected0]
                            NAME b 2 [sourcename: expected0]
                RETURN 3 [sourcename: expected0]
                    NAME a 3 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        FUNCTION  1 [sourcename: testcode]
            NAME FUNC 1 [sourcename: testcode]
            LP 1 [sourcename: testcode]
                NAME param1 1 [sourcename: testcode]
                NAME param2 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                VAR 1 [sourcename: testcode]
                    NAME a 1 [sourcename: testcode]
                    NAME b 1 [sourcename: testcode]
                EXPR_RESULT 2 [sourcename: testcode]
                    AND 2 [sourcename: testcode]
                        OR 2 [sourcename: testcode] [parenthesized: true]
                            CALL 2 [sourcename: testcode] [free_call: 1]
                                NAME f 2 [sourcename: testcode]
                                TRUE 2 [sourcename: testcode]
                            CALL 2 [sourcename: testcode] [free_call: 1]
                                NAME f 2 [sourcename: testcode]
                                ASSIGN 2 [sourcename: testcode]
                                    NAME b 2 [sourcename: testcode]
                                    FALSE 2 [sourcename: testcode]
                        ASSIGN 2 [sourcename: testcode] [parenthesized: true]
                            NAME a 2 [sourcename: testcode]
                            NAME b 2 [sourcename: testcode]
                RETURN 3 [sourcename: testcode]
                    NAME a 3 [sourcename: testcode]


Subtree1: ASSIGN 2 [sourcename: expected0]
    NAME b 2 [sourcename: expected0]
    TRUE 2 [sourcename: expected0]


Subtree2: TRUE 2 [sourcename: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:843)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:410)
junit.framework.AssertionFailedError: 
Expected: function FUNC(param1,param2){var a;a=1;if(2||(a=3)||a);}
Result: function FUNC(param1,param2){var a;a=1;if((a=2)||(a=3)||a);}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        FUNCTION  1 [sourcename: expected0]
            NAME FUNC 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
                NAME param1 1 [sourcename: expected0]
                NAME param2 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                VAR 1 [sourcename: expected0]
                    NAME a 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    ASSIGN 1 [sourcename: expected0]
                        NAME a 1 [sourcename: expected0]
                        NUMBER 1.0 1 [sourcename: expected0]
                IF 1 [sourcename: expected0]
                    OR 1 [sourcename: expected0]
                        NUMBER 2.0 1 [sourcename: expected0] [parenthesized: true]
                        OR 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0] [parenthesized: true]
                                NAME a 1 [sourcename: expected0]
                                NUMBER 3.0 1 [sourcename: expected0]
                            NAME a 1 [sourcename: expected0] [parenthesized: true]
                    BLOCK 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        FUNCTION  1 [sourcename: testcode]
            NAME FUNC 1 [sourcename: testcode]
            LP 1 [sourcename: testcode]
                NAME param1 1 [sourcename: testcode]
                NAME param2 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                VAR 1 [sourcename: testcode]
                    NAME a 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    ASSIGN 1 [sourcename: testcode]
                        NAME a 1 [sourcename: testcode]
                        NUMBER 1.0 1 [sourcename: testcode]
                IF 1 [sourcename: testcode]
                    OR 1 [sourcename: testcode]
                        ASSIGN 1 [sourcename: testcode] [parenthesized: true]
                            NAME a 1 [sourcename: testcode]
                            NUMBER 2.0 1 [sourcename: testcode]
                        OR 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode] [parenthesized: true]
                                NAME a 1 [sourcename: testcode]
                                NUMBER 3.0 1 [sourcename: testcode]
                            NAME a 1 [sourcename: testcode] [parenthesized: true]
                    BLOCK 1 [sourcename: testcode]


Subtree1: NUMBER 2.0 1 [sourcename: expected0] [parenthesized: true]


Subtree2: ASSIGN 1 [sourcename: testcode] [parenthesized: true]
    NAME a 1 [sourcename: testcode]
    NUMBER 2.0 1 [sourcename: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:843)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:410)
junit.framework.AssertionFailedError: 
Expected: function FUNC(param1,param2){var a,b;f(b=true)||f(b=false)?a=b:a=null;return a}
Result: function FUNC(param1,param2){var a,b;f(true)||f(b=false)?a=b:a=null;return a}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        FUNCTION  1 [sourcename: expected0]
            NAME FUNC 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
                NAME param1 1 [sourcename: expected0]
                NAME param2 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                VAR 1 [sourcename: expected0]
                    NAME a 1 [sourcename: expected0]
                    NAME b 1 [sourcename: expected0]
                EXPR_RESULT 2 [sourcename: expected0]
                    HOOK 2 [sourcename: expected0]
                        OR 2 [sourcename: expected0] [parenthesized: true]
                            CALL 2 [sourcename: expected0] [free_call: 1]
                                NAME f 2 [sourcename: expected0]
                                ASSIGN 2 [sourcename: expected0]
                                    NAME b 2 [sourcename: expected0]
                                    TRUE 2 [sourcename: expected0]
                            CALL 2 [sourcename: expected0] [free_call: 1]
                                NAME f 2 [sourcename: expected0]
                                ASSIGN 2 [sourcename: expected0]
                                    NAME b 2 [sourcename: expected0]
                                    FALSE 2 [sourcename: expected0]
                        ASSIGN 2 [sourcename: expected0] [parenthesized: true]
                            NAME a 2 [sourcename: expected0]
                            NAME b 2 [sourcename: expected0]
                        ASSIGN 2 [sourcename: expected0] [parenthesized: true]
                            NAME a 2 [sourcename: expected0]
                            NULL 2 [sourcename: expected0]
                RETURN 3 [sourcename: expected0]
                    NAME a 3 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        FUNCTION  1 [sourcename: testcode]
            NAME FUNC 1 [sourcename: testcode]
            LP 1 [sourcename: testcode]
                NAME param1 1 [sourcename: testcode]
                NAME param2 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                VAR 1 [sourcename: testcode]
                    NAME a 1 [sourcename: testcode]
                    NAME b 1 [sourcename: testcode]
                EXPR_RESULT 2 [sourcename: testcode]
                    HOOK 2 [sourcename: testcode]
                        OR 2 [sourcename: testcode] [parenthesized: true]
                            CALL 2 [sourcename: testcode] [free_call: 1]
                                NAME f 2 [sourcename: testcode]
                                TRUE 2 [sourcename: testcode]
                            CALL 2 [sourcename: testcode] [free_call: 1]
                                NAME f 2 [sourcename: testcode]
                                ASSIGN 2 [sourcename: testcode]
                                    NAME b 2 [sourcename: testcode]
                                    FALSE 2 [sourcename: testcode]
                        ASSIGN 2 [sourcename: testcode] [parenthesized: true]
                            NAME a 2 [sourcename: testcode]
                            NAME b 2 [sourcename: testcode]
                        ASSIGN 2 [sourcename: testcode] [parenthesized: true]
                            NAME a 2 [sourcename: testcode]
                            NULL 2 [sourcename: testcode]
                RETURN 3 [sourcename: testcode]
                    NAME a 3 [sourcename: testcode]


Subtree1: ASSIGN 2 [sourcename: expected0]
    NAME b 2 [sourcename: expected0]
    TRUE 2 [sourcename: expected0]


Subtree2: TRUE 2 [sourcename: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:843)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:410)
junit.framework.AssertionFailedError: 
Expected: function FUNC(param1,param2){var a,b;(a?f(b=true):f(b=false))&&(a=b);return a}
Result: function FUNC(param1,param2){var a,b;(a?f(true):f(b=false))&&(a=b);return a}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        FUNCTION  1 [sourcename: expected0]
            NAME FUNC 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
                NAME param1 1 [sourcename: expected0]
                NAME param2 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                VAR 1 [sourcename: expected0]
                    NAME a 1 [sourcename: expected0]
                    NAME b 1 [sourcename: expected0]
                EXPR_RESULT 2 [sourcename: expected0]
                    AND 2 [sourcename: expected0]
                        HOOK 2 [sourcename: expected0] [parenthesized: true]
                            NAME a 2 [sourcename: expected0]
                            CALL 2 [sourcename: expected0] [free_call: 1]
                                NAME f 2 [sourcename: expected0]
                                ASSIGN 2 [sourcename: expected0]
                                    NAME b 2 [sourcename: expected0]
                                    TRUE 2 [sourcename: expected0]
                            CALL 2 [sourcename: expected0] [free_call: 1]
                                NAME f 2 [sourcename: expected0]
                                ASSIGN 2 [sourcename: expected0]
                                    NAME b 2 [sourcename: expected0]
                                    FALSE 2 [sourcename: expected0]
                        ASSIGN 2 [sourcename: expected0] [parenthesized: true]
                            NAME a 2 [sourcename: expected0]
                            NAME b 2 [sourcename: expected0]
                RETURN 3 [sourcename: expected0]
                    NAME a 3 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        FUNCTION  1 [sourcename: testcode]
            NAME FUNC 1 [sourcename: testcode]
            LP 1 [sourcename: testcode]
                NAME param1 1 [sourcename: testcode]
                NAME param2 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                VAR 1 [sourcename: testcode]
                    NAME a 1 [sourcename: testcode]
                    NAME b 1 [sourcename: testcode]
                EXPR_RESULT 2 [sourcename: testcode]
                    AND 2 [sourcename: testcode]
                        HOOK 2 [sourcename: testcode] [parenthesized: true]
                            NAME a 2 [sourcename: testcode]
                            CALL 2 [sourcename: testcode] [free_call: 1]
                                NAME f 2 [sourcename: testcode]
                                TRUE 2 [sourcename: testcode]
                            CALL 2 [sourcename: testcode] [free_call: 1]
                                NAME f 2 [sourcename: testcode]
                                ASSIGN 2 [sourcename: testcode]
                                    NAME b 2 [sourcename: testcode]
                                    FALSE 2 [sourcename: testcode]
                        ASSIGN 2 [sourcename: testcode] [parenthesized: true]
                            NAME a 2 [sourcename: testcode]
                            NAME b 2 [sourcename: testcode]
                RETURN 3 [sourcename: testcode]
                    NAME a 3 [sourcename: testcode]


Subtree1: ASSIGN 2 [sourcename: expected0]
    NAME b 2 [sourcename: expected0]
    TRUE 2 [sourcename: expected0]


Subtree2: TRUE 2 [sourcename: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:843)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:410)
junit.framework.AssertionFailedError: 
Expected: function FUNC(param1,param2){var a,b;(f(b=true)||f(b=false))&&(a=b);return a}
Result: function FUNC(param1,param2){var a,b;(f(true)||f(b=false))&&(a=b);return a}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        FUNCTION  1 [sourcename: expected0]
            NAME FUNC 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
                NAME param1 1 [sourcename: expected0]
                NAME param2 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                VAR 1 [sourcename: expected0]
                    NAME a 1 [sourcename: expected0]
                    NAME b 1 [sourcename: expected0]
                EXPR_RESULT 2 [sourcename: expected0]
                    AND 2 [sourcename: expected0]
                        OR 2 [sourcename: expected0] [parenthesized: true]
                            CALL 2 [sourcename: expected0] [free_call: 1]
                                NAME f 2 [sourcename: expected0]
                                ASSIGN 2 [sourcename: expected0]
                                    NAME b 2 [sourcename: expected0]
                                    TRUE 2 [sourcename: expected0]
                            CALL 2 [sourcename: expected0] [free_call: 1]
                                NAME f 2 [sourcename: expected0]
                                ASSIGN 2 [sourcename: expected0]
                                    NAME b 2 [sourcename: expected0]
                                    FALSE 2 [sourcename: expected0]
                        ASSIGN 2 [sourcename: expected0] [parenthesized: true]
                            NAME a 2 [sourcename: expected0]
                            NAME b 2 [sourcename: expected0]
                RETURN 3 [sourcename: expected0]
                    NAME a 3 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        FUNCTION  1 [sourcename: testcode]
            NAME FUNC 1 [sourcename: testcode]
            LP 1 [sourcename: testcode]
                NAME param1 1 [sourcename: testcode]
                NAME param2 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                VAR 1 [sourcename: testcode]
                    NAME a 1 [sourcename: testcode]
                    NAME b 1 [sourcename: testcode]
                EXPR_RESULT 2 [sourcename: testcode]
                    AND 2 [sourcename: testcode]
                        OR 2 [sourcename: testcode] [parenthesized: true]
                            CALL 2 [sourcename: testcode] [free_call: 1]
                                NAME f 2 [sourcename: testcode]
                                TRUE 2 [sourcename: testcode]
                            CALL 2 [sourcename: testcode] [free_call: 1]
                                NAME f 2 [sourcename: testcode]
                                ASSIGN 2 [sourcename: testcode]
                                    NAME b 2 [sourcename: testcode]
                                    FALSE 2 [sourcename: testcode]
                        ASSIGN 2 [sourcename: testcode] [parenthesized: true]
                            NAME a 2 [sourcename: testcode]
                            NAME b 2 [sourcename: testcode]
                RETURN 3 [sourcename: testcode]
                    NAME a 3 [sourcename: testcode]


Subtree1: ASSIGN 2 [sourcename: expected0]
    NAME b 2 [sourcename: expected0]
    TRUE 2 [sourcename: expected0]


Subtree2: TRUE 2 [sourcename: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:843)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:410)
18:29:22.196 [pool-4-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (913 ms)
<> Total tests run: 220
<> Ignored tests: 0
<> Failed tests: 20
~ testTwoMethods(com.google.javascript.jscomp.CrossModuleMethodMotionTest)
[
Expected: var JSCompiler_stubMap=[];function JSCompiler_stubMethod(JSCompiler_stubMethod_id){return function(){return JSCompiler_stubMap[JSCompiler_stubMethod_id].apply(this,arguments)}}function JSCompiler_unstubMethod(JSCompiler_unstubMethod_id,JSCompiler_unstubMethod_body){return JSCompiler_stubMap[JSCompiler_unstubMethod_id]=JSCompiler_unstubMethod_body}function Foo(){}Foo.prototype.baz=JSCompiler_stubMethod(1);Foo.prototype.callBaz=JSCompiler_stubMethod(0);Foo.prototype.baz=JSCompiler_unstubMethod(1,function(){});
Foo.prototype.callBaz=JSCompiler_unstubMethod(0,function(){this.baz()});(new Foo).callBaz()
Result: var JSCompiler_stubMap=[];function JSCompiler_stubMethod(JSCompiler_stubMethod_id){return function(){return JSCompiler_stubMap[JSCompiler_stubMethod_id].apply(this,arguments)}}function JSCompiler_unstubMethod(JSCompiler_unstubMethod_id,JSCompiler_unstubMethod_body){return JSCompiler_stubMap[JSCompiler_unstubMethod_id]=JSCompiler_unstubMethod_body}function Foo(){}Foo.prototype.baz=JSCompiler_stubMethod(0);Foo.prototype.callBaz=JSCompiler_stubMethod(1);
Foo.prototype.callBaz=JSCompiler_unstubMethod(1,function(){this.baz()});Foo.prototype.baz=JSCompiler_unstubMethod(0,function(){});(new Foo).callBaz()
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_stubMap 1 [sourcename: expected0]
                ARRAYLIT 1 [sourcename: expected0]
        FUNCTION  1 [sourcename: expected0]
            NAME JSCompiler_stubMethod 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
                NAME JSCompiler_stubMethod_id 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                RETURN 1 [sourcename: expected0]
                    FUNCTION  1 [sourcename: expected0]
                        NAME  1 [sourcename: expected0]
                        LP 1 [sourcename: expected0]
                        BLOCK 1 [sourcename: expected0]
                            RETURN 1 [sourcename: expected0]
                                CALL 1 [sourcename: expected0]
                                    GETPROP 1 [sourcename: expected0]
                                        GETELEM 1 [sourcename: expected0]
                                            NAME JSCompiler_stubMap 1 [sourcename: expected0]
                                            NAME JSCompiler_stubMethod_id 1 [sourcename: expected0]
                                        STRING apply 1 [sourcename: expected0]
                                    THIS 1 [sourcename: expected0]
                                    NAME arguments 1 [sourcename: expected0]
        FUNCTION  1 [sourcename: expected0]
            NAME JSCompiler_unstubMethod 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
                NAME JSCompiler_unstubMethod_id 1 [sourcename: expected0]
                NAME JSCompiler_unstubMethod_body 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                RETURN 1 [sourcename: expected0]
                    ASSIGN 1 [sourcename: expected0]
                        GETELEM 1 [sourcename: expected0]
                            NAME JSCompiler_stubMap 1 [sourcename: expected0]
                            NAME JSCompiler_unstubMethod_id 1 [sourcename: expected0]
                        NAME JSCompiler_unstubMethod_body 1 [sourcename: expected0]
        FUNCTION  1 [sourcename: expected0]
            NAME Foo 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            ASSIGN 1 [sourcename: expected0]
                GETPROP 1 [sourcename: expected0]
                    GETPROP 1 [sourcename: expected0]
                        NAME Foo 1 [sourcename: expected0]
                        STRING prototype 1 [sourcename: expected0]
                    STRING baz 1 [sourcename: expected0]
                CALL 1 [sourcename: expected0] [free_call: 1]
                    NAME JSCompiler_stubMethod 1 [sourcename: expected0]
                    NUMBER 1.0 1 [sourcename: expected0]
    SCRIPT 1 [sourcename: expected1] [synthetic: 1]
        EXPR_RESULT 1 [sourcename: expected1]
            ASSIGN 1 [sourcename: expected1]
                GETPROP 1 [sourcename: expected1]
                    GETPROP 1 [sourcename: expected1]
                        NAME Foo 1 [sourcename: expected1]
                        STRING prototype 1 [sourcename: expected1]
                    STRING callBaz 1 [sourcename: expected1]
                CALL 1 [sourcename: expected1] [free_call: 1]
                    NAME JSCompiler_stubMethod 1 [sourcename: expected1]
                    NUMBER 0.0 1 [sourcename: expected1]
    SCRIPT 1 [sourcename: expected2] [synthetic: 1]
        EXPR_RESULT 1 [sourcename: expected2]
            ASSIGN 1 [sourcename: expected2]
                GETPROP 1 [sourcename: expected2]
                    GETPROP 1 [sourcename: expected2]
                        NAME Foo 1 [sourcename: expected2]
                        STRING prototype 1 [sourcename: expected2]
                    STRING baz 1 [sourcename: expected2]
                CALL 1 [sourcename: expected2] [free_call: 1]
                    NAME JSCompiler_unstubMethod 1 [sourcename: expected2]
                    NUMBER 1.0 1 [sourcename: expected2]
                    FUNCTION  1 [sourcename: expected2]
                        NAME  1 [sourcename: expected2]
                        LP 1 [sourcename: expected2]
                        BLOCK 1 [sourcename: expected2]
        EXPR_RESULT 1 [sourcename: expected2]
            ASSIGN 1 [sourcename: expected2]
                GETPROP 1 [sourcename: expected2]
                    GETPROP 1 [sourcename: expected2]
                        NAME Foo 1 [sourcename: expected2]
                        STRING prototype 1 [sourcename: expected2]
                    STRING callBaz 1 [sourcename: expected2]
                CALL 1 [sourcename: expected2] [free_call: 1]
                    NAME JSCompiler_unstubMethod 1 [sourcename: expected2]
                    NUMBER 0.0 1 [sourcename: expected2]
                    FUNCTION  1 [sourcename: expected2]
                        NAME  1 [sourcename: expected2]
                        LP 1 [sourcename: expected2]
                        BLOCK 1 [sourcename: expected2]
                            EXPR_RESULT 1 [sourcename: expected2]
                                CALL 1 [sourcename: expected2]
                                    GETPROP 1 [sourcename: expected2]
                                        THIS 1 [sourcename: expected2]
                                        STRING baz 1 [sourcename: expected2]
        EXPR_RESULT 1 [sourcename: expected2]
            CALL 1 [sourcename: expected2]
                GETPROP 1 [sourcename: expected2]
                    NEW 1 [sourcename: expected2] [parenthesized: true]
                        NAME Foo 1 [sourcename: expected2]
                    STRING callBaz 1 [sourcename: expected2]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: i0] [synthetic: 1]
        VAR 1 [sourcename:  [synthetic] ]
            NAME JSCompiler_stubMap 1 [sourcename:  [synthetic] ]
                ARRAYLIT 1 [sourcename:  [synthetic] ]
        FUNCTION  1 [sourcename:  [synthetic] ]
            NAME JSCompiler_stubMethod 1 [sourcename:  [synthetic] ]
            LP 1 [sourcename:  [synthetic] ]
                NAME JSCompiler_stubMethod_id 1 [sourcename:  [synthetic] ]
            BLOCK 1 [sourcename:  [synthetic] ]
                RETURN 1 [sourcename:  [synthetic] ]
                    FUNCTION  1 [sourcename:  [synthetic] ]
                        NAME  1 [sourcename:  [synthetic] ]
                        LP 1 [sourcename:  [synthetic] ]
                        BLOCK 1 [sourcename:  [synthetic] ]
                            RETURN 1 [sourcename:  [synthetic] ]
                                CALL 1 [sourcename:  [synthetic] ]
                                    GETPROP 1 [sourcename:  [synthetic] ]
                                        GETELEM 1 [sourcename:  [synthetic] ]
                                            NAME JSCompiler_stubMap 1 [sourcename:  [synthetic] ]
                                            NAME JSCompiler_stubMethod_id 1 [sourcename:  [synthetic] ]
                                        STRING apply 1 [sourcename:  [synthetic] ]
                                    THIS 1 [sourcename:  [synthetic] ]
                                    NAME arguments 1 [sourcename:  [synthetic] ]
        FUNCTION  1 [sourcename:  [synthetic] ]
            NAME JSCompiler_unstubMethod 1 [sourcename:  [synthetic] ]
            LP 1 [sourcename:  [synthetic] ]
                NAME JSCompiler_unstubMethod_id 1 [sourcename:  [synthetic] ]
                NAME JSCompiler_unstubMethod_body 1 [sourcename:  [synthetic] ]
            BLOCK 1 [sourcename:  [synthetic] ]
                RETURN 1 [sourcename:  [synthetic] ]
                    ASSIGN 1 [sourcename:  [synthetic] ]
                        GETELEM 1 [sourcename:  [synthetic] ]
                            NAME JSCompiler_stubMap 1 [sourcename:  [synthetic] ]
                            NAME JSCompiler_unstubMethod_id 1 [sourcename:  [synthetic] ]
                        NAME JSCompiler_unstubMethod_body 1 [sourcename:  [synthetic] ]
        FUNCTION  1 [sourcename: i0]
            NAME Foo 1 [sourcename: i0]
            LP 1 [sourcename: i0]
            BLOCK 1 [sourcename: i0]
        EXPR_RESULT 1 [sourcename: i0]
            ASSIGN 1 [sourcename: i0]
                GETPROP 1 [sourcename: i0]
                    GETPROP 1 [sourcename: i0]
                        NAME Foo 1 [sourcename: i0]
                        STRING prototype 1 [sourcename: i0]
                    STRING baz 1 [sourcename: i0]
                CALL 1 [sourcename: i0]
                    NAME JSCompiler_stubMethod 1 [sourcename: i0]
                    NUMBER 0.0 1 [sourcename: i0]
    SCRIPT 1 [sourcename: i1] [synthetic: 1]
        EXPR_RESULT 1 [sourcename: i1]
            ASSIGN 1 [sourcename: i1]
                GETPROP 1 [sourcename: i1]
                    GETPROP 1 [sourcename: i1]
                        NAME Foo 1 [sourcename: i1]
                        STRING prototype 1 [sourcename: i1]
                    STRING callBaz 1 [sourcename: i1]
                CALL 1 [sourcename: i1]
                    NAME JSCompiler_stubMethod 1 [sourcename: i1]
                    NUMBER 1.0 1 [sourcename: i1]
    SCRIPT 1 [sourcename: i2] [synthetic: 1]
        EXPR_RESULT 1 [sourcename: i1]
            ASSIGN 1 [sourcename: i1]
                GETPROP 1 [sourcename: i1]
                    GETPROP 1 [sourcename: i1]
                        NAME Foo 1 [sourcename: i1]
                        STRING prototype 1 [sourcename: i1]
                    STRING callBaz 1 [sourcename: i1]
                CALL 1 [sourcename: i1]
                    NAME JSCompiler_unstubMethod 1 [sourcename: i1]
                    NUMBER 1.0 1 [sourcename: i1]
                    FUNCTION  1 [sourcename: i1]
                        NAME  1 [sourcename: i1]
                        LP 1 [sourcename: i1]
                        BLOCK 1 [sourcename: i1]
                            EXPR_RESULT 1 [sourcename: i1]
                                CALL 1 [sourcename: i1]
                                    GETPROP 1 [sourcename: i1]
                                        THIS 1 [sourcename: i1]
                                        STRING baz 1 [sourcename: i1]
        EXPR_RESULT 1 [sourcename: i0]
            ASSIGN 1 [sourcename: i0]
                GETPROP 1 [sourcename: i0]
                    GETPROP 1 [sourcename: i0]
                        NAME Foo 1 [sourcename: i0]
                        STRING prototype 1 [sourcename: i0]
                    STRING baz 1 [sourcename: i0]
                CALL 1 [sourcename: i0]
                    NAME JSCompiler_unstubMethod 1 [sourcename: i0]
                    NUMBER 0.0 1 [sourcename: i0]
                    FUNCTION  1 [sourcename: i0]
                        NAME  1 [sourcename: i0]
                        LP 1 [sourcename: i0]
                        BLOCK 1 [sourcename: i0]
        EXPR_RESULT 1 [sourcename: i2]
            CALL 1 [sourcename: i2]
                GETPROP 1 [sourcename: i2]
                    NEW 1 [sourcename: i2] [parenthesized: true]
                        NAME Foo 1 [sourcename: i2]
                    STRING callBaz 1 [sourcename: i2]


Subtree1: NUMBER 1.0 1 [sourcename: expected0]


Subtree2: NUMBER 0.0 1 [sourcename: i0]
]
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_stubMap=[];function JSCompiler_stubMethod(JSCompiler_stubMethod_id){return function(){return JSCompiler_stubMap[JSCompiler_stubMethod_id].apply(this,arguments)}}function JSCompiler_unstubMethod(JSCompiler_unstubMethod_id,JSCompiler_unstubMethod_body){return JSCompiler_stubMap[JSCompiler_unstubMethod_id]=JSCompiler_unstubMethod_body}function Foo(){}Foo.prototype.baz=JSCompiler_stubMethod(1);Foo.prototype.callBaz=JSCompiler_stubMethod(0);Foo.prototype.baz=JSCompiler_unstubMethod(1,function(){});
Foo.prototype.callBaz=JSCompiler_unstubMethod(0,function(){this.baz()});(new Foo).callBaz()
Result: var JSCompiler_stubMap=[];function JSCompiler_stubMethod(JSCompiler_stubMethod_id){return function(){return JSCompiler_stubMap[JSCompiler_stubMethod_id].apply(this,arguments)}}function JSCompiler_unstubMethod(JSCompiler_unstubMethod_id,JSCompiler_unstubMethod_body){return JSCompiler_stubMap[JSCompiler_unstubMethod_id]=JSCompiler_unstubMethod_body}function Foo(){}Foo.prototype.baz=JSCompiler_stubMethod(0);Foo.prototype.callBaz=JSCompiler_stubMethod(1);
Foo.prototype.callBaz=JSCompiler_unstubMethod(1,function(){this.baz()});Foo.prototype.baz=JSCompiler_unstubMethod(0,function(){});(new Foo).callBaz()
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_stubMap 1 [sourcename: expected0]
                ARRAYLIT 1 [sourcename: expected0]
        FUNCTION  1 [sourcename: expected0]
            NAME JSCompiler_stubMethod 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
                NAME JSCompiler_stubMethod_id 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                RETURN 1 [sourcename: expected0]
                    FUNCTION  1 [sourcename: expected0]
                        NAME  1 [sourcename: expected0]
                        LP 1 [sourcename: expected0]
                        BLOCK 1 [sourcename: expected0]
                            RETURN 1 [sourcename: expected0]
                                CALL 1 [sourcename: expected0]
                                    GETPROP 1 [sourcename: expected0]
                                        GETELEM 1 [sourcename: expected0]
                                            NAME JSCompiler_stubMap 1 [sourcename: expected0]
                                            NAME JSCompiler_stubMethod_id 1 [sourcename: expected0]
                                        STRING apply 1 [sourcename: expected0]
                                    THIS 1 [sourcename: expected0]
                                    NAME arguments 1 [sourcename: expected0]
        FUNCTION  1 [sourcename: expected0]
            NAME JSCompiler_unstubMethod 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
                NAME JSCompiler_unstubMethod_id 1 [sourcename: expected0]
                NAME JSCompiler_unstubMethod_body 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                RETURN 1 [sourcename: expected0]
                    ASSIGN 1 [sourcename: expected0]
                        GETELEM 1 [sourcename: expected0]
                            NAME JSCompiler_stubMap 1 [sourcename: expected0]
                            NAME JSCompiler_unstubMethod_id 1 [sourcename: expected0]
                        NAME JSCompiler_unstubMethod_body 1 [sourcename: expected0]
        FUNCTION  1 [sourcename: expected0]
            NAME Foo 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            ASSIGN 1 [sourcename: expected0]
                GETPROP 1 [sourcename: expected0]
                    GETPROP 1 [sourcename: expected0]
                        NAME Foo 1 [sourcename: expected0]
                        STRING prototype 1 [sourcename: expected0]
                    STRING baz 1 [sourcename: expected0]
                CALL 1 [sourcename: expected0] [free_call: 1]
                    NAME JSCompiler_stubMethod 1 [sourcename: expected0]
                    NUMBER 1.0 1 [sourcename: expected0]
    SCRIPT 1 [sourcename: expected1] [synthetic: 1]
        EXPR_RESULT 1 [sourcename: expected1]
            ASSIGN 1 [sourcename: expected1]
                GETPROP 1 [sourcename: expected1]
                    GETPROP 1 [sourcename: expected1]
                        NAME Foo 1 [sourcename: expected1]
                        STRING prototype 1 [sourcename: expected1]
                    STRING callBaz 1 [sourcename: expected1]
                CALL 1 [sourcename: expected1] [free_call: 1]
                    NAME JSCompiler_stubMethod 1 [sourcename: expected1]
                    NUMBER 0.0 1 [sourcename: expected1]
    SCRIPT 1 [sourcename: expected2] [synthetic: 1]
        EXPR_RESULT 1 [sourcename: expected2]
            ASSIGN 1 [sourcename: expected2]
                GETPROP 1 [sourcename: expected2]
                    GETPROP 1 [sourcename: expected2]
                        NAME Foo 1 [sourcename: expected2]
                        STRING prototype 1 [sourcename: expected2]
                    STRING baz 1 [sourcename: expected2]
                CALL 1 [sourcename: expected2] [free_call: 1]
                    NAME JSCompiler_unstubMethod 1 [sourcename: expected2]
                    NUMBER 1.0 1 [sourcename: expected2]
                    FUNCTION  1 [sourcename: expected2]
                        NAME  1 [sourcename: expected2]
                        LP 1 [sourcename: expected2]
                        BLOCK 1 [sourcename: expected2]
        EXPR_RESULT 1 [sourcename: expected2]
            ASSIGN 1 [sourcename: expected2]
                GETPROP 1 [sourcename: expected2]
                    GETPROP 1 [sourcename: expected2]
                        NAME Foo 1 [sourcename: expected2]
                        STRING prototype 1 [sourcename: expected2]
                    STRING callBaz 1 [sourcename: expected2]
                CALL 1 [sourcename: expected2] [free_call: 1]
                    NAME JSCompiler_unstubMethod 1 [sourcename: expected2]
                    NUMBER 0.0 1 [sourcename: expected2]
                    FUNCTION  1 [sourcename: expected2]
                        NAME  1 [sourcename: expected2]
                        LP 1 [sourcename: expected2]
                        BLOCK 1 [sourcename: expected2]
                            EXPR_RESULT 1 [sourcename: expected2]
                                CALL 1 [sourcename: expected2]
                                    GETPROP 1 [sourcename: expected2]
                                        THIS 1 [sourcename: expected2]
                                        STRING baz 1 [sourcename: expected2]
        EXPR_RESULT 1 [sourcename: expected2]
            CALL 1 [sourcename: expected2]
                GETPROP 1 [sourcename: expected2]
                    NEW 1 [sourcename: expected2] [parenthesized: true]
                        NAME Foo 1 [sourcename: expected2]
                    STRING callBaz 1 [sourcename: expected2]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: i0] [synthetic: 1]
        VAR 1 [sourcename:  [synthetic] ]
            NAME JSCompiler_stubMap 1 [sourcename:  [synthetic] ]
                ARRAYLIT 1 [sourcename:  [synthetic] ]
        FUNCTION  1 [sourcename:  [synthetic] ]
            NAME JSCompiler_stubMethod 1 [sourcename:  [synthetic] ]
            LP 1 [sourcename:  [synthetic] ]
                NAME JSCompiler_stubMethod_id 1 [sourcename:  [synthetic] ]
            BLOCK 1 [sourcename:  [synthetic] ]
                RETURN 1 [sourcename:  [synthetic] ]
                    FUNCTION  1 [sourcename:  [synthetic] ]
                        NAME  1 [sourcename:  [synthetic] ]
                        LP 1 [sourcename:  [synthetic] ]
                        BLOCK 1 [sourcename:  [synthetic] ]
                            RETURN 1 [sourcename:  [synthetic] ]
                                CALL 1 [sourcename:  [synthetic] ]
                                    GETPROP 1 [sourcename:  [synthetic] ]
                                        GETELEM 1 [sourcename:  [synthetic] ]
                                            NAME JSCompiler_stubMap 1 [sourcename:  [synthetic] ]
                                            NAME JSCompiler_stubMethod_id 1 [sourcename:  [synthetic] ]
                                        STRING apply 1 [sourcename:  [synthetic] ]
                                    THIS 1 [sourcename:  [synthetic] ]
                                    NAME arguments 1 [sourcename:  [synthetic] ]
        FUNCTION  1 [sourcename:  [synthetic] ]
            NAME JSCompiler_unstubMethod 1 [sourcename:  [synthetic] ]
            LP 1 [sourcename:  [synthetic] ]
                NAME JSCompiler_unstubMethod_id 1 [sourcename:  [synthetic] ]
                NAME JSCompiler_unstubMethod_body 1 [sourcename:  [synthetic] ]
            BLOCK 1 [sourcename:  [synthetic] ]
                RETURN 1 [sourcename:  [synthetic] ]
                    ASSIGN 1 [sourcename:  [synthetic] ]
                        GETELEM 1 [sourcename:  [synthetic] ]
                            NAME JSCompiler_stubMap 1 [sourcename:  [synthetic] ]
                            NAME JSCompiler_unstubMethod_id 1 [sourcename:  [synthetic] ]
                        NAME JSCompiler_unstubMethod_body 1 [sourcename:  [synthetic] ]
        FUNCTION  1 [sourcename: i0]
            NAME Foo 1 [sourcename: i0]
            LP 1 [sourcename: i0]
            BLOCK 1 [sourcename: i0]
        EXPR_RESULT 1 [sourcename: i0]
            ASSIGN 1 [sourcename: i0]
                GETPROP 1 [sourcename: i0]
                    GETPROP 1 [sourcename: i0]
                        NAME Foo 1 [sourcename: i0]
                        STRING prototype 1 [sourcename: i0]
                    STRING baz 1 [sourcename: i0]
                CALL 1 [sourcename: i0]
                    NAME JSCompiler_stubMethod 1 [sourcename: i0]
                    NUMBER 0.0 1 [sourcename: i0]
    SCRIPT 1 [sourcename: i1] [synthetic: 1]
        EXPR_RESULT 1 [sourcename: i1]
            ASSIGN 1 [sourcename: i1]
                GETPROP 1 [sourcename: i1]
                    GETPROP 1 [sourcename: i1]
                        NAME Foo 1 [sourcename: i1]
                        STRING prototype 1 [sourcename: i1]
                    STRING callBaz 1 [sourcename: i1]
                CALL 1 [sourcename: i1]
                    NAME JSCompiler_stubMethod 1 [sourcename: i1]
                    NUMBER 1.0 1 [sourcename: i1]
    SCRIPT 1 [sourcename: i2] [synthetic: 1]
        EXPR_RESULT 1 [sourcename: i1]
            ASSIGN 1 [sourcename: i1]
                GETPROP 1 [sourcename: i1]
                    GETPROP 1 [sourcename: i1]
                        NAME Foo 1 [sourcename: i1]
                        STRING prototype 1 [sourcename: i1]
                    STRING callBaz 1 [sourcename: i1]
                CALL 1 [sourcename: i1]
                    NAME JSCompiler_unstubMethod 1 [sourcename: i1]
                    NUMBER 1.0 1 [sourcename: i1]
                    FUNCTION  1 [sourcename: i1]
                        NAME  1 [sourcename: i1]
                        LP 1 [sourcename: i1]
                        BLOCK 1 [sourcename: i1]
                            EXPR_RESULT 1 [sourcename: i1]
                                CALL 1 [sourcename: i1]
                                    GETPROP 1 [sourcename: i1]
                                        THIS 1 [sourcename: i1]
                                        STRING baz 1 [sourcename: i1]
        EXPR_RESULT 1 [sourcename: i0]
            ASSIGN 1 [sourcename: i0]
                GETPROP 1 [sourcename: i0]
                    GETPROP 1 [sourcename: i0]
                        NAME Foo 1 [sourcename: i0]
                        STRING prototype 1 [sourcename: i0]
                    STRING baz 1 [sourcename: i0]
                CALL 1 [sourcename: i0]
                    NAME JSCompiler_unstubMethod 1 [sourcename: i0]
                    NUMBER 0.0 1 [sourcename: i0]
                    FUNCTION  1 [sourcename: i0]
                        NAME  1 [sourcename: i0]
                        LP 1 [sourcename: i0]
                        BLOCK 1 [sourcename: i0]
        EXPR_RESULT 1 [sourcename: i2]
            CALL 1 [sourcename: i2]
                GETPROP 1 [sourcename: i2]
                    NEW 1 [sourcename: i2] [parenthesized: true]
                        NAME Foo 1 [sourcename: i2]
                    STRING callBaz 1 [sourcename: i2]


Subtree1: NUMBER 1.0 1 [sourcename: expected0]


Subtree2: NUMBER 0.0 1 [sourcename: i0]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:843)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:679)
~ testClosureVariableReads3(com.google.javascript.jscomp.CrossModuleMethodMotionTest)
[
Expected: var JSCompiler_stubMap=[];function JSCompiler_stubMethod(JSCompiler_stubMethod_id){return function(){return JSCompiler_stubMap[JSCompiler_stubMethod_id].apply(this,arguments)}}function JSCompiler_unstubMethod(JSCompiler_unstubMethod_id,JSCompiler_unstubMethod_body){return JSCompiler_stubMap[JSCompiler_unstubMethod_id]=JSCompiler_unstubMethod_body}function Foo(){}Foo.prototype.b1=JSCompiler_stubMethod(0);Foo.prototype.b1=JSCompiler_unstubMethod(0,function(){Foo.prototype.b2=JSCompiler_stubMethod(1)});
var y=new Foo;y.b1();Foo.prototype.b2=JSCompiler_unstubMethod(1,function(){var x=1;Foo.prototype.b3=function(){x}});y=new Foo;z.b2();y=new Foo;z.b3()
Result: var JSCompiler_stubMap=[];function JSCompiler_stubMethod(JSCompiler_stubMethod_id){return function(){return JSCompiler_stubMap[JSCompiler_stubMethod_id].apply(this,arguments)}}function JSCompiler_unstubMethod(JSCompiler_unstubMethod_id,JSCompiler_unstubMethod_body){return JSCompiler_stubMap[JSCompiler_unstubMethod_id]=JSCompiler_unstubMethod_body}function Foo(){}Foo.prototype.b1=JSCompiler_stubMethod(1);Foo.prototype.b1=JSCompiler_unstubMethod(1,function(){Foo.prototype.b2=JSCompiler_stubMethod(0)});
var y=new Foo;y.b1();Foo.prototype.b2=JSCompiler_unstubMethod(0,function(){var x=1;Foo.prototype.b3=function(){x}});y=new Foo;z.b2();y=new Foo;z.b3()
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_stubMap 1 [sourcename: expected0]
                ARRAYLIT 1 [sourcename: expected0]
        FUNCTION  1 [sourcename: expected0]
            NAME JSCompiler_stubMethod 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
                NAME JSCompiler_stubMethod_id 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                RETURN 1 [sourcename: expected0]
                    FUNCTION  1 [sourcename: expected0]
                        NAME  1 [sourcename: expected0]
                        LP 1 [sourcename: expected0]
                        BLOCK 1 [sourcename: expected0]
                            RETURN 1 [sourcename: expected0]
                                CALL 1 [sourcename: expected0]
                                    GETPROP 1 [sourcename: expected0]
                                        GETELEM 1 [sourcename: expected0]
                                            NAME JSCompiler_stubMap 1 [sourcename: expected0]
                                            NAME JSCompiler_stubMethod_id 1 [sourcename: expected0]
                                        STRING apply 1 [sourcename: expected0]
                                    THIS 1 [sourcename: expected0]
                                    NAME arguments 1 [sourcename: expected0]
        FUNCTION  1 [sourcename: expected0]
            NAME JSCompiler_unstubMethod 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
                NAME JSCompiler_unstubMethod_id 1 [sourcename: expected0]
                NAME JSCompiler_unstubMethod_body 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                RETURN 1 [sourcename: expected0]
                    ASSIGN 1 [sourcename: expected0]
                        GETELEM 1 [sourcename: expected0]
                            NAME JSCompiler_stubMap 1 [sourcename: expected0]
                            NAME JSCompiler_unstubMethod_id 1 [sourcename: expected0]
                        NAME JSCompiler_unstubMethod_body 1 [sourcename: expected0]
        FUNCTION  1 [sourcename: expected0]
            NAME Foo 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            ASSIGN 1 [sourcename: expected0]
                GETPROP 1 [sourcename: expected0]
                    GETPROP 1 [sourcename: expected0]
                        NAME Foo 1 [sourcename: expected0]
                        STRING prototype 1 [sourcename: expected0]
                    STRING b1 1 [sourcename: expected0]
                CALL 1 [sourcename: expected0] [free_call: 1]
                    NAME JSCompiler_stubMethod 1 [sourcename: expected0]
                    NUMBER 0.0 1 [sourcename: expected0]
    SCRIPT 1 [sourcename: expected1] [synthetic: 1]
        EXPR_RESULT 1 [sourcename: expected1]
            ASSIGN 1 [sourcename: expected1]
                GETPROP 1 [sourcename: expected1]
                    GETPROP 1 [sourcename: expected1]
                        NAME Foo 1 [sourcename: expected1]
                        STRING prototype 1 [sourcename: expected1]
                    STRING b1 1 [sourcename: expected1]
                CALL 1 [sourcename: expected1] [free_call: 1]
                    NAME JSCompiler_unstubMethod 1 [sourcename: expected1]
                    NUMBER 0.0 1 [sourcename: expected1]
                    FUNCTION  1 [sourcename: expected1]
                        NAME  1 [sourcename: expected1]
                        LP 1 [sourcename: expected1]
                        BLOCK 1 [sourcename: expected1]
                            EXPR_RESULT 1 [sourcename: expected1]
                                ASSIGN 1 [sourcename: expected1]
                                    GETPROP 1 [sourcename: expected1]
                                        GETPROP 1 [sourcename: expected1]
                                            NAME Foo 1 [sourcename: expected1]
                                            STRING prototype 1 [sourcename: expected1]
                                        STRING b2 1 [sourcename: expected1]
                                    CALL 1 [sourcename: expected1] [free_call: 1]
                                        NAME JSCompiler_stubMethod 1 [sourcename: expected1]
                                        NUMBER 1.0 1 [sourcename: expected1]
        VAR 1 [sourcename: expected1]
            NAME y 1 [sourcename: expected1]
                NEW 1 [sourcename: expected1]
                    NAME Foo 1 [sourcename: expected1]
        EXPR_RESULT 1 [sourcename: expected1]
            CALL 1 [sourcename: expected1]
                GETPROP 1 [sourcename: expected1]
                    NAME y 1 [sourcename: expected1]
                    STRING b1 1 [sourcename: expected1]
    SCRIPT 1 [sourcename: expected2] [synthetic: 1]
        EXPR_RESULT 1 [sourcename: expected2]
            ASSIGN 1 [sourcename: expected2]
                GETPROP 1 [sourcename: expected2]
                    GETPROP 1 [sourcename: expected2]
                        NAME Foo 1 [sourcename: expected2]
                        STRING prototype 1 [sourcename: expected2]
                    STRING b2 1 [sourcename: expected2]
                CALL 1 [sourcename: expected2] [free_call: 1]
                    NAME JSCompiler_unstubMethod 1 [sourcename: expected2]
                    NUMBER 1.0 1 [sourcename: expected2]
                    FUNCTION  1 [sourcename: expected2]
                        NAME  1 [sourcename: expected2]
                        LP 1 [sourcename: expected2]
                        BLOCK 1 [sourcename: expected2]
                            VAR 1 [sourcename: expected2]
                                NAME x 1 [sourcename: expected2]
                                    NUMBER 1.0 1 [sourcename: expected2]
                            EXPR_RESULT 1 [sourcename: expected2]
                                ASSIGN 1 [sourcename: expected2]
                                    GETPROP 1 [sourcename: expected2]
                                        GETPROP 1 [sourcename: expected2]
                                            NAME Foo 1 [sourcename: expected2]
                                            STRING prototype 1 [sourcename: expected2]
                                        STRING b3 1 [sourcename: expected2]
                                    FUNCTION  1 [sourcename: expected2]
                                        NAME  1 [sourcename: expected2]
                                        LP 1 [sourcename: expected2]
                                        BLOCK 1 [sourcename: expected2]
                                            EXPR_RESULT 1 [sourcename: expected2]
                                                NAME x 1 [sourcename: expected2]
        EXPR_RESULT 1 [sourcename: expected2]
            ASSIGN 1 [sourcename: expected2]
                NAME y 1 [sourcename: expected2]
                NEW 1 [sourcename: expected2]
                    NAME Foo 1 [sourcename: expected2]
        EXPR_RESULT 1 [sourcename: expected2]
            CALL 1 [sourcename: expected2]
                GETPROP 1 [sourcename: expected2]
                    NAME z 1 [sourcename: expected2]
                    STRING b2 1 [sourcename: expected2]
    SCRIPT 1 [sourcename: expected3] [synthetic: 1]
        EXPR_RESULT 1 [sourcename: expected3]
            ASSIGN 1 [sourcename: expected3]
                NAME y 1 [sourcename: expected3]
                NEW 1 [sourcename: expected3]
                    NAME Foo 1 [sourcename: expected3]
        EXPR_RESULT 1 [sourcename: expected3]
            CALL 1 [sourcename: expected3]
                GETPROP 1 [sourcename: expected3]
                    NAME z 1 [sourcename: expected3]
                    STRING b3 1 [sourcename: expected3]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: i0] [synthetic: 1]
        VAR 1 [sourcename:  [synthetic] ]
            NAME JSCompiler_stubMap 1 [sourcename:  [synthetic] ]
                ARRAYLIT 1 [sourcename:  [synthetic] ]
        FUNCTION  1 [sourcename:  [synthetic] ]
            NAME JSCompiler_stubMethod 1 [sourcename:  [synthetic] ]
            LP 1 [sourcename:  [synthetic] ]
                NAME JSCompiler_stubMethod_id 1 [sourcename:  [synthetic] ]
            BLOCK 1 [sourcename:  [synthetic] ]
                RETURN 1 [sourcename:  [synthetic] ]
                    FUNCTION  1 [sourcename:  [synthetic] ]
                        NAME  1 [sourcename:  [synthetic] ]
                        LP 1 [sourcename:  [synthetic] ]
                        BLOCK 1 [sourcename:  [synthetic] ]
                            RETURN 1 [sourcename:  [synthetic] ]
                                CALL 1 [sourcename:  [synthetic] ]
                                    GETPROP 1 [sourcename:  [synthetic] ]
                                        GETELEM 1 [sourcename:  [synthetic] ]
                                            NAME JSCompiler_stubMap 1 [sourcename:  [synthetic] ]
                                            NAME JSCompiler_stubMethod_id 1 [sourcename:  [synthetic] ]
                                        STRING apply 1 [sourcename:  [synthetic] ]
                                    THIS 1 [sourcename:  [synthetic] ]
                                    NAME arguments 1 [sourcename:  [synthetic] ]
        FUNCTION  1 [sourcename:  [synthetic] ]
            NAME JSCompiler_unstubMethod 1 [sourcename:  [synthetic] ]
            LP 1 [sourcename:  [synthetic] ]
                NAME JSCompiler_unstubMethod_id 1 [sourcename:  [synthetic] ]
                NAME JSCompiler_unstubMethod_body 1 [sourcename:  [synthetic] ]
            BLOCK 1 [sourcename:  [synthetic] ]
                RETURN 1 [sourcename:  [synthetic] ]
                    ASSIGN 1 [sourcename:  [synthetic] ]
                        GETELEM 1 [sourcename:  [synthetic] ]
                            NAME JSCompiler_stubMap 1 [sourcename:  [synthetic] ]
                            NAME JSCompiler_unstubMethod_id 1 [sourcename:  [synthetic] ]
                        NAME JSCompiler_unstubMethod_body 1 [sourcename:  [synthetic] ]
        FUNCTION  1 [sourcename: i0]
            NAME Foo 1 [sourcename: i0]
            LP 1 [sourcename: i0]
            BLOCK 1 [sourcename: i0]
        EXPR_RESULT 1 [sourcename: i0]
            ASSIGN 1 [sourcename: i0]
                GETPROP 1 [sourcename: i0]
                    GETPROP 1 [sourcename: i0]
                        NAME Foo 1 [sourcename: i0]
                        STRING prototype 1 [sourcename: i0]
                    STRING b1 1 [sourcename: i0]
                CALL 1 [sourcename: i0]
                    NAME JSCompiler_stubMethod 1 [sourcename: i0]
                    NUMBER 1.0 1 [sourcename: i0]
    SCRIPT 1 [sourcename: i1] [synthetic: 1]
        EXPR_RESULT 1 [sourcename: i0]
            ASSIGN 1 [sourcename: i0]
                GETPROP 1 [sourcename: i0]
                    GETPROP 1 [sourcename: i0]
                        NAME Foo 1 [sourcename: i0]
                        STRING prototype 1 [sourcename: i0]
                    STRING b1 1 [sourcename: i0]
                CALL 1 [sourcename: i0]
                    NAME JSCompiler_unstubMethod 1 [sourcename: i0]
                    NUMBER 1.0 1 [sourcename: i0]
                    FUNCTION  1 [sourcename: i0]
                        NAME  1 [sourcename: i0]
                        LP 1 [sourcename: i0]
                        BLOCK 1 [sourcename: i0]
                            EXPR_RESULT 1 [sourcename: i0]
                                ASSIGN 1 [sourcename: i0]
                                    GETPROP 1 [sourcename: i0]
                                        GETPROP 1 [sourcename: i0]
                                            NAME Foo 1 [sourcename: i0]
                                            STRING prototype 1 [sourcename: i0]
                                        STRING b2 1 [sourcename: i0]
                                    CALL 1 [sourcename: i0]
                                        NAME JSCompiler_stubMethod 1 [sourcename: i0]
                                        NUMBER 0.0 1 [sourcename: i0]
        VAR 1 [sourcename: i1]
            NAME y 1 [sourcename: i1]
                NEW 1 [sourcename: i1]
                    NAME Foo 1 [sourcename: i1]
        EXPR_RESULT 1 [sourcename: i1]
            CALL 1 [sourcename: i1]
                GETPROP 1 [sourcename: i1]
                    NAME y 1 [sourcename: i1]
                    STRING b1 1 [sourcename: i1]
    SCRIPT 1 [sourcename: i2] [synthetic: 1]
        EXPR_RESULT 1 [sourcename: i0]
            ASSIGN 1 [sourcename: i0]
                GETPROP 1 [sourcename: i0]
                    GETPROP 1 [sourcename: i0]
                        NAME Foo 1 [sourcename: i0]
                        STRING prototype 1 [sourcename: i0]
                    STRING b2 1 [sourcename: i0]
                CALL 1 [sourcename: i0]
                    NAME JSCompiler_unstubMethod 1 [sourcename: i0]
                    NUMBER 0.0 1 [sourcename: i0]
                    FUNCTION  1 [sourcename: i0]
                        NAME  1 [sourcename: i0]
                        LP 1 [sourcename: i0]
                        BLOCK 1 [sourcename: i0]
                            VAR 1 [sourcename: i0]
                                NAME x 1 [sourcename: i0]
                                    NUMBER 1.0 1 [sourcename: i0]
                            EXPR_RESULT 1 [sourcename: i0]
                                ASSIGN 1 [sourcename: i0]
                                    GETPROP 1 [sourcename: i0]
                                        GETPROP 1 [sourcename: i0]
                                            NAME Foo 1 [sourcename: i0]
                                            STRING prototype 1 [sourcename: i0]
                                        STRING b3 1 [sourcename: i0]
                                    FUNCTION  1 [sourcename: i0]
                                        NAME  1 [sourcename: i0]
                                        LP 1 [sourcename: i0]
                                        BLOCK 1 [sourcename: i0]
                                            EXPR_RESULT 1 [sourcename: i0]
                                                NAME x 1 [sourcename: i0]
        EXPR_RESULT 1 [sourcename: i2]
            ASSIGN 1 [sourcename: i2]
                NAME y 1 [sourcename: i2]
                NEW 1 [sourcename: i2]
                    NAME Foo 1 [sourcename: i2]
        EXPR_RESULT 1 [sourcename: i2]
            CALL 1 [sourcename: i2]
                GETPROP 1 [sourcename: i2]
                    NAME z 1 [sourcename: i2]
                    STRING b2 1 [sourcename: i2]
    SCRIPT 1 [sourcename: i3] [synthetic: 1]
        EXPR_RESULT 1 [sourcename: i3]
            ASSIGN 1 [sourcename: i3]
                NAME y 1 [sourcename: i3]
                NEW 1 [sourcename: i3]
                    NAME Foo 1 [sourcename: i3]
        EXPR_RESULT 1 [sourcename: i3]
            CALL 1 [sourcename: i3]
                GETPROP 1 [sourcename: i3]
                    NAME z 1 [sourcename: i3]
                    STRING b3 1 [sourcename: i3]


Subtree1: NUMBER 0.0 1 [sourcename: expected0]


Subtree2: NUMBER 1.0 1 [sourcename: i0]
]
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_stubMap=[];function JSCompiler_stubMethod(JSCompiler_stubMethod_id){return function(){return JSCompiler_stubMap[JSCompiler_stubMethod_id].apply(this,arguments)}}function JSCompiler_unstubMethod(JSCompiler_unstubMethod_id,JSCompiler_unstubMethod_body){return JSCompiler_stubMap[JSCompiler_unstubMethod_id]=JSCompiler_unstubMethod_body}function Foo(){}Foo.prototype.b1=JSCompiler_stubMethod(0);Foo.prototype.b1=JSCompiler_unstubMethod(0,function(){Foo.prototype.b2=JSCompiler_stubMethod(1)});
var y=new Foo;y.b1();Foo.prototype.b2=JSCompiler_unstubMethod(1,function(){var x=1;Foo.prototype.b3=function(){x}});y=new Foo;z.b2();y=new Foo;z.b3()
Result: var JSCompiler_stubMap=[];function JSCompiler_stubMethod(JSCompiler_stubMethod_id){return function(){return JSCompiler_stubMap[JSCompiler_stubMethod_id].apply(this,arguments)}}function JSCompiler_unstubMethod(JSCompiler_unstubMethod_id,JSCompiler_unstubMethod_body){return JSCompiler_stubMap[JSCompiler_unstubMethod_id]=JSCompiler_unstubMethod_body}function Foo(){}Foo.prototype.b1=JSCompiler_stubMethod(1);Foo.prototype.b1=JSCompiler_unstubMethod(1,function(){Foo.prototype.b2=JSCompiler_stubMethod(0)});
var y=new Foo;y.b1();Foo.prototype.b2=JSCompiler_unstubMethod(0,function(){var x=1;Foo.prototype.b3=function(){x}});y=new Foo;z.b2();y=new Foo;z.b3()
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_stubMap 1 [sourcename: expected0]
                ARRAYLIT 1 [sourcename: expected0]
        FUNCTION  1 [sourcename: expected0]
            NAME JSCompiler_stubMethod 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
                NAME JSCompiler_stubMethod_id 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                RETURN 1 [sourcename: expected0]
                    FUNCTION  1 [sourcename: expected0]
                        NAME  1 [sourcename: expected0]
                        LP 1 [sourcename: expected0]
                        BLOCK 1 [sourcename: expected0]
                            RETURN 1 [sourcename: expected0]
                                CALL 1 [sourcename: expected0]
                                    GETPROP 1 [sourcename: expected0]
                                        GETELEM 1 [sourcename: expected0]
                                            NAME JSCompiler_stubMap 1 [sourcename: expected0]
                                            NAME JSCompiler_stubMethod_id 1 [sourcename: expected0]
                                        STRING apply 1 [sourcename: expected0]
                                    THIS 1 [sourcename: expected0]
                                    NAME arguments 1 [sourcename: expected0]
        FUNCTION  1 [sourcename: expected0]
            NAME JSCompiler_unstubMethod 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
                NAME JSCompiler_unstubMethod_id 1 [sourcename: expected0]
                NAME JSCompiler_unstubMethod_body 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                RETURN 1 [sourcename: expected0]
                    ASSIGN 1 [sourcename: expected0]
                        GETELEM 1 [sourcename: expected0]
                            NAME JSCompiler_stubMap 1 [sourcename: expected0]
                            NAME JSCompiler_unstubMethod_id 1 [sourcename: expected0]
                        NAME JSCompiler_unstubMethod_body 1 [sourcename: expected0]
        FUNCTION  1 [sourcename: expected0]
            NAME Foo 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            ASSIGN 1 [sourcename: expected0]
                GETPROP 1 [sourcename: expected0]
                    GETPROP 1 [sourcename: expected0]
                        NAME Foo 1 [sourcename: expected0]
                        STRING prototype 1 [sourcename: expected0]
                    STRING b1 1 [sourcename: expected0]
                CALL 1 [sourcename: expected0] [free_call: 1]
                    NAME JSCompiler_stubMethod 1 [sourcename: expected0]
                    NUMBER 0.0 1 [sourcename: expected0]
    SCRIPT 1 [sourcename: expected1] [synthetic: 1]
        EXPR_RESULT 1 [sourcename: expected1]
            ASSIGN 1 [sourcename: expected1]
                GETPROP 1 [sourcename: expected1]
                    GETPROP 1 [sourcename: expected1]
                        NAME Foo 1 [sourcename: expected1]
                        STRING prototype 1 [sourcename: expected1]
                    STRING b1 1 [sourcename: expected1]
                CALL 1 [sourcename: expected1] [free_call: 1]
                    NAME JSCompiler_unstubMethod 1 [sourcename: expected1]
                    NUMBER 0.0 1 [sourcename: expected1]
                    FUNCTION  1 [sourcename: expected1]
                        NAME  1 [sourcename: expected1]
                        LP 1 [sourcename: expected1]
                        BLOCK 1 [sourcename: expected1]
                            EXPR_RESULT 1 [sourcename: expected1]
                                ASSIGN 1 [sourcename: expected1]
                                    GETPROP 1 [sourcename: expected1]
                                        GETPROP 1 [sourcename: expected1]
                                            NAME Foo 1 [sourcename: expected1]
                                            STRING prototype 1 [sourcename: expected1]
                                        STRING b2 1 [sourcename: expected1]
                                    CALL 1 [sourcename: expected1] [free_call: 1]
                                        NAME JSCompiler_stubMethod 1 [sourcename: expected1]
                                        NUMBER 1.0 1 [sourcename: expected1]
        VAR 1 [sourcename: expected1]
            NAME y 1 [sourcename: expected1]
                NEW 1 [sourcename: expected1]
                    NAME Foo 1 [sourcename: expected1]
        EXPR_RESULT 1 [sourcename: expected1]
            CALL 1 [sourcename: expected1]
                GETPROP 1 [sourcename: expected1]
                    NAME y 1 [sourcename: expected1]
                    STRING b1 1 [sourcename: expected1]
    SCRIPT 1 [sourcename: expected2] [synthetic: 1]
        EXPR_RESULT 1 [sourcename: expected2]
            ASSIGN 1 [sourcename: expected2]
                GETPROP 1 [sourcename: expected2]
                    GETPROP 1 [sourcename: expected2]
                        NAME Foo 1 [sourcename: expected2]
                        STRING prototype 1 [sourcename: expected2]
                    STRING b2 1 [sourcename: expected2]
                CALL 1 [sourcename: expected2] [free_call: 1]
                    NAME JSCompiler_unstubMethod 1 [sourcename: expected2]
                    NUMBER 1.0 1 [sourcename: expected2]
                    FUNCTION  1 [sourcename: expected2]
                        NAME  1 [sourcename: expected2]
                        LP 1 [sourcename: expected2]
                        BLOCK 1 [sourcename: expected2]
                            VAR 1 [sourcename: expected2]
                                NAME x 1 [sourcename: expected2]
                                    NUMBER 1.0 1 [sourcename: expected2]
                            EXPR_RESULT 1 [sourcename: expected2]
                                ASSIGN 1 [sourcename: expected2]
                                    GETPROP 1 [sourcename: expected2]
                                        GETPROP 1 [sourcename: expected2]
                                            NAME Foo 1 [sourcename: expected2]
                                            STRING prototype 1 [sourcename: expected2]
                                        STRING b3 1 [sourcename: expected2]
                                    FUNCTION  1 [sourcename: expected2]
                                        NAME  1 [sourcename: expected2]
                                        LP 1 [sourcename: expected2]
                                        BLOCK 1 [sourcename: expected2]
                                            EXPR_RESULT 1 [sourcename: expected2]
                                                NAME x 1 [sourcename: expected2]
        EXPR_RESULT 1 [sourcename: expected2]
            ASSIGN 1 [sourcename: expected2]
                NAME y 1 [sourcename: expected2]
                NEW 1 [sourcename: expected2]
                    NAME Foo 1 [sourcename: expected2]
        EXPR_RESULT 1 [sourcename: expected2]
            CALL 1 [sourcename: expected2]
                GETPROP 1 [sourcename: expected2]
                    NAME z 1 [sourcename: expected2]
                    STRING b2 1 [sourcename: expected2]
    SCRIPT 1 [sourcename: expected3] [synthetic: 1]
        EXPR_RESULT 1 [sourcename: expected3]
            ASSIGN 1 [sourcename: expected3]
                NAME y 1 [sourcename: expected3]
                NEW 1 [sourcename: expected3]
                    NAME Foo 1 [sourcename: expected3]
        EXPR_RESULT 1 [sourcename: expected3]
            CALL 1 [sourcename: expected3]
                GETPROP 1 [sourcename: expected3]
                    NAME z 1 [sourcename: expected3]
                    STRING b3 1 [sourcename: expected3]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: i0] [synthetic: 1]
        VAR 1 [sourcename:  [synthetic] ]
            NAME JSCompiler_stubMap 1 [sourcename:  [synthetic] ]
                ARRAYLIT 1 [sourcename:  [synthetic] ]
        FUNCTION  1 [sourcename:  [synthetic] ]
            NAME JSCompiler_stubMethod 1 [sourcename:  [synthetic] ]
            LP 1 [sourcename:  [synthetic] ]
                NAME JSCompiler_stubMethod_id 1 [sourcename:  [synthetic] ]
            BLOCK 1 [sourcename:  [synthetic] ]
                RETURN 1 [sourcename:  [synthetic] ]
                    FUNCTION  1 [sourcename:  [synthetic] ]
                        NAME  1 [sourcename:  [synthetic] ]
                        LP 1 [sourcename:  [synthetic] ]
                        BLOCK 1 [sourcename:  [synthetic] ]
                            RETURN 1 [sourcename:  [synthetic] ]
                                CALL 1 [sourcename:  [synthetic] ]
                                    GETPROP 1 [sourcename:  [synthetic] ]
                                        GETELEM 1 [sourcename:  [synthetic] ]
                                            NAME JSCompiler_stubMap 1 [sourcename:  [synthetic] ]
                                            NAME JSCompiler_stubMethod_id 1 [sourcename:  [synthetic] ]
                                        STRING apply 1 [sourcename:  [synthetic] ]
                                    THIS 1 [sourcename:  [synthetic] ]
                                    NAME arguments 1 [sourcename:  [synthetic] ]
        FUNCTION  1 [sourcename:  [synthetic] ]
            NAME JSCompiler_unstubMethod 1 [sourcename:  [synthetic] ]
            LP 1 [sourcename:  [synthetic] ]
                NAME JSCompiler_unstubMethod_id 1 [sourcename:  [synthetic] ]
                NAME JSCompiler_unstubMethod_body 1 [sourcename:  [synthetic] ]
            BLOCK 1 [sourcename:  [synthetic] ]
                RETURN 1 [sourcename:  [synthetic] ]
                    ASSIGN 1 [sourcename:  [synthetic] ]
                        GETELEM 1 [sourcename:  [synthetic] ]
                            NAME JSCompiler_stubMap 1 [sourcename:  [synthetic] ]
                            NAME JSCompiler_unstubMethod_id 1 [sourcename:  [synthetic] ]
                        NAME JSCompiler_unstubMethod_body 1 [sourcename:  [synthetic] ]
        FUNCTION  1 [sourcename: i0]
            NAME Foo 1 [sourcename: i0]
            LP 1 [sourcename: i0]
            BLOCK 1 [sourcename: i0]
        EXPR_RESULT 1 [sourcename: i0]
            ASSIGN 1 [sourcename: i0]
                GETPROP 1 [sourcename: i0]
                    GETPROP 1 [sourcename: i0]
                        NAME Foo 1 [sourcename: i0]
                        STRING prototype 1 [sourcename: i0]
                    STRING b1 1 [sourcename: i0]
                CALL 1 [sourcename: i0]
                    NAME JSCompiler_stubMethod 1 [sourcename: i0]
                    NUMBER 1.0 1 [sourcename: i0]
    SCRIPT 1 [sourcename: i1] [synthetic: 1]
        EXPR_RESULT 1 [sourcename: i0]
            ASSIGN 1 [sourcename: i0]
                GETPROP 1 [sourcename: i0]
                    GETPROP 1 [sourcename: i0]
                        NAME Foo 1 [sourcename: i0]
                        STRING prototype 1 [sourcename: i0]
                    STRING b1 1 [sourcename: i0]
                CALL 1 [sourcename: i0]
                    NAME JSCompiler_unstubMethod 1 [sourcename: i0]
                    NUMBER 1.0 1 [sourcename: i0]
                    FUNCTION  1 [sourcename: i0]
                        NAME  1 [sourcename: i0]
                        LP 1 [sourcename: i0]
                        BLOCK 1 [sourcename: i0]
                            EXPR_RESULT 1 [sourcename: i0]
                                ASSIGN 1 [sourcename: i0]
                                    GETPROP 1 [sourcename: i0]
                                        GETPROP 1 [sourcename: i0]
                                            NAME Foo 1 [sourcename: i0]
                                            STRING prototype 1 [sourcename: i0]
                                        STRING b2 1 [sourcename: i0]
                                    CALL 1 [sourcename: i0]
                                        NAME JSCompiler_stubMethod 1 [sourcename: i0]
                                        NUMBER 0.0 1 [sourcename: i0]
        VAR 1 [sourcename: i1]
            NAME y 1 [sourcename: i1]
                NEW 1 [sourcename: i1]
                    NAME Foo 1 [sourcename: i1]
        EXPR_RESULT 1 [sourcename: i1]
            CALL 1 [sourcename: i1]
                GETPROP 1 [sourcename: i1]
                    NAME y 1 [sourcename: i1]
                    STRING b1 1 [sourcename: i1]
    SCRIPT 1 [sourcename: i2] [synthetic: 1]
        EXPR_RESULT 1 [sourcename: i0]
            ASSIGN 1 [sourcename: i0]
                GETPROP 1 [sourcename: i0]
                    GETPROP 1 [sourcename: i0]
                        NAME Foo 1 [sourcename: i0]
                        STRING prototype 1 [sourcename: i0]
                    STRING b2 1 [sourcename: i0]
                CALL 1 [sourcename: i0]
                    NAME JSCompiler_unstubMethod 1 [sourcename: i0]
                    NUMBER 0.0 1 [sourcename: i0]
                    FUNCTION  1 [sourcename: i0]
                        NAME  1 [sourcename: i0]
                        LP 1 [sourcename: i0]
                        BLOCK 1 [sourcename: i0]
                            VAR 1 [sourcename: i0]
                                NAME x 1 [sourcename: i0]
                                    NUMBER 1.0 1 [sourcename: i0]
                            EXPR_RESULT 1 [sourcename: i0]
                                ASSIGN 1 [sourcename: i0]
                                    GETPROP 1 [sourcename: i0]
                                        GETPROP 1 [sourcename: i0]
                                            NAME Foo 1 [sourcename: i0]
                                            STRING prototype 1 [sourcename: i0]
                                        STRING b3 1 [sourcename: i0]
                                    FUNCTION  1 [sourcename: i0]
                                        NAME  1 [sourcename: i0]
                                        LP 1 [sourcename: i0]
                                        BLOCK 1 [sourcename: i0]
                                            EXPR_RESULT 1 [sourcename: i0]
                                                NAME x 1 [sourcename: i0]
        EXPR_RESULT 1 [sourcename: i2]
            ASSIGN 1 [sourcename: i2]
                NAME y 1 [sourcename: i2]
                NEW 1 [sourcename: i2]
                    NAME Foo 1 [sourcename: i2]
        EXPR_RESULT 1 [sourcename: i2]
            CALL 1 [sourcename: i2]
                GETPROP 1 [sourcename: i2]
                    NAME z 1 [sourcename: i2]
                    STRING b2 1 [sourcename: i2]
    SCRIPT 1 [sourcename: i3] [synthetic: 1]
        EXPR_RESULT 1 [sourcename: i3]
            ASSIGN 1 [sourcename: i3]
                NAME y 1 [sourcename: i3]
                NEW 1 [sourcename: i3]
                    NAME Foo 1 [sourcename: i3]
        EXPR_RESULT 1 [sourcename: i3]
            CALL 1 [sourcename: i3]
                GETPROP 1 [sourcename: i3]
                    NAME z 1 [sourcename: i3]
                    STRING b3 1 [sourcename: i3]


Subtree1: NUMBER 0.0 1 [sourcename: expected0]


Subtree2: NUMBER 1.0 1 [sourcename: i0]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:843)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:679)
~ testTwoMethods(com.google.javascript.jscomp.CrossModuleMethodMotionTest)
[
Expected: var JSCompiler_stubMap=[];function JSCompiler_stubMethod(JSCompiler_stubMethod_id){return function(){return JSCompiler_stubMap[JSCompiler_stubMethod_id].apply(this,arguments)}}function JSCompiler_unstubMethod(JSCompiler_unstubMethod_id,JSCompiler_unstubMethod_body){return JSCompiler_stubMap[JSCompiler_unstubMethod_id]=JSCompiler_unstubMethod_body}function Foo(){}Foo.prototype.baz=JSCompiler_stubMethod(1);Foo.prototype.callBaz=JSCompiler_stubMethod(0);Foo.prototype.baz=JSCompiler_unstubMethod(1,function(){});
Foo.prototype.callBaz=JSCompiler_unstubMethod(0,function(){this.baz()});(new Foo).callBaz()
Result: var JSCompiler_stubMap=[];function JSCompiler_stubMethod(JSCompiler_stubMethod_id){return function(){return JSCompiler_stubMap[JSCompiler_stubMethod_id].apply(this,arguments)}}function JSCompiler_unstubMethod(JSCompiler_unstubMethod_id,JSCompiler_unstubMethod_body){return JSCompiler_stubMap[JSCompiler_unstubMethod_id]=JSCompiler_unstubMethod_body}function Foo(){}Foo.prototype.baz=JSCompiler_stubMethod(0);Foo.prototype.callBaz=JSCompiler_stubMethod(1);
Foo.prototype.callBaz=JSCompiler_unstubMethod(1,function(){this.baz()});Foo.prototype.baz=JSCompiler_unstubMethod(0,function(){});(new Foo).callBaz()
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_stubMap 1 [sourcename: expected0]
                ARRAYLIT 1 [sourcename: expected0]
        FUNCTION  1 [sourcename: expected0]
            NAME JSCompiler_stubMethod 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
                NAME JSCompiler_stubMethod_id 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                RETURN 1 [sourcename: expected0]
                    FUNCTION  1 [sourcename: expected0]
                        NAME  1 [sourcename: expected0]
                        LP 1 [sourcename: expected0]
                        BLOCK 1 [sourcename: expected0]
                            RETURN 1 [sourcename: expected0]
                                CALL 1 [sourcename: expected0]
                                    GETPROP 1 [sourcename: expected0]
                                        GETELEM 1 [sourcename: expected0]
                                            NAME JSCompiler_stubMap 1 [sourcename: expected0]
                                            NAME JSCompiler_stubMethod_id 1 [sourcename: expected0]
                                        STRING apply 1 [sourcename: expected0]
                                    THIS 1 [sourcename: expected0]
                                    NAME arguments 1 [sourcename: expected0]
        FUNCTION  1 [sourcename: expected0]
            NAME JSCompiler_unstubMethod 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
                NAME JSCompiler_unstubMethod_id 1 [sourcename: expected0]
                NAME JSCompiler_unstubMethod_body 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                RETURN 1 [sourcename: expected0]
                    ASSIGN 1 [sourcename: expected0]
                        GETELEM 1 [sourcename: expected0]
                            NAME JSCompiler_stubMap 1 [sourcename: expected0]
                            NAME JSCompiler_unstubMethod_id 1 [sourcename: expected0]
                        NAME JSCompiler_unstubMethod_body 1 [sourcename: expected0]
        FUNCTION  1 [sourcename: expected0]
            NAME Foo 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            ASSIGN 1 [sourcename: expected0]
                GETPROP 1 [sourcename: expected0]
                    GETPROP 1 [sourcename: expected0]
                        NAME Foo 1 [sourcename: expected0]
                        STRING prototype 1 [sourcename: expected0]
                    STRING baz 1 [sourcename: expected0]
                CALL 1 [sourcename: expected0] [free_call: 1]
                    NAME JSCompiler_stubMethod 1 [sourcename: expected0]
                    NUMBER 1.0 1 [sourcename: expected0]
    SCRIPT 1 [sourcename: expected1] [synthetic: 1]
        EXPR_RESULT 1 [sourcename: expected1]
            ASSIGN 1 [sourcename: expected1]
                GETPROP 1 [sourcename: expected1]
                    GETPROP 1 [sourcename: expected1]
                        NAME Foo 1 [sourcename: expected1]
                        STRING prototype 1 [sourcename: expected1]
                    STRING callBaz 1 [sourcename: expected1]
                CALL 1 [sourcename: expected1] [free_call: 1]
                    NAME JSCompiler_stubMethod 1 [sourcename: expected1]
                    NUMBER 0.0 1 [sourcename: expected1]
    SCRIPT 1 [sourcename: expected2] [synthetic: 1]
        EXPR_RESULT 1 [sourcename: expected2]
            ASSIGN 1 [sourcename: expected2]
                GETPROP 1 [sourcename: expected2]
                    GETPROP 1 [sourcename: expected2]
                        NAME Foo 1 [sourcename: expected2]
                        STRING prototype 1 [sourcename: expected2]
                    STRING baz 1 [sourcename: expected2]
                CALL 1 [sourcename: expected2] [free_call: 1]
                    NAME JSCompiler_unstubMethod 1 [sourcename: expected2]
                    NUMBER 1.0 1 [sourcename: expected2]
                    FUNCTION  1 [sourcename: expected2]
                        NAME  1 [sourcename: expected2]
                        LP 1 [sourcename: expected2]
                        BLOCK 1 [sourcename: expected2]
        EXPR_RESULT 1 [sourcename: expected2]
            ASSIGN 1 [sourcename: expected2]
                GETPROP 1 [sourcename: expected2]
                    GETPROP 1 [sourcename: expected2]
                        NAME Foo 1 [sourcename: expected2]
                        STRING prototype 1 [sourcename: expected2]
                    STRING callBaz 1 [sourcename: expected2]
                CALL 1 [sourcename: expected2] [free_call: 1]
                    NAME JSCompiler_unstubMethod 1 [sourcename: expected2]
                    NUMBER 0.0 1 [sourcename: expected2]
                    FUNCTION  1 [sourcename: expected2]
                        NAME  1 [sourcename: expected2]
                        LP 1 [sourcename: expected2]
                        BLOCK 1 [sourcename: expected2]
                            EXPR_RESULT 1 [sourcename: expected2]
                                CALL 1 [sourcename: expected2]
                                    GETPROP 1 [sourcename: expected2]
                                        THIS 1 [sourcename: expected2]
                                        STRING baz 1 [sourcename: expected2]
        EXPR_RESULT 1 [sourcename: expected2]
            CALL 1 [sourcename: expected2]
                GETPROP 1 [sourcename: expected2]
                    NEW 1 [sourcename: expected2] [parenthesized: true]
                        NAME Foo 1 [sourcename: expected2]
                    STRING callBaz 1 [sourcename: expected2]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: i0] [synthetic: 1]
        VAR 1 [sourcename:  [synthetic] ]
            NAME JSCompiler_stubMap 1 [sourcename:  [synthetic] ]
                ARRAYLIT 1 [sourcename:  [synthetic] ]
        FUNCTION  1 [sourcename:  [synthetic] ]
            NAME JSCompiler_stubMethod 1 [sourcename:  [synthetic] ]
            LP 1 [sourcename:  [synthetic] ]
                NAME JSCompiler_stubMethod_id 1 [sourcename:  [synthetic] ]
            BLOCK 1 [sourcename:  [synthetic] ]
                RETURN 1 [sourcename:  [synthetic] ]
                    FUNCTION  1 [sourcename:  [synthetic] ]
                        NAME  1 [sourcename:  [synthetic] ]
                        LP 1 [sourcename:  [synthetic] ]
                        BLOCK 1 [sourcename:  [synthetic] ]
                            RETURN 1 [sourcename:  [synthetic] ]
                                CALL 1 [sourcename:  [synthetic] ]
                                    GETPROP 1 [sourcename:  [synthetic] ]
                                        GETELEM 1 [sourcename:  [synthetic] ]
                                            NAME JSCompiler_stubMap 1 [sourcename:  [synthetic] ]
                                            NAME JSCompiler_stubMethod_id 1 [sourcename:  [synthetic] ]
                                        STRING apply 1 [sourcename:  [synthetic] ]
                                    THIS 1 [sourcename:  [synthetic] ]
                                    NAME arguments 1 [sourcename:  [synthetic] ]
        FUNCTION  1 [sourcename:  [synthetic] ]
            NAME JSCompiler_unstubMethod 1 [sourcename:  [synthetic] ]
            LP 1 [sourcename:  [synthetic] ]
                NAME JSCompiler_unstubMethod_id 1 [sourcename:  [synthetic] ]
                NAME JSCompiler_unstubMethod_body 1 [sourcename:  [synthetic] ]
            BLOCK 1 [sourcename:  [synthetic] ]
                RETURN 1 [sourcename:  [synthetic] ]
                    ASSIGN 1 [sourcename:  [synthetic] ]
                        GETELEM 1 [sourcename:  [synthetic] ]
                            NAME JSCompiler_stubMap 1 [sourcename:  [synthetic] ]
                            NAME JSCompiler_unstubMethod_id 1 [sourcename:  [synthetic] ]
                        NAME JSCompiler_unstubMethod_body 1 [sourcename:  [synthetic] ]
        FUNCTION  1 [sourcename: i0]
            NAME Foo 1 [sourcename: i0]
            LP 1 [sourcename: i0]
            BLOCK 1 [sourcename: i0]
        EXPR_RESULT 1 [sourcename: i0]
            ASSIGN 1 [sourcename: i0]
                GETPROP 1 [sourcename: i0]
                    GETPROP 1 [sourcename: i0]
                        NAME Foo 1 [sourcename: i0]
                        STRING prototype 1 [sourcename: i0]
                    STRING baz 1 [sourcename: i0]
                CALL 1 [sourcename: i0]
                    NAME JSCompiler_stubMethod 1 [sourcename: i0]
                    NUMBER 0.0 1 [sourcename: i0]
    SCRIPT 1 [sourcename: i1] [synthetic: 1]
        EXPR_RESULT 1 [sourcename: i1]
            ASSIGN 1 [sourcename: i1]
                GETPROP 1 [sourcename: i1]
                    GETPROP 1 [sourcename: i1]
                        NAME Foo 1 [sourcename: i1]
                        STRING prototype 1 [sourcename: i1]
                    STRING callBaz 1 [sourcename: i1]
                CALL 1 [sourcename: i1]
                    NAME JSCompiler_stubMethod 1 [sourcename: i1]
                    NUMBER 1.0 1 [sourcename: i1]
    SCRIPT 1 [sourcename: i2] [synthetic: 1]
        EXPR_RESULT 1 [sourcename: i1]
            ASSIGN 1 [sourcename: i1]
                GETPROP 1 [sourcename: i1]
                    GETPROP 1 [sourcename: i1]
                        NAME Foo 1 [sourcename: i1]
                        STRING prototype 1 [sourcename: i1]
                    STRING callBaz 1 [sourcename: i1]
                CALL 1 [sourcename: i1]
                    NAME JSCompiler_unstubMethod 1 [sourcename: i1]
                    NUMBER 1.0 1 [sourcename: i1]
                    FUNCTION  1 [sourcename: i1]
                        NAME  1 [sourcename: i1]
                        LP 1 [sourcename: i1]
                        BLOCK 1 [sourcename: i1]
                            EXPR_RESULT 1 [sourcename: i1]
                                CALL 1 [sourcename: i1]
                                    GETPROP 1 [sourcename: i1]
                                        THIS 1 [sourcename: i1]
                                        STRING baz 1 [sourcename: i1]
        EXPR_RESULT 1 [sourcename: i0]
            ASSIGN 1 [sourcename: i0]
                GETPROP 1 [sourcename: i0]
                    GETPROP 1 [sourcename: i0]
                        NAME Foo 1 [sourcename: i0]
                        STRING prototype 1 [sourcename: i0]
                    STRING baz 1 [sourcename: i0]
                CALL 1 [sourcename: i0]
                    NAME JSCompiler_unstubMethod 1 [sourcename: i0]
                    NUMBER 0.0 1 [sourcename: i0]
                    FUNCTION  1 [sourcename: i0]
                        NAME  1 [sourcename: i0]
                        LP 1 [sourcename: i0]
                        BLOCK 1 [sourcename: i0]
        EXPR_RESULT 1 [sourcename: i2]
            CALL 1 [sourcename: i2]
                GETPROP 1 [sourcename: i2]
                    NEW 1 [sourcename: i2] [parenthesized: true]
                        NAME Foo 1 [sourcename: i2]
                    STRING callBaz 1 [sourcename: i2]


Subtree1: NUMBER 1.0 1 [sourcename: expected0]


Subtree2: NUMBER 0.0 1 [sourcename: i0]
]
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_stubMap=[];function JSCompiler_stubMethod(JSCompiler_stubMethod_id){return function(){return JSCompiler_stubMap[JSCompiler_stubMethod_id].apply(this,arguments)}}function JSCompiler_unstubMethod(JSCompiler_unstubMethod_id,JSCompiler_unstubMethod_body){return JSCompiler_stubMap[JSCompiler_unstubMethod_id]=JSCompiler_unstubMethod_body}function Foo(){}Foo.prototype.baz=JSCompiler_stubMethod(1);Foo.prototype.callBaz=JSCompiler_stubMethod(0);Foo.prototype.baz=JSCompiler_unstubMethod(1,function(){});
Foo.prototype.callBaz=JSCompiler_unstubMethod(0,function(){this.baz()});(new Foo).callBaz()
Result: var JSCompiler_stubMap=[];function JSCompiler_stubMethod(JSCompiler_stubMethod_id){return function(){return JSCompiler_stubMap[JSCompiler_stubMethod_id].apply(this,arguments)}}function JSCompiler_unstubMethod(JSCompiler_unstubMethod_id,JSCompiler_unstubMethod_body){return JSCompiler_stubMap[JSCompiler_unstubMethod_id]=JSCompiler_unstubMethod_body}function Foo(){}Foo.prototype.baz=JSCompiler_stubMethod(0);Foo.prototype.callBaz=JSCompiler_stubMethod(1);
Foo.prototype.callBaz=JSCompiler_unstubMethod(1,function(){this.baz()});Foo.prototype.baz=JSCompiler_unstubMethod(0,function(){});(new Foo).callBaz()
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_stubMap 1 [sourcename: expected0]
                ARRAYLIT 1 [sourcename: expected0]
        FUNCTION  1 [sourcename: expected0]
            NAME JSCompiler_stubMethod 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
                NAME JSCompiler_stubMethod_id 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                RETURN 1 [sourcename: expected0]
                    FUNCTION  1 [sourcename: expected0]
                        NAME  1 [sourcename: expected0]
                        LP 1 [sourcename: expected0]
                        BLOCK 1 [sourcename: expected0]
                            RETURN 1 [sourcename: expected0]
                                CALL 1 [sourcename: expected0]
                                    GETPROP 1 [sourcename: expected0]
                                        GETELEM 1 [sourcename: expected0]
                                            NAME JSCompiler_stubMap 1 [sourcename: expected0]
                                            NAME JSCompiler_stubMethod_id 1 [sourcename: expected0]
                                        STRING apply 1 [sourcename: expected0]
                                    THIS 1 [sourcename: expected0]
                                    NAME arguments 1 [sourcename: expected0]
        FUNCTION  1 [sourcename: expected0]
            NAME JSCompiler_unstubMethod 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
                NAME JSCompiler_unstubMethod_id 1 [sourcename: expected0]
                NAME JSCompiler_unstubMethod_body 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                RETURN 1 [sourcename: expected0]
                    ASSIGN 1 [sourcename: expected0]
                        GETELEM 1 [sourcename: expected0]
                            NAME JSCompiler_stubMap 1 [sourcename: expected0]
                            NAME JSCompiler_unstubMethod_id 1 [sourcename: expected0]
                        NAME JSCompiler_unstubMethod_body 1 [sourcename: expected0]
        FUNCTION  1 [sourcename: expected0]
            NAME Foo 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            ASSIGN 1 [sourcename: expected0]
                GETPROP 1 [sourcename: expected0]
                    GETPROP 1 [sourcename: expected0]
                        NAME Foo 1 [sourcename: expected0]
                        STRING prototype 1 [sourcename: expected0]
                    STRING baz 1 [sourcename: expected0]
                CALL 1 [sourcename: expected0] [free_call: 1]
                    NAME JSCompiler_stubMethod 1 [sourcename: expected0]
                    NUMBER 1.0 1 [sourcename: expected0]
    SCRIPT 1 [sourcename: expected1] [synthetic: 1]
        EXPR_RESULT 1 [sourcename: expected1]
            ASSIGN 1 [sourcename: expected1]
                GETPROP 1 [sourcename: expected1]
                    GETPROP 1 [sourcename: expected1]
                        NAME Foo 1 [sourcename: expected1]
                        STRING prototype 1 [sourcename: expected1]
                    STRING callBaz 1 [sourcename: expected1]
                CALL 1 [sourcename: expected1] [free_call: 1]
                    NAME JSCompiler_stubMethod 1 [sourcename: expected1]
                    NUMBER 0.0 1 [sourcename: expected1]
    SCRIPT 1 [sourcename: expected2] [synthetic: 1]
        EXPR_RESULT 1 [sourcename: expected2]
            ASSIGN 1 [sourcename: expected2]
                GETPROP 1 [sourcename: expected2]
                    GETPROP 1 [sourcename: expected2]
                        NAME Foo 1 [sourcename: expected2]
                        STRING prototype 1 [sourcename: expected2]
                    STRING baz 1 [sourcename: expected2]
                CALL 1 [sourcename: expected2] [free_call: 1]
                    NAME JSCompiler_unstubMethod 1 [sourcename: expected2]
                    NUMBER 1.0 1 [sourcename: expected2]
                    FUNCTION  1 [sourcename: expected2]
                        NAME  1 [sourcename: expected2]
                        LP 1 [sourcename: expected2]
                        BLOCK 1 [sourcename: expected2]
        EXPR_RESULT 1 [sourcename: expected2]
            ASSIGN 1 [sourcename: expected2]
                GETPROP 1 [sourcename: expected2]
                    GETPROP 1 [sourcename: expected2]
                        NAME Foo 1 [sourcename: expected2]
                        STRING prototype 1 [sourcename: expected2]
                    STRING callBaz 1 [sourcename: expected2]
                CALL 1 [sourcename: expected2] [free_call: 1]
                    NAME JSCompiler_unstubMethod 1 [sourcename: expected2]
                    NUMBER 0.0 1 [sourcename: expected2]
                    FUNCTION  1 [sourcename: expected2]
                        NAME  1 [sourcename: expected2]
                        LP 1 [sourcename: expected2]
                        BLOCK 1 [sourcename: expected2]
                            EXPR_RESULT 1 [sourcename: expected2]
                                CALL 1 [sourcename: expected2]
                                    GETPROP 1 [sourcename: expected2]
                                        THIS 1 [sourcename: expected2]
                                        STRING baz 1 [sourcename: expected2]
        EXPR_RESULT 1 [sourcename: expected2]
            CALL 1 [sourcename: expected2]
                GETPROP 1 [sourcename: expected2]
                    NEW 1 [sourcename: expected2] [parenthesized: true]
                        NAME Foo 1 [sourcename: expected2]
                    STRING callBaz 1 [sourcename: expected2]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: i0] [synthetic: 1]
        VAR 1 [sourcename:  [synthetic] ]
            NAME JSCompiler_stubMap 1 [sourcename:  [synthetic] ]
                ARRAYLIT 1 [sourcename:  [synthetic] ]
        FUNCTION  1 [sourcename:  [synthetic] ]
            NAME JSCompiler_stubMethod 1 [sourcename:  [synthetic] ]
            LP 1 [sourcename:  [synthetic] ]
                NAME JSCompiler_stubMethod_id 1 [sourcename:  [synthetic] ]
            BLOCK 1 [sourcename:  [synthetic] ]
                RETURN 1 [sourcename:  [synthetic] ]
                    FUNCTION  1 [sourcename:  [synthetic] ]
                        NAME  1 [sourcename:  [synthetic] ]
                        LP 1 [sourcename:  [synthetic] ]
                        BLOCK 1 [sourcename:  [synthetic] ]
                            RETURN 1 [sourcename:  [synthetic] ]
                                CALL 1 [sourcename:  [synthetic] ]
                                    GETPROP 1 [sourcename:  [synthetic] ]
                                        GETELEM 1 [sourcename:  [synthetic] ]
                                            NAME JSCompiler_stubMap 1 [sourcename:  [synthetic] ]
                                            NAME JSCompiler_stubMethod_id 1 [sourcename:  [synthetic] ]
                                        STRING apply 1 [sourcename:  [synthetic] ]
                                    THIS 1 [sourcename:  [synthetic] ]
                                    NAME arguments 1 [sourcename:  [synthetic] ]
        FUNCTION  1 [sourcename:  [synthetic] ]
            NAME JSCompiler_unstubMethod 1 [sourcename:  [synthetic] ]
            LP 1 [sourcename:  [synthetic] ]
                NAME JSCompiler_unstubMethod_id 1 [sourcename:  [synthetic] ]
                NAME JSCompiler_unstubMethod_body 1 [sourcename:  [synthetic] ]
            BLOCK 1 [sourcename:  [synthetic] ]
                RETURN 1 [sourcename:  [synthetic] ]
                    ASSIGN 1 [sourcename:  [synthetic] ]
                        GETELEM 1 [sourcename:  [synthetic] ]
                            NAME JSCompiler_stubMap 1 [sourcename:  [synthetic] ]
                            NAME JSCompiler_unstubMethod_id 1 [sourcename:  [synthetic] ]
                        NAME JSCompiler_unstubMethod_body 1 [sourcename:  [synthetic] ]
        FUNCTION  1 [sourcename: i0]
            NAME Foo 1 [sourcename: i0]
            LP 1 [sourcename: i0]
            BLOCK 1 [sourcename: i0]
        EXPR_RESULT 1 [sourcename: i0]
            ASSIGN 1 [sourcename: i0]
                GETPROP 1 [sourcename: i0]
                    GETPROP 1 [sourcename: i0]
                        NAME Foo 1 [sourcename: i0]
                        STRING prototype 1 [sourcename: i0]
                    STRING baz 1 [sourcename: i0]
                CALL 1 [sourcename: i0]
                    NAME JSCompiler_stubMethod 1 [sourcename: i0]
                    NUMBER 0.0 1 [sourcename: i0]
    SCRIPT 1 [sourcename: i1] [synthetic: 1]
        EXPR_RESULT 1 [sourcename: i1]
            ASSIGN 1 [sourcename: i1]
                GETPROP 1 [sourcename: i1]
                    GETPROP 1 [sourcename: i1]
                        NAME Foo 1 [sourcename: i1]
                        STRING prototype 1 [sourcename: i1]
                    STRING callBaz 1 [sourcename: i1]
                CALL 1 [sourcename: i1]
                    NAME JSCompiler_stubMethod 1 [sourcename: i1]
                    NUMBER 1.0 1 [sourcename: i1]
    SCRIPT 1 [sourcename: i2] [synthetic: 1]
        EXPR_RESULT 1 [sourcename: i1]
            ASSIGN 1 [sourcename: i1]
                GETPROP 1 [sourcename: i1]
                    GETPROP 1 [sourcename: i1]
                        NAME Foo 1 [sourcename: i1]
                        STRING prototype 1 [sourcename: i1]
                    STRING callBaz 1 [sourcename: i1]
                CALL 1 [sourcename: i1]
                    NAME JSCompiler_unstubMethod 1 [sourcename: i1]
                    NUMBER 1.0 1 [sourcename: i1]
                    FUNCTION  1 [sourcename: i1]
                        NAME  1 [sourcename: i1]
                        LP 1 [sourcename: i1]
                        BLOCK 1 [sourcename: i1]
                            EXPR_RESULT 1 [sourcename: i1]
                                CALL 1 [sourcename: i1]
                                    GETPROP 1 [sourcename: i1]
                                        THIS 1 [sourcename: i1]
                                        STRING baz 1 [sourcename: i1]
        EXPR_RESULT 1 [sourcename: i0]
            ASSIGN 1 [sourcename: i0]
                GETPROP 1 [sourcename: i0]
                    GETPROP 1 [sourcename: i0]
                        NAME Foo 1 [sourcename: i0]
                        STRING prototype 1 [sourcename: i0]
                    STRING baz 1 [sourcename: i0]
                CALL 1 [sourcename: i0]
                    NAME JSCompiler_unstubMethod 1 [sourcename: i0]
                    NUMBER 0.0 1 [sourcename: i0]
                    FUNCTION  1 [sourcename: i0]
                        NAME  1 [sourcename: i0]
                        LP 1 [sourcename: i0]
                        BLOCK 1 [sourcename: i0]
        EXPR_RESULT 1 [sourcename: i2]
            CALL 1 [sourcename: i2]
                GETPROP 1 [sourcename: i2]
                    NEW 1 [sourcename: i2] [parenthesized: true]
                        NAME Foo 1 [sourcename: i2]
                    STRING callBaz 1 [sourcename: i2]


Subtree1: NUMBER 1.0 1 [sourcename: expected0]


Subtree2: NUMBER 0.0 1 [sourcename: i0]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:843)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:679)
~ testClosureVariableReads3(com.google.javascript.jscomp.CrossModuleMethodMotionTest)
[
Expected: var JSCompiler_stubMap=[];function JSCompiler_stubMethod(JSCompiler_stubMethod_id){return function(){return JSCompiler_stubMap[JSCompiler_stubMethod_id].apply(this,arguments)}}function JSCompiler_unstubMethod(JSCompiler_unstubMethod_id,JSCompiler_unstubMethod_body){return JSCompiler_stubMap[JSCompiler_unstubMethod_id]=JSCompiler_unstubMethod_body}function Foo(){}Foo.prototype.b1=JSCompiler_stubMethod(0);Foo.prototype.b1=JSCompiler_unstubMethod(0,function(){Foo.prototype.b2=JSCompiler_stubMethod(1)});
var y=new Foo;y.b1();Foo.prototype.b2=JSCompiler_unstubMethod(1,function(){var x=1;Foo.prototype.b3=function(){x}});y=new Foo;z.b2();y=new Foo;z.b3()
Result: var JSCompiler_stubMap=[];function JSCompiler_stubMethod(JSCompiler_stubMethod_id){return function(){return JSCompiler_stubMap[JSCompiler_stubMethod_id].apply(this,arguments)}}function JSCompiler_unstubMethod(JSCompiler_unstubMethod_id,JSCompiler_unstubMethod_body){return JSCompiler_stubMap[JSCompiler_unstubMethod_id]=JSCompiler_unstubMethod_body}function Foo(){}Foo.prototype.b1=JSCompiler_stubMethod(1);Foo.prototype.b1=JSCompiler_unstubMethod(1,function(){Foo.prototype.b2=JSCompiler_stubMethod(0)});
var y=new Foo;y.b1();Foo.prototype.b2=JSCompiler_unstubMethod(0,function(){var x=1;Foo.prototype.b3=function(){x}});y=new Foo;z.b2();y=new Foo;z.b3()
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_stubMap 1 [sourcename: expected0]
                ARRAYLIT 1 [sourcename: expected0]
        FUNCTION  1 [sourcename: expected0]
            NAME JSCompiler_stubMethod 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
                NAME JSCompiler_stubMethod_id 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                RETURN 1 [sourcename: expected0]
                    FUNCTION  1 [sourcename: expected0]
                        NAME  1 [sourcename: expected0]
                        LP 1 [sourcename: expected0]
                        BLOCK 1 [sourcename: expected0]
                            RETURN 1 [sourcename: expected0]
                                CALL 1 [sourcename: expected0]
                                    GETPROP 1 [sourcename: expected0]
                                        GETELEM 1 [sourcename: expected0]
                                            NAME JSCompiler_stubMap 1 [sourcename: expected0]
                                            NAME JSCompiler_stubMethod_id 1 [sourcename: expected0]
                                        STRING apply 1 [sourcename: expected0]
                                    THIS 1 [sourcename: expected0]
                                    NAME arguments 1 [sourcename: expected0]
        FUNCTION  1 [sourcename: expected0]
            NAME JSCompiler_unstubMethod 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
                NAME JSCompiler_unstubMethod_id 1 [sourcename: expected0]
                NAME JSCompiler_unstubMethod_body 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                RETURN 1 [sourcename: expected0]
                    ASSIGN 1 [sourcename: expected0]
                        GETELEM 1 [sourcename: expected0]
                            NAME JSCompiler_stubMap 1 [sourcename: expected0]
                            NAME JSCompiler_unstubMethod_id 1 [sourcename: expected0]
                        NAME JSCompiler_unstubMethod_body 1 [sourcename: expected0]
        FUNCTION  1 [sourcename: expected0]
            NAME Foo 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            ASSIGN 1 [sourcename: expected0]
                GETPROP 1 [sourcename: expected0]
                    GETPROP 1 [sourcename: expected0]
                        NAME Foo 1 [sourcename: expected0]
                        STRING prototype 1 [sourcename: expected0]
                    STRING b1 1 [sourcename: expected0]
                CALL 1 [sourcename: expected0] [free_call: 1]
                    NAME JSCompiler_stubMethod 1 [sourcename: expected0]
                    NUMBER 0.0 1 [sourcename: expected0]
    SCRIPT 1 [sourcename: expected1] [synthetic: 1]
        EXPR_RESULT 1 [sourcename: expected1]
            ASSIGN 1 [sourcename: expected1]
                GETPROP 1 [sourcename: expected1]
                    GETPROP 1 [sourcename: expected1]
                        NAME Foo 1 [sourcename: expected1]
                        STRING prototype 1 [sourcename: expected1]
                    STRING b1 1 [sourcename: expected1]
                CALL 1 [sourcename: expected1] [free_call: 1]
                    NAME JSCompiler_unstubMethod 1 [sourcename: expected1]
                    NUMBER 0.0 1 [sourcename: expected1]
                    FUNCTION  1 [sourcename: expected1]
                        NAME  1 [sourcename: expected1]
                        LP 1 [sourcename: expected1]
                        BLOCK 1 [sourcename: expected1]
                            EXPR_RESULT 1 [sourcename: expected1]
                                ASSIGN 1 [sourcename: expected1]
                                    GETPROP 1 [sourcename: expected1]
                                        GETPROP 1 [sourcename: expected1]
                                            NAME Foo 1 [sourcename: expected1]
                                            STRING prototype 1 [sourcename: expected1]
                                        STRING b2 1 [sourcename: expected1]
                                    CALL 1 [sourcename: expected1] [free_call: 1]
                                        NAME JSCompiler_stubMethod 1 [sourcename: expected1]
                                        NUMBER 1.0 1 [sourcename: expected1]
        VAR 1 [sourcename: expected1]
            NAME y 1 [sourcename: expected1]
                NEW 1 [sourcename: expected1]
                    NAME Foo 1 [sourcename: expected1]
        EXPR_RESULT 1 [sourcename: expected1]
            CALL 1 [sourcename: expected1]
                GETPROP 1 [sourcename: expected1]
                    NAME y 1 [sourcename: expected1]
                    STRING b1 1 [sourcename: expected1]
    SCRIPT 1 [sourcename: expected2] [synthetic: 1]
        EXPR_RESULT 1 [sourcename: expected2]
            ASSIGN 1 [sourcename: expected2]
                GETPROP 1 [sourcename: expected2]
                    GETPROP 1 [sourcename: expected2]
                        NAME Foo 1 [sourcename: expected2]
                        STRING prototype 1 [sourcename: expected2]
                    STRING b2 1 [sourcename: expected2]
                CALL 1 [sourcename: expected2] [free_call: 1]
                    NAME JSCompiler_unstubMethod 1 [sourcename: expected2]
                    NUMBER 1.0 1 [sourcename: expected2]
                    FUNCTION  1 [sourcename: expected2]
                        NAME  1 [sourcename: expected2]
                        LP 1 [sourcename: expected2]
                        BLOCK 1 [sourcename: expected2]
                            VAR 1 [sourcename: expected2]
                                NAME x 1 [sourcename: expected2]
                                    NUMBER 1.0 1 [sourcename: expected2]
                            EXPR_RESULT 1 [sourcename: expected2]
                                ASSIGN 1 [sourcename: expected2]
                                    GETPROP 1 [sourcename: expected2]
                                        GETPROP 1 [sourcename: expected2]
                                            NAME Foo 1 [sourcename: expected2]
                                            STRING prototype 1 [sourcename: expected2]
                                        STRING b3 1 [sourcename: expected2]
                                    FUNCTION  1 [sourcename: expected2]
                                        NAME  1 [sourcename: expected2]
                                        LP 1 [sourcename: expected2]
                                        BLOCK 1 [sourcename: expected2]
                                            EXPR_RESULT 1 [sourcename: expected2]
                                                NAME x 1 [sourcename: expected2]
        EXPR_RESULT 1 [sourcename: expected2]
            ASSIGN 1 [sourcename: expected2]
                NAME y 1 [sourcename: expected2]
                NEW 1 [sourcename: expected2]
                    NAME Foo 1 [sourcename: expected2]
        EXPR_RESULT 1 [sourcename: expected2]
            CALL 1 [sourcename: expected2]
                GETPROP 1 [sourcename: expected2]
                    NAME z 1 [sourcename: expected2]
                    STRING b2 1 [sourcename: expected2]
    SCRIPT 1 [sourcename: expected3] [synthetic: 1]
        EXPR_RESULT 1 [sourcename: expected3]
            ASSIGN 1 [sourcename: expected3]
                NAME y 1 [sourcename: expected3]
                NEW 1 [sourcename: expected3]
                    NAME Foo 1 [sourcename: expected3]
        EXPR_RESULT 1 [sourcename: expected3]
            CALL 1 [sourcename: expected3]
                GETPROP 1 [sourcename: expected3]
                    NAME z 1 [sourcename: expected3]
                    STRING b3 1 [sourcename: expected3]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: i0] [synthetic: 1]
        VAR 1 [sourcename:  [synthetic] ]
            NAME JSCompiler_stubMap 1 [sourcename:  [synthetic] ]
                ARRAYLIT 1 [sourcename:  [synthetic] ]
        FUNCTION  1 [sourcename:  [synthetic] ]
            NAME JSCompiler_stubMethod 1 [sourcename:  [synthetic] ]
            LP 1 [sourcename:  [synthetic] ]
                NAME JSCompiler_stubMethod_id 1 [sourcename:  [synthetic] ]
            BLOCK 1 [sourcename:  [synthetic] ]
                RETURN 1 [sourcename:  [synthetic] ]
                    FUNCTION  1 [sourcename:  [synthetic] ]
                        NAME  1 [sourcename:  [synthetic] ]
                        LP 1 [sourcename:  [synthetic] ]
                        BLOCK 1 [sourcename:  [synthetic] ]
                            RETURN 1 [sourcename:  [synthetic] ]
                                CALL 1 [sourcename:  [synthetic] ]
                                    GETPROP 1 [sourcename:  [synthetic] ]
                                        GETELEM 1 [sourcename:  [synthetic] ]
                                            NAME JSCompiler_stubMap 1 [sourcename:  [synthetic] ]
                                            NAME JSCompiler_stubMethod_id 1 [sourcename:  [synthetic] ]
                                        STRING apply 1 [sourcename:  [synthetic] ]
                                    THIS 1 [sourcename:  [synthetic] ]
                                    NAME arguments 1 [sourcename:  [synthetic] ]
        FUNCTION  1 [sourcename:  [synthetic] ]
            NAME JSCompiler_unstubMethod 1 [sourcename:  [synthetic] ]
            LP 1 [sourcename:  [synthetic] ]
                NAME JSCompiler_unstubMethod_id 1 [sourcename:  [synthetic] ]
                NAME JSCompiler_unstubMethod_body 1 [sourcename:  [synthetic] ]
            BLOCK 1 [sourcename:  [synthetic] ]
                RETURN 1 [sourcename:  [synthetic] ]
                    ASSIGN 1 [sourcename:  [synthetic] ]
                        GETELEM 1 [sourcename:  [synthetic] ]
                            NAME JSCompiler_stubMap 1 [sourcename:  [synthetic] ]
                            NAME JSCompiler_unstubMethod_id 1 [sourcename:  [synthetic] ]
                        NAME JSCompiler_unstubMethod_body 1 [sourcename:  [synthetic] ]
        FUNCTION  1 [sourcename: i0]
            NAME Foo 1 [sourcename: i0]
            LP 1 [sourcename: i0]
            BLOCK 1 [sourcename: i0]
        EXPR_RESULT 1 [sourcename: i0]
            ASSIGN 1 [sourcename: i0]
                GETPROP 1 [sourcename: i0]
                    GETPROP 1 [sourcename: i0]
                        NAME Foo 1 [sourcename: i0]
                        STRING prototype 1 [sourcename: i0]
                    STRING b1 1 [sourcename: i0]
                CALL 1 [sourcename: i0]
                    NAME JSCompiler_stubMethod 1 [sourcename: i0]
                    NUMBER 1.0 1 [sourcename: i0]
    SCRIPT 1 [sourcename: i1] [synthetic: 1]
        EXPR_RESULT 1 [sourcename: i0]
            ASSIGN 1 [sourcename: i0]
                GETPROP 1 [sourcename: i0]
                    GETPROP 1 [sourcename: i0]
                        NAME Foo 1 [sourcename: i0]
                        STRING prototype 1 [sourcename: i0]
                    STRING b1 1 [sourcename: i0]
                CALL 1 [sourcename: i0]
                    NAME JSCompiler_unstubMethod 1 [sourcename: i0]
                    NUMBER 1.0 1 [sourcename: i0]
                    FUNCTION  1 [sourcename: i0]
                        NAME  1 [sourcename: i0]
                        LP 1 [sourcename: i0]
                        BLOCK 1 [sourcename: i0]
                            EXPR_RESULT 1 [sourcename: i0]
                                ASSIGN 1 [sourcename: i0]
                                    GETPROP 1 [sourcename: i0]
                                        GETPROP 1 [sourcename: i0]
                                            NAME Foo 1 [sourcename: i0]
                                            STRING prototype 1 [sourcename: i0]
                                        STRING b2 1 [sourcename: i0]
                                    CALL 1 [sourcename: i0]
                                        NAME JSCompiler_stubMethod 1 [sourcename: i0]
                                        NUMBER 0.0 1 [sourcename: i0]
        VAR 1 [sourcename: i1]
            NAME y 1 [sourcename: i1]
                NEW 1 [sourcename: i1]
                    NAME Foo 1 [sourcename: i1]
        EXPR_RESULT 1 [sourcename: i1]
            CALL 1 [sourcename: i1]
                GETPROP 1 [sourcename: i1]
                    NAME y 1 [sourcename: i1]
                    STRING b1 1 [sourcename: i1]
    SCRIPT 1 [sourcename: i2] [synthetic: 1]
        EXPR_RESULT 1 [sourcename: i0]
            ASSIGN 1 [sourcename: i0]
                GETPROP 1 [sourcename: i0]
                    GETPROP 1 [sourcename: i0]
                        NAME Foo 1 [sourcename: i0]
                        STRING prototype 1 [sourcename: i0]
                    STRING b2 1 [sourcename: i0]
                CALL 1 [sourcename: i0]
                    NAME JSCompiler_unstubMethod 1 [sourcename: i0]
                    NUMBER 0.0 1 [sourcename: i0]
                    FUNCTION  1 [sourcename: i0]
                        NAME  1 [sourcename: i0]
                        LP 1 [sourcename: i0]
                        BLOCK 1 [sourcename: i0]
                            VAR 1 [sourcename: i0]
                                NAME x 1 [sourcename: i0]
                                    NUMBER 1.0 1 [sourcename: i0]
                            EXPR_RESULT 1 [sourcename: i0]
                                ASSIGN 1 [sourcename: i0]
                                    GETPROP 1 [sourcename: i0]
                                        GETPROP 1 [sourcename: i0]
                                            NAME Foo 1 [sourcename: i0]
                                            STRING prototype 1 [sourcename: i0]
                                        STRING b3 1 [sourcename: i0]
                                    FUNCTION  1 [sourcename: i0]
                                        NAME  1 [sourcename: i0]
                                        LP 1 [sourcename: i0]
                                        BLOCK 1 [sourcename: i0]
                                            EXPR_RESULT 1 [sourcename: i0]
                                                NAME x 1 [sourcename: i0]
        EXPR_RESULT 1 [sourcename: i2]
            ASSIGN 1 [sourcename: i2]
                NAME y 1 [sourcename: i2]
                NEW 1 [sourcename: i2]
                    NAME Foo 1 [sourcename: i2]
        EXPR_RESULT 1 [sourcename: i2]
            CALL 1 [sourcename: i2]
                GETPROP 1 [sourcename: i2]
                    NAME z 1 [sourcename: i2]
                    STRING b2 1 [sourcename: i2]
    SCRIPT 1 [sourcename: i3] [synthetic: 1]
        EXPR_RESULT 1 [sourcename: i3]
            ASSIGN 1 [sourcename: i3]
                NAME y 1 [sourcename: i3]
                NEW 1 [sourcename: i3]
                    NAME Foo 1 [sourcename: i3]
        EXPR_RESULT 1 [sourcename: i3]
            CALL 1 [sourcename: i3]
                GETPROP 1 [sourcename: i3]
                    NAME z 1 [sourcename: i3]
                    STRING b3 1 [sourcename: i3]


Subtree1: NUMBER 0.0 1 [sourcename: expected0]


Subtree2: NUMBER 1.0 1 [sourcename: i0]
]
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_stubMap=[];function JSCompiler_stubMethod(JSCompiler_stubMethod_id){return function(){return JSCompiler_stubMap[JSCompiler_stubMethod_id].apply(this,arguments)}}function JSCompiler_unstubMethod(JSCompiler_unstubMethod_id,JSCompiler_unstubMethod_body){return JSCompiler_stubMap[JSCompiler_unstubMethod_id]=JSCompiler_unstubMethod_body}function Foo(){}Foo.prototype.b1=JSCompiler_stubMethod(0);Foo.prototype.b1=JSCompiler_unstubMethod(0,function(){Foo.prototype.b2=JSCompiler_stubMethod(1)});
var y=new Foo;y.b1();Foo.prototype.b2=JSCompiler_unstubMethod(1,function(){var x=1;Foo.prototype.b3=function(){x}});y=new Foo;z.b2();y=new Foo;z.b3()
Result: var JSCompiler_stubMap=[];function JSCompiler_stubMethod(JSCompiler_stubMethod_id){return function(){return JSCompiler_stubMap[JSCompiler_stubMethod_id].apply(this,arguments)}}function JSCompiler_unstubMethod(JSCompiler_unstubMethod_id,JSCompiler_unstubMethod_body){return JSCompiler_stubMap[JSCompiler_unstubMethod_id]=JSCompiler_unstubMethod_body}function Foo(){}Foo.prototype.b1=JSCompiler_stubMethod(1);Foo.prototype.b1=JSCompiler_unstubMethod(1,function(){Foo.prototype.b2=JSCompiler_stubMethod(0)});
var y=new Foo;y.b1();Foo.prototype.b2=JSCompiler_unstubMethod(0,function(){var x=1;Foo.prototype.b3=function(){x}});y=new Foo;z.b2();y=new Foo;z.b3()
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_stubMap 1 [sourcename: expected0]
                ARRAYLIT 1 [sourcename: expected0]
        FUNCTION  1 [sourcename: expected0]
            NAME JSCompiler_stubMethod 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
                NAME JSCompiler_stubMethod_id 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                RETURN 1 [sourcename: expected0]
                    FUNCTION  1 [sourcename: expected0]
                        NAME  1 [sourcename: expected0]
                        LP 1 [sourcename: expected0]
                        BLOCK 1 [sourcename: expected0]
                            RETURN 1 [sourcename: expected0]
                                CALL 1 [sourcename: expected0]
                                    GETPROP 1 [sourcename: expected0]
                                        GETELEM 1 [sourcename: expected0]
                                            NAME JSCompiler_stubMap 1 [sourcename: expected0]
                                            NAME JSCompiler_stubMethod_id 1 [sourcename: expected0]
                                        STRING apply 1 [sourcename: expected0]
                                    THIS 1 [sourcename: expected0]
                                    NAME arguments 1 [sourcename: expected0]
        FUNCTION  1 [sourcename: expected0]
            NAME JSCompiler_unstubMethod 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
                NAME JSCompiler_unstubMethod_id 1 [sourcename: expected0]
                NAME JSCompiler_unstubMethod_body 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                RETURN 1 [sourcename: expected0]
                    ASSIGN 1 [sourcename: expected0]
                        GETELEM 1 [sourcename: expected0]
                            NAME JSCompiler_stubMap 1 [sourcename: expected0]
                            NAME JSCompiler_unstubMethod_id 1 [sourcename: expected0]
                        NAME JSCompiler_unstubMethod_body 1 [sourcename: expected0]
        FUNCTION  1 [sourcename: expected0]
            NAME Foo 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            ASSIGN 1 [sourcename: expected0]
                GETPROP 1 [sourcename: expected0]
                    GETPROP 1 [sourcename: expected0]
                        NAME Foo 1 [sourcename: expected0]
                        STRING prototype 1 [sourcename: expected0]
                    STRING b1 1 [sourcename: expected0]
                CALL 1 [sourcename: expected0] [free_call: 1]
                    NAME JSCompiler_stubMethod 1 [sourcename: expected0]
                    NUMBER 0.0 1 [sourcename: expected0]
    SCRIPT 1 [sourcename: expected1] [synthetic: 1]
        EXPR_RESULT 1 [sourcename: expected1]
            ASSIGN 1 [sourcename: expected1]
                GETPROP 1 [sourcename: expected1]
                    GETPROP 1 [sourcename: expected1]
                        NAME Foo 1 [sourcename: expected1]
                        STRING prototype 1 [sourcename: expected1]
                    STRING b1 1 [sourcename: expected1]
                CALL 1 [sourcename: expected1] [free_call: 1]
                    NAME JSCompiler_unstubMethod 1 [sourcename: expected1]
                    NUMBER 0.0 1 [sourcename: expected1]
                    FUNCTION  1 [sourcename: expected1]
                        NAME  1 [sourcename: expected1]
                        LP 1 [sourcename: expected1]
                        BLOCK 1 [sourcename: expected1]
                            EXPR_RESULT 1 [sourcename: expected1]
                                ASSIGN 1 [sourcename: expected1]
                                    GETPROP 1 [sourcename: expected1]
                                        GETPROP 1 [sourcename: expected1]
                                            NAME Foo 1 [sourcename: expected1]
                                            STRING prototype 1 [sourcename: expected1]
                                        STRING b2 1 [sourcename: expected1]
                                    CALL 1 [sourcename: expected1] [free_call: 1]
                                        NAME JSCompiler_stubMethod 1 [sourcename: expected1]
                                        NUMBER 1.0 1 [sourcename: expected1]
        VAR 1 [sourcename: expected1]
            NAME y 1 [sourcename: expected1]
                NEW 1 [sourcename: expected1]
                    NAME Foo 1 [sourcename: expected1]
        EXPR_RESULT 1 [sourcename: expected1]
            CALL 1 [sourcename: expected1]
                GETPROP 1 [sourcename: expected1]
                    NAME y 1 [sourcename: expected1]
                    STRING b1 1 [sourcename: expected1]
    SCRIPT 1 [sourcename: expected2] [synthetic: 1]
        EXPR_RESULT 1 [sourcename: expected2]
            ASSIGN 1 [sourcename: expected2]
                GETPROP 1 [sourcename: expected2]
                    GETPROP 1 [sourcename: expected2]
                        NAME Foo 1 [sourcename: expected2]
                        STRING prototype 1 [sourcename: expected2]
                    STRING b2 1 [sourcename: expected2]
                CALL 1 [sourcename: expected2] [free_call: 1]
                    NAME JSCompiler_unstubMethod 1 [sourcename: expected2]
                    NUMBER 1.0 1 [sourcename: expected2]
                    FUNCTION  1 [sourcename: expected2]
                        NAME  1 [sourcename: expected2]
                        LP 1 [sourcename: expected2]
                        BLOCK 1 [sourcename: expected2]
                            VAR 1 [sourcename: expected2]
                                NAME x 1 [sourcename: expected2]
                                    NUMBER 1.0 1 [sourcename: expected2]
                            EXPR_RESULT 1 [sourcename: expected2]
                                ASSIGN 1 [sourcename: expected2]
                                    GETPROP 1 [sourcename: expected2]
                                        GETPROP 1 [sourcename: expected2]
                                            NAME Foo 1 [sourcename: expected2]
                                            STRING prototype 1 [sourcename: expected2]
                                        STRING b3 1 [sourcename: expected2]
                                    FUNCTION  1 [sourcename: expected2]
                                        NAME  1 [sourcename: expected2]
                                        LP 1 [sourcename: expected2]
                                        BLOCK 1 [sourcename: expected2]
                                            EXPR_RESULT 1 [sourcename: expected2]
                                                NAME x 1 [sourcename: expected2]
        EXPR_RESULT 1 [sourcename: expected2]
            ASSIGN 1 [sourcename: expected2]
                NAME y 1 [sourcename: expected2]
                NEW 1 [sourcename: expected2]
                    NAME Foo 1 [sourcename: expected2]
        EXPR_RESULT 1 [sourcename: expected2]
            CALL 1 [sourcename: expected2]
                GETPROP 1 [sourcename: expected2]
                    NAME z 1 [sourcename: expected2]
                    STRING b2 1 [sourcename: expected2]
    SCRIPT 1 [sourcename: expected3] [synthetic: 1]
        EXPR_RESULT 1 [sourcename: expected3]
            ASSIGN 1 [sourcename: expected3]
                NAME y 1 [sourcename: expected3]
                NEW 1 [sourcename: expected3]
                    NAME Foo 1 [sourcename: expected3]
        EXPR_RESULT 1 [sourcename: expected3]
            CALL 1 [sourcename: expected3]
                GETPROP 1 [sourcename: expected3]
                    NAME z 1 [sourcename: expected3]
                    STRING b3 1 [sourcename: expected3]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: i0] [synthetic: 1]
        VAR 1 [sourcename:  [synthetic] ]
            NAME JSCompiler_stubMap 1 [sourcename:  [synthetic] ]
                ARRAYLIT 1 [sourcename:  [synthetic] ]
        FUNCTION  1 [sourcename:  [synthetic] ]
            NAME JSCompiler_stubMethod 1 [sourcename:  [synthetic] ]
            LP 1 [sourcename:  [synthetic] ]
                NAME JSCompiler_stubMethod_id 1 [sourcename:  [synthetic] ]
            BLOCK 1 [sourcename:  [synthetic] ]
                RETURN 1 [sourcename:  [synthetic] ]
                    FUNCTION  1 [sourcename:  [synthetic] ]
                        NAME  1 [sourcename:  [synthetic] ]
                        LP 1 [sourcename:  [synthetic] ]
                        BLOCK 1 [sourcename:  [synthetic] ]
                            RETURN 1 [sourcename:  [synthetic] ]
                                CALL 1 [sourcename:  [synthetic] ]
                                    GETPROP 1 [sourcename:  [synthetic] ]
                                        GETELEM 1 [sourcename:  [synthetic] ]
                                            NAME JSCompiler_stubMap 1 [sourcename:  [synthetic] ]
                                            NAME JSCompiler_stubMethod_id 1 [sourcename:  [synthetic] ]
                                        STRING apply 1 [sourcename:  [synthetic] ]
                                    THIS 1 [sourcename:  [synthetic] ]
                                    NAME arguments 1 [sourcename:  [synthetic] ]
        FUNCTION  1 [sourcename:  [synthetic] ]
            NAME JSCompiler_unstubMethod 1 [sourcename:  [synthetic] ]
            LP 1 [sourcename:  [synthetic] ]
                NAME JSCompiler_unstubMethod_id 1 [sourcename:  [synthetic] ]
                NAME JSCompiler_unstubMethod_body 1 [sourcename:  [synthetic] ]
            BLOCK 1 [sourcename:  [synthetic] ]
                RETURN 1 [sourcename:  [synthetic] ]
                    ASSIGN 1 [sourcename:  [synthetic] ]
                        GETELEM 1 [sourcename:  [synthetic] ]
                            NAME JSCompiler_stubMap 1 [sourcename:  [synthetic] ]
                            NAME JSCompiler_unstubMethod_id 1 [sourcename:  [synthetic] ]
                        NAME JSCompiler_unstubMethod_body 1 [sourcename:  [synthetic] ]
        FUNCTION  1 [sourcename: i0]
            NAME Foo 1 [sourcename: i0]
            LP 1 [sourcename: i0]
            BLOCK 1 [sourcename: i0]
        EXPR_RESULT 1 [sourcename: i0]
            ASSIGN 1 [sourcename: i0]
                GETPROP 1 [sourcename: i0]
                    GETPROP 1 [sourcename: i0]
                        NAME Foo 1 [sourcename: i0]
                        STRING prototype 1 [sourcename: i0]
                    STRING b1 1 [sourcename: i0]
                CALL 1 [sourcename: i0]
                    NAME JSCompiler_stubMethod 1 [sourcename: i0]
                    NUMBER 1.0 1 [sourcename: i0]
    SCRIPT 1 [sourcename: i1] [synthetic: 1]
        EXPR_RESULT 1 [sourcename: i0]
            ASSIGN 1 [sourcename: i0]
                GETPROP 1 [sourcename: i0]
                    GETPROP 1 [sourcename: i0]
                        NAME Foo 1 [sourcename: i0]
                        STRING prototype 1 [sourcename: i0]
                    STRING b1 1 [sourcename: i0]
                CALL 1 [sourcename: i0]
                    NAME JSCompiler_unstubMethod 1 [sourcename: i0]
                    NUMBER 1.0 1 [sourcename: i0]
                    FUNCTION  1 [sourcename: i0]
                        NAME  1 [sourcename: i0]
                        LP 1 [sourcename: i0]
                        BLOCK 1 [sourcename: i0]
                            EXPR_RESULT 1 [sourcename: i0]
                                ASSIGN 1 [sourcename: i0]
                                    GETPROP 1 [sourcename: i0]
                                        GETPROP 1 [sourcename: i0]
                                            NAME Foo 1 [sourcename: i0]
                                            STRING prototype 1 [sourcename: i0]
                                        STRING b2 1 [sourcename: i0]
                                    CALL 1 [sourcename: i0]
                                        NAME JSCompiler_stubMethod 1 [sourcename: i0]
                                        NUMBER 0.0 1 [sourcename: i0]
        VAR 1 [sourcename: i1]
            NAME y 1 [sourcename: i1]
                NEW 1 [sourcename: i1]
                    NAME Foo 1 [sourcename: i1]
        EXPR_RESULT 1 [sourcename: i1]
            CALL 1 [sourcename: i1]
                GETPROP 1 [sourcename: i1]
                    NAME y 1 [sourcename: i1]
                    STRING b1 1 [sourcename: i1]
    SCRIPT 1 [sourcename: i2] [synthetic: 1]
        EXPR_RESULT 1 [sourcename: i0]
            ASSIGN 1 [sourcename: i0]
                GETPROP 1 [sourcename: i0]
                    GETPROP 1 [sourcename: i0]
                        NAME Foo 1 [sourcename: i0]
                        STRING prototype 1 [sourcename: i0]
                    STRING b2 1 [sourcename: i0]
                CALL 1 [sourcename: i0]
                    NAME JSCompiler_unstubMethod 1 [sourcename: i0]
                    NUMBER 0.0 1 [sourcename: i0]
                    FUNCTION  1 [sourcename: i0]
                        NAME  1 [sourcename: i0]
                        LP 1 [sourcename: i0]
                        BLOCK 1 [sourcename: i0]
                            VAR 1 [sourcename: i0]
                                NAME x 1 [sourcename: i0]
                                    NUMBER 1.0 1 [sourcename: i0]
                            EXPR_RESULT 1 [sourcename: i0]
                                ASSIGN 1 [sourcename: i0]
                                    GETPROP 1 [sourcename: i0]
                                        GETPROP 1 [sourcename: i0]
                                            NAME Foo 1 [sourcename: i0]
                                            STRING prototype 1 [sourcename: i0]
                                        STRING b3 1 [sourcename: i0]
                                    FUNCTION  1 [sourcename: i0]
                                        NAME  1 [sourcename: i0]
                                        LP 1 [sourcename: i0]
                                        BLOCK 1 [sourcename: i0]
                                            EXPR_RESULT 1 [sourcename: i0]
                                                NAME x 1 [sourcename: i0]
        EXPR_RESULT 1 [sourcename: i2]
            ASSIGN 1 [sourcename: i2]
                NAME y 1 [sourcename: i2]
                NEW 1 [sourcename: i2]
                    NAME Foo 1 [sourcename: i2]
        EXPR_RESULT 1 [sourcename: i2]
            CALL 1 [sourcename: i2]
                GETPROP 1 [sourcename: i2]
                    NAME z 1 [sourcename: i2]
                    STRING b2 1 [sourcename: i2]
    SCRIPT 1 [sourcename: i3] [synthetic: 1]
        EXPR_RESULT 1 [sourcename: i3]
            ASSIGN 1 [sourcename: i3]
                NAME y 1 [sourcename: i3]
                NEW 1 [sourcename: i3]
                    NAME Foo 1 [sourcename: i3]
        EXPR_RESULT 1 [sourcename: i3]
            CALL 1 [sourcename: i3]
                GETPROP 1 [sourcename: i3]
                    NAME z 1 [sourcename: i3]
                    STRING b3 1 [sourcename: i3]


Subtree1: NUMBER 0.0 1 [sourcename: expected0]


Subtree2: NUMBER 1.0 1 [sourcename: i0]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:843)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:679)
~ testInExpression2(com.google.javascript.jscomp.DeadAssignmentsEliminationTest)
[
Expected: function FUNC(param1,param2){var a;a=1;if(2||(a=3)||a);}
Result: function FUNC(param1,param2){var a;a=1;if((a=2)||(a=3)||a);}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        FUNCTION  1 [sourcename: expected0]
            NAME FUNC 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
                NAME param1 1 [sourcename: expected0]
                NAME param2 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                VAR 1 [sourcename: expected0]
                    NAME a 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    ASSIGN 1 [sourcename: expected0]
                        NAME a 1 [sourcename: expected0]
                        NUMBER 1.0 1 [sourcename: expected0]
                IF 1 [sourcename: expected0]
                    OR 1 [sourcename: expected0]
                        NUMBER 2.0 1 [sourcename: expected0] [parenthesized: true]
                        OR 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0] [parenthesized: true]
                                NAME a 1 [sourcename: expected0]
                                NUMBER 3.0 1 [sourcename: expected0]
                            NAME a 1 [sourcename: expected0] [parenthesized: true]
                    BLOCK 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        FUNCTION  1 [sourcename: testcode]
            NAME FUNC 1 [sourcename: testcode]
            LP 1 [sourcename: testcode]
                NAME param1 1 [sourcename: testcode]
                NAME param2 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                VAR 1 [sourcename: testcode]
                    NAME a 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    ASSIGN 1 [sourcename: testcode]
                        NAME a 1 [sourcename: testcode]
                        NUMBER 1.0 1 [sourcename: testcode]
                IF 1 [sourcename: testcode]
                    OR 1 [sourcename: testcode]
                        ASSIGN 1 [sourcename: testcode] [parenthesized: true]
                            NAME a 1 [sourcename: testcode]
                            NUMBER 2.0 1 [sourcename: testcode]
                        OR 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode] [parenthesized: true]
                                NAME a 1 [sourcename: testcode]
                                NUMBER 3.0 1 [sourcename: testcode]
                            NAME a 1 [sourcename: testcode] [parenthesized: true]
                    BLOCK 1 [sourcename: testcode]


Subtree1: NUMBER 2.0 1 [sourcename: expected0] [parenthesized: true]


Subtree2: ASSIGN 1 [sourcename: testcode] [parenthesized: true]
    NAME a 1 [sourcename: testcode]
    NUMBER 2.0 1 [sourcename: testcode]
]
junit.framework.AssertionFailedError: 
Expected: function FUNC(param1,param2){var a;a=1;if(2||(a=3)||a);}
Result: function FUNC(param1,param2){var a;a=1;if((a=2)||(a=3)||a);}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        FUNCTION  1 [sourcename: expected0]
            NAME FUNC 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
                NAME param1 1 [sourcename: expected0]
                NAME param2 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                VAR 1 [sourcename: expected0]
                    NAME a 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    ASSIGN 1 [sourcename: expected0]
                        NAME a 1 [sourcename: expected0]
                        NUMBER 1.0 1 [sourcename: expected0]
                IF 1 [sourcename: expected0]
                    OR 1 [sourcename: expected0]
                        NUMBER 2.0 1 [sourcename: expected0] [parenthesized: true]
                        OR 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0] [parenthesized: true]
                                NAME a 1 [sourcename: expected0]
                                NUMBER 3.0 1 [sourcename: expected0]
                            NAME a 1 [sourcename: expected0] [parenthesized: true]
                    BLOCK 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        FUNCTION  1 [sourcename: testcode]
            NAME FUNC 1 [sourcename: testcode]
            LP 1 [sourcename: testcode]
                NAME param1 1 [sourcename: testcode]
                NAME param2 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                VAR 1 [sourcename: testcode]
                    NAME a 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    ASSIGN 1 [sourcename: testcode]
                        NAME a 1 [sourcename: testcode]
                        NUMBER 1.0 1 [sourcename: testcode]
                IF 1 [sourcename: testcode]
                    OR 1 [sourcename: testcode]
                        ASSIGN 1 [sourcename: testcode] [parenthesized: true]
                            NAME a 1 [sourcename: testcode]
                            NUMBER 2.0 1 [sourcename: testcode]
                        OR 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode] [parenthesized: true]
                                NAME a 1 [sourcename: testcode]
                                NUMBER 3.0 1 [sourcename: testcode]
                            NAME a 1 [sourcename: testcode] [parenthesized: true]
                    BLOCK 1 [sourcename: testcode]


Subtree1: NUMBER 2.0 1 [sourcename: expected0] [parenthesized: true]


Subtree2: ASSIGN 1 [sourcename: testcode] [parenthesized: true]
    NAME a 1 [sourcename: testcode]
    NUMBER 2.0 1 [sourcename: testcode]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:843)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:410)
~ testIssue384b(com.google.javascript.jscomp.DeadAssignmentsEliminationTest)
[
Expected: function FUNC(param1,param2){var a,b;f(b=true)||f(b=false)?a=b:a=null;return a}
Result: function FUNC(param1,param2){var a,b;f(true)||f(b=false)?a=b:a=null;return a}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        FUNCTION  1 [sourcename: expected0]
            NAME FUNC 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
                NAME param1 1 [sourcename: expected0]
                NAME param2 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                VAR 1 [sourcename: expected0]
                    NAME a 1 [sourcename: expected0]
                    NAME b 1 [sourcename: expected0]
                EXPR_RESULT 2 [sourcename: expected0]
                    HOOK 2 [sourcename: expected0]
                        OR 2 [sourcename: expected0] [parenthesized: true]
                            CALL 2 [sourcename: expected0] [free_call: 1]
                                NAME f 2 [sourcename: expected0]
                                ASSIGN 2 [sourcename: expected0]
                                    NAME b 2 [sourcename: expected0]
                                    TRUE 2 [sourcename: expected0]
                            CALL 2 [sourcename: expected0] [free_call: 1]
                                NAME f 2 [sourcename: expected0]
                                ASSIGN 2 [sourcename: expected0]
                                    NAME b 2 [sourcename: expected0]
                                    FALSE 2 [sourcename: expected0]
                        ASSIGN 2 [sourcename: expected0] [parenthesized: true]
                            NAME a 2 [sourcename: expected0]
                            NAME b 2 [sourcename: expected0]
                        ASSIGN 2 [sourcename: expected0] [parenthesized: true]
                            NAME a 2 [sourcename: expected0]
                            NULL 2 [sourcename: expected0]
                RETURN 3 [sourcename: expected0]
                    NAME a 3 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        FUNCTION  1 [sourcename: testcode]
            NAME FUNC 1 [sourcename: testcode]
            LP 1 [sourcename: testcode]
                NAME param1 1 [sourcename: testcode]
                NAME param2 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                VAR 1 [sourcename: testcode]
                    NAME a 1 [sourcename: testcode]
                    NAME b 1 [sourcename: testcode]
                EXPR_RESULT 2 [sourcename: testcode]
                    HOOK 2 [sourcename: testcode]
                        OR 2 [sourcename: testcode] [parenthesized: true]
                            CALL 2 [sourcename: testcode] [free_call: 1]
                                NAME f 2 [sourcename: testcode]
                                TRUE 2 [sourcename: testcode]
                            CALL 2 [sourcename: testcode] [free_call: 1]
                                NAME f 2 [sourcename: testcode]
                                ASSIGN 2 [sourcename: testcode]
                                    NAME b 2 [sourcename: testcode]
                                    FALSE 2 [sourcename: testcode]
                        ASSIGN 2 [sourcename: testcode] [parenthesized: true]
                            NAME a 2 [sourcename: testcode]
                            NAME b 2 [sourcename: testcode]
                        ASSIGN 2 [sourcename: testcode] [parenthesized: true]
                            NAME a 2 [sourcename: testcode]
                            NULL 2 [sourcename: testcode]
                RETURN 3 [sourcename: testcode]
                    NAME a 3 [sourcename: testcode]


Subtree1: ASSIGN 2 [sourcename: expected0]
    NAME b 2 [sourcename: expected0]
    TRUE 2 [sourcename: expected0]


Subtree2: TRUE 2 [sourcename: testcode]
]
junit.framework.AssertionFailedError: 
Expected: function FUNC(param1,param2){var a,b;f(b=true)||f(b=false)?a=b:a=null;return a}
Result: function FUNC(param1,param2){var a,b;f(true)||f(b=false)?a=b:a=null;return a}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        FUNCTION  1 [sourcename: expected0]
            NAME FUNC 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
                NAME param1 1 [sourcename: expected0]
                NAME param2 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                VAR 1 [sourcename: expected0]
                    NAME a 1 [sourcename: expected0]
                    NAME b 1 [sourcename: expected0]
                EXPR_RESULT 2 [sourcename: expected0]
                    HOOK 2 [sourcename: expected0]
                        OR 2 [sourcename: expected0] [parenthesized: true]
                            CALL 2 [sourcename: expected0] [free_call: 1]
                                NAME f 2 [sourcename: expected0]
                                ASSIGN 2 [sourcename: expected0]
                                    NAME b 2 [sourcename: expected0]
                                    TRUE 2 [sourcename: expected0]
                            CALL 2 [sourcename: expected0] [free_call: 1]
                                NAME f 2 [sourcename: expected0]
                                ASSIGN 2 [sourcename: expected0]
                                    NAME b 2 [sourcename: expected0]
                                    FALSE 2 [sourcename: expected0]
                        ASSIGN 2 [sourcename: expected0] [parenthesized: true]
                            NAME a 2 [sourcename: expected0]
                            NAME b 2 [sourcename: expected0]
                        ASSIGN 2 [sourcename: expected0] [parenthesized: true]
                            NAME a 2 [sourcename: expected0]
                            NULL 2 [sourcename: expected0]
                RETURN 3 [sourcename: expected0]
                    NAME a 3 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        FUNCTION  1 [sourcename: testcode]
            NAME FUNC 1 [sourcename: testcode]
            LP 1 [sourcename: testcode]
                NAME param1 1 [sourcename: testcode]
                NAME param2 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                VAR 1 [sourcename: testcode]
                    NAME a 1 [sourcename: testcode]
                    NAME b 1 [sourcename: testcode]
                EXPR_RESULT 2 [sourcename: testcode]
                    HOOK 2 [sourcename: testcode]
                        OR 2 [sourcename: testcode] [parenthesized: true]
                            CALL 2 [sourcename: testcode] [free_call: 1]
                                NAME f 2 [sourcename: testcode]
                                TRUE 2 [sourcename: testcode]
                            CALL 2 [sourcename: testcode] [free_call: 1]
                                NAME f 2 [sourcename: testcode]
                                ASSIGN 2 [sourcename: testcode]
                                    NAME b 2 [sourcename: testcode]
                                    FALSE 2 [sourcename: testcode]
                        ASSIGN 2 [sourcename: testcode] [parenthesized: true]
                            NAME a 2 [sourcename: testcode]
                            NAME b 2 [sourcename: testcode]
                        ASSIGN 2 [sourcename: testcode] [parenthesized: true]
                            NAME a 2 [sourcename: testcode]
                            NULL 2 [sourcename: testcode]
                RETURN 3 [sourcename: testcode]
                    NAME a 3 [sourcename: testcode]


Subtree1: ASSIGN 2 [sourcename: expected0]
    NAME b 2 [sourcename: expected0]
    TRUE 2 [sourcename: expected0]


Subtree2: TRUE 2 [sourcename: testcode]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:843)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:410)
~ testIssue384c(com.google.javascript.jscomp.DeadAssignmentsEliminationTest)
[
Expected: function FUNC(param1,param2){var a,b;(a?f(b=true):f(b=false))&&(a=b);return a}
Result: function FUNC(param1,param2){var a,b;(a?f(true):f(b=false))&&(a=b);return a}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        FUNCTION  1 [sourcename: expected0]
            NAME FUNC 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
                NAME param1 1 [sourcename: expected0]
                NAME param2 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                VAR 1 [sourcename: expected0]
                    NAME a 1 [sourcename: expected0]
                    NAME b 1 [sourcename: expected0]
                EXPR_RESULT 2 [sourcename: expected0]
                    AND 2 [sourcename: expected0]
                        HOOK 2 [sourcename: expected0] [parenthesized: true]
                            NAME a 2 [sourcename: expected0]
                            CALL 2 [sourcename: expected0] [free_call: 1]
                                NAME f 2 [sourcename: expected0]
                                ASSIGN 2 [sourcename: expected0]
                                    NAME b 2 [sourcename: expected0]
                                    TRUE 2 [sourcename: expected0]
                            CALL 2 [sourcename: expected0] [free_call: 1]
                                NAME f 2 [sourcename: expected0]
                                ASSIGN 2 [sourcename: expected0]
                                    NAME b 2 [sourcename: expected0]
                                    FALSE 2 [sourcename: expected0]
                        ASSIGN 2 [sourcename: expected0] [parenthesized: true]
                            NAME a 2 [sourcename: expected0]
                            NAME b 2 [sourcename: expected0]
                RETURN 3 [sourcename: expected0]
                    NAME a 3 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        FUNCTION  1 [sourcename: testcode]
            NAME FUNC 1 [sourcename: testcode]
            LP 1 [sourcename: testcode]
                NAME param1 1 [sourcename: testcode]
                NAME param2 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                VAR 1 [sourcename: testcode]
                    NAME a 1 [sourcename: testcode]
                    NAME b 1 [sourcename: testcode]
                EXPR_RESULT 2 [sourcename: testcode]
                    AND 2 [sourcename: testcode]
                        HOOK 2 [sourcename: testcode] [parenthesized: true]
                            NAME a 2 [sourcename: testcode]
                            CALL 2 [sourcename: testcode] [free_call: 1]
                                NAME f 2 [sourcename: testcode]
                                TRUE 2 [sourcename: testcode]
                            CALL 2 [sourcename: testcode] [free_call: 1]
                                NAME f 2 [sourcename: testcode]
                                ASSIGN 2 [sourcename: testcode]
                                    NAME b 2 [sourcename: testcode]
                                    FALSE 2 [sourcename: testcode]
                        ASSIGN 2 [sourcename: testcode] [parenthesized: true]
                            NAME a 2 [sourcename: testcode]
                            NAME b 2 [sourcename: testcode]
                RETURN 3 [sourcename: testcode]
                    NAME a 3 [sourcename: testcode]


Subtree1: ASSIGN 2 [sourcename: expected0]
    NAME b 2 [sourcename: expected0]
    TRUE 2 [sourcename: expected0]


Subtree2: TRUE 2 [sourcename: testcode]
]
junit.framework.AssertionFailedError: 
Expected: function FUNC(param1,param2){var a,b;(a?f(b=true):f(b=false))&&(a=b);return a}
Result: function FUNC(param1,param2){var a,b;(a?f(true):f(b=false))&&(a=b);return a}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        FUNCTION  1 [sourcename: expected0]
            NAME FUNC 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
                NAME param1 1 [sourcename: expected0]
                NAME param2 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                VAR 1 [sourcename: expected0]
                    NAME a 1 [sourcename: expected0]
                    NAME b 1 [sourcename: expected0]
                EXPR_RESULT 2 [sourcename: expected0]
                    AND 2 [sourcename: expected0]
                        HOOK 2 [sourcename: expected0] [parenthesized: true]
                            NAME a 2 [sourcename: expected0]
                            CALL 2 [sourcename: expected0] [free_call: 1]
                                NAME f 2 [sourcename: expected0]
                                ASSIGN 2 [sourcename: expected0]
                                    NAME b 2 [sourcename: expected0]
                                    TRUE 2 [sourcename: expected0]
                            CALL 2 [sourcename: expected0] [free_call: 1]
                                NAME f 2 [sourcename: expected0]
                                ASSIGN 2 [sourcename: expected0]
                                    NAME b 2 [sourcename: expected0]
                                    FALSE 2 [sourcename: expected0]
                        ASSIGN 2 [sourcename: expected0] [parenthesized: true]
                            NAME a 2 [sourcename: expected0]
                            NAME b 2 [sourcename: expected0]
                RETURN 3 [sourcename: expected0]
                    NAME a 3 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        FUNCTION  1 [sourcename: testcode]
            NAME FUNC 1 [sourcename: testcode]
            LP 1 [sourcename: testcode]
                NAME param1 1 [sourcename: testcode]
                NAME param2 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                VAR 1 [sourcename: testcode]
                    NAME a 1 [sourcename: testcode]
                    NAME b 1 [sourcename: testcode]
                EXPR_RESULT 2 [sourcename: testcode]
                    AND 2 [sourcename: testcode]
                        HOOK 2 [sourcename: testcode] [parenthesized: true]
                            NAME a 2 [sourcename: testcode]
                            CALL 2 [sourcename: testcode] [free_call: 1]
                                NAME f 2 [sourcename: testcode]
                                TRUE 2 [sourcename: testcode]
                            CALL 2 [sourcename: testcode] [free_call: 1]
                                NAME f 2 [sourcename: testcode]
                                ASSIGN 2 [sourcename: testcode]
                                    NAME b 2 [sourcename: testcode]
                                    FALSE 2 [sourcename: testcode]
                        ASSIGN 2 [sourcename: testcode] [parenthesized: true]
                            NAME a 2 [sourcename: testcode]
                            NAME b 2 [sourcename: testcode]
                RETURN 3 [sourcename: testcode]
                    NAME a 3 [sourcename: testcode]


Subtree1: ASSIGN 2 [sourcename: expected0]
    NAME b 2 [sourcename: expected0]
    TRUE 2 [sourcename: expected0]


Subtree2: TRUE 2 [sourcename: testcode]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:843)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:410)
~ testIssue384d(com.google.javascript.jscomp.DeadAssignmentsEliminationTest)
[
Expected: function FUNC(param1,param2){var a,b;(f(b=true)||f(b=false))&&(a=b);return a}
Result: function FUNC(param1,param2){var a,b;(f(true)||f(b=false))&&(a=b);return a}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        FUNCTION  1 [sourcename: expected0]
            NAME FUNC 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
                NAME param1 1 [sourcename: expected0]
                NAME param2 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                VAR 1 [sourcename: expected0]
                    NAME a 1 [sourcename: expected0]
                    NAME b 1 [sourcename: expected0]
                EXPR_RESULT 2 [sourcename: expected0]
                    AND 2 [sourcename: expected0]
                        OR 2 [sourcename: expected0] [parenthesized: true]
                            CALL 2 [sourcename: expected0] [free_call: 1]
                                NAME f 2 [sourcename: expected0]
                                ASSIGN 2 [sourcename: expected0]
                                    NAME b 2 [sourcename: expected0]
                                    TRUE 2 [sourcename: expected0]
                            CALL 2 [sourcename: expected0] [free_call: 1]
                                NAME f 2 [sourcename: expected0]
                                ASSIGN 2 [sourcename: expected0]
                                    NAME b 2 [sourcename: expected0]
                                    FALSE 2 [sourcename: expected0]
                        ASSIGN 2 [sourcename: expected0] [parenthesized: true]
                            NAME a 2 [sourcename: expected0]
                            NAME b 2 [sourcename: expected0]
                RETURN 3 [sourcename: expected0]
                    NAME a 3 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        FUNCTION  1 [sourcename: testcode]
            NAME FUNC 1 [sourcename: testcode]
            LP 1 [sourcename: testcode]
                NAME param1 1 [sourcename: testcode]
                NAME param2 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                VAR 1 [sourcename: testcode]
                    NAME a 1 [sourcename: testcode]
                    NAME b 1 [sourcename: testcode]
                EXPR_RESULT 2 [sourcename: testcode]
                    AND 2 [sourcename: testcode]
                        OR 2 [sourcename: testcode] [parenthesized: true]
                            CALL 2 [sourcename: testcode] [free_call: 1]
                                NAME f 2 [sourcename: testcode]
                                TRUE 2 [sourcename: testcode]
                            CALL 2 [sourcename: testcode] [free_call: 1]
                                NAME f 2 [sourcename: testcode]
                                ASSIGN 2 [sourcename: testcode]
                                    NAME b 2 [sourcename: testcode]
                                    FALSE 2 [sourcename: testcode]
                        ASSIGN 2 [sourcename: testcode] [parenthesized: true]
                            NAME a 2 [sourcename: testcode]
                            NAME b 2 [sourcename: testcode]
                RETURN 3 [sourcename: testcode]
                    NAME a 3 [sourcename: testcode]


Subtree1: ASSIGN 2 [sourcename: expected0]
    NAME b 2 [sourcename: expected0]
    TRUE 2 [sourcename: expected0]


Subtree2: TRUE 2 [sourcename: testcode]
]
junit.framework.AssertionFailedError: 
Expected: function FUNC(param1,param2){var a,b;(f(b=true)||f(b=false))&&(a=b);return a}
Result: function FUNC(param1,param2){var a,b;(f(true)||f(b=false))&&(a=b);return a}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        FUNCTION  1 [sourcename: expected0]
            NAME FUNC 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
                NAME param1 1 [sourcename: expected0]
                NAME param2 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                VAR 1 [sourcename: expected0]
                    NAME a 1 [sourcename: expected0]
                    NAME b 1 [sourcename: expected0]
                EXPR_RESULT 2 [sourcename: expected0]
                    AND 2 [sourcename: expected0]
                        OR 2 [sourcename: expected0] [parenthesized: true]
                            CALL 2 [sourcename: expected0] [free_call: 1]
                                NAME f 2 [sourcename: expected0]
                                ASSIGN 2 [sourcename: expected0]
                                    NAME b 2 [sourcename: expected0]
                                    TRUE 2 [sourcename: expected0]
                            CALL 2 [sourcename: expected0] [free_call: 1]
                                NAME f 2 [sourcename: expected0]
                                ASSIGN 2 [sourcename: expected0]
                                    NAME b 2 [sourcename: expected0]
                                    FALSE 2 [sourcename: expected0]
                        ASSIGN 2 [sourcename: expected0] [parenthesized: true]
                            NAME a 2 [sourcename: expected0]
                            NAME b 2 [sourcename: expected0]
                RETURN 3 [sourcename: expected0]
                    NAME a 3 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        FUNCTION  1 [sourcename: testcode]
            NAME FUNC 1 [sourcename: testcode]
            LP 1 [sourcename: testcode]
                NAME param1 1 [sourcename: testcode]
                NAME param2 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                VAR 1 [sourcename: testcode]
                    NAME a 1 [sourcename: testcode]
                    NAME b 1 [sourcename: testcode]
                EXPR_RESULT 2 [sourcename: testcode]
                    AND 2 [sourcename: testcode]
                        OR 2 [sourcename: testcode] [parenthesized: true]
                            CALL 2 [sourcename: testcode] [free_call: 1]
                                NAME f 2 [sourcename: testcode]
                                TRUE 2 [sourcename: testcode]
                            CALL 2 [sourcename: testcode] [free_call: 1]
                                NAME f 2 [sourcename: testcode]
                                ASSIGN 2 [sourcename: testcode]
                                    NAME b 2 [sourcename: testcode]
                                    FALSE 2 [sourcename: testcode]
                        ASSIGN 2 [sourcename: testcode] [parenthesized: true]
                            NAME a 2 [sourcename: testcode]
                            NAME b 2 [sourcename: testcode]
                RETURN 3 [sourcename: testcode]
                    NAME a 3 [sourcename: testcode]


Subtree1: ASSIGN 2 [sourcename: expected0]
    NAME b 2 [sourcename: expected0]
    TRUE 2 [sourcename: expected0]


Subtree2: TRUE 2 [sourcename: testcode]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:843)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:410)
~ testInExpression2(com.google.javascript.jscomp.DeadAssignmentsEliminationTest)
[
Expected: function FUNC(param1,param2){var a;a=1;if(2||(a=3)||a);}
Result: function FUNC(param1,param2){var a;a=1;if((a=2)||(a=3)||a);}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        FUNCTION  1 [sourcename: expected0]
            NAME FUNC 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
                NAME param1 1 [sourcename: expected0]
                NAME param2 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                VAR 1 [sourcename: expected0]
                    NAME a 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    ASSIGN 1 [sourcename: expected0]
                        NAME a 1 [sourcename: expected0]
                        NUMBER 1.0 1 [sourcename: expected0]
                IF 1 [sourcename: expected0]
                    OR 1 [sourcename: expected0]
                        NUMBER 2.0 1 [sourcename: expected0] [parenthesized: true]
                        OR 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0] [parenthesized: true]
                                NAME a 1 [sourcename: expected0]
                                NUMBER 3.0 1 [sourcename: expected0]
                            NAME a 1 [sourcename: expected0] [parenthesized: true]
                    BLOCK 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        FUNCTION  1 [sourcename: testcode]
            NAME FUNC 1 [sourcename: testcode]
            LP 1 [sourcename: testcode]
                NAME param1 1 [sourcename: testcode]
                NAME param2 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                VAR 1 [sourcename: testcode]
                    NAME a 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    ASSIGN 1 [sourcename: testcode]
                        NAME a 1 [sourcename: testcode]
                        NUMBER 1.0 1 [sourcename: testcode]
                IF 1 [sourcename: testcode]
                    OR 1 [sourcename: testcode]
                        ASSIGN 1 [sourcename: testcode] [parenthesized: true]
                            NAME a 1 [sourcename: testcode]
                            NUMBER 2.0 1 [sourcename: testcode]
                        OR 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode] [parenthesized: true]
                                NAME a 1 [sourcename: testcode]
                                NUMBER 3.0 1 [sourcename: testcode]
                            NAME a 1 [sourcename: testcode] [parenthesized: true]
                    BLOCK 1 [sourcename: testcode]


Subtree1: NUMBER 2.0 1 [sourcename: expected0] [parenthesized: true]


Subtree2: ASSIGN 1 [sourcename: testcode] [parenthesized: true]
    NAME a 1 [sourcename: testcode]
    NUMBER 2.0 1 [sourcename: testcode]
]
junit.framework.AssertionFailedError: 
Expected: function FUNC(param1,param2){var a;a=1;if(2||(a=3)||a);}
Result: function FUNC(param1,param2){var a;a=1;if((a=2)||(a=3)||a);}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        FUNCTION  1 [sourcename: expected0]
            NAME FUNC 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
                NAME param1 1 [sourcename: expected0]
                NAME param2 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                VAR 1 [sourcename: expected0]
                    NAME a 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    ASSIGN 1 [sourcename: expected0]
                        NAME a 1 [sourcename: expected0]
                        NUMBER 1.0 1 [sourcename: expected0]
                IF 1 [sourcename: expected0]
                    OR 1 [sourcename: expected0]
                        NUMBER 2.0 1 [sourcename: expected0] [parenthesized: true]
                        OR 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0] [parenthesized: true]
                                NAME a 1 [sourcename: expected0]
                                NUMBER 3.0 1 [sourcename: expected0]
                            NAME a 1 [sourcename: expected0] [parenthesized: true]
                    BLOCK 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        FUNCTION  1 [sourcename: testcode]
            NAME FUNC 1 [sourcename: testcode]
            LP 1 [sourcename: testcode]
                NAME param1 1 [sourcename: testcode]
                NAME param2 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                VAR 1 [sourcename: testcode]
                    NAME a 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    ASSIGN 1 [sourcename: testcode]
                        NAME a 1 [sourcename: testcode]
                        NUMBER 1.0 1 [sourcename: testcode]
                IF 1 [sourcename: testcode]
                    OR 1 [sourcename: testcode]
                        ASSIGN 1 [sourcename: testcode] [parenthesized: true]
                            NAME a 1 [sourcename: testcode]
                            NUMBER 2.0 1 [sourcename: testcode]
                        OR 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode] [parenthesized: true]
                                NAME a 1 [sourcename: testcode]
                                NUMBER 3.0 1 [sourcename: testcode]
                            NAME a 1 [sourcename: testcode] [parenthesized: true]
                    BLOCK 1 [sourcename: testcode]


Subtree1: NUMBER 2.0 1 [sourcename: expected0] [parenthesized: true]


Subtree2: ASSIGN 1 [sourcename: testcode] [parenthesized: true]
    NAME a 1 [sourcename: testcode]
    NUMBER 2.0 1 [sourcename: testcode]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:843)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:410)
~ testIssue384b(com.google.javascript.jscomp.DeadAssignmentsEliminationTest)
[
Expected: function FUNC(param1,param2){var a,b;f(b=true)||f(b=false)?a=b:a=null;return a}
Result: function FUNC(param1,param2){var a,b;f(true)||f(b=false)?a=b:a=null;return a}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        FUNCTION  1 [sourcename: expected0]
            NAME FUNC 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
                NAME param1 1 [sourcename: expected0]
                NAME param2 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                VAR 1 [sourcename: expected0]
                    NAME a 1 [sourcename: expected0]
                    NAME b 1 [sourcename: expected0]
                EXPR_RESULT 2 [sourcename: expected0]
                    HOOK 2 [sourcename: expected0]
                        OR 2 [sourcename: expected0] [parenthesized: true]
                            CALL 2 [sourcename: expected0] [free_call: 1]
                                NAME f 2 [sourcename: expected0]
                                ASSIGN 2 [sourcename: expected0]
                                    NAME b 2 [sourcename: expected0]
                                    TRUE 2 [sourcename: expected0]
                            CALL 2 [sourcename: expected0] [free_call: 1]
                                NAME f 2 [sourcename: expected0]
                                ASSIGN 2 [sourcename: expected0]
                                    NAME b 2 [sourcename: expected0]
                                    FALSE 2 [sourcename: expected0]
                        ASSIGN 2 [sourcename: expected0] [parenthesized: true]
                            NAME a 2 [sourcename: expected0]
                            NAME b 2 [sourcename: expected0]
                        ASSIGN 2 [sourcename: expected0] [parenthesized: true]
                            NAME a 2 [sourcename: expected0]
                            NULL 2 [sourcename: expected0]
                RETURN 3 [sourcename: expected0]
                    NAME a 3 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        FUNCTION  1 [sourcename: testcode]
            NAME FUNC 1 [sourcename: testcode]
            LP 1 [sourcename: testcode]
                NAME param1 1 [sourcename: testcode]
                NAME param2 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                VAR 1 [sourcename: testcode]
                    NAME a 1 [sourcename: testcode]
                    NAME b 1 [sourcename: testcode]
                EXPR_RESULT 2 [sourcename: testcode]
                    HOOK 2 [sourcename: testcode]
                        OR 2 [sourcename: testcode] [parenthesized: true]
                            CALL 2 [sourcename: testcode] [free_call: 1]
                                NAME f 2 [sourcename: testcode]
                                TRUE 2 [sourcename: testcode]
                            CALL 2 [sourcename: testcode] [free_call: 1]
                                NAME f 2 [sourcename: testcode]
                                ASSIGN 2 [sourcename: testcode]
                                    NAME b 2 [sourcename: testcode]
                                    FALSE 2 [sourcename: testcode]
                        ASSIGN 2 [sourcename: testcode] [parenthesized: true]
                            NAME a 2 [sourcename: testcode]
                            NAME b 2 [sourcename: testcode]
                        ASSIGN 2 [sourcename: testcode] [parenthesized: true]
                            NAME a 2 [sourcename: testcode]
                            NULL 2 [sourcename: testcode]
                RETURN 3 [sourcename: testcode]
                    NAME a 3 [sourcename: testcode]


Subtree1: ASSIGN 2 [sourcename: expected0]
    NAME b 2 [sourcename: expected0]
    TRUE 2 [sourcename: expected0]


Subtree2: TRUE 2 [sourcename: testcode]
]
junit.framework.AssertionFailedError: 
Expected: function FUNC(param1,param2){var a,b;f(b=true)||f(b=false)?a=b:a=null;return a}
Result: function FUNC(param1,param2){var a,b;f(true)||f(b=false)?a=b:a=null;return a}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        FUNCTION  1 [sourcename: expected0]
            NAME FUNC 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
                NAME param1 1 [sourcename: expected0]
                NAME param2 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                VAR 1 [sourcename: expected0]
                    NAME a 1 [sourcename: expected0]
                    NAME b 1 [sourcename: expected0]
                EXPR_RESULT 2 [sourcename: expected0]
                    HOOK 2 [sourcename: expected0]
                        OR 2 [sourcename: expected0] [parenthesized: true]
                            CALL 2 [sourcename: expected0] [free_call: 1]
                                NAME f 2 [sourcename: expected0]
                                ASSIGN 2 [sourcename: expected0]
                                    NAME b 2 [sourcename: expected0]
                                    TRUE 2 [sourcename: expected0]
                            CALL 2 [sourcename: expected0] [free_call: 1]
                                NAME f 2 [sourcename: expected0]
                                ASSIGN 2 [sourcename: expected0]
                                    NAME b 2 [sourcename: expected0]
                                    FALSE 2 [sourcename: expected0]
                        ASSIGN 2 [sourcename: expected0] [parenthesized: true]
                            NAME a 2 [sourcename: expected0]
                            NAME b 2 [sourcename: expected0]
                        ASSIGN 2 [sourcename: expected0] [parenthesized: true]
                            NAME a 2 [sourcename: expected0]
                            NULL 2 [sourcename: expected0]
                RETURN 3 [sourcename: expected0]
                    NAME a 3 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        FUNCTION  1 [sourcename: testcode]
            NAME FUNC 1 [sourcename: testcode]
            LP 1 [sourcename: testcode]
                NAME param1 1 [sourcename: testcode]
                NAME param2 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                VAR 1 [sourcename: testcode]
                    NAME a 1 [sourcename: testcode]
                    NAME b 1 [sourcename: testcode]
                EXPR_RESULT 2 [sourcename: testcode]
                    HOOK 2 [sourcename: testcode]
                        OR 2 [sourcename: testcode] [parenthesized: true]
                            CALL 2 [sourcename: testcode] [free_call: 1]
                                NAME f 2 [sourcename: testcode]
                                TRUE 2 [sourcename: testcode]
                            CALL 2 [sourcename: testcode] [free_call: 1]
                                NAME f 2 [sourcename: testcode]
                                ASSIGN 2 [sourcename: testcode]
                                    NAME b 2 [sourcename: testcode]
                                    FALSE 2 [sourcename: testcode]
                        ASSIGN 2 [sourcename: testcode] [parenthesized: true]
                            NAME a 2 [sourcename: testcode]
                            NAME b 2 [sourcename: testcode]
                        ASSIGN 2 [sourcename: testcode] [parenthesized: true]
                            NAME a 2 [sourcename: testcode]
                            NULL 2 [sourcename: testcode]
                RETURN 3 [sourcename: testcode]
                    NAME a 3 [sourcename: testcode]


Subtree1: ASSIGN 2 [sourcename: expected0]
    NAME b 2 [sourcename: expected0]
    TRUE 2 [sourcename: expected0]


Subtree2: TRUE 2 [sourcename: testcode]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:843)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:410)
~ testIssue384c(com.google.javascript.jscomp.DeadAssignmentsEliminationTest)
[
Expected: function FUNC(param1,param2){var a,b;(a?f(b=true):f(b=false))&&(a=b);return a}
Result: function FUNC(param1,param2){var a,b;(a?f(true):f(b=false))&&(a=b);return a}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        FUNCTION  1 [sourcename: expected0]
            NAME FUNC 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
                NAME param1 1 [sourcename: expected0]
                NAME param2 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                VAR 1 [sourcename: expected0]
                    NAME a 1 [sourcename: expected0]
                    NAME b 1 [sourcename: expected0]
                EXPR_RESULT 2 [sourcename: expected0]
                    AND 2 [sourcename: expected0]
                        HOOK 2 [sourcename: expected0] [parenthesized: true]
                            NAME a 2 [sourcename: expected0]
                            CALL 2 [sourcename: expected0] [free_call: 1]
                                NAME f 2 [sourcename: expected0]
                                ASSIGN 2 [sourcename: expected0]
                                    NAME b 2 [sourcename: expected0]
                                    TRUE 2 [sourcename: expected0]
                            CALL 2 [sourcename: expected0] [free_call: 1]
                                NAME f 2 [sourcename: expected0]
                                ASSIGN 2 [sourcename: expected0]
                                    NAME b 2 [sourcename: expected0]
                                    FALSE 2 [sourcename: expected0]
                        ASSIGN 2 [sourcename: expected0] [parenthesized: true]
                            NAME a 2 [sourcename: expected0]
                            NAME b 2 [sourcename: expected0]
                RETURN 3 [sourcename: expected0]
                    NAME a 3 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        FUNCTION  1 [sourcename: testcode]
            NAME FUNC 1 [sourcename: testcode]
            LP 1 [sourcename: testcode]
                NAME param1 1 [sourcename: testcode]
                NAME param2 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                VAR 1 [sourcename: testcode]
                    NAME a 1 [sourcename: testcode]
                    NAME b 1 [sourcename: testcode]
                EXPR_RESULT 2 [sourcename: testcode]
                    AND 2 [sourcename: testcode]
                        HOOK 2 [sourcename: testcode] [parenthesized: true]
                            NAME a 2 [sourcename: testcode]
                            CALL 2 [sourcename: testcode] [free_call: 1]
                                NAME f 2 [sourcename: testcode]
                                TRUE 2 [sourcename: testcode]
                            CALL 2 [sourcename: testcode] [free_call: 1]
                                NAME f 2 [sourcename: testcode]
                                ASSIGN 2 [sourcename: testcode]
                                    NAME b 2 [sourcename: testcode]
                                    FALSE 2 [sourcename: testcode]
                        ASSIGN 2 [sourcename: testcode] [parenthesized: true]
                            NAME a 2 [sourcename: testcode]
                            NAME b 2 [sourcename: testcode]
                RETURN 3 [sourcename: testcode]
                    NAME a 3 [sourcename: testcode]


Subtree1: ASSIGN 2 [sourcename: expected0]
    NAME b 2 [sourcename: expected0]
    TRUE 2 [sourcename: expected0]


Subtree2: TRUE 2 [sourcename: testcode]
]
junit.framework.AssertionFailedError: 
Expected: function FUNC(param1,param2){var a,b;(a?f(b=true):f(b=false))&&(a=b);return a}
Result: function FUNC(param1,param2){var a,b;(a?f(true):f(b=false))&&(a=b);return a}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        FUNCTION  1 [sourcename: expected0]
            NAME FUNC 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
                NAME param1 1 [sourcename: expected0]
                NAME param2 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                VAR 1 [sourcename: expected0]
                    NAME a 1 [sourcename: expected0]
                    NAME b 1 [sourcename: expected0]
                EXPR_RESULT 2 [sourcename: expected0]
                    AND 2 [sourcename: expected0]
                        HOOK 2 [sourcename: expected0] [parenthesized: true]
                            NAME a 2 [sourcename: expected0]
                            CALL 2 [sourcename: expected0] [free_call: 1]
                                NAME f 2 [sourcename: expected0]
                                ASSIGN 2 [sourcename: expected0]
                                    NAME b 2 [sourcename: expected0]
                                    TRUE 2 [sourcename: expected0]
                            CALL 2 [sourcename: expected0] [free_call: 1]
                                NAME f 2 [sourcename: expected0]
                                ASSIGN 2 [sourcename: expected0]
                                    NAME b 2 [sourcename: expected0]
                                    FALSE 2 [sourcename: expected0]
                        ASSIGN 2 [sourcename: expected0] [parenthesized: true]
                            NAME a 2 [sourcename: expected0]
                            NAME b 2 [sourcename: expected0]
                RETURN 3 [sourcename: expected0]
                    NAME a 3 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        FUNCTION  1 [sourcename: testcode]
            NAME FUNC 1 [sourcename: testcode]
            LP 1 [sourcename: testcode]
                NAME param1 1 [sourcename: testcode]
                NAME param2 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                VAR 1 [sourcename: testcode]
                    NAME a 1 [sourcename: testcode]
                    NAME b 1 [sourcename: testcode]
                EXPR_RESULT 2 [sourcename: testcode]
                    AND 2 [sourcename: testcode]
                        HOOK 2 [sourcename: testcode] [parenthesized: true]
                            NAME a 2 [sourcename: testcode]
                            CALL 2 [sourcename: testcode] [free_call: 1]
                                NAME f 2 [sourcename: testcode]
                                TRUE 2 [sourcename: testcode]
                            CALL 2 [sourcename: testcode] [free_call: 1]
                                NAME f 2 [sourcename: testcode]
                                ASSIGN 2 [sourcename: testcode]
                                    NAME b 2 [sourcename: testcode]
                                    FALSE 2 [sourcename: testcode]
                        ASSIGN 2 [sourcename: testcode] [parenthesized: true]
                            NAME a 2 [sourcename: testcode]
                            NAME b 2 [sourcename: testcode]
                RETURN 3 [sourcename: testcode]
                    NAME a 3 [sourcename: testcode]


Subtree1: ASSIGN 2 [sourcename: expected0]
    NAME b 2 [sourcename: expected0]
    TRUE 2 [sourcename: expected0]


Subtree2: TRUE 2 [sourcename: testcode]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:843)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:410)
~ testIssue384d(com.google.javascript.jscomp.DeadAssignmentsEliminationTest)
[
Expected: function FUNC(param1,param2){var a,b;(f(b=true)||f(b=false))&&(a=b);return a}
Result: function FUNC(param1,param2){var a,b;(f(true)||f(b=false))&&(a=b);return a}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        FUNCTION  1 [sourcename: expected0]
            NAME FUNC 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
                NAME param1 1 [sourcename: expected0]
                NAME param2 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                VAR 1 [sourcename: expected0]
                    NAME a 1 [sourcename: expected0]
                    NAME b 1 [sourcename: expected0]
                EXPR_RESULT 2 [sourcename: expected0]
                    AND 2 [sourcename: expected0]
                        OR 2 [sourcename: expected0] [parenthesized: true]
                            CALL 2 [sourcename: expected0] [free_call: 1]
                                NAME f 2 [sourcename: expected0]
                                ASSIGN 2 [sourcename: expected0]
                                    NAME b 2 [sourcename: expected0]
                                    TRUE 2 [sourcename: expected0]
                            CALL 2 [sourcename: expected0] [free_call: 1]
                                NAME f 2 [sourcename: expected0]
                                ASSIGN 2 [sourcename: expected0]
                                    NAME b 2 [sourcename: expected0]
                                    FALSE 2 [sourcename: expected0]
                        ASSIGN 2 [sourcename: expected0] [parenthesized: true]
                            NAME a 2 [sourcename: expected0]
                            NAME b 2 [sourcename: expected0]
                RETURN 3 [sourcename: expected0]
                    NAME a 3 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        FUNCTION  1 [sourcename: testcode]
            NAME FUNC 1 [sourcename: testcode]
            LP 1 [sourcename: testcode]
                NAME param1 1 [sourcename: testcode]
                NAME param2 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                VAR 1 [sourcename: testcode]
                    NAME a 1 [sourcename: testcode]
                    NAME b 1 [sourcename: testcode]
                EXPR_RESULT 2 [sourcename: testcode]
                    AND 2 [sourcename: testcode]
                        OR 2 [sourcename: testcode] [parenthesized: true]
                            CALL 2 [sourcename: testcode] [free_call: 1]
                                NAME f 2 [sourcename: testcode]
                                TRUE 2 [sourcename: testcode]
                            CALL 2 [sourcename: testcode] [free_call: 1]
                                NAME f 2 [sourcename: testcode]
                                ASSIGN 2 [sourcename: testcode]
                                    NAME b 2 [sourcename: testcode]
                                    FALSE 2 [sourcename: testcode]
                        ASSIGN 2 [sourcename: testcode] [parenthesized: true]
                            NAME a 2 [sourcename: testcode]
                            NAME b 2 [sourcename: testcode]
                RETURN 3 [sourcename: testcode]
                    NAME a 3 [sourcename: testcode]


Subtree1: ASSIGN 2 [sourcename: expected0]
    NAME b 2 [sourcename: expected0]
    TRUE 2 [sourcename: expected0]


Subtree2: TRUE 2 [sourcename: testcode]
]
junit.framework.AssertionFailedError: 
Expected: function FUNC(param1,param2){var a,b;(f(b=true)||f(b=false))&&(a=b);return a}
Result: function FUNC(param1,param2){var a,b;(f(true)||f(b=false))&&(a=b);return a}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        FUNCTION  1 [sourcename: expected0]
            NAME FUNC 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
                NAME param1 1 [sourcename: expected0]
                NAME param2 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                VAR 1 [sourcename: expected0]
                    NAME a 1 [sourcename: expected0]
                    NAME b 1 [sourcename: expected0]
                EXPR_RESULT 2 [sourcename: expected0]
                    AND 2 [sourcename: expected0]
                        OR 2 [sourcename: expected0] [parenthesized: true]
                            CALL 2 [sourcename: expected0] [free_call: 1]
                                NAME f 2 [sourcename: expected0]
                                ASSIGN 2 [sourcename: expected0]
                                    NAME b 2 [sourcename: expected0]
                                    TRUE 2 [sourcename: expected0]
                            CALL 2 [sourcename: expected0] [free_call: 1]
                                NAME f 2 [sourcename: expected0]
                                ASSIGN 2 [sourcename: expected0]
                                    NAME b 2 [sourcename: expected0]
                                    FALSE 2 [sourcename: expected0]
                        ASSIGN 2 [sourcename: expected0] [parenthesized: true]
                            NAME a 2 [sourcename: expected0]
                            NAME b 2 [sourcename: expected0]
                RETURN 3 [sourcename: expected0]
                    NAME a 3 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        FUNCTION  1 [sourcename: testcode]
            NAME FUNC 1 [sourcename: testcode]
            LP 1 [sourcename: testcode]
                NAME param1 1 [sourcename: testcode]
                NAME param2 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                VAR 1 [sourcename: testcode]
                    NAME a 1 [sourcename: testcode]
                    NAME b 1 [sourcename: testcode]
                EXPR_RESULT 2 [sourcename: testcode]
                    AND 2 [sourcename: testcode]
                        OR 2 [sourcename: testcode] [parenthesized: true]
                            CALL 2 [sourcename: testcode] [free_call: 1]
                                NAME f 2 [sourcename: testcode]
                                TRUE 2 [sourcename: testcode]
                            CALL 2 [sourcename: testcode] [free_call: 1]
                                NAME f 2 [sourcename: testcode]
                                ASSIGN 2 [sourcename: testcode]
                                    NAME b 2 [sourcename: testcode]
                                    FALSE 2 [sourcename: testcode]
                        ASSIGN 2 [sourcename: testcode] [parenthesized: true]
                            NAME a 2 [sourcename: testcode]
                            NAME b 2 [sourcename: testcode]
                RETURN 3 [sourcename: testcode]
                    NAME a 3 [sourcename: testcode]


Subtree1: ASSIGN 2 [sourcename: expected0]
    NAME b 2 [sourcename: expected0]
    TRUE 2 [sourcename: expected0]


Subtree2: TRUE 2 [sourcename: testcode]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:843)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:410)
~ testInExpression2(com.google.javascript.jscomp.DeadAssignmentsEliminationTest)
[
Expected: function FUNC(param1,param2){var a;a=1;if(2||(a=3)||a);}
Result: function FUNC(param1,param2){var a;a=1;if((a=2)||(a=3)||a);}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        FUNCTION  1 [sourcename: expected0]
            NAME FUNC 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
                NAME param1 1 [sourcename: expected0]
                NAME param2 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                VAR 1 [sourcename: expected0]
                    NAME a 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    ASSIGN 1 [sourcename: expected0]
                        NAME a 1 [sourcename: expected0]
                        NUMBER 1.0 1 [sourcename: expected0]
                IF 1 [sourcename: expected0]
                    OR 1 [sourcename: expected0]
                        NUMBER 2.0 1 [sourcename: expected0] [parenthesized: true]
                        OR 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0] [parenthesized: true]
                                NAME a 1 [sourcename: expected0]
                                NUMBER 3.0 1 [sourcename: expected0]
                            NAME a 1 [sourcename: expected0] [parenthesized: true]
                    BLOCK 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        FUNCTION  1 [sourcename: testcode]
            NAME FUNC 1 [sourcename: testcode]
            LP 1 [sourcename: testcode]
                NAME param1 1 [sourcename: testcode]
                NAME param2 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                VAR 1 [sourcename: testcode]
                    NAME a 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    ASSIGN 1 [sourcename: testcode]
                        NAME a 1 [sourcename: testcode]
                        NUMBER 1.0 1 [sourcename: testcode]
                IF 1 [sourcename: testcode]
                    OR 1 [sourcename: testcode]
                        ASSIGN 1 [sourcename: testcode] [parenthesized: true]
                            NAME a 1 [sourcename: testcode]
                            NUMBER 2.0 1 [sourcename: testcode]
                        OR 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode] [parenthesized: true]
                                NAME a 1 [sourcename: testcode]
                                NUMBER 3.0 1 [sourcename: testcode]
                            NAME a 1 [sourcename: testcode] [parenthesized: true]
                    BLOCK 1 [sourcename: testcode]


Subtree1: NUMBER 2.0 1 [sourcename: expected0] [parenthesized: true]


Subtree2: ASSIGN 1 [sourcename: testcode] [parenthesized: true]
    NAME a 1 [sourcename: testcode]
    NUMBER 2.0 1 [sourcename: testcode]
]
junit.framework.AssertionFailedError: 
Expected: function FUNC(param1,param2){var a;a=1;if(2||(a=3)||a);}
Result: function FUNC(param1,param2){var a;a=1;if((a=2)||(a=3)||a);}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        FUNCTION  1 [sourcename: expected0]
            NAME FUNC 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
                NAME param1 1 [sourcename: expected0]
                NAME param2 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                VAR 1 [sourcename: expected0]
                    NAME a 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    ASSIGN 1 [sourcename: expected0]
                        NAME a 1 [sourcename: expected0]
                        NUMBER 1.0 1 [sourcename: expected0]
                IF 1 [sourcename: expected0]
                    OR 1 [sourcename: expected0]
                        NUMBER 2.0 1 [sourcename: expected0] [parenthesized: true]
                        OR 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0] [parenthesized: true]
                                NAME a 1 [sourcename: expected0]
                                NUMBER 3.0 1 [sourcename: expected0]
                            NAME a 1 [sourcename: expected0] [parenthesized: true]
                    BLOCK 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        FUNCTION  1 [sourcename: testcode]
            NAME FUNC 1 [sourcename: testcode]
            LP 1 [sourcename: testcode]
                NAME param1 1 [sourcename: testcode]
                NAME param2 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                VAR 1 [sourcename: testcode]
                    NAME a 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    ASSIGN 1 [sourcename: testcode]
                        NAME a 1 [sourcename: testcode]
                        NUMBER 1.0 1 [sourcename: testcode]
                IF 1 [sourcename: testcode]
                    OR 1 [sourcename: testcode]
                        ASSIGN 1 [sourcename: testcode] [parenthesized: true]
                            NAME a 1 [sourcename: testcode]
                            NUMBER 2.0 1 [sourcename: testcode]
                        OR 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode] [parenthesized: true]
                                NAME a 1 [sourcename: testcode]
                                NUMBER 3.0 1 [sourcename: testcode]
                            NAME a 1 [sourcename: testcode] [parenthesized: true]
                    BLOCK 1 [sourcename: testcode]


Subtree1: NUMBER 2.0 1 [sourcename: expected0] [parenthesized: true]


Subtree2: ASSIGN 1 [sourcename: testcode] [parenthesized: true]
    NAME a 1 [sourcename: testcode]
    NUMBER 2.0 1 [sourcename: testcode]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:843)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:410)
~ testIssue384b(com.google.javascript.jscomp.DeadAssignmentsEliminationTest)
[
Expected: function FUNC(param1,param2){var a,b;f(b=true)||f(b=false)?a=b:a=null;return a}
Result: function FUNC(param1,param2){var a,b;f(true)||f(b=false)?a=b:a=null;return a}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        FUNCTION  1 [sourcename: expected0]
            NAME FUNC 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
                NAME param1 1 [sourcename: expected0]
                NAME param2 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                VAR 1 [sourcename: expected0]
                    NAME a 1 [sourcename: expected0]
                    NAME b 1 [sourcename: expected0]
                EXPR_RESULT 2 [sourcename: expected0]
                    HOOK 2 [sourcename: expected0]
                        OR 2 [sourcename: expected0] [parenthesized: true]
                            CALL 2 [sourcename: expected0] [free_call: 1]
                                NAME f 2 [sourcename: expected0]
                                ASSIGN 2 [sourcename: expected0]
                                    NAME b 2 [sourcename: expected0]
                                    TRUE 2 [sourcename: expected0]
                            CALL 2 [sourcename: expected0] [free_call: 1]
                                NAME f 2 [sourcename: expected0]
                                ASSIGN 2 [sourcename: expected0]
                                    NAME b 2 [sourcename: expected0]
                                    FALSE 2 [sourcename: expected0]
                        ASSIGN 2 [sourcename: expected0] [parenthesized: true]
                            NAME a 2 [sourcename: expected0]
                            NAME b 2 [sourcename: expected0]
                        ASSIGN 2 [sourcename: expected0] [parenthesized: true]
                            NAME a 2 [sourcename: expected0]
                            NULL 2 [sourcename: expected0]
                RETURN 3 [sourcename: expected0]
                    NAME a 3 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        FUNCTION  1 [sourcename: testcode]
            NAME FUNC 1 [sourcename: testcode]
            LP 1 [sourcename: testcode]
                NAME param1 1 [sourcename: testcode]
                NAME param2 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                VAR 1 [sourcename: testcode]
                    NAME a 1 [sourcename: testcode]
                    NAME b 1 [sourcename: testcode]
                EXPR_RESULT 2 [sourcename: testcode]
                    HOOK 2 [sourcename: testcode]
                        OR 2 [sourcename: testcode] [parenthesized: true]
                            CALL 2 [sourcename: testcode] [free_call: 1]
                                NAME f 2 [sourcename: testcode]
                                TRUE 2 [sourcename: testcode]
                            CALL 2 [sourcename: testcode] [free_call: 1]
                                NAME f 2 [sourcename: testcode]
                                ASSIGN 2 [sourcename: testcode]
                                    NAME b 2 [sourcename: testcode]
                                    FALSE 2 [sourcename: testcode]
                        ASSIGN 2 [sourcename: testcode] [parenthesized: true]
                            NAME a 2 [sourcename: testcode]
                            NAME b 2 [sourcename: testcode]
                        ASSIGN 2 [sourcename: testcode] [parenthesized: true]
                            NAME a 2 [sourcename: testcode]
                            NULL 2 [sourcename: testcode]
                RETURN 3 [sourcename: testcode]
                    NAME a 3 [sourcename: testcode]


Subtree1: ASSIGN 2 [sourcename: expected0]
    NAME b 2 [sourcename: expected0]
    TRUE 2 [sourcename: expected0]


Subtree2: TRUE 2 [sourcename: testcode]
]
junit.framework.AssertionFailedError: 
Expected: function FUNC(param1,param2){var a,b;f(b=true)||f(b=false)?a=b:a=null;return a}
Result: function FUNC(param1,param2){var a,b;f(true)||f(b=false)?a=b:a=null;return a}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        FUNCTION  1 [sourcename: expected0]
            NAME FUNC 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
                NAME param1 1 [sourcename: expected0]
                NAME param2 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                VAR 1 [sourcename: expected0]
                    NAME a 1 [sourcename: expected0]
                    NAME b 1 [sourcename: expected0]
                EXPR_RESULT 2 [sourcename: expected0]
                    HOOK 2 [sourcename: expected0]
                        OR 2 [sourcename: expected0] [parenthesized: true]
                            CALL 2 [sourcename: expected0] [free_call: 1]
                                NAME f 2 [sourcename: expected0]
                                ASSIGN 2 [sourcename: expected0]
                                    NAME b 2 [sourcename: expected0]
                                    TRUE 2 [sourcename: expected0]
                            CALL 2 [sourcename: expected0] [free_call: 1]
                                NAME f 2 [sourcename: expected0]
                                ASSIGN 2 [sourcename: expected0]
                                    NAME b 2 [sourcename: expected0]
                                    FALSE 2 [sourcename: expected0]
                        ASSIGN 2 [sourcename: expected0] [parenthesized: true]
                            NAME a 2 [sourcename: expected0]
                            NAME b 2 [sourcename: expected0]
                        ASSIGN 2 [sourcename: expected0] [parenthesized: true]
                            NAME a 2 [sourcename: expected0]
                            NULL 2 [sourcename: expected0]
                RETURN 3 [sourcename: expected0]
                    NAME a 3 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        FUNCTION  1 [sourcename: testcode]
            NAME FUNC 1 [sourcename: testcode]
            LP 1 [sourcename: testcode]
                NAME param1 1 [sourcename: testcode]
                NAME param2 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                VAR 1 [sourcename: testcode]
                    NAME a 1 [sourcename: testcode]
                    NAME b 1 [sourcename: testcode]
                EXPR_RESULT 2 [sourcename: testcode]
                    HOOK 2 [sourcename: testcode]
                        OR 2 [sourcename: testcode] [parenthesized: true]
                            CALL 2 [sourcename: testcode] [free_call: 1]
                                NAME f 2 [sourcename: testcode]
                                TRUE 2 [sourcename: testcode]
                            CALL 2 [sourcename: testcode] [free_call: 1]
                                NAME f 2 [sourcename: testcode]
                                ASSIGN 2 [sourcename: testcode]
                                    NAME b 2 [sourcename: testcode]
                                    FALSE 2 [sourcename: testcode]
                        ASSIGN 2 [sourcename: testcode] [parenthesized: true]
                            NAME a 2 [sourcename: testcode]
                            NAME b 2 [sourcename: testcode]
                        ASSIGN 2 [sourcename: testcode] [parenthesized: true]
                            NAME a 2 [sourcename: testcode]
                            NULL 2 [sourcename: testcode]
                RETURN 3 [sourcename: testcode]
                    NAME a 3 [sourcename: testcode]


Subtree1: ASSIGN 2 [sourcename: expected0]
    NAME b 2 [sourcename: expected0]
    TRUE 2 [sourcename: expected0]


Subtree2: TRUE 2 [sourcename: testcode]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:843)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:410)
~ testIssue384c(com.google.javascript.jscomp.DeadAssignmentsEliminationTest)
[
Expected: function FUNC(param1,param2){var a,b;(a?f(b=true):f(b=false))&&(a=b);return a}
Result: function FUNC(param1,param2){var a,b;(a?f(true):f(b=false))&&(a=b);return a}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        FUNCTION  1 [sourcename: expected0]
            NAME FUNC 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
                NAME param1 1 [sourcename: expected0]
                NAME param2 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                VAR 1 [sourcename: expected0]
                    NAME a 1 [sourcename: expected0]
                    NAME b 1 [sourcename: expected0]
                EXPR_RESULT 2 [sourcename: expected0]
                    AND 2 [sourcename: expected0]
                        HOOK 2 [sourcename: expected0] [parenthesized: true]
                            NAME a 2 [sourcename: expected0]
                            CALL 2 [sourcename: expected0] [free_call: 1]
                                NAME f 2 [sourcename: expected0]
                                ASSIGN 2 [sourcename: expected0]
                                    NAME b 2 [sourcename: expected0]
                                    TRUE 2 [sourcename: expected0]
                            CALL 2 [sourcename: expected0] [free_call: 1]
                                NAME f 2 [sourcename: expected0]
                                ASSIGN 2 [sourcename: expected0]
                                    NAME b 2 [sourcename: expected0]
                                    FALSE 2 [sourcename: expected0]
                        ASSIGN 2 [sourcename: expected0] [parenthesized: true]
                            NAME a 2 [sourcename: expected0]
                            NAME b 2 [sourcename: expected0]
                RETURN 3 [sourcename: expected0]
                    NAME a 3 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        FUNCTION  1 [sourcename: testcode]
            NAME FUNC 1 [sourcename: testcode]
            LP 1 [sourcename: testcode]
                NAME param1 1 [sourcename: testcode]
                NAME param2 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                VAR 1 [sourcename: testcode]
                    NAME a 1 [sourcename: testcode]
                    NAME b 1 [sourcename: testcode]
                EXPR_RESULT 2 [sourcename: testcode]
                    AND 2 [sourcename: testcode]
                        HOOK 2 [sourcename: testcode] [parenthesized: true]
                            NAME a 2 [sourcename: testcode]
                            CALL 2 [sourcename: testcode] [free_call: 1]
                                NAME f 2 [sourcename: testcode]
                                TRUE 2 [sourcename: testcode]
                            CALL 2 [sourcename: testcode] [free_call: 1]
                                NAME f 2 [sourcename: testcode]
                                ASSIGN 2 [sourcename: testcode]
                                    NAME b 2 [sourcename: testcode]
                                    FALSE 2 [sourcename: testcode]
                        ASSIGN 2 [sourcename: testcode] [parenthesized: true]
                            NAME a 2 [sourcename: testcode]
                            NAME b 2 [sourcename: testcode]
                RETURN 3 [sourcename: testcode]
                    NAME a 3 [sourcename: testcode]


Subtree1: ASSIGN 2 [sourcename: expected0]
    NAME b 2 [sourcename: expected0]
    TRUE 2 [sourcename: expected0]


Subtree2: TRUE 2 [sourcename: testcode]
]
junit.framework.AssertionFailedError: 
Expected: function FUNC(param1,param2){var a,b;(a?f(b=true):f(b=false))&&(a=b);return a}
Result: function FUNC(param1,param2){var a,b;(a?f(true):f(b=false))&&(a=b);return a}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        FUNCTION  1 [sourcename: expected0]
            NAME FUNC 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
                NAME param1 1 [sourcename: expected0]
                NAME param2 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                VAR 1 [sourcename: expected0]
                    NAME a 1 [sourcename: expected0]
                    NAME b 1 [sourcename: expected0]
                EXPR_RESULT 2 [sourcename: expected0]
                    AND 2 [sourcename: expected0]
                        HOOK 2 [sourcename: expected0] [parenthesized: true]
                            NAME a 2 [sourcename: expected0]
                            CALL 2 [sourcename: expected0] [free_call: 1]
                                NAME f 2 [sourcename: expected0]
                                ASSIGN 2 [sourcename: expected0]
                                    NAME b 2 [sourcename: expected0]
                                    TRUE 2 [sourcename: expected0]
                            CALL 2 [sourcename: expected0] [free_call: 1]
                                NAME f 2 [sourcename: expected0]
                                ASSIGN 2 [sourcename: expected0]
                                    NAME b 2 [sourcename: expected0]
                                    FALSE 2 [sourcename: expected0]
                        ASSIGN 2 [sourcename: expected0] [parenthesized: true]
                            NAME a 2 [sourcename: expected0]
                            NAME b 2 [sourcename: expected0]
                RETURN 3 [sourcename: expected0]
                    NAME a 3 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        FUNCTION  1 [sourcename: testcode]
            NAME FUNC 1 [sourcename: testcode]
            LP 1 [sourcename: testcode]
                NAME param1 1 [sourcename: testcode]
                NAME param2 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                VAR 1 [sourcename: testcode]
                    NAME a 1 [sourcename: testcode]
                    NAME b 1 [sourcename: testcode]
                EXPR_RESULT 2 [sourcename: testcode]
                    AND 2 [sourcename: testcode]
                        HOOK 2 [sourcename: testcode] [parenthesized: true]
                            NAME a 2 [sourcename: testcode]
                            CALL 2 [sourcename: testcode] [free_call: 1]
                                NAME f 2 [sourcename: testcode]
                                TRUE 2 [sourcename: testcode]
                            CALL 2 [sourcename: testcode] [free_call: 1]
                                NAME f 2 [sourcename: testcode]
                                ASSIGN 2 [sourcename: testcode]
                                    NAME b 2 [sourcename: testcode]
                                    FALSE 2 [sourcename: testcode]
                        ASSIGN 2 [sourcename: testcode] [parenthesized: true]
                            NAME a 2 [sourcename: testcode]
                            NAME b 2 [sourcename: testcode]
                RETURN 3 [sourcename: testcode]
                    NAME a 3 [sourcename: testcode]


Subtree1: ASSIGN 2 [sourcename: expected0]
    NAME b 2 [sourcename: expected0]
    TRUE 2 [sourcename: expected0]


Subtree2: TRUE 2 [sourcename: testcode]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:843)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:410)
~ testIssue384d(com.google.javascript.jscomp.DeadAssignmentsEliminationTest)
[
Expected: function FUNC(param1,param2){var a,b;(f(b=true)||f(b=false))&&(a=b);return a}
Result: function FUNC(param1,param2){var a,b;(f(true)||f(b=false))&&(a=b);return a}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        FUNCTION  1 [sourcename: expected0]
            NAME FUNC 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
                NAME param1 1 [sourcename: expected0]
                NAME param2 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                VAR 1 [sourcename: expected0]
                    NAME a 1 [sourcename: expected0]
                    NAME b 1 [sourcename: expected0]
                EXPR_RESULT 2 [sourcename: expected0]
                    AND 2 [sourcename: expected0]
                        OR 2 [sourcename: expected0] [parenthesized: true]
                            CALL 2 [sourcename: expected0] [free_call: 1]
                                NAME f 2 [sourcename: expected0]
                                ASSIGN 2 [sourcename: expected0]
                                    NAME b 2 [sourcename: expected0]
                                    TRUE 2 [sourcename: expected0]
                            CALL 2 [sourcename: expected0] [free_call: 1]
                                NAME f 2 [sourcename: expected0]
                                ASSIGN 2 [sourcename: expected0]
                                    NAME b 2 [sourcename: expected0]
                                    FALSE 2 [sourcename: expected0]
                        ASSIGN 2 [sourcename: expected0] [parenthesized: true]
                            NAME a 2 [sourcename: expected0]
                            NAME b 2 [sourcename: expected0]
                RETURN 3 [sourcename: expected0]
                    NAME a 3 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        FUNCTION  1 [sourcename: testcode]
            NAME FUNC 1 [sourcename: testcode]
            LP 1 [sourcename: testcode]
                NAME param1 1 [sourcename: testcode]
                NAME param2 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                VAR 1 [sourcename: testcode]
                    NAME a 1 [sourcename: testcode]
                    NAME b 1 [sourcename: testcode]
                EXPR_RESULT 2 [sourcename: testcode]
                    AND 2 [sourcename: testcode]
                        OR 2 [sourcename: testcode] [parenthesized: true]
                            CALL 2 [sourcename: testcode] [free_call: 1]
                                NAME f 2 [sourcename: testcode]
                                TRUE 2 [sourcename: testcode]
                            CALL 2 [sourcename: testcode] [free_call: 1]
                                NAME f 2 [sourcename: testcode]
                                ASSIGN 2 [sourcename: testcode]
                                    NAME b 2 [sourcename: testcode]
                                    FALSE 2 [sourcename: testcode]
                        ASSIGN 2 [sourcename: testcode] [parenthesized: true]
                            NAME a 2 [sourcename: testcode]
                            NAME b 2 [sourcename: testcode]
                RETURN 3 [sourcename: testcode]
                    NAME a 3 [sourcename: testcode]


Subtree1: ASSIGN 2 [sourcename: expected0]
    NAME b 2 [sourcename: expected0]
    TRUE 2 [sourcename: expected0]


Subtree2: TRUE 2 [sourcename: testcode]
]
junit.framework.AssertionFailedError: 
Expected: function FUNC(param1,param2){var a,b;(f(b=true)||f(b=false))&&(a=b);return a}
Result: function FUNC(param1,param2){var a,b;(f(true)||f(b=false))&&(a=b);return a}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        FUNCTION  1 [sourcename: expected0]
            NAME FUNC 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
                NAME param1 1 [sourcename: expected0]
                NAME param2 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                VAR 1 [sourcename: expected0]
                    NAME a 1 [sourcename: expected0]
                    NAME b 1 [sourcename: expected0]
                EXPR_RESULT 2 [sourcename: expected0]
                    AND 2 [sourcename: expected0]
                        OR 2 [sourcename: expected0] [parenthesized: true]
                            CALL 2 [sourcename: expected0] [free_call: 1]
                                NAME f 2 [sourcename: expected0]
                                ASSIGN 2 [sourcename: expected0]
                                    NAME b 2 [sourcename: expected0]
                                    TRUE 2 [sourcename: expected0]
                            CALL 2 [sourcename: expected0] [free_call: 1]
                                NAME f 2 [sourcename: expected0]
                                ASSIGN 2 [sourcename: expected0]
                                    NAME b 2 [sourcename: expected0]
                                    FALSE 2 [sourcename: expected0]
                        ASSIGN 2 [sourcename: expected0] [parenthesized: true]
                            NAME a 2 [sourcename: expected0]
                            NAME b 2 [sourcename: expected0]
                RETURN 3 [sourcename: expected0]
                    NAME a 3 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        FUNCTION  1 [sourcename: testcode]
            NAME FUNC 1 [sourcename: testcode]
            LP 1 [sourcename: testcode]
                NAME param1 1 [sourcename: testcode]
                NAME param2 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                VAR 1 [sourcename: testcode]
                    NAME a 1 [sourcename: testcode]
                    NAME b 1 [sourcename: testcode]
                EXPR_RESULT 2 [sourcename: testcode]
                    AND 2 [sourcename: testcode]
                        OR 2 [sourcename: testcode] [parenthesized: true]
                            CALL 2 [sourcename: testcode] [free_call: 1]
                                NAME f 2 [sourcename: testcode]
                                TRUE 2 [sourcename: testcode]
                            CALL 2 [sourcename: testcode] [free_call: 1]
                                NAME f 2 [sourcename: testcode]
                                ASSIGN 2 [sourcename: testcode]
                                    NAME b 2 [sourcename: testcode]
                                    FALSE 2 [sourcename: testcode]
                        ASSIGN 2 [sourcename: testcode] [parenthesized: true]
                            NAME a 2 [sourcename: testcode]
                            NAME b 2 [sourcename: testcode]
                RETURN 3 [sourcename: testcode]
                    NAME a 3 [sourcename: testcode]


Subtree1: ASSIGN 2 [sourcename: expected0]
    NAME b 2 [sourcename: expected0]
    TRUE 2 [sourcename: expected0]


Subtree2: TRUE 2 [sourcename: testcode]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:843)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:410)
~ testInExpression2(com.google.javascript.jscomp.DeadAssignmentsEliminationTest)
[
Expected: function FUNC(param1,param2){var a;a=1;if(2||(a=3)||a);}
Result: function FUNC(param1,param2){var a;a=1;if((a=2)||(a=3)||a);}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        FUNCTION  1 [sourcename: expected0]
            NAME FUNC 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
                NAME param1 1 [sourcename: expected0]
                NAME param2 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                VAR 1 [sourcename: expected0]
                    NAME a 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    ASSIGN 1 [sourcename: expected0]
                        NAME a 1 [sourcename: expected0]
                        NUMBER 1.0 1 [sourcename: expected0]
                IF 1 [sourcename: expected0]
                    OR 1 [sourcename: expected0]
                        NUMBER 2.0 1 [sourcename: expected0] [parenthesized: true]
                        OR 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0] [parenthesized: true]
                                NAME a 1 [sourcename: expected0]
                                NUMBER 3.0 1 [sourcename: expected0]
                            NAME a 1 [sourcename: expected0] [parenthesized: true]
                    BLOCK 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        FUNCTION  1 [sourcename: testcode]
            NAME FUNC 1 [sourcename: testcode]
            LP 1 [sourcename: testcode]
                NAME param1 1 [sourcename: testcode]
                NAME param2 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                VAR 1 [sourcename: testcode]
                    NAME a 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    ASSIGN 1 [sourcename: testcode]
                        NAME a 1 [sourcename: testcode]
                        NUMBER 1.0 1 [sourcename: testcode]
                IF 1 [sourcename: testcode]
                    OR 1 [sourcename: testcode]
                        ASSIGN 1 [sourcename: testcode] [parenthesized: true]
                            NAME a 1 [sourcename: testcode]
                            NUMBER 2.0 1 [sourcename: testcode]
                        OR 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode] [parenthesized: true]
                                NAME a 1 [sourcename: testcode]
                                NUMBER 3.0 1 [sourcename: testcode]
                            NAME a 1 [sourcename: testcode] [parenthesized: true]
                    BLOCK 1 [sourcename: testcode]


Subtree1: NUMBER 2.0 1 [sourcename: expected0] [parenthesized: true]


Subtree2: ASSIGN 1 [sourcename: testcode] [parenthesized: true]
    NAME a 1 [sourcename: testcode]
    NUMBER 2.0 1 [sourcename: testcode]
]
junit.framework.AssertionFailedError: 
Expected: function FUNC(param1,param2){var a;a=1;if(2||(a=3)||a);}
Result: function FUNC(param1,param2){var a;a=1;if((a=2)||(a=3)||a);}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        FUNCTION  1 [sourcename: expected0]
            NAME FUNC 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
                NAME param1 1 [sourcename: expected0]
                NAME param2 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                VAR 1 [sourcename: expected0]
                    NAME a 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    ASSIGN 1 [sourcename: expected0]
                        NAME a 1 [sourcename: expected0]
                        NUMBER 1.0 1 [sourcename: expected0]
                IF 1 [sourcename: expected0]
                    OR 1 [sourcename: expected0]
                        NUMBER 2.0 1 [sourcename: expected0] [parenthesized: true]
                        OR 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0] [parenthesized: true]
                                NAME a 1 [sourcename: expected0]
                                NUMBER 3.0 1 [sourcename: expected0]
                            NAME a 1 [sourcename: expected0] [parenthesized: true]
                    BLOCK 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        FUNCTION  1 [sourcename: testcode]
            NAME FUNC 1 [sourcename: testcode]
            LP 1 [sourcename: testcode]
                NAME param1 1 [sourcename: testcode]
                NAME param2 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                VAR 1 [sourcename: testcode]
                    NAME a 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    ASSIGN 1 [sourcename: testcode]
                        NAME a 1 [sourcename: testcode]
                        NUMBER 1.0 1 [sourcename: testcode]
                IF 1 [sourcename: testcode]
                    OR 1 [sourcename: testcode]
                        ASSIGN 1 [sourcename: testcode] [parenthesized: true]
                            NAME a 1 [sourcename: testcode]
                            NUMBER 2.0 1 [sourcename: testcode]
                        OR 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode] [parenthesized: true]
                                NAME a 1 [sourcename: testcode]
                                NUMBER 3.0 1 [sourcename: testcode]
                            NAME a 1 [sourcename: testcode] [parenthesized: true]
                    BLOCK 1 [sourcename: testcode]


Subtree1: NUMBER 2.0 1 [sourcename: expected0] [parenthesized: true]


Subtree2: ASSIGN 1 [sourcename: testcode] [parenthesized: true]
    NAME a 1 [sourcename: testcode]
    NUMBER 2.0 1 [sourcename: testcode]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:843)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:410)
~ testIssue384b(com.google.javascript.jscomp.DeadAssignmentsEliminationTest)
[
Expected: function FUNC(param1,param2){var a,b;f(b=true)||f(b=false)?a=b:a=null;return a}
Result: function FUNC(param1,param2){var a,b;f(true)||f(b=false)?a=b:a=null;return a}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        FUNCTION  1 [sourcename: expected0]
            NAME FUNC 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
                NAME param1 1 [sourcename: expected0]
                NAME param2 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                VAR 1 [sourcename: expected0]
                    NAME a 1 [sourcename: expected0]
                    NAME b 1 [sourcename: expected0]
                EXPR_RESULT 2 [sourcename: expected0]
                    HOOK 2 [sourcename: expected0]
                        OR 2 [sourcename: expected0] [parenthesized: true]
                            CALL 2 [sourcename: expected0] [free_call: 1]
                                NAME f 2 [sourcename: expected0]
                                ASSIGN 2 [sourcename: expected0]
                                    NAME b 2 [sourcename: expected0]
                                    TRUE 2 [sourcename: expected0]
                            CALL 2 [sourcename: expected0] [free_call: 1]
                                NAME f 2 [sourcename: expected0]
                                ASSIGN 2 [sourcename: expected0]
                                    NAME b 2 [sourcename: expected0]
                                    FALSE 2 [sourcename: expected0]
                        ASSIGN 2 [sourcename: expected0] [parenthesized: true]
                            NAME a 2 [sourcename: expected0]
                            NAME b 2 [sourcename: expected0]
                        ASSIGN 2 [sourcename: expected0] [parenthesized: true]
                            NAME a 2 [sourcename: expected0]
                            NULL 2 [sourcename: expected0]
                RETURN 3 [sourcename: expected0]
                    NAME a 3 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        FUNCTION  1 [sourcename: testcode]
            NAME FUNC 1 [sourcename: testcode]
            LP 1 [sourcename: testcode]
                NAME param1 1 [sourcename: testcode]
                NAME param2 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                VAR 1 [sourcename: testcode]
                    NAME a 1 [sourcename: testcode]
                    NAME b 1 [sourcename: testcode]
                EXPR_RESULT 2 [sourcename: testcode]
                    HOOK 2 [sourcename: testcode]
                        OR 2 [sourcename: testcode] [parenthesized: true]
                            CALL 2 [sourcename: testcode] [free_call: 1]
                                NAME f 2 [sourcename: testcode]
                                TRUE 2 [sourcename: testcode]
                            CALL 2 [sourcename: testcode] [free_call: 1]
                                NAME f 2 [sourcename: testcode]
                                ASSIGN 2 [sourcename: testcode]
                                    NAME b 2 [sourcename: testcode]
                                    FALSE 2 [sourcename: testcode]
                        ASSIGN 2 [sourcename: testcode] [parenthesized: true]
                            NAME a 2 [sourcename: testcode]
                            NAME b 2 [sourcename: testcode]
                        ASSIGN 2 [sourcename: testcode] [parenthesized: true]
                            NAME a 2 [sourcename: testcode]
                            NULL 2 [sourcename: testcode]
                RETURN 3 [sourcename: testcode]
                    NAME a 3 [sourcename: testcode]


Subtree1: ASSIGN 2 [sourcename: expected0]
    NAME b 2 [sourcename: expected0]
    TRUE 2 [sourcename: expected0]


Subtree2: TRUE 2 [sourcename: testcode]
]
junit.framework.AssertionFailedError: 
Expected: function FUNC(param1,param2){var a,b;f(b=true)||f(b=false)?a=b:a=null;return a}
Result: function FUNC(param1,param2){var a,b;f(true)||f(b=false)?a=b:a=null;return a}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        FUNCTION  1 [sourcename: expected0]
            NAME FUNC 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
                NAME param1 1 [sourcename: expected0]
                NAME param2 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                VAR 1 [sourcename: expected0]
                    NAME a 1 [sourcename: expected0]
                    NAME b 1 [sourcename: expected0]
                EXPR_RESULT 2 [sourcename: expected0]
                    HOOK 2 [sourcename: expected0]
                        OR 2 [sourcename: expected0] [parenthesized: true]
                            CALL 2 [sourcename: expected0] [free_call: 1]
                                NAME f 2 [sourcename: expected0]
                                ASSIGN 2 [sourcename: expected0]
                                    NAME b 2 [sourcename: expected0]
                                    TRUE 2 [sourcename: expected0]
                            CALL 2 [sourcename: expected0] [free_call: 1]
                                NAME f 2 [sourcename: expected0]
                                ASSIGN 2 [sourcename: expected0]
                                    NAME b 2 [sourcename: expected0]
                                    FALSE 2 [sourcename: expected0]
                        ASSIGN 2 [sourcename: expected0] [parenthesized: true]
                            NAME a 2 [sourcename: expected0]
                            NAME b 2 [sourcename: expected0]
                        ASSIGN 2 [sourcename: expected0] [parenthesized: true]
                            NAME a 2 [sourcename: expected0]
                            NULL 2 [sourcename: expected0]
                RETURN 3 [sourcename: expected0]
                    NAME a 3 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        FUNCTION  1 [sourcename: testcode]
            NAME FUNC 1 [sourcename: testcode]
            LP 1 [sourcename: testcode]
                NAME param1 1 [sourcename: testcode]
                NAME param2 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                VAR 1 [sourcename: testcode]
                    NAME a 1 [sourcename: testcode]
                    NAME b 1 [sourcename: testcode]
                EXPR_RESULT 2 [sourcename: testcode]
                    HOOK 2 [sourcename: testcode]
                        OR 2 [sourcename: testcode] [parenthesized: true]
                            CALL 2 [sourcename: testcode] [free_call: 1]
                                NAME f 2 [sourcename: testcode]
                                TRUE 2 [sourcename: testcode]
                            CALL 2 [sourcename: testcode] [free_call: 1]
                                NAME f 2 [sourcename: testcode]
                                ASSIGN 2 [sourcename: testcode]
                                    NAME b 2 [sourcename: testcode]
                                    FALSE 2 [sourcename: testcode]
                        ASSIGN 2 [sourcename: testcode] [parenthesized: true]
                            NAME a 2 [sourcename: testcode]
                            NAME b 2 [sourcename: testcode]
                        ASSIGN 2 [sourcename: testcode] [parenthesized: true]
                            NAME a 2 [sourcename: testcode]
                            NULL 2 [sourcename: testcode]
                RETURN 3 [sourcename: testcode]
                    NAME a 3 [sourcename: testcode]


Subtree1: ASSIGN 2 [sourcename: expected0]
    NAME b 2 [sourcename: expected0]
    TRUE 2 [sourcename: expected0]


Subtree2: TRUE 2 [sourcename: testcode]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:843)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:410)
~ testIssue384c(com.google.javascript.jscomp.DeadAssignmentsEliminationTest)
[
Expected: function FUNC(param1,param2){var a,b;(a?f(b=true):f(b=false))&&(a=b);return a}
Result: function FUNC(param1,param2){var a,b;(a?f(true):f(b=false))&&(a=b);return a}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        FUNCTION  1 [sourcename: expected0]
            NAME FUNC 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
                NAME param1 1 [sourcename: expected0]
                NAME param2 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                VAR 1 [sourcename: expected0]
                    NAME a 1 [sourcename: expected0]
                    NAME b 1 [sourcename: expected0]
                EXPR_RESULT 2 [sourcename: expected0]
                    AND 2 [sourcename: expected0]
                        HOOK 2 [sourcename: expected0] [parenthesized: true]
                            NAME a 2 [sourcename: expected0]
                            CALL 2 [sourcename: expected0] [free_call: 1]
                                NAME f 2 [sourcename: expected0]
                                ASSIGN 2 [sourcename: expected0]
                                    NAME b 2 [sourcename: expected0]
                                    TRUE 2 [sourcename: expected0]
                            CALL 2 [sourcename: expected0] [free_call: 1]
                                NAME f 2 [sourcename: expected0]
                                ASSIGN 2 [sourcename: expected0]
                                    NAME b 2 [sourcename: expected0]
                                    FALSE 2 [sourcename: expected0]
                        ASSIGN 2 [sourcename: expected0] [parenthesized: true]
                            NAME a 2 [sourcename: expected0]
                            NAME b 2 [sourcename: expected0]
                RETURN 3 [sourcename: expected0]
                    NAME a 3 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        FUNCTION  1 [sourcename: testcode]
            NAME FUNC 1 [sourcename: testcode]
            LP 1 [sourcename: testcode]
                NAME param1 1 [sourcename: testcode]
                NAME param2 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                VAR 1 [sourcename: testcode]
                    NAME a 1 [sourcename: testcode]
                    NAME b 1 [sourcename: testcode]
                EXPR_RESULT 2 [sourcename: testcode]
                    AND 2 [sourcename: testcode]
                        HOOK 2 [sourcename: testcode] [parenthesized: true]
                            NAME a 2 [sourcename: testcode]
                            CALL 2 [sourcename: testcode] [free_call: 1]
                                NAME f 2 [sourcename: testcode]
                                TRUE 2 [sourcename: testcode]
                            CALL 2 [sourcename: testcode] [free_call: 1]
                                NAME f 2 [sourcename: testcode]
                                ASSIGN 2 [sourcename: testcode]
                                    NAME b 2 [sourcename: testcode]
                                    FALSE 2 [sourcename: testcode]
                        ASSIGN 2 [sourcename: testcode] [parenthesized: true]
                            NAME a 2 [sourcename: testcode]
                            NAME b 2 [sourcename: testcode]
                RETURN 3 [sourcename: testcode]
                    NAME a 3 [sourcename: testcode]


Subtree1: ASSIGN 2 [sourcename: expected0]
    NAME b 2 [sourcename: expected0]
    TRUE 2 [sourcename: expected0]


Subtree2: TRUE 2 [sourcename: testcode]
]
junit.framework.AssertionFailedError: 
Expected: function FUNC(param1,param2){var a,b;(a?f(b=true):f(b=false))&&(a=b);return a}
Result: function FUNC(param1,param2){var a,b;(a?f(true):f(b=false))&&(a=b);return a}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        FUNCTION  1 [sourcename: expected0]
            NAME FUNC 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
                NAME param1 1 [sourcename: expected0]
                NAME param2 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                VAR 1 [sourcename: expected0]
                    NAME a 1 [sourcename: expected0]
                    NAME b 1 [sourcename: expected0]
                EXPR_RESULT 2 [sourcename: expected0]
                    AND 2 [sourcename: expected0]
                        HOOK 2 [sourcename: expected0] [parenthesized: true]
                            NAME a 2 [sourcename: expected0]
                            CALL 2 [sourcename: expected0] [free_call: 1]
                                NAME f 2 [sourcename: expected0]
                                ASSIGN 2 [sourcename: expected0]
                                    NAME b 2 [sourcename: expected0]
                                    TRUE 2 [sourcename: expected0]
                            CALL 2 [sourcename: expected0] [free_call: 1]
                                NAME f 2 [sourcename: expected0]
                                ASSIGN 2 [sourcename: expected0]
                                    NAME b 2 [sourcename: expected0]
                                    FALSE 2 [sourcename: expected0]
                        ASSIGN 2 [sourcename: expected0] [parenthesized: true]
                            NAME a 2 [sourcename: expected0]
                            NAME b 2 [sourcename: expected0]
                RETURN 3 [sourcename: expected0]
                    NAME a 3 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        FUNCTION  1 [sourcename: testcode]
            NAME FUNC 1 [sourcename: testcode]
            LP 1 [sourcename: testcode]
                NAME param1 1 [sourcename: testcode]
                NAME param2 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                VAR 1 [sourcename: testcode]
                    NAME a 1 [sourcename: testcode]
                    NAME b 1 [sourcename: testcode]
                EXPR_RESULT 2 [sourcename: testcode]
                    AND 2 [sourcename: testcode]
                        HOOK 2 [sourcename: testcode] [parenthesized: true]
                            NAME a 2 [sourcename: testcode]
                            CALL 2 [sourcename: testcode] [free_call: 1]
                                NAME f 2 [sourcename: testcode]
                                TRUE 2 [sourcename: testcode]
                            CALL 2 [sourcename: testcode] [free_call: 1]
                                NAME f 2 [sourcename: testcode]
                                ASSIGN 2 [sourcename: testcode]
                                    NAME b 2 [sourcename: testcode]
                                    FALSE 2 [sourcename: testcode]
                        ASSIGN 2 [sourcename: testcode] [parenthesized: true]
                            NAME a 2 [sourcename: testcode]
                            NAME b 2 [sourcename: testcode]
                RETURN 3 [sourcename: testcode]
                    NAME a 3 [sourcename: testcode]


Subtree1: ASSIGN 2 [sourcename: expected0]
    NAME b 2 [sourcename: expected0]
    TRUE 2 [sourcename: expected0]


Subtree2: TRUE 2 [sourcename: testcode]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:843)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:410)
~ testIssue384d(com.google.javascript.jscomp.DeadAssignmentsEliminationTest)
[
Expected: function FUNC(param1,param2){var a,b;(f(b=true)||f(b=false))&&(a=b);return a}
Result: function FUNC(param1,param2){var a,b;(f(true)||f(b=false))&&(a=b);return a}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        FUNCTION  1 [sourcename: expected0]
            NAME FUNC 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
                NAME param1 1 [sourcename: expected0]
                NAME param2 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                VAR 1 [sourcename: expected0]
                    NAME a 1 [sourcename: expected0]
                    NAME b 1 [sourcename: expected0]
                EXPR_RESULT 2 [sourcename: expected0]
                    AND 2 [sourcename: expected0]
                        OR 2 [sourcename: expected0] [parenthesized: true]
                            CALL 2 [sourcename: expected0] [free_call: 1]
                                NAME f 2 [sourcename: expected0]
                                ASSIGN 2 [sourcename: expected0]
                                    NAME b 2 [sourcename: expected0]
                                    TRUE 2 [sourcename: expected0]
                            CALL 2 [sourcename: expected0] [free_call: 1]
                                NAME f 2 [sourcename: expected0]
                                ASSIGN 2 [sourcename: expected0]
                                    NAME b 2 [sourcename: expected0]
                                    FALSE 2 [sourcename: expected0]
                        ASSIGN 2 [sourcename: expected0] [parenthesized: true]
                            NAME a 2 [sourcename: expected0]
                            NAME b 2 [sourcename: expected0]
                RETURN 3 [sourcename: expected0]
                    NAME a 3 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        FUNCTION  1 [sourcename: testcode]
            NAME FUNC 1 [sourcename: testcode]
            LP 1 [sourcename: testcode]
                NAME param1 1 [sourcename: testcode]
                NAME param2 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                VAR 1 [sourcename: testcode]
                    NAME a 1 [sourcename: testcode]
                    NAME b 1 [sourcename: testcode]
                EXPR_RESULT 2 [sourcename: testcode]
                    AND 2 [sourcename: testcode]
                        OR 2 [sourcename: testcode] [parenthesized: true]
                            CALL 2 [sourcename: testcode] [free_call: 1]
                                NAME f 2 [sourcename: testcode]
                                TRUE 2 [sourcename: testcode]
                            CALL 2 [sourcename: testcode] [free_call: 1]
                                NAME f 2 [sourcename: testcode]
                                ASSIGN 2 [sourcename: testcode]
                                    NAME b 2 [sourcename: testcode]
                                    FALSE 2 [sourcename: testcode]
                        ASSIGN 2 [sourcename: testcode] [parenthesized: true]
                            NAME a 2 [sourcename: testcode]
                            NAME b 2 [sourcename: testcode]
                RETURN 3 [sourcename: testcode]
                    NAME a 3 [sourcename: testcode]


Subtree1: ASSIGN 2 [sourcename: expected0]
    NAME b 2 [sourcename: expected0]
    TRUE 2 [sourcename: expected0]


Subtree2: TRUE 2 [sourcename: testcode]
]
junit.framework.AssertionFailedError: 
Expected: function FUNC(param1,param2){var a,b;(f(b=true)||f(b=false))&&(a=b);return a}
Result: function FUNC(param1,param2){var a,b;(f(true)||f(b=false))&&(a=b);return a}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        FUNCTION  1 [sourcename: expected0]
            NAME FUNC 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
                NAME param1 1 [sourcename: expected0]
                NAME param2 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                VAR 1 [sourcename: expected0]
                    NAME a 1 [sourcename: expected0]
                    NAME b 1 [sourcename: expected0]
                EXPR_RESULT 2 [sourcename: expected0]
                    AND 2 [sourcename: expected0]
                        OR 2 [sourcename: expected0] [parenthesized: true]
                            CALL 2 [sourcename: expected0] [free_call: 1]
                                NAME f 2 [sourcename: expected0]
                                ASSIGN 2 [sourcename: expected0]
                                    NAME b 2 [sourcename: expected0]
                                    TRUE 2 [sourcename: expected0]
                            CALL 2 [sourcename: expected0] [free_call: 1]
                                NAME f 2 [sourcename: expected0]
                                ASSIGN 2 [sourcename: expected0]
                                    NAME b 2 [sourcename: expected0]
                                    FALSE 2 [sourcename: expected0]
                        ASSIGN 2 [sourcename: expected0] [parenthesized: true]
                            NAME a 2 [sourcename: expected0]
                            NAME b 2 [sourcename: expected0]
                RETURN 3 [sourcename: expected0]
                    NAME a 3 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        FUNCTION  1 [sourcename: testcode]
            NAME FUNC 1 [sourcename: testcode]
            LP 1 [sourcename: testcode]
                NAME param1 1 [sourcename: testcode]
                NAME param2 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                VAR 1 [sourcename: testcode]
                    NAME a 1 [sourcename: testcode]
                    NAME b 1 [sourcename: testcode]
                EXPR_RESULT 2 [sourcename: testcode]
                    AND 2 [sourcename: testcode]
                        OR 2 [sourcename: testcode] [parenthesized: true]
                            CALL 2 [sourcename: testcode] [free_call: 1]
                                NAME f 2 [sourcename: testcode]
                                TRUE 2 [sourcename: testcode]
                            CALL 2 [sourcename: testcode] [free_call: 1]
                                NAME f 2 [sourcename: testcode]
                                ASSIGN 2 [sourcename: testcode]
                                    NAME b 2 [sourcename: testcode]
                                    FALSE 2 [sourcename: testcode]
                        ASSIGN 2 [sourcename: testcode] [parenthesized: true]
                            NAME a 2 [sourcename: testcode]
                            NAME b 2 [sourcename: testcode]
                RETURN 3 [sourcename: testcode]
                    NAME a 3 [sourcename: testcode]


Subtree1: ASSIGN 2 [sourcename: expected0]
    NAME b 2 [sourcename: expected0]
    TRUE 2 [sourcename: expected0]


Subtree2: TRUE 2 [sourcename: testcode]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:843)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:410)

18:29:24.091 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #2
18:29:24.091 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.google.javascript.rhino.Node:1369 which is executed by 7 tests
2433571
18:29:24.288 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_stubMap=[];function JSCompiler_stubMethod(JSCompiler_stubMethod_id){return function(){return JSCompiler_stubMap[JSCompiler_stubMethod_id].apply(this,arguments)}}function JSCompiler_unstubMethod(JSCompiler_unstubMethod_id,JSCompiler_unstubMethod_body){return JSCompiler_stubMap[JSCompiler_unstubMethod_id]=JSCompiler_unstubMethod_body}function Foo(){}Foo.prototype.baz=JSCompiler_stubMethod(1);Foo.prototype.callBaz=JSCompiler_stubMethod(0);Foo.prototype.baz=JSCompiler_unstubMethod(1,function(){});
Foo.prototype.callBaz=JSCompiler_unstubMethod(0,function(){this.baz()});(new Foo).callBaz()
Result: var JSCompiler_stubMap=[];function JSCompiler_stubMethod(JSCompiler_stubMethod_id){return function(){return JSCompiler_stubMap[JSCompiler_stubMethod_id].apply(this,arguments)}}function JSCompiler_unstubMethod(JSCompiler_unstubMethod_id,JSCompiler_unstubMethod_body){return JSCompiler_stubMap[JSCompiler_unstubMethod_id]=JSCompiler_unstubMethod_body}function Foo(){}Foo.prototype.baz=JSCompiler_stubMethod(0);Foo.prototype.callBaz=JSCompiler_stubMethod(1);
Foo.prototype.callBaz=JSCompiler_unstubMethod(1,function(){this.baz()});Foo.prototype.baz=JSCompiler_unstubMethod(0,function(){});(new Foo).callBaz()
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_stubMap 1 [sourcename: expected0]
                ARRAYLIT 1 [sourcename: expected0]
        FUNCTION  1 [sourcename: expected0]
            NAME JSCompiler_stubMethod 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
                NAME JSCompiler_stubMethod_id 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                RETURN 1 [sourcename: expected0]
                    FUNCTION  1 [sourcename: expected0]
                        NAME  1 [sourcename: expected0]
                        LP 1 [sourcename: expected0]
                        BLOCK 1 [sourcename: expected0]
                            RETURN 1 [sourcename: expected0]
                                CALL 1 [sourcename: expected0]
                                    GETPROP 1 [sourcename: expected0]
                                        GETELEM 1 [sourcename: expected0]
                                            NAME JSCompiler_stubMap 1 [sourcename: expected0]
                                            NAME JSCompiler_stubMethod_id 1 [sourcename: expected0]
                                        STRING apply 1 [sourcename: expected0]
                                    THIS 1 [sourcename: expected0]
                                    NAME arguments 1 [sourcename: expected0]
        FUNCTION  1 [sourcename: expected0]
            NAME JSCompiler_unstubMethod 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
                NAME JSCompiler_unstubMethod_id 1 [sourcename: expected0]
                NAME JSCompiler_unstubMethod_body 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                RETURN 1 [sourcename: expected0]
                    ASSIGN 1 [sourcename: expected0]
                        GETELEM 1 [sourcename: expected0]
                            NAME JSCompiler_stubMap 1 [sourcename: expected0]
                            NAME JSCompiler_unstubMethod_id 1 [sourcename: expected0]
                        NAME JSCompiler_unstubMethod_body 1 [sourcename: expected0]
        FUNCTION  1 [sourcename: expected0]
            NAME Foo 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            ASSIGN 1 [sourcename: expected0]
                GETPROP 1 [sourcename: expected0]
                    GETPROP 1 [sourcename: expected0]
                        NAME Foo 1 [sourcename: expected0]
                        STRING prototype 1 [sourcename: expected0]
                    STRING baz 1 [sourcename: expected0]
                CALL 1 [sourcename: expected0] [free_call: 1]
                    NAME JSCompiler_stubMethod 1 [sourcename: expected0]
                    NUMBER 1.0 1 [sourcename: expected0]
    SCRIPT 1 [sourcename: expected1] [synthetic: 1]
        EXPR_RESULT 1 [sourcename: expected1]
            ASSIGN 1 [sourcename: expected1]
                GETPROP 1 [sourcename: expected1]
                    GETPROP 1 [sourcename: expected1]
                        NAME Foo 1 [sourcename: expected1]
                        STRING prototype 1 [sourcename: expected1]
                    STRING callBaz 1 [sourcename: expected1]
                CALL 1 [sourcename: expected1] [free_call: 1]
                    NAME JSCompiler_stubMethod 1 [sourcename: expected1]
                    NUMBER 0.0 1 [sourcename: expected1]
    SCRIPT 1 [sourcename: expected2] [synthetic: 1]
        EXPR_RESULT 1 [sourcename: expected2]
            ASSIGN 1 [sourcename: expected2]
                GETPROP 1 [sourcename: expected2]
                    GETPROP 1 [sourcename: expected2]
                        NAME Foo 1 [sourcename: expected2]
                        STRING prototype 1 [sourcename: expected2]
                    STRING baz 1 [sourcename: expected2]
                CALL 1 [sourcename: expected2] [free_call: 1]
                    NAME JSCompiler_unstubMethod 1 [sourcename: expected2]
                    NUMBER 1.0 1 [sourcename: expected2]
                    FUNCTION  1 [sourcename: expected2]
                        NAME  1 [sourcename: expected2]
                        LP 1 [sourcename: expected2]
                        BLOCK 1 [sourcename: expected2]
        EXPR_RESULT 1 [sourcename: expected2]
            ASSIGN 1 [sourcename: expected2]
                GETPROP 1 [sourcename: expected2]
                    GETPROP 1 [sourcename: expected2]
                        NAME Foo 1 [sourcename: expected2]
                        STRING prototype 1 [sourcename: expected2]
                    STRING callBaz 1 [sourcename: expected2]
                CALL 1 [sourcename: expected2] [free_call: 1]
                    NAME JSCompiler_unstubMethod 1 [sourcename: expected2]
                    NUMBER 0.0 1 [sourcename: expected2]
                    FUNCTION  1 [sourcename: expected2]
                        NAME  1 [sourcename: expected2]
                        LP 1 [sourcename: expected2]
                        BLOCK 1 [sourcename: expected2]
                            EXPR_RESULT 1 [sourcename: expected2]
                                CALL 1 [sourcename: expected2]
                                    GETPROP 1 [sourcename: expected2]
                                        THIS 1 [sourcename: expected2]
                                        STRING baz 1 [sourcename: expected2]
        EXPR_RESULT 1 [sourcename: expected2]
            CALL 1 [sourcename: expected2]
                GETPROP 1 [sourcename: expected2]
                    NEW 1 [sourcename: expected2] [parenthesized: true]
                        NAME Foo 1 [sourcename: expected2]
                    STRING callBaz 1 [sourcename: expected2]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: i0] [synthetic: 1]
        VAR 1 [sourcename:  [synthetic] ]
            NAME JSCompiler_stubMap 1 [sourcename:  [synthetic] ]
                ARRAYLIT 1 [sourcename:  [synthetic] ]
        FUNCTION  1 [sourcename:  [synthetic] ]
            NAME JSCompiler_stubMethod 1 [sourcename:  [synthetic] ]
            LP 1 [sourcename:  [synthetic] ]
                NAME JSCompiler_stubMethod_id 1 [sourcename:  [synthetic] ]
            BLOCK 1 [sourcename:  [synthetic] ]
                RETURN 1 [sourcename:  [synthetic] ]
                    FUNCTION  1 [sourcename:  [synthetic] ]
                        NAME  1 [sourcename:  [synthetic] ]
                        LP 1 [sourcename:  [synthetic] ]
                        BLOCK 1 [sourcename:  [synthetic] ]
                            RETURN 1 [sourcename:  [synthetic] ]
                                CALL 1 [sourcename:  [synthetic] ]
                                    GETPROP 1 [sourcename:  [synthetic] ]
                                        GETELEM 1 [sourcename:  [synthetic] ]
                                            NAME JSCompiler_stubMap 1 [sourcename:  [synthetic] ]
                                            NAME JSCompiler_stubMethod_id 1 [sourcename:  [synthetic] ]
                                        STRING apply 1 [sourcename:  [synthetic] ]
                                    THIS 1 [sourcename:  [synthetic] ]
                                    NAME arguments 1 [sourcename:  [synthetic] ]
        FUNCTION  1 [sourcename:  [synthetic] ]
            NAME JSCompiler_unstubMethod 1 [sourcename:  [synthetic] ]
            LP 1 [sourcename:  [synthetic] ]
                NAME JSCompiler_unstubMethod_id 1 [sourcename:  [synthetic] ]
                NAME JSCompiler_unstubMethod_body 1 [sourcename:  [synthetic] ]
            BLOCK 1 [sourcename:  [synthetic] ]
                RETURN 1 [sourcename:  [synthetic] ]
                    ASSIGN 1 [sourcename:  [synthetic] ]
                        GETELEM 1 [sourcename:  [synthetic] ]
                            NAME JSCompiler_stubMap 1 [sourcename:  [synthetic] ]
                            NAME JSCompiler_unstubMethod_id 1 [sourcename:  [synthetic] ]
                        NAME JSCompiler_unstubMethod_body 1 [sourcename:  [synthetic] ]
        FUNCTION  1 [sourcename: i0]
            NAME Foo 1 [sourcename: i0]
            LP 1 [sourcename: i0]
            BLOCK 1 [sourcename: i0]
        EXPR_RESULT 1 [sourcename: i0]
            ASSIGN 1 [sourcename: i0]
                GETPROP 1 [sourcename: i0]
                    GETPROP 1 [sourcename: i0]
                        NAME Foo 1 [sourcename: i0]
                        STRING prototype 1 [sourcename: i0]
                    STRING baz 1 [sourcename: i0]
                CALL 1 [sourcename: i0]
                    NAME JSCompiler_stubMethod 1 [sourcename: i0]
                    NUMBER 0.0 1 [sourcename: i0]
    SCRIPT 1 [sourcename: i1] [synthetic: 1]
        EXPR_RESULT 1 [sourcename: i1]
            ASSIGN 1 [sourcename: i1]
                GETPROP 1 [sourcename: i1]
                    GETPROP 1 [sourcename: i1]
                        NAME Foo 1 [sourcename: i1]
                        STRING prototype 1 [sourcename: i1]
                    STRING callBaz 1 [sourcename: i1]
                CALL 1 [sourcename: i1]
                    NAME JSCompiler_stubMethod 1 [sourcename: i1]
                    NUMBER 1.0 1 [sourcename: i1]
    SCRIPT 1 [sourcename: i2] [synthetic: 1]
        EXPR_RESULT 1 [sourcename: i1]
            ASSIGN 1 [sourcename: i1]
                GETPROP 1 [sourcename: i1]
                    GETPROP 1 [sourcename: i1]
                        NAME Foo 1 [sourcename: i1]
                        STRING prototype 1 [sourcename: i1]
                    STRING callBaz 1 [sourcename: i1]
                CALL 1 [sourcename: i1]
                    NAME JSCompiler_unstubMethod 1 [sourcename: i1]
                    NUMBER 1.0 1 [sourcename: i1]
                    FUNCTION  1 [sourcename: i1]
                        NAME  1 [sourcename: i1]
                        LP 1 [sourcename: i1]
                        BLOCK 1 [sourcename: i1]
                            EXPR_RESULT 1 [sourcename: i1]
                                CALL 1 [sourcename: i1]
                                    GETPROP 1 [sourcename: i1]
                                        THIS 1 [sourcename: i1]
                                        STRING baz 1 [sourcename: i1]
        EXPR_RESULT 1 [sourcename: i0]
            ASSIGN 1 [sourcename: i0]
                GETPROP 1 [sourcename: i0]
                    GETPROP 1 [sourcename: i0]
                        NAME Foo 1 [sourcename: i0]
                        STRING prototype 1 [sourcename: i0]
                    STRING baz 1 [sourcename: i0]
                CALL 1 [sourcename: i0]
                    NAME JSCompiler_unstubMethod 1 [sourcename: i0]
                    NUMBER 0.0 1 [sourcename: i0]
                    FUNCTION  1 [sourcename: i0]
                        NAME  1 [sourcename: i0]
                        LP 1 [sourcename: i0]
                        BLOCK 1 [sourcename: i0]
        EXPR_RESULT 1 [sourcename: i2]
            CALL 1 [sourcename: i2]
                GETPROP 1 [sourcename: i2]
                    NEW 1 [sourcename: i2] [parenthesized: true]
                        NAME Foo 1 [sourcename: i2]
                    STRING callBaz 1 [sourcename: i2]


Subtree1: NUMBER 1.0 1 [sourcename: expected0]


Subtree2: NUMBER 0.0 1 [sourcename: i0]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:843)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:679)
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_stubMap=[];function JSCompiler_stubMethod(JSCompiler_stubMethod_id){return function(){return JSCompiler_stubMap[JSCompiler_stubMethod_id].apply(this,arguments)}}function JSCompiler_unstubMethod(JSCompiler_unstubMethod_id,JSCompiler_unstubMethod_body){return JSCompiler_stubMap[JSCompiler_unstubMethod_id]=JSCompiler_unstubMethod_body}function Foo(){}Foo.prototype.b1=JSCompiler_stubMethod(0);Foo.prototype.b1=JSCompiler_unstubMethod(0,function(){Foo.prototype.b2=JSCompiler_stubMethod(1)});
var y=new Foo;y.b1();Foo.prototype.b2=JSCompiler_unstubMethod(1,function(){var x=1;Foo.prototype.b3=function(){x}});y=new Foo;z.b2();y=new Foo;z.b3()
Result: var JSCompiler_stubMap=[];function JSCompiler_stubMethod(JSCompiler_stubMethod_id){return function(){return JSCompiler_stubMap[JSCompiler_stubMethod_id].apply(this,arguments)}}function JSCompiler_unstubMethod(JSCompiler_unstubMethod_id,JSCompiler_unstubMethod_body){return JSCompiler_stubMap[JSCompiler_unstubMethod_id]=JSCompiler_unstubMethod_body}function Foo(){}Foo.prototype.b1=JSCompiler_stubMethod(1);Foo.prototype.b1=JSCompiler_unstubMethod(1,function(){Foo.prototype.b2=JSCompiler_stubMethod(0)});
var y=new Foo;y.b1();Foo.prototype.b2=JSCompiler_unstubMethod(0,function(){var x=1;Foo.prototype.b3=function(){x}});y=new Foo;z.b2();y=new Foo;z.b3()
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_stubMap 1 [sourcename: expected0]
                ARRAYLIT 1 [sourcename: expected0]
        FUNCTION  1 [sourcename: expected0]
            NAME JSCompiler_stubMethod 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
                NAME JSCompiler_stubMethod_id 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                RETURN 1 [sourcename: expected0]
                    FUNCTION  1 [sourcename: expected0]
                        NAME  1 [sourcename: expected0]
                        LP 1 [sourcename: expected0]
                        BLOCK 1 [sourcename: expected0]
                            RETURN 1 [sourcename: expected0]
                                CALL 1 [sourcename: expected0]
                                    GETPROP 1 [sourcename: expected0]
                                        GETELEM 1 [sourcename: expected0]
                                            NAME JSCompiler_stubMap 1 [sourcename: expected0]
                                            NAME JSCompiler_stubMethod_id 1 [sourcename: expected0]
                                        STRING apply 1 [sourcename: expected0]
                                    THIS 1 [sourcename: expected0]
                                    NAME arguments 1 [sourcename: expected0]
        FUNCTION  1 [sourcename: expected0]
            NAME JSCompiler_unstubMethod 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
                NAME JSCompiler_unstubMethod_id 1 [sourcename: expected0]
                NAME JSCompiler_unstubMethod_body 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                RETURN 1 [sourcename: expected0]
                    ASSIGN 1 [sourcename: expected0]
                        GETELEM 1 [sourcename: expected0]
                            NAME JSCompiler_stubMap 1 [sourcename: expected0]
                            NAME JSCompiler_unstubMethod_id 1 [sourcename: expected0]
                        NAME JSCompiler_unstubMethod_body 1 [sourcename: expected0]
        FUNCTION  1 [sourcename: expected0]
            NAME Foo 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            ASSIGN 1 [sourcename: expected0]
                GETPROP 1 [sourcename: expected0]
                    GETPROP 1 [sourcename: expected0]
                        NAME Foo 1 [sourcename: expected0]
                        STRING prototype 1 [sourcename: expected0]
                    STRING b1 1 [sourcename: expected0]
                CALL 1 [sourcename: expected0] [free_call: 1]
                    NAME JSCompiler_stubMethod 1 [sourcename: expected0]
                    NUMBER 0.0 1 [sourcename: expected0]
    SCRIPT 1 [sourcename: expected1] [synthetic: 1]
        EXPR_RESULT 1 [sourcename: expected1]
            ASSIGN 1 [sourcename: expected1]
                GETPROP 1 [sourcename: expected1]
                    GETPROP 1 [sourcename: expected1]
                        NAME Foo 1 [sourcename: expected1]
                        STRING prototype 1 [sourcename: expected1]
                    STRING b1 1 [sourcename: expected1]
                CALL 1 [sourcename: expected1] [free_call: 1]
                    NAME JSCompiler_unstubMethod 1 [sourcename: expected1]
                    NUMBER 0.0 1 [sourcename: expected1]
                    FUNCTION  1 [sourcename: expected1]
                        NAME  1 [sourcename: expected1]
                        LP 1 [sourcename: expected1]
                        BLOCK 1 [sourcename: expected1]
                            EXPR_RESULT 1 [sourcename: expected1]
                                ASSIGN 1 [sourcename: expected1]
                                    GETPROP 1 [sourcename: expected1]
                                        GETPROP 1 [sourcename: expected1]
                                            NAME Foo 1 [sourcename: expected1]
                                            STRING prototype 1 [sourcename: expected1]
                                        STRING b2 1 [sourcename: expected1]
                                    CALL 1 [sourcename: expected1] [free_call: 1]
                                        NAME JSCompiler_stubMethod 1 [sourcename: expected1]
                                        NUMBER 1.0 1 [sourcename: expected1]
        VAR 1 [sourcename: expected1]
            NAME y 1 [sourcename: expected1]
                NEW 1 [sourcename: expected1]
                    NAME Foo 1 [sourcename: expected1]
        EXPR_RESULT 1 [sourcename: expected1]
            CALL 1 [sourcename: expected1]
                GETPROP 1 [sourcename: expected1]
                    NAME y 1 [sourcename: expected1]
                    STRING b1 1 [sourcename: expected1]
    SCRIPT 1 [sourcename: expected2] [synthetic: 1]
        EXPR_RESULT 1 [sourcename: expected2]
            ASSIGN 1 [sourcename: expected2]
                GETPROP 1 [sourcename: expected2]
                    GETPROP 1 [sourcename: expected2]
                        NAME Foo 1 [sourcename: expected2]
                        STRING prototype 1 [sourcename: expected2]
                    STRING b2 1 [sourcename: expected2]
                CALL 1 [sourcename: expected2] [free_call: 1]
                    NAME JSCompiler_unstubMethod 1 [sourcename: expected2]
                    NUMBER 1.0 1 [sourcename: expected2]
                    FUNCTION  1 [sourcename: expected2]
                        NAME  1 [sourcename: expected2]
                        LP 1 [sourcename: expected2]
                        BLOCK 1 [sourcename: expected2]
                            VAR 1 [sourcename: expected2]
                                NAME x 1 [sourcename: expected2]
                                    NUMBER 1.0 1 [sourcename: expected2]
                            EXPR_RESULT 1 [sourcename: expected2]
                                ASSIGN 1 [sourcename: expected2]
                                    GETPROP 1 [sourcename: expected2]
                                        GETPROP 1 [sourcename: expected2]
                                            NAME Foo 1 [sourcename: expected2]
                                            STRING prototype 1 [sourcename: expected2]
                                        STRING b3 1 [sourcename: expected2]
                                    FUNCTION  1 [sourcename: expected2]
                                        NAME  1 [sourcename: expected2]
                                        LP 1 [sourcename: expected2]
                                        BLOCK 1 [sourcename: expected2]
                                            EXPR_RESULT 1 [sourcename: expected2]
                                                NAME x 1 [sourcename: expected2]
        EXPR_RESULT 1 [sourcename: expected2]
            ASSIGN 1 [sourcename: expected2]
                NAME y 1 [sourcename: expected2]
                NEW 1 [sourcename: expected2]
                    NAME Foo 1 [sourcename: expected2]
        EXPR_RESULT 1 [sourcename: expected2]
            CALL 1 [sourcename: expected2]
                GETPROP 1 [sourcename: expected2]
                    NAME z 1 [sourcename: expected2]
                    STRING b2 1 [sourcename: expected2]
    SCRIPT 1 [sourcename: expected3] [synthetic: 1]
        EXPR_RESULT 1 [sourcename: expected3]
            ASSIGN 1 [sourcename: expected3]
                NAME y 1 [sourcename: expected3]
                NEW 1 [sourcename: expected3]
                    NAME Foo 1 [sourcename: expected3]
        EXPR_RESULT 1 [sourcename: expected3]
            CALL 1 [sourcename: expected3]
                GETPROP 1 [sourcename: expected3]
                    NAME z 1 [sourcename: expected3]
                    STRING b3 1 [sourcename: expected3]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: i0] [synthetic: 1]
        VAR 1 [sourcename:  [synthetic] ]
            NAME JSCompiler_stubMap 1 [sourcename:  [synthetic] ]
                ARRAYLIT 1 [sourcename:  [synthetic] ]
        FUNCTION  1 [sourcename:  [synthetic] ]
            NAME JSCompiler_stubMethod 1 [sourcename:  [synthetic] ]
            LP 1 [sourcename:  [synthetic] ]
                NAME JSCompiler_stubMethod_id 1 [sourcename:  [synthetic] ]
            BLOCK 1 [sourcename:  [synthetic] ]
                RETURN 1 [sourcename:  [synthetic] ]
                    FUNCTION  1 [sourcename:  [synthetic] ]
                        NAME  1 [sourcename:  [synthetic] ]
                        LP 1 [sourcename:  [synthetic] ]
                        BLOCK 1 [sourcename:  [synthetic] ]
                            RETURN 1 [sourcename:  [synthetic] ]
                                CALL 1 [sourcename:  [synthetic] ]
                                    GETPROP 1 [sourcename:  [synthetic] ]
                                        GETELEM 1 [sourcename:  [synthetic] ]
                                            NAME JSCompiler_stubMap 1 [sourcename:  [synthetic] ]
                                            NAME JSCompiler_stubMethod_id 1 [sourcename:  [synthetic] ]
                                        STRING apply 1 [sourcename:  [synthetic] ]
                                    THIS 1 [sourcename:  [synthetic] ]
                                    NAME arguments 1 [sourcename:  [synthetic] ]
        FUNCTION  1 [sourcename:  [synthetic] ]
            NAME JSCompiler_unstubMethod 1 [sourcename:  [synthetic] ]
            LP 1 [sourcename:  [synthetic] ]
                NAME JSCompiler_unstubMethod_id 1 [sourcename:  [synthetic] ]
                NAME JSCompiler_unstubMethod_body 1 [sourcename:  [synthetic] ]
            BLOCK 1 [sourcename:  [synthetic] ]
                RETURN 1 [sourcename:  [synthetic] ]
                    ASSIGN 1 [sourcename:  [synthetic] ]
                        GETELEM 1 [sourcename:  [synthetic] ]
                            NAME JSCompiler_stubMap 1 [sourcename:  [synthetic] ]
                            NAME JSCompiler_unstubMethod_id 1 [sourcename:  [synthetic] ]
                        NAME JSCompiler_unstubMethod_body 1 [sourcename:  [synthetic] ]
        FUNCTION  1 [sourcename: i0]
            NAME Foo 1 [sourcename: i0]
            LP 1 [sourcename: i0]
            BLOCK 1 [sourcename: i0]
        EXPR_RESULT 1 [sourcename: i0]
            ASSIGN 1 [sourcename: i0]
                GETPROP 1 [sourcename: i0]
                    GETPROP 1 [sourcename: i0]
                        NAME Foo 1 [sourcename: i0]
                        STRING prototype 1 [sourcename: i0]
                    STRING b1 1 [sourcename: i0]
                CALL 1 [sourcename: i0]
                    NAME JSCompiler_stubMethod 1 [sourcename: i0]
                    NUMBER 1.0 1 [sourcename: i0]
    SCRIPT 1 [sourcename: i1] [synthetic: 1]
        EXPR_RESULT 1 [sourcename: i0]
            ASSIGN 1 [sourcename: i0]
                GETPROP 1 [sourcename: i0]
                    GETPROP 1 [sourcename: i0]
                        NAME Foo 1 [sourcename: i0]
                        STRING prototype 1 [sourcename: i0]
                    STRING b1 1 [sourcename: i0]
                CALL 1 [sourcename: i0]
                    NAME JSCompiler_unstubMethod 1 [sourcename: i0]
                    NUMBER 1.0 1 [sourcename: i0]
                    FUNCTION  1 [sourcename: i0]
                        NAME  1 [sourcename: i0]
                        LP 1 [sourcename: i0]
                        BLOCK 1 [sourcename: i0]
                            EXPR_RESULT 1 [sourcename: i0]
                                ASSIGN 1 [sourcename: i0]
                                    GETPROP 1 [sourcename: i0]
                                        GETPROP 1 [sourcename: i0]
                                            NAME Foo 1 [sourcename: i0]
                                            STRING prototype 1 [sourcename: i0]
                                        STRING b2 1 [sourcename: i0]
                                    CALL 1 [sourcename: i0]
                                        NAME JSCompiler_stubMethod 1 [sourcename: i0]
                                        NUMBER 0.0 1 [sourcename: i0]
        VAR 1 [sourcename: i1]
            NAME y 1 [sourcename: i1]
                NEW 1 [sourcename: i1]
                    NAME Foo 1 [sourcename: i1]
        EXPR_RESULT 1 [sourcename: i1]
            CALL 1 [sourcename: i1]
                GETPROP 1 [sourcename: i1]
                    NAME y 1 [sourcename: i1]
                    STRING b1 1 [sourcename: i1]
    SCRIPT 1 [sourcename: i2] [synthetic: 1]
        EXPR_RESULT 1 [sourcename: i0]
            ASSIGN 1 [sourcename: i0]
                GETPROP 1 [sourcename: i0]
                    GETPROP 1 [sourcename: i0]
                        NAME Foo 1 [sourcename: i0]
                        STRING prototype 1 [sourcename: i0]
                    STRING b2 1 [sourcename: i0]
                CALL 1 [sourcename: i0]
                    NAME JSCompiler_unstubMethod 1 [sourcename: i0]
                    NUMBER 0.0 1 [sourcename: i0]
                    FUNCTION  1 [sourcename: i0]
                        NAME  1 [sourcename: i0]
                        LP 1 [sourcename: i0]
                        BLOCK 1 [sourcename: i0]
                            VAR 1 [sourcename: i0]
                                NAME x 1 [sourcename: i0]
                                    NUMBER 1.0 1 [sourcename: i0]
                            EXPR_RESULT 1 [sourcename: i0]
                                ASSIGN 1 [sourcename: i0]
                                    GETPROP 1 [sourcename: i0]
                                        GETPROP 1 [sourcename: i0]
                                            NAME Foo 1 [sourcename: i0]
                                            STRING prototype 1 [sourcename: i0]
                                        STRING b3 1 [sourcename: i0]
                                    FUNCTION  1 [sourcename: i0]
                                        NAME  1 [sourcename: i0]
                                        LP 1 [sourcename: i0]
                                        BLOCK 1 [sourcename: i0]
                                            EXPR_RESULT 1 [sourcename: i0]
                                                NAME x 1 [sourcename: i0]
        EXPR_RESULT 1 [sourcename: i2]
            ASSIGN 1 [sourcename: i2]
                NAME y 1 [sourcename: i2]
                NEW 1 [sourcename: i2]
                    NAME Foo 1 [sourcename: i2]
        EXPR_RESULT 1 [sourcename: i2]
            CALL 1 [sourcename: i2]
                GETPROP 1 [sourcename: i2]
                    NAME z 1 [sourcename: i2]
                    STRING b2 1 [sourcename: i2]
    SCRIPT 1 [sourcename: i3] [synthetic: 1]
        EXPR_RESULT 1 [sourcename: i3]
            ASSIGN 1 [sourcename: i3]
                NAME y 1 [sourcename: i3]
                NEW 1 [sourcename: i3]
                    NAME Foo 1 [sourcename: i3]
        EXPR_RESULT 1 [sourcename: i3]
            CALL 1 [sourcename: i3]
                GETPROP 1 [sourcename: i3]
                    NAME z 1 [sourcename: i3]
                    STRING b3 1 [sourcename: i3]


Subtree1: NUMBER 0.0 1 [sourcename: expected0]


Subtree2: NUMBER 1.0 1 [sourcename: i0]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:843)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:679)
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_stubMap=[];function JSCompiler_stubMethod(JSCompiler_stubMethod_id){return function(){return JSCompiler_stubMap[JSCompiler_stubMethod_id].apply(this,arguments)}}function JSCompiler_unstubMethod(JSCompiler_unstubMethod_id,JSCompiler_unstubMethod_body){return JSCompiler_stubMap[JSCompiler_unstubMethod_id]=JSCompiler_unstubMethod_body}function Foo(){}Foo.prototype.baz=JSCompiler_stubMethod(1);Foo.prototype.callBaz=JSCompiler_stubMethod(0);Foo.prototype.baz=JSCompiler_unstubMethod(1,function(){});
Foo.prototype.callBaz=JSCompiler_unstubMethod(0,function(){this.baz()});(new Foo).callBaz()
Result: var JSCompiler_stubMap=[];function JSCompiler_stubMethod(JSCompiler_stubMethod_id){return function(){return JSCompiler_stubMap[JSCompiler_stubMethod_id].apply(this,arguments)}}function JSCompiler_unstubMethod(JSCompiler_unstubMethod_id,JSCompiler_unstubMethod_body){return JSCompiler_stubMap[JSCompiler_unstubMethod_id]=JSCompiler_unstubMethod_body}function Foo(){}Foo.prototype.baz=JSCompiler_stubMethod(0);Foo.prototype.callBaz=JSCompiler_stubMethod(1);
Foo.prototype.callBaz=JSCompiler_unstubMethod(1,function(){this.baz()});Foo.prototype.baz=JSCompiler_unstubMethod(0,function(){});(new Foo).callBaz()
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_stubMap 1 [sourcename: expected0]
                ARRAYLIT 1 [sourcename: expected0]
        FUNCTION  1 [sourcename: expected0]
            NAME JSCompiler_stubMethod 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
                NAME JSCompiler_stubMethod_id 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                RETURN 1 [sourcename: expected0]
                    FUNCTION  1 [sourcename: expected0]
                        NAME  1 [sourcename: expected0]
                        LP 1 [sourcename: expected0]
                        BLOCK 1 [sourcename: expected0]
                            RETURN 1 [sourcename: expected0]
                                CALL 1 [sourcename: expected0]
                                    GETPROP 1 [sourcename: expected0]
                                        GETELEM 1 [sourcename: expected0]
                                            NAME JSCompiler_stubMap 1 [sourcename: expected0]
                                            NAME JSCompiler_stubMethod_id 1 [sourcename: expected0]
                                        STRING apply 1 [sourcename: expected0]
                                    THIS 1 [sourcename: expected0]
                                    NAME arguments 1 [sourcename: expected0]
        FUNCTION  1 [sourcename: expected0]
            NAME JSCompiler_unstubMethod 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
                NAME JSCompiler_unstubMethod_id 1 [sourcename: expected0]
                NAME JSCompiler_unstubMethod_body 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                RETURN 1 [sourcename: expected0]
                    ASSIGN 1 [sourcename: expected0]
                        GETELEM 1 [sourcename: expected0]
                            NAME JSCompiler_stubMap 1 [sourcename: expected0]
                            NAME JSCompiler_unstubMethod_id 1 [sourcename: expected0]
                        NAME JSCompiler_unstubMethod_body 1 [sourcename: expected0]
        FUNCTION  1 [sourcename: expected0]
            NAME Foo 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            ASSIGN 1 [sourcename: expected0]
                GETPROP 1 [sourcename: expected0]
                    GETPROP 1 [sourcename: expected0]
                        NAME Foo 1 [sourcename: expected0]
                        STRING prototype 1 [sourcename: expected0]
                    STRING baz 1 [sourcename: expected0]
                CALL 1 [sourcename: expected0] [free_call: 1]
                    NAME JSCompiler_stubMethod 1 [sourcename: expected0]
                    NUMBER 1.0 1 [sourcename: expected0]
    SCRIPT 1 [sourcename: expected1] [synthetic: 1]
        EXPR_RESULT 1 [sourcename: expected1]
            ASSIGN 1 [sourcename: expected1]
                GETPROP 1 [sourcename: expected1]
                    GETPROP 1 [sourcename: expected1]
                        NAME Foo 1 [sourcename: expected1]
                        STRING prototype 1 [sourcename: expected1]
                    STRING callBaz 1 [sourcename: expected1]
                CALL 1 [sourcename: expected1] [free_call: 1]
                    NAME JSCompiler_stubMethod 1 [sourcename: expected1]
                    NUMBER 0.0 1 [sourcename: expected1]
    SCRIPT 1 [sourcename: expected2] [synthetic: 1]
        EXPR_RESULT 1 [sourcename: expected2]
            ASSIGN 1 [sourcename: expected2]
                GETPROP 1 [sourcename: expected2]
                    GETPROP 1 [sourcename: expected2]
                        NAME Foo 1 [sourcename: expected2]
                        STRING prototype 1 [sourcename: expected2]
                    STRING baz 1 [sourcename: expected2]
                CALL 1 [sourcename: expected2] [free_call: 1]
                    NAME JSCompiler_unstubMethod 1 [sourcename: expected2]
                    NUMBER 1.0 1 [sourcename: expected2]
                    FUNCTION  1 [sourcename: expected2]
                        NAME  1 [sourcename: expected2]
                        LP 1 [sourcename: expected2]
                        BLOCK 1 [sourcename: expected2]
        EXPR_RESULT 1 [sourcename: expected2]
            ASSIGN 1 [sourcename: expected2]
                GETPROP 1 [sourcename: expected2]
                    GETPROP 1 [sourcename: expected2]
                        NAME Foo 1 [sourcename: expected2]
                        STRING prototype 1 [sourcename: expected2]
                    STRING callBaz 1 [sourcename: expected2]
                CALL 1 [sourcename: expected2] [free_call: 1]
                    NAME JSCompiler_unstubMethod 1 [sourcename: expected2]
                    NUMBER 0.0 1 [sourcename: expected2]
                    FUNCTION  1 [sourcename: expected2]
                        NAME  1 [sourcename: expected2]
                        LP 1 [sourcename: expected2]
                        BLOCK 1 [sourcename: expected2]
                            EXPR_RESULT 1 [sourcename: expected2]
                                CALL 1 [sourcename: expected2]
                                    GETPROP 1 [sourcename: expected2]
                                        THIS 1 [sourcename: expected2]
                                        STRING baz 1 [sourcename: expected2]
        EXPR_RESULT 1 [sourcename: expected2]
            CALL 1 [sourcename: expected2]
                GETPROP 1 [sourcename: expected2]
                    NEW 1 [sourcename: expected2] [parenthesized: true]
                        NAME Foo 1 [sourcename: expected2]
                    STRING callBaz 1 [sourcename: expected2]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: i0] [synthetic: 1]
        VAR 1 [sourcename:  [synthetic] ]
            NAME JSCompiler_stubMap 1 [sourcename:  [synthetic] ]
                ARRAYLIT 1 [sourcename:  [synthetic] ]
        FUNCTION  1 [sourcename:  [synthetic] ]
            NAME JSCompiler_stubMethod 1 [sourcename:  [synthetic] ]
            LP 1 [sourcename:  [synthetic] ]
                NAME JSCompiler_stubMethod_id 1 [sourcename:  [synthetic] ]
            BLOCK 1 [sourcename:  [synthetic] ]
                RETURN 1 [sourcename:  [synthetic] ]
                    FUNCTION  1 [sourcename:  [synthetic] ]
                        NAME  1 [sourcename:  [synthetic] ]
                        LP 1 [sourcename:  [synthetic] ]
                        BLOCK 1 [sourcename:  [synthetic] ]
                            RETURN 1 [sourcename:  [synthetic] ]
                                CALL 1 [sourcename:  [synthetic] ]
                                    GETPROP 1 [sourcename:  [synthetic] ]
                                        GETELEM 1 [sourcename:  [synthetic] ]
                                            NAME JSCompiler_stubMap 1 [sourcename:  [synthetic] ]
                                            NAME JSCompiler_stubMethod_id 1 [sourcename:  [synthetic] ]
                                        STRING apply 1 [sourcename:  [synthetic] ]
                                    THIS 1 [sourcename:  [synthetic] ]
                                    NAME arguments 1 [sourcename:  [synthetic] ]
        FUNCTION  1 [sourcename:  [synthetic] ]
            NAME JSCompiler_unstubMethod 1 [sourcename:  [synthetic] ]
            LP 1 [sourcename:  [synthetic] ]
                NAME JSCompiler_unstubMethod_id 1 [sourcename:  [synthetic] ]
                NAME JSCompiler_unstubMethod_body 1 [sourcename:  [synthetic] ]
            BLOCK 1 [sourcename:  [synthetic] ]
                RETURN 1 [sourcename:  [synthetic] ]
                    ASSIGN 1 [sourcename:  [synthetic] ]
                        GETELEM 1 [sourcename:  [synthetic] ]
                            NAME JSCompiler_stubMap 1 [sourcename:  [synthetic] ]
                            NAME JSCompiler_unstubMethod_id 1 [sourcename:  [synthetic] ]
                        NAME JSCompiler_unstubMethod_body 1 [sourcename:  [synthetic] ]
        FUNCTION  1 [sourcename: i0]
            NAME Foo 1 [sourcename: i0]
            LP 1 [sourcename: i0]
            BLOCK 1 [sourcename: i0]
        EXPR_RESULT 1 [sourcename: i0]
            ASSIGN 1 [sourcename: i0]
                GETPROP 1 [sourcename: i0]
                    GETPROP 1 [sourcename: i0]
                        NAME Foo 1 [sourcename: i0]
                        STRING prototype 1 [sourcename: i0]
                    STRING baz 1 [sourcename: i0]
                CALL 1 [sourcename: i0]
                    NAME JSCompiler_stubMethod 1 [sourcename: i0]
                    NUMBER 0.0 1 [sourcename: i0]
    SCRIPT 1 [sourcename: i1] [synthetic: 1]
        EXPR_RESULT 1 [sourcename: i1]
            ASSIGN 1 [sourcename: i1]
                GETPROP 1 [sourcename: i1]
                    GETPROP 1 [sourcename: i1]
                        NAME Foo 1 [sourcename: i1]
                        STRING prototype 1 [sourcename: i1]
                    STRING callBaz 1 [sourcename: i1]
                CALL 1 [sourcename: i1]
                    NAME JSCompiler_stubMethod 1 [sourcename: i1]
                    NUMBER 1.0 1 [sourcename: i1]
    SCRIPT 1 [sourcename: i2] [synthetic: 1]
        EXPR_RESULT 1 [sourcename: i1]
            ASSIGN 1 [sourcename: i1]
                GETPROP 1 [sourcename: i1]
                    GETPROP 1 [sourcename: i1]
                        NAME Foo 1 [sourcename: i1]
                        STRING prototype 1 [sourcename: i1]
                    STRING callBaz 1 [sourcename: i1]
                CALL 1 [sourcename: i1]
                    NAME JSCompiler_unstubMethod 1 [sourcename: i1]
                    NUMBER 1.0 1 [sourcename: i1]
                    FUNCTION  1 [sourcename: i1]
                        NAME  1 [sourcename: i1]
                        LP 1 [sourcename: i1]
                        BLOCK 1 [sourcename: i1]
                            EXPR_RESULT 1 [sourcename: i1]
                                CALL 1 [sourcename: i1]
                                    GETPROP 1 [sourcename: i1]
                                        THIS 1 [sourcename: i1]
                                        STRING baz 1 [sourcename: i1]
        EXPR_RESULT 1 [sourcename: i0]
            ASSIGN 1 [sourcename: i0]
                GETPROP 1 [sourcename: i0]
                    GETPROP 1 [sourcename: i0]
                        NAME Foo 1 [sourcename: i0]
                        STRING prototype 1 [sourcename: i0]
                    STRING baz 1 [sourcename: i0]
                CALL 1 [sourcename: i0]
                    NAME JSCompiler_unstubMethod 1 [sourcename: i0]
                    NUMBER 0.0 1 [sourcename: i0]
                    FUNCTION  1 [sourcename: i0]
                        NAME  1 [sourcename: i0]
                        LP 1 [sourcename: i0]
                        BLOCK 1 [sourcename: i0]
        EXPR_RESULT 1 [sourcename: i2]
            CALL 1 [sourcename: i2]
                GETPROP 1 [sourcename: i2]
                    NEW 1 [sourcename: i2] [parenthesized: true]
                        NAME Foo 1 [sourcename: i2]
                    STRING callBaz 1 [sourcename: i2]


Subtree1: NUMBER 1.0 1 [sourcename: expected0]


Subtree2: NUMBER 0.0 1 [sourcename: i0]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:843)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:679)
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_stubMap=[];function JSCompiler_stubMethod(JSCompiler_stubMethod_id){return function(){return JSCompiler_stubMap[JSCompiler_stubMethod_id].apply(this,arguments)}}function JSCompiler_unstubMethod(JSCompiler_unstubMethod_id,JSCompiler_unstubMethod_body){return JSCompiler_stubMap[JSCompiler_unstubMethod_id]=JSCompiler_unstubMethod_body}function Foo(){}Foo.prototype.b1=JSCompiler_stubMethod(0);Foo.prototype.b1=JSCompiler_unstubMethod(0,function(){Foo.prototype.b2=JSCompiler_stubMethod(1)});
var y=new Foo;y.b1();Foo.prototype.b2=JSCompiler_unstubMethod(1,function(){var x=1;Foo.prototype.b3=function(){x}});y=new Foo;z.b2();y=new Foo;z.b3()
Result: var JSCompiler_stubMap=[];function JSCompiler_stubMethod(JSCompiler_stubMethod_id){return function(){return JSCompiler_stubMap[JSCompiler_stubMethod_id].apply(this,arguments)}}function JSCompiler_unstubMethod(JSCompiler_unstubMethod_id,JSCompiler_unstubMethod_body){return JSCompiler_stubMap[JSCompiler_unstubMethod_id]=JSCompiler_unstubMethod_body}function Foo(){}Foo.prototype.b1=JSCompiler_stubMethod(1);Foo.prototype.b1=JSCompiler_unstubMethod(1,function(){Foo.prototype.b2=JSCompiler_stubMethod(0)});
var y=new Foo;y.b1();Foo.prototype.b2=JSCompiler_unstubMethod(0,function(){var x=1;Foo.prototype.b3=function(){x}});y=new Foo;z.b2();y=new Foo;z.b3()
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_stubMap 1 [sourcename: expected0]
                ARRAYLIT 1 [sourcename: expected0]
        FUNCTION  1 [sourcename: expected0]
            NAME JSCompiler_stubMethod 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
                NAME JSCompiler_stubMethod_id 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                RETURN 1 [sourcename: expected0]
                    FUNCTION  1 [sourcename: expected0]
                        NAME  1 [sourcename: expected0]
                        LP 1 [sourcename: expected0]
                        BLOCK 1 [sourcename: expected0]
                            RETURN 1 [sourcename: expected0]
                                CALL 1 [sourcename: expected0]
                                    GETPROP 1 [sourcename: expected0]
                                        GETELEM 1 [sourcename: expected0]
                                            NAME JSCompiler_stubMap 1 [sourcename: expected0]
                                            NAME JSCompiler_stubMethod_id 1 [sourcename: expected0]
                                        STRING apply 1 [sourcename: expected0]
                                    THIS 1 [sourcename: expected0]
                                    NAME arguments 1 [sourcename: expected0]
        FUNCTION  1 [sourcename: expected0]
            NAME JSCompiler_unstubMethod 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
                NAME JSCompiler_unstubMethod_id 1 [sourcename: expected0]
                NAME JSCompiler_unstubMethod_body 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                RETURN 1 [sourcename: expected0]
                    ASSIGN 1 [sourcename: expected0]
                        GETELEM 1 [sourcename: expected0]
                            NAME JSCompiler_stubMap 1 [sourcename: expected0]
                            NAME JSCompiler_unstubMethod_id 1 [sourcename: expected0]
                        NAME JSCompiler_unstubMethod_body 1 [sourcename: expected0]
        FUNCTION  1 [sourcename: expected0]
            NAME Foo 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            ASSIGN 1 [sourcename: expected0]
                GETPROP 1 [sourcename: expected0]
                    GETPROP 1 [sourcename: expected0]
                        NAME Foo 1 [sourcename: expected0]
                        STRING prototype 1 [sourcename: expected0]
                    STRING b1 1 [sourcename: expected0]
                CALL 1 [sourcename: expected0] [free_call: 1]
                    NAME JSCompiler_stubMethod 1 [sourcename: expected0]
                    NUMBER 0.0 1 [sourcename: expected0]
    SCRIPT 1 [sourcename: expected1] [synthetic: 1]
        EXPR_RESULT 1 [sourcename: expected1]
            ASSIGN 1 [sourcename: expected1]
                GETPROP 1 [sourcename: expected1]
                    GETPROP 1 [sourcename: expected1]
                        NAME Foo 1 [sourcename: expected1]
                        STRING prototype 1 [sourcename: expected1]
                    STRING b1 1 [sourcename: expected1]
                CALL 1 [sourcename: expected1] [free_call: 1]
                    NAME JSCompiler_unstubMethod 1 [sourcename: expected1]
                    NUMBER 0.0 1 [sourcename: expected1]
                    FUNCTION  1 [sourcename: expected1]
                        NAME  1 [sourcename: expected1]
                        LP 1 [sourcename: expected1]
                        BLOCK 1 [sourcename: expected1]
                            EXPR_RESULT 1 [sourcename: expected1]
                                ASSIGN 1 [sourcename: expected1]
                                    GETPROP 1 [sourcename: expected1]
                                        GETPROP 1 [sourcename: expected1]
                                            NAME Foo 1 [sourcename: expected1]
                                            STRING prototype 1 [sourcename: expected1]
                                        STRING b2 1 [sourcename: expected1]
                                    CALL 1 [sourcename: expected1] [free_call: 1]
                                        NAME JSCompiler_stubMethod 1 [sourcename: expected1]
                                        NUMBER 1.0 1 [sourcename: expected1]
        VAR 1 [sourcename: expected1]
            NAME y 1 [sourcename: expected1]
                NEW 1 [sourcename: expected1]
                    NAME Foo 1 [sourcename: expected1]
        EXPR_RESULT 1 [sourcename: expected1]
            CALL 1 [sourcename: expected1]
                GETPROP 1 [sourcename: expected1]
                    NAME y 1 [sourcename: expected1]
                    STRING b1 1 [sourcename: expected1]
    SCRIPT 1 [sourcename: expected2] [synthetic: 1]
        EXPR_RESULT 1 [sourcename: expected2]
            ASSIGN 1 [sourcename: expected2]
                GETPROP 1 [sourcename: expected2]
                    GETPROP 1 [sourcename: expected2]
                        NAME Foo 1 [sourcename: expected2]
                        STRING prototype 1 [sourcename: expected2]
                    STRING b2 1 [sourcename: expected2]
                CALL 1 [sourcename: expected2] [free_call: 1]
                    NAME JSCompiler_unstubMethod 1 [sourcename: expected2]
                    NUMBER 1.0 1 [sourcename: expected2]
                    FUNCTION  1 [sourcename: expected2]
                        NAME  1 [sourcename: expected2]
                        LP 1 [sourcename: expected2]
                        BLOCK 1 [sourcename: expected2]
                            VAR 1 [sourcename: expected2]
                                NAME x 1 [sourcename: expected2]
                                    NUMBER 1.0 1 [sourcename: expected2]
                            EXPR_RESULT 1 [sourcename: expected2]
                                ASSIGN 1 [sourcename: expected2]
                                    GETPROP 1 [sourcename: expected2]
                                        GETPROP 1 [sourcename: expected2]
                                            NAME Foo 1 [sourcename: expected2]
                                            STRING prototype 1 [sourcename: expected2]
                                        STRING b3 1 [sourcename: expected2]
                                    FUNCTION  1 [sourcename: expected2]
                                        NAME  1 [sourcename: expected2]
                                        LP 1 [sourcename: expected2]
                                        BLOCK 1 [sourcename: expected2]
                                            EXPR_RESULT 1 [sourcename: expected2]
                                                NAME x 1 [sourcename: expected2]
        EXPR_RESULT 1 [sourcename: expected2]
            ASSIGN 1 [sourcename: expected2]
                NAME y 1 [sourcename: expected2]
                NEW 1 [sourcename: expected2]
                    NAME Foo 1 [sourcename: expected2]
        EXPR_RESULT 1 [sourcename: expected2]
            CALL 1 [sourcename: expected2]
                GETPROP 1 [sourcename: expected2]
                    NAME z 1 [sourcename: expected2]
                    STRING b2 1 [sourcename: expected2]
    SCRIPT 1 [sourcename: expected3] [synthetic: 1]
        EXPR_RESULT 1 [sourcename: expected3]
            ASSIGN 1 [sourcename: expected3]
                NAME y 1 [sourcename: expected3]
                NEW 1 [sourcename: expected3]
                    NAME Foo 1 [sourcename: expected3]
        EXPR_RESULT 1 [sourcename: expected3]
            CALL 1 [sourcename: expected3]
                GETPROP 1 [sourcename: expected3]
                    NAME z 1 [sourcename: expected3]
                    STRING b3 1 [sourcename: expected3]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: i0] [synthetic: 1]
        VAR 1 [sourcename:  [synthetic] ]
            NAME JSCompiler_stubMap 1 [sourcename:  [synthetic] ]
                ARRAYLIT 1 [sourcename:  [synthetic] ]
        FUNCTION  1 [sourcename:  [synthetic] ]
            NAME JSCompiler_stubMethod 1 [sourcename:  [synthetic] ]
            LP 1 [sourcename:  [synthetic] ]
                NAME JSCompiler_stubMethod_id 1 [sourcename:  [synthetic] ]
            BLOCK 1 [sourcename:  [synthetic] ]
                RETURN 1 [sourcename:  [synthetic] ]
                    FUNCTION  1 [sourcename:  [synthetic] ]
                        NAME  1 [sourcename:  [synthetic] ]
                        LP 1 [sourcename:  [synthetic] ]
                        BLOCK 1 [sourcename:  [synthetic] ]
                            RETURN 1 [sourcename:  [synthetic] ]
                                CALL 1 [sourcename:  [synthetic] ]
                                    GETPROP 1 [sourcename:  [synthetic] ]
                                        GETELEM 1 [sourcename:  [synthetic] ]
                                            NAME JSCompiler_stubMap 1 [sourcename:  [synthetic] ]
                                            NAME JSCompiler_stubMethod_id 1 [sourcename:  [synthetic] ]
                                        STRING apply 1 [sourcename:  [synthetic] ]
                                    THIS 1 [sourcename:  [synthetic] ]
                                    NAME arguments 1 [sourcename:  [synthetic] ]
        FUNCTION  1 [sourcename:  [synthetic] ]
            NAME JSCompiler_unstubMethod 1 [sourcename:  [synthetic] ]
            LP 1 [sourcename:  [synthetic] ]
                NAME JSCompiler_unstubMethod_id 1 [sourcename:  [synthetic] ]
                NAME JSCompiler_unstubMethod_body 1 [sourcename:  [synthetic] ]
            BLOCK 1 [sourcename:  [synthetic] ]
                RETURN 1 [sourcename:  [synthetic] ]
                    ASSIGN 1 [sourcename:  [synthetic] ]
                        GETELEM 1 [sourcename:  [synthetic] ]
                            NAME JSCompiler_stubMap 1 [sourcename:  [synthetic] ]
                            NAME JSCompiler_unstubMethod_id 1 [sourcename:  [synthetic] ]
                        NAME JSCompiler_unstubMethod_body 1 [sourcename:  [synthetic] ]
        FUNCTION  1 [sourcename: i0]
            NAME Foo 1 [sourcename: i0]
            LP 1 [sourcename: i0]
            BLOCK 1 [sourcename: i0]
        EXPR_RESULT 1 [sourcename: i0]
            ASSIGN 1 [sourcename: i0]
                GETPROP 1 [sourcename: i0]
                    GETPROP 1 [sourcename: i0]
                        NAME Foo 1 [sourcename: i0]
                        STRING prototype 1 [sourcename: i0]
                    STRING b1 1 [sourcename: i0]
                CALL 1 [sourcename: i0]
                    NAME JSCompiler_stubMethod 1 [sourcename: i0]
                    NUMBER 1.0 1 [sourcename: i0]
    SCRIPT 1 [sourcename: i1] [synthetic: 1]
        EXPR_RESULT 1 [sourcename: i0]
            ASSIGN 1 [sourcename: i0]
                GETPROP 1 [sourcename: i0]
                    GETPROP 1 [sourcename: i0]
                        NAME Foo 1 [sourcename: i0]
                        STRING prototype 1 [sourcename: i0]
                    STRING b1 1 [sourcename: i0]
                CALL 1 [sourcename: i0]
                    NAME JSCompiler_unstubMethod 1 [sourcename: i0]
                    NUMBER 1.0 1 [sourcename: i0]
                    FUNCTION  1 [sourcename: i0]
                        NAME  1 [sourcename: i0]
                        LP 1 [sourcename: i0]
                        BLOCK 1 [sourcename: i0]
                            EXPR_RESULT 1 [sourcename: i0]
                                ASSIGN 1 [sourcename: i0]
                                    GETPROP 1 [sourcename: i0]
                                        GETPROP 1 [sourcename: i0]
                                            NAME Foo 1 [sourcename: i0]
                                            STRING prototype 1 [sourcename: i0]
                                        STRING b2 1 [sourcename: i0]
                                    CALL 1 [sourcename: i0]
                                        NAME JSCompiler_stubMethod 1 [sourcename: i0]
                                        NUMBER 0.0 1 [sourcename: i0]
        VAR 1 [sourcename: i1]
            NAME y 1 [sourcename: i1]
                NEW 1 [sourcename: i1]
                    NAME Foo 1 [sourcename: i1]
        EXPR_RESULT 1 [sourcename: i1]
            CALL 1 [sourcename: i1]
                GETPROP 1 [sourcename: i1]
                    NAME y 1 [sourcename: i1]
                    STRING b1 1 [sourcename: i1]
    SCRIPT 1 [sourcename: i2] [synthetic: 1]
        EXPR_RESULT 1 [sourcename: i0]
            ASSIGN 1 [sourcename: i0]
                GETPROP 1 [sourcename: i0]
                    GETPROP 1 [sourcename: i0]
                        NAME Foo 1 [sourcename: i0]
                        STRING prototype 1 [sourcename: i0]
                    STRING b2 1 [sourcename: i0]
                CALL 1 [sourcename: i0]
                    NAME JSCompiler_unstubMethod 1 [sourcename: i0]
                    NUMBER 0.0 1 [sourcename: i0]
                    FUNCTION  1 [sourcename: i0]
                        NAME  1 [sourcename: i0]
                        LP 1 [sourcename: i0]
                        BLOCK 1 [sourcename: i0]
                            VAR 1 [sourcename: i0]
                                NAME x 1 [sourcename: i0]
                                    NUMBER 1.0 1 [sourcename: i0]
                            EXPR_RESULT 1 [sourcename: i0]
                                ASSIGN 1 [sourcename: i0]
                                    GETPROP 1 [sourcename: i0]
                                        GETPROP 1 [sourcename: i0]
                                            NAME Foo 1 [sourcename: i0]
                                            STRING prototype 1 [sourcename: i0]
                                        STRING b3 1 [sourcename: i0]
                                    FUNCTION  1 [sourcename: i0]
                                        NAME  1 [sourcename: i0]
                                        LP 1 [sourcename: i0]
                                        BLOCK 1 [sourcename: i0]
                                            EXPR_RESULT 1 [sourcename: i0]
                                                NAME x 1 [sourcename: i0]
        EXPR_RESULT 1 [sourcename: i2]
            ASSIGN 1 [sourcename: i2]
                NAME y 1 [sourcename: i2]
                NEW 1 [sourcename: i2]
                    NAME Foo 1 [sourcename: i2]
        EXPR_RESULT 1 [sourcename: i2]
            CALL 1 [sourcename: i2]
                GETPROP 1 [sourcename: i2]
                    NAME z 1 [sourcename: i2]
                    STRING b2 1 [sourcename: i2]
    SCRIPT 1 [sourcename: i3] [synthetic: 1]
        EXPR_RESULT 1 [sourcename: i3]
            ASSIGN 1 [sourcename: i3]
                NAME y 1 [sourcename: i3]
                NEW 1 [sourcename: i3]
                    NAME Foo 1 [sourcename: i3]
        EXPR_RESULT 1 [sourcename: i3]
            CALL 1 [sourcename: i3]
                GETPROP 1 [sourcename: i3]
                    NAME z 1 [sourcename: i3]
                    STRING b3 1 [sourcename: i3]


Subtree1: NUMBER 0.0 1 [sourcename: expected0]


Subtree2: NUMBER 1.0 1 [sourcename: i0]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:843)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:679)
junit.framework.AssertionFailedError: 
Expected: function FUNC(param1,param2){var a;a=1;if(2||(a=3)||a);}
Result: function FUNC(param1,param2){var a;a=1;if((a=2)||(a=3)||a);}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        FUNCTION  1 [sourcename: expected0]
            NAME FUNC 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
                NAME param1 1 [sourcename: expected0]
                NAME param2 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                VAR 1 [sourcename: expected0]
                    NAME a 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    ASSIGN 1 [sourcename: expected0]
                        NAME a 1 [sourcename: expected0]
                        NUMBER 1.0 1 [sourcename: expected0]
                IF 1 [sourcename: expected0]
                    OR 1 [sourcename: expected0]
                        NUMBER 2.0 1 [sourcename: expected0] [parenthesized: true]
                        OR 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0] [parenthesized: true]
                                NAME a 1 [sourcename: expected0]
                                NUMBER 3.0 1 [sourcename: expected0]
                            NAME a 1 [sourcename: expected0] [parenthesized: true]
                    BLOCK 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        FUNCTION  1 [sourcename: testcode]
            NAME FUNC 1 [sourcename: testcode]
            LP 1 [sourcename: testcode]
                NAME param1 1 [sourcename: testcode]
                NAME param2 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                VAR 1 [sourcename: testcode]
                    NAME a 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    ASSIGN 1 [sourcename: testcode]
                        NAME a 1 [sourcename: testcode]
                        NUMBER 1.0 1 [sourcename: testcode]
                IF 1 [sourcename: testcode]
                    OR 1 [sourcename: testcode]
                        ASSIGN 1 [sourcename: testcode] [parenthesized: true]
                            NAME a 1 [sourcename: testcode]
                            NUMBER 2.0 1 [sourcename: testcode]
                        OR 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode] [parenthesized: true]
                                NAME a 1 [sourcename: testcode]
                                NUMBER 3.0 1 [sourcename: testcode]
                            NAME a 1 [sourcename: testcode] [parenthesized: true]
                    BLOCK 1 [sourcename: testcode]


Subtree1: NUMBER 2.0 1 [sourcename: expected0] [parenthesized: true]


Subtree2: ASSIGN 1 [sourcename: testcode] [parenthesized: true]
    NAME a 1 [sourcename: testcode]
    NUMBER 2.0 1 [sourcename: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:843)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:410)
junit.framework.AssertionFailedError: 
Expected: function FUNC(param1,param2){var a,b;f(b=true)||f(b=false)?a=b:a=null;return a}
Result: function FUNC(param1,param2){var a,b;f(true)||f(b=false)?a=b:a=null;return a}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        FUNCTION  1 [sourcename: expected0]
            NAME FUNC 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
                NAME param1 1 [sourcename: expected0]
                NAME param2 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                VAR 1 [sourcename: expected0]
                    NAME a 1 [sourcename: expected0]
                    NAME b 1 [sourcename: expected0]
                EXPR_RESULT 2 [sourcename: expected0]
                    HOOK 2 [sourcename: expected0]
                        OR 2 [sourcename: expected0] [parenthesized: true]
                            CALL 2 [sourcename: expected0] [free_call: 1]
                                NAME f 2 [sourcename: expected0]
                                ASSIGN 2 [sourcename: expected0]
                                    NAME b 2 [sourcename: expected0]
                                    TRUE 2 [sourcename: expected0]
                            CALL 2 [sourcename: expected0] [free_call: 1]
                                NAME f 2 [sourcename: expected0]
                                ASSIGN 2 [sourcename: expected0]
                                    NAME b 2 [sourcename: expected0]
                                    FALSE 2 [sourcename: expected0]
                        ASSIGN 2 [sourcename: expected0] [parenthesized: true]
                            NAME a 2 [sourcename: expected0]
                            NAME b 2 [sourcename: expected0]
                        ASSIGN 2 [sourcename: expected0] [parenthesized: true]
                            NAME a 2 [sourcename: expected0]
                            NULL 2 [sourcename: expected0]
                RETURN 3 [sourcename: expected0]
                    NAME a 3 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        FUNCTION  1 [sourcename: testcode]
            NAME FUNC 1 [sourcename: testcode]
            LP 1 [sourcename: testcode]
                NAME param1 1 [sourcename: testcode]
                NAME param2 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                VAR 1 [sourcename: testcode]
                    NAME a 1 [sourcename: testcode]
                    NAME b 1 [sourcename: testcode]
                EXPR_RESULT 2 [sourcename: testcode]
                    HOOK 2 [sourcename: testcode]
                        OR 2 [sourcename: testcode] [parenthesized: true]
                            CALL 2 [sourcename: testcode] [free_call: 1]
                                NAME f 2 [sourcename: testcode]
                                TRUE 2 [sourcename: testcode]
                            CALL 2 [sourcename: testcode] [free_call: 1]
                                NAME f 2 [sourcename: testcode]
                                ASSIGN 2 [sourcename: testcode]
                                    NAME b 2 [sourcename: testcode]
                                    FALSE 2 [sourcename: testcode]
                        ASSIGN 2 [sourcename: testcode] [parenthesized: true]
                            NAME a 2 [sourcename: testcode]
                            NAME b 2 [sourcename: testcode]
                        ASSIGN 2 [sourcename: testcode] [parenthesized: true]
                            NAME a 2 [sourcename: testcode]
                            NULL 2 [sourcename: testcode]
                RETURN 3 [sourcename: testcode]
                    NAME a 3 [sourcename: testcode]


Subtree1: ASSIGN 2 [sourcename: expected0]
    NAME b 2 [sourcename: expected0]
    TRUE 2 [sourcename: expected0]


Subtree2: TRUE 2 [sourcename: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:843)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:410)
junit.framework.AssertionFailedError: 
Expected: function FUNC(param1,param2){var a,b;(a?f(b=true):f(b=false))&&(a=b);return a}
Result: function FUNC(param1,param2){var a,b;(a?f(true):f(b=false))&&(a=b);return a}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        FUNCTION  1 [sourcename: expected0]
            NAME FUNC 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
                NAME param1 1 [sourcename: expected0]
                NAME param2 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                VAR 1 [sourcename: expected0]
                    NAME a 1 [sourcename: expected0]
                    NAME b 1 [sourcename: expected0]
                EXPR_RESULT 2 [sourcename: expected0]
                    AND 2 [sourcename: expected0]
                        HOOK 2 [sourcename: expected0] [parenthesized: true]
                            NAME a 2 [sourcename: expected0]
                            CALL 2 [sourcename: expected0] [free_call: 1]
                                NAME f 2 [sourcename: expected0]
                                ASSIGN 2 [sourcename: expected0]
                                    NAME b 2 [sourcename: expected0]
                                    TRUE 2 [sourcename: expected0]
                            CALL 2 [sourcename: expected0] [free_call: 1]
                                NAME f 2 [sourcename: expected0]
                                ASSIGN 2 [sourcename: expected0]
                                    NAME b 2 [sourcename: expected0]
                                    FALSE 2 [sourcename: expected0]
                        ASSIGN 2 [sourcename: expected0] [parenthesized: true]
                            NAME a 2 [sourcename: expected0]
                            NAME b 2 [sourcename: expected0]
                RETURN 3 [sourcename: expected0]
                    NAME a 3 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        FUNCTION  1 [sourcename: testcode]
            NAME FUNC 1 [sourcename: testcode]
            LP 1 [sourcename: testcode]
                NAME param1 1 [sourcename: testcode]
                NAME param2 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                VAR 1 [sourcename: testcode]
                    NAME a 1 [sourcename: testcode]
                    NAME b 1 [sourcename: testcode]
                EXPR_RESULT 2 [sourcename: testcode]
                    AND 2 [sourcename: testcode]
                        HOOK 2 [sourcename: testcode] [parenthesized: true]
                            NAME a 2 [sourcename: testcode]
                            CALL 2 [sourcename: testcode] [free_call: 1]
                                NAME f 2 [sourcename: testcode]
                                TRUE 2 [sourcename: testcode]
                            CALL 2 [sourcename: testcode] [free_call: 1]
                                NAME f 2 [sourcename: testcode]
                                ASSIGN 2 [sourcename: testcode]
                                    NAME b 2 [sourcename: testcode]
                                    FALSE 2 [sourcename: testcode]
                        ASSIGN 2 [sourcename: testcode] [parenthesized: true]
                            NAME a 2 [sourcename: testcode]
                            NAME b 2 [sourcename: testcode]
                RETURN 3 [sourcename: testcode]
                    NAME a 3 [sourcename: testcode]


Subtree1: ASSIGN 2 [sourcename: expected0]
    NAME b 2 [sourcename: expected0]
    TRUE 2 [sourcename: expected0]


Subtree2: TRUE 2 [sourcename: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:843)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:410)
junit.framework.AssertionFailedError: 
Expected: function FUNC(param1,param2){var a,b;(f(b=true)||f(b=false))&&(a=b);return a}
Result: function FUNC(param1,param2){var a,b;(f(true)||f(b=false))&&(a=b);return a}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        FUNCTION  1 [sourcename: expected0]
            NAME FUNC 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
                NAME param1 1 [sourcename: expected0]
                NAME param2 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                VAR 1 [sourcename: expected0]
                    NAME a 1 [sourcename: expected0]
                    NAME b 1 [sourcename: expected0]
                EXPR_RESULT 2 [sourcename: expected0]
                    AND 2 [sourcename: expected0]
                        OR 2 [sourcename: expected0] [parenthesized: true]
                            CALL 2 [sourcename: expected0] [free_call: 1]
                                NAME f 2 [sourcename: expected0]
                                ASSIGN 2 [sourcename: expected0]
                                    NAME b 2 [sourcename: expected0]
                                    TRUE 2 [sourcename: expected0]
                            CALL 2 [sourcename: expected0] [free_call: 1]
                                NAME f 2 [sourcename: expected0]
                                ASSIGN 2 [sourcename: expected0]
                                    NAME b 2 [sourcename: expected0]
                                    FALSE 2 [sourcename: expected0]
                        ASSIGN 2 [sourcename: expected0] [parenthesized: true]
                            NAME a 2 [sourcename: expected0]
                            NAME b 2 [sourcename: expected0]
                RETURN 3 [sourcename: expected0]
                    NAME a 3 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        FUNCTION  1 [sourcename: testcode]
            NAME FUNC 1 [sourcename: testcode]
            LP 1 [sourcename: testcode]
                NAME param1 1 [sourcename: testcode]
                NAME param2 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                VAR 1 [sourcename: testcode]
                    NAME a 1 [sourcename: testcode]
                    NAME b 1 [sourcename: testcode]
                EXPR_RESULT 2 [sourcename: testcode]
                    AND 2 [sourcename: testcode]
                        OR 2 [sourcename: testcode] [parenthesized: true]
                            CALL 2 [sourcename: testcode] [free_call: 1]
                                NAME f 2 [sourcename: testcode]
                                TRUE 2 [sourcename: testcode]
                            CALL 2 [sourcename: testcode] [free_call: 1]
                                NAME f 2 [sourcename: testcode]
                                ASSIGN 2 [sourcename: testcode]
                                    NAME b 2 [sourcename: testcode]
                                    FALSE 2 [sourcename: testcode]
                        ASSIGN 2 [sourcename: testcode] [parenthesized: true]
                            NAME a 2 [sourcename: testcode]
                            NAME b 2 [sourcename: testcode]
                RETURN 3 [sourcename: testcode]
                    NAME a 3 [sourcename: testcode]


Subtree1: ASSIGN 2 [sourcename: expected0]
    NAME b 2 [sourcename: expected0]
    TRUE 2 [sourcename: expected0]


Subtree2: TRUE 2 [sourcename: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:843)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:410)
junit.framework.AssertionFailedError: 
Expected: function FUNC(param1,param2){var a;a=1;if(2||(a=3)||a);}
Result: function FUNC(param1,param2){var a;a=1;if((a=2)||(a=3)||a);}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        FUNCTION  1 [sourcename: expected0]
            NAME FUNC 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
                NAME param1 1 [sourcename: expected0]
                NAME param2 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                VAR 1 [sourcename: expected0]
                    NAME a 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    ASSIGN 1 [sourcename: expected0]
                        NAME a 1 [sourcename: expected0]
                        NUMBER 1.0 1 [sourcename: expected0]
                IF 1 [sourcename: expected0]
                    OR 1 [sourcename: expected0]
                        NUMBER 2.0 1 [sourcename: expected0] [parenthesized: true]
                        OR 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0] [parenthesized: true]
                                NAME a 1 [sourcename: expected0]
                                NUMBER 3.0 1 [sourcename: expected0]
                            NAME a 1 [sourcename: expected0] [parenthesized: true]
                    BLOCK 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        FUNCTION  1 [sourcename: testcode]
            NAME FUNC 1 [sourcename: testcode]
            LP 1 [sourcename: testcode]
                NAME param1 1 [sourcename: testcode]
                NAME param2 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                VAR 1 [sourcename: testcode]
                    NAME a 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    ASSIGN 1 [sourcename: testcode]
                        NAME a 1 [sourcename: testcode]
                        NUMBER 1.0 1 [sourcename: testcode]
                IF 1 [sourcename: testcode]
                    OR 1 [sourcename: testcode]
                        ASSIGN 1 [sourcename: testcode] [parenthesized: true]
                            NAME a 1 [sourcename: testcode]
                            NUMBER 2.0 1 [sourcename: testcode]
                        OR 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode] [parenthesized: true]
                                NAME a 1 [sourcename: testcode]
                                NUMBER 3.0 1 [sourcename: testcode]
                            NAME a 1 [sourcename: testcode] [parenthesized: true]
                    BLOCK 1 [sourcename: testcode]


Subtree1: NUMBER 2.0 1 [sourcename: expected0] [parenthesized: true]


Subtree2: ASSIGN 1 [sourcename: testcode] [parenthesized: true]
    NAME a 1 [sourcename: testcode]
    NUMBER 2.0 1 [sourcename: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:843)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:410)
junit.framework.AssertionFailedError: 
Expected: function FUNC(param1,param2){var a,b;f(b=true)||f(b=false)?a=b:a=null;return a}
Result: function FUNC(param1,param2){var a,b;f(true)||f(b=false)?a=b:a=null;return a}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        FUNCTION  1 [sourcename: expected0]
            NAME FUNC 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
                NAME param1 1 [sourcename: expected0]
                NAME param2 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                VAR 1 [sourcename: expected0]
                    NAME a 1 [sourcename: expected0]
                    NAME b 1 [sourcename: expected0]
                EXPR_RESULT 2 [sourcename: expected0]
                    HOOK 2 [sourcename: expected0]
                        OR 2 [sourcename: expected0] [parenthesized: true]
                            CALL 2 [sourcename: expected0] [free_call: 1]
                                NAME f 2 [sourcename: expected0]
                                ASSIGN 2 [sourcename: expected0]
                                    NAME b 2 [sourcename: expected0]
                                    TRUE 2 [sourcename: expected0]
                            CALL 2 [sourcename: expected0] [free_call: 1]
                                NAME f 2 [sourcename: expected0]
                                ASSIGN 2 [sourcename: expected0]
                                    NAME b 2 [sourcename: expected0]
                                    FALSE 2 [sourcename: expected0]
                        ASSIGN 2 [sourcename: expected0] [parenthesized: true]
                            NAME a 2 [sourcename: expected0]
                            NAME b 2 [sourcename: expected0]
                        ASSIGN 2 [sourcename: expected0] [parenthesized: true]
                            NAME a 2 [sourcename: expected0]
                            NULL 2 [sourcename: expected0]
                RETURN 3 [sourcename: expected0]
                    NAME a 3 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        FUNCTION  1 [sourcename: testcode]
            NAME FUNC 1 [sourcename: testcode]
            LP 1 [sourcename: testcode]
                NAME param1 1 [sourcename: testcode]
                NAME param2 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                VAR 1 [sourcename: testcode]
                    NAME a 1 [sourcename: testcode]
                    NAME b 1 [sourcename: testcode]
                EXPR_RESULT 2 [sourcename: testcode]
                    HOOK 2 [sourcename: testcode]
                        OR 2 [sourcename: testcode] [parenthesized: true]
                            CALL 2 [sourcename: testcode] [free_call: 1]
                                NAME f 2 [sourcename: testcode]
                                TRUE 2 [sourcename: testcode]
                            CALL 2 [sourcename: testcode] [free_call: 1]
                                NAME f 2 [sourcename: testcode]
                                ASSIGN 2 [sourcename: testcode]
                                    NAME b 2 [sourcename: testcode]
                                    FALSE 2 [sourcename: testcode]
                        ASSIGN 2 [sourcename: testcode] [parenthesized: true]
                            NAME a 2 [sourcename: testcode]
                            NAME b 2 [sourcename: testcode]
                        ASSIGN 2 [sourcename: testcode] [parenthesized: true]
                            NAME a 2 [sourcename: testcode]
                            NULL 2 [sourcename: testcode]
                RETURN 3 [sourcename: testcode]
                    NAME a 3 [sourcename: testcode]


Subtree1: ASSIGN 2 [sourcename: expected0]
    NAME b 2 [sourcename: expected0]
    TRUE 2 [sourcename: expected0]


Subtree2: TRUE 2 [sourcename: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:843)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:410)
junit.framework.AssertionFailedError: 
Expected: function FUNC(param1,param2){var a,b;(a?f(b=true):f(b=false))&&(a=b);return a}
Result: function FUNC(param1,param2){var a,b;(a?f(true):f(b=false))&&(a=b);return a}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        FUNCTION  1 [sourcename: expected0]
            NAME FUNC 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
                NAME param1 1 [sourcename: expected0]
                NAME param2 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                VAR 1 [sourcename: expected0]
                    NAME a 1 [sourcename: expected0]
                    NAME b 1 [sourcename: expected0]
                EXPR_RESULT 2 [sourcename: expected0]
                    AND 2 [sourcename: expected0]
                        HOOK 2 [sourcename: expected0] [parenthesized: true]
                            NAME a 2 [sourcename: expected0]
                            CALL 2 [sourcename: expected0] [free_call: 1]
                                NAME f 2 [sourcename: expected0]
                                ASSIGN 2 [sourcename: expected0]
                                    NAME b 2 [sourcename: expected0]
                                    TRUE 2 [sourcename: expected0]
                            CALL 2 [sourcename: expected0] [free_call: 1]
                                NAME f 2 [sourcename: expected0]
                                ASSIGN 2 [sourcename: expected0]
                                    NAME b 2 [sourcename: expected0]
                                    FALSE 2 [sourcename: expected0]
                        ASSIGN 2 [sourcename: expected0] [parenthesized: true]
                            NAME a 2 [sourcename: expected0]
                            NAME b 2 [sourcename: expected0]
                RETURN 3 [sourcename: expected0]
                    NAME a 3 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        FUNCTION  1 [sourcename: testcode]
            NAME FUNC 1 [sourcename: testcode]
            LP 1 [sourcename: testcode]
                NAME param1 1 [sourcename: testcode]
                NAME param2 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                VAR 1 [sourcename: testcode]
                    NAME a 1 [sourcename: testcode]
                    NAME b 1 [sourcename: testcode]
                EXPR_RESULT 2 [sourcename: testcode]
                    AND 2 [sourcename: testcode]
                        HOOK 2 [sourcename: testcode] [parenthesized: true]
                            NAME a 2 [sourcename: testcode]
                            CALL 2 [sourcename: testcode] [free_call: 1]
                                NAME f 2 [sourcename: testcode]
                                TRUE 2 [sourcename: testcode]
                            CALL 2 [sourcename: testcode] [free_call: 1]
                                NAME f 2 [sourcename: testcode]
                                ASSIGN 2 [sourcename: testcode]
                                    NAME b 2 [sourcename: testcode]
                                    FALSE 2 [sourcename: testcode]
                        ASSIGN 2 [sourcename: testcode] [parenthesized: true]
                            NAME a 2 [sourcename: testcode]
                            NAME b 2 [sourcename: testcode]
                RETURN 3 [sourcename: testcode]
                    NAME a 3 [sourcename: testcode]


Subtree1: ASSIGN 2 [sourcename: expected0]
    NAME b 2 [sourcename: expected0]
    TRUE 2 [sourcename: expected0]


Subtree2: TRUE 2 [sourcename: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:843)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:410)
junit.framework.AssertionFailedError: 
Expected: function FUNC(param1,param2){var a,b;(f(b=true)||f(b=false))&&(a=b);return a}
Result: function FUNC(param1,param2){var a,b;(f(true)||f(b=false))&&(a=b);return a}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        FUNCTION  1 [sourcename: expected0]
            NAME FUNC 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
                NAME param1 1 [sourcename: expected0]
                NAME param2 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                VAR 1 [sourcename: expected0]
                    NAME a 1 [sourcename: expected0]
                    NAME b 1 [sourcename: expected0]
                EXPR_RESULT 2 [sourcename: expected0]
                    AND 2 [sourcename: expected0]
                        OR 2 [sourcename: expected0] [parenthesized: true]
                            CALL 2 [sourcename: expected0] [free_call: 1]
                                NAME f 2 [sourcename: expected0]
                                ASSIGN 2 [sourcename: expected0]
                                    NAME b 2 [sourcename: expected0]
                                    TRUE 2 [sourcename: expected0]
                            CALL 2 [sourcename: expected0] [free_call: 1]
                                NAME f 2 [sourcename: expected0]
                                ASSIGN 2 [sourcename: expected0]
                                    NAME b 2 [sourcename: expected0]
                                    FALSE 2 [sourcename: expected0]
                        ASSIGN 2 [sourcename: expected0] [parenthesized: true]
                            NAME a 2 [sourcename: expected0]
                            NAME b 2 [sourcename: expected0]
                RETURN 3 [sourcename: expected0]
                    NAME a 3 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        FUNCTION  1 [sourcename: testcode]
            NAME FUNC 1 [sourcename: testcode]
            LP 1 [sourcename: testcode]
                NAME param1 1 [sourcename: testcode]
                NAME param2 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                VAR 1 [sourcename: testcode]
                    NAME a 1 [sourcename: testcode]
                    NAME b 1 [sourcename: testcode]
                EXPR_RESULT 2 [sourcename: testcode]
                    AND 2 [sourcename: testcode]
                        OR 2 [sourcename: testcode] [parenthesized: true]
                            CALL 2 [sourcename: testcode] [free_call: 1]
                                NAME f 2 [sourcename: testcode]
                                TRUE 2 [sourcename: testcode]
                            CALL 2 [sourcename: testcode] [free_call: 1]
                                NAME f 2 [sourcename: testcode]
                                ASSIGN 2 [sourcename: testcode]
                                    NAME b 2 [sourcename: testcode]
                                    FALSE 2 [sourcename: testcode]
                        ASSIGN 2 [sourcename: testcode] [parenthesized: true]
                            NAME a 2 [sourcename: testcode]
                            NAME b 2 [sourcename: testcode]
                RETURN 3 [sourcename: testcode]
                    NAME a 3 [sourcename: testcode]


Subtree1: ASSIGN 2 [sourcename: expected0]
    NAME b 2 [sourcename: expected0]
    TRUE 2 [sourcename: expected0]


Subtree2: TRUE 2 [sourcename: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:843)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:410)
junit.framework.AssertionFailedError: 
Expected: function FUNC(param1,param2){var a;a=1;if(2||(a=3)||a);}
Result: function FUNC(param1,param2){var a;a=1;if((a=2)||(a=3)||a);}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        FUNCTION  1 [sourcename: expected0]
            NAME FUNC 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
                NAME param1 1 [sourcename: expected0]
                NAME param2 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                VAR 1 [sourcename: expected0]
                    NAME a 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    ASSIGN 1 [sourcename: expected0]
                        NAME a 1 [sourcename: expected0]
                        NUMBER 1.0 1 [sourcename: expected0]
                IF 1 [sourcename: expected0]
                    OR 1 [sourcename: expected0]
                        NUMBER 2.0 1 [sourcename: expected0] [parenthesized: true]
                        OR 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0] [parenthesized: true]
                                NAME a 1 [sourcename: expected0]
                                NUMBER 3.0 1 [sourcename: expected0]
                            NAME a 1 [sourcename: expected0] [parenthesized: true]
                    BLOCK 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        FUNCTION  1 [sourcename: testcode]
            NAME FUNC 1 [sourcename: testcode]
            LP 1 [sourcename: testcode]
                NAME param1 1 [sourcename: testcode]
                NAME param2 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                VAR 1 [sourcename: testcode]
                    NAME a 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    ASSIGN 1 [sourcename: testcode]
                        NAME a 1 [sourcename: testcode]
                        NUMBER 1.0 1 [sourcename: testcode]
                IF 1 [sourcename: testcode]
                    OR 1 [sourcename: testcode]
                        ASSIGN 1 [sourcename: testcode] [parenthesized: true]
                            NAME a 1 [sourcename: testcode]
                            NUMBER 2.0 1 [sourcename: testcode]
                        OR 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode] [parenthesized: true]
                                NAME a 1 [sourcename: testcode]
                                NUMBER 3.0 1 [sourcename: testcode]
                            NAME a 1 [sourcename: testcode] [parenthesized: true]
                    BLOCK 1 [sourcename: testcode]


Subtree1: NUMBER 2.0 1 [sourcename: expected0] [parenthesized: true]


Subtree2: ASSIGN 1 [sourcename: testcode] [parenthesized: true]
    NAME a 1 [sourcename: testcode]
    NUMBER 2.0 1 [sourcename: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:843)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:410)
junit.framework.AssertionFailedError: 
Expected: function FUNC(param1,param2){var a,b;f(b=true)||f(b=false)?a=b:a=null;return a}
Result: function FUNC(param1,param2){var a,b;f(true)||f(b=false)?a=b:a=null;return a}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        FUNCTION  1 [sourcename: expected0]
            NAME FUNC 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
                NAME param1 1 [sourcename: expected0]
                NAME param2 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                VAR 1 [sourcename: expected0]
                    NAME a 1 [sourcename: expected0]
                    NAME b 1 [sourcename: expected0]
                EXPR_RESULT 2 [sourcename: expected0]
                    HOOK 2 [sourcename: expected0]
                        OR 2 [sourcename: expected0] [parenthesized: true]
                            CALL 2 [sourcename: expected0] [free_call: 1]
                                NAME f 2 [sourcename: expected0]
                                ASSIGN 2 [sourcename: expected0]
                                    NAME b 2 [sourcename: expected0]
                                    TRUE 2 [sourcename: expected0]
                            CALL 2 [sourcename: expected0] [free_call: 1]
                                NAME f 2 [sourcename: expected0]
                                ASSIGN 2 [sourcename: expected0]
                                    NAME b 2 [sourcename: expected0]
                                    FALSE 2 [sourcename: expected0]
                        ASSIGN 2 [sourcename: expected0] [parenthesized: true]
                            NAME a 2 [sourcename: expected0]
                            NAME b 2 [sourcename: expected0]
                        ASSIGN 2 [sourcename: expected0] [parenthesized: true]
                            NAME a 2 [sourcename: expected0]
                            NULL 2 [sourcename: expected0]
                RETURN 3 [sourcename: expected0]
                    NAME a 3 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        FUNCTION  1 [sourcename: testcode]
            NAME FUNC 1 [sourcename: testcode]
            LP 1 [sourcename: testcode]
                NAME param1 1 [sourcename: testcode]
                NAME param2 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                VAR 1 [sourcename: testcode]
                    NAME a 1 [sourcename: testcode]
                    NAME b 1 [sourcename: testcode]
                EXPR_RESULT 2 [sourcename: testcode]
                    HOOK 2 [sourcename: testcode]
                        OR 2 [sourcename: testcode] [parenthesized: true]
                            CALL 2 [sourcename: testcode] [free_call: 1]
                                NAME f 2 [sourcename: testcode]
                                TRUE 2 [sourcename: testcode]
                            CALL 2 [sourcename: testcode] [free_call: 1]
                                NAME f 2 [sourcename: testcode]
                                ASSIGN 2 [sourcename: testcode]
                                    NAME b 2 [sourcename: testcode]
                                    FALSE 2 [sourcename: testcode]
                        ASSIGN 2 [sourcename: testcode] [parenthesized: true]
                            NAME a 2 [sourcename: testcode]
                            NAME b 2 [sourcename: testcode]
                        ASSIGN 2 [sourcename: testcode] [parenthesized: true]
                            NAME a 2 [sourcename: testcode]
                            NULL 2 [sourcename: testcode]
                RETURN 3 [sourcename: testcode]
                    NAME a 3 [sourcename: testcode]


Subtree1: ASSIGN 2 [sourcename: expected0]
    NAME b 2 [sourcename: expected0]
    TRUE 2 [sourcename: expected0]


Subtree2: TRUE 2 [sourcename: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:843)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:410)
junit.framework.AssertionFailedError: 
Expected: function FUNC(param1,param2){var a,b;(a?f(b=true):f(b=false))&&(a=b);return a}
Result: function FUNC(param1,param2){var a,b;(a?f(true):f(b=false))&&(a=b);return a}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        FUNCTION  1 [sourcename: expected0]
            NAME FUNC 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
                NAME param1 1 [sourcename: expected0]
                NAME param2 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                VAR 1 [sourcename: expected0]
                    NAME a 1 [sourcename: expected0]
                    NAME b 1 [sourcename: expected0]
                EXPR_RESULT 2 [sourcename: expected0]
                    AND 2 [sourcename: expected0]
                        HOOK 2 [sourcename: expected0] [parenthesized: true]
                            NAME a 2 [sourcename: expected0]
                            CALL 2 [sourcename: expected0] [free_call: 1]
                                NAME f 2 [sourcename: expected0]
                                ASSIGN 2 [sourcename: expected0]
                                    NAME b 2 [sourcename: expected0]
                                    TRUE 2 [sourcename: expected0]
                            CALL 2 [sourcename: expected0] [free_call: 1]
                                NAME f 2 [sourcename: expected0]
                                ASSIGN 2 [sourcename: expected0]
                                    NAME b 2 [sourcename: expected0]
                                    FALSE 2 [sourcename: expected0]
                        ASSIGN 2 [sourcename: expected0] [parenthesized: true]
                            NAME a 2 [sourcename: expected0]
                            NAME b 2 [sourcename: expected0]
                RETURN 3 [sourcename: expected0]
                    NAME a 3 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        FUNCTION  1 [sourcename: testcode]
            NAME FUNC 1 [sourcename: testcode]
            LP 1 [sourcename: testcode]
                NAME param1 1 [sourcename: testcode]
                NAME param2 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                VAR 1 [sourcename: testcode]
                    NAME a 1 [sourcename: testcode]
                    NAME b 1 [sourcename: testcode]
                EXPR_RESULT 2 [sourcename: testcode]
                    AND 2 [sourcename: testcode]
                        HOOK 2 [sourcename: testcode] [parenthesized: true]
                            NAME a 2 [sourcename: testcode]
                            CALL 2 [sourcename: testcode] [free_call: 1]
                                NAME f 2 [sourcename: testcode]
                                TRUE 2 [sourcename: testcode]
                            CALL 2 [sourcename: testcode] [free_call: 1]
                                NAME f 2 [sourcename: testcode]
                                ASSIGN 2 [sourcename: testcode]
                                    NAME b 2 [sourcename: testcode]
                                    FALSE 2 [sourcename: testcode]
                        ASSIGN 2 [sourcename: testcode] [parenthesized: true]
                            NAME a 2 [sourcename: testcode]
                            NAME b 2 [sourcename: testcode]
                RETURN 3 [sourcename: testcode]
                    NAME a 3 [sourcename: testcode]


Subtree1: ASSIGN 2 [sourcename: expected0]
    NAME b 2 [sourcename: expected0]
    TRUE 2 [sourcename: expected0]


Subtree2: TRUE 2 [sourcename: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:843)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:410)
junit.framework.AssertionFailedError: 
Expected: function FUNC(param1,param2){var a,b;(f(b=true)||f(b=false))&&(a=b);return a}
Result: function FUNC(param1,param2){var a,b;(f(true)||f(b=false))&&(a=b);return a}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        FUNCTION  1 [sourcename: expected0]
            NAME FUNC 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
                NAME param1 1 [sourcename: expected0]
                NAME param2 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                VAR 1 [sourcename: expected0]
                    NAME a 1 [sourcename: expected0]
                    NAME b 1 [sourcename: expected0]
                EXPR_RESULT 2 [sourcename: expected0]
                    AND 2 [sourcename: expected0]
                        OR 2 [sourcename: expected0] [parenthesized: true]
                            CALL 2 [sourcename: expected0] [free_call: 1]
                                NAME f 2 [sourcename: expected0]
                                ASSIGN 2 [sourcename: expected0]
                                    NAME b 2 [sourcename: expected0]
                                    TRUE 2 [sourcename: expected0]
                            CALL 2 [sourcename: expected0] [free_call: 1]
                                NAME f 2 [sourcename: expected0]
                                ASSIGN 2 [sourcename: expected0]
                                    NAME b 2 [sourcename: expected0]
                                    FALSE 2 [sourcename: expected0]
                        ASSIGN 2 [sourcename: expected0] [parenthesized: true]
                            NAME a 2 [sourcename: expected0]
                            NAME b 2 [sourcename: expected0]
                RETURN 3 [sourcename: expected0]
                    NAME a 3 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        FUNCTION  1 [sourcename: testcode]
            NAME FUNC 1 [sourcename: testcode]
            LP 1 [sourcename: testcode]
                NAME param1 1 [sourcename: testcode]
                NAME param2 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                VAR 1 [sourcename: testcode]
                    NAME a 1 [sourcename: testcode]
                    NAME b 1 [sourcename: testcode]
                EXPR_RESULT 2 [sourcename: testcode]
                    AND 2 [sourcename: testcode]
                        OR 2 [sourcename: testcode] [parenthesized: true]
                            CALL 2 [sourcename: testcode] [free_call: 1]
                                NAME f 2 [sourcename: testcode]
                                TRUE 2 [sourcename: testcode]
                            CALL 2 [sourcename: testcode] [free_call: 1]
                                NAME f 2 [sourcename: testcode]
                                ASSIGN 2 [sourcename: testcode]
                                    NAME b 2 [sourcename: testcode]
                                    FALSE 2 [sourcename: testcode]
                        ASSIGN 2 [sourcename: testcode] [parenthesized: true]
                            NAME a 2 [sourcename: testcode]
                            NAME b 2 [sourcename: testcode]
                RETURN 3 [sourcename: testcode]
                    NAME a 3 [sourcename: testcode]


Subtree1: ASSIGN 2 [sourcename: expected0]
    NAME b 2 [sourcename: expected0]
    TRUE 2 [sourcename: expected0]


Subtree2: TRUE 2 [sourcename: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:843)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:410)
junit.framework.AssertionFailedError: 
Expected: function FUNC(param1,param2){var a;a=1;if(2||(a=3)||a);}
Result: function FUNC(param1,param2){var a;a=1;if((a=2)||(a=3)||a);}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        FUNCTION  1 [sourcename: expected0]
            NAME FUNC 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
                NAME param1 1 [sourcename: expected0]
                NAME param2 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                VAR 1 [sourcename: expected0]
                    NAME a 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    ASSIGN 1 [sourcename: expected0]
                        NAME a 1 [sourcename: expected0]
                        NUMBER 1.0 1 [sourcename: expected0]
                IF 1 [sourcename: expected0]
                    OR 1 [sourcename: expected0]
                        NUMBER 2.0 1 [sourcename: expected0] [parenthesized: true]
                        OR 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0] [parenthesized: true]
                                NAME a 1 [sourcename: expected0]
                                NUMBER 3.0 1 [sourcename: expected0]
                            NAME a 1 [sourcename: expected0] [parenthesized: true]
                    BLOCK 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        FUNCTION  1 [sourcename: testcode]
            NAME FUNC 1 [sourcename: testcode]
            LP 1 [sourcename: testcode]
                NAME param1 1 [sourcename: testcode]
                NAME param2 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                VAR 1 [sourcename: testcode]
                    NAME a 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    ASSIGN 1 [sourcename: testcode]
                        NAME a 1 [sourcename: testcode]
                        NUMBER 1.0 1 [sourcename: testcode]
                IF 1 [sourcename: testcode]
                    OR 1 [sourcename: testcode]
                        ASSIGN 1 [sourcename: testcode] [parenthesized: true]
                            NAME a 1 [sourcename: testcode]
                            NUMBER 2.0 1 [sourcename: testcode]
                        OR 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode] [parenthesized: true]
                                NAME a 1 [sourcename: testcode]
                                NUMBER 3.0 1 [sourcename: testcode]
                            NAME a 1 [sourcename: testcode] [parenthesized: true]
                    BLOCK 1 [sourcename: testcode]


Subtree1: NUMBER 2.0 1 [sourcename: expected0] [parenthesized: true]


Subtree2: ASSIGN 1 [sourcename: testcode] [parenthesized: true]
    NAME a 1 [sourcename: testcode]
    NUMBER 2.0 1 [sourcename: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:843)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:410)
junit.framework.AssertionFailedError: 
Expected: function FUNC(param1,param2){var a,b;f(b=true)||f(b=false)?a=b:a=null;return a}
Result: function FUNC(param1,param2){var a,b;f(true)||f(b=false)?a=b:a=null;return a}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        FUNCTION  1 [sourcename: expected0]
            NAME FUNC 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
                NAME param1 1 [sourcename: expected0]
                NAME param2 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                VAR 1 [sourcename: expected0]
                    NAME a 1 [sourcename: expected0]
                    NAME b 1 [sourcename: expected0]
                EXPR_RESULT 2 [sourcename: expected0]
                    HOOK 2 [sourcename: expected0]
                        OR 2 [sourcename: expected0] [parenthesized: true]
                            CALL 2 [sourcename: expected0] [free_call: 1]
                                NAME f 2 [sourcename: expected0]
                                ASSIGN 2 [sourcename: expected0]
                                    NAME b 2 [sourcename: expected0]
                                    TRUE 2 [sourcename: expected0]
                            CALL 2 [sourcename: expected0] [free_call: 1]
                                NAME f 2 [sourcename: expected0]
                                ASSIGN 2 [sourcename: expected0]
                                    NAME b 2 [sourcename: expected0]
                                    FALSE 2 [sourcename: expected0]
                        ASSIGN 2 [sourcename: expected0] [parenthesized: true]
                            NAME a 2 [sourcename: expected0]
                            NAME b 2 [sourcename: expected0]
                        ASSIGN 2 [sourcename: expected0] [parenthesized: true]
                            NAME a 2 [sourcename: expected0]
                            NULL 2 [sourcename: expected0]
                RETURN 3 [sourcename: expected0]
                    NAME a 3 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        FUNCTION  1 [sourcename: testcode]
            NAME FUNC 1 [sourcename: testcode]
            LP 1 [sourcename: testcode]
                NAME param1 1 [sourcename: testcode]
                NAME param2 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                VAR 1 [sourcename: testcode]
                    NAME a 1 [sourcename: testcode]
                    NAME b 1 [sourcename: testcode]
                EXPR_RESULT 2 [sourcename: testcode]
                    HOOK 2 [sourcename: testcode]
                        OR 2 [sourcename: testcode] [parenthesized: true]
                            CALL 2 [sourcename: testcode] [free_call: 1]
                                NAME f 2 [sourcename: testcode]
                                TRUE 2 [sourcename: testcode]
                            CALL 2 [sourcename: testcode] [free_call: 1]
                                NAME f 2 [sourcename: testcode]
                                ASSIGN 2 [sourcename: testcode]
                                    NAME b 2 [sourcename: testcode]
                                    FALSE 2 [sourcename: testcode]
                        ASSIGN 2 [sourcename: testcode] [parenthesized: true]
                            NAME a 2 [sourcename: testcode]
                            NAME b 2 [sourcename: testcode]
                        ASSIGN 2 [sourcename: testcode] [parenthesized: true]
                            NAME a 2 [sourcename: testcode]
                            NULL 2 [sourcename: testcode]
                RETURN 3 [sourcename: testcode]
                    NAME a 3 [sourcename: testcode]


Subtree1: ASSIGN 2 [sourcename: expected0]
    NAME b 2 [sourcename: expected0]
    TRUE 2 [sourcename: expected0]


Subtree2: TRUE 2 [sourcename: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:843)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:410)
junit.framework.AssertionFailedError: 
Expected: function FUNC(param1,param2){var a,b;(a?f(b=true):f(b=false))&&(a=b);return a}
Result: function FUNC(param1,param2){var a,b;(a?f(true):f(b=false))&&(a=b);return a}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        FUNCTION  1 [sourcename: expected0]
            NAME FUNC 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
                NAME param1 1 [sourcename: expected0]
                NAME param2 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                VAR 1 [sourcename: expected0]
                    NAME a 1 [sourcename: expected0]
                    NAME b 1 [sourcename: expected0]
                EXPR_RESULT 2 [sourcename: expected0]
                    AND 2 [sourcename: expected0]
                        HOOK 2 [sourcename: expected0] [parenthesized: true]
                            NAME a 2 [sourcename: expected0]
                            CALL 2 [sourcename: expected0] [free_call: 1]
                                NAME f 2 [sourcename: expected0]
                                ASSIGN 2 [sourcename: expected0]
                                    NAME b 2 [sourcename: expected0]
                                    TRUE 2 [sourcename: expected0]
                            CALL 2 [sourcename: expected0] [free_call: 1]
                                NAME f 2 [sourcename: expected0]
                                ASSIGN 2 [sourcename: expected0]
                                    NAME b 2 [sourcename: expected0]
                                    FALSE 2 [sourcename: expected0]
                        ASSIGN 2 [sourcename: expected0] [parenthesized: true]
                            NAME a 2 [sourcename: expected0]
                            NAME b 2 [sourcename: expected0]
                RETURN 3 [sourcename: expected0]
                    NAME a 3 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        FUNCTION  1 [sourcename: testcode]
            NAME FUNC 1 [sourcename: testcode]
            LP 1 [sourcename: testcode]
                NAME param1 1 [sourcename: testcode]
                NAME param2 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                VAR 1 [sourcename: testcode]
                    NAME a 1 [sourcename: testcode]
                    NAME b 1 [sourcename: testcode]
                EXPR_RESULT 2 [sourcename: testcode]
                    AND 2 [sourcename: testcode]
                        HOOK 2 [sourcename: testcode] [parenthesized: true]
                            NAME a 2 [sourcename: testcode]
                            CALL 2 [sourcename: testcode] [free_call: 1]
                                NAME f 2 [sourcename: testcode]
                                TRUE 2 [sourcename: testcode]
                            CALL 2 [sourcename: testcode] [free_call: 1]
                                NAME f 2 [sourcename: testcode]
                                ASSIGN 2 [sourcename: testcode]
                                    NAME b 2 [sourcename: testcode]
                                    FALSE 2 [sourcename: testcode]
                        ASSIGN 2 [sourcename: testcode] [parenthesized: true]
                            NAME a 2 [sourcename: testcode]
                            NAME b 2 [sourcename: testcode]
                RETURN 3 [sourcename: testcode]
                    NAME a 3 [sourcename: testcode]


Subtree1: ASSIGN 2 [sourcename: expected0]
    NAME b 2 [sourcename: expected0]
    TRUE 2 [sourcename: expected0]


Subtree2: TRUE 2 [sourcename: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:843)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:410)
junit.framework.AssertionFailedError: 
Expected: function FUNC(param1,param2){var a,b;(f(b=true)||f(b=false))&&(a=b);return a}
Result: function FUNC(param1,param2){var a,b;(f(true)||f(b=false))&&(a=b);return a}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        FUNCTION  1 [sourcename: expected0]
            NAME FUNC 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
                NAME param1 1 [sourcename: expected0]
                NAME param2 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                VAR 1 [sourcename: expected0]
                    NAME a 1 [sourcename: expected0]
                    NAME b 1 [sourcename: expected0]
                EXPR_RESULT 2 [sourcename: expected0]
                    AND 2 [sourcename: expected0]
                        OR 2 [sourcename: expected0] [parenthesized: true]
                            CALL 2 [sourcename: expected0] [free_call: 1]
                                NAME f 2 [sourcename: expected0]
                                ASSIGN 2 [sourcename: expected0]
                                    NAME b 2 [sourcename: expected0]
                                    TRUE 2 [sourcename: expected0]
                            CALL 2 [sourcename: expected0] [free_call: 1]
                                NAME f 2 [sourcename: expected0]
                                ASSIGN 2 [sourcename: expected0]
                                    NAME b 2 [sourcename: expected0]
                                    FALSE 2 [sourcename: expected0]
                        ASSIGN 2 [sourcename: expected0] [parenthesized: true]
                            NAME a 2 [sourcename: expected0]
                            NAME b 2 [sourcename: expected0]
                RETURN 3 [sourcename: expected0]
                    NAME a 3 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        FUNCTION  1 [sourcename: testcode]
            NAME FUNC 1 [sourcename: testcode]
            LP 1 [sourcename: testcode]
                NAME param1 1 [sourcename: testcode]
                NAME param2 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                VAR 1 [sourcename: testcode]
                    NAME a 1 [sourcename: testcode]
                    NAME b 1 [sourcename: testcode]
                EXPR_RESULT 2 [sourcename: testcode]
                    AND 2 [sourcename: testcode]
                        OR 2 [sourcename: testcode] [parenthesized: true]
                            CALL 2 [sourcename: testcode] [free_call: 1]
                                NAME f 2 [sourcename: testcode]
                                TRUE 2 [sourcename: testcode]
                            CALL 2 [sourcename: testcode] [free_call: 1]
                                NAME f 2 [sourcename: testcode]
                                ASSIGN 2 [sourcename: testcode]
                                    NAME b 2 [sourcename: testcode]
                                    FALSE 2 [sourcename: testcode]
                        ASSIGN 2 [sourcename: testcode] [parenthesized: true]
                            NAME a 2 [sourcename: testcode]
                            NAME b 2 [sourcename: testcode]
                RETURN 3 [sourcename: testcode]
                    NAME a 3 [sourcename: testcode]


Subtree1: ASSIGN 2 [sourcename: expected0]
    NAME b 2 [sourcename: expected0]
    TRUE 2 [sourcename: expected0]


Subtree2: TRUE 2 [sourcename: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:843)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:410)
18:29:25.020 [pool-18-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (717 ms)
<> Total tests run: 220
<> Ignored tests: 0
<> Failed tests: 20
~ testTwoMethods(com.google.javascript.jscomp.CrossModuleMethodMotionTest)
[
Expected: var JSCompiler_stubMap=[];function JSCompiler_stubMethod(JSCompiler_stubMethod_id){return function(){return JSCompiler_stubMap[JSCompiler_stubMethod_id].apply(this,arguments)}}function JSCompiler_unstubMethod(JSCompiler_unstubMethod_id,JSCompiler_unstubMethod_body){return JSCompiler_stubMap[JSCompiler_unstubMethod_id]=JSCompiler_unstubMethod_body}function Foo(){}Foo.prototype.baz=JSCompiler_stubMethod(1);Foo.prototype.callBaz=JSCompiler_stubMethod(0);Foo.prototype.baz=JSCompiler_unstubMethod(1,function(){});
Foo.prototype.callBaz=JSCompiler_unstubMethod(0,function(){this.baz()});(new Foo).callBaz()
Result: var JSCompiler_stubMap=[];function JSCompiler_stubMethod(JSCompiler_stubMethod_id){return function(){return JSCompiler_stubMap[JSCompiler_stubMethod_id].apply(this,arguments)}}function JSCompiler_unstubMethod(JSCompiler_unstubMethod_id,JSCompiler_unstubMethod_body){return JSCompiler_stubMap[JSCompiler_unstubMethod_id]=JSCompiler_unstubMethod_body}function Foo(){}Foo.prototype.baz=JSCompiler_stubMethod(0);Foo.prototype.callBaz=JSCompiler_stubMethod(1);
Foo.prototype.callBaz=JSCompiler_unstubMethod(1,function(){this.baz()});Foo.prototype.baz=JSCompiler_unstubMethod(0,function(){});(new Foo).callBaz()
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_stubMap 1 [sourcename: expected0]
                ARRAYLIT 1 [sourcename: expected0]
        FUNCTION  1 [sourcename: expected0]
            NAME JSCompiler_stubMethod 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
                NAME JSCompiler_stubMethod_id 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                RETURN 1 [sourcename: expected0]
                    FUNCTION  1 [sourcename: expected0]
                        NAME  1 [sourcename: expected0]
                        LP 1 [sourcename: expected0]
                        BLOCK 1 [sourcename: expected0]
                            RETURN 1 [sourcename: expected0]
                                CALL 1 [sourcename: expected0]
                                    GETPROP 1 [sourcename: expected0]
                                        GETELEM 1 [sourcename: expected0]
                                            NAME JSCompiler_stubMap 1 [sourcename: expected0]
                                            NAME JSCompiler_stubMethod_id 1 [sourcename: expected0]
                                        STRING apply 1 [sourcename: expected0]
                                    THIS 1 [sourcename: expected0]
                                    NAME arguments 1 [sourcename: expected0]
        FUNCTION  1 [sourcename: expected0]
            NAME JSCompiler_unstubMethod 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
                NAME JSCompiler_unstubMethod_id 1 [sourcename: expected0]
                NAME JSCompiler_unstubMethod_body 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                RETURN 1 [sourcename: expected0]
                    ASSIGN 1 [sourcename: expected0]
                        GETELEM 1 [sourcename: expected0]
                            NAME JSCompiler_stubMap 1 [sourcename: expected0]
                            NAME JSCompiler_unstubMethod_id 1 [sourcename: expected0]
                        NAME JSCompiler_unstubMethod_body 1 [sourcename: expected0]
        FUNCTION  1 [sourcename: expected0]
            NAME Foo 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            ASSIGN 1 [sourcename: expected0]
                GETPROP 1 [sourcename: expected0]
                    GETPROP 1 [sourcename: expected0]
                        NAME Foo 1 [sourcename: expected0]
                        STRING prototype 1 [sourcename: expected0]
                    STRING baz 1 [sourcename: expected0]
                CALL 1 [sourcename: expected0] [free_call: 1]
                    NAME JSCompiler_stubMethod 1 [sourcename: expected0]
                    NUMBER 1.0 1 [sourcename: expected0]
    SCRIPT 1 [sourcename: expected1] [synthetic: 1]
        EXPR_RESULT 1 [sourcename: expected1]
            ASSIGN 1 [sourcename: expected1]
                GETPROP 1 [sourcename: expected1]
                    GETPROP 1 [sourcename: expected1]
                        NAME Foo 1 [sourcename: expected1]
                        STRING prototype 1 [sourcename: expected1]
                    STRING callBaz 1 [sourcename: expected1]
                CALL 1 [sourcename: expected1] [free_call: 1]
                    NAME JSCompiler_stubMethod 1 [sourcename: expected1]
                    NUMBER 0.0 1 [sourcename: expected1]
    SCRIPT 1 [sourcename: expected2] [synthetic: 1]
        EXPR_RESULT 1 [sourcename: expected2]
            ASSIGN 1 [sourcename: expected2]
                GETPROP 1 [sourcename: expected2]
                    GETPROP 1 [sourcename: expected2]
                        NAME Foo 1 [sourcename: expected2]
                        STRING prototype 1 [sourcename: expected2]
                    STRING baz 1 [sourcename: expected2]
                CALL 1 [sourcename: expected2] [free_call: 1]
                    NAME JSCompiler_unstubMethod 1 [sourcename: expected2]
                    NUMBER 1.0 1 [sourcename: expected2]
                    FUNCTION  1 [sourcename: expected2]
                        NAME  1 [sourcename: expected2]
                        LP 1 [sourcename: expected2]
                        BLOCK 1 [sourcename: expected2]
        EXPR_RESULT 1 [sourcename: expected2]
            ASSIGN 1 [sourcename: expected2]
                GETPROP 1 [sourcename: expected2]
                    GETPROP 1 [sourcename: expected2]
                        NAME Foo 1 [sourcename: expected2]
                        STRING prototype 1 [sourcename: expected2]
                    STRING callBaz 1 [sourcename: expected2]
                CALL 1 [sourcename: expected2] [free_call: 1]
                    NAME JSCompiler_unstubMethod 1 [sourcename: expected2]
                    NUMBER 0.0 1 [sourcename: expected2]
                    FUNCTION  1 [sourcename: expected2]
                        NAME  1 [sourcename: expected2]
                        LP 1 [sourcename: expected2]
                        BLOCK 1 [sourcename: expected2]
                            EXPR_RESULT 1 [sourcename: expected2]
                                CALL 1 [sourcename: expected2]
                                    GETPROP 1 [sourcename: expected2]
                                        THIS 1 [sourcename: expected2]
                                        STRING baz 1 [sourcename: expected2]
        EXPR_RESULT 1 [sourcename: expected2]
            CALL 1 [sourcename: expected2]
                GETPROP 1 [sourcename: expected2]
                    NEW 1 [sourcename: expected2] [parenthesized: true]
                        NAME Foo 1 [sourcename: expected2]
                    STRING callBaz 1 [sourcename: expected2]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: i0] [synthetic: 1]
        VAR 1 [sourcename:  [synthetic] ]
            NAME JSCompiler_stubMap 1 [sourcename:  [synthetic] ]
                ARRAYLIT 1 [sourcename:  [synthetic] ]
        FUNCTION  1 [sourcename:  [synthetic] ]
            NAME JSCompiler_stubMethod 1 [sourcename:  [synthetic] ]
            LP 1 [sourcename:  [synthetic] ]
                NAME JSCompiler_stubMethod_id 1 [sourcename:  [synthetic] ]
            BLOCK 1 [sourcename:  [synthetic] ]
                RETURN 1 [sourcename:  [synthetic] ]
                    FUNCTION  1 [sourcename:  [synthetic] ]
                        NAME  1 [sourcename:  [synthetic] ]
                        LP 1 [sourcename:  [synthetic] ]
                        BLOCK 1 [sourcename:  [synthetic] ]
                            RETURN 1 [sourcename:  [synthetic] ]
                                CALL 1 [sourcename:  [synthetic] ]
                                    GETPROP 1 [sourcename:  [synthetic] ]
                                        GETELEM 1 [sourcename:  [synthetic] ]
                                            NAME JSCompiler_stubMap 1 [sourcename:  [synthetic] ]
                                            NAME JSCompiler_stubMethod_id 1 [sourcename:  [synthetic] ]
                                        STRING apply 1 [sourcename:  [synthetic] ]
                                    THIS 1 [sourcename:  [synthetic] ]
                                    NAME arguments 1 [sourcename:  [synthetic] ]
        FUNCTION  1 [sourcename:  [synthetic] ]
            NAME JSCompiler_unstubMethod 1 [sourcename:  [synthetic] ]
            LP 1 [sourcename:  [synthetic] ]
                NAME JSCompiler_unstubMethod_id 1 [sourcename:  [synthetic] ]
                NAME JSCompiler_unstubMethod_body 1 [sourcename:  [synthetic] ]
            BLOCK 1 [sourcename:  [synthetic] ]
                RETURN 1 [sourcename:  [synthetic] ]
                    ASSIGN 1 [sourcename:  [synthetic] ]
                        GETELEM 1 [sourcename:  [synthetic] ]
                            NAME JSCompiler_stubMap 1 [sourcename:  [synthetic] ]
                            NAME JSCompiler_unstubMethod_id 1 [sourcename:  [synthetic] ]
                        NAME JSCompiler_unstubMethod_body 1 [sourcename:  [synthetic] ]
        FUNCTION  1 [sourcename: i0]
            NAME Foo 1 [sourcename: i0]
            LP 1 [sourcename: i0]
            BLOCK 1 [sourcename: i0]
        EXPR_RESULT 1 [sourcename: i0]
            ASSIGN 1 [sourcename: i0]
                GETPROP 1 [sourcename: i0]
                    GETPROP 1 [sourcename: i0]
                        NAME Foo 1 [sourcename: i0]
                        STRING prototype 1 [sourcename: i0]
                    STRING baz 1 [sourcename: i0]
                CALL 1 [sourcename: i0]
                    NAME JSCompiler_stubMethod 1 [sourcename: i0]
                    NUMBER 0.0 1 [sourcename: i0]
    SCRIPT 1 [sourcename: i1] [synthetic: 1]
        EXPR_RESULT 1 [sourcename: i1]
            ASSIGN 1 [sourcename: i1]
                GETPROP 1 [sourcename: i1]
                    GETPROP 1 [sourcename: i1]
                        NAME Foo 1 [sourcename: i1]
                        STRING prototype 1 [sourcename: i1]
                    STRING callBaz 1 [sourcename: i1]
                CALL 1 [sourcename: i1]
                    NAME JSCompiler_stubMethod 1 [sourcename: i1]
                    NUMBER 1.0 1 [sourcename: i1]
    SCRIPT 1 [sourcename: i2] [synthetic: 1]
        EXPR_RESULT 1 [sourcename: i1]
            ASSIGN 1 [sourcename: i1]
                GETPROP 1 [sourcename: i1]
                    GETPROP 1 [sourcename: i1]
                        NAME Foo 1 [sourcename: i1]
                        STRING prototype 1 [sourcename: i1]
                    STRING callBaz 1 [sourcename: i1]
                CALL 1 [sourcename: i1]
                    NAME JSCompiler_unstubMethod 1 [sourcename: i1]
                    NUMBER 1.0 1 [sourcename: i1]
                    FUNCTION  1 [sourcename: i1]
                        NAME  1 [sourcename: i1]
                        LP 1 [sourcename: i1]
                        BLOCK 1 [sourcename: i1]
                            EXPR_RESULT 1 [sourcename: i1]
                                CALL 1 [sourcename: i1]
                                    GETPROP 1 [sourcename: i1]
                                        THIS 1 [sourcename: i1]
                                        STRING baz 1 [sourcename: i1]
        EXPR_RESULT 1 [sourcename: i0]
            ASSIGN 1 [sourcename: i0]
                GETPROP 1 [sourcename: i0]
                    GETPROP 1 [sourcename: i0]
                        NAME Foo 1 [sourcename: i0]
                        STRING prototype 1 [sourcename: i0]
                    STRING baz 1 [sourcename: i0]
                CALL 1 [sourcename: i0]
                    NAME JSCompiler_unstubMethod 1 [sourcename: i0]
                    NUMBER 0.0 1 [sourcename: i0]
                    FUNCTION  1 [sourcename: i0]
                        NAME  1 [sourcename: i0]
                        LP 1 [sourcename: i0]
                        BLOCK 1 [sourcename: i0]
        EXPR_RESULT 1 [sourcename: i2]
            CALL 1 [sourcename: i2]
                GETPROP 1 [sourcename: i2]
                    NEW 1 [sourcename: i2] [parenthesized: true]
                        NAME Foo 1 [sourcename: i2]
                    STRING callBaz 1 [sourcename: i2]


Subtree1: NUMBER 1.0 1 [sourcename: expected0]


Subtree2: NUMBER 0.0 1 [sourcename: i0]
]
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_stubMap=[];function JSCompiler_stubMethod(JSCompiler_stubMethod_id){return function(){return JSCompiler_stubMap[JSCompiler_stubMethod_id].apply(this,arguments)}}function JSCompiler_unstubMethod(JSCompiler_unstubMethod_id,JSCompiler_unstubMethod_body){return JSCompiler_stubMap[JSCompiler_unstubMethod_id]=JSCompiler_unstubMethod_body}function Foo(){}Foo.prototype.baz=JSCompiler_stubMethod(1);Foo.prototype.callBaz=JSCompiler_stubMethod(0);Foo.prototype.baz=JSCompiler_unstubMethod(1,function(){});
Foo.prototype.callBaz=JSCompiler_unstubMethod(0,function(){this.baz()});(new Foo).callBaz()
Result: var JSCompiler_stubMap=[];function JSCompiler_stubMethod(JSCompiler_stubMethod_id){return function(){return JSCompiler_stubMap[JSCompiler_stubMethod_id].apply(this,arguments)}}function JSCompiler_unstubMethod(JSCompiler_unstubMethod_id,JSCompiler_unstubMethod_body){return JSCompiler_stubMap[JSCompiler_unstubMethod_id]=JSCompiler_unstubMethod_body}function Foo(){}Foo.prototype.baz=JSCompiler_stubMethod(0);Foo.prototype.callBaz=JSCompiler_stubMethod(1);
Foo.prototype.callBaz=JSCompiler_unstubMethod(1,function(){this.baz()});Foo.prototype.baz=JSCompiler_unstubMethod(0,function(){});(new Foo).callBaz()
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_stubMap 1 [sourcename: expected0]
                ARRAYLIT 1 [sourcename: expected0]
        FUNCTION  1 [sourcename: expected0]
            NAME JSCompiler_stubMethod 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
                NAME JSCompiler_stubMethod_id 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                RETURN 1 [sourcename: expected0]
                    FUNCTION  1 [sourcename: expected0]
                        NAME  1 [sourcename: expected0]
                        LP 1 [sourcename: expected0]
                        BLOCK 1 [sourcename: expected0]
                            RETURN 1 [sourcename: expected0]
                                CALL 1 [sourcename: expected0]
                                    GETPROP 1 [sourcename: expected0]
                                        GETELEM 1 [sourcename: expected0]
                                            NAME JSCompiler_stubMap 1 [sourcename: expected0]
                                            NAME JSCompiler_stubMethod_id 1 [sourcename: expected0]
                                        STRING apply 1 [sourcename: expected0]
                                    THIS 1 [sourcename: expected0]
                                    NAME arguments 1 [sourcename: expected0]
        FUNCTION  1 [sourcename: expected0]
            NAME JSCompiler_unstubMethod 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
                NAME JSCompiler_unstubMethod_id 1 [sourcename: expected0]
                NAME JSCompiler_unstubMethod_body 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                RETURN 1 [sourcename: expected0]
                    ASSIGN 1 [sourcename: expected0]
                        GETELEM 1 [sourcename: expected0]
                            NAME JSCompiler_stubMap 1 [sourcename: expected0]
                            NAME JSCompiler_unstubMethod_id 1 [sourcename: expected0]
                        NAME JSCompiler_unstubMethod_body 1 [sourcename: expected0]
        FUNCTION  1 [sourcename: expected0]
            NAME Foo 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            ASSIGN 1 [sourcename: expected0]
                GETPROP 1 [sourcename: expected0]
                    GETPROP 1 [sourcename: expected0]
                        NAME Foo 1 [sourcename: expected0]
                        STRING prototype 1 [sourcename: expected0]
                    STRING baz 1 [sourcename: expected0]
                CALL 1 [sourcename: expected0] [free_call: 1]
                    NAME JSCompiler_stubMethod 1 [sourcename: expected0]
                    NUMBER 1.0 1 [sourcename: expected0]
    SCRIPT 1 [sourcename: expected1] [synthetic: 1]
        EXPR_RESULT 1 [sourcename: expected1]
            ASSIGN 1 [sourcename: expected1]
                GETPROP 1 [sourcename: expected1]
                    GETPROP 1 [sourcename: expected1]
                        NAME Foo 1 [sourcename: expected1]
                        STRING prototype 1 [sourcename: expected1]
                    STRING callBaz 1 [sourcename: expected1]
                CALL 1 [sourcename: expected1] [free_call: 1]
                    NAME JSCompiler_stubMethod 1 [sourcename: expected1]
                    NUMBER 0.0 1 [sourcename: expected1]
    SCRIPT 1 [sourcename: expected2] [synthetic: 1]
        EXPR_RESULT 1 [sourcename: expected2]
            ASSIGN 1 [sourcename: expected2]
                GETPROP 1 [sourcename: expected2]
                    GETPROP 1 [sourcename: expected2]
                        NAME Foo 1 [sourcename: expected2]
                        STRING prototype 1 [sourcename: expected2]
                    STRING baz 1 [sourcename: expected2]
                CALL 1 [sourcename: expected2] [free_call: 1]
                    NAME JSCompiler_unstubMethod 1 [sourcename: expected2]
                    NUMBER 1.0 1 [sourcename: expected2]
                    FUNCTION  1 [sourcename: expected2]
                        NAME  1 [sourcename: expected2]
                        LP 1 [sourcename: expected2]
                        BLOCK 1 [sourcename: expected2]
        EXPR_RESULT 1 [sourcename: expected2]
            ASSIGN 1 [sourcename: expected2]
                GETPROP 1 [sourcename: expected2]
                    GETPROP 1 [sourcename: expected2]
                        NAME Foo 1 [sourcename: expected2]
                        STRING prototype 1 [sourcename: expected2]
                    STRING callBaz 1 [sourcename: expected2]
                CALL 1 [sourcename: expected2] [free_call: 1]
                    NAME JSCompiler_unstubMethod 1 [sourcename: expected2]
                    NUMBER 0.0 1 [sourcename: expected2]
                    FUNCTION  1 [sourcename: expected2]
                        NAME  1 [sourcename: expected2]
                        LP 1 [sourcename: expected2]
                        BLOCK 1 [sourcename: expected2]
                            EXPR_RESULT 1 [sourcename: expected2]
                                CALL 1 [sourcename: expected2]
                                    GETPROP 1 [sourcename: expected2]
                                        THIS 1 [sourcename: expected2]
                                        STRING baz 1 [sourcename: expected2]
        EXPR_RESULT 1 [sourcename: expected2]
            CALL 1 [sourcename: expected2]
                GETPROP 1 [sourcename: expected2]
                    NEW 1 [sourcename: expected2] [parenthesized: true]
                        NAME Foo 1 [sourcename: expected2]
                    STRING callBaz 1 [sourcename: expected2]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: i0] [synthetic: 1]
        VAR 1 [sourcename:  [synthetic] ]
            NAME JSCompiler_stubMap 1 [sourcename:  [synthetic] ]
                ARRAYLIT 1 [sourcename:  [synthetic] ]
        FUNCTION  1 [sourcename:  [synthetic] ]
            NAME JSCompiler_stubMethod 1 [sourcename:  [synthetic] ]
            LP 1 [sourcename:  [synthetic] ]
                NAME JSCompiler_stubMethod_id 1 [sourcename:  [synthetic] ]
            BLOCK 1 [sourcename:  [synthetic] ]
                RETURN 1 [sourcename:  [synthetic] ]
                    FUNCTION  1 [sourcename:  [synthetic] ]
                        NAME  1 [sourcename:  [synthetic] ]
                        LP 1 [sourcename:  [synthetic] ]
                        BLOCK 1 [sourcename:  [synthetic] ]
                            RETURN 1 [sourcename:  [synthetic] ]
                                CALL 1 [sourcename:  [synthetic] ]
                                    GETPROP 1 [sourcename:  [synthetic] ]
                                        GETELEM 1 [sourcename:  [synthetic] ]
                                            NAME JSCompiler_stubMap 1 [sourcename:  [synthetic] ]
                                            NAME JSCompiler_stubMethod_id 1 [sourcename:  [synthetic] ]
                                        STRING apply 1 [sourcename:  [synthetic] ]
                                    THIS 1 [sourcename:  [synthetic] ]
                                    NAME arguments 1 [sourcename:  [synthetic] ]
        FUNCTION  1 [sourcename:  [synthetic] ]
            NAME JSCompiler_unstubMethod 1 [sourcename:  [synthetic] ]
            LP 1 [sourcename:  [synthetic] ]
                NAME JSCompiler_unstubMethod_id 1 [sourcename:  [synthetic] ]
                NAME JSCompiler_unstubMethod_body 1 [sourcename:  [synthetic] ]
            BLOCK 1 [sourcename:  [synthetic] ]
                RETURN 1 [sourcename:  [synthetic] ]
                    ASSIGN 1 [sourcename:  [synthetic] ]
                        GETELEM 1 [sourcename:  [synthetic] ]
                            NAME JSCompiler_stubMap 1 [sourcename:  [synthetic] ]
                            NAME JSCompiler_unstubMethod_id 1 [sourcename:  [synthetic] ]
                        NAME JSCompiler_unstubMethod_body 1 [sourcename:  [synthetic] ]
        FUNCTION  1 [sourcename: i0]
            NAME Foo 1 [sourcename: i0]
            LP 1 [sourcename: i0]
            BLOCK 1 [sourcename: i0]
        EXPR_RESULT 1 [sourcename: i0]
            ASSIGN 1 [sourcename: i0]
                GETPROP 1 [sourcename: i0]
                    GETPROP 1 [sourcename: i0]
                        NAME Foo 1 [sourcename: i0]
                        STRING prototype 1 [sourcename: i0]
                    STRING baz 1 [sourcename: i0]
                CALL 1 [sourcename: i0]
                    NAME JSCompiler_stubMethod 1 [sourcename: i0]
                    NUMBER 0.0 1 [sourcename: i0]
    SCRIPT 1 [sourcename: i1] [synthetic: 1]
        EXPR_RESULT 1 [sourcename: i1]
            ASSIGN 1 [sourcename: i1]
                GETPROP 1 [sourcename: i1]
                    GETPROP 1 [sourcename: i1]
                        NAME Foo 1 [sourcename: i1]
                        STRING prototype 1 [sourcename: i1]
                    STRING callBaz 1 [sourcename: i1]
                CALL 1 [sourcename: i1]
                    NAME JSCompiler_stubMethod 1 [sourcename: i1]
                    NUMBER 1.0 1 [sourcename: i1]
    SCRIPT 1 [sourcename: i2] [synthetic: 1]
        EXPR_RESULT 1 [sourcename: i1]
            ASSIGN 1 [sourcename: i1]
                GETPROP 1 [sourcename: i1]
                    GETPROP 1 [sourcename: i1]
                        NAME Foo 1 [sourcename: i1]
                        STRING prototype 1 [sourcename: i1]
                    STRING callBaz 1 [sourcename: i1]
                CALL 1 [sourcename: i1]
                    NAME JSCompiler_unstubMethod 1 [sourcename: i1]
                    NUMBER 1.0 1 [sourcename: i1]
                    FUNCTION  1 [sourcename: i1]
                        NAME  1 [sourcename: i1]
                        LP 1 [sourcename: i1]
                        BLOCK 1 [sourcename: i1]
                            EXPR_RESULT 1 [sourcename: i1]
                                CALL 1 [sourcename: i1]
                                    GETPROP 1 [sourcename: i1]
                                        THIS 1 [sourcename: i1]
                                        STRING baz 1 [sourcename: i1]
        EXPR_RESULT 1 [sourcename: i0]
            ASSIGN 1 [sourcename: i0]
                GETPROP 1 [sourcename: i0]
                    GETPROP 1 [sourcename: i0]
                        NAME Foo 1 [sourcename: i0]
                        STRING prototype 1 [sourcename: i0]
                    STRING baz 1 [sourcename: i0]
                CALL 1 [sourcename: i0]
                    NAME JSCompiler_unstubMethod 1 [sourcename: i0]
                    NUMBER 0.0 1 [sourcename: i0]
                    FUNCTION  1 [sourcename: i0]
                        NAME  1 [sourcename: i0]
                        LP 1 [sourcename: i0]
                        BLOCK 1 [sourcename: i0]
        EXPR_RESULT 1 [sourcename: i2]
            CALL 1 [sourcename: i2]
                GETPROP 1 [sourcename: i2]
                    NEW 1 [sourcename: i2] [parenthesized: true]
                        NAME Foo 1 [sourcename: i2]
                    STRING callBaz 1 [sourcename: i2]


Subtree1: NUMBER 1.0 1 [sourcename: expected0]


Subtree2: NUMBER 0.0 1 [sourcename: i0]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:843)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:679)
~ testClosureVariableReads3(com.google.javascript.jscomp.CrossModuleMethodMotionTest)
[
Expected: var JSCompiler_stubMap=[];function JSCompiler_stubMethod(JSCompiler_stubMethod_id){return function(){return JSCompiler_stubMap[JSCompiler_stubMethod_id].apply(this,arguments)}}function JSCompiler_unstubMethod(JSCompiler_unstubMethod_id,JSCompiler_unstubMethod_body){return JSCompiler_stubMap[JSCompiler_unstubMethod_id]=JSCompiler_unstubMethod_body}function Foo(){}Foo.prototype.b1=JSCompiler_stubMethod(0);Foo.prototype.b1=JSCompiler_unstubMethod(0,function(){Foo.prototype.b2=JSCompiler_stubMethod(1)});
var y=new Foo;y.b1();Foo.prototype.b2=JSCompiler_unstubMethod(1,function(){var x=1;Foo.prototype.b3=function(){x}});y=new Foo;z.b2();y=new Foo;z.b3()
Result: var JSCompiler_stubMap=[];function JSCompiler_stubMethod(JSCompiler_stubMethod_id){return function(){return JSCompiler_stubMap[JSCompiler_stubMethod_id].apply(this,arguments)}}function JSCompiler_unstubMethod(JSCompiler_unstubMethod_id,JSCompiler_unstubMethod_body){return JSCompiler_stubMap[JSCompiler_unstubMethod_id]=JSCompiler_unstubMethod_body}function Foo(){}Foo.prototype.b1=JSCompiler_stubMethod(1);Foo.prototype.b1=JSCompiler_unstubMethod(1,function(){Foo.prototype.b2=JSCompiler_stubMethod(0)});
var y=new Foo;y.b1();Foo.prototype.b2=JSCompiler_unstubMethod(0,function(){var x=1;Foo.prototype.b3=function(){x}});y=new Foo;z.b2();y=new Foo;z.b3()
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_stubMap 1 [sourcename: expected0]
                ARRAYLIT 1 [sourcename: expected0]
        FUNCTION  1 [sourcename: expected0]
            NAME JSCompiler_stubMethod 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
                NAME JSCompiler_stubMethod_id 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                RETURN 1 [sourcename: expected0]
                    FUNCTION  1 [sourcename: expected0]
                        NAME  1 [sourcename: expected0]
                        LP 1 [sourcename: expected0]
                        BLOCK 1 [sourcename: expected0]
                            RETURN 1 [sourcename: expected0]
                                CALL 1 [sourcename: expected0]
                                    GETPROP 1 [sourcename: expected0]
                                        GETELEM 1 [sourcename: expected0]
                                            NAME JSCompiler_stubMap 1 [sourcename: expected0]
                                            NAME JSCompiler_stubMethod_id 1 [sourcename: expected0]
                                        STRING apply 1 [sourcename: expected0]
                                    THIS 1 [sourcename: expected0]
                                    NAME arguments 1 [sourcename: expected0]
        FUNCTION  1 [sourcename: expected0]
            NAME JSCompiler_unstubMethod 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
                NAME JSCompiler_unstubMethod_id 1 [sourcename: expected0]
                NAME JSCompiler_unstubMethod_body 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                RETURN 1 [sourcename: expected0]
                    ASSIGN 1 [sourcename: expected0]
                        GETELEM 1 [sourcename: expected0]
                            NAME JSCompiler_stubMap 1 [sourcename: expected0]
                            NAME JSCompiler_unstubMethod_id 1 [sourcename: expected0]
                        NAME JSCompiler_unstubMethod_body 1 [sourcename: expected0]
        FUNCTION  1 [sourcename: expected0]
            NAME Foo 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            ASSIGN 1 [sourcename: expected0]
                GETPROP 1 [sourcename: expected0]
                    GETPROP 1 [sourcename: expected0]
                        NAME Foo 1 [sourcename: expected0]
                        STRING prototype 1 [sourcename: expected0]
                    STRING b1 1 [sourcename: expected0]
                CALL 1 [sourcename: expected0] [free_call: 1]
                    NAME JSCompiler_stubMethod 1 [sourcename: expected0]
                    NUMBER 0.0 1 [sourcename: expected0]
    SCRIPT 1 [sourcename: expected1] [synthetic: 1]
        EXPR_RESULT 1 [sourcename: expected1]
            ASSIGN 1 [sourcename: expected1]
                GETPROP 1 [sourcename: expected1]
                    GETPROP 1 [sourcename: expected1]
                        NAME Foo 1 [sourcename: expected1]
                        STRING prototype 1 [sourcename: expected1]
                    STRING b1 1 [sourcename: expected1]
                CALL 1 [sourcename: expected1] [free_call: 1]
                    NAME JSCompiler_unstubMethod 1 [sourcename: expected1]
                    NUMBER 0.0 1 [sourcename: expected1]
                    FUNCTION  1 [sourcename: expected1]
                        NAME  1 [sourcename: expected1]
                        LP 1 [sourcename: expected1]
                        BLOCK 1 [sourcename: expected1]
                            EXPR_RESULT 1 [sourcename: expected1]
                                ASSIGN 1 [sourcename: expected1]
                                    GETPROP 1 [sourcename: expected1]
                                        GETPROP 1 [sourcename: expected1]
                                            NAME Foo 1 [sourcename: expected1]
                                            STRING prototype 1 [sourcename: expected1]
                                        STRING b2 1 [sourcename: expected1]
                                    CALL 1 [sourcename: expected1] [free_call: 1]
                                        NAME JSCompiler_stubMethod 1 [sourcename: expected1]
                                        NUMBER 1.0 1 [sourcename: expected1]
        VAR 1 [sourcename: expected1]
            NAME y 1 [sourcename: expected1]
                NEW 1 [sourcename: expected1]
                    NAME Foo 1 [sourcename: expected1]
        EXPR_RESULT 1 [sourcename: expected1]
            CALL 1 [sourcename: expected1]
                GETPROP 1 [sourcename: expected1]
                    NAME y 1 [sourcename: expected1]
                    STRING b1 1 [sourcename: expected1]
    SCRIPT 1 [sourcename: expected2] [synthetic: 1]
        EXPR_RESULT 1 [sourcename: expected2]
            ASSIGN 1 [sourcename: expected2]
                GETPROP 1 [sourcename: expected2]
                    GETPROP 1 [sourcename: expected2]
                        NAME Foo 1 [sourcename: expected2]
                        STRING prototype 1 [sourcename: expected2]
                    STRING b2 1 [sourcename: expected2]
                CALL 1 [sourcename: expected2] [free_call: 1]
                    NAME JSCompiler_unstubMethod 1 [sourcename: expected2]
                    NUMBER 1.0 1 [sourcename: expected2]
                    FUNCTION  1 [sourcename: expected2]
                        NAME  1 [sourcename: expected2]
                        LP 1 [sourcename: expected2]
                        BLOCK 1 [sourcename: expected2]
                            VAR 1 [sourcename: expected2]
                                NAME x 1 [sourcename: expected2]
                                    NUMBER 1.0 1 [sourcename: expected2]
                            EXPR_RESULT 1 [sourcename: expected2]
                                ASSIGN 1 [sourcename: expected2]
                                    GETPROP 1 [sourcename: expected2]
                                        GETPROP 1 [sourcename: expected2]
                                            NAME Foo 1 [sourcename: expected2]
                                            STRING prototype 1 [sourcename: expected2]
                                        STRING b3 1 [sourcename: expected2]
                                    FUNCTION  1 [sourcename: expected2]
                                        NAME  1 [sourcename: expected2]
                                        LP 1 [sourcename: expected2]
                                        BLOCK 1 [sourcename: expected2]
                                            EXPR_RESULT 1 [sourcename: expected2]
                                                NAME x 1 [sourcename: expected2]
        EXPR_RESULT 1 [sourcename: expected2]
            ASSIGN 1 [sourcename: expected2]
                NAME y 1 [sourcename: expected2]
                NEW 1 [sourcename: expected2]
                    NAME Foo 1 [sourcename: expected2]
        EXPR_RESULT 1 [sourcename: expected2]
            CALL 1 [sourcename: expected2]
                GETPROP 1 [sourcename: expected2]
                    NAME z 1 [sourcename: expected2]
                    STRING b2 1 [sourcename: expected2]
    SCRIPT 1 [sourcename: expected3] [synthetic: 1]
        EXPR_RESULT 1 [sourcename: expected3]
            ASSIGN 1 [sourcename: expected3]
                NAME y 1 [sourcename: expected3]
                NEW 1 [sourcename: expected3]
                    NAME Foo 1 [sourcename: expected3]
        EXPR_RESULT 1 [sourcename: expected3]
            CALL 1 [sourcename: expected3]
                GETPROP 1 [sourcename: expected3]
                    NAME z 1 [sourcename: expected3]
                    STRING b3 1 [sourcename: expected3]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: i0] [synthetic: 1]
        VAR 1 [sourcename:  [synthetic] ]
            NAME JSCompiler_stubMap 1 [sourcename:  [synthetic] ]
                ARRAYLIT 1 [sourcename:  [synthetic] ]
        FUNCTION  1 [sourcename:  [synthetic] ]
            NAME JSCompiler_stubMethod 1 [sourcename:  [synthetic] ]
            LP 1 [sourcename:  [synthetic] ]
                NAME JSCompiler_stubMethod_id 1 [sourcename:  [synthetic] ]
            BLOCK 1 [sourcename:  [synthetic] ]
                RETURN 1 [sourcename:  [synthetic] ]
                    FUNCTION  1 [sourcename:  [synthetic] ]
                        NAME  1 [sourcename:  [synthetic] ]
                        LP 1 [sourcename:  [synthetic] ]
                        BLOCK 1 [sourcename:  [synthetic] ]
                            RETURN 1 [sourcename:  [synthetic] ]
                                CALL 1 [sourcename:  [synthetic] ]
                                    GETPROP 1 [sourcename:  [synthetic] ]
                                        GETELEM 1 [sourcename:  [synthetic] ]
                                            NAME JSCompiler_stubMap 1 [sourcename:  [synthetic] ]
                                            NAME JSCompiler_stubMethod_id 1 [sourcename:  [synthetic] ]
                                        STRING apply 1 [sourcename:  [synthetic] ]
                                    THIS 1 [sourcename:  [synthetic] ]
                                    NAME arguments 1 [sourcename:  [synthetic] ]
        FUNCTION  1 [sourcename:  [synthetic] ]
            NAME JSCompiler_unstubMethod 1 [sourcename:  [synthetic] ]
            LP 1 [sourcename:  [synthetic] ]
                NAME JSCompiler_unstubMethod_id 1 [sourcename:  [synthetic] ]
                NAME JSCompiler_unstubMethod_body 1 [sourcename:  [synthetic] ]
            BLOCK 1 [sourcename:  [synthetic] ]
                RETURN 1 [sourcename:  [synthetic] ]
                    ASSIGN 1 [sourcename:  [synthetic] ]
                        GETELEM 1 [sourcename:  [synthetic] ]
                            NAME JSCompiler_stubMap 1 [sourcename:  [synthetic] ]
                            NAME JSCompiler_unstubMethod_id 1 [sourcename:  [synthetic] ]
                        NAME JSCompiler_unstubMethod_body 1 [sourcename:  [synthetic] ]
        FUNCTION  1 [sourcename: i0]
            NAME Foo 1 [sourcename: i0]
            LP 1 [sourcename: i0]
            BLOCK 1 [sourcename: i0]
        EXPR_RESULT 1 [sourcename: i0]
            ASSIGN 1 [sourcename: i0]
                GETPROP 1 [sourcename: i0]
                    GETPROP 1 [sourcename: i0]
                        NAME Foo 1 [sourcename: i0]
                        STRING prototype 1 [sourcename: i0]
                    STRING b1 1 [sourcename: i0]
                CALL 1 [sourcename: i0]
                    NAME JSCompiler_stubMethod 1 [sourcename: i0]
                    NUMBER 1.0 1 [sourcename: i0]
    SCRIPT 1 [sourcename: i1] [synthetic: 1]
        EXPR_RESULT 1 [sourcename: i0]
            ASSIGN 1 [sourcename: i0]
                GETPROP 1 [sourcename: i0]
                    GETPROP 1 [sourcename: i0]
                        NAME Foo 1 [sourcename: i0]
                        STRING prototype 1 [sourcename: i0]
                    STRING b1 1 [sourcename: i0]
                CALL 1 [sourcename: i0]
                    NAME JSCompiler_unstubMethod 1 [sourcename: i0]
                    NUMBER 1.0 1 [sourcename: i0]
                    FUNCTION  1 [sourcename: i0]
                        NAME  1 [sourcename: i0]
                        LP 1 [sourcename: i0]
                        BLOCK 1 [sourcename: i0]
                            EXPR_RESULT 1 [sourcename: i0]
                                ASSIGN 1 [sourcename: i0]
                                    GETPROP 1 [sourcename: i0]
                                        GETPROP 1 [sourcename: i0]
                                            NAME Foo 1 [sourcename: i0]
                                            STRING prototype 1 [sourcename: i0]
                                        STRING b2 1 [sourcename: i0]
                                    CALL 1 [sourcename: i0]
                                        NAME JSCompiler_stubMethod 1 [sourcename: i0]
                                        NUMBER 0.0 1 [sourcename: i0]
        VAR 1 [sourcename: i1]
            NAME y 1 [sourcename: i1]
                NEW 1 [sourcename: i1]
                    NAME Foo 1 [sourcename: i1]
        EXPR_RESULT 1 [sourcename: i1]
            CALL 1 [sourcename: i1]
                GETPROP 1 [sourcename: i1]
                    NAME y 1 [sourcename: i1]
                    STRING b1 1 [sourcename: i1]
    SCRIPT 1 [sourcename: i2] [synthetic: 1]
        EXPR_RESULT 1 [sourcename: i0]
            ASSIGN 1 [sourcename: i0]
                GETPROP 1 [sourcename: i0]
                    GETPROP 1 [sourcename: i0]
                        NAME Foo 1 [sourcename: i0]
                        STRING prototype 1 [sourcename: i0]
                    STRING b2 1 [sourcename: i0]
                CALL 1 [sourcename: i0]
                    NAME JSCompiler_unstubMethod 1 [sourcename: i0]
                    NUMBER 0.0 1 [sourcename: i0]
                    FUNCTION  1 [sourcename: i0]
                        NAME  1 [sourcename: i0]
                        LP 1 [sourcename: i0]
                        BLOCK 1 [sourcename: i0]
                            VAR 1 [sourcename: i0]
                                NAME x 1 [sourcename: i0]
                                    NUMBER 1.0 1 [sourcename: i0]
                            EXPR_RESULT 1 [sourcename: i0]
                                ASSIGN 1 [sourcename: i0]
                                    GETPROP 1 [sourcename: i0]
                                        GETPROP 1 [sourcename: i0]
                                            NAME Foo 1 [sourcename: i0]
                                            STRING prototype 1 [sourcename: i0]
                                        STRING b3 1 [sourcename: i0]
                                    FUNCTION  1 [sourcename: i0]
                                        NAME  1 [sourcename: i0]
                                        LP 1 [sourcename: i0]
                                        BLOCK 1 [sourcename: i0]
                                            EXPR_RESULT 1 [sourcename: i0]
                                                NAME x 1 [sourcename: i0]
        EXPR_RESULT 1 [sourcename: i2]
            ASSIGN 1 [sourcename: i2]
                NAME y 1 [sourcename: i2]
                NEW 1 [sourcename: i2]
                    NAME Foo 1 [sourcename: i2]
        EXPR_RESULT 1 [sourcename: i2]
            CALL 1 [sourcename: i2]
                GETPROP 1 [sourcename: i2]
                    NAME z 1 [sourcename: i2]
                    STRING b2 1 [sourcename: i2]
    SCRIPT 1 [sourcename: i3] [synthetic: 1]
        EXPR_RESULT 1 [sourcename: i3]
            ASSIGN 1 [sourcename: i3]
                NAME y 1 [sourcename: i3]
                NEW 1 [sourcename: i3]
                    NAME Foo 1 [sourcename: i3]
        EXPR_RESULT 1 [sourcename: i3]
            CALL 1 [sourcename: i3]
                GETPROP 1 [sourcename: i3]
                    NAME z 1 [sourcename: i3]
                    STRING b3 1 [sourcename: i3]


Subtree1: NUMBER 0.0 1 [sourcename: expected0]


Subtree2: NUMBER 1.0 1 [sourcename: i0]
]
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_stubMap=[];function JSCompiler_stubMethod(JSCompiler_stubMethod_id){return function(){return JSCompiler_stubMap[JSCompiler_stubMethod_id].apply(this,arguments)}}function JSCompiler_unstubMethod(JSCompiler_unstubMethod_id,JSCompiler_unstubMethod_body){return JSCompiler_stubMap[JSCompiler_unstubMethod_id]=JSCompiler_unstubMethod_body}function Foo(){}Foo.prototype.b1=JSCompiler_stubMethod(0);Foo.prototype.b1=JSCompiler_unstubMethod(0,function(){Foo.prototype.b2=JSCompiler_stubMethod(1)});
var y=new Foo;y.b1();Foo.prototype.b2=JSCompiler_unstubMethod(1,function(){var x=1;Foo.prototype.b3=function(){x}});y=new Foo;z.b2();y=new Foo;z.b3()
Result: var JSCompiler_stubMap=[];function JSCompiler_stubMethod(JSCompiler_stubMethod_id){return function(){return JSCompiler_stubMap[JSCompiler_stubMethod_id].apply(this,arguments)}}function JSCompiler_unstubMethod(JSCompiler_unstubMethod_id,JSCompiler_unstubMethod_body){return JSCompiler_stubMap[JSCompiler_unstubMethod_id]=JSCompiler_unstubMethod_body}function Foo(){}Foo.prototype.b1=JSCompiler_stubMethod(1);Foo.prototype.b1=JSCompiler_unstubMethod(1,function(){Foo.prototype.b2=JSCompiler_stubMethod(0)});
var y=new Foo;y.b1();Foo.prototype.b2=JSCompiler_unstubMethod(0,function(){var x=1;Foo.prototype.b3=function(){x}});y=new Foo;z.b2();y=new Foo;z.b3()
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_stubMap 1 [sourcename: expected0]
                ARRAYLIT 1 [sourcename: expected0]
        FUNCTION  1 [sourcename: expected0]
            NAME JSCompiler_stubMethod 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
                NAME JSCompiler_stubMethod_id 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                RETURN 1 [sourcename: expected0]
                    FUNCTION  1 [sourcename: expected0]
                        NAME  1 [sourcename: expected0]
                        LP 1 [sourcename: expected0]
                        BLOCK 1 [sourcename: expected0]
                            RETURN 1 [sourcename: expected0]
                                CALL 1 [sourcename: expected0]
                                    GETPROP 1 [sourcename: expected0]
                                        GETELEM 1 [sourcename: expected0]
                                            NAME JSCompiler_stubMap 1 [sourcename: expected0]
                                            NAME JSCompiler_stubMethod_id 1 [sourcename: expected0]
                                        STRING apply 1 [sourcename: expected0]
                                    THIS 1 [sourcename: expected0]
                                    NAME arguments 1 [sourcename: expected0]
        FUNCTION  1 [sourcename: expected0]
            NAME JSCompiler_unstubMethod 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
                NAME JSCompiler_unstubMethod_id 1 [sourcename: expected0]
                NAME JSCompiler_unstubMethod_body 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                RETURN 1 [sourcename: expected0]
                    ASSIGN 1 [sourcename: expected0]
                        GETELEM 1 [sourcename: expected0]
                            NAME JSCompiler_stubMap 1 [sourcename: expected0]
                            NAME JSCompiler_unstubMethod_id 1 [sourcename: expected0]
                        NAME JSCompiler_unstubMethod_body 1 [sourcename: expected0]
        FUNCTION  1 [sourcename: expected0]
            NAME Foo 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            ASSIGN 1 [sourcename: expected0]
                GETPROP 1 [sourcename: expected0]
                    GETPROP 1 [sourcename: expected0]
                        NAME Foo 1 [sourcename: expected0]
                        STRING prototype 1 [sourcename: expected0]
                    STRING b1 1 [sourcename: expected0]
                CALL 1 [sourcename: expected0] [free_call: 1]
                    NAME JSCompiler_stubMethod 1 [sourcename: expected0]
                    NUMBER 0.0 1 [sourcename: expected0]
    SCRIPT 1 [sourcename: expected1] [synthetic: 1]
        EXPR_RESULT 1 [sourcename: expected1]
            ASSIGN 1 [sourcename: expected1]
                GETPROP 1 [sourcename: expected1]
                    GETPROP 1 [sourcename: expected1]
                        NAME Foo 1 [sourcename: expected1]
                        STRING prototype 1 [sourcename: expected1]
                    STRING b1 1 [sourcename: expected1]
                CALL 1 [sourcename: expected1] [free_call: 1]
                    NAME JSCompiler_unstubMethod 1 [sourcename: expected1]
                    NUMBER 0.0 1 [sourcename: expected1]
                    FUNCTION  1 [sourcename: expected1]
                        NAME  1 [sourcename: expected1]
                        LP 1 [sourcename: expected1]
                        BLOCK 1 [sourcename: expected1]
                            EXPR_RESULT 1 [sourcename: expected1]
                                ASSIGN 1 [sourcename: expected1]
                                    GETPROP 1 [sourcename: expected1]
                                        GETPROP 1 [sourcename: expected1]
                                            NAME Foo 1 [sourcename: expected1]
                                            STRING prototype 1 [sourcename: expected1]
                                        STRING b2 1 [sourcename: expected1]
                                    CALL 1 [sourcename: expected1] [free_call: 1]
                                        NAME JSCompiler_stubMethod 1 [sourcename: expected1]
                                        NUMBER 1.0 1 [sourcename: expected1]
        VAR 1 [sourcename: expected1]
            NAME y 1 [sourcename: expected1]
                NEW 1 [sourcename: expected1]
                    NAME Foo 1 [sourcename: expected1]
        EXPR_RESULT 1 [sourcename: expected1]
            CALL 1 [sourcename: expected1]
                GETPROP 1 [sourcename: expected1]
                    NAME y 1 [sourcename: expected1]
                    STRING b1 1 [sourcename: expected1]
    SCRIPT 1 [sourcename: expected2] [synthetic: 1]
        EXPR_RESULT 1 [sourcename: expected2]
            ASSIGN 1 [sourcename: expected2]
                GETPROP 1 [sourcename: expected2]
                    GETPROP 1 [sourcename: expected2]
                        NAME Foo 1 [sourcename: expected2]
                        STRING prototype 1 [sourcename: expected2]
                    STRING b2 1 [sourcename: expected2]
                CALL 1 [sourcename: expected2] [free_call: 1]
                    NAME JSCompiler_unstubMethod 1 [sourcename: expected2]
                    NUMBER 1.0 1 [sourcename: expected2]
                    FUNCTION  1 [sourcename: expected2]
                        NAME  1 [sourcename: expected2]
                        LP 1 [sourcename: expected2]
                        BLOCK 1 [sourcename: expected2]
                            VAR 1 [sourcename: expected2]
                                NAME x 1 [sourcename: expected2]
                                    NUMBER 1.0 1 [sourcename: expected2]
                            EXPR_RESULT 1 [sourcename: expected2]
                                ASSIGN 1 [sourcename: expected2]
                                    GETPROP 1 [sourcename: expected2]
                                        GETPROP 1 [sourcename: expected2]
                                            NAME Foo 1 [sourcename: expected2]
                                            STRING prototype 1 [sourcename: expected2]
                                        STRING b3 1 [sourcename: expected2]
                                    FUNCTION  1 [sourcename: expected2]
                                        NAME  1 [sourcename: expected2]
                                        LP 1 [sourcename: expected2]
                                        BLOCK 1 [sourcename: expected2]
                                            EXPR_RESULT 1 [sourcename: expected2]
                                                NAME x 1 [sourcename: expected2]
        EXPR_RESULT 1 [sourcename: expected2]
            ASSIGN 1 [sourcename: expected2]
                NAME y 1 [sourcename: expected2]
                NEW 1 [sourcename: expected2]
                    NAME Foo 1 [sourcename: expected2]
        EXPR_RESULT 1 [sourcename: expected2]
            CALL 1 [sourcename: expected2]
                GETPROP 1 [sourcename: expected2]
                    NAME z 1 [sourcename: expected2]
                    STRING b2 1 [sourcename: expected2]
    SCRIPT 1 [sourcename: expected3] [synthetic: 1]
        EXPR_RESULT 1 [sourcename: expected3]
            ASSIGN 1 [sourcename: expected3]
                NAME y 1 [sourcename: expected3]
                NEW 1 [sourcename: expected3]
                    NAME Foo 1 [sourcename: expected3]
        EXPR_RESULT 1 [sourcename: expected3]
            CALL 1 [sourcename: expected3]
                GETPROP 1 [sourcename: expected3]
                    NAME z 1 [sourcename: expected3]
                    STRING b3 1 [sourcename: expected3]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: i0] [synthetic: 1]
        VAR 1 [sourcename:  [synthetic] ]
            NAME JSCompiler_stubMap 1 [sourcename:  [synthetic] ]
                ARRAYLIT 1 [sourcename:  [synthetic] ]
        FUNCTION  1 [sourcename:  [synthetic] ]
            NAME JSCompiler_stubMethod 1 [sourcename:  [synthetic] ]
            LP 1 [sourcename:  [synthetic] ]
                NAME JSCompiler_stubMethod_id 1 [sourcename:  [synthetic] ]
            BLOCK 1 [sourcename:  [synthetic] ]
                RETURN 1 [sourcename:  [synthetic] ]
                    FUNCTION  1 [sourcename:  [synthetic] ]
                        NAME  1 [sourcename:  [synthetic] ]
                        LP 1 [sourcename:  [synthetic] ]
                        BLOCK 1 [sourcename:  [synthetic] ]
                            RETURN 1 [sourcename:  [synthetic] ]
                                CALL 1 [sourcename:  [synthetic] ]
                                    GETPROP 1 [sourcename:  [synthetic] ]
                                        GETELEM 1 [sourcename:  [synthetic] ]
                                            NAME JSCompiler_stubMap 1 [sourcename:  [synthetic] ]
                                            NAME JSCompiler_stubMethod_id 1 [sourcename:  [synthetic] ]
                                        STRING apply 1 [sourcename:  [synthetic] ]
                                    THIS 1 [sourcename:  [synthetic] ]
                                    NAME arguments 1 [sourcename:  [synthetic] ]
        FUNCTION  1 [sourcename:  [synthetic] ]
            NAME JSCompiler_unstubMethod 1 [sourcename:  [synthetic] ]
            LP 1 [sourcename:  [synthetic] ]
                NAME JSCompiler_unstubMethod_id 1 [sourcename:  [synthetic] ]
                NAME JSCompiler_unstubMethod_body 1 [sourcename:  [synthetic] ]
            BLOCK 1 [sourcename:  [synthetic] ]
                RETURN 1 [sourcename:  [synthetic] ]
                    ASSIGN 1 [sourcename:  [synthetic] ]
                        GETELEM 1 [sourcename:  [synthetic] ]
                            NAME JSCompiler_stubMap 1 [sourcename:  [synthetic] ]
                            NAME JSCompiler_unstubMethod_id 1 [sourcename:  [synthetic] ]
                        NAME JSCompiler_unstubMethod_body 1 [sourcename:  [synthetic] ]
        FUNCTION  1 [sourcename: i0]
            NAME Foo 1 [sourcename: i0]
            LP 1 [sourcename: i0]
            BLOCK 1 [sourcename: i0]
        EXPR_RESULT 1 [sourcename: i0]
            ASSIGN 1 [sourcename: i0]
                GETPROP 1 [sourcename: i0]
                    GETPROP 1 [sourcename: i0]
                        NAME Foo 1 [sourcename: i0]
                        STRING prototype 1 [sourcename: i0]
                    STRING b1 1 [sourcename: i0]
                CALL 1 [sourcename: i0]
                    NAME JSCompiler_stubMethod 1 [sourcename: i0]
                    NUMBER 1.0 1 [sourcename: i0]
    SCRIPT 1 [sourcename: i1] [synthetic: 1]
        EXPR_RESULT 1 [sourcename: i0]
            ASSIGN 1 [sourcename: i0]
                GETPROP 1 [sourcename: i0]
                    GETPROP 1 [sourcename: i0]
                        NAME Foo 1 [sourcename: i0]
                        STRING prototype 1 [sourcename: i0]
                    STRING b1 1 [sourcename: i0]
                CALL 1 [sourcename: i0]
                    NAME JSCompiler_unstubMethod 1 [sourcename: i0]
                    NUMBER 1.0 1 [sourcename: i0]
                    FUNCTION  1 [sourcename: i0]
                        NAME  1 [sourcename: i0]
                        LP 1 [sourcename: i0]
                        BLOCK 1 [sourcename: i0]
                            EXPR_RESULT 1 [sourcename: i0]
                                ASSIGN 1 [sourcename: i0]
                                    GETPROP 1 [sourcename: i0]
                                        GETPROP 1 [sourcename: i0]
                                            NAME Foo 1 [sourcename: i0]
                                            STRING prototype 1 [sourcename: i0]
                                        STRING b2 1 [sourcename: i0]
                                    CALL 1 [sourcename: i0]
                                        NAME JSCompiler_stubMethod 1 [sourcename: i0]
                                        NUMBER 0.0 1 [sourcename: i0]
        VAR 1 [sourcename: i1]
            NAME y 1 [sourcename: i1]
                NEW 1 [sourcename: i1]
                    NAME Foo 1 [sourcename: i1]
        EXPR_RESULT 1 [sourcename: i1]
            CALL 1 [sourcename: i1]
                GETPROP 1 [sourcename: i1]
                    NAME y 1 [sourcename: i1]
                    STRING b1 1 [sourcename: i1]
    SCRIPT 1 [sourcename: i2] [synthetic: 1]
        EXPR_RESULT 1 [sourcename: i0]
            ASSIGN 1 [sourcename: i0]
                GETPROP 1 [sourcename: i0]
                    GETPROP 1 [sourcename: i0]
                        NAME Foo 1 [sourcename: i0]
                        STRING prototype 1 [sourcename: i0]
                    STRING b2 1 [sourcename: i0]
                CALL 1 [sourcename: i0]
                    NAME JSCompiler_unstubMethod 1 [sourcename: i0]
                    NUMBER 0.0 1 [sourcename: i0]
                    FUNCTION  1 [sourcename: i0]
                        NAME  1 [sourcename: i0]
                        LP 1 [sourcename: i0]
                        BLOCK 1 [sourcename: i0]
                            VAR 1 [sourcename: i0]
                                NAME x 1 [sourcename: i0]
                                    NUMBER 1.0 1 [sourcename: i0]
                            EXPR_RESULT 1 [sourcename: i0]
                                ASSIGN 1 [sourcename: i0]
                                    GETPROP 1 [sourcename: i0]
                                        GETPROP 1 [sourcename: i0]
                                            NAME Foo 1 [sourcename: i0]
                                            STRING prototype 1 [sourcename: i0]
                                        STRING b3 1 [sourcename: i0]
                                    FUNCTION  1 [sourcename: i0]
                                        NAME  1 [sourcename: i0]
                                        LP 1 [sourcename: i0]
                                        BLOCK 1 [sourcename: i0]
                                            EXPR_RESULT 1 [sourcename: i0]
                                                NAME x 1 [sourcename: i0]
        EXPR_RESULT 1 [sourcename: i2]
            ASSIGN 1 [sourcename: i2]
                NAME y 1 [sourcename: i2]
                NEW 1 [sourcename: i2]
                    NAME Foo 1 [sourcename: i2]
        EXPR_RESULT 1 [sourcename: i2]
            CALL 1 [sourcename: i2]
                GETPROP 1 [sourcename: i2]
                    NAME z 1 [sourcename: i2]
                    STRING b2 1 [sourcename: i2]
    SCRIPT 1 [sourcename: i3] [synthetic: 1]
        EXPR_RESULT 1 [sourcename: i3]
            ASSIGN 1 [sourcename: i3]
                NAME y 1 [sourcename: i3]
                NEW 1 [sourcename: i3]
                    NAME Foo 1 [sourcename: i3]
        EXPR_RESULT 1 [sourcename: i3]
            CALL 1 [sourcename: i3]
                GETPROP 1 [sourcename: i3]
                    NAME z 1 [sourcename: i3]
                    STRING b3 1 [sourcename: i3]


Subtree1: NUMBER 0.0 1 [sourcename: expected0]


Subtree2: NUMBER 1.0 1 [sourcename: i0]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:843)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:679)
~ testTwoMethods(com.google.javascript.jscomp.CrossModuleMethodMotionTest)
[
Expected: var JSCompiler_stubMap=[];function JSCompiler_stubMethod(JSCompiler_stubMethod_id){return function(){return JSCompiler_stubMap[JSCompiler_stubMethod_id].apply(this,arguments)}}function JSCompiler_unstubMethod(JSCompiler_unstubMethod_id,JSCompiler_unstubMethod_body){return JSCompiler_stubMap[JSCompiler_unstubMethod_id]=JSCompiler_unstubMethod_body}function Foo(){}Foo.prototype.baz=JSCompiler_stubMethod(1);Foo.prototype.callBaz=JSCompiler_stubMethod(0);Foo.prototype.baz=JSCompiler_unstubMethod(1,function(){});
Foo.prototype.callBaz=JSCompiler_unstubMethod(0,function(){this.baz()});(new Foo).callBaz()
Result: var JSCompiler_stubMap=[];function JSCompiler_stubMethod(JSCompiler_stubMethod_id){return function(){return JSCompiler_stubMap[JSCompiler_stubMethod_id].apply(this,arguments)}}function JSCompiler_unstubMethod(JSCompiler_unstubMethod_id,JSCompiler_unstubMethod_body){return JSCompiler_stubMap[JSCompiler_unstubMethod_id]=JSCompiler_unstubMethod_body}function Foo(){}Foo.prototype.baz=JSCompiler_stubMethod(0);Foo.prototype.callBaz=JSCompiler_stubMethod(1);
Foo.prototype.callBaz=JSCompiler_unstubMethod(1,function(){this.baz()});Foo.prototype.baz=JSCompiler_unstubMethod(0,function(){});(new Foo).callBaz()
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_stubMap 1 [sourcename: expected0]
                ARRAYLIT 1 [sourcename: expected0]
        FUNCTION  1 [sourcename: expected0]
            NAME JSCompiler_stubMethod 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
                NAME JSCompiler_stubMethod_id 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                RETURN 1 [sourcename: expected0]
                    FUNCTION  1 [sourcename: expected0]
                        NAME  1 [sourcename: expected0]
                        LP 1 [sourcename: expected0]
                        BLOCK 1 [sourcename: expected0]
                            RETURN 1 [sourcename: expected0]
                                CALL 1 [sourcename: expected0]
                                    GETPROP 1 [sourcename: expected0]
                                        GETELEM 1 [sourcename: expected0]
                                            NAME JSCompiler_stubMap 1 [sourcename: expected0]
                                            NAME JSCompiler_stubMethod_id 1 [sourcename: expected0]
                                        STRING apply 1 [sourcename: expected0]
                                    THIS 1 [sourcename: expected0]
                                    NAME arguments 1 [sourcename: expected0]
        FUNCTION  1 [sourcename: expected0]
            NAME JSCompiler_unstubMethod 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
                NAME JSCompiler_unstubMethod_id 1 [sourcename: expected0]
                NAME JSCompiler_unstubMethod_body 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                RETURN 1 [sourcename: expected0]
                    ASSIGN 1 [sourcename: expected0]
                        GETELEM 1 [sourcename: expected0]
                            NAME JSCompiler_stubMap 1 [sourcename: expected0]
                            NAME JSCompiler_unstubMethod_id 1 [sourcename: expected0]
                        NAME JSCompiler_unstubMethod_body 1 [sourcename: expected0]
        FUNCTION  1 [sourcename: expected0]
            NAME Foo 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            ASSIGN 1 [sourcename: expected0]
                GETPROP 1 [sourcename: expected0]
                    GETPROP 1 [sourcename: expected0]
                        NAME Foo 1 [sourcename: expected0]
                        STRING prototype 1 [sourcename: expected0]
                    STRING baz 1 [sourcename: expected0]
                CALL 1 [sourcename: expected0] [free_call: 1]
                    NAME JSCompiler_stubMethod 1 [sourcename: expected0]
                    NUMBER 1.0 1 [sourcename: expected0]
    SCRIPT 1 [sourcename: expected1] [synthetic: 1]
        EXPR_RESULT 1 [sourcename: expected1]
            ASSIGN 1 [sourcename: expected1]
                GETPROP 1 [sourcename: expected1]
                    GETPROP 1 [sourcename: expected1]
                        NAME Foo 1 [sourcename: expected1]
                        STRING prototype 1 [sourcename: expected1]
                    STRING callBaz 1 [sourcename: expected1]
                CALL 1 [sourcename: expected1] [free_call: 1]
                    NAME JSCompiler_stubMethod 1 [sourcename: expected1]
                    NUMBER 0.0 1 [sourcename: expected1]
    SCRIPT 1 [sourcename: expected2] [synthetic: 1]
        EXPR_RESULT 1 [sourcename: expected2]
            ASSIGN 1 [sourcename: expected2]
                GETPROP 1 [sourcename: expected2]
                    GETPROP 1 [sourcename: expected2]
                        NAME Foo 1 [sourcename: expected2]
                        STRING prototype 1 [sourcename: expected2]
                    STRING baz 1 [sourcename: expected2]
                CALL 1 [sourcename: expected2] [free_call: 1]
                    NAME JSCompiler_unstubMethod 1 [sourcename: expected2]
                    NUMBER 1.0 1 [sourcename: expected2]
                    FUNCTION  1 [sourcename: expected2]
                        NAME  1 [sourcename: expected2]
                        LP 1 [sourcename: expected2]
                        BLOCK 1 [sourcename: expected2]
        EXPR_RESULT 1 [sourcename: expected2]
            ASSIGN 1 [sourcename: expected2]
                GETPROP 1 [sourcename: expected2]
                    GETPROP 1 [sourcename: expected2]
                        NAME Foo 1 [sourcename: expected2]
                        STRING prototype 1 [sourcename: expected2]
                    STRING callBaz 1 [sourcename: expected2]
                CALL 1 [sourcename: expected2] [free_call: 1]
                    NAME JSCompiler_unstubMethod 1 [sourcename: expected2]
                    NUMBER 0.0 1 [sourcename: expected2]
                    FUNCTION  1 [sourcename: expected2]
                        NAME  1 [sourcename: expected2]
                        LP 1 [sourcename: expected2]
                        BLOCK 1 [sourcename: expected2]
                            EXPR_RESULT 1 [sourcename: expected2]
                                CALL 1 [sourcename: expected2]
                                    GETPROP 1 [sourcename: expected2]
                                        THIS 1 [sourcename: expected2]
                                        STRING baz 1 [sourcename: expected2]
        EXPR_RESULT 1 [sourcename: expected2]
            CALL 1 [sourcename: expected2]
                GETPROP 1 [sourcename: expected2]
                    NEW 1 [sourcename: expected2] [parenthesized: true]
                        NAME Foo 1 [sourcename: expected2]
                    STRING callBaz 1 [sourcename: expected2]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: i0] [synthetic: 1]
        VAR 1 [sourcename:  [synthetic] ]
            NAME JSCompiler_stubMap 1 [sourcename:  [synthetic] ]
                ARRAYLIT 1 [sourcename:  [synthetic] ]
        FUNCTION  1 [sourcename:  [synthetic] ]
            NAME JSCompiler_stubMethod 1 [sourcename:  [synthetic] ]
            LP 1 [sourcename:  [synthetic] ]
                NAME JSCompiler_stubMethod_id 1 [sourcename:  [synthetic] ]
            BLOCK 1 [sourcename:  [synthetic] ]
                RETURN 1 [sourcename:  [synthetic] ]
                    FUNCTION  1 [sourcename:  [synthetic] ]
                        NAME  1 [sourcename:  [synthetic] ]
                        LP 1 [sourcename:  [synthetic] ]
                        BLOCK 1 [sourcename:  [synthetic] ]
                            RETURN 1 [sourcename:  [synthetic] ]
                                CALL 1 [sourcename:  [synthetic] ]
                                    GETPROP 1 [sourcename:  [synthetic] ]
                                        GETELEM 1 [sourcename:  [synthetic] ]
                                            NAME JSCompiler_stubMap 1 [sourcename:  [synthetic] ]
                                            NAME JSCompiler_stubMethod_id 1 [sourcename:  [synthetic] ]
                                        STRING apply 1 [sourcename:  [synthetic] ]
                                    THIS 1 [sourcename:  [synthetic] ]
                                    NAME arguments 1 [sourcename:  [synthetic] ]
        FUNCTION  1 [sourcename:  [synthetic] ]
            NAME JSCompiler_unstubMethod 1 [sourcename:  [synthetic] ]
            LP 1 [sourcename:  [synthetic] ]
                NAME JSCompiler_unstubMethod_id 1 [sourcename:  [synthetic] ]
                NAME JSCompiler_unstubMethod_body 1 [sourcename:  [synthetic] ]
            BLOCK 1 [sourcename:  [synthetic] ]
                RETURN 1 [sourcename:  [synthetic] ]
                    ASSIGN 1 [sourcename:  [synthetic] ]
                        GETELEM 1 [sourcename:  [synthetic] ]
                            NAME JSCompiler_stubMap 1 [sourcename:  [synthetic] ]
                            NAME JSCompiler_unstubMethod_id 1 [sourcename:  [synthetic] ]
                        NAME JSCompiler_unstubMethod_body 1 [sourcename:  [synthetic] ]
        FUNCTION  1 [sourcename: i0]
            NAME Foo 1 [sourcename: i0]
            LP 1 [sourcename: i0]
            BLOCK 1 [sourcename: i0]
        EXPR_RESULT 1 [sourcename: i0]
            ASSIGN 1 [sourcename: i0]
                GETPROP 1 [sourcename: i0]
                    GETPROP 1 [sourcename: i0]
                        NAME Foo 1 [sourcename: i0]
                        STRING prototype 1 [sourcename: i0]
                    STRING baz 1 [sourcename: i0]
                CALL 1 [sourcename: i0]
                    NAME JSCompiler_stubMethod 1 [sourcename: i0]
                    NUMBER 0.0 1 [sourcename: i0]
    SCRIPT 1 [sourcename: i1] [synthetic: 1]
        EXPR_RESULT 1 [sourcename: i1]
            ASSIGN 1 [sourcename: i1]
                GETPROP 1 [sourcename: i1]
                    GETPROP 1 [sourcename: i1]
                        NAME Foo 1 [sourcename: i1]
                        STRING prototype 1 [sourcename: i1]
                    STRING callBaz 1 [sourcename: i1]
                CALL 1 [sourcename: i1]
                    NAME JSCompiler_stubMethod 1 [sourcename: i1]
                    NUMBER 1.0 1 [sourcename: i1]
    SCRIPT 1 [sourcename: i2] [synthetic: 1]
        EXPR_RESULT 1 [sourcename: i1]
            ASSIGN 1 [sourcename: i1]
                GETPROP 1 [sourcename: i1]
                    GETPROP 1 [sourcename: i1]
                        NAME Foo 1 [sourcename: i1]
                        STRING prototype 1 [sourcename: i1]
                    STRING callBaz 1 [sourcename: i1]
                CALL 1 [sourcename: i1]
                    NAME JSCompiler_unstubMethod 1 [sourcename: i1]
                    NUMBER 1.0 1 [sourcename: i1]
                    FUNCTION  1 [sourcename: i1]
                        NAME  1 [sourcename: i1]
                        LP 1 [sourcename: i1]
                        BLOCK 1 [sourcename: i1]
                            EXPR_RESULT 1 [sourcename: i1]
                                CALL 1 [sourcename: i1]
                                    GETPROP 1 [sourcename: i1]
                                        THIS 1 [sourcename: i1]
                                        STRING baz 1 [sourcename: i1]
        EXPR_RESULT 1 [sourcename: i0]
            ASSIGN 1 [sourcename: i0]
                GETPROP 1 [sourcename: i0]
                    GETPROP 1 [sourcename: i0]
                        NAME Foo 1 [sourcename: i0]
                        STRING prototype 1 [sourcename: i0]
                    STRING baz 1 [sourcename: i0]
                CALL 1 [sourcename: i0]
                    NAME JSCompiler_unstubMethod 1 [sourcename: i0]
                    NUMBER 0.0 1 [sourcename: i0]
                    FUNCTION  1 [sourcename: i0]
                        NAME  1 [sourcename: i0]
                        LP 1 [sourcename: i0]
                        BLOCK 1 [sourcename: i0]
        EXPR_RESULT 1 [sourcename: i2]
            CALL 1 [sourcename: i2]
                GETPROP 1 [sourcename: i2]
                    NEW 1 [sourcename: i2] [parenthesized: true]
                        NAME Foo 1 [sourcename: i2]
                    STRING callBaz 1 [sourcename: i2]


Subtree1: NUMBER 1.0 1 [sourcename: expected0]


Subtree2: NUMBER 0.0 1 [sourcename: i0]
]
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_stubMap=[];function JSCompiler_stubMethod(JSCompiler_stubMethod_id){return function(){return JSCompiler_stubMap[JSCompiler_stubMethod_id].apply(this,arguments)}}function JSCompiler_unstubMethod(JSCompiler_unstubMethod_id,JSCompiler_unstubMethod_body){return JSCompiler_stubMap[JSCompiler_unstubMethod_id]=JSCompiler_unstubMethod_body}function Foo(){}Foo.prototype.baz=JSCompiler_stubMethod(1);Foo.prototype.callBaz=JSCompiler_stubMethod(0);Foo.prototype.baz=JSCompiler_unstubMethod(1,function(){});
Foo.prototype.callBaz=JSCompiler_unstubMethod(0,function(){this.baz()});(new Foo).callBaz()
Result: var JSCompiler_stubMap=[];function JSCompiler_stubMethod(JSCompiler_stubMethod_id){return function(){return JSCompiler_stubMap[JSCompiler_stubMethod_id].apply(this,arguments)}}function JSCompiler_unstubMethod(JSCompiler_unstubMethod_id,JSCompiler_unstubMethod_body){return JSCompiler_stubMap[JSCompiler_unstubMethod_id]=JSCompiler_unstubMethod_body}function Foo(){}Foo.prototype.baz=JSCompiler_stubMethod(0);Foo.prototype.callBaz=JSCompiler_stubMethod(1);
Foo.prototype.callBaz=JSCompiler_unstubMethod(1,function(){this.baz()});Foo.prototype.baz=JSCompiler_unstubMethod(0,function(){});(new Foo).callBaz()
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_stubMap 1 [sourcename: expected0]
                ARRAYLIT 1 [sourcename: expected0]
        FUNCTION  1 [sourcename: expected0]
            NAME JSCompiler_stubMethod 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
                NAME JSCompiler_stubMethod_id 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                RETURN 1 [sourcename: expected0]
                    FUNCTION  1 [sourcename: expected0]
                        NAME  1 [sourcename: expected0]
                        LP 1 [sourcename: expected0]
                        BLOCK 1 [sourcename: expected0]
                            RETURN 1 [sourcename: expected0]
                                CALL 1 [sourcename: expected0]
                                    GETPROP 1 [sourcename: expected0]
                                        GETELEM 1 [sourcename: expected0]
                                            NAME JSCompiler_stubMap 1 [sourcename: expected0]
                                            NAME JSCompiler_stubMethod_id 1 [sourcename: expected0]
                                        STRING apply 1 [sourcename: expected0]
                                    THIS 1 [sourcename: expected0]
                                    NAME arguments 1 [sourcename: expected0]
        FUNCTION  1 [sourcename: expected0]
            NAME JSCompiler_unstubMethod 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
                NAME JSCompiler_unstubMethod_id 1 [sourcename: expected0]
                NAME JSCompiler_unstubMethod_body 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                RETURN 1 [sourcename: expected0]
                    ASSIGN 1 [sourcename: expected0]
                        GETELEM 1 [sourcename: expected0]
                            NAME JSCompiler_stubMap 1 [sourcename: expected0]
                            NAME JSCompiler_unstubMethod_id 1 [sourcename: expected0]
                        NAME JSCompiler_unstubMethod_body 1 [sourcename: expected0]
        FUNCTION  1 [sourcename: expected0]
            NAME Foo 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            ASSIGN 1 [sourcename: expected0]
                GETPROP 1 [sourcename: expected0]
                    GETPROP 1 [sourcename: expected0]
                        NAME Foo 1 [sourcename: expected0]
                        STRING prototype 1 [sourcename: expected0]
                    STRING baz 1 [sourcename: expected0]
                CALL 1 [sourcename: expected0] [free_call: 1]
                    NAME JSCompiler_stubMethod 1 [sourcename: expected0]
                    NUMBER 1.0 1 [sourcename: expected0]
    SCRIPT 1 [sourcename: expected1] [synthetic: 1]
        EXPR_RESULT 1 [sourcename: expected1]
            ASSIGN 1 [sourcename: expected1]
                GETPROP 1 [sourcename: expected1]
                    GETPROP 1 [sourcename: expected1]
                        NAME Foo 1 [sourcename: expected1]
                        STRING prototype 1 [sourcename: expected1]
                    STRING callBaz 1 [sourcename: expected1]
                CALL 1 [sourcename: expected1] [free_call: 1]
                    NAME JSCompiler_stubMethod 1 [sourcename: expected1]
                    NUMBER 0.0 1 [sourcename: expected1]
    SCRIPT 1 [sourcename: expected2] [synthetic: 1]
        EXPR_RESULT 1 [sourcename: expected2]
            ASSIGN 1 [sourcename: expected2]
                GETPROP 1 [sourcename: expected2]
                    GETPROP 1 [sourcename: expected2]
                        NAME Foo 1 [sourcename: expected2]
                        STRING prototype 1 [sourcename: expected2]
                    STRING baz 1 [sourcename: expected2]
                CALL 1 [sourcename: expected2] [free_call: 1]
                    NAME JSCompiler_unstubMethod 1 [sourcename: expected2]
                    NUMBER 1.0 1 [sourcename: expected2]
                    FUNCTION  1 [sourcename: expected2]
                        NAME  1 [sourcename: expected2]
                        LP 1 [sourcename: expected2]
                        BLOCK 1 [sourcename: expected2]
        EXPR_RESULT 1 [sourcename: expected2]
            ASSIGN 1 [sourcename: expected2]
                GETPROP 1 [sourcename: expected2]
                    GETPROP 1 [sourcename: expected2]
                        NAME Foo 1 [sourcename: expected2]
                        STRING prototype 1 [sourcename: expected2]
                    STRING callBaz 1 [sourcename: expected2]
                CALL 1 [sourcename: expected2] [free_call: 1]
                    NAME JSCompiler_unstubMethod 1 [sourcename: expected2]
                    NUMBER 0.0 1 [sourcename: expected2]
                    FUNCTION  1 [sourcename: expected2]
                        NAME  1 [sourcename: expected2]
                        LP 1 [sourcename: expected2]
                        BLOCK 1 [sourcename: expected2]
                            EXPR_RESULT 1 [sourcename: expected2]
                                CALL 1 [sourcename: expected2]
                                    GETPROP 1 [sourcename: expected2]
                                        THIS 1 [sourcename: expected2]
                                        STRING baz 1 [sourcename: expected2]
        EXPR_RESULT 1 [sourcename: expected2]
            CALL 1 [sourcename: expected2]
                GETPROP 1 [sourcename: expected2]
                    NEW 1 [sourcename: expected2] [parenthesized: true]
                        NAME Foo 1 [sourcename: expected2]
                    STRING callBaz 1 [sourcename: expected2]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: i0] [synthetic: 1]
        VAR 1 [sourcename:  [synthetic] ]
            NAME JSCompiler_stubMap 1 [sourcename:  [synthetic] ]
                ARRAYLIT 1 [sourcename:  [synthetic] ]
        FUNCTION  1 [sourcename:  [synthetic] ]
            NAME JSCompiler_stubMethod 1 [sourcename:  [synthetic] ]
            LP 1 [sourcename:  [synthetic] ]
                NAME JSCompiler_stubMethod_id 1 [sourcename:  [synthetic] ]
            BLOCK 1 [sourcename:  [synthetic] ]
                RETURN 1 [sourcename:  [synthetic] ]
                    FUNCTION  1 [sourcename:  [synthetic] ]
                        NAME  1 [sourcename:  [synthetic] ]
                        LP 1 [sourcename:  [synthetic] ]
                        BLOCK 1 [sourcename:  [synthetic] ]
                            RETURN 1 [sourcename:  [synthetic] ]
                                CALL 1 [sourcename:  [synthetic] ]
                                    GETPROP 1 [sourcename:  [synthetic] ]
                                        GETELEM 1 [sourcename:  [synthetic] ]
                                            NAME JSCompiler_stubMap 1 [sourcename:  [synthetic] ]
                                            NAME JSCompiler_stubMethod_id 1 [sourcename:  [synthetic] ]
                                        STRING apply 1 [sourcename:  [synthetic] ]
                                    THIS 1 [sourcename:  [synthetic] ]
                                    NAME arguments 1 [sourcename:  [synthetic] ]
        FUNCTION  1 [sourcename:  [synthetic] ]
            NAME JSCompiler_unstubMethod 1 [sourcename:  [synthetic] ]
            LP 1 [sourcename:  [synthetic] ]
                NAME JSCompiler_unstubMethod_id 1 [sourcename:  [synthetic] ]
                NAME JSCompiler_unstubMethod_body 1 [sourcename:  [synthetic] ]
            BLOCK 1 [sourcename:  [synthetic] ]
                RETURN 1 [sourcename:  [synthetic] ]
                    ASSIGN 1 [sourcename:  [synthetic] ]
                        GETELEM 1 [sourcename:  [synthetic] ]
                            NAME JSCompiler_stubMap 1 [sourcename:  [synthetic] ]
                            NAME JSCompiler_unstubMethod_id 1 [sourcename:  [synthetic] ]
                        NAME JSCompiler_unstubMethod_body 1 [sourcename:  [synthetic] ]
        FUNCTION  1 [sourcename: i0]
            NAME Foo 1 [sourcename: i0]
            LP 1 [sourcename: i0]
            BLOCK 1 [sourcename: i0]
        EXPR_RESULT 1 [sourcename: i0]
            ASSIGN 1 [sourcename: i0]
                GETPROP 1 [sourcename: i0]
                    GETPROP 1 [sourcename: i0]
                        NAME Foo 1 [sourcename: i0]
                        STRING prototype 1 [sourcename: i0]
                    STRING baz 1 [sourcename: i0]
                CALL 1 [sourcename: i0]
                    NAME JSCompiler_stubMethod 1 [sourcename: i0]
                    NUMBER 0.0 1 [sourcename: i0]
    SCRIPT 1 [sourcename: i1] [synthetic: 1]
        EXPR_RESULT 1 [sourcename: i1]
            ASSIGN 1 [sourcename: i1]
                GETPROP 1 [sourcename: i1]
                    GETPROP 1 [sourcename: i1]
                        NAME Foo 1 [sourcename: i1]
                        STRING prototype 1 [sourcename: i1]
                    STRING callBaz 1 [sourcename: i1]
                CALL 1 [sourcename: i1]
                    NAME JSCompiler_stubMethod 1 [sourcename: i1]
                    NUMBER 1.0 1 [sourcename: i1]
    SCRIPT 1 [sourcename: i2] [synthetic: 1]
        EXPR_RESULT 1 [sourcename: i1]
            ASSIGN 1 [sourcename: i1]
                GETPROP 1 [sourcename: i1]
                    GETPROP 1 [sourcename: i1]
                        NAME Foo 1 [sourcename: i1]
                        STRING prototype 1 [sourcename: i1]
                    STRING callBaz 1 [sourcename: i1]
                CALL 1 [sourcename: i1]
                    NAME JSCompiler_unstubMethod 1 [sourcename: i1]
                    NUMBER 1.0 1 [sourcename: i1]
                    FUNCTION  1 [sourcename: i1]
                        NAME  1 [sourcename: i1]
                        LP 1 [sourcename: i1]
                        BLOCK 1 [sourcename: i1]
                            EXPR_RESULT 1 [sourcename: i1]
                                CALL 1 [sourcename: i1]
                                    GETPROP 1 [sourcename: i1]
                                        THIS 1 [sourcename: i1]
                                        STRING baz 1 [sourcename: i1]
        EXPR_RESULT 1 [sourcename: i0]
            ASSIGN 1 [sourcename: i0]
                GETPROP 1 [sourcename: i0]
                    GETPROP 1 [sourcename: i0]
                        NAME Foo 1 [sourcename: i0]
                        STRING prototype 1 [sourcename: i0]
                    STRING baz 1 [sourcename: i0]
                CALL 1 [sourcename: i0]
                    NAME JSCompiler_unstubMethod 1 [sourcename: i0]
                    NUMBER 0.0 1 [sourcename: i0]
                    FUNCTION  1 [sourcename: i0]
                        NAME  1 [sourcename: i0]
                        LP 1 [sourcename: i0]
                        BLOCK 1 [sourcename: i0]
        EXPR_RESULT 1 [sourcename: i2]
            CALL 1 [sourcename: i2]
                GETPROP 1 [sourcename: i2]
                    NEW 1 [sourcename: i2] [parenthesized: true]
                        NAME Foo 1 [sourcename: i2]
                    STRING callBaz 1 [sourcename: i2]


Subtree1: NUMBER 1.0 1 [sourcename: expected0]


Subtree2: NUMBER 0.0 1 [sourcename: i0]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:843)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:679)
~ testClosureVariableReads3(com.google.javascript.jscomp.CrossModuleMethodMotionTest)
[
Expected: var JSCompiler_stubMap=[];function JSCompiler_stubMethod(JSCompiler_stubMethod_id){return function(){return JSCompiler_stubMap[JSCompiler_stubMethod_id].apply(this,arguments)}}function JSCompiler_unstubMethod(JSCompiler_unstubMethod_id,JSCompiler_unstubMethod_body){return JSCompiler_stubMap[JSCompiler_unstubMethod_id]=JSCompiler_unstubMethod_body}function Foo(){}Foo.prototype.b1=JSCompiler_stubMethod(0);Foo.prototype.b1=JSCompiler_unstubMethod(0,function(){Foo.prototype.b2=JSCompiler_stubMethod(1)});
var y=new Foo;y.b1();Foo.prototype.b2=JSCompiler_unstubMethod(1,function(){var x=1;Foo.prototype.b3=function(){x}});y=new Foo;z.b2();y=new Foo;z.b3()
Result: var JSCompiler_stubMap=[];function JSCompiler_stubMethod(JSCompiler_stubMethod_id){return function(){return JSCompiler_stubMap[JSCompiler_stubMethod_id].apply(this,arguments)}}function JSCompiler_unstubMethod(JSCompiler_unstubMethod_id,JSCompiler_unstubMethod_body){return JSCompiler_stubMap[JSCompiler_unstubMethod_id]=JSCompiler_unstubMethod_body}function Foo(){}Foo.prototype.b1=JSCompiler_stubMethod(1);Foo.prototype.b1=JSCompiler_unstubMethod(1,function(){Foo.prototype.b2=JSCompiler_stubMethod(0)});
var y=new Foo;y.b1();Foo.prototype.b2=JSCompiler_unstubMethod(0,function(){var x=1;Foo.prototype.b3=function(){x}});y=new Foo;z.b2();y=new Foo;z.b3()
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_stubMap 1 [sourcename: expected0]
                ARRAYLIT 1 [sourcename: expected0]
        FUNCTION  1 [sourcename: expected0]
            NAME JSCompiler_stubMethod 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
                NAME JSCompiler_stubMethod_id 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                RETURN 1 [sourcename: expected0]
                    FUNCTION  1 [sourcename: expected0]
                        NAME  1 [sourcename: expected0]
                        LP 1 [sourcename: expected0]
                        BLOCK 1 [sourcename: expected0]
                            RETURN 1 [sourcename: expected0]
                                CALL 1 [sourcename: expected0]
                                    GETPROP 1 [sourcename: expected0]
                                        GETELEM 1 [sourcename: expected0]
                                            NAME JSCompiler_stubMap 1 [sourcename: expected0]
                                            NAME JSCompiler_stubMethod_id 1 [sourcename: expected0]
                                        STRING apply 1 [sourcename: expected0]
                                    THIS 1 [sourcename: expected0]
                                    NAME arguments 1 [sourcename: expected0]
        FUNCTION  1 [sourcename: expected0]
            NAME JSCompiler_unstubMethod 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
                NAME JSCompiler_unstubMethod_id 1 [sourcename: expected0]
                NAME JSCompiler_unstubMethod_body 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                RETURN 1 [sourcename: expected0]
                    ASSIGN 1 [sourcename: expected0]
                        GETELEM 1 [sourcename: expected0]
                            NAME JSCompiler_stubMap 1 [sourcename: expected0]
                            NAME JSCompiler_unstubMethod_id 1 [sourcename: expected0]
                        NAME JSCompiler_unstubMethod_body 1 [sourcename: expected0]
        FUNCTION  1 [sourcename: expected0]
            NAME Foo 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            ASSIGN 1 [sourcename: expected0]
                GETPROP 1 [sourcename: expected0]
                    GETPROP 1 [sourcename: expected0]
                        NAME Foo 1 [sourcename: expected0]
                        STRING prototype 1 [sourcename: expected0]
                    STRING b1 1 [sourcename: expected0]
                CALL 1 [sourcename: expected0] [free_call: 1]
                    NAME JSCompiler_stubMethod 1 [sourcename: expected0]
                    NUMBER 0.0 1 [sourcename: expected0]
    SCRIPT 1 [sourcename: expected1] [synthetic: 1]
        EXPR_RESULT 1 [sourcename: expected1]
            ASSIGN 1 [sourcename: expected1]
                GETPROP 1 [sourcename: expected1]
                    GETPROP 1 [sourcename: expected1]
                        NAME Foo 1 [sourcename: expected1]
                        STRING prototype 1 [sourcename: expected1]
                    STRING b1 1 [sourcename: expected1]
                CALL 1 [sourcename: expected1] [free_call: 1]
                    NAME JSCompiler_unstubMethod 1 [sourcename: expected1]
                    NUMBER 0.0 1 [sourcename: expected1]
                    FUNCTION  1 [sourcename: expected1]
                        NAME  1 [sourcename: expected1]
                        LP 1 [sourcename: expected1]
                        BLOCK 1 [sourcename: expected1]
                            EXPR_RESULT 1 [sourcename: expected1]
                                ASSIGN 1 [sourcename: expected1]
                                    GETPROP 1 [sourcename: expected1]
                                        GETPROP 1 [sourcename: expected1]
                                            NAME Foo 1 [sourcename: expected1]
                                            STRING prototype 1 [sourcename: expected1]
                                        STRING b2 1 [sourcename: expected1]
                                    CALL 1 [sourcename: expected1] [free_call: 1]
                                        NAME JSCompiler_stubMethod 1 [sourcename: expected1]
                                        NUMBER 1.0 1 [sourcename: expected1]
        VAR 1 [sourcename: expected1]
            NAME y 1 [sourcename: expected1]
                NEW 1 [sourcename: expected1]
                    NAME Foo 1 [sourcename: expected1]
        EXPR_RESULT 1 [sourcename: expected1]
            CALL 1 [sourcename: expected1]
                GETPROP 1 [sourcename: expected1]
                    NAME y 1 [sourcename: expected1]
                    STRING b1 1 [sourcename: expected1]
    SCRIPT 1 [sourcename: expected2] [synthetic: 1]
        EXPR_RESULT 1 [sourcename: expected2]
            ASSIGN 1 [sourcename: expected2]
                GETPROP 1 [sourcename: expected2]
                    GETPROP 1 [sourcename: expected2]
                        NAME Foo 1 [sourcename: expected2]
                        STRING prototype 1 [sourcename: expected2]
                    STRING b2 1 [sourcename: expected2]
                CALL 1 [sourcename: expected2] [free_call: 1]
                    NAME JSCompiler_unstubMethod 1 [sourcename: expected2]
                    NUMBER 1.0 1 [sourcename: expected2]
                    FUNCTION  1 [sourcename: expected2]
                        NAME  1 [sourcename: expected2]
                        LP 1 [sourcename: expected2]
                        BLOCK 1 [sourcename: expected2]
                            VAR 1 [sourcename: expected2]
                                NAME x 1 [sourcename: expected2]
                                    NUMBER 1.0 1 [sourcename: expected2]
                            EXPR_RESULT 1 [sourcename: expected2]
                                ASSIGN 1 [sourcename: expected2]
                                    GETPROP 1 [sourcename: expected2]
                                        GETPROP 1 [sourcename: expected2]
                                            NAME Foo 1 [sourcename: expected2]
                                            STRING prototype 1 [sourcename: expected2]
                                        STRING b3 1 [sourcename: expected2]
                                    FUNCTION  1 [sourcename: expected2]
                                        NAME  1 [sourcename: expected2]
                                        LP 1 [sourcename: expected2]
                                        BLOCK 1 [sourcename: expected2]
                                            EXPR_RESULT 1 [sourcename: expected2]
                                                NAME x 1 [sourcename: expected2]
        EXPR_RESULT 1 [sourcename: expected2]
            ASSIGN 1 [sourcename: expected2]
                NAME y 1 [sourcename: expected2]
                NEW 1 [sourcename: expected2]
                    NAME Foo 1 [sourcename: expected2]
        EXPR_RESULT 1 [sourcename: expected2]
            CALL 1 [sourcename: expected2]
                GETPROP 1 [sourcename: expected2]
                    NAME z 1 [sourcename: expected2]
                    STRING b2 1 [sourcename: expected2]
    SCRIPT 1 [sourcename: expected3] [synthetic: 1]
        EXPR_RESULT 1 [sourcename: expected3]
            ASSIGN 1 [sourcename: expected3]
                NAME y 1 [sourcename: expected3]
                NEW 1 [sourcename: expected3]
                    NAME Foo 1 [sourcename: expected3]
        EXPR_RESULT 1 [sourcename: expected3]
            CALL 1 [sourcename: expected3]
                GETPROP 1 [sourcename: expected3]
                    NAME z 1 [sourcename: expected3]
                    STRING b3 1 [sourcename: expected3]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: i0] [synthetic: 1]
        VAR 1 [sourcename:  [synthetic] ]
            NAME JSCompiler_stubMap 1 [sourcename:  [synthetic] ]
                ARRAYLIT 1 [sourcename:  [synthetic] ]
        FUNCTION  1 [sourcename:  [synthetic] ]
            NAME JSCompiler_stubMethod 1 [sourcename:  [synthetic] ]
            LP 1 [sourcename:  [synthetic] ]
                NAME JSCompiler_stubMethod_id 1 [sourcename:  [synthetic] ]
            BLOCK 1 [sourcename:  [synthetic] ]
                RETURN 1 [sourcename:  [synthetic] ]
                    FUNCTION  1 [sourcename:  [synthetic] ]
                        NAME  1 [sourcename:  [synthetic] ]
                        LP 1 [sourcename:  [synthetic] ]
                        BLOCK 1 [sourcename:  [synthetic] ]
                            RETURN 1 [sourcename:  [synthetic] ]
                                CALL 1 [sourcename:  [synthetic] ]
                                    GETPROP 1 [sourcename:  [synthetic] ]
                                        GETELEM 1 [sourcename:  [synthetic] ]
                                            NAME JSCompiler_stubMap 1 [sourcename:  [synthetic] ]
                                            NAME JSCompiler_stubMethod_id 1 [sourcename:  [synthetic] ]
                                        STRING apply 1 [sourcename:  [synthetic] ]
                                    THIS 1 [sourcename:  [synthetic] ]
                                    NAME arguments 1 [sourcename:  [synthetic] ]
        FUNCTION  1 [sourcename:  [synthetic] ]
            NAME JSCompiler_unstubMethod 1 [sourcename:  [synthetic] ]
            LP 1 [sourcename:  [synthetic] ]
                NAME JSCompiler_unstubMethod_id 1 [sourcename:  [synthetic] ]
                NAME JSCompiler_unstubMethod_body 1 [sourcename:  [synthetic] ]
            BLOCK 1 [sourcename:  [synthetic] ]
                RETURN 1 [sourcename:  [synthetic] ]
                    ASSIGN 1 [sourcename:  [synthetic] ]
                        GETELEM 1 [sourcename:  [synthetic] ]
                            NAME JSCompiler_stubMap 1 [sourcename:  [synthetic] ]
                            NAME JSCompiler_unstubMethod_id 1 [sourcename:  [synthetic] ]
                        NAME JSCompiler_unstubMethod_body 1 [sourcename:  [synthetic] ]
        FUNCTION  1 [sourcename: i0]
            NAME Foo 1 [sourcename: i0]
            LP 1 [sourcename: i0]
            BLOCK 1 [sourcename: i0]
        EXPR_RESULT 1 [sourcename: i0]
            ASSIGN 1 [sourcename: i0]
                GETPROP 1 [sourcename: i0]
                    GETPROP 1 [sourcename: i0]
                        NAME Foo 1 [sourcename: i0]
                        STRING prototype 1 [sourcename: i0]
                    STRING b1 1 [sourcename: i0]
                CALL 1 [sourcename: i0]
                    NAME JSCompiler_stubMethod 1 [sourcename: i0]
                    NUMBER 1.0 1 [sourcename: i0]
    SCRIPT 1 [sourcename: i1] [synthetic: 1]
        EXPR_RESULT 1 [sourcename: i0]
            ASSIGN 1 [sourcename: i0]
                GETPROP 1 [sourcename: i0]
                    GETPROP 1 [sourcename: i0]
                        NAME Foo 1 [sourcename: i0]
                        STRING prototype 1 [sourcename: i0]
                    STRING b1 1 [sourcename: i0]
                CALL 1 [sourcename: i0]
                    NAME JSCompiler_unstubMethod 1 [sourcename: i0]
                    NUMBER 1.0 1 [sourcename: i0]
                    FUNCTION  1 [sourcename: i0]
                        NAME  1 [sourcename: i0]
                        LP 1 [sourcename: i0]
                        BLOCK 1 [sourcename: i0]
                            EXPR_RESULT 1 [sourcename: i0]
                                ASSIGN 1 [sourcename: i0]
                                    GETPROP 1 [sourcename: i0]
                                        GETPROP 1 [sourcename: i0]
                                            NAME Foo 1 [sourcename: i0]
                                            STRING prototype 1 [sourcename: i0]
                                        STRING b2 1 [sourcename: i0]
                                    CALL 1 [sourcename: i0]
                                        NAME JSCompiler_stubMethod 1 [sourcename: i0]
                                        NUMBER 0.0 1 [sourcename: i0]
        VAR 1 [sourcename: i1]
            NAME y 1 [sourcename: i1]
                NEW 1 [sourcename: i1]
                    NAME Foo 1 [sourcename: i1]
        EXPR_RESULT 1 [sourcename: i1]
            CALL 1 [sourcename: i1]
                GETPROP 1 [sourcename: i1]
                    NAME y 1 [sourcename: i1]
                    STRING b1 1 [sourcename: i1]
    SCRIPT 1 [sourcename: i2] [synthetic: 1]
        EXPR_RESULT 1 [sourcename: i0]
            ASSIGN 1 [sourcename: i0]
                GETPROP 1 [sourcename: i0]
                    GETPROP 1 [sourcename: i0]
                        NAME Foo 1 [sourcename: i0]
                        STRING prototype 1 [sourcename: i0]
                    STRING b2 1 [sourcename: i0]
                CALL 1 [sourcename: i0]
                    NAME JSCompiler_unstubMethod 1 [sourcename: i0]
                    NUMBER 0.0 1 [sourcename: i0]
                    FUNCTION  1 [sourcename: i0]
                        NAME  1 [sourcename: i0]
                        LP 1 [sourcename: i0]
                        BLOCK 1 [sourcename: i0]
                            VAR 1 [sourcename: i0]
                                NAME x 1 [sourcename: i0]
                                    NUMBER 1.0 1 [sourcename: i0]
                            EXPR_RESULT 1 [sourcename: i0]
                                ASSIGN 1 [sourcename: i0]
                                    GETPROP 1 [sourcename: i0]
                                        GETPROP 1 [sourcename: i0]
                                            NAME Foo 1 [sourcename: i0]
                                            STRING prototype 1 [sourcename: i0]
                                        STRING b3 1 [sourcename: i0]
                                    FUNCTION  1 [sourcename: i0]
                                        NAME  1 [sourcename: i0]
                                        LP 1 [sourcename: i0]
                                        BLOCK 1 [sourcename: i0]
                                            EXPR_RESULT 1 [sourcename: i0]
                                                NAME x 1 [sourcename: i0]
        EXPR_RESULT 1 [sourcename: i2]
            ASSIGN 1 [sourcename: i2]
                NAME y 1 [sourcename: i2]
                NEW 1 [sourcename: i2]
                    NAME Foo 1 [sourcename: i2]
        EXPR_RESULT 1 [sourcename: i2]
            CALL 1 [sourcename: i2]
                GETPROP 1 [sourcename: i2]
                    NAME z 1 [sourcename: i2]
                    STRING b2 1 [sourcename: i2]
    SCRIPT 1 [sourcename: i3] [synthetic: 1]
        EXPR_RESULT 1 [sourcename: i3]
            ASSIGN 1 [sourcename: i3]
                NAME y 1 [sourcename: i3]
                NEW 1 [sourcename: i3]
                    NAME Foo 1 [sourcename: i3]
        EXPR_RESULT 1 [sourcename: i3]
            CALL 1 [sourcename: i3]
                GETPROP 1 [sourcename: i3]
                    NAME z 1 [sourcename: i3]
                    STRING b3 1 [sourcename: i3]


Subtree1: NUMBER 0.0 1 [sourcename: expected0]


Subtree2: NUMBER 1.0 1 [sourcename: i0]
]
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_stubMap=[];function JSCompiler_stubMethod(JSCompiler_stubMethod_id){return function(){return JSCompiler_stubMap[JSCompiler_stubMethod_id].apply(this,arguments)}}function JSCompiler_unstubMethod(JSCompiler_unstubMethod_id,JSCompiler_unstubMethod_body){return JSCompiler_stubMap[JSCompiler_unstubMethod_id]=JSCompiler_unstubMethod_body}function Foo(){}Foo.prototype.b1=JSCompiler_stubMethod(0);Foo.prototype.b1=JSCompiler_unstubMethod(0,function(){Foo.prototype.b2=JSCompiler_stubMethod(1)});
var y=new Foo;y.b1();Foo.prototype.b2=JSCompiler_unstubMethod(1,function(){var x=1;Foo.prototype.b3=function(){x}});y=new Foo;z.b2();y=new Foo;z.b3()
Result: var JSCompiler_stubMap=[];function JSCompiler_stubMethod(JSCompiler_stubMethod_id){return function(){return JSCompiler_stubMap[JSCompiler_stubMethod_id].apply(this,arguments)}}function JSCompiler_unstubMethod(JSCompiler_unstubMethod_id,JSCompiler_unstubMethod_body){return JSCompiler_stubMap[JSCompiler_unstubMethod_id]=JSCompiler_unstubMethod_body}function Foo(){}Foo.prototype.b1=JSCompiler_stubMethod(1);Foo.prototype.b1=JSCompiler_unstubMethod(1,function(){Foo.prototype.b2=JSCompiler_stubMethod(0)});
var y=new Foo;y.b1();Foo.prototype.b2=JSCompiler_unstubMethod(0,function(){var x=1;Foo.prototype.b3=function(){x}});y=new Foo;z.b2();y=new Foo;z.b3()
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_stubMap 1 [sourcename: expected0]
                ARRAYLIT 1 [sourcename: expected0]
        FUNCTION  1 [sourcename: expected0]
            NAME JSCompiler_stubMethod 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
                NAME JSCompiler_stubMethod_id 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                RETURN 1 [sourcename: expected0]
                    FUNCTION  1 [sourcename: expected0]
                        NAME  1 [sourcename: expected0]
                        LP 1 [sourcename: expected0]
                        BLOCK 1 [sourcename: expected0]
                            RETURN 1 [sourcename: expected0]
                                CALL 1 [sourcename: expected0]
                                    GETPROP 1 [sourcename: expected0]
                                        GETELEM 1 [sourcename: expected0]
                                            NAME JSCompiler_stubMap 1 [sourcename: expected0]
                                            NAME JSCompiler_stubMethod_id 1 [sourcename: expected0]
                                        STRING apply 1 [sourcename: expected0]
                                    THIS 1 [sourcename: expected0]
                                    NAME arguments 1 [sourcename: expected0]
        FUNCTION  1 [sourcename: expected0]
            NAME JSCompiler_unstubMethod 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
                NAME JSCompiler_unstubMethod_id 1 [sourcename: expected0]
                NAME JSCompiler_unstubMethod_body 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                RETURN 1 [sourcename: expected0]
                    ASSIGN 1 [sourcename: expected0]
                        GETELEM 1 [sourcename: expected0]
                            NAME JSCompiler_stubMap 1 [sourcename: expected0]
                            NAME JSCompiler_unstubMethod_id 1 [sourcename: expected0]
                        NAME JSCompiler_unstubMethod_body 1 [sourcename: expected0]
        FUNCTION  1 [sourcename: expected0]
            NAME Foo 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            ASSIGN 1 [sourcename: expected0]
                GETPROP 1 [sourcename: expected0]
                    GETPROP 1 [sourcename: expected0]
                        NAME Foo 1 [sourcename: expected0]
                        STRING prototype 1 [sourcename: expected0]
                    STRING b1 1 [sourcename: expected0]
                CALL 1 [sourcename: expected0] [free_call: 1]
                    NAME JSCompiler_stubMethod 1 [sourcename: expected0]
                    NUMBER 0.0 1 [sourcename: expected0]
    SCRIPT 1 [sourcename: expected1] [synthetic: 1]
        EXPR_RESULT 1 [sourcename: expected1]
            ASSIGN 1 [sourcename: expected1]
                GETPROP 1 [sourcename: expected1]
                    GETPROP 1 [sourcename: expected1]
                        NAME Foo 1 [sourcename: expected1]
                        STRING prototype 1 [sourcename: expected1]
                    STRING b1 1 [sourcename: expected1]
                CALL 1 [sourcename: expected1] [free_call: 1]
                    NAME JSCompiler_unstubMethod 1 [sourcename: expected1]
                    NUMBER 0.0 1 [sourcename: expected1]
                    FUNCTION  1 [sourcename: expected1]
                        NAME  1 [sourcename: expected1]
                        LP 1 [sourcename: expected1]
                        BLOCK 1 [sourcename: expected1]
                            EXPR_RESULT 1 [sourcename: expected1]
                                ASSIGN 1 [sourcename: expected1]
                                    GETPROP 1 [sourcename: expected1]
                                        GETPROP 1 [sourcename: expected1]
                                            NAME Foo 1 [sourcename: expected1]
                                            STRING prototype 1 [sourcename: expected1]
                                        STRING b2 1 [sourcename: expected1]
                                    CALL 1 [sourcename: expected1] [free_call: 1]
                                        NAME JSCompiler_stubMethod 1 [sourcename: expected1]
                                        NUMBER 1.0 1 [sourcename: expected1]
        VAR 1 [sourcename: expected1]
            NAME y 1 [sourcename: expected1]
                NEW 1 [sourcename: expected1]
                    NAME Foo 1 [sourcename: expected1]
        EXPR_RESULT 1 [sourcename: expected1]
            CALL 1 [sourcename: expected1]
                GETPROP 1 [sourcename: expected1]
                    NAME y 1 [sourcename: expected1]
                    STRING b1 1 [sourcename: expected1]
    SCRIPT 1 [sourcename: expected2] [synthetic: 1]
        EXPR_RESULT 1 [sourcename: expected2]
            ASSIGN 1 [sourcename: expected2]
                GETPROP 1 [sourcename: expected2]
                    GETPROP 1 [sourcename: expected2]
                        NAME Foo 1 [sourcename: expected2]
                        STRING prototype 1 [sourcename: expected2]
                    STRING b2 1 [sourcename: expected2]
                CALL 1 [sourcename: expected2] [free_call: 1]
                    NAME JSCompiler_unstubMethod 1 [sourcename: expected2]
                    NUMBER 1.0 1 [sourcename: expected2]
                    FUNCTION  1 [sourcename: expected2]
                        NAME  1 [sourcename: expected2]
                        LP 1 [sourcename: expected2]
                        BLOCK 1 [sourcename: expected2]
                            VAR 1 [sourcename: expected2]
                                NAME x 1 [sourcename: expected2]
                                    NUMBER 1.0 1 [sourcename: expected2]
                            EXPR_RESULT 1 [sourcename: expected2]
                                ASSIGN 1 [sourcename: expected2]
                                    GETPROP 1 [sourcename: expected2]
                                        GETPROP 1 [sourcename: expected2]
                                            NAME Foo 1 [sourcename: expected2]
                                            STRING prototype 1 [sourcename: expected2]
                                        STRING b3 1 [sourcename: expected2]
                                    FUNCTION  1 [sourcename: expected2]
                                        NAME  1 [sourcename: expected2]
                                        LP 1 [sourcename: expected2]
                                        BLOCK 1 [sourcename: expected2]
                                            EXPR_RESULT 1 [sourcename: expected2]
                                                NAME x 1 [sourcename: expected2]
        EXPR_RESULT 1 [sourcename: expected2]
            ASSIGN 1 [sourcename: expected2]
                NAME y 1 [sourcename: expected2]
                NEW 1 [sourcename: expected2]
                    NAME Foo 1 [sourcename: expected2]
        EXPR_RESULT 1 [sourcename: expected2]
            CALL 1 [sourcename: expected2]
                GETPROP 1 [sourcename: expected2]
                    NAME z 1 [sourcename: expected2]
                    STRING b2 1 [sourcename: expected2]
    SCRIPT 1 [sourcename: expected3] [synthetic: 1]
        EXPR_RESULT 1 [sourcename: expected3]
            ASSIGN 1 [sourcename: expected3]
                NAME y 1 [sourcename: expected3]
                NEW 1 [sourcename: expected3]
                    NAME Foo 1 [sourcename: expected3]
        EXPR_RESULT 1 [sourcename: expected3]
            CALL 1 [sourcename: expected3]
                GETPROP 1 [sourcename: expected3]
                    NAME z 1 [sourcename: expected3]
                    STRING b3 1 [sourcename: expected3]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: i0] [synthetic: 1]
        VAR 1 [sourcename:  [synthetic] ]
            NAME JSCompiler_stubMap 1 [sourcename:  [synthetic] ]
                ARRAYLIT 1 [sourcename:  [synthetic] ]
        FUNCTION  1 [sourcename:  [synthetic] ]
            NAME JSCompiler_stubMethod 1 [sourcename:  [synthetic] ]
            LP 1 [sourcename:  [synthetic] ]
                NAME JSCompiler_stubMethod_id 1 [sourcename:  [synthetic] ]
            BLOCK 1 [sourcename:  [synthetic] ]
                RETURN 1 [sourcename:  [synthetic] ]
                    FUNCTION  1 [sourcename:  [synthetic] ]
                        NAME  1 [sourcename:  [synthetic] ]
                        LP 1 [sourcename:  [synthetic] ]
                        BLOCK 1 [sourcename:  [synthetic] ]
                            RETURN 1 [sourcename:  [synthetic] ]
                                CALL 1 [sourcename:  [synthetic] ]
                                    GETPROP 1 [sourcename:  [synthetic] ]
                                        GETELEM 1 [sourcename:  [synthetic] ]
                                            NAME JSCompiler_stubMap 1 [sourcename:  [synthetic] ]
                                            NAME JSCompiler_stubMethod_id 1 [sourcename:  [synthetic] ]
                                        STRING apply 1 [sourcename:  [synthetic] ]
                                    THIS 1 [sourcename:  [synthetic] ]
                                    NAME arguments 1 [sourcename:  [synthetic] ]
        FUNCTION  1 [sourcename:  [synthetic] ]
            NAME JSCompiler_unstubMethod 1 [sourcename:  [synthetic] ]
            LP 1 [sourcename:  [synthetic] ]
                NAME JSCompiler_unstubMethod_id 1 [sourcename:  [synthetic] ]
                NAME JSCompiler_unstubMethod_body 1 [sourcename:  [synthetic] ]
            BLOCK 1 [sourcename:  [synthetic] ]
                RETURN 1 [sourcename:  [synthetic] ]
                    ASSIGN 1 [sourcename:  [synthetic] ]
                        GETELEM 1 [sourcename:  [synthetic] ]
                            NAME JSCompiler_stubMap 1 [sourcename:  [synthetic] ]
                            NAME JSCompiler_unstubMethod_id 1 [sourcename:  [synthetic] ]
                        NAME JSCompiler_unstubMethod_body 1 [sourcename:  [synthetic] ]
        FUNCTION  1 [sourcename: i0]
            NAME Foo 1 [sourcename: i0]
            LP 1 [sourcename: i0]
            BLOCK 1 [sourcename: i0]
        EXPR_RESULT 1 [sourcename: i0]
            ASSIGN 1 [sourcename: i0]
                GETPROP 1 [sourcename: i0]
                    GETPROP 1 [sourcename: i0]
                        NAME Foo 1 [sourcename: i0]
                        STRING prototype 1 [sourcename: i0]
                    STRING b1 1 [sourcename: i0]
                CALL 1 [sourcename: i0]
                    NAME JSCompiler_stubMethod 1 [sourcename: i0]
                    NUMBER 1.0 1 [sourcename: i0]
    SCRIPT 1 [sourcename: i1] [synthetic: 1]
        EXPR_RESULT 1 [sourcename: i0]
            ASSIGN 1 [sourcename: i0]
                GETPROP 1 [sourcename: i0]
                    GETPROP 1 [sourcename: i0]
                        NAME Foo 1 [sourcename: i0]
                        STRING prototype 1 [sourcename: i0]
                    STRING b1 1 [sourcename: i0]
                CALL 1 [sourcename: i0]
                    NAME JSCompiler_unstubMethod 1 [sourcename: i0]
                    NUMBER 1.0 1 [sourcename: i0]
                    FUNCTION  1 [sourcename: i0]
                        NAME  1 [sourcename: i0]
                        LP 1 [sourcename: i0]
                        BLOCK 1 [sourcename: i0]
                            EXPR_RESULT 1 [sourcename: i0]
                                ASSIGN 1 [sourcename: i0]
                                    GETPROP 1 [sourcename: i0]
                                        GETPROP 1 [sourcename: i0]
                                            NAME Foo 1 [sourcename: i0]
                                            STRING prototype 1 [sourcename: i0]
                                        STRING b2 1 [sourcename: i0]
                                    CALL 1 [sourcename: i0]
                                        NAME JSCompiler_stubMethod 1 [sourcename: i0]
                                        NUMBER 0.0 1 [sourcename: i0]
        VAR 1 [sourcename: i1]
            NAME y 1 [sourcename: i1]
                NEW 1 [sourcename: i1]
                    NAME Foo 1 [sourcename: i1]
        EXPR_RESULT 1 [sourcename: i1]
            CALL 1 [sourcename: i1]
                GETPROP 1 [sourcename: i1]
                    NAME y 1 [sourcename: i1]
                    STRING b1 1 [sourcename: i1]
    SCRIPT 1 [sourcename: i2] [synthetic: 1]
        EXPR_RESULT 1 [sourcename: i0]
            ASSIGN 1 [sourcename: i0]
                GETPROP 1 [sourcename: i0]
                    GETPROP 1 [sourcename: i0]
                        NAME Foo 1 [sourcename: i0]
                        STRING prototype 1 [sourcename: i0]
                    STRING b2 1 [sourcename: i0]
                CALL 1 [sourcename: i0]
                    NAME JSCompiler_unstubMethod 1 [sourcename: i0]
                    NUMBER 0.0 1 [sourcename: i0]
                    FUNCTION  1 [sourcename: i0]
                        NAME  1 [sourcename: i0]
                        LP 1 [sourcename: i0]
                        BLOCK 1 [sourcename: i0]
                            VAR 1 [sourcename: i0]
                                NAME x 1 [sourcename: i0]
                                    NUMBER 1.0 1 [sourcename: i0]
                            EXPR_RESULT 1 [sourcename: i0]
                                ASSIGN 1 [sourcename: i0]
                                    GETPROP 1 [sourcename: i0]
                                        GETPROP 1 [sourcename: i0]
                                            NAME Foo 1 [sourcename: i0]
                                            STRING prototype 1 [sourcename: i0]
                                        STRING b3 1 [sourcename: i0]
                                    FUNCTION  1 [sourcename: i0]
                                        NAME  1 [sourcename: i0]
                                        LP 1 [sourcename: i0]
                                        BLOCK 1 [sourcename: i0]
                                            EXPR_RESULT 1 [sourcename: i0]
                                                NAME x 1 [sourcename: i0]
        EXPR_RESULT 1 [sourcename: i2]
            ASSIGN 1 [sourcename: i2]
                NAME y 1 [sourcename: i2]
                NEW 1 [sourcename: i2]
                    NAME Foo 1 [sourcename: i2]
        EXPR_RESULT 1 [sourcename: i2]
            CALL 1 [sourcename: i2]
                GETPROP 1 [sourcename: i2]
                    NAME z 1 [sourcename: i2]
                    STRING b2 1 [sourcename: i2]
    SCRIPT 1 [sourcename: i3] [synthetic: 1]
        EXPR_RESULT 1 [sourcename: i3]
            ASSIGN 1 [sourcename: i3]
                NAME y 1 [sourcename: i3]
                NEW 1 [sourcename: i3]
                    NAME Foo 1 [sourcename: i3]
        EXPR_RESULT 1 [sourcename: i3]
            CALL 1 [sourcename: i3]
                GETPROP 1 [sourcename: i3]
                    NAME z 1 [sourcename: i3]
                    STRING b3 1 [sourcename: i3]


Subtree1: NUMBER 0.0 1 [sourcename: expected0]


Subtree2: NUMBER 1.0 1 [sourcename: i0]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:843)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:679)
~ testInExpression2(com.google.javascript.jscomp.DeadAssignmentsEliminationTest)
[
Expected: function FUNC(param1,param2){var a;a=1;if(2||(a=3)||a);}
Result: function FUNC(param1,param2){var a;a=1;if((a=2)||(a=3)||a);}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        FUNCTION  1 [sourcename: expected0]
            NAME FUNC 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
                NAME param1 1 [sourcename: expected0]
                NAME param2 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                VAR 1 [sourcename: expected0]
                    NAME a 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    ASSIGN 1 [sourcename: expected0]
                        NAME a 1 [sourcename: expected0]
                        NUMBER 1.0 1 [sourcename: expected0]
                IF 1 [sourcename: expected0]
                    OR 1 [sourcename: expected0]
                        NUMBER 2.0 1 [sourcename: expected0] [parenthesized: true]
                        OR 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0] [parenthesized: true]
                                NAME a 1 [sourcename: expected0]
                                NUMBER 3.0 1 [sourcename: expected0]
                            NAME a 1 [sourcename: expected0] [parenthesized: true]
                    BLOCK 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        FUNCTION  1 [sourcename: testcode]
            NAME FUNC 1 [sourcename: testcode]
            LP 1 [sourcename: testcode]
                NAME param1 1 [sourcename: testcode]
                NAME param2 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                VAR 1 [sourcename: testcode]
                    NAME a 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    ASSIGN 1 [sourcename: testcode]
                        NAME a 1 [sourcename: testcode]
                        NUMBER 1.0 1 [sourcename: testcode]
                IF 1 [sourcename: testcode]
                    OR 1 [sourcename: testcode]
                        ASSIGN 1 [sourcename: testcode] [parenthesized: true]
                            NAME a 1 [sourcename: testcode]
                            NUMBER 2.0 1 [sourcename: testcode]
                        OR 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode] [parenthesized: true]
                                NAME a 1 [sourcename: testcode]
                                NUMBER 3.0 1 [sourcename: testcode]
                            NAME a 1 [sourcename: testcode] [parenthesized: true]
                    BLOCK 1 [sourcename: testcode]


Subtree1: NUMBER 2.0 1 [sourcename: expected0] [parenthesized: true]


Subtree2: ASSIGN 1 [sourcename: testcode] [parenthesized: true]
    NAME a 1 [sourcename: testcode]
    NUMBER 2.0 1 [sourcename: testcode]
]
junit.framework.AssertionFailedError: 
Expected: function FUNC(param1,param2){var a;a=1;if(2||(a=3)||a);}
Result: function FUNC(param1,param2){var a;a=1;if((a=2)||(a=3)||a);}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        FUNCTION  1 [sourcename: expected0]
            NAME FUNC 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
                NAME param1 1 [sourcename: expected0]
                NAME param2 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                VAR 1 [sourcename: expected0]
                    NAME a 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    ASSIGN 1 [sourcename: expected0]
                        NAME a 1 [sourcename: expected0]
                        NUMBER 1.0 1 [sourcename: expected0]
                IF 1 [sourcename: expected0]
                    OR 1 [sourcename: expected0]
                        NUMBER 2.0 1 [sourcename: expected0] [parenthesized: true]
                        OR 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0] [parenthesized: true]
                                NAME a 1 [sourcename: expected0]
                                NUMBER 3.0 1 [sourcename: expected0]
                            NAME a 1 [sourcename: expected0] [parenthesized: true]
                    BLOCK 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        FUNCTION  1 [sourcename: testcode]
            NAME FUNC 1 [sourcename: testcode]
            LP 1 [sourcename: testcode]
                NAME param1 1 [sourcename: testcode]
                NAME param2 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                VAR 1 [sourcename: testcode]
                    NAME a 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    ASSIGN 1 [sourcename: testcode]
                        NAME a 1 [sourcename: testcode]
                        NUMBER 1.0 1 [sourcename: testcode]
                IF 1 [sourcename: testcode]
                    OR 1 [sourcename: testcode]
                        ASSIGN 1 [sourcename: testcode] [parenthesized: true]
                            NAME a 1 [sourcename: testcode]
                            NUMBER 2.0 1 [sourcename: testcode]
                        OR 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode] [parenthesized: true]
                                NAME a 1 [sourcename: testcode]
                                NUMBER 3.0 1 [sourcename: testcode]
                            NAME a 1 [sourcename: testcode] [parenthesized: true]
                    BLOCK 1 [sourcename: testcode]


Subtree1: NUMBER 2.0 1 [sourcename: expected0] [parenthesized: true]


Subtree2: ASSIGN 1 [sourcename: testcode] [parenthesized: true]
    NAME a 1 [sourcename: testcode]
    NUMBER 2.0 1 [sourcename: testcode]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:843)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:410)
~ testIssue384b(com.google.javascript.jscomp.DeadAssignmentsEliminationTest)
[
Expected: function FUNC(param1,param2){var a,b;f(b=true)||f(b=false)?a=b:a=null;return a}
Result: function FUNC(param1,param2){var a,b;f(true)||f(b=false)?a=b:a=null;return a}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        FUNCTION  1 [sourcename: expected0]
            NAME FUNC 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
                NAME param1 1 [sourcename: expected0]
                NAME param2 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                VAR 1 [sourcename: expected0]
                    NAME a 1 [sourcename: expected0]
                    NAME b 1 [sourcename: expected0]
                EXPR_RESULT 2 [sourcename: expected0]
                    HOOK 2 [sourcename: expected0]
                        OR 2 [sourcename: expected0] [parenthesized: true]
                            CALL 2 [sourcename: expected0] [free_call: 1]
                                NAME f 2 [sourcename: expected0]
                                ASSIGN 2 [sourcename: expected0]
                                    NAME b 2 [sourcename: expected0]
                                    TRUE 2 [sourcename: expected0]
                            CALL 2 [sourcename: expected0] [free_call: 1]
                                NAME f 2 [sourcename: expected0]
                                ASSIGN 2 [sourcename: expected0]
                                    NAME b 2 [sourcename: expected0]
                                    FALSE 2 [sourcename: expected0]
                        ASSIGN 2 [sourcename: expected0] [parenthesized: true]
                            NAME a 2 [sourcename: expected0]
                            NAME b 2 [sourcename: expected0]
                        ASSIGN 2 [sourcename: expected0] [parenthesized: true]
                            NAME a 2 [sourcename: expected0]
                            NULL 2 [sourcename: expected0]
                RETURN 3 [sourcename: expected0]
                    NAME a 3 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        FUNCTION  1 [sourcename: testcode]
            NAME FUNC 1 [sourcename: testcode]
            LP 1 [sourcename: testcode]
                NAME param1 1 [sourcename: testcode]
                NAME param2 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                VAR 1 [sourcename: testcode]
                    NAME a 1 [sourcename: testcode]
                    NAME b 1 [sourcename: testcode]
                EXPR_RESULT 2 [sourcename: testcode]
                    HOOK 2 [sourcename: testcode]
                        OR 2 [sourcename: testcode] [parenthesized: true]
                            CALL 2 [sourcename: testcode] [free_call: 1]
                                NAME f 2 [sourcename: testcode]
                                TRUE 2 [sourcename: testcode]
                            CALL 2 [sourcename: testcode] [free_call: 1]
                                NAME f 2 [sourcename: testcode]
                                ASSIGN 2 [sourcename: testcode]
                                    NAME b 2 [sourcename: testcode]
                                    FALSE 2 [sourcename: testcode]
                        ASSIGN 2 [sourcename: testcode] [parenthesized: true]
                            NAME a 2 [sourcename: testcode]
                            NAME b 2 [sourcename: testcode]
                        ASSIGN 2 [sourcename: testcode] [parenthesized: true]
                            NAME a 2 [sourcename: testcode]
                            NULL 2 [sourcename: testcode]
                RETURN 3 [sourcename: testcode]
                    NAME a 3 [sourcename: testcode]


Subtree1: ASSIGN 2 [sourcename: expected0]
    NAME b 2 [sourcename: expected0]
    TRUE 2 [sourcename: expected0]


Subtree2: TRUE 2 [sourcename: testcode]
]
junit.framework.AssertionFailedError: 
Expected: function FUNC(param1,param2){var a,b;f(b=true)||f(b=false)?a=b:a=null;return a}
Result: function FUNC(param1,param2){var a,b;f(true)||f(b=false)?a=b:a=null;return a}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        FUNCTION  1 [sourcename: expected0]
            NAME FUNC 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
                NAME param1 1 [sourcename: expected0]
                NAME param2 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                VAR 1 [sourcename: expected0]
                    NAME a 1 [sourcename: expected0]
                    NAME b 1 [sourcename: expected0]
                EXPR_RESULT 2 [sourcename: expected0]
                    HOOK 2 [sourcename: expected0]
                        OR 2 [sourcename: expected0] [parenthesized: true]
                            CALL 2 [sourcename: expected0] [free_call: 1]
                                NAME f 2 [sourcename: expected0]
                                ASSIGN 2 [sourcename: expected0]
                                    NAME b 2 [sourcename: expected0]
                                    TRUE 2 [sourcename: expected0]
                            CALL 2 [sourcename: expected0] [free_call: 1]
                                NAME f 2 [sourcename: expected0]
                                ASSIGN 2 [sourcename: expected0]
                                    NAME b 2 [sourcename: expected0]
                                    FALSE 2 [sourcename: expected0]
                        ASSIGN 2 [sourcename: expected0] [parenthesized: true]
                            NAME a 2 [sourcename: expected0]
                            NAME b 2 [sourcename: expected0]
                        ASSIGN 2 [sourcename: expected0] [parenthesized: true]
                            NAME a 2 [sourcename: expected0]
                            NULL 2 [sourcename: expected0]
                RETURN 3 [sourcename: expected0]
                    NAME a 3 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        FUNCTION  1 [sourcename: testcode]
            NAME FUNC 1 [sourcename: testcode]
            LP 1 [sourcename: testcode]
                NAME param1 1 [sourcename: testcode]
                NAME param2 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                VAR 1 [sourcename: testcode]
                    NAME a 1 [sourcename: testcode]
                    NAME b 1 [sourcename: testcode]
                EXPR_RESULT 2 [sourcename: testcode]
                    HOOK 2 [sourcename: testcode]
                        OR 2 [sourcename: testcode] [parenthesized: true]
                            CALL 2 [sourcename: testcode] [free_call: 1]
                                NAME f 2 [sourcename: testcode]
                                TRUE 2 [sourcename: testcode]
                            CALL 2 [sourcename: testcode] [free_call: 1]
                                NAME f 2 [sourcename: testcode]
                                ASSIGN 2 [sourcename: testcode]
                                    NAME b 2 [sourcename: testcode]
                                    FALSE 2 [sourcename: testcode]
                        ASSIGN 2 [sourcename: testcode] [parenthesized: true]
                            NAME a 2 [sourcename: testcode]
                            NAME b 2 [sourcename: testcode]
                        ASSIGN 2 [sourcename: testcode] [parenthesized: true]
                            NAME a 2 [sourcename: testcode]
                            NULL 2 [sourcename: testcode]
                RETURN 3 [sourcename: testcode]
                    NAME a 3 [sourcename: testcode]


Subtree1: ASSIGN 2 [sourcename: expected0]
    NAME b 2 [sourcename: expected0]
    TRUE 2 [sourcename: expected0]


Subtree2: TRUE 2 [sourcename: testcode]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:843)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:410)
~ testIssue384c(com.google.javascript.jscomp.DeadAssignmentsEliminationTest)
[
Expected: function FUNC(param1,param2){var a,b;(a?f(b=true):f(b=false))&&(a=b);return a}
Result: function FUNC(param1,param2){var a,b;(a?f(true):f(b=false))&&(a=b);return a}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        FUNCTION  1 [sourcename: expected0]
            NAME FUNC 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
                NAME param1 1 [sourcename: expected0]
                NAME param2 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                VAR 1 [sourcename: expected0]
                    NAME a 1 [sourcename: expected0]
                    NAME b 1 [sourcename: expected0]
                EXPR_RESULT 2 [sourcename: expected0]
                    AND 2 [sourcename: expected0]
                        HOOK 2 [sourcename: expected0] [parenthesized: true]
                            NAME a 2 [sourcename: expected0]
                            CALL 2 [sourcename: expected0] [free_call: 1]
                                NAME f 2 [sourcename: expected0]
                                ASSIGN 2 [sourcename: expected0]
                                    NAME b 2 [sourcename: expected0]
                                    TRUE 2 [sourcename: expected0]
                            CALL 2 [sourcename: expected0] [free_call: 1]
                                NAME f 2 [sourcename: expected0]
                                ASSIGN 2 [sourcename: expected0]
                                    NAME b 2 [sourcename: expected0]
                                    FALSE 2 [sourcename: expected0]
                        ASSIGN 2 [sourcename: expected0] [parenthesized: true]
                            NAME a 2 [sourcename: expected0]
                            NAME b 2 [sourcename: expected0]
                RETURN 3 [sourcename: expected0]
                    NAME a 3 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        FUNCTION  1 [sourcename: testcode]
            NAME FUNC 1 [sourcename: testcode]
            LP 1 [sourcename: testcode]
                NAME param1 1 [sourcename: testcode]
                NAME param2 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                VAR 1 [sourcename: testcode]
                    NAME a 1 [sourcename: testcode]
                    NAME b 1 [sourcename: testcode]
                EXPR_RESULT 2 [sourcename: testcode]
                    AND 2 [sourcename: testcode]
                        HOOK 2 [sourcename: testcode] [parenthesized: true]
                            NAME a 2 [sourcename: testcode]
                            CALL 2 [sourcename: testcode] [free_call: 1]
                                NAME f 2 [sourcename: testcode]
                                TRUE 2 [sourcename: testcode]
                            CALL 2 [sourcename: testcode] [free_call: 1]
                                NAME f 2 [sourcename: testcode]
                                ASSIGN 2 [sourcename: testcode]
                                    NAME b 2 [sourcename: testcode]
                                    FALSE 2 [sourcename: testcode]
                        ASSIGN 2 [sourcename: testcode] [parenthesized: true]
                            NAME a 2 [sourcename: testcode]
                            NAME b 2 [sourcename: testcode]
                RETURN 3 [sourcename: testcode]
                    NAME a 3 [sourcename: testcode]


Subtree1: ASSIGN 2 [sourcename: expected0]
    NAME b 2 [sourcename: expected0]
    TRUE 2 [sourcename: expected0]


Subtree2: TRUE 2 [sourcename: testcode]
]
junit.framework.AssertionFailedError: 
Expected: function FUNC(param1,param2){var a,b;(a?f(b=true):f(b=false))&&(a=b);return a}
Result: function FUNC(param1,param2){var a,b;(a?f(true):f(b=false))&&(a=b);return a}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        FUNCTION  1 [sourcename: expected0]
            NAME FUNC 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
                NAME param1 1 [sourcename: expected0]
                NAME param2 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                VAR 1 [sourcename: expected0]
                    NAME a 1 [sourcename: expected0]
                    NAME b 1 [sourcename: expected0]
                EXPR_RESULT 2 [sourcename: expected0]
                    AND 2 [sourcename: expected0]
                        HOOK 2 [sourcename: expected0] [parenthesized: true]
                            NAME a 2 [sourcename: expected0]
                            CALL 2 [sourcename: expected0] [free_call: 1]
                                NAME f 2 [sourcename: expected0]
                                ASSIGN 2 [sourcename: expected0]
                                    NAME b 2 [sourcename: expected0]
                                    TRUE 2 [sourcename: expected0]
                            CALL 2 [sourcename: expected0] [free_call: 1]
                                NAME f 2 [sourcename: expected0]
                                ASSIGN 2 [sourcename: expected0]
                                    NAME b 2 [sourcename: expected0]
                                    FALSE 2 [sourcename: expected0]
                        ASSIGN 2 [sourcename: expected0] [parenthesized: true]
                            NAME a 2 [sourcename: expected0]
                            NAME b 2 [sourcename: expected0]
                RETURN 3 [sourcename: expected0]
                    NAME a 3 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        FUNCTION  1 [sourcename: testcode]
            NAME FUNC 1 [sourcename: testcode]
            LP 1 [sourcename: testcode]
                NAME param1 1 [sourcename: testcode]
                NAME param2 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                VAR 1 [sourcename: testcode]
                    NAME a 1 [sourcename: testcode]
                    NAME b 1 [sourcename: testcode]
                EXPR_RESULT 2 [sourcename: testcode]
                    AND 2 [sourcename: testcode]
                        HOOK 2 [sourcename: testcode] [parenthesized: true]
                            NAME a 2 [sourcename: testcode]
                            CALL 2 [sourcename: testcode] [free_call: 1]
                                NAME f 2 [sourcename: testcode]
                                TRUE 2 [sourcename: testcode]
                            CALL 2 [sourcename: testcode] [free_call: 1]
                                NAME f 2 [sourcename: testcode]
                                ASSIGN 2 [sourcename: testcode]
                                    NAME b 2 [sourcename: testcode]
                                    FALSE 2 [sourcename: testcode]
                        ASSIGN 2 [sourcename: testcode] [parenthesized: true]
                            NAME a 2 [sourcename: testcode]
                            NAME b 2 [sourcename: testcode]
                RETURN 3 [sourcename: testcode]
                    NAME a 3 [sourcename: testcode]


Subtree1: ASSIGN 2 [sourcename: expected0]
    NAME b 2 [sourcename: expected0]
    TRUE 2 [sourcename: expected0]


Subtree2: TRUE 2 [sourcename: testcode]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:843)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:410)
~ testIssue384d(com.google.javascript.jscomp.DeadAssignmentsEliminationTest)
[
Expected: function FUNC(param1,param2){var a,b;(f(b=true)||f(b=false))&&(a=b);return a}
Result: function FUNC(param1,param2){var a,b;(f(true)||f(b=false))&&(a=b);return a}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        FUNCTION  1 [sourcename: expected0]
            NAME FUNC 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
                NAME param1 1 [sourcename: expected0]
                NAME param2 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                VAR 1 [sourcename: expected0]
                    NAME a 1 [sourcename: expected0]
                    NAME b 1 [sourcename: expected0]
                EXPR_RESULT 2 [sourcename: expected0]
                    AND 2 [sourcename: expected0]
                        OR 2 [sourcename: expected0] [parenthesized: true]
                            CALL 2 [sourcename: expected0] [free_call: 1]
                                NAME f 2 [sourcename: expected0]
                                ASSIGN 2 [sourcename: expected0]
                                    NAME b 2 [sourcename: expected0]
                                    TRUE 2 [sourcename: expected0]
                            CALL 2 [sourcename: expected0] [free_call: 1]
                                NAME f 2 [sourcename: expected0]
                                ASSIGN 2 [sourcename: expected0]
                                    NAME b 2 [sourcename: expected0]
                                    FALSE 2 [sourcename: expected0]
                        ASSIGN 2 [sourcename: expected0] [parenthesized: true]
                            NAME a 2 [sourcename: expected0]
                            NAME b 2 [sourcename: expected0]
                RETURN 3 [sourcename: expected0]
                    NAME a 3 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        FUNCTION  1 [sourcename: testcode]
            NAME FUNC 1 [sourcename: testcode]
            LP 1 [sourcename: testcode]
                NAME param1 1 [sourcename: testcode]
                NAME param2 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                VAR 1 [sourcename: testcode]
                    NAME a 1 [sourcename: testcode]
                    NAME b 1 [sourcename: testcode]
                EXPR_RESULT 2 [sourcename: testcode]
                    AND 2 [sourcename: testcode]
                        OR 2 [sourcename: testcode] [parenthesized: true]
                            CALL 2 [sourcename: testcode] [free_call: 1]
                                NAME f 2 [sourcename: testcode]
                                TRUE 2 [sourcename: testcode]
                            CALL 2 [sourcename: testcode] [free_call: 1]
                                NAME f 2 [sourcename: testcode]
                                ASSIGN 2 [sourcename: testcode]
                                    NAME b 2 [sourcename: testcode]
                                    FALSE 2 [sourcename: testcode]
                        ASSIGN 2 [sourcename: testcode] [parenthesized: true]
                            NAME a 2 [sourcename: testcode]
                            NAME b 2 [sourcename: testcode]
                RETURN 3 [sourcename: testcode]
                    NAME a 3 [sourcename: testcode]


Subtree1: ASSIGN 2 [sourcename: expected0]
    NAME b 2 [sourcename: expected0]
    TRUE 2 [sourcename: expected0]


Subtree2: TRUE 2 [sourcename: testcode]
]
junit.framework.AssertionFailedError: 
Expected: function FUNC(param1,param2){var a,b;(f(b=true)||f(b=false))&&(a=b);return a}
Result: function FUNC(param1,param2){var a,b;(f(true)||f(b=false))&&(a=b);return a}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        FUNCTION  1 [sourcename: expected0]
            NAME FUNC 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
                NAME param1 1 [sourcename: expected0]
                NAME param2 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                VAR 1 [sourcename: expected0]
                    NAME a 1 [sourcename: expected0]
                    NAME b 1 [sourcename: expected0]
                EXPR_RESULT 2 [sourcename: expected0]
                    AND 2 [sourcename: expected0]
                        OR 2 [sourcename: expected0] [parenthesized: true]
                            CALL 2 [sourcename: expected0] [free_call: 1]
                                NAME f 2 [sourcename: expected0]
                                ASSIGN 2 [sourcename: expected0]
                                    NAME b 2 [sourcename: expected0]
                                    TRUE 2 [sourcename: expected0]
                            CALL 2 [sourcename: expected0] [free_call: 1]
                                NAME f 2 [sourcename: expected0]
                                ASSIGN 2 [sourcename: expected0]
                                    NAME b 2 [sourcename: expected0]
                                    FALSE 2 [sourcename: expected0]
                        ASSIGN 2 [sourcename: expected0] [parenthesized: true]
                            NAME a 2 [sourcename: expected0]
                            NAME b 2 [sourcename: expected0]
                RETURN 3 [sourcename: expected0]
                    NAME a 3 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        FUNCTION  1 [sourcename: testcode]
            NAME FUNC 1 [sourcename: testcode]
            LP 1 [sourcename: testcode]
                NAME param1 1 [sourcename: testcode]
                NAME param2 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                VAR 1 [sourcename: testcode]
                    NAME a 1 [sourcename: testcode]
                    NAME b 1 [sourcename: testcode]
                EXPR_RESULT 2 [sourcename: testcode]
                    AND 2 [sourcename: testcode]
                        OR 2 [sourcename: testcode] [parenthesized: true]
                            CALL 2 [sourcename: testcode] [free_call: 1]
                                NAME f 2 [sourcename: testcode]
                                TRUE 2 [sourcename: testcode]
                            CALL 2 [sourcename: testcode] [free_call: 1]
                                NAME f 2 [sourcename: testcode]
                                ASSIGN 2 [sourcename: testcode]
                                    NAME b 2 [sourcename: testcode]
                                    FALSE 2 [sourcename: testcode]
                        ASSIGN 2 [sourcename: testcode] [parenthesized: true]
                            NAME a 2 [sourcename: testcode]
                            NAME b 2 [sourcename: testcode]
                RETURN 3 [sourcename: testcode]
                    NAME a 3 [sourcename: testcode]


Subtree1: ASSIGN 2 [sourcename: expected0]
    NAME b 2 [sourcename: expected0]
    TRUE 2 [sourcename: expected0]


Subtree2: TRUE 2 [sourcename: testcode]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:843)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:410)
~ testInExpression2(com.google.javascript.jscomp.DeadAssignmentsEliminationTest)
[
Expected: function FUNC(param1,param2){var a;a=1;if(2||(a=3)||a);}
Result: function FUNC(param1,param2){var a;a=1;if((a=2)||(a=3)||a);}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        FUNCTION  1 [sourcename: expected0]
            NAME FUNC 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
                NAME param1 1 [sourcename: expected0]
                NAME param2 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                VAR 1 [sourcename: expected0]
                    NAME a 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    ASSIGN 1 [sourcename: expected0]
                        NAME a 1 [sourcename: expected0]
                        NUMBER 1.0 1 [sourcename: expected0]
                IF 1 [sourcename: expected0]
                    OR 1 [sourcename: expected0]
                        NUMBER 2.0 1 [sourcename: expected0] [parenthesized: true]
                        OR 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0] [parenthesized: true]
                                NAME a 1 [sourcename: expected0]
                                NUMBER 3.0 1 [sourcename: expected0]
                            NAME a 1 [sourcename: expected0] [parenthesized: true]
                    BLOCK 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        FUNCTION  1 [sourcename: testcode]
            NAME FUNC 1 [sourcename: testcode]
            LP 1 [sourcename: testcode]
                NAME param1 1 [sourcename: testcode]
                NAME param2 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                VAR 1 [sourcename: testcode]
                    NAME a 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    ASSIGN 1 [sourcename: testcode]
                        NAME a 1 [sourcename: testcode]
                        NUMBER 1.0 1 [sourcename: testcode]
                IF 1 [sourcename: testcode]
                    OR 1 [sourcename: testcode]
                        ASSIGN 1 [sourcename: testcode] [parenthesized: true]
                            NAME a 1 [sourcename: testcode]
                            NUMBER 2.0 1 [sourcename: testcode]
                        OR 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode] [parenthesized: true]
                                NAME a 1 [sourcename: testcode]
                                NUMBER 3.0 1 [sourcename: testcode]
                            NAME a 1 [sourcename: testcode] [parenthesized: true]
                    BLOCK 1 [sourcename: testcode]


Subtree1: NUMBER 2.0 1 [sourcename: expected0] [parenthesized: true]


Subtree2: ASSIGN 1 [sourcename: testcode] [parenthesized: true]
    NAME a 1 [sourcename: testcode]
    NUMBER 2.0 1 [sourcename: testcode]
]
junit.framework.AssertionFailedError: 
Expected: function FUNC(param1,param2){var a;a=1;if(2||(a=3)||a);}
Result: function FUNC(param1,param2){var a;a=1;if((a=2)||(a=3)||a);}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        FUNCTION  1 [sourcename: expected0]
            NAME FUNC 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
                NAME param1 1 [sourcename: expected0]
                NAME param2 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                VAR 1 [sourcename: expected0]
                    NAME a 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    ASSIGN 1 [sourcename: expected0]
                        NAME a 1 [sourcename: expected0]
                        NUMBER 1.0 1 [sourcename: expected0]
                IF 1 [sourcename: expected0]
                    OR 1 [sourcename: expected0]
                        NUMBER 2.0 1 [sourcename: expected0] [parenthesized: true]
                        OR 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0] [parenthesized: true]
                                NAME a 1 [sourcename: expected0]
                                NUMBER 3.0 1 [sourcename: expected0]
                            NAME a 1 [sourcename: expected0] [parenthesized: true]
                    BLOCK 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        FUNCTION  1 [sourcename: testcode]
            NAME FUNC 1 [sourcename: testcode]
            LP 1 [sourcename: testcode]
                NAME param1 1 [sourcename: testcode]
                NAME param2 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                VAR 1 [sourcename: testcode]
                    NAME a 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    ASSIGN 1 [sourcename: testcode]
                        NAME a 1 [sourcename: testcode]
                        NUMBER 1.0 1 [sourcename: testcode]
                IF 1 [sourcename: testcode]
                    OR 1 [sourcename: testcode]
                        ASSIGN 1 [sourcename: testcode] [parenthesized: true]
                            NAME a 1 [sourcename: testcode]
                            NUMBER 2.0 1 [sourcename: testcode]
                        OR 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode] [parenthesized: true]
                                NAME a 1 [sourcename: testcode]
                                NUMBER 3.0 1 [sourcename: testcode]
                            NAME a 1 [sourcename: testcode] [parenthesized: true]
                    BLOCK 1 [sourcename: testcode]


Subtree1: NUMBER 2.0 1 [sourcename: expected0] [parenthesized: true]


Subtree2: ASSIGN 1 [sourcename: testcode] [parenthesized: true]
    NAME a 1 [sourcename: testcode]
    NUMBER 2.0 1 [sourcename: testcode]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:843)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:410)
~ testIssue384b(com.google.javascript.jscomp.DeadAssignmentsEliminationTest)
[
Expected: function FUNC(param1,param2){var a,b;f(b=true)||f(b=false)?a=b:a=null;return a}
Result: function FUNC(param1,param2){var a,b;f(true)||f(b=false)?a=b:a=null;return a}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        FUNCTION  1 [sourcename: expected0]
            NAME FUNC 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
                NAME param1 1 [sourcename: expected0]
                NAME param2 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                VAR 1 [sourcename: expected0]
                    NAME a 1 [sourcename: expected0]
                    NAME b 1 [sourcename: expected0]
                EXPR_RESULT 2 [sourcename: expected0]
                    HOOK 2 [sourcename: expected0]
                        OR 2 [sourcename: expected0] [parenthesized: true]
                            CALL 2 [sourcename: expected0] [free_call: 1]
                                NAME f 2 [sourcename: expected0]
                                ASSIGN 2 [sourcename: expected0]
                                    NAME b 2 [sourcename: expected0]
                                    TRUE 2 [sourcename: expected0]
                            CALL 2 [sourcename: expected0] [free_call: 1]
                                NAME f 2 [sourcename: expected0]
                                ASSIGN 2 [sourcename: expected0]
                                    NAME b 2 [sourcename: expected0]
                                    FALSE 2 [sourcename: expected0]
                        ASSIGN 2 [sourcename: expected0] [parenthesized: true]
                            NAME a 2 [sourcename: expected0]
                            NAME b 2 [sourcename: expected0]
                        ASSIGN 2 [sourcename: expected0] [parenthesized: true]
                            NAME a 2 [sourcename: expected0]
                            NULL 2 [sourcename: expected0]
                RETURN 3 [sourcename: expected0]
                    NAME a 3 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        FUNCTION  1 [sourcename: testcode]
            NAME FUNC 1 [sourcename: testcode]
            LP 1 [sourcename: testcode]
                NAME param1 1 [sourcename: testcode]
                NAME param2 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                VAR 1 [sourcename: testcode]
                    NAME a 1 [sourcename: testcode]
                    NAME b 1 [sourcename: testcode]
                EXPR_RESULT 2 [sourcename: testcode]
                    HOOK 2 [sourcename: testcode]
                        OR 2 [sourcename: testcode] [parenthesized: true]
                            CALL 2 [sourcename: testcode] [free_call: 1]
                                NAME f 2 [sourcename: testcode]
                                TRUE 2 [sourcename: testcode]
                            CALL 2 [sourcename: testcode] [free_call: 1]
                                NAME f 2 [sourcename: testcode]
                                ASSIGN 2 [sourcename: testcode]
                                    NAME b 2 [sourcename: testcode]
                                    FALSE 2 [sourcename: testcode]
                        ASSIGN 2 [sourcename: testcode] [parenthesized: true]
                            NAME a 2 [sourcename: testcode]
                            NAME b 2 [sourcename: testcode]
                        ASSIGN 2 [sourcename: testcode] [parenthesized: true]
                            NAME a 2 [sourcename: testcode]
                            NULL 2 [sourcename: testcode]
                RETURN 3 [sourcename: testcode]
                    NAME a 3 [sourcename: testcode]


Subtree1: ASSIGN 2 [sourcename: expected0]
    NAME b 2 [sourcename: expected0]
    TRUE 2 [sourcename: expected0]


Subtree2: TRUE 2 [sourcename: testcode]
]
junit.framework.AssertionFailedError: 
Expected: function FUNC(param1,param2){var a,b;f(b=true)||f(b=false)?a=b:a=null;return a}
Result: function FUNC(param1,param2){var a,b;f(true)||f(b=false)?a=b:a=null;return a}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        FUNCTION  1 [sourcename: expected0]
            NAME FUNC 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
                NAME param1 1 [sourcename: expected0]
                NAME param2 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                VAR 1 [sourcename: expected0]
                    NAME a 1 [sourcename: expected0]
                    NAME b 1 [sourcename: expected0]
                EXPR_RESULT 2 [sourcename: expected0]
                    HOOK 2 [sourcename: expected0]
                        OR 2 [sourcename: expected0] [parenthesized: true]
                            CALL 2 [sourcename: expected0] [free_call: 1]
                                NAME f 2 [sourcename: expected0]
                                ASSIGN 2 [sourcename: expected0]
                                    NAME b 2 [sourcename: expected0]
                                    TRUE 2 [sourcename: expected0]
                            CALL 2 [sourcename: expected0] [free_call: 1]
                                NAME f 2 [sourcename: expected0]
                                ASSIGN 2 [sourcename: expected0]
                                    NAME b 2 [sourcename: expected0]
                                    FALSE 2 [sourcename: expected0]
                        ASSIGN 2 [sourcename: expected0] [parenthesized: true]
                            NAME a 2 [sourcename: expected0]
                            NAME b 2 [sourcename: expected0]
                        ASSIGN 2 [sourcename: expected0] [parenthesized: true]
                            NAME a 2 [sourcename: expected0]
                            NULL 2 [sourcename: expected0]
                RETURN 3 [sourcename: expected0]
                    NAME a 3 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        FUNCTION  1 [sourcename: testcode]
            NAME FUNC 1 [sourcename: testcode]
            LP 1 [sourcename: testcode]
                NAME param1 1 [sourcename: testcode]
                NAME param2 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                VAR 1 [sourcename: testcode]
                    NAME a 1 [sourcename: testcode]
                    NAME b 1 [sourcename: testcode]
                EXPR_RESULT 2 [sourcename: testcode]
                    HOOK 2 [sourcename: testcode]
                        OR 2 [sourcename: testcode] [parenthesized: true]
                            CALL 2 [sourcename: testcode] [free_call: 1]
                                NAME f 2 [sourcename: testcode]
                                TRUE 2 [sourcename: testcode]
                            CALL 2 [sourcename: testcode] [free_call: 1]
                                NAME f 2 [sourcename: testcode]
                                ASSIGN 2 [sourcename: testcode]
                                    NAME b 2 [sourcename: testcode]
                                    FALSE 2 [sourcename: testcode]
                        ASSIGN 2 [sourcename: testcode] [parenthesized: true]
                            NAME a 2 [sourcename: testcode]
                            NAME b 2 [sourcename: testcode]
                        ASSIGN 2 [sourcename: testcode] [parenthesized: true]
                            NAME a 2 [sourcename: testcode]
                            NULL 2 [sourcename: testcode]
                RETURN 3 [sourcename: testcode]
                    NAME a 3 [sourcename: testcode]


Subtree1: ASSIGN 2 [sourcename: expected0]
    NAME b 2 [sourcename: expected0]
    TRUE 2 [sourcename: expected0]


Subtree2: TRUE 2 [sourcename: testcode]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:843)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:410)
~ testIssue384c(com.google.javascript.jscomp.DeadAssignmentsEliminationTest)
[
Expected: function FUNC(param1,param2){var a,b;(a?f(b=true):f(b=false))&&(a=b);return a}
Result: function FUNC(param1,param2){var a,b;(a?f(true):f(b=false))&&(a=b);return a}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        FUNCTION  1 [sourcename: expected0]
            NAME FUNC 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
                NAME param1 1 [sourcename: expected0]
                NAME param2 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                VAR 1 [sourcename: expected0]
                    NAME a 1 [sourcename: expected0]
                    NAME b 1 [sourcename: expected0]
                EXPR_RESULT 2 [sourcename: expected0]
                    AND 2 [sourcename: expected0]
                        HOOK 2 [sourcename: expected0] [parenthesized: true]
                            NAME a 2 [sourcename: expected0]
                            CALL 2 [sourcename: expected0] [free_call: 1]
                                NAME f 2 [sourcename: expected0]
                                ASSIGN 2 [sourcename: expected0]
                                    NAME b 2 [sourcename: expected0]
                                    TRUE 2 [sourcename: expected0]
                            CALL 2 [sourcename: expected0] [free_call: 1]
                                NAME f 2 [sourcename: expected0]
                                ASSIGN 2 [sourcename: expected0]
                                    NAME b 2 [sourcename: expected0]
                                    FALSE 2 [sourcename: expected0]
                        ASSIGN 2 [sourcename: expected0] [parenthesized: true]
                            NAME a 2 [sourcename: expected0]
                            NAME b 2 [sourcename: expected0]
                RETURN 3 [sourcename: expected0]
                    NAME a 3 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        FUNCTION  1 [sourcename: testcode]
            NAME FUNC 1 [sourcename: testcode]
            LP 1 [sourcename: testcode]
                NAME param1 1 [sourcename: testcode]
                NAME param2 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                VAR 1 [sourcename: testcode]
                    NAME a 1 [sourcename: testcode]
                    NAME b 1 [sourcename: testcode]
                EXPR_RESULT 2 [sourcename: testcode]
                    AND 2 [sourcename: testcode]
                        HOOK 2 [sourcename: testcode] [parenthesized: true]
                            NAME a 2 [sourcename: testcode]
                            CALL 2 [sourcename: testcode] [free_call: 1]
                                NAME f 2 [sourcename: testcode]
                                TRUE 2 [sourcename: testcode]
                            CALL 2 [sourcename: testcode] [free_call: 1]
                                NAME f 2 [sourcename: testcode]
                                ASSIGN 2 [sourcename: testcode]
                                    NAME b 2 [sourcename: testcode]
                                    FALSE 2 [sourcename: testcode]
                        ASSIGN 2 [sourcename: testcode] [parenthesized: true]
                            NAME a 2 [sourcename: testcode]
                            NAME b 2 [sourcename: testcode]
                RETURN 3 [sourcename: testcode]
                    NAME a 3 [sourcename: testcode]


Subtree1: ASSIGN 2 [sourcename: expected0]
    NAME b 2 [sourcename: expected0]
    TRUE 2 [sourcename: expected0]


Subtree2: TRUE 2 [sourcename: testcode]
]
junit.framework.AssertionFailedError: 
Expected: function FUNC(param1,param2){var a,b;(a?f(b=true):f(b=false))&&(a=b);return a}
Result: function FUNC(param1,param2){var a,b;(a?f(true):f(b=false))&&(a=b);return a}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        FUNCTION  1 [sourcename: expected0]
            NAME FUNC 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
                NAME param1 1 [sourcename: expected0]
                NAME param2 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                VAR 1 [sourcename: expected0]
                    NAME a 1 [sourcename: expected0]
                    NAME b 1 [sourcename: expected0]
                EXPR_RESULT 2 [sourcename: expected0]
                    AND 2 [sourcename: expected0]
                        HOOK 2 [sourcename: expected0] [parenthesized: true]
                            NAME a 2 [sourcename: expected0]
                            CALL 2 [sourcename: expected0] [free_call: 1]
                                NAME f 2 [sourcename: expected0]
                                ASSIGN 2 [sourcename: expected0]
                                    NAME b 2 [sourcename: expected0]
                                    TRUE 2 [sourcename: expected0]
                            CALL 2 [sourcename: expected0] [free_call: 1]
                                NAME f 2 [sourcename: expected0]
                                ASSIGN 2 [sourcename: expected0]
                                    NAME b 2 [sourcename: expected0]
                                    FALSE 2 [sourcename: expected0]
                        ASSIGN 2 [sourcename: expected0] [parenthesized: true]
                            NAME a 2 [sourcename: expected0]
                            NAME b 2 [sourcename: expected0]
                RETURN 3 [sourcename: expected0]
                    NAME a 3 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        FUNCTION  1 [sourcename: testcode]
            NAME FUNC 1 [sourcename: testcode]
            LP 1 [sourcename: testcode]
                NAME param1 1 [sourcename: testcode]
                NAME param2 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                VAR 1 [sourcename: testcode]
                    NAME a 1 [sourcename: testcode]
                    NAME b 1 [sourcename: testcode]
                EXPR_RESULT 2 [sourcename: testcode]
                    AND 2 [sourcename: testcode]
                        HOOK 2 [sourcename: testcode] [parenthesized: true]
                            NAME a 2 [sourcename: testcode]
                            CALL 2 [sourcename: testcode] [free_call: 1]
                                NAME f 2 [sourcename: testcode]
                                TRUE 2 [sourcename: testcode]
                            CALL 2 [sourcename: testcode] [free_call: 1]
                                NAME f 2 [sourcename: testcode]
                                ASSIGN 2 [sourcename: testcode]
                                    NAME b 2 [sourcename: testcode]
                                    FALSE 2 [sourcename: testcode]
                        ASSIGN 2 [sourcename: testcode] [parenthesized: true]
                            NAME a 2 [sourcename: testcode]
                            NAME b 2 [sourcename: testcode]
                RETURN 3 [sourcename: testcode]
                    NAME a 3 [sourcename: testcode]


Subtree1: ASSIGN 2 [sourcename: expected0]
    NAME b 2 [sourcename: expected0]
    TRUE 2 [sourcename: expected0]


Subtree2: TRUE 2 [sourcename: testcode]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:843)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:410)
~ testIssue384d(com.google.javascript.jscomp.DeadAssignmentsEliminationTest)
[
Expected: function FUNC(param1,param2){var a,b;(f(b=true)||f(b=false))&&(a=b);return a}
Result: function FUNC(param1,param2){var a,b;(f(true)||f(b=false))&&(a=b);return a}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        FUNCTION  1 [sourcename: expected0]
            NAME FUNC 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
                NAME param1 1 [sourcename: expected0]
                NAME param2 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                VAR 1 [sourcename: expected0]
                    NAME a 1 [sourcename: expected0]
                    NAME b 1 [sourcename: expected0]
                EXPR_RESULT 2 [sourcename: expected0]
                    AND 2 [sourcename: expected0]
                        OR 2 [sourcename: expected0] [parenthesized: true]
                            CALL 2 [sourcename: expected0] [free_call: 1]
                                NAME f 2 [sourcename: expected0]
                                ASSIGN 2 [sourcename: expected0]
                                    NAME b 2 [sourcename: expected0]
                                    TRUE 2 [sourcename: expected0]
                            CALL 2 [sourcename: expected0] [free_call: 1]
                                NAME f 2 [sourcename: expected0]
                                ASSIGN 2 [sourcename: expected0]
                                    NAME b 2 [sourcename: expected0]
                                    FALSE 2 [sourcename: expected0]
                        ASSIGN 2 [sourcename: expected0] [parenthesized: true]
                            NAME a 2 [sourcename: expected0]
                            NAME b 2 [sourcename: expected0]
                RETURN 3 [sourcename: expected0]
                    NAME a 3 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        FUNCTION  1 [sourcename: testcode]
            NAME FUNC 1 [sourcename: testcode]
            LP 1 [sourcename: testcode]
                NAME param1 1 [sourcename: testcode]
                NAME param2 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                VAR 1 [sourcename: testcode]
                    NAME a 1 [sourcename: testcode]
                    NAME b 1 [sourcename: testcode]
                EXPR_RESULT 2 [sourcename: testcode]
                    AND 2 [sourcename: testcode]
                        OR 2 [sourcename: testcode] [parenthesized: true]
                            CALL 2 [sourcename: testcode] [free_call: 1]
                                NAME f 2 [sourcename: testcode]
                                TRUE 2 [sourcename: testcode]
                            CALL 2 [sourcename: testcode] [free_call: 1]
                                NAME f 2 [sourcename: testcode]
                                ASSIGN 2 [sourcename: testcode]
                                    NAME b 2 [sourcename: testcode]
                                    FALSE 2 [sourcename: testcode]
                        ASSIGN 2 [sourcename: testcode] [parenthesized: true]
                            NAME a 2 [sourcename: testcode]
                            NAME b 2 [sourcename: testcode]
                RETURN 3 [sourcename: testcode]
                    NAME a 3 [sourcename: testcode]


Subtree1: ASSIGN 2 [sourcename: expected0]
    NAME b 2 [sourcename: expected0]
    TRUE 2 [sourcename: expected0]


Subtree2: TRUE 2 [sourcename: testcode]
]
junit.framework.AssertionFailedError: 
Expected: function FUNC(param1,param2){var a,b;(f(b=true)||f(b=false))&&(a=b);return a}
Result: function FUNC(param1,param2){var a,b;(f(true)||f(b=false))&&(a=b);return a}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        FUNCTION  1 [sourcename: expected0]
            NAME FUNC 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
                NAME param1 1 [sourcename: expected0]
                NAME param2 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                VAR 1 [sourcename: expected0]
                    NAME a 1 [sourcename: expected0]
                    NAME b 1 [sourcename: expected0]
                EXPR_RESULT 2 [sourcename: expected0]
                    AND 2 [sourcename: expected0]
                        OR 2 [sourcename: expected0] [parenthesized: true]
                            CALL 2 [sourcename: expected0] [free_call: 1]
                                NAME f 2 [sourcename: expected0]
                                ASSIGN 2 [sourcename: expected0]
                                    NAME b 2 [sourcename: expected0]
                                    TRUE 2 [sourcename: expected0]
                            CALL 2 [sourcename: expected0] [free_call: 1]
                                NAME f 2 [sourcename: expected0]
                                ASSIGN 2 [sourcename: expected0]
                                    NAME b 2 [sourcename: expected0]
                                    FALSE 2 [sourcename: expected0]
                        ASSIGN 2 [sourcename: expected0] [parenthesized: true]
                            NAME a 2 [sourcename: expected0]
                            NAME b 2 [sourcename: expected0]
                RETURN 3 [sourcename: expected0]
                    NAME a 3 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        FUNCTION  1 [sourcename: testcode]
            NAME FUNC 1 [sourcename: testcode]
            LP 1 [sourcename: testcode]
                NAME param1 1 [sourcename: testcode]
                NAME param2 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                VAR 1 [sourcename: testcode]
                    NAME a 1 [sourcename: testcode]
                    NAME b 1 [sourcename: testcode]
                EXPR_RESULT 2 [sourcename: testcode]
                    AND 2 [sourcename: testcode]
                        OR 2 [sourcename: testcode] [parenthesized: true]
                            CALL 2 [sourcename: testcode] [free_call: 1]
                                NAME f 2 [sourcename: testcode]
                                TRUE 2 [sourcename: testcode]
                            CALL 2 [sourcename: testcode] [free_call: 1]
                                NAME f 2 [sourcename: testcode]
                                ASSIGN 2 [sourcename: testcode]
                                    NAME b 2 [sourcename: testcode]
                                    FALSE 2 [sourcename: testcode]
                        ASSIGN 2 [sourcename: testcode] [parenthesized: true]
                            NAME a 2 [sourcename: testcode]
                            NAME b 2 [sourcename: testcode]
                RETURN 3 [sourcename: testcode]
                    NAME a 3 [sourcename: testcode]


Subtree1: ASSIGN 2 [sourcename: expected0]
    NAME b 2 [sourcename: expected0]
    TRUE 2 [sourcename: expected0]


Subtree2: TRUE 2 [sourcename: testcode]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:843)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:410)
~ testInExpression2(com.google.javascript.jscomp.DeadAssignmentsEliminationTest)
[
Expected: function FUNC(param1,param2){var a;a=1;if(2||(a=3)||a);}
Result: function FUNC(param1,param2){var a;a=1;if((a=2)||(a=3)||a);}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        FUNCTION  1 [sourcename: expected0]
            NAME FUNC 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
                NAME param1 1 [sourcename: expected0]
                NAME param2 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                VAR 1 [sourcename: expected0]
                    NAME a 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    ASSIGN 1 [sourcename: expected0]
                        NAME a 1 [sourcename: expected0]
                        NUMBER 1.0 1 [sourcename: expected0]
                IF 1 [sourcename: expected0]
                    OR 1 [sourcename: expected0]
                        NUMBER 2.0 1 [sourcename: expected0] [parenthesized: true]
                        OR 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0] [parenthesized: true]
                                NAME a 1 [sourcename: expected0]
                                NUMBER 3.0 1 [sourcename: expected0]
                            NAME a 1 [sourcename: expected0] [parenthesized: true]
                    BLOCK 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        FUNCTION  1 [sourcename: testcode]
            NAME FUNC 1 [sourcename: testcode]
            LP 1 [sourcename: testcode]
                NAME param1 1 [sourcename: testcode]
                NAME param2 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                VAR 1 [sourcename: testcode]
                    NAME a 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    ASSIGN 1 [sourcename: testcode]
                        NAME a 1 [sourcename: testcode]
                        NUMBER 1.0 1 [sourcename: testcode]
                IF 1 [sourcename: testcode]
                    OR 1 [sourcename: testcode]
                        ASSIGN 1 [sourcename: testcode] [parenthesized: true]
                            NAME a 1 [sourcename: testcode]
                            NUMBER 2.0 1 [sourcename: testcode]
                        OR 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode] [parenthesized: true]
                                NAME a 1 [sourcename: testcode]
                                NUMBER 3.0 1 [sourcename: testcode]
                            NAME a 1 [sourcename: testcode] [parenthesized: true]
                    BLOCK 1 [sourcename: testcode]


Subtree1: NUMBER 2.0 1 [sourcename: expected0] [parenthesized: true]


Subtree2: ASSIGN 1 [sourcename: testcode] [parenthesized: true]
    NAME a 1 [sourcename: testcode]
    NUMBER 2.0 1 [sourcename: testcode]
]
junit.framework.AssertionFailedError: 
Expected: function FUNC(param1,param2){var a;a=1;if(2||(a=3)||a);}
Result: function FUNC(param1,param2){var a;a=1;if((a=2)||(a=3)||a);}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        FUNCTION  1 [sourcename: expected0]
            NAME FUNC 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
                NAME param1 1 [sourcename: expected0]
                NAME param2 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                VAR 1 [sourcename: expected0]
                    NAME a 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    ASSIGN 1 [sourcename: expected0]
                        NAME a 1 [sourcename: expected0]
                        NUMBER 1.0 1 [sourcename: expected0]
                IF 1 [sourcename: expected0]
                    OR 1 [sourcename: expected0]
                        NUMBER 2.0 1 [sourcename: expected0] [parenthesized: true]
                        OR 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0] [parenthesized: true]
                                NAME a 1 [sourcename: expected0]
                                NUMBER 3.0 1 [sourcename: expected0]
                            NAME a 1 [sourcename: expected0] [parenthesized: true]
                    BLOCK 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        FUNCTION  1 [sourcename: testcode]
            NAME FUNC 1 [sourcename: testcode]
            LP 1 [sourcename: testcode]
                NAME param1 1 [sourcename: testcode]
                NAME param2 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                VAR 1 [sourcename: testcode]
                    NAME a 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    ASSIGN 1 [sourcename: testcode]
                        NAME a 1 [sourcename: testcode]
                        NUMBER 1.0 1 [sourcename: testcode]
                IF 1 [sourcename: testcode]
                    OR 1 [sourcename: testcode]
                        ASSIGN 1 [sourcename: testcode] [parenthesized: true]
                            NAME a 1 [sourcename: testcode]
                            NUMBER 2.0 1 [sourcename: testcode]
                        OR 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode] [parenthesized: true]
                                NAME a 1 [sourcename: testcode]
                                NUMBER 3.0 1 [sourcename: testcode]
                            NAME a 1 [sourcename: testcode] [parenthesized: true]
                    BLOCK 1 [sourcename: testcode]


Subtree1: NUMBER 2.0 1 [sourcename: expected0] [parenthesized: true]


Subtree2: ASSIGN 1 [sourcename: testcode] [parenthesized: true]
    NAME a 1 [sourcename: testcode]
    NUMBER 2.0 1 [sourcename: testcode]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:843)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:410)
~ testIssue384b(com.google.javascript.jscomp.DeadAssignmentsEliminationTest)
[
Expected: function FUNC(param1,param2){var a,b;f(b=true)||f(b=false)?a=b:a=null;return a}
Result: function FUNC(param1,param2){var a,b;f(true)||f(b=false)?a=b:a=null;return a}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        FUNCTION  1 [sourcename: expected0]
            NAME FUNC 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
                NAME param1 1 [sourcename: expected0]
                NAME param2 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                VAR 1 [sourcename: expected0]
                    NAME a 1 [sourcename: expected0]
                    NAME b 1 [sourcename: expected0]
                EXPR_RESULT 2 [sourcename: expected0]
                    HOOK 2 [sourcename: expected0]
                        OR 2 [sourcename: expected0] [parenthesized: true]
                            CALL 2 [sourcename: expected0] [free_call: 1]
                                NAME f 2 [sourcename: expected0]
                                ASSIGN 2 [sourcename: expected0]
                                    NAME b 2 [sourcename: expected0]
                                    TRUE 2 [sourcename: expected0]
                            CALL 2 [sourcename: expected0] [free_call: 1]
                                NAME f 2 [sourcename: expected0]
                                ASSIGN 2 [sourcename: expected0]
                                    NAME b 2 [sourcename: expected0]
                                    FALSE 2 [sourcename: expected0]
                        ASSIGN 2 [sourcename: expected0] [parenthesized: true]
                            NAME a 2 [sourcename: expected0]
                            NAME b 2 [sourcename: expected0]
                        ASSIGN 2 [sourcename: expected0] [parenthesized: true]
                            NAME a 2 [sourcename: expected0]
                            NULL 2 [sourcename: expected0]
                RETURN 3 [sourcename: expected0]
                    NAME a 3 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        FUNCTION  1 [sourcename: testcode]
            NAME FUNC 1 [sourcename: testcode]
            LP 1 [sourcename: testcode]
                NAME param1 1 [sourcename: testcode]
                NAME param2 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                VAR 1 [sourcename: testcode]
                    NAME a 1 [sourcename: testcode]
                    NAME b 1 [sourcename: testcode]
                EXPR_RESULT 2 [sourcename: testcode]
                    HOOK 2 [sourcename: testcode]
                        OR 2 [sourcename: testcode] [parenthesized: true]
                            CALL 2 [sourcename: testcode] [free_call: 1]
                                NAME f 2 [sourcename: testcode]
                                TRUE 2 [sourcename: testcode]
                            CALL 2 [sourcename: testcode] [free_call: 1]
                                NAME f 2 [sourcename: testcode]
                                ASSIGN 2 [sourcename: testcode]
                                    NAME b 2 [sourcename: testcode]
                                    FALSE 2 [sourcename: testcode]
                        ASSIGN 2 [sourcename: testcode] [parenthesized: true]
                            NAME a 2 [sourcename: testcode]
                            NAME b 2 [sourcename: testcode]
                        ASSIGN 2 [sourcename: testcode] [parenthesized: true]
                            NAME a 2 [sourcename: testcode]
                            NULL 2 [sourcename: testcode]
                RETURN 3 [sourcename: testcode]
                    NAME a 3 [sourcename: testcode]


Subtree1: ASSIGN 2 [sourcename: expected0]
    NAME b 2 [sourcename: expected0]
    TRUE 2 [sourcename: expected0]


Subtree2: TRUE 2 [sourcename: testcode]
]
junit.framework.AssertionFailedError: 
Expected: function FUNC(param1,param2){var a,b;f(b=true)||f(b=false)?a=b:a=null;return a}
Result: function FUNC(param1,param2){var a,b;f(true)||f(b=false)?a=b:a=null;return a}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        FUNCTION  1 [sourcename: expected0]
            NAME FUNC 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
                NAME param1 1 [sourcename: expected0]
                NAME param2 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                VAR 1 [sourcename: expected0]
                    NAME a 1 [sourcename: expected0]
                    NAME b 1 [sourcename: expected0]
                EXPR_RESULT 2 [sourcename: expected0]
                    HOOK 2 [sourcename: expected0]
                        OR 2 [sourcename: expected0] [parenthesized: true]
                            CALL 2 [sourcename: expected0] [free_call: 1]
                                NAME f 2 [sourcename: expected0]
                                ASSIGN 2 [sourcename: expected0]
                                    NAME b 2 [sourcename: expected0]
                                    TRUE 2 [sourcename: expected0]
                            CALL 2 [sourcename: expected0] [free_call: 1]
                                NAME f 2 [sourcename: expected0]
                                ASSIGN 2 [sourcename: expected0]
                                    NAME b 2 [sourcename: expected0]
                                    FALSE 2 [sourcename: expected0]
                        ASSIGN 2 [sourcename: expected0] [parenthesized: true]
                            NAME a 2 [sourcename: expected0]
                            NAME b 2 [sourcename: expected0]
                        ASSIGN 2 [sourcename: expected0] [parenthesized: true]
                            NAME a 2 [sourcename: expected0]
                            NULL 2 [sourcename: expected0]
                RETURN 3 [sourcename: expected0]
                    NAME a 3 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        FUNCTION  1 [sourcename: testcode]
            NAME FUNC 1 [sourcename: testcode]
            LP 1 [sourcename: testcode]
                NAME param1 1 [sourcename: testcode]
                NAME param2 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                VAR 1 [sourcename: testcode]
                    NAME a 1 [sourcename: testcode]
                    NAME b 1 [sourcename: testcode]
                EXPR_RESULT 2 [sourcename: testcode]
                    HOOK 2 [sourcename: testcode]
                        OR 2 [sourcename: testcode] [parenthesized: true]
                            CALL 2 [sourcename: testcode] [free_call: 1]
                                NAME f 2 [sourcename: testcode]
                                TRUE 2 [sourcename: testcode]
                            CALL 2 [sourcename: testcode] [free_call: 1]
                                NAME f 2 [sourcename: testcode]
                                ASSIGN 2 [sourcename: testcode]
                                    NAME b 2 [sourcename: testcode]
                                    FALSE 2 [sourcename: testcode]
                        ASSIGN 2 [sourcename: testcode] [parenthesized: true]
                            NAME a 2 [sourcename: testcode]
                            NAME b 2 [sourcename: testcode]
                        ASSIGN 2 [sourcename: testcode] [parenthesized: true]
                            NAME a 2 [sourcename: testcode]
                            NULL 2 [sourcename: testcode]
                RETURN 3 [sourcename: testcode]
                    NAME a 3 [sourcename: testcode]


Subtree1: ASSIGN 2 [sourcename: expected0]
    NAME b 2 [sourcename: expected0]
    TRUE 2 [sourcename: expected0]


Subtree2: TRUE 2 [sourcename: testcode]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:843)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:410)
~ testIssue384c(com.google.javascript.jscomp.DeadAssignmentsEliminationTest)
[
Expected: function FUNC(param1,param2){var a,b;(a?f(b=true):f(b=false))&&(a=b);return a}
Result: function FUNC(param1,param2){var a,b;(a?f(true):f(b=false))&&(a=b);return a}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        FUNCTION  1 [sourcename: expected0]
            NAME FUNC 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
                NAME param1 1 [sourcename: expected0]
                NAME param2 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                VAR 1 [sourcename: expected0]
                    NAME a 1 [sourcename: expected0]
                    NAME b 1 [sourcename: expected0]
                EXPR_RESULT 2 [sourcename: expected0]
                    AND 2 [sourcename: expected0]
                        HOOK 2 [sourcename: expected0] [parenthesized: true]
                            NAME a 2 [sourcename: expected0]
                            CALL 2 [sourcename: expected0] [free_call: 1]
                                NAME f 2 [sourcename: expected0]
                                ASSIGN 2 [sourcename: expected0]
                                    NAME b 2 [sourcename: expected0]
                                    TRUE 2 [sourcename: expected0]
                            CALL 2 [sourcename: expected0] [free_call: 1]
                                NAME f 2 [sourcename: expected0]
                                ASSIGN 2 [sourcename: expected0]
                                    NAME b 2 [sourcename: expected0]
                                    FALSE 2 [sourcename: expected0]
                        ASSIGN 2 [sourcename: expected0] [parenthesized: true]
                            NAME a 2 [sourcename: expected0]
                            NAME b 2 [sourcename: expected0]
                RETURN 3 [sourcename: expected0]
                    NAME a 3 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        FUNCTION  1 [sourcename: testcode]
            NAME FUNC 1 [sourcename: testcode]
            LP 1 [sourcename: testcode]
                NAME param1 1 [sourcename: testcode]
                NAME param2 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                VAR 1 [sourcename: testcode]
                    NAME a 1 [sourcename: testcode]
                    NAME b 1 [sourcename: testcode]
                EXPR_RESULT 2 [sourcename: testcode]
                    AND 2 [sourcename: testcode]
                        HOOK 2 [sourcename: testcode] [parenthesized: true]
                            NAME a 2 [sourcename: testcode]
                            CALL 2 [sourcename: testcode] [free_call: 1]
                                NAME f 2 [sourcename: testcode]
                                TRUE 2 [sourcename: testcode]
                            CALL 2 [sourcename: testcode] [free_call: 1]
                                NAME f 2 [sourcename: testcode]
                                ASSIGN 2 [sourcename: testcode]
                                    NAME b 2 [sourcename: testcode]
                                    FALSE 2 [sourcename: testcode]
                        ASSIGN 2 [sourcename: testcode] [parenthesized: true]
                            NAME a 2 [sourcename: testcode]
                            NAME b 2 [sourcename: testcode]
                RETURN 3 [sourcename: testcode]
                    NAME a 3 [sourcename: testcode]


Subtree1: ASSIGN 2 [sourcename: expected0]
    NAME b 2 [sourcename: expected0]
    TRUE 2 [sourcename: expected0]


Subtree2: TRUE 2 [sourcename: testcode]
]
junit.framework.AssertionFailedError: 
Expected: function FUNC(param1,param2){var a,b;(a?f(b=true):f(b=false))&&(a=b);return a}
Result: function FUNC(param1,param2){var a,b;(a?f(true):f(b=false))&&(a=b);return a}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        FUNCTION  1 [sourcename: expected0]
            NAME FUNC 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
                NAME param1 1 [sourcename: expected0]
                NAME param2 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                VAR 1 [sourcename: expected0]
                    NAME a 1 [sourcename: expected0]
                    NAME b 1 [sourcename: expected0]
                EXPR_RESULT 2 [sourcename: expected0]
                    AND 2 [sourcename: expected0]
                        HOOK 2 [sourcename: expected0] [parenthesized: true]
                            NAME a 2 [sourcename: expected0]
                            CALL 2 [sourcename: expected0] [free_call: 1]
                                NAME f 2 [sourcename: expected0]
                                ASSIGN 2 [sourcename: expected0]
                                    NAME b 2 [sourcename: expected0]
                                    TRUE 2 [sourcename: expected0]
                            CALL 2 [sourcename: expected0] [free_call: 1]
                                NAME f 2 [sourcename: expected0]
                                ASSIGN 2 [sourcename: expected0]
                                    NAME b 2 [sourcename: expected0]
                                    FALSE 2 [sourcename: expected0]
                        ASSIGN 2 [sourcename: expected0] [parenthesized: true]
                            NAME a 2 [sourcename: expected0]
                            NAME b 2 [sourcename: expected0]
                RETURN 3 [sourcename: expected0]
                    NAME a 3 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        FUNCTION  1 [sourcename: testcode]
            NAME FUNC 1 [sourcename: testcode]
            LP 1 [sourcename: testcode]
                NAME param1 1 [sourcename: testcode]
                NAME param2 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                VAR 1 [sourcename: testcode]
                    NAME a 1 [sourcename: testcode]
                    NAME b 1 [sourcename: testcode]
                EXPR_RESULT 2 [sourcename: testcode]
                    AND 2 [sourcename: testcode]
                        HOOK 2 [sourcename: testcode] [parenthesized: true]
                            NAME a 2 [sourcename: testcode]
                            CALL 2 [sourcename: testcode] [free_call: 1]
                                NAME f 2 [sourcename: testcode]
                                TRUE 2 [sourcename: testcode]
                            CALL 2 [sourcename: testcode] [free_call: 1]
                                NAME f 2 [sourcename: testcode]
                                ASSIGN 2 [sourcename: testcode]
                                    NAME b 2 [sourcename: testcode]
                                    FALSE 2 [sourcename: testcode]
                        ASSIGN 2 [sourcename: testcode] [parenthesized: true]
                            NAME a 2 [sourcename: testcode]
                            NAME b 2 [sourcename: testcode]
                RETURN 3 [sourcename: testcode]
                    NAME a 3 [sourcename: testcode]


Subtree1: ASSIGN 2 [sourcename: expected0]
    NAME b 2 [sourcename: expected0]
    TRUE 2 [sourcename: expected0]


Subtree2: TRUE 2 [sourcename: testcode]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:843)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:410)
~ testIssue384d(com.google.javascript.jscomp.DeadAssignmentsEliminationTest)
[
Expected: function FUNC(param1,param2){var a,b;(f(b=true)||f(b=false))&&(a=b);return a}
Result: function FUNC(param1,param2){var a,b;(f(true)||f(b=false))&&(a=b);return a}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        FUNCTION  1 [sourcename: expected0]
            NAME FUNC 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
                NAME param1 1 [sourcename: expected0]
                NAME param2 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                VAR 1 [sourcename: expected0]
                    NAME a 1 [sourcename: expected0]
                    NAME b 1 [sourcename: expected0]
                EXPR_RESULT 2 [sourcename: expected0]
                    AND 2 [sourcename: expected0]
                        OR 2 [sourcename: expected0] [parenthesized: true]
                            CALL 2 [sourcename: expected0] [free_call: 1]
                                NAME f 2 [sourcename: expected0]
                                ASSIGN 2 [sourcename: expected0]
                                    NAME b 2 [sourcename: expected0]
                                    TRUE 2 [sourcename: expected0]
                            CALL 2 [sourcename: expected0] [free_call: 1]
                                NAME f 2 [sourcename: expected0]
                                ASSIGN 2 [sourcename: expected0]
                                    NAME b 2 [sourcename: expected0]
                                    FALSE 2 [sourcename: expected0]
                        ASSIGN 2 [sourcename: expected0] [parenthesized: true]
                            NAME a 2 [sourcename: expected0]
                            NAME b 2 [sourcename: expected0]
                RETURN 3 [sourcename: expected0]
                    NAME a 3 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        FUNCTION  1 [sourcename: testcode]
            NAME FUNC 1 [sourcename: testcode]
            LP 1 [sourcename: testcode]
                NAME param1 1 [sourcename: testcode]
                NAME param2 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                VAR 1 [sourcename: testcode]
                    NAME a 1 [sourcename: testcode]
                    NAME b 1 [sourcename: testcode]
                EXPR_RESULT 2 [sourcename: testcode]
                    AND 2 [sourcename: testcode]
                        OR 2 [sourcename: testcode] [parenthesized: true]
                            CALL 2 [sourcename: testcode] [free_call: 1]
                                NAME f 2 [sourcename: testcode]
                                TRUE 2 [sourcename: testcode]
                            CALL 2 [sourcename: testcode] [free_call: 1]
                                NAME f 2 [sourcename: testcode]
                                ASSIGN 2 [sourcename: testcode]
                                    NAME b 2 [sourcename: testcode]
                                    FALSE 2 [sourcename: testcode]
                        ASSIGN 2 [sourcename: testcode] [parenthesized: true]
                            NAME a 2 [sourcename: testcode]
                            NAME b 2 [sourcename: testcode]
                RETURN 3 [sourcename: testcode]
                    NAME a 3 [sourcename: testcode]


Subtree1: ASSIGN 2 [sourcename: expected0]
    NAME b 2 [sourcename: expected0]
    TRUE 2 [sourcename: expected0]


Subtree2: TRUE 2 [sourcename: testcode]
]
junit.framework.AssertionFailedError: 
Expected: function FUNC(param1,param2){var a,b;(f(b=true)||f(b=false))&&(a=b);return a}
Result: function FUNC(param1,param2){var a,b;(f(true)||f(b=false))&&(a=b);return a}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        FUNCTION  1 [sourcename: expected0]
            NAME FUNC 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
                NAME param1 1 [sourcename: expected0]
                NAME param2 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                VAR 1 [sourcename: expected0]
                    NAME a 1 [sourcename: expected0]
                    NAME b 1 [sourcename: expected0]
                EXPR_RESULT 2 [sourcename: expected0]
                    AND 2 [sourcename: expected0]
                        OR 2 [sourcename: expected0] [parenthesized: true]
                            CALL 2 [sourcename: expected0] [free_call: 1]
                                NAME f 2 [sourcename: expected0]
                                ASSIGN 2 [sourcename: expected0]
                                    NAME b 2 [sourcename: expected0]
                                    TRUE 2 [sourcename: expected0]
                            CALL 2 [sourcename: expected0] [free_call: 1]
                                NAME f 2 [sourcename: expected0]
                                ASSIGN 2 [sourcename: expected0]
                                    NAME b 2 [sourcename: expected0]
                                    FALSE 2 [sourcename: expected0]
                        ASSIGN 2 [sourcename: expected0] [parenthesized: true]
                            NAME a 2 [sourcename: expected0]
                            NAME b 2 [sourcename: expected0]
                RETURN 3 [sourcename: expected0]
                    NAME a 3 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        FUNCTION  1 [sourcename: testcode]
            NAME FUNC 1 [sourcename: testcode]
            LP 1 [sourcename: testcode]
                NAME param1 1 [sourcename: testcode]
                NAME param2 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                VAR 1 [sourcename: testcode]
                    NAME a 1 [sourcename: testcode]
                    NAME b 1 [sourcename: testcode]
                EXPR_RESULT 2 [sourcename: testcode]
                    AND 2 [sourcename: testcode]
                        OR 2 [sourcename: testcode] [parenthesized: true]
                            CALL 2 [sourcename: testcode] [free_call: 1]
                                NAME f 2 [sourcename: testcode]
                                TRUE 2 [sourcename: testcode]
                            CALL 2 [sourcename: testcode] [free_call: 1]
                                NAME f 2 [sourcename: testcode]
                                ASSIGN 2 [sourcename: testcode]
                                    NAME b 2 [sourcename: testcode]
                                    FALSE 2 [sourcename: testcode]
                        ASSIGN 2 [sourcename: testcode] [parenthesized: true]
                            NAME a 2 [sourcename: testcode]
                            NAME b 2 [sourcename: testcode]
                RETURN 3 [sourcename: testcode]
                    NAME a 3 [sourcename: testcode]


Subtree1: ASSIGN 2 [sourcename: expected0]
    NAME b 2 [sourcename: expected0]
    TRUE 2 [sourcename: expected0]


Subtree2: TRUE 2 [sourcename: testcode]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:843)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:410)
~ testInExpression2(com.google.javascript.jscomp.DeadAssignmentsEliminationTest)
[
Expected: function FUNC(param1,param2){var a;a=1;if(2||(a=3)||a);}
Result: function FUNC(param1,param2){var a;a=1;if((a=2)||(a=3)||a);}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        FUNCTION  1 [sourcename: expected0]
            NAME FUNC 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
                NAME param1 1 [sourcename: expected0]
                NAME param2 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                VAR 1 [sourcename: expected0]
                    NAME a 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    ASSIGN 1 [sourcename: expected0]
                        NAME a 1 [sourcename: expected0]
                        NUMBER 1.0 1 [sourcename: expected0]
                IF 1 [sourcename: expected0]
                    OR 1 [sourcename: expected0]
                        NUMBER 2.0 1 [sourcename: expected0] [parenthesized: true]
                        OR 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0] [parenthesized: true]
                                NAME a 1 [sourcename: expected0]
                                NUMBER 3.0 1 [sourcename: expected0]
                            NAME a 1 [sourcename: expected0] [parenthesized: true]
                    BLOCK 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        FUNCTION  1 [sourcename: testcode]
            NAME FUNC 1 [sourcename: testcode]
            LP 1 [sourcename: testcode]
                NAME param1 1 [sourcename: testcode]
                NAME param2 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                VAR 1 [sourcename: testcode]
                    NAME a 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    ASSIGN 1 [sourcename: testcode]
                        NAME a 1 [sourcename: testcode]
                        NUMBER 1.0 1 [sourcename: testcode]
                IF 1 [sourcename: testcode]
                    OR 1 [sourcename: testcode]
                        ASSIGN 1 [sourcename: testcode] [parenthesized: true]
                            NAME a 1 [sourcename: testcode]
                            NUMBER 2.0 1 [sourcename: testcode]
                        OR 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode] [parenthesized: true]
                                NAME a 1 [sourcename: testcode]
                                NUMBER 3.0 1 [sourcename: testcode]
                            NAME a 1 [sourcename: testcode] [parenthesized: true]
                    BLOCK 1 [sourcename: testcode]


Subtree1: NUMBER 2.0 1 [sourcename: expected0] [parenthesized: true]


Subtree2: ASSIGN 1 [sourcename: testcode] [parenthesized: true]
    NAME a 1 [sourcename: testcode]
    NUMBER 2.0 1 [sourcename: testcode]
]
junit.framework.AssertionFailedError: 
Expected: function FUNC(param1,param2){var a;a=1;if(2||(a=3)||a);}
Result: function FUNC(param1,param2){var a;a=1;if((a=2)||(a=3)||a);}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        FUNCTION  1 [sourcename: expected0]
            NAME FUNC 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
                NAME param1 1 [sourcename: expected0]
                NAME param2 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                VAR 1 [sourcename: expected0]
                    NAME a 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    ASSIGN 1 [sourcename: expected0]
                        NAME a 1 [sourcename: expected0]
                        NUMBER 1.0 1 [sourcename: expected0]
                IF 1 [sourcename: expected0]
                    OR 1 [sourcename: expected0]
                        NUMBER 2.0 1 [sourcename: expected0] [parenthesized: true]
                        OR 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0] [parenthesized: true]
                                NAME a 1 [sourcename: expected0]
                                NUMBER 3.0 1 [sourcename: expected0]
                            NAME a 1 [sourcename: expected0] [parenthesized: true]
                    BLOCK 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        FUNCTION  1 [sourcename: testcode]
            NAME FUNC 1 [sourcename: testcode]
            LP 1 [sourcename: testcode]
                NAME param1 1 [sourcename: testcode]
                NAME param2 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                VAR 1 [sourcename: testcode]
                    NAME a 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    ASSIGN 1 [sourcename: testcode]
                        NAME a 1 [sourcename: testcode]
                        NUMBER 1.0 1 [sourcename: testcode]
                IF 1 [sourcename: testcode]
                    OR 1 [sourcename: testcode]
                        ASSIGN 1 [sourcename: testcode] [parenthesized: true]
                            NAME a 1 [sourcename: testcode]
                            NUMBER 2.0 1 [sourcename: testcode]
                        OR 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode] [parenthesized: true]
                                NAME a 1 [sourcename: testcode]
                                NUMBER 3.0 1 [sourcename: testcode]
                            NAME a 1 [sourcename: testcode] [parenthesized: true]
                    BLOCK 1 [sourcename: testcode]


Subtree1: NUMBER 2.0 1 [sourcename: expected0] [parenthesized: true]


Subtree2: ASSIGN 1 [sourcename: testcode] [parenthesized: true]
    NAME a 1 [sourcename: testcode]
    NUMBER 2.0 1 [sourcename: testcode]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:843)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:410)
~ testIssue384b(com.google.javascript.jscomp.DeadAssignmentsEliminationTest)
[
Expected: function FUNC(param1,param2){var a,b;f(b=true)||f(b=false)?a=b:a=null;return a}
Result: function FUNC(param1,param2){var a,b;f(true)||f(b=false)?a=b:a=null;return a}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        FUNCTION  1 [sourcename: expected0]
            NAME FUNC 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
                NAME param1 1 [sourcename: expected0]
                NAME param2 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                VAR 1 [sourcename: expected0]
                    NAME a 1 [sourcename: expected0]
                    NAME b 1 [sourcename: expected0]
                EXPR_RESULT 2 [sourcename: expected0]
                    HOOK 2 [sourcename: expected0]
                        OR 2 [sourcename: expected0] [parenthesized: true]
                            CALL 2 [sourcename: expected0] [free_call: 1]
                                NAME f 2 [sourcename: expected0]
                                ASSIGN 2 [sourcename: expected0]
                                    NAME b 2 [sourcename: expected0]
                                    TRUE 2 [sourcename: expected0]
                            CALL 2 [sourcename: expected0] [free_call: 1]
                                NAME f 2 [sourcename: expected0]
                                ASSIGN 2 [sourcename: expected0]
                                    NAME b 2 [sourcename: expected0]
                                    FALSE 2 [sourcename: expected0]
                        ASSIGN 2 [sourcename: expected0] [parenthesized: true]
                            NAME a 2 [sourcename: expected0]
                            NAME b 2 [sourcename: expected0]
                        ASSIGN 2 [sourcename: expected0] [parenthesized: true]
                            NAME a 2 [sourcename: expected0]
                            NULL 2 [sourcename: expected0]
                RETURN 3 [sourcename: expected0]
                    NAME a 3 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        FUNCTION  1 [sourcename: testcode]
            NAME FUNC 1 [sourcename: testcode]
            LP 1 [sourcename: testcode]
                NAME param1 1 [sourcename: testcode]
                NAME param2 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                VAR 1 [sourcename: testcode]
                    NAME a 1 [sourcename: testcode]
                    NAME b 1 [sourcename: testcode]
                EXPR_RESULT 2 [sourcename: testcode]
                    HOOK 2 [sourcename: testcode]
                        OR 2 [sourcename: testcode] [parenthesized: true]
                            CALL 2 [sourcename: testcode] [free_call: 1]
                                NAME f 2 [sourcename: testcode]
                                TRUE 2 [sourcename: testcode]
                            CALL 2 [sourcename: testcode] [free_call: 1]
                                NAME f 2 [sourcename: testcode]
                                ASSIGN 2 [sourcename: testcode]
                                    NAME b 2 [sourcename: testcode]
                                    FALSE 2 [sourcename: testcode]
                        ASSIGN 2 [sourcename: testcode] [parenthesized: true]
                            NAME a 2 [sourcename: testcode]
                            NAME b 2 [sourcename: testcode]
                        ASSIGN 2 [sourcename: testcode] [parenthesized: true]
                            NAME a 2 [sourcename: testcode]
                            NULL 2 [sourcename: testcode]
                RETURN 3 [sourcename: testcode]
                    NAME a 3 [sourcename: testcode]


Subtree1: ASSIGN 2 [sourcename: expected0]
    NAME b 2 [sourcename: expected0]
    TRUE 2 [sourcename: expected0]


Subtree2: TRUE 2 [sourcename: testcode]
]
junit.framework.AssertionFailedError: 
Expected: function FUNC(param1,param2){var a,b;f(b=true)||f(b=false)?a=b:a=null;return a}
Result: function FUNC(param1,param2){var a,b;f(true)||f(b=false)?a=b:a=null;return a}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        FUNCTION  1 [sourcename: expected0]
            NAME FUNC 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
                NAME param1 1 [sourcename: expected0]
                NAME param2 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                VAR 1 [sourcename: expected0]
                    NAME a 1 [sourcename: expected0]
                    NAME b 1 [sourcename: expected0]
                EXPR_RESULT 2 [sourcename: expected0]
                    HOOK 2 [sourcename: expected0]
                        OR 2 [sourcename: expected0] [parenthesized: true]
                            CALL 2 [sourcename: expected0] [free_call: 1]
                                NAME f 2 [sourcename: expected0]
                                ASSIGN 2 [sourcename: expected0]
                                    NAME b 2 [sourcename: expected0]
                                    TRUE 2 [sourcename: expected0]
                            CALL 2 [sourcename: expected0] [free_call: 1]
                                NAME f 2 [sourcename: expected0]
                                ASSIGN 2 [sourcename: expected0]
                                    NAME b 2 [sourcename: expected0]
                                    FALSE 2 [sourcename: expected0]
                        ASSIGN 2 [sourcename: expected0] [parenthesized: true]
                            NAME a 2 [sourcename: expected0]
                            NAME b 2 [sourcename: expected0]
                        ASSIGN 2 [sourcename: expected0] [parenthesized: true]
                            NAME a 2 [sourcename: expected0]
                            NULL 2 [sourcename: expected0]
                RETURN 3 [sourcename: expected0]
                    NAME a 3 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        FUNCTION  1 [sourcename: testcode]
            NAME FUNC 1 [sourcename: testcode]
            LP 1 [sourcename: testcode]
                NAME param1 1 [sourcename: testcode]
                NAME param2 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                VAR 1 [sourcename: testcode]
                    NAME a 1 [sourcename: testcode]
                    NAME b 1 [sourcename: testcode]
                EXPR_RESULT 2 [sourcename: testcode]
                    HOOK 2 [sourcename: testcode]
                        OR 2 [sourcename: testcode] [parenthesized: true]
                            CALL 2 [sourcename: testcode] [free_call: 1]
                                NAME f 2 [sourcename: testcode]
                                TRUE 2 [sourcename: testcode]
                            CALL 2 [sourcename: testcode] [free_call: 1]
                                NAME f 2 [sourcename: testcode]
                                ASSIGN 2 [sourcename: testcode]
                                    NAME b 2 [sourcename: testcode]
                                    FALSE 2 [sourcename: testcode]
                        ASSIGN 2 [sourcename: testcode] [parenthesized: true]
                            NAME a 2 [sourcename: testcode]
                            NAME b 2 [sourcename: testcode]
                        ASSIGN 2 [sourcename: testcode] [parenthesized: true]
                            NAME a 2 [sourcename: testcode]
                            NULL 2 [sourcename: testcode]
                RETURN 3 [sourcename: testcode]
                    NAME a 3 [sourcename: testcode]


Subtree1: ASSIGN 2 [sourcename: expected0]
    NAME b 2 [sourcename: expected0]
    TRUE 2 [sourcename: expected0]


Subtree2: TRUE 2 [sourcename: testcode]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:843)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:410)
~ testIssue384c(com.google.javascript.jscomp.DeadAssignmentsEliminationTest)
[
Expected: function FUNC(param1,param2){var a,b;(a?f(b=true):f(b=false))&&(a=b);return a}
Result: function FUNC(param1,param2){var a,b;(a?f(true):f(b=false))&&(a=b);return a}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        FUNCTION  1 [sourcename: expected0]
            NAME FUNC 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
                NAME param1 1 [sourcename: expected0]
                NAME param2 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                VAR 1 [sourcename: expected0]
                    NAME a 1 [sourcename: expected0]
                    NAME b 1 [sourcename: expected0]
                EXPR_RESULT 2 [sourcename: expected0]
                    AND 2 [sourcename: expected0]
                        HOOK 2 [sourcename: expected0] [parenthesized: true]
                            NAME a 2 [sourcename: expected0]
                            CALL 2 [sourcename: expected0] [free_call: 1]
                                NAME f 2 [sourcename: expected0]
                                ASSIGN 2 [sourcename: expected0]
                                    NAME b 2 [sourcename: expected0]
                                    TRUE 2 [sourcename: expected0]
                            CALL 2 [sourcename: expected0] [free_call: 1]
                                NAME f 2 [sourcename: expected0]
                                ASSIGN 2 [sourcename: expected0]
                                    NAME b 2 [sourcename: expected0]
                                    FALSE 2 [sourcename: expected0]
                        ASSIGN 2 [sourcename: expected0] [parenthesized: true]
                            NAME a 2 [sourcename: expected0]
                            NAME b 2 [sourcename: expected0]
                RETURN 3 [sourcename: expected0]
                    NAME a 3 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        FUNCTION  1 [sourcename: testcode]
            NAME FUNC 1 [sourcename: testcode]
            LP 1 [sourcename: testcode]
                NAME param1 1 [sourcename: testcode]
                NAME param2 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                VAR 1 [sourcename: testcode]
                    NAME a 1 [sourcename: testcode]
                    NAME b 1 [sourcename: testcode]
                EXPR_RESULT 2 [sourcename: testcode]
                    AND 2 [sourcename: testcode]
                        HOOK 2 [sourcename: testcode] [parenthesized: true]
                            NAME a 2 [sourcename: testcode]
                            CALL 2 [sourcename: testcode] [free_call: 1]
                                NAME f 2 [sourcename: testcode]
                                TRUE 2 [sourcename: testcode]
                            CALL 2 [sourcename: testcode] [free_call: 1]
                                NAME f 2 [sourcename: testcode]
                                ASSIGN 2 [sourcename: testcode]
                                    NAME b 2 [sourcename: testcode]
                                    FALSE 2 [sourcename: testcode]
                        ASSIGN 2 [sourcename: testcode] [parenthesized: true]
                            NAME a 2 [sourcename: testcode]
                            NAME b 2 [sourcename: testcode]
                RETURN 3 [sourcename: testcode]
                    NAME a 3 [sourcename: testcode]


Subtree1: ASSIGN 2 [sourcename: expected0]
    NAME b 2 [sourcename: expected0]
    TRUE 2 [sourcename: expected0]


Subtree2: TRUE 2 [sourcename: testcode]
]
junit.framework.AssertionFailedError: 
Expected: function FUNC(param1,param2){var a,b;(a?f(b=true):f(b=false))&&(a=b);return a}
Result: function FUNC(param1,param2){var a,b;(a?f(true):f(b=false))&&(a=b);return a}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        FUNCTION  1 [sourcename: expected0]
            NAME FUNC 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
                NAME param1 1 [sourcename: expected0]
                NAME param2 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                VAR 1 [sourcename: expected0]
                    NAME a 1 [sourcename: expected0]
                    NAME b 1 [sourcename: expected0]
                EXPR_RESULT 2 [sourcename: expected0]
                    AND 2 [sourcename: expected0]
                        HOOK 2 [sourcename: expected0] [parenthesized: true]
                            NAME a 2 [sourcename: expected0]
                            CALL 2 [sourcename: expected0] [free_call: 1]
                                NAME f 2 [sourcename: expected0]
                                ASSIGN 2 [sourcename: expected0]
                                    NAME b 2 [sourcename: expected0]
                                    TRUE 2 [sourcename: expected0]
                            CALL 2 [sourcename: expected0] [free_call: 1]
                                NAME f 2 [sourcename: expected0]
                                ASSIGN 2 [sourcename: expected0]
                                    NAME b 2 [sourcename: expected0]
                                    FALSE 2 [sourcename: expected0]
                        ASSIGN 2 [sourcename: expected0] [parenthesized: true]
                            NAME a 2 [sourcename: expected0]
                            NAME b 2 [sourcename: expected0]
                RETURN 3 [sourcename: expected0]
                    NAME a 3 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        FUNCTION  1 [sourcename: testcode]
            NAME FUNC 1 [sourcename: testcode]
            LP 1 [sourcename: testcode]
                NAME param1 1 [sourcename: testcode]
                NAME param2 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                VAR 1 [sourcename: testcode]
                    NAME a 1 [sourcename: testcode]
                    NAME b 1 [sourcename: testcode]
                EXPR_RESULT 2 [sourcename: testcode]
                    AND 2 [sourcename: testcode]
                        HOOK 2 [sourcename: testcode] [parenthesized: true]
                            NAME a 2 [sourcename: testcode]
                            CALL 2 [sourcename: testcode] [free_call: 1]
                                NAME f 2 [sourcename: testcode]
                                TRUE 2 [sourcename: testcode]
                            CALL 2 [sourcename: testcode] [free_call: 1]
                                NAME f 2 [sourcename: testcode]
                                ASSIGN 2 [sourcename: testcode]
                                    NAME b 2 [sourcename: testcode]
                                    FALSE 2 [sourcename: testcode]
                        ASSIGN 2 [sourcename: testcode] [parenthesized: true]
                            NAME a 2 [sourcename: testcode]
                            NAME b 2 [sourcename: testcode]
                RETURN 3 [sourcename: testcode]
                    NAME a 3 [sourcename: testcode]


Subtree1: ASSIGN 2 [sourcename: expected0]
    NAME b 2 [sourcename: expected0]
    TRUE 2 [sourcename: expected0]


Subtree2: TRUE 2 [sourcename: testcode]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:843)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:410)
~ testIssue384d(com.google.javascript.jscomp.DeadAssignmentsEliminationTest)
[
Expected: function FUNC(param1,param2){var a,b;(f(b=true)||f(b=false))&&(a=b);return a}
Result: function FUNC(param1,param2){var a,b;(f(true)||f(b=false))&&(a=b);return a}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        FUNCTION  1 [sourcename: expected0]
            NAME FUNC 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
                NAME param1 1 [sourcename: expected0]
                NAME param2 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                VAR 1 [sourcename: expected0]
                    NAME a 1 [sourcename: expected0]
                    NAME b 1 [sourcename: expected0]
                EXPR_RESULT 2 [sourcename: expected0]
                    AND 2 [sourcename: expected0]
                        OR 2 [sourcename: expected0] [parenthesized: true]
                            CALL 2 [sourcename: expected0] [free_call: 1]
                                NAME f 2 [sourcename: expected0]
                                ASSIGN 2 [sourcename: expected0]
                                    NAME b 2 [sourcename: expected0]
                                    TRUE 2 [sourcename: expected0]
                            CALL 2 [sourcename: expected0] [free_call: 1]
                                NAME f 2 [sourcename: expected0]
                                ASSIGN 2 [sourcename: expected0]
                                    NAME b 2 [sourcename: expected0]
                                    FALSE 2 [sourcename: expected0]
                        ASSIGN 2 [sourcename: expected0] [parenthesized: true]
                            NAME a 2 [sourcename: expected0]
                            NAME b 2 [sourcename: expected0]
                RETURN 3 [sourcename: expected0]
                    NAME a 3 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        FUNCTION  1 [sourcename: testcode]
            NAME FUNC 1 [sourcename: testcode]
            LP 1 [sourcename: testcode]
                NAME param1 1 [sourcename: testcode]
                NAME param2 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                VAR 1 [sourcename: testcode]
                    NAME a 1 [sourcename: testcode]
                    NAME b 1 [sourcename: testcode]
                EXPR_RESULT 2 [sourcename: testcode]
                    AND 2 [sourcename: testcode]
                        OR 2 [sourcename: testcode] [parenthesized: true]
                            CALL 2 [sourcename: testcode] [free_call: 1]
                                NAME f 2 [sourcename: testcode]
                                TRUE 2 [sourcename: testcode]
                            CALL 2 [sourcename: testcode] [free_call: 1]
                                NAME f 2 [sourcename: testcode]
                                ASSIGN 2 [sourcename: testcode]
                                    NAME b 2 [sourcename: testcode]
                                    FALSE 2 [sourcename: testcode]
                        ASSIGN 2 [sourcename: testcode] [parenthesized: true]
                            NAME a 2 [sourcename: testcode]
                            NAME b 2 [sourcename: testcode]
                RETURN 3 [sourcename: testcode]
                    NAME a 3 [sourcename: testcode]


Subtree1: ASSIGN 2 [sourcename: expected0]
    NAME b 2 [sourcename: expected0]
    TRUE 2 [sourcename: expected0]


Subtree2: TRUE 2 [sourcename: testcode]
]
junit.framework.AssertionFailedError: 
Expected: function FUNC(param1,param2){var a,b;(f(b=true)||f(b=false))&&(a=b);return a}
Result: function FUNC(param1,param2){var a,b;(f(true)||f(b=false))&&(a=b);return a}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        FUNCTION  1 [sourcename: expected0]
            NAME FUNC 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
                NAME param1 1 [sourcename: expected0]
                NAME param2 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                VAR 1 [sourcename: expected0]
                    NAME a 1 [sourcename: expected0]
                    NAME b 1 [sourcename: expected0]
                EXPR_RESULT 2 [sourcename: expected0]
                    AND 2 [sourcename: expected0]
                        OR 2 [sourcename: expected0] [parenthesized: true]
                            CALL 2 [sourcename: expected0] [free_call: 1]
                                NAME f 2 [sourcename: expected0]
                                ASSIGN 2 [sourcename: expected0]
                                    NAME b 2 [sourcename: expected0]
                                    TRUE 2 [sourcename: expected0]
                            CALL 2 [sourcename: expected0] [free_call: 1]
                                NAME f 2 [sourcename: expected0]
                                ASSIGN 2 [sourcename: expected0]
                                    NAME b 2 [sourcename: expected0]
                                    FALSE 2 [sourcename: expected0]
                        ASSIGN 2 [sourcename: expected0] [parenthesized: true]
                            NAME a 2 [sourcename: expected0]
                            NAME b 2 [sourcename: expected0]
                RETURN 3 [sourcename: expected0]
                    NAME a 3 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        FUNCTION  1 [sourcename: testcode]
            NAME FUNC 1 [sourcename: testcode]
            LP 1 [sourcename: testcode]
                NAME param1 1 [sourcename: testcode]
                NAME param2 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                VAR 1 [sourcename: testcode]
                    NAME a 1 [sourcename: testcode]
                    NAME b 1 [sourcename: testcode]
                EXPR_RESULT 2 [sourcename: testcode]
                    AND 2 [sourcename: testcode]
                        OR 2 [sourcename: testcode] [parenthesized: true]
                            CALL 2 [sourcename: testcode] [free_call: 1]
                                NAME f 2 [sourcename: testcode]
                                TRUE 2 [sourcename: testcode]
                            CALL 2 [sourcename: testcode] [free_call: 1]
                                NAME f 2 [sourcename: testcode]
                                ASSIGN 2 [sourcename: testcode]
                                    NAME b 2 [sourcename: testcode]
                                    FALSE 2 [sourcename: testcode]
                        ASSIGN 2 [sourcename: testcode] [parenthesized: true]
                            NAME a 2 [sourcename: testcode]
                            NAME b 2 [sourcename: testcode]
                RETURN 3 [sourcename: testcode]
                    NAME a 3 [sourcename: testcode]


Subtree1: ASSIGN 2 [sourcename: expected0]
    NAME b 2 [sourcename: expected0]
    TRUE 2 [sourcename: expected0]


Subtree2: TRUE 2 [sourcename: testcode]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:843)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:410)

java -cp /tmp/DynaMoth_Defects4J_Closure_76/build/classes:/tmp/DynaMoth_Defects4J_Closure_76/build/test:/tmp/DynaMoth_Defects4J_Closure_76/build/classes:/tmp/DynaMoth_Defects4J_Closure_76/build/test:/tmp/DynaMoth_Defects4J_Closure_76/lib/ant.jar:/tmp/DynaMoth_Defects4J_Closure_76/lib/libtrunk_rhino_parser_jarjared.jar:/tmp/DynaMoth_Defects4J_Closure_76/lib/junit.jar:/tmp/DynaMoth_Defects4J_Closure_76/lib/json.jar:/tmp/DynaMoth_Defects4J_Closure_76/lib/args4j.jar:/tmp/DynaMoth_Defects4J_Closure_76/lib/guava.jar:/tmp/DynaMoth_Defects4J_Closure_76/lib/protobuf-java.jar:/tmp/DynaMoth_Defects4J_Closure_76/lib/jsr305.jar:/tmp/DynaMoth_Defects4J_Closure_76/lib/ant-launcher.jar:/tmp/DynaMoth_Defects4J_Closure_76/lib/caja-r4314.jar:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar:/home/tdurieux/defects4j4repair/repair_tools/nopol.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar: fr.inria.lille.repair.MethodTestRunner com.google.javascript.rhino.NodeTest#testCheckTreeEqualsStringDifferent com.google.javascript.jscomp.CrossModuleMethodMotionTest#testClosureVariableReads3 com.google.javascript.jscomp.CrossModuleMethodMotionTest#testTwoMethods com.google.javascript.jscomp.DeadAssignmentsEliminationTest#testInExpression2 com.google.javascript.jscomp.DeadAssignmentsEliminationTest#testIssue384d com.google.javascript.jscomp.DeadAssignmentsEliminationTest#testIssue384c com.google.javascript.jscomp.DeadAssignmentsEliminationTest#testIssue384b 
18:29:26.201 [pool-17-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - ClassPrepareEvent
18:29:26.248 [pool-17-thread-1] DEBUG f.i.l.r.s.c.spoon.ClassCollector - [class] com.google.javascript.rhino.Node
18:29:26.276 [pool-17-thread-1] DEBUG f.i.l.r.s.c.spoon.ClassCollector - [class] com.google.javascript.rhino.Node$NodeMismatch
18:29:26.303 [pool-17-thread-1] DEBUG f.i.l.r.s.c.spoon.ClassCollector - [class] java.lang.String
18:29:26.859 [pool-17-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
18:29:26.863 [pool-17-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] com.google.javascript.rhino.NodeTest#testCheckTreeEqualsStringDifferent iteration 0
18:29:26.865 [pool-17-thread-1] DEBUG f.i.l.r.s.c.SpoonElementsCollector - [data] "Node tree inequality:"="Node tree inequality:"
18:29:26.867 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
18:29:26.867 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of com.google.javascript.rhino.Node(id=283)
18:29:26.870 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2
18:29:26.870 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] diff
18:29:26.881 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.ORIGINALNAME_PROP
18:29:26.881 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.propListHead
18:29:26.881 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.LABEL_PROP
18:29:26.881 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.CATCH_SCOPE_PROP
18:29:26.881 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.CONTINUE_PROP
18:29:26.881 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.IS_CONSTANT_NAME
18:29:26.881 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.IS_DISPATCHER
18:29:26.881 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.LAST_PROP
18:29:26.881 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.NON_SPECIALCALL
18:29:26.881 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.POST_FLAG
18:29:26.881 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.COLUMN_BITS
18:29:26.881 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.FLAG_THIS_UNMODIFIED
18:29:26.882 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.LOCAL_PROP
18:29:26.882 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.USES_PROP
18:29:26.882 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.CASEARRAY_PROP
18:29:26.882 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.VARIABLE_PROP
18:29:26.882 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.SPECIALCALL_PROP
18:29:26.882 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.SKIP_INDEXES_PROP
18:29:26.882 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.PARENTHESIZED_PROP
18:29:26.882 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.jsType
18:29:26.883 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.EMPTY_BLOCK
18:29:26.883 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.NO_SIDE_EFFECTS
18:29:26.883 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.parent
18:29:26.883 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.SPECIAL_PROP_PROP
18:29:26.883 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.OBJECT_IDS_PROP
18:29:26.883 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.BREAK_PROP
18:29:26.883 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.IS_NAMESPACE
18:29:26.883 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.FREE_CALL
18:29:26.883 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.RIGHT
18:29:26.883 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.DECR_FLAG
18:29:26.883 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.DESCENDANTS_FLAG
18:29:26.883 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.FLAG_GLOBAL_STATE_UNMODIFIED
18:29:26.883 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.FLAG_LOCAL_RESULTS
18:29:26.883 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.TEMP_PROP
18:29:26.883 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.VARS_PROP
18:29:26.884 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.DEFAULT_PROP
18:29:26.884 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.TARGETBLOCK_PROP
18:29:26.884 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.DIRECTCALL_PROP
18:29:26.884 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.VAR_ARGS_NAME
18:29:26.884 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.NAME_PROP
18:29:26.884 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.SYNTHETIC_BLOCK_PROP
18:29:26.884 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.type
18:29:26.884 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.SIDE_EFFECT_FLAGS
18:29:26.884 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.SIDE_EFFECTS_FLAGS_MASK
18:29:26.884 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.sourcePosition
18:29:26.884 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.TYPE_PROP
18:29:26.884 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.LOCAL_BLOCK_PROP
18:29:26.884 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.TARGET_PROP
18:29:26.884 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.IS_VAR_ARGS_PARAM
18:29:26.884 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.DIRECT_EVAL
18:29:26.884 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.LEFT
18:29:26.884 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.SPECIALCALL_WITH
18:29:26.884 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.ATTRIBUTE_FLAG
18:29:26.884 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.COLUMN_MASK
18:29:26.884 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.FLAG_NO_THROWS
18:29:26.885 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.FUNCTION_PROP
18:29:26.885 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.FIXUPS_PROP
18:29:26.885 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.CASES_PROP
18:29:26.885 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.LOCALCOUNT_PROP
18:29:26.885 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.ISNUMBER_PROP
18:29:26.885 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.JSDOC_INFO_PROP
18:29:26.885 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.MEMBER_TYPE_PROP
18:29:26.885 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.OPT_ARG_NAME
18:29:26.885 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.SIDE_EFFECTS_ALL
18:29:26.885 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.next
18:29:26.885 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.BRACELESS_TYPE
18:29:26.885 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.first
18:29:26.885 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.SOURCENAME_PROP
18:29:26.885 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.LABEL_ID_PROP
18:29:26.885 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.IS_OPTIONAL_PARAM
18:29:26.885 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.DIRECTIVES
18:29:26.885 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.BOTH
18:29:26.885 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.SPECIALCALL_EVAL
18:29:26.885 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.PROPERTY_FLAG
18:29:26.885 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.MAX_COLUMN_NUMBER
18:29:26.886 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.FLAG_ARGUMENTS_UNMODIFIED
18:29:26.886 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.ENUM_PROP
18:29:26.886 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.CODEOFFSET_PROP
18:29:26.886 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.REGEXP_PROP
18:29:26.886 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.FINALLY_PROP
18:29:26.886 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.LASTUSE_PROP
18:29:26.886 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.DEBUGSOURCE_PROP
18:29:26.886 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.INCRDECR_PROP
18:29:26.886 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.QUOTED_PROP
18:29:26.886 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.last
18:29:26.904 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.propToString((int) 0)
18:29:26.905 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.propToString((int) 1)
18:29:26.911 [pool-41-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getChildBefore(com.google.javascript.rhino.Node) [instance of com.google.javascript.rhino.Node(id=283)]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:29:26.913 [pool-42-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getChildBefore(com.google.javascript.rhino.Node) [instance of com.google.javascript.rhino.Node(id=285)]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:29:26.915 [pool-44-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getChildAtIndex(int) [1]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:29:26.921 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.clonePropsFrom((com.google.javascript.rhino.Node) this)
18:29:26.922 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.clonePropsFrom((com.google.javascript.rhino.Node) node2)
18:29:26.925 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getBooleanProp((int) 0)
18:29:26.926 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getBooleanProp((int) 1)
18:29:26.927 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getIntProp((int) 0)
18:29:26.928 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getIntProp((int) 1)
18:29:26.931 [pool-55-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getExistingIntProp(int) [0]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:29:26.933 [pool-56-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getExistingIntProp(int) [1]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:29:26.935 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.extractLineno((int) 0)
18:29:26.935 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.extractLineno((int) 1)
18:29:26.936 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.extractCharno((int) 0)
18:29:26.937 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.extractCharno((int) 1)
18:29:26.938 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getAncestor((int) 0)
18:29:26.941 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.hasChild((com.google.javascript.rhino.Node) this)
18:29:26.942 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.hasChild((com.google.javascript.rhino.Node) node2)
18:29:26.944 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getNodeClass((com.google.javascript.rhino.Node) this)
18:29:26.945 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getNodeClass((com.google.javascript.rhino.Node) node2)
18:29:26.948 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.checkTreeEqualsImpl((com.google.javascript.rhino.Node) node2)
18:29:26.952 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.checkTreeTypeAwareEqualsImpl((com.google.javascript.rhino.Node) node2)
18:29:26.954 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isEquivalentTo((com.google.javascript.rhino.Node) this)
18:29:26.955 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isEquivalentTo((com.google.javascript.rhino.Node) node2)
18:29:26.957 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isEquivalentToTyped((com.google.javascript.rhino.Node) this)
18:29:26.959 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isEquivalentToTyped((com.google.javascript.rhino.Node) node2)
18:29:26.960 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getType()
18:29:26.961 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.hasChildren()
18:29:26.964 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getLastSibling()
18:29:26.966 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getSortedPropTypes()
18:29:26.967 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getLineno()
18:29:26.968 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getCharno()
18:29:26.970 [pool-84-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getDouble() []
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:29:26.971 [pool-85-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getString() []
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:29:26.973 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.children()
18:29:26.974 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getAncestors()
18:29:26.975 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.hasOneChild()
18:29:26.976 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.hasMoreThanOneChild()
18:29:26.977 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getChildCount()
18:29:26.978 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.hasSideEffects()
18:29:26.980 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isQualifiedName()
18:29:26.980 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isUnscopedQualifiedName()
18:29:26.981 [pool-96-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.detachFromParent() []
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:29:26.983 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.cloneNode()
18:29:26.984 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.cloneTree()
18:29:26.986 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getJsDocBuilderForNode()
18:29:26.987 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isVarArgs()
18:29:26.989 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isOptionalArg()
18:29:26.989 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isSyntheticBlock()
18:29:26.991 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.wasEmptyNode()
18:29:26.992 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getSideEffectFlags()
18:29:26.993 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isOnlyModifiesThisCall()
18:29:26.993 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isNoSideEffectsCall()
18:29:26.994 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isQuotedString()
18:29:26.997 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.ORIGINALNAME_PROP
18:29:26.997 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.LABEL_PROP
18:29:26.997 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.CATCH_SCOPE_PROP
18:29:26.997 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.CONTINUE_PROP
18:29:26.997 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.IS_CONSTANT_NAME
18:29:26.997 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.IS_DISPATCHER
18:29:26.997 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.LAST_PROP
18:29:26.997 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.NON_SPECIALCALL
18:29:26.997 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.POST_FLAG
18:29:26.997 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.COLUMN_BITS
18:29:26.997 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.FLAG_THIS_UNMODIFIED
18:29:26.997 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.LOCAL_PROP
18:29:26.997 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.USES_PROP
18:29:26.997 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.CASEARRAY_PROP
18:29:26.997 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.VARIABLE_PROP
18:29:26.997 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.SPECIALCALL_PROP
18:29:26.997 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.SKIP_INDEXES_PROP
18:29:26.997 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.PARENTHESIZED_PROP
18:29:26.997 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.EMPTY_BLOCK
18:29:26.997 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.NO_SIDE_EFFECTS
18:29:26.997 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.SPECIAL_PROP_PROP
18:29:26.997 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.OBJECT_IDS_PROP
18:29:26.998 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.BREAK_PROP
18:29:26.998 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.IS_NAMESPACE
18:29:26.998 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.FREE_CALL
18:29:26.998 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.RIGHT
18:29:26.998 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.DECR_FLAG
18:29:26.998 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.DESCENDANTS_FLAG
18:29:26.998 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.FLAG_GLOBAL_STATE_UNMODIFIED
18:29:26.998 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.FLAG_LOCAL_RESULTS
18:29:26.998 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.TEMP_PROP
18:29:26.998 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.VARS_PROP
18:29:26.998 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.DEFAULT_PROP
18:29:26.998 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.TARGETBLOCK_PROP
18:29:26.998 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.DIRECTCALL_PROP
18:29:26.998 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.VAR_ARGS_NAME
18:29:26.998 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.NAME_PROP
18:29:26.998 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.SYNTHETIC_BLOCK_PROP
18:29:26.998 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.SIDE_EFFECT_FLAGS
18:29:26.998 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.SIDE_EFFECTS_FLAGS_MASK
18:29:26.998 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.TYPE_PROP
18:29:26.998 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.LOCAL_BLOCK_PROP
18:29:26.998 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.TARGET_PROP
18:29:26.998 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.IS_VAR_ARGS_PARAM
18:29:26.998 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.DIRECT_EVAL
18:29:26.999 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.LEFT
18:29:26.999 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.SPECIALCALL_WITH
18:29:26.999 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.ATTRIBUTE_FLAG
18:29:26.999 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.COLUMN_MASK
18:29:26.999 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.FLAG_NO_THROWS
18:29:26.999 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.FUNCTION_PROP
18:29:26.999 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.FIXUPS_PROP
18:29:26.999 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.CASES_PROP
18:29:26.999 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.LOCALCOUNT_PROP
18:29:26.999 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.ISNUMBER_PROP
18:29:26.999 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.JSDOC_INFO_PROP
18:29:26.999 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.MEMBER_TYPE_PROP
18:29:26.999 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.OPT_ARG_NAME
18:29:26.999 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.SIDE_EFFECTS_ALL
18:29:26.999 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.BRACELESS_TYPE
18:29:26.999 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.SOURCENAME_PROP
18:29:26.999 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.LABEL_ID_PROP
18:29:26.999 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.IS_OPTIONAL_PARAM
18:29:26.999 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.DIRECTIVES
18:29:26.999 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.BOTH
18:29:26.999 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.SPECIALCALL_EVAL
18:29:26.999 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.PROPERTY_FLAG
18:29:26.999 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.MAX_COLUMN_NUMBER
18:29:26.999 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.FLAG_ARGUMENTS_UNMODIFIED
18:29:26.999 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.ENUM_PROP
18:29:26.999 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.CODEOFFSET_PROP
18:29:26.999 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.REGEXP_PROP
18:29:26.999 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.FINALLY_PROP
18:29:26.999 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.LASTUSE_PROP
18:29:26.999 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.DEBUGSOURCE_PROP
18:29:26.999 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.INCRDECR_PROP
18:29:27.000 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.QUOTED_PROP
18:29:27.007 [pool-111-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getChildBefore(com.google.javascript.rhino.Node) [instance of com.google.javascript.rhino.Node(id=283)]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:29:27.009 [pool-112-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getChildBefore(com.google.javascript.rhino.Node) [instance of com.google.javascript.rhino.Node(id=285)]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:29:27.011 [pool-114-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getChildAtIndex(int) [1]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:29:27.012 [pool-115-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getChildAtIndex(int) [39]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:29:27.013 [pool-116-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getChildAtIndex(int) [19]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:29:27.016 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.clonePropsFrom((com.google.javascript.rhino.Node) this)
18:29:27.017 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.clonePropsFrom((com.google.javascript.rhino.Node) node2)
18:29:27.022 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) 0)
18:29:27.023 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) 1)
18:29:27.024 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.ORIGINALNAME_PROP)
18:29:27.025 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.LABEL_PROP)
18:29:27.026 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.CATCH_SCOPE_PROP)
18:29:27.027 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.CONTINUE_PROP)
18:29:27.028 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.IS_CONSTANT_NAME)
18:29:27.028 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.IS_DISPATCHER)
18:29:27.029 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.LAST_PROP)
18:29:27.030 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.NON_SPECIALCALL)
18:29:27.031 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.POST_FLAG)
18:29:27.032 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.COLUMN_BITS)
18:29:27.033 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.FLAG_THIS_UNMODIFIED)
18:29:27.034 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.LOCAL_PROP)
18:29:27.035 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.USES_PROP)
18:29:27.035 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.CASEARRAY_PROP)
18:29:27.036 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.VARIABLE_PROP)
18:29:27.037 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.SPECIALCALL_PROP)
18:29:27.038 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.SKIP_INDEXES_PROP)
18:29:27.039 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.PARENTHESIZED_PROP)
18:29:27.040 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.EMPTY_BLOCK)
18:29:27.041 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.NO_SIDE_EFFECTS)
18:29:27.041 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.SPECIAL_PROP_PROP)
18:29:27.042 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.OBJECT_IDS_PROP)
18:29:27.043 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.BREAK_PROP)
18:29:27.044 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.IS_NAMESPACE)
18:29:27.045 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.FREE_CALL)
18:29:27.046 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.RIGHT)
18:29:27.046 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.DECR_FLAG)
18:29:27.047 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.DESCENDANTS_FLAG)
18:29:27.048 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.FLAG_GLOBAL_STATE_UNMODIFIED)
18:29:27.049 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.FLAG_LOCAL_RESULTS)
18:29:27.050 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.TEMP_PROP)
18:29:27.050 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.VARS_PROP)
18:29:27.051 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.DEFAULT_PROP)
18:29:27.052 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.TARGETBLOCK_PROP)
18:29:27.053 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.DIRECTCALL_PROP)
18:29:27.054 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.VAR_ARGS_NAME)
18:29:27.055 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.NAME_PROP)
18:29:27.056 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.SYNTHETIC_BLOCK_PROP)
18:29:27.057 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.type)
18:29:27.058 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.SIDE_EFFECT_FLAGS)
18:29:27.058 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.SIDE_EFFECTS_FLAGS_MASK)
18:29:27.059 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.sourcePosition)
18:29:27.060 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.TYPE_PROP)
18:29:27.061 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.LOCAL_BLOCK_PROP)
18:29:27.062 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.TARGET_PROP)
18:29:27.063 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.IS_VAR_ARGS_PARAM)
18:29:27.063 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.DIRECT_EVAL)
18:29:27.064 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.LEFT)
18:29:27.065 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.SPECIALCALL_WITH)
18:29:27.066 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.ATTRIBUTE_FLAG)
18:29:27.067 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.COLUMN_MASK)
18:29:27.067 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.FLAG_NO_THROWS)
18:29:27.068 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.FUNCTION_PROP)
18:29:27.069 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.FIXUPS_PROP)
18:29:27.069 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.CASES_PROP)
18:29:27.070 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.LOCALCOUNT_PROP)
18:29:27.071 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.ISNUMBER_PROP)
18:29:27.072 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.JSDOC_INFO_PROP)
18:29:27.073 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.MEMBER_TYPE_PROP)
18:29:27.074 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.OPT_ARG_NAME)
18:29:27.075 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.SIDE_EFFECTS_ALL)
18:29:27.076 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.BRACELESS_TYPE)
18:29:27.076 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.SOURCENAME_PROP)
18:29:27.077 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.LABEL_ID_PROP)
18:29:27.078 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.IS_OPTIONAL_PARAM)
18:29:27.079 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.DIRECTIVES)
18:29:27.079 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.BOTH)
18:29:27.080 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.SPECIALCALL_EVAL)
18:29:27.081 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.PROPERTY_FLAG)
18:29:27.081 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.MAX_COLUMN_NUMBER)
18:29:27.082 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.FLAG_ARGUMENTS_UNMODIFIED)
18:29:27.083 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.ENUM_PROP)
18:29:27.083 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.CODEOFFSET_PROP)
18:29:27.084 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.REGEXP_PROP)
18:29:27.085 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.FINALLY_PROP)
18:29:27.086 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.LASTUSE_PROP)
18:29:27.087 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.DEBUGSOURCE_PROP)
18:29:27.087 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.INCRDECR_PROP)
18:29:27.088 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.QUOTED_PROP)
18:29:27.089 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) 0)
18:29:27.089 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) 1)
18:29:27.090 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.ORIGINALNAME_PROP)
18:29:27.091 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.LABEL_PROP)
18:29:27.092 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.CATCH_SCOPE_PROP)
18:29:27.093 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.CONTINUE_PROP)
18:29:27.093 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.IS_CONSTANT_NAME)
18:29:27.094 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.IS_DISPATCHER)
18:29:27.095 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.LAST_PROP)
18:29:27.095 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.NON_SPECIALCALL)
18:29:27.096 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.POST_FLAG)
18:29:27.097 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.COLUMN_BITS)
18:29:27.097 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.FLAG_THIS_UNMODIFIED)
18:29:27.098 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.LOCAL_PROP)
18:29:27.098 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.USES_PROP)
18:29:27.099 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.CASEARRAY_PROP)
18:29:27.100 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.VARIABLE_PROP)
18:29:27.101 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.SPECIALCALL_PROP)
18:29:27.102 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.SKIP_INDEXES_PROP)
18:29:27.103 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.PARENTHESIZED_PROP)
18:29:27.104 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.EMPTY_BLOCK)
18:29:27.105 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.NO_SIDE_EFFECTS)
18:29:27.105 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.SPECIAL_PROP_PROP)
18:29:27.106 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.OBJECT_IDS_PROP)
18:29:27.107 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.BREAK_PROP)
18:29:27.108 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.IS_NAMESPACE)
18:29:27.109 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.FREE_CALL)
18:29:27.109 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.RIGHT)
18:29:27.110 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.DECR_FLAG)
18:29:27.111 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.DESCENDANTS_FLAG)
18:29:27.112 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.FLAG_GLOBAL_STATE_UNMODIFIED)
18:29:27.113 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.FLAG_LOCAL_RESULTS)
18:29:27.113 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.TEMP_PROP)
18:29:27.114 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.VARS_PROP)
18:29:27.115 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.DEFAULT_PROP)
18:29:27.116 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.TARGETBLOCK_PROP)
18:29:27.117 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.DIRECTCALL_PROP)
18:29:27.118 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.VAR_ARGS_NAME)
18:29:27.119 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.NAME_PROP)
18:29:27.120 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.SYNTHETIC_BLOCK_PROP)
18:29:27.121 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.type)
18:29:27.121 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.SIDE_EFFECT_FLAGS)
18:29:27.122 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.SIDE_EFFECTS_FLAGS_MASK)
18:29:27.123 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.sourcePosition)
18:29:27.124 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.TYPE_PROP)
18:29:27.125 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.LOCAL_BLOCK_PROP)
18:29:27.126 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.TARGET_PROP)
18:29:27.127 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.IS_VAR_ARGS_PARAM)
18:29:27.128 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.DIRECT_EVAL)
18:29:27.129 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.LEFT)
18:29:27.129 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.SPECIALCALL_WITH)
18:29:27.130 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.ATTRIBUTE_FLAG)
18:29:27.131 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.COLUMN_MASK)
18:29:27.132 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.FLAG_NO_THROWS)
18:29:27.133 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.FUNCTION_PROP)
18:29:27.133 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.FIXUPS_PROP)
18:29:27.134 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.CASES_PROP)
18:29:27.135 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.LOCALCOUNT_PROP)
18:29:27.135 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.ISNUMBER_PROP)
18:29:27.136 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.JSDOC_INFO_PROP)
18:29:27.137 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.MEMBER_TYPE_PROP)
18:29:27.137 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.OPT_ARG_NAME)
18:29:27.138 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.SIDE_EFFECTS_ALL)
18:29:27.139 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.BRACELESS_TYPE)
18:29:27.139 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.SOURCENAME_PROP)
18:29:27.140 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.LABEL_ID_PROP)
18:29:27.141 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.IS_OPTIONAL_PARAM)
18:29:27.142 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.DIRECTIVES)
18:29:27.142 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.BOTH)
18:29:27.143 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.SPECIALCALL_EVAL)
18:29:27.144 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.PROPERTY_FLAG)
18:29:27.144 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.MAX_COLUMN_NUMBER)
18:29:27.145 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.FLAG_ARGUMENTS_UNMODIFIED)
18:29:27.146 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.ENUM_PROP)
18:29:27.146 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.CODEOFFSET_PROP)
18:29:27.147 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.REGEXP_PROP)
18:29:27.148 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.FINALLY_PROP)
18:29:27.148 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.LASTUSE_PROP)
18:29:27.149 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.DEBUGSOURCE_PROP)
18:29:27.150 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.INCRDECR_PROP)
18:29:27.150 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.QUOTED_PROP)
18:29:27.152 [pool-287-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getExistingIntProp(int) [0]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:29:27.154 [pool-288-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getExistingIntProp(int) [1]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:29:27.156 [pool-289-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getExistingIntProp(int) [39]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:29:27.158 [pool-290-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getExistingIntProp(int) [19]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:29:27.159 [pool-291-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getExistingIntProp(int) [-1]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:29:27.161 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getAncestor((int) 0)
18:29:27.165 [pool-296-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getAncestor(int) [-1]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:29:27.167 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.hasChild((com.google.javascript.rhino.Node) this)
18:29:27.169 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.hasChild((com.google.javascript.rhino.Node) node2)
18:29:27.171 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isEquivalentTo((com.google.javascript.rhino.Node) this)
18:29:27.172 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isEquivalentTo((com.google.javascript.rhino.Node) node2)
18:29:27.173 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isEquivalentToTyped((com.google.javascript.rhino.Node) this)
18:29:27.174 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isEquivalentToTyped((com.google.javascript.rhino.Node) node2)
18:29:27.175 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getType()
18:29:27.176 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.hasChildren()
18:29:27.178 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getLastSibling()
18:29:27.179 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getLineno()
18:29:27.179 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getCharno()
18:29:27.180 [pool-312-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getDouble() []
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:29:27.181 [pool-313-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getString() []
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:29:27.182 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.children()
18:29:27.183 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getAncestors()
18:29:27.184 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.hasOneChild()
18:29:27.184 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.hasMoreThanOneChild()
18:29:27.185 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getChildCount()
18:29:27.185 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.hasSideEffects()
18:29:27.187 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isQualifiedName()
18:29:27.187 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isUnscopedQualifiedName()
18:29:27.188 [pool-324-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.detachFromParent() []
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:29:27.189 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.cloneNode()
18:29:27.189 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.cloneTree()
18:29:27.191 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getJsDocBuilderForNode()
18:29:27.192 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isVarArgs()
18:29:27.193 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isOptionalArg()
18:29:27.193 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isSyntheticBlock()
18:29:27.195 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.wasEmptyNode()
18:29:27.195 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getSideEffectFlags()
18:29:27.196 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isOnlyModifiesThisCall()
18:29:27.196 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isNoSideEffectsCall()
18:29:27.197 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isQuotedString()
18:29:27.461 [pool-17-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
18:29:27.463 [pool-17-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] com.google.javascript.jscomp.CrossModuleMethodMotionTest#testClosureVariableReads3 iteration 0
18:29:27.464 [pool-17-thread-1] DEBUG f.i.l.r.s.c.SpoonElementsCollector - [data] "Node tree inequality:"="Node tree inequality:"
18:29:27.464 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
18:29:27.464 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of com.google.javascript.rhino.Node(id=891)
18:29:27.464 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2
18:29:27.464 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] diff
18:29:27.468 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.ORIGINALNAME_PROP
18:29:27.468 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.propListHead
18:29:27.468 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.LABEL_PROP
18:29:27.468 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.CATCH_SCOPE_PROP
18:29:27.468 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.CONTINUE_PROP
18:29:27.468 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.IS_CONSTANT_NAME
18:29:27.468 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.IS_DISPATCHER
18:29:27.468 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.LAST_PROP
18:29:27.468 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.NON_SPECIALCALL
18:29:27.468 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.POST_FLAG
18:29:27.468 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.COLUMN_BITS
18:29:27.468 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.FLAG_THIS_UNMODIFIED
18:29:27.468 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.LOCAL_PROP
18:29:27.468 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.USES_PROP
18:29:27.468 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.CASEARRAY_PROP
18:29:27.468 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.VARIABLE_PROP
18:29:27.468 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.SPECIALCALL_PROP
18:29:27.468 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.SKIP_INDEXES_PROP
18:29:27.468 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.PARENTHESIZED_PROP
18:29:27.468 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.jsType
18:29:27.468 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.EMPTY_BLOCK
18:29:27.468 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.NO_SIDE_EFFECTS
18:29:27.468 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.parent
18:29:27.468 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.SPECIAL_PROP_PROP
18:29:27.468 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.OBJECT_IDS_PROP
18:29:27.468 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.BREAK_PROP
18:29:27.468 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.IS_NAMESPACE
18:29:27.468 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.FREE_CALL
18:29:27.468 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.RIGHT
18:29:27.468 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.DECR_FLAG
18:29:27.468 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.DESCENDANTS_FLAG
18:29:27.468 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.FLAG_GLOBAL_STATE_UNMODIFIED
18:29:27.468 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.FLAG_LOCAL_RESULTS
18:29:27.468 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.TEMP_PROP
18:29:27.468 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.VARS_PROP
18:29:27.468 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.DEFAULT_PROP
18:29:27.468 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.TARGETBLOCK_PROP
18:29:27.468 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.DIRECTCALL_PROP
18:29:27.468 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.VAR_ARGS_NAME
18:29:27.468 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.NAME_PROP
18:29:27.468 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.SYNTHETIC_BLOCK_PROP
18:29:27.468 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.type
18:29:27.468 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.SIDE_EFFECT_FLAGS
18:29:27.468 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.SIDE_EFFECTS_FLAGS_MASK
18:29:27.468 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.sourcePosition
18:29:27.468 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.TYPE_PROP
18:29:27.468 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.LOCAL_BLOCK_PROP
18:29:27.468 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.TARGET_PROP
18:29:27.468 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.IS_VAR_ARGS_PARAM
18:29:27.468 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.DIRECT_EVAL
18:29:27.468 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.LEFT
18:29:27.469 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.SPECIALCALL_WITH
18:29:27.469 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.ATTRIBUTE_FLAG
18:29:27.469 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.COLUMN_MASK
18:29:27.469 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.FLAG_NO_THROWS
18:29:27.469 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.FUNCTION_PROP
18:29:27.469 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.FIXUPS_PROP
18:29:27.469 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.CASES_PROP
18:29:27.469 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.LOCALCOUNT_PROP
18:29:27.469 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.ISNUMBER_PROP
18:29:27.469 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.JSDOC_INFO_PROP
18:29:27.469 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.MEMBER_TYPE_PROP
18:29:27.469 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.OPT_ARG_NAME
18:29:27.469 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.SIDE_EFFECTS_ALL
18:29:27.469 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.next
18:29:27.469 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.BRACELESS_TYPE
18:29:27.469 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.first
18:29:27.469 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.SOURCENAME_PROP
18:29:27.469 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.LABEL_ID_PROP
18:29:27.469 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.IS_OPTIONAL_PARAM
18:29:27.469 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.DIRECTIVES
18:29:27.469 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.BOTH
18:29:27.469 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.SPECIALCALL_EVAL
18:29:27.469 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.PROPERTY_FLAG
18:29:27.469 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.MAX_COLUMN_NUMBER
18:29:27.469 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.FLAG_ARGUMENTS_UNMODIFIED
18:29:27.469 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.ENUM_PROP
18:29:27.469 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.CODEOFFSET_PROP
18:29:27.469 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.REGEXP_PROP
18:29:27.469 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.FINALLY_PROP
18:29:27.469 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.LASTUSE_PROP
18:29:27.469 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.DEBUGSOURCE_PROP
18:29:27.469 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.INCRDECR_PROP
18:29:27.469 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.QUOTED_PROP
18:29:27.469 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.last
18:29:27.489 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.propToString((int) 0)
18:29:27.490 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.propToString((int) 1)
18:29:27.493 [pool-341-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getChildBefore(com.google.javascript.rhino.Node) [instance of com.google.javascript.rhino.Node(id=891)]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:29:27.495 [pool-342-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getChildBefore(com.google.javascript.rhino.Node) [instance of com.google.javascript.rhino.Node(id=893)]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:29:27.496 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getChildAtIndex((int) 0)
18:29:27.496 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getChildAtIndex((int) 1)
18:29:27.500 [pool-347-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.clonePropsFrom(com.google.javascript.rhino.Node) [instance of com.google.javascript.rhino.Node(id=891)]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:29:27.501 [pool-348-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.clonePropsFrom(com.google.javascript.rhino.Node) [instance of com.google.javascript.rhino.Node(id=893)]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:29:27.503 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getBooleanProp((int) 0)
18:29:27.504 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getBooleanProp((int) 1)
18:29:27.505 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getIntProp((int) 0)
18:29:27.505 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getIntProp((int) 1)
18:29:27.506 [pool-355-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getExistingIntProp(int) [0]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:29:27.508 [pool-356-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getExistingIntProp(int) [1]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:29:27.509 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.extractLineno((int) 0)
18:29:27.509 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.extractLineno((int) 1)
18:29:27.510 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.extractCharno((int) 0)
18:29:27.510 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.extractCharno((int) 1)
18:29:27.511 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getAncestor((int) 0)
18:29:27.514 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.hasChild((com.google.javascript.rhino.Node) this)
18:29:27.516 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.hasChild((com.google.javascript.rhino.Node) node2)
18:29:27.518 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getNodeClass((com.google.javascript.rhino.Node) this)
18:29:27.520 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getNodeClass((com.google.javascript.rhino.Node) node2)
18:29:27.525 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.checkTreeEqualsImpl((com.google.javascript.rhino.Node) node2)
18:29:27.536 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.checkTreeTypeAwareEqualsImpl((com.google.javascript.rhino.Node) node2)
18:29:27.539 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isEquivalentTo((com.google.javascript.rhino.Node) this)
18:29:27.541 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isEquivalentTo((com.google.javascript.rhino.Node) node2)
18:29:27.544 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isEquivalentToTyped((com.google.javascript.rhino.Node) this)
18:29:27.546 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isEquivalentToTyped((com.google.javascript.rhino.Node) node2)
18:29:27.547 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getType()
18:29:27.548 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.hasChildren()
18:29:27.549 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getFirstChild()
18:29:27.550 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getLastChild()
18:29:27.551 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getLastSibling()
18:29:27.553 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getSortedPropTypes()
18:29:27.553 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getLineno()
18:29:27.555 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getCharno()
18:29:27.556 [pool-384-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getDouble() []
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:29:27.557 [pool-385-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getString() []
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:29:27.558 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.children()
18:29:27.560 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getAncestors()
18:29:27.560 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.hasOneChild()
18:29:27.561 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.hasMoreThanOneChild()
18:29:27.561 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getChildCount()
18:29:27.562 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.hasSideEffects()
18:29:27.563 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isQualifiedName()
18:29:27.564 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isUnscopedQualifiedName()
18:29:27.565 [pool-396-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.detachFromParent() []
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:29:27.565 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.cloneNode()
18:29:27.566 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.cloneTree()
18:29:27.567 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getJsDocBuilderForNode()
18:29:27.569 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isVarArgs()
18:29:27.569 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isOptionalArg()
18:29:27.570 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isSyntheticBlock()
18:29:27.571 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.wasEmptyNode()
18:29:27.572 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getSideEffectFlags()
18:29:27.572 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isOnlyModifiesThisCall()
18:29:27.573 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isNoSideEffectsCall()
18:29:27.574 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isQuotedString()
18:29:27.575 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.ORIGINALNAME_PROP
18:29:27.575 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.LABEL_PROP
18:29:27.575 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.CATCH_SCOPE_PROP
18:29:27.575 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.CONTINUE_PROP
18:29:27.575 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.IS_CONSTANT_NAME
18:29:27.576 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.IS_DISPATCHER
18:29:27.576 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.LAST_PROP
18:29:27.576 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.NON_SPECIALCALL
18:29:27.576 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.POST_FLAG
18:29:27.576 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.COLUMN_BITS
18:29:27.576 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.FLAG_THIS_UNMODIFIED
18:29:27.576 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.LOCAL_PROP
18:29:27.576 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.USES_PROP
18:29:27.576 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.CASEARRAY_PROP
18:29:27.576 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.VARIABLE_PROP
18:29:27.576 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.SPECIALCALL_PROP
18:29:27.576 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.SKIP_INDEXES_PROP
18:29:27.576 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.PARENTHESIZED_PROP
18:29:27.576 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.EMPTY_BLOCK
18:29:27.576 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.NO_SIDE_EFFECTS
18:29:27.576 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.SPECIAL_PROP_PROP
18:29:27.576 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.OBJECT_IDS_PROP
18:29:27.576 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.BREAK_PROP
18:29:27.576 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.IS_NAMESPACE
18:29:27.576 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.FREE_CALL
18:29:27.576 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.RIGHT
18:29:27.576 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.DECR_FLAG
18:29:27.576 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.DESCENDANTS_FLAG
18:29:27.576 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.FLAG_GLOBAL_STATE_UNMODIFIED
18:29:27.576 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.FLAG_LOCAL_RESULTS
18:29:27.576 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.TEMP_PROP
18:29:27.576 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.VARS_PROP
18:29:27.576 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.DEFAULT_PROP
18:29:27.576 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.TARGETBLOCK_PROP
18:29:27.576 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.DIRECTCALL_PROP
18:29:27.576 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.VAR_ARGS_NAME
18:29:27.576 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.NAME_PROP
18:29:27.576 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.SYNTHETIC_BLOCK_PROP
18:29:27.576 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.SIDE_EFFECT_FLAGS
18:29:27.576 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.SIDE_EFFECTS_FLAGS_MASK
18:29:27.577 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.TYPE_PROP
18:29:27.577 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.LOCAL_BLOCK_PROP
18:29:27.577 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.TARGET_PROP
18:29:27.577 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.IS_VAR_ARGS_PARAM
18:29:27.577 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.DIRECT_EVAL
18:29:27.577 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.LEFT
18:29:27.577 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.SPECIALCALL_WITH
18:29:27.577 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.ATTRIBUTE_FLAG
18:29:27.577 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.COLUMN_MASK
18:29:27.577 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.FLAG_NO_THROWS
18:29:27.577 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.FUNCTION_PROP
18:29:27.577 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.FIXUPS_PROP
18:29:27.577 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.CASES_PROP
18:29:27.577 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.LOCALCOUNT_PROP
18:29:27.577 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.ISNUMBER_PROP
18:29:27.577 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.JSDOC_INFO_PROP
18:29:27.577 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.MEMBER_TYPE_PROP
18:29:27.577 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.OPT_ARG_NAME
18:29:27.577 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.SIDE_EFFECTS_ALL
18:29:27.577 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.BRACELESS_TYPE
18:29:27.577 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.SOURCENAME_PROP
18:29:27.577 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.LABEL_ID_PROP
18:29:27.577 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.IS_OPTIONAL_PARAM
18:29:27.577 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.DIRECTIVES
18:29:27.577 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.BOTH
18:29:27.577 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.SPECIALCALL_EVAL
18:29:27.577 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.PROPERTY_FLAG
18:29:27.577 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.MAX_COLUMN_NUMBER
18:29:27.577 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.FLAG_ARGUMENTS_UNMODIFIED
18:29:27.577 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.ENUM_PROP
18:29:27.577 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.CODEOFFSET_PROP
18:29:27.577 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.REGEXP_PROP
18:29:27.577 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.FINALLY_PROP
18:29:27.577 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.LASTUSE_PROP
18:29:27.577 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.DEBUGSOURCE_PROP
18:29:27.577 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.INCRDECR_PROP
18:29:27.577 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.QUOTED_PROP
18:29:27.587 [pool-411-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getChildBefore(com.google.javascript.rhino.Node) [instance of com.google.javascript.rhino.Node(id=891)]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:29:27.588 [pool-412-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getChildBefore(com.google.javascript.rhino.Node) [instance of com.google.javascript.rhino.Node(id=893)]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:29:27.590 [pool-413-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getChildBefore(com.google.javascript.rhino.Node) [instance of com.google.javascript.rhino.Node(id=895)]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:29:27.591 [pool-414-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getChildBefore(com.google.javascript.rhino.Node) [instance of com.google.javascript.rhino.Node(id=896)]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:29:27.592 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getChildAtIndex((int) 0)
18:29:27.594 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getChildAtIndex((int) 1)
18:29:27.594 [pool-417-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getChildAtIndex(int) [39]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:29:27.595 [pool-418-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getChildAtIndex(int) [19]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:29:27.596 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getChildAtIndex((int) this.CATCH_SCOPE_PROP)
18:29:27.597 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getChildAtIndex((int) this.CONTINUE_PROP)
18:29:27.598 [pool-421-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getChildAtIndex(int) [42]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:29:27.599 [pool-422-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getChildAtIndex(int) [46]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:29:27.600 [pool-423-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getChildAtIndex(int) [49]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:29:27.602 [pool-424-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.clonePropsFrom(com.google.javascript.rhino.Node) [instance of com.google.javascript.rhino.Node(id=891)]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:29:27.604 [pool-425-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.clonePropsFrom(com.google.javascript.rhino.Node) [instance of com.google.javascript.rhino.Node(id=893)]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:29:27.605 [pool-426-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.clonePropsFrom(com.google.javascript.rhino.Node) [instance of com.google.javascript.rhino.Node(id=895)]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:29:27.607 [pool-427-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.clonePropsFrom(com.google.javascript.rhino.Node) [instance of com.google.javascript.rhino.Node(id=896)]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:29:27.611 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) 0)
18:29:27.612 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) 1)
18:29:27.613 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.ORIGINALNAME_PROP)
18:29:27.614 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.LABEL_PROP)
18:29:27.614 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.CATCH_SCOPE_PROP)
18:29:27.615 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.CONTINUE_PROP)
18:29:27.616 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.IS_CONSTANT_NAME)
18:29:27.617 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.IS_DISPATCHER)
18:29:27.618 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.LAST_PROP)
18:29:27.618 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.NON_SPECIALCALL)
18:29:27.619 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.POST_FLAG)
18:29:27.620 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.COLUMN_BITS)
18:29:27.621 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.FLAG_THIS_UNMODIFIED)
18:29:27.621 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.LOCAL_PROP)
18:29:27.622 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.USES_PROP)
18:29:27.623 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.CASEARRAY_PROP)
18:29:27.624 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.VARIABLE_PROP)
18:29:27.624 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.SPECIALCALL_PROP)
18:29:27.625 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.SKIP_INDEXES_PROP)
18:29:27.626 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.PARENTHESIZED_PROP)
18:29:27.627 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.EMPTY_BLOCK)
18:29:27.628 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.NO_SIDE_EFFECTS)
18:29:27.628 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.SPECIAL_PROP_PROP)
18:29:27.629 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.OBJECT_IDS_PROP)
18:29:27.630 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.BREAK_PROP)
18:29:27.631 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.IS_NAMESPACE)
18:29:27.632 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.FREE_CALL)
18:29:27.632 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.RIGHT)
18:29:27.633 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.DECR_FLAG)
18:29:27.634 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.DESCENDANTS_FLAG)
18:29:27.634 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.FLAG_GLOBAL_STATE_UNMODIFIED)
18:29:27.635 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.FLAG_LOCAL_RESULTS)
18:29:27.636 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.TEMP_PROP)
18:29:27.636 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.VARS_PROP)
18:29:27.637 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.DEFAULT_PROP)
18:29:27.638 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.TARGETBLOCK_PROP)
18:29:27.638 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.DIRECTCALL_PROP)
18:29:27.639 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.VAR_ARGS_NAME)
18:29:27.640 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.NAME_PROP)
18:29:27.640 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.SYNTHETIC_BLOCK_PROP)
18:29:27.641 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.type)
18:29:27.641 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.SIDE_EFFECT_FLAGS)
18:29:27.642 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.SIDE_EFFECTS_FLAGS_MASK)
18:29:27.643 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.sourcePosition)
18:29:27.643 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.TYPE_PROP)
18:29:27.644 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.LOCAL_BLOCK_PROP)
18:29:27.645 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.TARGET_PROP)
18:29:27.645 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.IS_VAR_ARGS_PARAM)
18:29:27.646 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.DIRECT_EVAL)
18:29:27.647 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.LEFT)
18:29:27.647 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.SPECIALCALL_WITH)
18:29:27.648 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.ATTRIBUTE_FLAG)
18:29:27.649 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.COLUMN_MASK)
18:29:27.650 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.FLAG_NO_THROWS)
18:29:27.650 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.FUNCTION_PROP)
18:29:27.651 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.FIXUPS_PROP)
18:29:27.651 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.CASES_PROP)
18:29:27.652 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.LOCALCOUNT_PROP)
18:29:27.653 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.ISNUMBER_PROP)
18:29:27.653 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.JSDOC_INFO_PROP)
18:29:27.654 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.MEMBER_TYPE_PROP)
18:29:27.655 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.OPT_ARG_NAME)
18:29:27.655 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.SIDE_EFFECTS_ALL)
18:29:27.656 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.BRACELESS_TYPE)
18:29:27.656 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.SOURCENAME_PROP)
18:29:27.657 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.LABEL_ID_PROP)
18:29:27.658 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.IS_OPTIONAL_PARAM)
18:29:27.658 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.DIRECTIVES)
18:29:27.659 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.BOTH)
18:29:27.660 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.SPECIALCALL_EVAL)
18:29:27.661 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.PROPERTY_FLAG)
18:29:27.662 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.MAX_COLUMN_NUMBER)
18:29:27.663 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.FLAG_ARGUMENTS_UNMODIFIED)
18:29:27.663 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.ENUM_PROP)
18:29:27.664 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.CODEOFFSET_PROP)
18:29:27.665 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.REGEXP_PROP)
18:29:27.665 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.FINALLY_PROP)
18:29:27.666 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.LASTUSE_PROP)
18:29:27.667 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.DEBUGSOURCE_PROP)
18:29:27.668 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.INCRDECR_PROP)
18:29:27.668 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.QUOTED_PROP)
18:29:27.669 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) 0)
18:29:27.670 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) 1)
18:29:27.671 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.ORIGINALNAME_PROP)
18:29:27.671 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.LABEL_PROP)
18:29:27.672 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.CATCH_SCOPE_PROP)
18:29:27.673 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.CONTINUE_PROP)
18:29:27.674 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.IS_CONSTANT_NAME)
18:29:27.674 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.IS_DISPATCHER)
18:29:27.675 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.LAST_PROP)
18:29:27.676 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.NON_SPECIALCALL)
18:29:27.676 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.POST_FLAG)
18:29:27.677 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.COLUMN_BITS)
18:29:27.678 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.FLAG_THIS_UNMODIFIED)
18:29:27.678 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.LOCAL_PROP)
18:29:27.679 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.USES_PROP)
18:29:27.680 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.CASEARRAY_PROP)
18:29:27.680 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.VARIABLE_PROP)
18:29:27.681 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.SPECIALCALL_PROP)
18:29:27.682 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.SKIP_INDEXES_PROP)
18:29:27.682 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.PARENTHESIZED_PROP)
18:29:27.683 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.EMPTY_BLOCK)
18:29:27.683 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.NO_SIDE_EFFECTS)
18:29:27.684 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.SPECIAL_PROP_PROP)
18:29:27.685 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.OBJECT_IDS_PROP)
18:29:27.685 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.BREAK_PROP)
18:29:27.686 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.IS_NAMESPACE)
18:29:27.687 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.FREE_CALL)
18:29:27.687 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.RIGHT)
18:29:27.688 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.DECR_FLAG)
18:29:27.689 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.DESCENDANTS_FLAG)
18:29:27.689 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.FLAG_GLOBAL_STATE_UNMODIFIED)
18:29:27.690 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.FLAG_LOCAL_RESULTS)
18:29:27.691 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.TEMP_PROP)
18:29:27.691 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.VARS_PROP)
18:29:27.692 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.DEFAULT_PROP)
18:29:27.693 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.TARGETBLOCK_PROP)
18:29:27.693 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.DIRECTCALL_PROP)
18:29:27.694 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.VAR_ARGS_NAME)
18:29:27.695 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.NAME_PROP)
18:29:27.695 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.SYNTHETIC_BLOCK_PROP)
18:29:27.696 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.type)
18:29:27.696 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.SIDE_EFFECT_FLAGS)
18:29:27.697 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.SIDE_EFFECTS_FLAGS_MASK)
18:29:27.698 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.sourcePosition)
18:29:27.698 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.TYPE_PROP)
18:29:27.699 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.LOCAL_BLOCK_PROP)
18:29:27.700 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.TARGET_PROP)
18:29:27.700 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.IS_VAR_ARGS_PARAM)
18:29:27.701 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.DIRECT_EVAL)
18:29:27.702 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.LEFT)
18:29:27.702 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.SPECIALCALL_WITH)
18:29:27.703 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.ATTRIBUTE_FLAG)
18:29:27.704 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.COLUMN_MASK)
18:29:27.704 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.FLAG_NO_THROWS)
18:29:27.705 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.FUNCTION_PROP)
18:29:27.706 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.FIXUPS_PROP)
18:29:27.707 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.CASES_PROP)
18:29:27.707 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.LOCALCOUNT_PROP)
18:29:27.708 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.ISNUMBER_PROP)
18:29:27.709 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.JSDOC_INFO_PROP)
18:29:27.710 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.MEMBER_TYPE_PROP)
18:29:27.710 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.OPT_ARG_NAME)
18:29:27.711 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.SIDE_EFFECTS_ALL)
18:29:27.712 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.BRACELESS_TYPE)
18:29:27.713 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.SOURCENAME_PROP)
18:29:27.713 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.LABEL_ID_PROP)
18:29:27.714 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.IS_OPTIONAL_PARAM)
18:29:27.715 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.DIRECTIVES)
18:29:27.716 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.BOTH)
18:29:27.716 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.SPECIALCALL_EVAL)
18:29:27.717 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.PROPERTY_FLAG)
18:29:27.718 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.MAX_COLUMN_NUMBER)
18:29:27.718 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.FLAG_ARGUMENTS_UNMODIFIED)
18:29:27.719 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.ENUM_PROP)
18:29:27.720 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.CODEOFFSET_PROP)
18:29:27.721 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.REGEXP_PROP)
18:29:27.721 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.FINALLY_PROP)
18:29:27.722 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.LASTUSE_PROP)
18:29:27.723 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.DEBUGSOURCE_PROP)
18:29:27.723 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.INCRDECR_PROP)
18:29:27.724 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.QUOTED_PROP)
18:29:27.726 [pool-595-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getExistingIntProp(int) [0]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:29:27.727 [pool-596-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getExistingIntProp(int) [1]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:29:27.729 [pool-597-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getExistingIntProp(int) [39]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:29:27.730 [pool-598-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getExistingIntProp(int) [19]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:29:27.731 [pool-599-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getExistingIntProp(int) [-1]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:29:27.732 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getAncestor((int) 0)
18:29:27.733 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getAncestor((int) 1)
18:29:27.735 [pool-604-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getAncestor(int) [-1]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:29:27.739 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.hasChild((com.google.javascript.rhino.Node) this)
18:29:27.740 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.hasChild((com.google.javascript.rhino.Node) node2)
18:29:27.742 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.hasChild((com.google.javascript.rhino.Node) this.first)
18:29:27.744 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.hasChild((com.google.javascript.rhino.Node) this.last)
18:29:27.746 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isEquivalentTo((com.google.javascript.rhino.Node) this)
18:29:27.748 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isEquivalentTo((com.google.javascript.rhino.Node) node2)
18:29:27.750 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isEquivalentTo((com.google.javascript.rhino.Node) this.first)
18:29:27.751 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isEquivalentTo((com.google.javascript.rhino.Node) this.last)
18:29:27.754 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isEquivalentToTyped((com.google.javascript.rhino.Node) this)
18:29:27.755 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isEquivalentToTyped((com.google.javascript.rhino.Node) node2)
18:29:27.757 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isEquivalentToTyped((com.google.javascript.rhino.Node) this.first)
18:29:27.759 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isEquivalentToTyped((com.google.javascript.rhino.Node) this.last)
18:29:27.760 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getType()
18:29:27.761 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.hasChildren()
18:29:27.761 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getFirstChild()
18:29:27.762 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getLastChild()
18:29:27.764 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getLastSibling()
18:29:27.764 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getLineno()
18:29:27.765 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getCharno()
18:29:27.766 [pool-627-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getDouble() []
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:29:27.767 [pool-628-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getString() []
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:29:27.768 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.children()
18:29:27.769 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getParent()
18:29:27.769 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getAncestors()
18:29:27.770 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.hasOneChild()
18:29:27.771 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.hasMoreThanOneChild()
18:29:27.772 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getChildCount()
18:29:27.773 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.hasSideEffects()
18:29:27.774 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isQualifiedName()
18:29:27.775 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isUnscopedQualifiedName()
18:29:27.776 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.detachFromParent()
18:29:27.777 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.cloneNode()
18:29:27.778 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.cloneTree()
18:29:27.779 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getJsDocBuilderForNode()
18:29:27.781 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isVarArgs()
18:29:27.782 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isOptionalArg()
18:29:27.782 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isSyntheticBlock()
18:29:27.784 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.wasEmptyNode()
18:29:27.784 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getSideEffectFlags()
18:29:27.785 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isOnlyModifiesThisCall()
18:29:27.786 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isNoSideEffectsCall()
18:29:27.787 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isQuotedString()
18:29:27.813 [pool-17-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
18:29:27.814 [pool-17-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] com.google.javascript.jscomp.CrossModuleMethodMotionTest#testTwoMethods iteration 0
18:29:27.814 [pool-17-thread-1] DEBUG f.i.l.r.s.c.SpoonElementsCollector - [data] "Node tree inequality:"="Node tree inequality:"
18:29:27.814 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
18:29:27.814 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of com.google.javascript.rhino.Node(id=1225)
18:29:27.814 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2
18:29:27.814 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] diff
18:29:27.818 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.ORIGINALNAME_PROP
18:29:27.818 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.propListHead
18:29:27.818 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.LABEL_PROP
18:29:27.818 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.CATCH_SCOPE_PROP
18:29:27.818 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.CONTINUE_PROP
18:29:27.818 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.IS_CONSTANT_NAME
18:29:27.818 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.IS_DISPATCHER
18:29:27.818 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.LAST_PROP
18:29:27.818 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.NON_SPECIALCALL
18:29:27.818 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.POST_FLAG
18:29:27.818 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.COLUMN_BITS
18:29:27.818 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.FLAG_THIS_UNMODIFIED
18:29:27.818 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.LOCAL_PROP
18:29:27.818 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.USES_PROP
18:29:27.818 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.CASEARRAY_PROP
18:29:27.818 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.VARIABLE_PROP
18:29:27.818 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.SPECIALCALL_PROP
18:29:27.818 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.SKIP_INDEXES_PROP
18:29:27.818 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.PARENTHESIZED_PROP
18:29:27.818 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.jsType
18:29:27.818 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.EMPTY_BLOCK
18:29:27.818 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.NO_SIDE_EFFECTS
18:29:27.818 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.parent
18:29:27.818 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.SPECIAL_PROP_PROP
18:29:27.819 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.OBJECT_IDS_PROP
18:29:27.819 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.BREAK_PROP
18:29:27.819 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.IS_NAMESPACE
18:29:27.819 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.FREE_CALL
18:29:27.819 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.RIGHT
18:29:27.819 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.DECR_FLAG
18:29:27.819 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.DESCENDANTS_FLAG
18:29:27.819 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.FLAG_GLOBAL_STATE_UNMODIFIED
18:29:27.819 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.FLAG_LOCAL_RESULTS
18:29:27.819 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.TEMP_PROP
18:29:27.819 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.VARS_PROP
18:29:27.819 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.DEFAULT_PROP
18:29:27.819 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.TARGETBLOCK_PROP
18:29:27.819 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.DIRECTCALL_PROP
18:29:27.819 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.VAR_ARGS_NAME
18:29:27.819 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.NAME_PROP
18:29:27.819 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.SYNTHETIC_BLOCK_PROP
18:29:27.819 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.type
18:29:27.819 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.SIDE_EFFECT_FLAGS
18:29:27.819 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.SIDE_EFFECTS_FLAGS_MASK
18:29:27.819 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.sourcePosition
18:29:27.819 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.TYPE_PROP
18:29:27.819 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.LOCAL_BLOCK_PROP
18:29:27.819 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.TARGET_PROP
18:29:27.819 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.IS_VAR_ARGS_PARAM
18:29:27.819 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.DIRECT_EVAL
18:29:27.819 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.LEFT
18:29:27.819 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.SPECIALCALL_WITH
18:29:27.819 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.ATTRIBUTE_FLAG
18:29:27.819 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.COLUMN_MASK
18:29:27.819 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.FLAG_NO_THROWS
18:29:27.819 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.FUNCTION_PROP
18:29:27.819 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.FIXUPS_PROP
18:29:27.819 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.CASES_PROP
18:29:27.819 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.LOCALCOUNT_PROP
18:29:27.819 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.ISNUMBER_PROP
18:29:27.819 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.JSDOC_INFO_PROP
18:29:27.819 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.MEMBER_TYPE_PROP
18:29:27.819 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.OPT_ARG_NAME
18:29:27.819 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.SIDE_EFFECTS_ALL
18:29:27.819 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.next
18:29:27.819 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.BRACELESS_TYPE
18:29:27.819 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.first
18:29:27.820 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.SOURCENAME_PROP
18:29:27.820 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.LABEL_ID_PROP
18:29:27.820 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.IS_OPTIONAL_PARAM
18:29:27.820 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.DIRECTIVES
18:29:27.820 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.BOTH
18:29:27.820 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.SPECIALCALL_EVAL
18:29:27.820 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.PROPERTY_FLAG
18:29:27.820 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.MAX_COLUMN_NUMBER
18:29:27.820 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.FLAG_ARGUMENTS_UNMODIFIED
18:29:27.820 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.ENUM_PROP
18:29:27.820 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.CODEOFFSET_PROP
18:29:27.820 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.REGEXP_PROP
18:29:27.820 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.FINALLY_PROP
18:29:27.820 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.LASTUSE_PROP
18:29:27.820 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.DEBUGSOURCE_PROP
18:29:27.820 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.INCRDECR_PROP
18:29:27.820 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.QUOTED_PROP
18:29:27.820 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.last
18:29:27.826 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.propToString((int) 0)
18:29:27.827 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.propToString((int) 1)
18:29:27.830 [pool-656-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getChildBefore(com.google.javascript.rhino.Node) [instance of com.google.javascript.rhino.Node(id=1225)]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:29:27.831 [pool-657-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getChildBefore(com.google.javascript.rhino.Node) [instance of com.google.javascript.rhino.Node(id=1227)]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:29:27.832 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getChildAtIndex((int) 0)
18:29:27.833 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getChildAtIndex((int) 1)
18:29:27.836 [pool-662-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.clonePropsFrom(com.google.javascript.rhino.Node) [instance of com.google.javascript.rhino.Node(id=1225)]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:29:27.838 [pool-663-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.clonePropsFrom(com.google.javascript.rhino.Node) [instance of com.google.javascript.rhino.Node(id=1227)]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:29:27.840 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getBooleanProp((int) 0)
18:29:27.841 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getBooleanProp((int) 1)
18:29:27.841 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getIntProp((int) 0)
18:29:27.842 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getIntProp((int) 1)
18:29:27.843 [pool-670-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getExistingIntProp(int) [0]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:29:27.844 [pool-671-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getExistingIntProp(int) [1]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:29:27.845 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.extractLineno((int) 0)
18:29:27.846 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.extractLineno((int) 1)
18:29:27.846 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.extractCharno((int) 0)
18:29:27.847 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.extractCharno((int) 1)
18:29:27.848 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getAncestor((int) 0)
18:29:27.851 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.hasChild((com.google.javascript.rhino.Node) this)
18:29:27.854 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.hasChild((com.google.javascript.rhino.Node) node2)
18:29:27.857 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getNodeClass((com.google.javascript.rhino.Node) this)
18:29:27.859 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getNodeClass((com.google.javascript.rhino.Node) node2)
18:29:27.863 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.checkTreeEqualsImpl((com.google.javascript.rhino.Node) node2)
18:29:27.867 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.checkTreeTypeAwareEqualsImpl((com.google.javascript.rhino.Node) node2)
18:29:27.869 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isEquivalentTo((com.google.javascript.rhino.Node) this)
18:29:27.871 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isEquivalentTo((com.google.javascript.rhino.Node) node2)
18:29:27.874 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isEquivalentToTyped((com.google.javascript.rhino.Node) this)
18:29:27.876 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isEquivalentToTyped((com.google.javascript.rhino.Node) node2)
18:29:27.876 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getType()
18:29:27.877 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.hasChildren()
18:29:27.878 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getFirstChild()
18:29:27.879 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getLastChild()
18:29:27.880 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getLastSibling()
18:29:27.881 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getSortedPropTypes()
18:29:27.882 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getLineno()
18:29:27.883 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getCharno()
18:29:27.884 [pool-699-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getDouble() []
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:29:27.885 [pool-700-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getString() []
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:29:27.886 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.children()
18:29:27.888 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getAncestors()
18:29:27.889 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.hasOneChild()
18:29:27.890 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.hasMoreThanOneChild()
18:29:27.890 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getChildCount()
18:29:27.891 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.hasSideEffects()
18:29:27.893 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isQualifiedName()
18:29:27.894 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isUnscopedQualifiedName()
18:29:27.895 [pool-711-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.detachFromParent() []
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:29:27.896 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.cloneNode()
18:29:27.897 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.cloneTree()
18:29:27.898 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getJsDocBuilderForNode()
18:29:27.899 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isVarArgs()
18:29:27.900 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isOptionalArg()
18:29:27.901 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isSyntheticBlock()
18:29:27.902 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.wasEmptyNode()
18:29:27.903 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getSideEffectFlags()
18:29:27.904 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isOnlyModifiesThisCall()
18:29:27.904 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isNoSideEffectsCall()
18:29:27.905 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isQuotedString()
18:29:27.907 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.ORIGINALNAME_PROP
18:29:27.907 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.LABEL_PROP
18:29:27.907 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.CATCH_SCOPE_PROP
18:29:27.907 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.CONTINUE_PROP
18:29:27.907 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.IS_CONSTANT_NAME
18:29:27.907 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.IS_DISPATCHER
18:29:27.907 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.LAST_PROP
18:29:27.907 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.NON_SPECIALCALL
18:29:27.907 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.POST_FLAG
18:29:27.907 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.COLUMN_BITS
18:29:27.907 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.FLAG_THIS_UNMODIFIED
18:29:27.907 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.LOCAL_PROP
18:29:27.907 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.USES_PROP
18:29:27.907 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.CASEARRAY_PROP
18:29:27.907 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.VARIABLE_PROP
18:29:27.907 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.SPECIALCALL_PROP
18:29:27.907 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.SKIP_INDEXES_PROP
18:29:27.907 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.PARENTHESIZED_PROP
18:29:27.907 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.EMPTY_BLOCK
18:29:27.907 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.NO_SIDE_EFFECTS
18:29:27.907 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.SPECIAL_PROP_PROP
18:29:27.907 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.OBJECT_IDS_PROP
18:29:27.907 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.BREAK_PROP
18:29:27.907 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.IS_NAMESPACE
18:29:27.907 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.FREE_CALL
18:29:27.907 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.RIGHT
18:29:27.907 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.DECR_FLAG
18:29:27.907 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.DESCENDANTS_FLAG
18:29:27.907 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.FLAG_GLOBAL_STATE_UNMODIFIED
18:29:27.907 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.FLAG_LOCAL_RESULTS
18:29:27.907 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.TEMP_PROP
18:29:27.907 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.VARS_PROP
18:29:27.907 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.DEFAULT_PROP
18:29:27.907 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.TARGETBLOCK_PROP
18:29:27.907 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.DIRECTCALL_PROP
18:29:27.907 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.VAR_ARGS_NAME
18:29:27.907 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.NAME_PROP
18:29:27.907 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.SYNTHETIC_BLOCK_PROP
18:29:27.907 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.SIDE_EFFECT_FLAGS
18:29:27.907 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.SIDE_EFFECTS_FLAGS_MASK
18:29:27.908 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.TYPE_PROP
18:29:27.908 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.LOCAL_BLOCK_PROP
18:29:27.908 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.TARGET_PROP
18:29:27.908 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.IS_VAR_ARGS_PARAM
18:29:27.908 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.DIRECT_EVAL
18:29:27.908 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.LEFT
18:29:27.908 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.SPECIALCALL_WITH
18:29:27.908 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.ATTRIBUTE_FLAG
18:29:27.908 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.COLUMN_MASK
18:29:27.908 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.FLAG_NO_THROWS
18:29:27.908 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.FUNCTION_PROP
18:29:27.908 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.FIXUPS_PROP
18:29:27.908 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.CASES_PROP
18:29:27.908 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.LOCALCOUNT_PROP
18:29:27.908 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.ISNUMBER_PROP
18:29:27.908 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.JSDOC_INFO_PROP
18:29:27.908 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.MEMBER_TYPE_PROP
18:29:27.908 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.OPT_ARG_NAME
18:29:27.908 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.SIDE_EFFECTS_ALL
18:29:27.908 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.BRACELESS_TYPE
18:29:27.908 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.SOURCENAME_PROP
18:29:27.908 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.LABEL_ID_PROP
18:29:27.908 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.IS_OPTIONAL_PARAM
18:29:27.908 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.DIRECTIVES
18:29:27.908 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.BOTH
18:29:27.908 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.SPECIALCALL_EVAL
18:29:27.908 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.PROPERTY_FLAG
18:29:27.908 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.MAX_COLUMN_NUMBER
18:29:27.908 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.FLAG_ARGUMENTS_UNMODIFIED
18:29:27.908 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.ENUM_PROP
18:29:27.908 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.CODEOFFSET_PROP
18:29:27.908 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.REGEXP_PROP
18:29:27.908 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.FINALLY_PROP
18:29:27.908 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.LASTUSE_PROP
18:29:27.908 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.DEBUGSOURCE_PROP
18:29:27.908 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.INCRDECR_PROP
18:29:27.908 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.QUOTED_PROP
18:29:27.925 [pool-726-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getChildBefore(com.google.javascript.rhino.Node) [instance of com.google.javascript.rhino.Node(id=1225)]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:29:27.927 [pool-727-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getChildBefore(com.google.javascript.rhino.Node) [instance of com.google.javascript.rhino.Node(id=1227)]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:29:27.928 [pool-728-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getChildBefore(com.google.javascript.rhino.Node) [instance of com.google.javascript.rhino.Node(id=1229)]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:29:27.930 [pool-729-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getChildBefore(com.google.javascript.rhino.Node) [instance of com.google.javascript.rhino.Node(id=1230)]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:29:27.931 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getChildAtIndex((int) 0)
18:29:27.932 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getChildAtIndex((int) 1)
18:29:27.932 [pool-732-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getChildAtIndex(int) [39]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:29:27.934 [pool-733-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getChildAtIndex(int) [19]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:29:27.934 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getChildAtIndex((int) this.CATCH_SCOPE_PROP)
18:29:27.936 [pool-736-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getChildAtIndex(int) [42]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:29:27.937 [pool-737-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getChildAtIndex(int) [46]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:29:27.939 [pool-738-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.clonePropsFrom(com.google.javascript.rhino.Node) [instance of com.google.javascript.rhino.Node(id=1225)]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:29:27.940 [pool-739-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.clonePropsFrom(com.google.javascript.rhino.Node) [instance of com.google.javascript.rhino.Node(id=1227)]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:29:27.942 [pool-740-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.clonePropsFrom(com.google.javascript.rhino.Node) [instance of com.google.javascript.rhino.Node(id=1229)]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:29:27.943 [pool-741-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.clonePropsFrom(com.google.javascript.rhino.Node) [instance of com.google.javascript.rhino.Node(id=1230)]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:29:27.948 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) 0)
18:29:27.949 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) 1)
18:29:27.950 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.ORIGINALNAME_PROP)
18:29:27.950 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.LABEL_PROP)
18:29:27.951 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.CATCH_SCOPE_PROP)
18:29:27.952 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.CONTINUE_PROP)
18:29:27.953 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.IS_CONSTANT_NAME)
18:29:27.953 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.IS_DISPATCHER)
18:29:27.954 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.LAST_PROP)
18:29:27.955 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.NON_SPECIALCALL)
18:29:27.956 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.POST_FLAG)
18:29:27.957 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.COLUMN_BITS)
18:29:27.958 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.FLAG_THIS_UNMODIFIED)
18:29:27.959 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.LOCAL_PROP)
18:29:27.959 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.USES_PROP)
18:29:27.960 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.CASEARRAY_PROP)
18:29:27.961 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.VARIABLE_PROP)
18:29:27.962 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.SPECIALCALL_PROP)
18:29:27.962 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.SKIP_INDEXES_PROP)
18:29:27.963 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.PARENTHESIZED_PROP)
18:29:27.964 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.EMPTY_BLOCK)
18:29:27.965 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.NO_SIDE_EFFECTS)
18:29:27.965 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.SPECIAL_PROP_PROP)
18:29:27.966 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.OBJECT_IDS_PROP)
18:29:27.967 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.BREAK_PROP)
18:29:27.967 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.IS_NAMESPACE)
18:29:27.968 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.FREE_CALL)
18:29:27.969 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.RIGHT)
18:29:27.969 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.DECR_FLAG)
18:29:27.970 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.DESCENDANTS_FLAG)
18:29:27.971 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.FLAG_GLOBAL_STATE_UNMODIFIED)
18:29:27.971 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.FLAG_LOCAL_RESULTS)
18:29:27.972 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.TEMP_PROP)
18:29:27.973 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.VARS_PROP)
18:29:27.973 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.DEFAULT_PROP)
18:29:27.974 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.TARGETBLOCK_PROP)
18:29:27.975 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.DIRECTCALL_PROP)
18:29:27.975 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.VAR_ARGS_NAME)
18:29:27.976 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.NAME_PROP)
18:29:27.977 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.SYNTHETIC_BLOCK_PROP)
18:29:27.977 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.type)
18:29:27.978 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.SIDE_EFFECT_FLAGS)
18:29:27.979 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.SIDE_EFFECTS_FLAGS_MASK)
18:29:27.979 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.sourcePosition)
18:29:27.980 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.TYPE_PROP)
18:29:27.981 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.LOCAL_BLOCK_PROP)
18:29:27.981 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.TARGET_PROP)
18:29:27.982 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.IS_VAR_ARGS_PARAM)
18:29:27.983 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.DIRECT_EVAL)
18:29:27.983 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.LEFT)
18:29:27.984 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.SPECIALCALL_WITH)
18:29:27.985 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.ATTRIBUTE_FLAG)
18:29:27.985 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.COLUMN_MASK)
18:29:27.986 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.FLAG_NO_THROWS)
18:29:27.987 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.FUNCTION_PROP)
18:29:27.987 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.FIXUPS_PROP)
18:29:27.988 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.CASES_PROP)
18:29:27.989 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.LOCALCOUNT_PROP)
18:29:27.989 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.ISNUMBER_PROP)
18:29:27.990 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.JSDOC_INFO_PROP)
18:29:27.991 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.MEMBER_TYPE_PROP)
18:29:27.992 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.OPT_ARG_NAME)
18:29:27.992 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.SIDE_EFFECTS_ALL)
18:29:27.993 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.BRACELESS_TYPE)
18:29:27.994 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.SOURCENAME_PROP)
18:29:27.995 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.LABEL_ID_PROP)
18:29:27.996 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.IS_OPTIONAL_PARAM)
18:29:27.996 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.DIRECTIVES)
18:29:27.997 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.BOTH)
18:29:27.998 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.SPECIALCALL_EVAL)
18:29:27.999 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.PROPERTY_FLAG)
18:29:27.999 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.MAX_COLUMN_NUMBER)
18:29:28.000 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.FLAG_ARGUMENTS_UNMODIFIED)
18:29:28.001 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.ENUM_PROP)
18:29:28.001 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.CODEOFFSET_PROP)
18:29:28.002 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.REGEXP_PROP)
18:29:28.003 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.FINALLY_PROP)
18:29:28.003 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.LASTUSE_PROP)
18:29:28.004 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.DEBUGSOURCE_PROP)
18:29:28.005 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.INCRDECR_PROP)
18:29:28.005 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.QUOTED_PROP)
18:29:28.006 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) 0)
18:29:28.007 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) 1)
18:29:28.007 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.ORIGINALNAME_PROP)
18:29:28.008 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.LABEL_PROP)
18:29:28.009 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.CATCH_SCOPE_PROP)
18:29:28.010 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.CONTINUE_PROP)
18:29:28.010 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.IS_CONSTANT_NAME)
18:29:28.011 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.IS_DISPATCHER)
18:29:28.012 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.LAST_PROP)
18:29:28.012 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.NON_SPECIALCALL)
18:29:28.013 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.POST_FLAG)
18:29:28.014 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.COLUMN_BITS)
18:29:28.014 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.FLAG_THIS_UNMODIFIED)
18:29:28.015 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.LOCAL_PROP)
18:29:28.015 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.USES_PROP)
18:29:28.016 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.CASEARRAY_PROP)
18:29:28.017 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.VARIABLE_PROP)
18:29:28.018 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.SPECIALCALL_PROP)
18:29:28.018 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.SKIP_INDEXES_PROP)
18:29:28.019 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.PARENTHESIZED_PROP)
18:29:28.020 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.EMPTY_BLOCK)
18:29:28.020 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.NO_SIDE_EFFECTS)
18:29:28.021 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.SPECIAL_PROP_PROP)
18:29:28.022 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.OBJECT_IDS_PROP)
18:29:28.023 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.BREAK_PROP)
18:29:28.023 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.IS_NAMESPACE)
18:29:28.024 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.FREE_CALL)
18:29:28.025 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.RIGHT)
18:29:28.025 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.DECR_FLAG)
18:29:28.026 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.DESCENDANTS_FLAG)
18:29:28.027 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.FLAG_GLOBAL_STATE_UNMODIFIED)
18:29:28.028 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.FLAG_LOCAL_RESULTS)
18:29:28.028 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.TEMP_PROP)
18:29:28.029 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.VARS_PROP)
18:29:28.030 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.DEFAULT_PROP)
18:29:28.030 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.TARGETBLOCK_PROP)
18:29:28.031 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.DIRECTCALL_PROP)
18:29:28.032 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.VAR_ARGS_NAME)
18:29:28.032 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.NAME_PROP)
18:29:28.033 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.SYNTHETIC_BLOCK_PROP)
18:29:28.034 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.type)
18:29:28.035 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.SIDE_EFFECT_FLAGS)
18:29:28.035 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.SIDE_EFFECTS_FLAGS_MASK)
18:29:28.036 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.sourcePosition)
18:29:28.037 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.TYPE_PROP)
18:29:28.037 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.LOCAL_BLOCK_PROP)
18:29:28.038 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.TARGET_PROP)
18:29:28.039 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.IS_VAR_ARGS_PARAM)
18:29:28.039 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.DIRECT_EVAL)
18:29:28.040 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.LEFT)
18:29:28.041 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.SPECIALCALL_WITH)
18:29:28.042 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.ATTRIBUTE_FLAG)
18:29:28.042 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.COLUMN_MASK)
18:29:28.043 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.FLAG_NO_THROWS)
18:29:28.044 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.FUNCTION_PROP)
18:29:28.045 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.FIXUPS_PROP)
18:29:28.045 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.CASES_PROP)
18:29:28.046 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.LOCALCOUNT_PROP)
18:29:28.047 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.ISNUMBER_PROP)
18:29:28.047 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.JSDOC_INFO_PROP)
18:29:28.048 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.MEMBER_TYPE_PROP)
18:29:28.049 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.OPT_ARG_NAME)
18:29:28.050 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.SIDE_EFFECTS_ALL)
18:29:28.050 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.BRACELESS_TYPE)
18:29:28.051 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.SOURCENAME_PROP)
18:29:28.052 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.LABEL_ID_PROP)
18:29:28.053 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.IS_OPTIONAL_PARAM)
18:29:28.054 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.DIRECTIVES)
18:29:28.055 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.BOTH)
18:29:28.055 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.SPECIALCALL_EVAL)
18:29:28.056 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.PROPERTY_FLAG)
18:29:28.057 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.MAX_COLUMN_NUMBER)
18:29:28.058 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.FLAG_ARGUMENTS_UNMODIFIED)
18:29:28.059 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.ENUM_PROP)
18:29:28.059 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.CODEOFFSET_PROP)
18:29:28.060 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.REGEXP_PROP)
18:29:28.061 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.FINALLY_PROP)
18:29:28.062 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.LASTUSE_PROP)
18:29:28.062 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.DEBUGSOURCE_PROP)
18:29:28.063 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.INCRDECR_PROP)
18:29:28.064 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.QUOTED_PROP)
18:29:28.066 [pool-909-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getExistingIntProp(int) [0]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:29:28.067 [pool-910-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getExistingIntProp(int) [1]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:29:28.068 [pool-911-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getExistingIntProp(int) [39]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:29:28.069 [pool-912-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getExistingIntProp(int) [19]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:29:28.070 [pool-913-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getExistingIntProp(int) [-1]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:29:28.071 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getAncestor((int) 0)
18:29:28.072 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getAncestor((int) 1)
18:29:28.074 [pool-918-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getAncestor(int) [-1]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:29:28.079 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.hasChild((com.google.javascript.rhino.Node) this)
18:29:28.080 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.hasChild((com.google.javascript.rhino.Node) node2)
18:29:28.082 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.hasChild((com.google.javascript.rhino.Node) this.first)
18:29:28.084 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.hasChild((com.google.javascript.rhino.Node) this.last)
18:29:28.086 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isEquivalentTo((com.google.javascript.rhino.Node) this)
18:29:28.088 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isEquivalentTo((com.google.javascript.rhino.Node) node2)
18:29:28.089 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isEquivalentTo((com.google.javascript.rhino.Node) this.first)
18:29:28.091 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isEquivalentTo((com.google.javascript.rhino.Node) this.last)
18:29:28.094 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isEquivalentToTyped((com.google.javascript.rhino.Node) this)
18:29:28.096 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isEquivalentToTyped((com.google.javascript.rhino.Node) node2)
18:29:28.097 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isEquivalentToTyped((com.google.javascript.rhino.Node) this.first)
18:29:28.099 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isEquivalentToTyped((com.google.javascript.rhino.Node) this.last)
18:29:28.100 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getType()
18:29:28.101 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.hasChildren()
18:29:28.101 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getFirstChild()
18:29:28.102 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getLastChild()
18:29:28.103 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getLastSibling()
18:29:28.104 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getLineno()
18:29:28.105 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getCharno()
18:29:28.105 [pool-941-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getDouble() []
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:29:28.106 [pool-942-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getString() []
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:29:28.107 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.children()
18:29:28.108 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getParent()
18:29:28.108 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getAncestors()
18:29:28.109 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.hasOneChild()
18:29:28.109 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.hasMoreThanOneChild()
18:29:28.110 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getChildCount()
18:29:28.111 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.hasSideEffects()
18:29:28.112 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isQualifiedName()
18:29:28.113 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isUnscopedQualifiedName()
18:29:28.113 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.detachFromParent()
18:29:28.114 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.cloneNode()
18:29:28.115 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.cloneTree()
18:29:28.116 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getJsDocBuilderForNode()
18:29:28.117 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isVarArgs()
18:29:28.118 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isOptionalArg()
18:29:28.118 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isSyntheticBlock()
18:29:28.119 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.wasEmptyNode()
18:29:28.120 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getSideEffectFlags()
18:29:28.121 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isOnlyModifiesThisCall()
18:29:28.121 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isNoSideEffectsCall()
18:29:28.122 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isQuotedString()
18:29:28.151 [pool-17-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
18:29:28.153 [pool-17-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] com.google.javascript.jscomp.DeadAssignmentsEliminationTest#testInExpression2 iteration 0
18:29:28.153 [pool-17-thread-1] DEBUG f.i.l.r.s.c.SpoonElementsCollector - [data] "Node tree inequality:"="Node tree inequality:"
18:29:28.153 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
18:29:28.153 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of com.google.javascript.rhino.Node(id=1320)
18:29:28.154 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2
18:29:28.154 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] diff
18:29:28.157 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.ORIGINALNAME_PROP
18:29:28.157 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.propListHead
18:29:28.157 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.LABEL_PROP
18:29:28.157 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.CATCH_SCOPE_PROP
18:29:28.157 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.CONTINUE_PROP
18:29:28.157 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.IS_CONSTANT_NAME
18:29:28.157 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.IS_DISPATCHER
18:29:28.157 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.LAST_PROP
18:29:28.157 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.NON_SPECIALCALL
18:29:28.157 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.POST_FLAG
18:29:28.157 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.COLUMN_BITS
18:29:28.157 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.FLAG_THIS_UNMODIFIED
18:29:28.157 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.LOCAL_PROP
18:29:28.157 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.USES_PROP
18:29:28.157 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.CASEARRAY_PROP
18:29:28.157 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.VARIABLE_PROP
18:29:28.157 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.SPECIALCALL_PROP
18:29:28.157 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.SKIP_INDEXES_PROP
18:29:28.157 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.PARENTHESIZED_PROP
18:29:28.157 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.jsType
18:29:28.157 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.EMPTY_BLOCK
18:29:28.157 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.NO_SIDE_EFFECTS
18:29:28.157 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.parent
18:29:28.157 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.SPECIAL_PROP_PROP
18:29:28.158 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.OBJECT_IDS_PROP
18:29:28.158 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.BREAK_PROP
18:29:28.158 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.IS_NAMESPACE
18:29:28.158 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.FREE_CALL
18:29:28.158 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.RIGHT
18:29:28.158 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.DECR_FLAG
18:29:28.158 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.DESCENDANTS_FLAG
18:29:28.158 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.FLAG_GLOBAL_STATE_UNMODIFIED
18:29:28.158 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.FLAG_LOCAL_RESULTS
18:29:28.158 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.TEMP_PROP
18:29:28.158 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.VARS_PROP
18:29:28.158 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.DEFAULT_PROP
18:29:28.158 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.TARGETBLOCK_PROP
18:29:28.158 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.DIRECTCALL_PROP
18:29:28.158 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.VAR_ARGS_NAME
18:29:28.158 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.NAME_PROP
18:29:28.158 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.SYNTHETIC_BLOCK_PROP
18:29:28.158 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.type
18:29:28.158 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.SIDE_EFFECT_FLAGS
18:29:28.158 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.SIDE_EFFECTS_FLAGS_MASK
18:29:28.158 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.sourcePosition
18:29:28.158 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.TYPE_PROP
18:29:28.158 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.LOCAL_BLOCK_PROP
18:29:28.158 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.TARGET_PROP
18:29:28.158 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.IS_VAR_ARGS_PARAM
18:29:28.158 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.DIRECT_EVAL
18:29:28.158 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.LEFT
18:29:28.158 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.SPECIALCALL_WITH
18:29:28.158 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.ATTRIBUTE_FLAG
18:29:28.158 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.COLUMN_MASK
18:29:28.158 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.FLAG_NO_THROWS
18:29:28.158 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.FUNCTION_PROP
18:29:28.158 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.FIXUPS_PROP
18:29:28.158 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.CASES_PROP
18:29:28.158 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.LOCALCOUNT_PROP
18:29:28.158 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.ISNUMBER_PROP
18:29:28.158 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.JSDOC_INFO_PROP
18:29:28.158 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.MEMBER_TYPE_PROP
18:29:28.158 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.OPT_ARG_NAME
18:29:28.158 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.SIDE_EFFECTS_ALL
18:29:28.158 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.next
18:29:28.158 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.BRACELESS_TYPE
18:29:28.158 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.first
18:29:28.158 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.SOURCENAME_PROP
18:29:28.158 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.LABEL_ID_PROP
18:29:28.158 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.IS_OPTIONAL_PARAM
18:29:28.158 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.DIRECTIVES
18:29:28.158 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.BOTH
18:29:28.158 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.SPECIALCALL_EVAL
18:29:28.158 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.PROPERTY_FLAG
18:29:28.158 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.MAX_COLUMN_NUMBER
18:29:28.158 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.FLAG_ARGUMENTS_UNMODIFIED
18:29:28.158 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.ENUM_PROP
18:29:28.158 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.CODEOFFSET_PROP
18:29:28.158 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.REGEXP_PROP
18:29:28.158 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.FINALLY_PROP
18:29:28.158 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.LASTUSE_PROP
18:29:28.158 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.DEBUGSOURCE_PROP
18:29:28.158 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.INCRDECR_PROP
18:29:28.158 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.QUOTED_PROP
18:29:28.158 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.last
18:29:28.163 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.propToString((int) 0)
18:29:28.164 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.propToString((int) 1)
18:29:28.166 [pool-970-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getChildBefore(com.google.javascript.rhino.Node) [instance of com.google.javascript.rhino.Node(id=1320)]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:29:28.168 [pool-971-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getChildBefore(com.google.javascript.rhino.Node) [instance of com.google.javascript.rhino.Node(id=1322)]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:29:28.169 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getChildAtIndex((int) 0)
18:29:28.173 [pool-976-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.clonePropsFrom(com.google.javascript.rhino.Node) [instance of com.google.javascript.rhino.Node(id=1320)]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:29:28.175 [pool-977-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.clonePropsFrom(com.google.javascript.rhino.Node) [instance of com.google.javascript.rhino.Node(id=1322)]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:29:28.177 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getBooleanProp((int) 0)
18:29:28.178 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getBooleanProp((int) 1)
18:29:28.178 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getIntProp((int) 0)
18:29:28.179 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getIntProp((int) 1)
18:29:28.180 [pool-984-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getExistingIntProp(int) [0]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:29:28.181 [pool-985-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getExistingIntProp(int) [1]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:29:28.182 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.extractLineno((int) 0)
18:29:28.183 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.extractLineno((int) 1)
18:29:28.183 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.extractCharno((int) 0)
18:29:28.184 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.extractCharno((int) 1)
18:29:28.184 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getAncestor((int) 0)
18:29:28.188 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.hasChild((com.google.javascript.rhino.Node) this)
18:29:28.189 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.hasChild((com.google.javascript.rhino.Node) node2)
18:29:28.192 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getNodeClass((com.google.javascript.rhino.Node) this)
18:29:28.193 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getNodeClass((com.google.javascript.rhino.Node) node2)
18:29:28.197 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.checkTreeEqualsImpl((com.google.javascript.rhino.Node) node2)
18:29:28.200 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.checkTreeTypeAwareEqualsImpl((com.google.javascript.rhino.Node) node2)
18:29:28.202 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isEquivalentTo((com.google.javascript.rhino.Node) this)
18:29:28.204 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isEquivalentTo((com.google.javascript.rhino.Node) node2)
18:29:28.206 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isEquivalentToTyped((com.google.javascript.rhino.Node) this)
18:29:28.208 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isEquivalentToTyped((com.google.javascript.rhino.Node) node2)
18:29:28.209 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getType()
18:29:28.210 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.hasChildren()
18:29:28.210 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getFirstChild()
18:29:28.211 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getLastChild()
18:29:28.212 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getLastSibling()
18:29:28.213 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getSortedPropTypes()
18:29:28.213 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getLineno()
18:29:28.214 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getCharno()
18:29:28.215 [pool-1013-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getDouble() []
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:29:28.216 [pool-1014-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getString() []
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:29:28.216 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.children()
18:29:28.218 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getAncestors()
18:29:28.218 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.hasOneChild()
18:29:28.219 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.hasMoreThanOneChild()
18:29:28.220 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getChildCount()
18:29:28.220 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.hasSideEffects()
18:29:28.222 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isQualifiedName()
18:29:28.222 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isUnscopedQualifiedName()
18:29:28.223 [pool-1025-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.detachFromParent() []
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:29:28.224 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.cloneNode()
18:29:28.224 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.cloneTree()
18:29:28.226 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getJsDocBuilderForNode()
18:29:28.227 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isVarArgs()
18:29:28.227 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isOptionalArg()
18:29:28.228 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isSyntheticBlock()
18:29:28.229 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.wasEmptyNode()
18:29:28.230 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getSideEffectFlags()
18:29:28.231 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isOnlyModifiesThisCall()
18:29:28.231 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isNoSideEffectsCall()
18:29:28.232 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isQuotedString()
18:29:28.234 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.ORIGINALNAME_PROP
18:29:28.234 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.LABEL_PROP
18:29:28.234 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.CATCH_SCOPE_PROP
18:29:28.234 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.CONTINUE_PROP
18:29:28.234 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.IS_CONSTANT_NAME
18:29:28.234 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.IS_DISPATCHER
18:29:28.234 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.LAST_PROP
18:29:28.234 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.NON_SPECIALCALL
18:29:28.234 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.POST_FLAG
18:29:28.234 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.COLUMN_BITS
18:29:28.234 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.FLAG_THIS_UNMODIFIED
18:29:28.234 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.LOCAL_PROP
18:29:28.234 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.USES_PROP
18:29:28.234 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.CASEARRAY_PROP
18:29:28.234 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.VARIABLE_PROP
18:29:28.234 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.SPECIALCALL_PROP
18:29:28.234 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.SKIP_INDEXES_PROP
18:29:28.234 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.PARENTHESIZED_PROP
18:29:28.234 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.EMPTY_BLOCK
18:29:28.234 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.NO_SIDE_EFFECTS
18:29:28.234 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.SPECIAL_PROP_PROP
18:29:28.234 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.OBJECT_IDS_PROP
18:29:28.234 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.BREAK_PROP
18:29:28.234 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.IS_NAMESPACE
18:29:28.234 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.FREE_CALL
18:29:28.234 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.RIGHT
18:29:28.234 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.DECR_FLAG
18:29:28.234 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.DESCENDANTS_FLAG
18:29:28.234 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.FLAG_GLOBAL_STATE_UNMODIFIED
18:29:28.234 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.FLAG_LOCAL_RESULTS
18:29:28.234 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.TEMP_PROP
18:29:28.234 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.VARS_PROP
18:29:28.235 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.DEFAULT_PROP
18:29:28.235 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.TARGETBLOCK_PROP
18:29:28.235 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.DIRECTCALL_PROP
18:29:28.235 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.VAR_ARGS_NAME
18:29:28.235 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.NAME_PROP
18:29:28.235 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.SYNTHETIC_BLOCK_PROP
18:29:28.235 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.SIDE_EFFECT_FLAGS
18:29:28.235 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.SIDE_EFFECTS_FLAGS_MASK
18:29:28.235 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.TYPE_PROP
18:29:28.235 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.LOCAL_BLOCK_PROP
18:29:28.235 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.TARGET_PROP
18:29:28.235 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.IS_VAR_ARGS_PARAM
18:29:28.235 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.DIRECT_EVAL
18:29:28.235 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.LEFT
18:29:28.235 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.SPECIALCALL_WITH
18:29:28.235 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.ATTRIBUTE_FLAG
18:29:28.235 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.COLUMN_MASK
18:29:28.235 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.FLAG_NO_THROWS
18:29:28.235 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.FUNCTION_PROP
18:29:28.235 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.FIXUPS_PROP
18:29:28.235 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.CASES_PROP
18:29:28.235 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.LOCALCOUNT_PROP
18:29:28.235 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.ISNUMBER_PROP
18:29:28.235 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.JSDOC_INFO_PROP
18:29:28.235 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.MEMBER_TYPE_PROP
18:29:28.235 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.OPT_ARG_NAME
18:29:28.235 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.SIDE_EFFECTS_ALL
18:29:28.235 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.BRACELESS_TYPE
18:29:28.235 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.SOURCENAME_PROP
18:29:28.235 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.LABEL_ID_PROP
18:29:28.235 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.IS_OPTIONAL_PARAM
18:29:28.235 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.DIRECTIVES
18:29:28.235 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.BOTH
18:29:28.235 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.SPECIALCALL_EVAL
18:29:28.235 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.PROPERTY_FLAG
18:29:28.235 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.MAX_COLUMN_NUMBER
18:29:28.235 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.FLAG_ARGUMENTS_UNMODIFIED
18:29:28.235 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.ENUM_PROP
18:29:28.235 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.CODEOFFSET_PROP
18:29:28.235 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.REGEXP_PROP
18:29:28.235 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.FINALLY_PROP
18:29:28.235 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.LASTUSE_PROP
18:29:28.235 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.DEBUGSOURCE_PROP
18:29:28.235 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.INCRDECR_PROP
18:29:28.235 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.QUOTED_PROP
18:29:28.243 [pool-1040-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getChildBefore(com.google.javascript.rhino.Node) [instance of com.google.javascript.rhino.Node(id=1320)]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:29:28.245 [pool-1041-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getChildBefore(com.google.javascript.rhino.Node) [instance of com.google.javascript.rhino.Node(id=1322)]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:29:28.246 [pool-1042-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getChildBefore(com.google.javascript.rhino.Node) [instance of com.google.javascript.rhino.Node(id=1324)]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:29:28.248 [pool-1043-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getChildBefore(com.google.javascript.rhino.Node) [instance of com.google.javascript.rhino.Node(id=1324)]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:29:28.249 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getChildAtIndex((int) 0)
18:29:28.251 [pool-1046-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getChildAtIndex(int) [39]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:29:28.252 [pool-1047-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getChildAtIndex(int) [19]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:29:28.252 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getChildAtIndex((int) this.CATCH_SCOPE_PROP)
18:29:28.254 [pool-1049-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getChildAtIndex(int) [3]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:29:28.255 [pool-1050-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getChildAtIndex(int) [42]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:29:28.257 [pool-1051-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.clonePropsFrom(com.google.javascript.rhino.Node) [instance of com.google.javascript.rhino.Node(id=1320)]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:29:28.258 [pool-1052-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.clonePropsFrom(com.google.javascript.rhino.Node) [instance of com.google.javascript.rhino.Node(id=1322)]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:29:28.260 [pool-1053-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.clonePropsFrom(com.google.javascript.rhino.Node) [instance of com.google.javascript.rhino.Node(id=1324)]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:29:28.261 [pool-1054-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.clonePropsFrom(com.google.javascript.rhino.Node) [instance of com.google.javascript.rhino.Node(id=1324)]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:29:28.266 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) 0)
18:29:28.267 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) 1)
18:29:28.268 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.ORIGINALNAME_PROP)
18:29:28.268 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.LABEL_PROP)
18:29:28.269 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.CATCH_SCOPE_PROP)
18:29:28.270 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.CONTINUE_PROP)
18:29:28.271 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.IS_CONSTANT_NAME)
18:29:28.271 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.IS_DISPATCHER)
18:29:28.272 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.LAST_PROP)
18:29:28.273 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.NON_SPECIALCALL)
18:29:28.274 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.POST_FLAG)
18:29:28.274 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.COLUMN_BITS)
18:29:28.275 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.FLAG_THIS_UNMODIFIED)
18:29:28.276 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.LOCAL_PROP)
18:29:28.277 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.USES_PROP)
18:29:28.290 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.CASEARRAY_PROP)
18:29:28.291 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.VARIABLE_PROP)
18:29:28.292 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.SPECIALCALL_PROP)
18:29:28.293 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.SKIP_INDEXES_PROP)
18:29:28.294 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.PARENTHESIZED_PROP)
18:29:28.294 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.EMPTY_BLOCK)
18:29:28.295 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.NO_SIDE_EFFECTS)
18:29:28.295 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.SPECIAL_PROP_PROP)
18:29:28.296 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.OBJECT_IDS_PROP)
18:29:28.297 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.BREAK_PROP)
18:29:28.298 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.IS_NAMESPACE)
18:29:28.298 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.FREE_CALL)
18:29:28.299 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.RIGHT)
18:29:28.299 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.DECR_FLAG)
18:29:28.300 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.DESCENDANTS_FLAG)
18:29:28.301 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.FLAG_GLOBAL_STATE_UNMODIFIED)
18:29:28.301 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.FLAG_LOCAL_RESULTS)
18:29:28.302 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.TEMP_PROP)
18:29:28.302 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.VARS_PROP)
18:29:28.303 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.DEFAULT_PROP)
18:29:28.304 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.TARGETBLOCK_PROP)
18:29:28.304 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.DIRECTCALL_PROP)
18:29:28.305 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.VAR_ARGS_NAME)
18:29:28.306 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.NAME_PROP)
18:29:28.307 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.SYNTHETIC_BLOCK_PROP)
18:29:28.308 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.type)
18:29:28.309 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.SIDE_EFFECT_FLAGS)
18:29:28.310 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.SIDE_EFFECTS_FLAGS_MASK)
18:29:28.310 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.sourcePosition)
18:29:28.311 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.TYPE_PROP)
18:29:28.311 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.LOCAL_BLOCK_PROP)
18:29:28.312 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.TARGET_PROP)
18:29:28.313 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.IS_VAR_ARGS_PARAM)
18:29:28.314 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.DIRECT_EVAL)
18:29:28.315 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.LEFT)
18:29:28.315 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.SPECIALCALL_WITH)
18:29:28.316 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.ATTRIBUTE_FLAG)
18:29:28.317 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.COLUMN_MASK)
18:29:28.317 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.FLAG_NO_THROWS)
18:29:28.318 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.FUNCTION_PROP)
18:29:28.319 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.FIXUPS_PROP)
18:29:28.319 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.CASES_PROP)
18:29:28.320 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.LOCALCOUNT_PROP)
18:29:28.321 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.ISNUMBER_PROP)
18:29:28.322 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.JSDOC_INFO_PROP)
18:29:28.323 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.MEMBER_TYPE_PROP)
18:29:28.324 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.OPT_ARG_NAME)
18:29:28.324 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.SIDE_EFFECTS_ALL)
18:29:28.325 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.BRACELESS_TYPE)
18:29:28.326 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.SOURCENAME_PROP)
18:29:28.326 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.LABEL_ID_PROP)
18:29:28.327 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.IS_OPTIONAL_PARAM)
18:29:28.328 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.DIRECTIVES)
18:29:28.329 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.BOTH)
18:29:28.330 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.SPECIALCALL_EVAL)
18:29:28.331 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.PROPERTY_FLAG)
18:29:28.332 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.MAX_COLUMN_NUMBER)
18:29:28.332 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.FLAG_ARGUMENTS_UNMODIFIED)
18:29:28.333 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.ENUM_PROP)
18:29:28.334 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.CODEOFFSET_PROP)
18:29:28.335 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.REGEXP_PROP)
18:29:28.335 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.FINALLY_PROP)
18:29:28.336 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.LASTUSE_PROP)
18:29:28.337 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.DEBUGSOURCE_PROP)
18:29:28.338 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.INCRDECR_PROP)
18:29:28.338 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.QUOTED_PROP)
18:29:28.340 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) 0)
18:29:28.340 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) 1)
18:29:28.341 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.ORIGINALNAME_PROP)
18:29:28.342 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.LABEL_PROP)
18:29:28.343 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.CATCH_SCOPE_PROP)
18:29:28.343 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.CONTINUE_PROP)
18:29:28.344 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.IS_CONSTANT_NAME)
18:29:28.345 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.IS_DISPATCHER)
18:29:28.346 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.LAST_PROP)
18:29:28.346 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.NON_SPECIALCALL)
18:29:28.347 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.POST_FLAG)
18:29:28.347 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.COLUMN_BITS)
18:29:28.348 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.FLAG_THIS_UNMODIFIED)
18:29:28.349 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.LOCAL_PROP)
18:29:28.349 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.USES_PROP)
18:29:28.350 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.CASEARRAY_PROP)
18:29:28.351 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.VARIABLE_PROP)
18:29:28.352 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.SPECIALCALL_PROP)
18:29:28.352 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.SKIP_INDEXES_PROP)
18:29:28.353 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.PARENTHESIZED_PROP)
18:29:28.354 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.EMPTY_BLOCK)
18:29:28.355 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.NO_SIDE_EFFECTS)
18:29:28.356 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.SPECIAL_PROP_PROP)
18:29:28.356 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.OBJECT_IDS_PROP)
18:29:28.357 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.BREAK_PROP)
18:29:28.358 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.IS_NAMESPACE)
18:29:28.359 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.FREE_CALL)
18:29:28.360 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.RIGHT)
18:29:28.361 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.DECR_FLAG)
18:29:28.362 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.DESCENDANTS_FLAG)
18:29:28.363 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.FLAG_GLOBAL_STATE_UNMODIFIED)
18:29:28.363 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.FLAG_LOCAL_RESULTS)
18:29:28.364 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.TEMP_PROP)
18:29:28.365 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.VARS_PROP)
18:29:28.365 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.DEFAULT_PROP)
18:29:28.366 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.TARGETBLOCK_PROP)
18:29:28.367 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.DIRECTCALL_PROP)
18:29:28.367 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.VAR_ARGS_NAME)
18:29:28.368 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.NAME_PROP)
18:29:28.369 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.SYNTHETIC_BLOCK_PROP)
18:29:28.370 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.type)
18:29:28.370 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.SIDE_EFFECT_FLAGS)
18:29:28.371 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.SIDE_EFFECTS_FLAGS_MASK)
18:29:28.372 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.sourcePosition)
18:29:28.373 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.TYPE_PROP)
18:29:28.373 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.LOCAL_BLOCK_PROP)
18:29:28.374 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.TARGET_PROP)
18:29:28.374 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.IS_VAR_ARGS_PARAM)
18:29:28.375 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.DIRECT_EVAL)
18:29:28.376 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.LEFT)
18:29:28.377 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.SPECIALCALL_WITH)
18:29:28.377 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.ATTRIBUTE_FLAG)
18:29:28.378 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.COLUMN_MASK)
18:29:28.379 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.FLAG_NO_THROWS)
18:29:28.380 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.FUNCTION_PROP)
18:29:28.380 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.FIXUPS_PROP)
18:29:28.381 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.CASES_PROP)
18:29:28.382 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.LOCALCOUNT_PROP)
18:29:28.382 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.ISNUMBER_PROP)
18:29:28.383 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.JSDOC_INFO_PROP)
18:29:28.384 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.MEMBER_TYPE_PROP)
18:29:28.385 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.OPT_ARG_NAME)
18:29:28.385 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.SIDE_EFFECTS_ALL)
18:29:28.386 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.BRACELESS_TYPE)
18:29:28.387 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.SOURCENAME_PROP)
18:29:28.387 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.LABEL_ID_PROP)
18:29:28.388 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.IS_OPTIONAL_PARAM)
18:29:28.389 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.DIRECTIVES)
18:29:28.390 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.BOTH)
18:29:28.391 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.SPECIALCALL_EVAL)
18:29:28.391 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.PROPERTY_FLAG)
18:29:28.392 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.MAX_COLUMN_NUMBER)
18:29:28.393 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.FLAG_ARGUMENTS_UNMODIFIED)
18:29:28.394 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.ENUM_PROP)
18:29:28.395 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.CODEOFFSET_PROP)
18:29:28.396 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.REGEXP_PROP)
18:29:28.396 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.FINALLY_PROP)
18:29:28.397 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.LASTUSE_PROP)
18:29:28.398 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.DEBUGSOURCE_PROP)
18:29:28.399 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.INCRDECR_PROP)
18:29:28.399 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.QUOTED_PROP)
18:29:28.401 [pool-1222-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getExistingIntProp(int) [0]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:29:28.402 [pool-1223-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getExistingIntProp(int) [1]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:29:28.403 [pool-1224-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getExistingIntProp(int) [39]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:29:28.404 [pool-1225-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getExistingIntProp(int) [19]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:29:28.406 [pool-1226-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getExistingIntProp(int) [-1]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:29:28.407 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getAncestor((int) 0)
18:29:28.407 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getAncestor((int) 1)
18:29:28.410 [pool-1231-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getAncestor(int) [-1]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:29:28.414 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.hasChild((com.google.javascript.rhino.Node) this)
18:29:28.415 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.hasChild((com.google.javascript.rhino.Node) node2)
18:29:28.417 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.hasChild((com.google.javascript.rhino.Node) this.first)
18:29:28.419 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.hasChild((com.google.javascript.rhino.Node) this.last)
18:29:28.421 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isEquivalentTo((com.google.javascript.rhino.Node) this)
18:29:28.423 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isEquivalentTo((com.google.javascript.rhino.Node) node2)
18:29:28.424 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isEquivalentTo((com.google.javascript.rhino.Node) this.first)
18:29:28.426 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isEquivalentTo((com.google.javascript.rhino.Node) this.last)
18:29:28.428 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isEquivalentToTyped((com.google.javascript.rhino.Node) this)
18:29:28.430 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isEquivalentToTyped((com.google.javascript.rhino.Node) node2)
18:29:28.431 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isEquivalentToTyped((com.google.javascript.rhino.Node) this.first)
18:29:28.433 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isEquivalentToTyped((com.google.javascript.rhino.Node) this.last)
18:29:28.434 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getType()
18:29:28.434 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.hasChildren()
18:29:28.435 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getFirstChild()
18:29:28.435 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getLastChild()
18:29:28.437 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getLastSibling()
18:29:28.437 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getLineno()
18:29:28.438 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getCharno()
18:29:28.439 [pool-1254-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getDouble() []
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:29:28.440 [pool-1255-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getString() []
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:29:28.441 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.children()
18:29:28.441 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getParent()
18:29:28.442 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getAncestors()
18:29:28.443 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.hasOneChild()
18:29:28.443 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.hasMoreThanOneChild()
18:29:28.444 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getChildCount()
18:29:28.445 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.hasSideEffects()
18:29:28.446 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isQualifiedName()
18:29:28.447 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isUnscopedQualifiedName()
18:29:28.448 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.detachFromParent()
18:29:28.448 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.cloneNode()
18:29:28.449 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.cloneTree()
18:29:28.450 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getJsDocBuilderForNode()
18:29:28.451 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isVarArgs()
18:29:28.452 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isOptionalArg()
18:29:28.452 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isSyntheticBlock()
18:29:28.453 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.wasEmptyNode()
18:29:28.454 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getSideEffectFlags()
18:29:28.455 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isOnlyModifiesThisCall()
18:29:28.455 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isNoSideEffectsCall()
18:29:28.456 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isQuotedString()
18:29:28.469 [pool-17-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
18:29:28.471 [pool-17-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] com.google.javascript.jscomp.DeadAssignmentsEliminationTest#testIssue384d iteration 0
18:29:28.471 [pool-17-thread-1] DEBUG f.i.l.r.s.c.SpoonElementsCollector - [data] "Node tree inequality:"="Node tree inequality:"
18:29:28.471 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
18:29:28.471 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of com.google.javascript.rhino.Node(id=1377)
18:29:28.471 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2
18:29:28.471 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] diff
18:29:28.474 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.ORIGINALNAME_PROP
18:29:28.474 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.propListHead
18:29:28.474 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.LABEL_PROP
18:29:28.474 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.CATCH_SCOPE_PROP
18:29:28.474 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.CONTINUE_PROP
18:29:28.474 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.IS_CONSTANT_NAME
18:29:28.474 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.IS_DISPATCHER
18:29:28.474 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.LAST_PROP
18:29:28.474 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.NON_SPECIALCALL
18:29:28.474 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.POST_FLAG
18:29:28.475 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.COLUMN_BITS
18:29:28.475 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.FLAG_THIS_UNMODIFIED
18:29:28.475 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.LOCAL_PROP
18:29:28.475 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.USES_PROP
18:29:28.475 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.CASEARRAY_PROP
18:29:28.475 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.VARIABLE_PROP
18:29:28.475 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.SPECIALCALL_PROP
18:29:28.475 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.SKIP_INDEXES_PROP
18:29:28.475 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.PARENTHESIZED_PROP
18:29:28.475 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.jsType
18:29:28.475 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.EMPTY_BLOCK
18:29:28.475 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.NO_SIDE_EFFECTS
18:29:28.475 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.parent
18:29:28.475 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.SPECIAL_PROP_PROP
18:29:28.475 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.OBJECT_IDS_PROP
18:29:28.475 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.BREAK_PROP
18:29:28.475 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.IS_NAMESPACE
18:29:28.475 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.FREE_CALL
18:29:28.475 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.RIGHT
18:29:28.475 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.DECR_FLAG
18:29:28.475 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.DESCENDANTS_FLAG
18:29:28.475 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.FLAG_GLOBAL_STATE_UNMODIFIED
18:29:28.475 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.FLAG_LOCAL_RESULTS
18:29:28.475 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.TEMP_PROP
18:29:28.475 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.VARS_PROP
18:29:28.475 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.DEFAULT_PROP
18:29:28.475 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.TARGETBLOCK_PROP
18:29:28.475 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.DIRECTCALL_PROP
18:29:28.475 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.VAR_ARGS_NAME
18:29:28.475 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.NAME_PROP
18:29:28.475 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.SYNTHETIC_BLOCK_PROP
18:29:28.475 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.type
18:29:28.475 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.SIDE_EFFECT_FLAGS
18:29:28.475 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.SIDE_EFFECTS_FLAGS_MASK
18:29:28.475 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.sourcePosition
18:29:28.475 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.TYPE_PROP
18:29:28.475 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.LOCAL_BLOCK_PROP
18:29:28.475 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.TARGET_PROP
18:29:28.475 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.IS_VAR_ARGS_PARAM
18:29:28.475 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.DIRECT_EVAL
18:29:28.475 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.LEFT
18:29:28.475 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.SPECIALCALL_WITH
18:29:28.475 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.ATTRIBUTE_FLAG
18:29:28.475 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.COLUMN_MASK
18:29:28.475 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.FLAG_NO_THROWS
18:29:28.475 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.FUNCTION_PROP
18:29:28.475 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.FIXUPS_PROP
18:29:28.475 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.CASES_PROP
18:29:28.475 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.LOCALCOUNT_PROP
18:29:28.475 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.ISNUMBER_PROP
18:29:28.475 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.JSDOC_INFO_PROP
18:29:28.475 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.MEMBER_TYPE_PROP
18:29:28.475 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.OPT_ARG_NAME
18:29:28.475 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.SIDE_EFFECTS_ALL
18:29:28.475 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.next
18:29:28.475 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.BRACELESS_TYPE
18:29:28.475 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.first
18:29:28.475 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.SOURCENAME_PROP
18:29:28.475 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.LABEL_ID_PROP
18:29:28.475 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.IS_OPTIONAL_PARAM
18:29:28.475 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.DIRECTIVES
18:29:28.475 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.BOTH
18:29:28.475 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.SPECIALCALL_EVAL
18:29:28.475 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.PROPERTY_FLAG
18:29:28.475 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.MAX_COLUMN_NUMBER
18:29:28.475 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.FLAG_ARGUMENTS_UNMODIFIED
18:29:28.475 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.ENUM_PROP
18:29:28.475 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.CODEOFFSET_PROP
18:29:28.475 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.REGEXP_PROP
18:29:28.475 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.FINALLY_PROP
18:29:28.475 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.LASTUSE_PROP
18:29:28.476 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.DEBUGSOURCE_PROP
18:29:28.476 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.INCRDECR_PROP
18:29:28.476 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.QUOTED_PROP
18:29:28.476 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.last
18:29:28.480 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.propToString((int) 0)
18:29:28.481 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.propToString((int) 1)
18:29:28.483 [pool-1283-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getChildBefore(com.google.javascript.rhino.Node) [instance of com.google.javascript.rhino.Node(id=1377)]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:29:28.485 [pool-1284-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getChildBefore(com.google.javascript.rhino.Node) [instance of com.google.javascript.rhino.Node(id=1379)]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:29:28.486 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getChildAtIndex((int) 0)
18:29:28.490 [pool-1289-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.clonePropsFrom(com.google.javascript.rhino.Node) [instance of com.google.javascript.rhino.Node(id=1377)]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:29:28.492 [pool-1290-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.clonePropsFrom(com.google.javascript.rhino.Node) [instance of com.google.javascript.rhino.Node(id=1379)]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:29:28.494 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getBooleanProp((int) 0)
18:29:28.495 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getBooleanProp((int) 1)
18:29:28.495 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getIntProp((int) 0)
18:29:28.496 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getIntProp((int) 1)
18:29:28.497 [pool-1297-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getExistingIntProp(int) [0]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:29:28.498 [pool-1298-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getExistingIntProp(int) [1]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:29:28.499 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.extractLineno((int) 0)
18:29:28.500 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.extractLineno((int) 1)
18:29:28.500 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.extractCharno((int) 0)
18:29:28.501 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.extractCharno((int) 1)
18:29:28.502 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getAncestor((int) 0)
18:29:28.505 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.hasChild((com.google.javascript.rhino.Node) this)
18:29:28.507 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.hasChild((com.google.javascript.rhino.Node) node2)
18:29:28.509 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getNodeClass((com.google.javascript.rhino.Node) this)
18:29:28.511 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getNodeClass((com.google.javascript.rhino.Node) node2)
18:29:28.514 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.checkTreeEqualsImpl((com.google.javascript.rhino.Node) node2)
18:29:28.518 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.checkTreeTypeAwareEqualsImpl((com.google.javascript.rhino.Node) node2)
18:29:28.520 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isEquivalentTo((com.google.javascript.rhino.Node) this)
18:29:28.522 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isEquivalentTo((com.google.javascript.rhino.Node) node2)
18:29:28.525 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isEquivalentToTyped((com.google.javascript.rhino.Node) this)
18:29:28.527 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isEquivalentToTyped((com.google.javascript.rhino.Node) node2)
18:29:28.527 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getType()
18:29:28.528 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.hasChildren()
18:29:28.529 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getFirstChild()
18:29:28.529 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getLastChild()
18:29:28.531 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getLastSibling()
18:29:28.532 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getSortedPropTypes()
18:29:28.533 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getLineno()
18:29:28.533 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getCharno()
18:29:28.534 [pool-1326-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getDouble() []
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:29:28.535 [pool-1327-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getString() []
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:29:28.536 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.children()
18:29:28.537 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getAncestors()
18:29:28.538 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.hasOneChild()
18:29:28.539 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.hasMoreThanOneChild()
18:29:28.540 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getChildCount()
18:29:28.540 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.hasSideEffects()
18:29:28.541 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isQualifiedName()
18:29:28.542 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isUnscopedQualifiedName()
18:29:28.543 [pool-1338-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.detachFromParent() []
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:29:28.544 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.cloneNode()
18:29:28.545 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.cloneTree()
18:29:28.546 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getJsDocBuilderForNode()
18:29:28.548 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isVarArgs()
18:29:28.549 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isOptionalArg()
18:29:28.549 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isSyntheticBlock()
18:29:28.551 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.wasEmptyNode()
18:29:28.552 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getSideEffectFlags()
18:29:28.552 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isOnlyModifiesThisCall()
18:29:28.553 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isNoSideEffectsCall()
18:29:28.554 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isQuotedString()
18:29:28.556 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.ORIGINALNAME_PROP
18:29:28.556 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.LABEL_PROP
18:29:28.556 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.CATCH_SCOPE_PROP
18:29:28.556 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.CONTINUE_PROP
18:29:28.556 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.IS_CONSTANT_NAME
18:29:28.556 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.IS_DISPATCHER
18:29:28.556 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.LAST_PROP
18:29:28.556 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.NON_SPECIALCALL
18:29:28.556 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.POST_FLAG
18:29:28.556 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.COLUMN_BITS
18:29:28.556 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.FLAG_THIS_UNMODIFIED
18:29:28.556 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.LOCAL_PROP
18:29:28.556 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.USES_PROP
18:29:28.556 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.CASEARRAY_PROP
18:29:28.556 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.VARIABLE_PROP
18:29:28.556 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.SPECIALCALL_PROP
18:29:28.556 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.SKIP_INDEXES_PROP
18:29:28.556 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.PARENTHESIZED_PROP
18:29:28.556 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.EMPTY_BLOCK
18:29:28.556 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.NO_SIDE_EFFECTS
18:29:28.556 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.SPECIAL_PROP_PROP
18:29:28.556 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.OBJECT_IDS_PROP
18:29:28.556 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.BREAK_PROP
18:29:28.556 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.IS_NAMESPACE
18:29:28.556 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.FREE_CALL
18:29:28.556 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.RIGHT
18:29:28.556 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.DECR_FLAG
18:29:28.556 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.DESCENDANTS_FLAG
18:29:28.556 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.FLAG_GLOBAL_STATE_UNMODIFIED
18:29:28.556 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.FLAG_LOCAL_RESULTS
18:29:28.556 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.TEMP_PROP
18:29:28.556 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.VARS_PROP
18:29:28.556 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.DEFAULT_PROP
18:29:28.556 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.TARGETBLOCK_PROP
18:29:28.556 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.DIRECTCALL_PROP
18:29:28.556 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.VAR_ARGS_NAME
18:29:28.556 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.NAME_PROP
18:29:28.556 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.SYNTHETIC_BLOCK_PROP
18:29:28.556 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.SIDE_EFFECT_FLAGS
18:29:28.556 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.SIDE_EFFECTS_FLAGS_MASK
18:29:28.556 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.TYPE_PROP
18:29:28.556 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.LOCAL_BLOCK_PROP
18:29:28.556 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.TARGET_PROP
18:29:28.556 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.IS_VAR_ARGS_PARAM
18:29:28.556 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.DIRECT_EVAL
18:29:28.556 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.LEFT
18:29:28.556 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.SPECIALCALL_WITH
18:29:28.556 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.ATTRIBUTE_FLAG
18:29:28.556 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.COLUMN_MASK
18:29:28.556 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.FLAG_NO_THROWS
18:29:28.556 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.FUNCTION_PROP
18:29:28.556 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.FIXUPS_PROP
18:29:28.556 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.CASES_PROP
18:29:28.556 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.LOCALCOUNT_PROP
18:29:28.556 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.ISNUMBER_PROP
18:29:28.556 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.JSDOC_INFO_PROP
18:29:28.556 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.MEMBER_TYPE_PROP
18:29:28.556 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.OPT_ARG_NAME
18:29:28.556 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.SIDE_EFFECTS_ALL
18:29:28.556 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.BRACELESS_TYPE
18:29:28.556 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.SOURCENAME_PROP
18:29:28.556 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.LABEL_ID_PROP
18:29:28.556 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.IS_OPTIONAL_PARAM
18:29:28.556 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.DIRECTIVES
18:29:28.556 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.BOTH
18:29:28.556 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.SPECIALCALL_EVAL
18:29:28.557 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.PROPERTY_FLAG
18:29:28.557 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.MAX_COLUMN_NUMBER
18:29:28.557 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.FLAG_ARGUMENTS_UNMODIFIED
18:29:28.557 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.ENUM_PROP
18:29:28.557 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.CODEOFFSET_PROP
18:29:28.557 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.REGEXP_PROP
18:29:28.557 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.FINALLY_PROP
18:29:28.557 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.LASTUSE_PROP
18:29:28.557 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.DEBUGSOURCE_PROP
18:29:28.557 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.INCRDECR_PROP
18:29:28.557 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.QUOTED_PROP
18:29:28.565 [pool-1353-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getChildBefore(com.google.javascript.rhino.Node) [instance of com.google.javascript.rhino.Node(id=1377)]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:29:28.566 [pool-1354-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getChildBefore(com.google.javascript.rhino.Node) [instance of com.google.javascript.rhino.Node(id=1379)]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:29:28.567 [pool-1355-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getChildBefore(com.google.javascript.rhino.Node) [instance of com.google.javascript.rhino.Node(id=1381)]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:29:28.569 [pool-1356-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getChildBefore(com.google.javascript.rhino.Node) [instance of com.google.javascript.rhino.Node(id=1381)]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:29:28.570 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getChildAtIndex((int) 0)
18:29:28.571 [pool-1359-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getChildAtIndex(int) [39]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:29:28.573 [pool-1360-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getChildAtIndex(int) [19]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:29:28.573 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getChildAtIndex((int) this.CATCH_SCOPE_PROP)
18:29:28.574 [pool-1362-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getChildAtIndex(int) [3]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:29:28.575 [pool-1363-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getChildAtIndex(int) [42]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:29:28.577 [pool-1364-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.clonePropsFrom(com.google.javascript.rhino.Node) [instance of com.google.javascript.rhino.Node(id=1377)]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:29:28.578 [pool-1365-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.clonePropsFrom(com.google.javascript.rhino.Node) [instance of com.google.javascript.rhino.Node(id=1379)]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:29:28.580 [pool-1366-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.clonePropsFrom(com.google.javascript.rhino.Node) [instance of com.google.javascript.rhino.Node(id=1381)]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:29:28.582 [pool-1367-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.clonePropsFrom(com.google.javascript.rhino.Node) [instance of com.google.javascript.rhino.Node(id=1381)]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:29:28.586 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) 0)
18:29:28.587 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) 1)
18:29:28.588 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.ORIGINALNAME_PROP)
18:29:28.588 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.LABEL_PROP)
18:29:28.589 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.CATCH_SCOPE_PROP)
18:29:28.590 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.CONTINUE_PROP)
18:29:28.590 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.IS_CONSTANT_NAME)
18:29:28.591 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.IS_DISPATCHER)
18:29:28.592 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.LAST_PROP)
18:29:28.592 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.NON_SPECIALCALL)
18:29:28.593 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.POST_FLAG)
18:29:28.593 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.COLUMN_BITS)
18:29:28.594 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.FLAG_THIS_UNMODIFIED)
18:29:28.595 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.LOCAL_PROP)
18:29:28.595 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.USES_PROP)
18:29:28.596 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.CASEARRAY_PROP)
18:29:28.596 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.VARIABLE_PROP)
18:29:28.597 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.SPECIALCALL_PROP)
18:29:28.598 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.SKIP_INDEXES_PROP)
18:29:28.598 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.PARENTHESIZED_PROP)
18:29:28.599 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.EMPTY_BLOCK)
18:29:28.599 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.NO_SIDE_EFFECTS)
18:29:28.600 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.SPECIAL_PROP_PROP)
18:29:28.601 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.OBJECT_IDS_PROP)
18:29:28.601 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.BREAK_PROP)
18:29:28.602 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.IS_NAMESPACE)
18:29:28.602 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.FREE_CALL)
18:29:28.603 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.RIGHT)
18:29:28.604 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.DECR_FLAG)
18:29:28.604 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.DESCENDANTS_FLAG)
18:29:28.605 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.FLAG_GLOBAL_STATE_UNMODIFIED)
18:29:28.606 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.FLAG_LOCAL_RESULTS)
18:29:28.607 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.TEMP_PROP)
18:29:28.607 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.VARS_PROP)
18:29:28.608 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.DEFAULT_PROP)
18:29:28.608 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.TARGETBLOCK_PROP)
18:29:28.609 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.DIRECTCALL_PROP)
18:29:28.610 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.VAR_ARGS_NAME)
18:29:28.610 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.NAME_PROP)
18:29:28.611 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.SYNTHETIC_BLOCK_PROP)
18:29:28.639 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.type)
18:29:28.640 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.SIDE_EFFECT_FLAGS)
18:29:28.641 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.SIDE_EFFECTS_FLAGS_MASK)
18:29:28.641 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.sourcePosition)
18:29:28.642 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.TYPE_PROP)
18:29:28.643 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.LOCAL_BLOCK_PROP)
18:29:28.643 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.TARGET_PROP)
18:29:28.644 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.IS_VAR_ARGS_PARAM)
18:29:28.645 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.DIRECT_EVAL)
18:29:28.645 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.LEFT)
18:29:28.646 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.SPECIALCALL_WITH)
18:29:28.647 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.ATTRIBUTE_FLAG)
18:29:28.647 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.COLUMN_MASK)
18:29:28.648 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.FLAG_NO_THROWS)
18:29:28.649 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.FUNCTION_PROP)
18:29:28.649 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.FIXUPS_PROP)
18:29:28.650 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.CASES_PROP)
18:29:28.651 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.LOCALCOUNT_PROP)
18:29:28.651 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.ISNUMBER_PROP)
18:29:28.652 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.JSDOC_INFO_PROP)
18:29:28.653 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.MEMBER_TYPE_PROP)
18:29:28.653 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.OPT_ARG_NAME)
18:29:28.654 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.SIDE_EFFECTS_ALL)
18:29:28.655 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.BRACELESS_TYPE)
18:29:28.655 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.SOURCENAME_PROP)
18:29:28.656 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.LABEL_ID_PROP)
18:29:28.657 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.IS_OPTIONAL_PARAM)
18:29:28.657 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.DIRECTIVES)
18:29:28.658 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.BOTH)
18:29:28.659 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.SPECIALCALL_EVAL)
18:29:28.659 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.PROPERTY_FLAG)
18:29:28.660 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.MAX_COLUMN_NUMBER)
18:29:28.661 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.FLAG_ARGUMENTS_UNMODIFIED)
18:29:28.661 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.ENUM_PROP)
18:29:28.662 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.CODEOFFSET_PROP)
18:29:28.663 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.REGEXP_PROP)
18:29:28.664 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.FINALLY_PROP)
18:29:28.665 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.LASTUSE_PROP)
18:29:28.665 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.DEBUGSOURCE_PROP)
18:29:28.666 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.INCRDECR_PROP)
18:29:28.667 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.QUOTED_PROP)
18:29:28.668 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) 0)
18:29:28.668 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) 1)
18:29:28.669 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.ORIGINALNAME_PROP)
18:29:28.670 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.LABEL_PROP)
18:29:28.671 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.CATCH_SCOPE_PROP)
18:29:28.671 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.CONTINUE_PROP)
18:29:28.672 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.IS_CONSTANT_NAME)
18:29:28.673 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.IS_DISPATCHER)
18:29:28.673 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.LAST_PROP)
18:29:28.674 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.NON_SPECIALCALL)
18:29:28.675 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.POST_FLAG)
18:29:28.675 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.COLUMN_BITS)
18:29:28.676 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.FLAG_THIS_UNMODIFIED)
18:29:28.677 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.LOCAL_PROP)
18:29:28.677 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.USES_PROP)
18:29:28.678 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.CASEARRAY_PROP)
18:29:28.679 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.VARIABLE_PROP)
18:29:28.679 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.SPECIALCALL_PROP)
18:29:28.680 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.SKIP_INDEXES_PROP)
18:29:28.681 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.PARENTHESIZED_PROP)
18:29:28.682 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.EMPTY_BLOCK)
18:29:28.682 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.NO_SIDE_EFFECTS)
18:29:28.683 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.SPECIAL_PROP_PROP)
18:29:28.684 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.OBJECT_IDS_PROP)
18:29:28.684 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.BREAK_PROP)
18:29:28.685 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.IS_NAMESPACE)
18:29:28.686 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.FREE_CALL)
18:29:28.686 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.RIGHT)
18:29:28.687 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.DECR_FLAG)
18:29:28.688 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.DESCENDANTS_FLAG)
18:29:28.688 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.FLAG_GLOBAL_STATE_UNMODIFIED)
18:29:28.689 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.FLAG_LOCAL_RESULTS)
18:29:28.690 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.TEMP_PROP)
18:29:28.691 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.VARS_PROP)
18:29:28.691 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.DEFAULT_PROP)
18:29:28.692 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.TARGETBLOCK_PROP)
18:29:28.693 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.DIRECTCALL_PROP)
18:29:28.693 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.VAR_ARGS_NAME)
18:29:28.694 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.NAME_PROP)
18:29:28.695 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.SYNTHETIC_BLOCK_PROP)
18:29:28.695 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.type)
18:29:28.696 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.SIDE_EFFECT_FLAGS)
18:29:28.697 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.SIDE_EFFECTS_FLAGS_MASK)
18:29:28.698 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.sourcePosition)
18:29:28.698 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.TYPE_PROP)
18:29:28.699 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.LOCAL_BLOCK_PROP)
18:29:28.700 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.TARGET_PROP)
18:29:28.701 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.IS_VAR_ARGS_PARAM)
18:29:28.701 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.DIRECT_EVAL)
18:29:28.702 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.LEFT)
18:29:28.703 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.SPECIALCALL_WITH)
18:29:28.704 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.ATTRIBUTE_FLAG)
18:29:28.704 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.COLUMN_MASK)
18:29:28.705 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.FLAG_NO_THROWS)
18:29:28.706 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.FUNCTION_PROP)
18:29:28.707 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.FIXUPS_PROP)
18:29:28.707 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.CASES_PROP)
18:29:28.708 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.LOCALCOUNT_PROP)
18:29:28.709 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.ISNUMBER_PROP)
18:29:28.710 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.JSDOC_INFO_PROP)
18:29:28.710 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.MEMBER_TYPE_PROP)
18:29:28.711 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.OPT_ARG_NAME)
18:29:28.712 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.SIDE_EFFECTS_ALL)
18:29:28.712 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.BRACELESS_TYPE)
18:29:28.713 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.SOURCENAME_PROP)
18:29:28.714 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.LABEL_ID_PROP)
18:29:28.715 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.IS_OPTIONAL_PARAM)
18:29:28.715 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.DIRECTIVES)
18:29:28.716 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.BOTH)
18:29:28.717 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.SPECIALCALL_EVAL)
18:29:28.718 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.PROPERTY_FLAG)
18:29:28.718 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.MAX_COLUMN_NUMBER)
18:29:28.719 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.FLAG_ARGUMENTS_UNMODIFIED)
18:29:28.720 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.ENUM_PROP)
18:29:28.720 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.CODEOFFSET_PROP)
18:29:28.721 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.REGEXP_PROP)
18:29:28.722 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.FINALLY_PROP)
18:29:28.723 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.LASTUSE_PROP)
18:29:28.724 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.DEBUGSOURCE_PROP)
18:29:28.724 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.INCRDECR_PROP)
18:29:28.725 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.QUOTED_PROP)
18:29:28.726 [pool-1535-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getExistingIntProp(int) [0]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:29:28.728 [pool-1536-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getExistingIntProp(int) [1]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:29:28.729 [pool-1537-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getExistingIntProp(int) [39]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:29:28.730 [pool-1538-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getExistingIntProp(int) [19]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:29:28.731 [pool-1539-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getExistingIntProp(int) [-1]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:29:28.732 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getAncestor((int) 0)
18:29:28.732 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getAncestor((int) 1)
18:29:28.735 [pool-1544-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getAncestor(int) [-1]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:29:28.739 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.hasChild((com.google.javascript.rhino.Node) this)
18:29:28.741 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.hasChild((com.google.javascript.rhino.Node) node2)
18:29:28.743 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.hasChild((com.google.javascript.rhino.Node) this.first)
18:29:28.744 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.hasChild((com.google.javascript.rhino.Node) this.last)
18:29:28.747 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isEquivalentTo((com.google.javascript.rhino.Node) this)
18:29:28.748 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isEquivalentTo((com.google.javascript.rhino.Node) node2)
18:29:28.750 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isEquivalentTo((com.google.javascript.rhino.Node) this.first)
18:29:28.752 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isEquivalentTo((com.google.javascript.rhino.Node) this.last)
18:29:28.754 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isEquivalentToTyped((com.google.javascript.rhino.Node) this)
18:29:28.756 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isEquivalentToTyped((com.google.javascript.rhino.Node) node2)
18:29:28.758 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isEquivalentToTyped((com.google.javascript.rhino.Node) this.first)
18:29:28.759 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isEquivalentToTyped((com.google.javascript.rhino.Node) this.last)
18:29:28.760 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getType()
18:29:28.761 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.hasChildren()
18:29:28.762 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getFirstChild()
18:29:28.762 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getLastChild()
18:29:28.764 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getLastSibling()
18:29:28.764 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getLineno()
18:29:28.765 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getCharno()
18:29:28.766 [pool-1567-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getDouble() []
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:29:28.767 [pool-1568-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getString() []
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:29:28.767 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.children()
18:29:28.768 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getParent()
18:29:28.769 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getAncestors()
18:29:28.770 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.hasOneChild()
18:29:28.770 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.hasMoreThanOneChild()
18:29:28.771 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getChildCount()
18:29:28.772 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.hasSideEffects()
18:29:28.773 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isQualifiedName()
18:29:28.774 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isUnscopedQualifiedName()
18:29:28.775 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.detachFromParent()
18:29:28.775 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.cloneNode()
18:29:28.776 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.cloneTree()
18:29:28.777 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getJsDocBuilderForNode()
18:29:28.779 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isVarArgs()
18:29:28.779 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isOptionalArg()
18:29:28.780 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isSyntheticBlock()
18:29:28.781 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.wasEmptyNode()
18:29:28.782 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getSideEffectFlags()
18:29:28.783 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isOnlyModifiesThisCall()
18:29:28.784 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isNoSideEffectsCall()
18:29:28.785 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isQuotedString()
18:29:28.800 [pool-17-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
18:29:28.801 [pool-17-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] com.google.javascript.jscomp.DeadAssignmentsEliminationTest#testIssue384c iteration 0
18:29:28.801 [pool-17-thread-1] DEBUG f.i.l.r.s.c.SpoonElementsCollector - [data] "Node tree inequality:"="Node tree inequality:"
18:29:28.801 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
18:29:28.801 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of com.google.javascript.rhino.Node(id=1429)
18:29:28.801 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2
18:29:28.801 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] diff
18:29:28.804 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.ORIGINALNAME_PROP
18:29:28.804 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.propListHead
18:29:28.804 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.LABEL_PROP
18:29:28.804 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.CATCH_SCOPE_PROP
18:29:28.804 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.CONTINUE_PROP
18:29:28.804 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.IS_CONSTANT_NAME
18:29:28.805 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.IS_DISPATCHER
18:29:28.805 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.LAST_PROP
18:29:28.805 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.NON_SPECIALCALL
18:29:28.805 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.POST_FLAG
18:29:28.805 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.COLUMN_BITS
18:29:28.805 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.FLAG_THIS_UNMODIFIED
18:29:28.805 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.LOCAL_PROP
18:29:28.805 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.USES_PROP
18:29:28.805 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.CASEARRAY_PROP
18:29:28.805 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.VARIABLE_PROP
18:29:28.805 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.SPECIALCALL_PROP
18:29:28.805 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.SKIP_INDEXES_PROP
18:29:28.805 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.PARENTHESIZED_PROP
18:29:28.805 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.jsType
18:29:28.805 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.EMPTY_BLOCK
18:29:28.805 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.NO_SIDE_EFFECTS
18:29:28.805 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.parent
18:29:28.805 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.SPECIAL_PROP_PROP
18:29:28.805 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.OBJECT_IDS_PROP
18:29:28.805 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.BREAK_PROP
18:29:28.805 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.IS_NAMESPACE
18:29:28.805 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.FREE_CALL
18:29:28.805 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.RIGHT
18:29:28.805 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.DECR_FLAG
18:29:28.805 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.DESCENDANTS_FLAG
18:29:28.805 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.FLAG_GLOBAL_STATE_UNMODIFIED
18:29:28.805 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.FLAG_LOCAL_RESULTS
18:29:28.805 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.TEMP_PROP
18:29:28.805 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.VARS_PROP
18:29:28.805 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.DEFAULT_PROP
18:29:28.805 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.TARGETBLOCK_PROP
18:29:28.805 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.DIRECTCALL_PROP
18:29:28.805 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.VAR_ARGS_NAME
18:29:28.805 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.NAME_PROP
18:29:28.805 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.SYNTHETIC_BLOCK_PROP
18:29:28.805 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.type
18:29:28.805 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.SIDE_EFFECT_FLAGS
18:29:28.805 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.SIDE_EFFECTS_FLAGS_MASK
18:29:28.805 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.sourcePosition
18:29:28.805 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.TYPE_PROP
18:29:28.805 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.LOCAL_BLOCK_PROP
18:29:28.806 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.TARGET_PROP
18:29:28.806 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.IS_VAR_ARGS_PARAM
18:29:28.806 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.DIRECT_EVAL
18:29:28.806 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.LEFT
18:29:28.806 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.SPECIALCALL_WITH
18:29:28.806 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.ATTRIBUTE_FLAG
18:29:28.806 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.COLUMN_MASK
18:29:28.806 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.FLAG_NO_THROWS
18:29:28.806 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.FUNCTION_PROP
18:29:28.806 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.FIXUPS_PROP
18:29:28.806 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.CASES_PROP
18:29:28.806 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.LOCALCOUNT_PROP
18:29:28.806 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.ISNUMBER_PROP
18:29:28.806 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.JSDOC_INFO_PROP
18:29:28.806 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.MEMBER_TYPE_PROP
18:29:28.806 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.OPT_ARG_NAME
18:29:28.806 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.SIDE_EFFECTS_ALL
18:29:28.806 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.next
18:29:28.806 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.BRACELESS_TYPE
18:29:28.806 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.first
18:29:28.806 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.SOURCENAME_PROP
18:29:28.806 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.LABEL_ID_PROP
18:29:28.806 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.IS_OPTIONAL_PARAM
18:29:28.806 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.DIRECTIVES
18:29:28.806 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.BOTH
18:29:28.806 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.SPECIALCALL_EVAL
18:29:28.806 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.PROPERTY_FLAG
18:29:28.806 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.MAX_COLUMN_NUMBER
18:29:28.806 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.FLAG_ARGUMENTS_UNMODIFIED
18:29:28.806 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.ENUM_PROP
18:29:28.806 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.CODEOFFSET_PROP
18:29:28.806 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.REGEXP_PROP
18:29:28.806 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.FINALLY_PROP
18:29:28.806 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.LASTUSE_PROP
18:29:28.807 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.DEBUGSOURCE_PROP
18:29:28.807 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.INCRDECR_PROP
18:29:28.807 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.QUOTED_PROP
18:29:28.807 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.last
18:29:28.812 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.propToString((int) 0)
18:29:28.813 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.propToString((int) 1)
18:29:28.816 [pool-1596-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getChildBefore(com.google.javascript.rhino.Node) [instance of com.google.javascript.rhino.Node(id=1429)]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:29:28.817 [pool-1597-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getChildBefore(com.google.javascript.rhino.Node) [instance of com.google.javascript.rhino.Node(id=1431)]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:29:28.818 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getChildAtIndex((int) 0)
18:29:28.822 [pool-1602-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.clonePropsFrom(com.google.javascript.rhino.Node) [instance of com.google.javascript.rhino.Node(id=1429)]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:29:28.823 [pool-1603-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.clonePropsFrom(com.google.javascript.rhino.Node) [instance of com.google.javascript.rhino.Node(id=1431)]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:29:28.825 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getBooleanProp((int) 0)
18:29:28.826 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getBooleanProp((int) 1)
18:29:28.827 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getIntProp((int) 0)
18:29:28.827 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getIntProp((int) 1)
18:29:28.829 [pool-1610-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getExistingIntProp(int) [0]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:29:28.830 [pool-1611-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getExistingIntProp(int) [1]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:29:28.830 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.extractLineno((int) 0)
18:29:28.831 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.extractLineno((int) 1)
18:29:28.832 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.extractCharno((int) 0)
18:29:28.832 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.extractCharno((int) 1)
18:29:28.833 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getAncestor((int) 0)
18:29:28.836 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.hasChild((com.google.javascript.rhino.Node) this)
18:29:28.838 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.hasChild((com.google.javascript.rhino.Node) node2)
18:29:28.840 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getNodeClass((com.google.javascript.rhino.Node) this)
18:29:28.842 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getNodeClass((com.google.javascript.rhino.Node) node2)
18:29:28.846 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.checkTreeEqualsImpl((com.google.javascript.rhino.Node) node2)
18:29:28.850 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.checkTreeTypeAwareEqualsImpl((com.google.javascript.rhino.Node) node2)
18:29:28.852 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isEquivalentTo((com.google.javascript.rhino.Node) this)
18:29:28.854 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isEquivalentTo((com.google.javascript.rhino.Node) node2)
18:29:28.856 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isEquivalentToTyped((com.google.javascript.rhino.Node) this)
18:29:28.858 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isEquivalentToTyped((com.google.javascript.rhino.Node) node2)
18:29:28.859 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getType()
18:29:28.860 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.hasChildren()
18:29:28.860 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getFirstChild()
18:29:28.861 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getLastChild()
18:29:28.862 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getLastSibling()
18:29:28.863 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getSortedPropTypes()
18:29:28.864 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getLineno()
18:29:28.865 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getCharno()
18:29:28.865 [pool-1639-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getDouble() []
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:29:28.866 [pool-1640-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getString() []
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:29:28.867 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.children()
18:29:28.868 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getAncestors()
18:29:28.869 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.hasOneChild()
18:29:28.869 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.hasMoreThanOneChild()
18:29:28.870 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getChildCount()
18:29:28.870 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.hasSideEffects()
18:29:28.872 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isQualifiedName()
18:29:28.872 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isUnscopedQualifiedName()
18:29:28.873 [pool-1651-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.detachFromParent() []
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:29:28.874 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.cloneNode()
18:29:28.874 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.cloneTree()
18:29:28.875 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getJsDocBuilderForNode()
18:29:28.876 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isVarArgs()
18:29:28.877 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isOptionalArg()
18:29:28.878 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isSyntheticBlock()
18:29:28.879 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.wasEmptyNode()
18:29:28.879 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getSideEffectFlags()
18:29:28.880 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isOnlyModifiesThisCall()
18:29:28.880 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isNoSideEffectsCall()
18:29:28.881 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isQuotedString()
18:29:28.882 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.ORIGINALNAME_PROP
18:29:28.883 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.LABEL_PROP
18:29:28.883 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.CATCH_SCOPE_PROP
18:29:28.883 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.CONTINUE_PROP
18:29:28.883 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.IS_CONSTANT_NAME
18:29:28.883 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.IS_DISPATCHER
18:29:28.883 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.LAST_PROP
18:29:28.883 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.NON_SPECIALCALL
18:29:28.883 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.POST_FLAG
18:29:28.883 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.COLUMN_BITS
18:29:28.883 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.FLAG_THIS_UNMODIFIED
18:29:28.883 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.LOCAL_PROP
18:29:28.883 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.USES_PROP
18:29:28.883 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.CASEARRAY_PROP
18:29:28.883 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.VARIABLE_PROP
18:29:28.883 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.SPECIALCALL_PROP
18:29:28.883 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.SKIP_INDEXES_PROP
18:29:28.883 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.PARENTHESIZED_PROP
18:29:28.883 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.EMPTY_BLOCK
18:29:28.883 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.NO_SIDE_EFFECTS
18:29:28.883 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.SPECIAL_PROP_PROP
18:29:28.883 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.OBJECT_IDS_PROP
18:29:28.883 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.BREAK_PROP
18:29:28.883 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.IS_NAMESPACE
18:29:28.883 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.FREE_CALL
18:29:28.883 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.RIGHT
18:29:28.883 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.DECR_FLAG
18:29:28.883 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.DESCENDANTS_FLAG
18:29:28.883 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.FLAG_GLOBAL_STATE_UNMODIFIED
18:29:28.883 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.FLAG_LOCAL_RESULTS
18:29:28.883 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.TEMP_PROP
18:29:28.883 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.VARS_PROP
18:29:28.883 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.DEFAULT_PROP
18:29:28.883 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.TARGETBLOCK_PROP
18:29:28.883 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.DIRECTCALL_PROP
18:29:28.883 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.VAR_ARGS_NAME
18:29:28.883 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.NAME_PROP
18:29:28.883 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.SYNTHETIC_BLOCK_PROP
18:29:28.883 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.SIDE_EFFECT_FLAGS
18:29:28.883 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.SIDE_EFFECTS_FLAGS_MASK
18:29:28.883 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.TYPE_PROP
18:29:28.883 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.LOCAL_BLOCK_PROP
18:29:28.883 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.TARGET_PROP
18:29:28.883 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.IS_VAR_ARGS_PARAM
18:29:28.883 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.DIRECT_EVAL
18:29:28.883 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.LEFT
18:29:28.883 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.SPECIALCALL_WITH
18:29:28.883 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.ATTRIBUTE_FLAG
18:29:28.883 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.COLUMN_MASK
18:29:28.883 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.FLAG_NO_THROWS
18:29:28.883 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.FUNCTION_PROP
18:29:28.883 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.FIXUPS_PROP
18:29:28.883 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.CASES_PROP
18:29:28.883 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.LOCALCOUNT_PROP
18:29:28.883 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.ISNUMBER_PROP
18:29:28.883 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.JSDOC_INFO_PROP
18:29:28.883 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.MEMBER_TYPE_PROP
18:29:28.883 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.OPT_ARG_NAME
18:29:28.883 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.SIDE_EFFECTS_ALL
18:29:28.883 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.BRACELESS_TYPE
18:29:28.883 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.SOURCENAME_PROP
18:29:28.883 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.LABEL_ID_PROP
18:29:28.883 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.IS_OPTIONAL_PARAM
18:29:28.883 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.DIRECTIVES
18:29:28.883 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.BOTH
18:29:28.883 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.SPECIALCALL_EVAL
18:29:28.883 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.PROPERTY_FLAG
18:29:28.884 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.MAX_COLUMN_NUMBER
18:29:28.884 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.FLAG_ARGUMENTS_UNMODIFIED
18:29:28.884 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.ENUM_PROP
18:29:28.884 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.CODEOFFSET_PROP
18:29:28.884 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.REGEXP_PROP
18:29:28.884 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.FINALLY_PROP
18:29:28.884 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.LASTUSE_PROP
18:29:28.884 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.DEBUGSOURCE_PROP
18:29:28.884 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.INCRDECR_PROP
18:29:28.884 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.QUOTED_PROP
18:29:28.891 [pool-1666-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getChildBefore(com.google.javascript.rhino.Node) [instance of com.google.javascript.rhino.Node(id=1429)]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:29:28.892 [pool-1667-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getChildBefore(com.google.javascript.rhino.Node) [instance of com.google.javascript.rhino.Node(id=1431)]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:29:28.894 [pool-1668-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getChildBefore(com.google.javascript.rhino.Node) [instance of com.google.javascript.rhino.Node(id=1433)]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:29:28.895 [pool-1669-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getChildBefore(com.google.javascript.rhino.Node) [instance of com.google.javascript.rhino.Node(id=1433)]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:29:28.896 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getChildAtIndex((int) 0)
18:29:28.897 [pool-1672-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getChildAtIndex(int) [39]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:29:28.898 [pool-1673-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getChildAtIndex(int) [19]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:29:28.899 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getChildAtIndex((int) this.CATCH_SCOPE_PROP)
18:29:28.899 [pool-1675-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getChildAtIndex(int) [3]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:29:28.900 [pool-1676-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getChildAtIndex(int) [42]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:29:28.902 [pool-1677-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.clonePropsFrom(com.google.javascript.rhino.Node) [instance of com.google.javascript.rhino.Node(id=1429)]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:29:28.903 [pool-1678-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.clonePropsFrom(com.google.javascript.rhino.Node) [instance of com.google.javascript.rhino.Node(id=1431)]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:29:28.905 [pool-1679-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.clonePropsFrom(com.google.javascript.rhino.Node) [instance of com.google.javascript.rhino.Node(id=1433)]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:29:28.906 [pool-1680-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.clonePropsFrom(com.google.javascript.rhino.Node) [instance of com.google.javascript.rhino.Node(id=1433)]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:29:28.910 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) 0)
18:29:28.910 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) 1)
18:29:28.911 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.ORIGINALNAME_PROP)
18:29:28.912 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.LABEL_PROP)
18:29:28.912 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.CATCH_SCOPE_PROP)
18:29:28.913 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.CONTINUE_PROP)
18:29:28.913 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.IS_CONSTANT_NAME)
18:29:28.914 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.IS_DISPATCHER)
18:29:28.914 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.LAST_PROP)
18:29:28.915 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.NON_SPECIALCALL)
18:29:28.916 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.POST_FLAG)
18:29:28.916 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.COLUMN_BITS)
18:29:28.917 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.FLAG_THIS_UNMODIFIED)
18:29:28.917 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.LOCAL_PROP)
18:29:28.918 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.USES_PROP)
18:29:28.919 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.CASEARRAY_PROP)
18:29:28.919 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.VARIABLE_PROP)
18:29:28.930 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.SPECIALCALL_PROP)
18:29:28.931 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.SKIP_INDEXES_PROP)
18:29:28.931 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.PARENTHESIZED_PROP)
18:29:28.932 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.EMPTY_BLOCK)
18:29:28.932 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.NO_SIDE_EFFECTS)
18:29:28.933 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.SPECIAL_PROP_PROP)
18:29:28.934 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.OBJECT_IDS_PROP)
18:29:28.934 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.BREAK_PROP)
18:29:28.935 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.IS_NAMESPACE)
18:29:28.935 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.FREE_CALL)
18:29:28.936 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.RIGHT)
18:29:28.936 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.DECR_FLAG)
18:29:28.937 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.DESCENDANTS_FLAG)
18:29:28.938 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.FLAG_GLOBAL_STATE_UNMODIFIED)
18:29:28.938 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.FLAG_LOCAL_RESULTS)
18:29:28.939 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.TEMP_PROP)
18:29:28.939 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.VARS_PROP)
18:29:28.940 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.DEFAULT_PROP)
18:29:28.941 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.TARGETBLOCK_PROP)
18:29:28.942 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.DIRECTCALL_PROP)
18:29:28.942 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.VAR_ARGS_NAME)
18:29:28.943 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.NAME_PROP)
18:29:28.944 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.SYNTHETIC_BLOCK_PROP)
18:29:28.944 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.type)
18:29:28.945 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.SIDE_EFFECT_FLAGS)
18:29:28.946 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.SIDE_EFFECTS_FLAGS_MASK)
18:29:28.946 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.sourcePosition)
18:29:28.947 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.TYPE_PROP)
18:29:28.948 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.LOCAL_BLOCK_PROP)
18:29:28.948 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.TARGET_PROP)
18:29:28.949 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.IS_VAR_ARGS_PARAM)
18:29:28.949 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.DIRECT_EVAL)
18:29:28.950 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.LEFT)
18:29:28.951 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.SPECIALCALL_WITH)
18:29:28.951 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.ATTRIBUTE_FLAG)
18:29:28.952 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.COLUMN_MASK)
18:29:28.952 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.FLAG_NO_THROWS)
18:29:28.953 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.FUNCTION_PROP)
18:29:28.954 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.FIXUPS_PROP)
18:29:28.954 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.CASES_PROP)
18:29:28.955 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.LOCALCOUNT_PROP)
18:29:28.956 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.ISNUMBER_PROP)
18:29:28.956 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.JSDOC_INFO_PROP)
18:29:28.957 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.MEMBER_TYPE_PROP)
18:29:28.957 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.OPT_ARG_NAME)
18:29:28.958 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.SIDE_EFFECTS_ALL)
18:29:28.959 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.BRACELESS_TYPE)
18:29:28.959 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.SOURCENAME_PROP)
18:29:28.960 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.LABEL_ID_PROP)
18:29:28.961 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.IS_OPTIONAL_PARAM)
18:29:28.961 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.DIRECTIVES)
18:29:28.962 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.BOTH)
18:29:28.963 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.SPECIALCALL_EVAL)
18:29:28.963 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.PROPERTY_FLAG)
18:29:28.964 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.MAX_COLUMN_NUMBER)
18:29:28.965 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.FLAG_ARGUMENTS_UNMODIFIED)
18:29:28.965 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.ENUM_PROP)
18:29:28.966 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.CODEOFFSET_PROP)
18:29:28.967 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.REGEXP_PROP)
18:29:28.968 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.FINALLY_PROP)
18:29:28.968 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.LASTUSE_PROP)
18:29:28.969 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.DEBUGSOURCE_PROP)
18:29:28.969 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.INCRDECR_PROP)
18:29:28.970 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.QUOTED_PROP)
18:29:28.971 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) 0)
18:29:28.972 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) 1)
18:29:28.972 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.ORIGINALNAME_PROP)
18:29:28.973 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.LABEL_PROP)
18:29:28.973 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.CATCH_SCOPE_PROP)
18:29:28.974 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.CONTINUE_PROP)
18:29:28.974 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.IS_CONSTANT_NAME)
18:29:28.975 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.IS_DISPATCHER)
18:29:28.976 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.LAST_PROP)
18:29:28.976 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.NON_SPECIALCALL)
18:29:28.977 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.POST_FLAG)
18:29:28.978 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.COLUMN_BITS)
18:29:28.978 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.FLAG_THIS_UNMODIFIED)
18:29:28.979 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.LOCAL_PROP)
18:29:28.980 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.USES_PROP)
18:29:28.980 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.CASEARRAY_PROP)
18:29:28.981 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.VARIABLE_PROP)
18:29:28.981 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.SPECIALCALL_PROP)
18:29:28.982 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.SKIP_INDEXES_PROP)
18:29:28.983 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.PARENTHESIZED_PROP)
18:29:28.984 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.EMPTY_BLOCK)
18:29:28.984 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.NO_SIDE_EFFECTS)
18:29:28.985 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.SPECIAL_PROP_PROP)
18:29:28.985 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.OBJECT_IDS_PROP)
18:29:28.986 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.BREAK_PROP)
18:29:28.987 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.IS_NAMESPACE)
18:29:28.987 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.FREE_CALL)
18:29:28.988 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.RIGHT)
18:29:28.989 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.DECR_FLAG)
18:29:28.989 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.DESCENDANTS_FLAG)
18:29:28.990 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.FLAG_GLOBAL_STATE_UNMODIFIED)
18:29:28.991 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.FLAG_LOCAL_RESULTS)
18:29:28.991 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.TEMP_PROP)
18:29:28.992 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.VARS_PROP)
18:29:28.993 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.DEFAULT_PROP)
18:29:28.994 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.TARGETBLOCK_PROP)
18:29:28.994 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.DIRECTCALL_PROP)
18:29:28.995 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.VAR_ARGS_NAME)
18:29:28.996 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.NAME_PROP)
18:29:28.997 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.SYNTHETIC_BLOCK_PROP)
18:29:28.997 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.type)
18:29:28.998 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.SIDE_EFFECT_FLAGS)
18:29:28.999 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.SIDE_EFFECTS_FLAGS_MASK)
18:29:28.999 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.sourcePosition)
18:29:29.000 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.TYPE_PROP)
18:29:29.001 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.LOCAL_BLOCK_PROP)
18:29:29.001 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.TARGET_PROP)
18:29:29.002 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.IS_VAR_ARGS_PARAM)
18:29:29.003 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.DIRECT_EVAL)
18:29:29.004 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.LEFT)
18:29:29.004 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.SPECIALCALL_WITH)
18:29:29.005 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.ATTRIBUTE_FLAG)
18:29:29.006 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.COLUMN_MASK)
18:29:29.007 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.FLAG_NO_THROWS)
18:29:29.007 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.FUNCTION_PROP)
18:29:29.008 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.FIXUPS_PROP)
18:29:29.009 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.CASES_PROP)
18:29:29.010 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.LOCALCOUNT_PROP)
18:29:29.010 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.ISNUMBER_PROP)
18:29:29.011 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.JSDOC_INFO_PROP)
18:29:29.012 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.MEMBER_TYPE_PROP)
18:29:29.012 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.OPT_ARG_NAME)
18:29:29.013 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.SIDE_EFFECTS_ALL)
18:29:29.014 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.BRACELESS_TYPE)
18:29:29.014 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.SOURCENAME_PROP)
18:29:29.015 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.LABEL_ID_PROP)
18:29:29.016 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.IS_OPTIONAL_PARAM)
18:29:29.017 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.DIRECTIVES)
18:29:29.018 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.BOTH)
18:29:29.018 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.SPECIALCALL_EVAL)
18:29:29.019 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.PROPERTY_FLAG)
18:29:29.020 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.MAX_COLUMN_NUMBER)
18:29:29.021 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.FLAG_ARGUMENTS_UNMODIFIED)
18:29:29.022 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.ENUM_PROP)
18:29:29.022 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.CODEOFFSET_PROP)
18:29:29.023 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.REGEXP_PROP)
18:29:29.024 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.FINALLY_PROP)
18:29:29.025 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.LASTUSE_PROP)
18:29:29.025 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.DEBUGSOURCE_PROP)
18:29:29.026 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.INCRDECR_PROP)
18:29:29.027 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.QUOTED_PROP)
18:29:29.028 [pool-1848-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getExistingIntProp(int) [0]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:29:29.029 [pool-1849-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getExistingIntProp(int) [1]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:29:29.031 [pool-1850-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getExistingIntProp(int) [39]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:29:29.032 [pool-1851-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getExistingIntProp(int) [19]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:29:29.033 [pool-1852-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getExistingIntProp(int) [-1]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:29:29.034 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getAncestor((int) 0)
18:29:29.034 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getAncestor((int) 1)
18:29:29.037 [pool-1857-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getAncestor(int) [-1]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:29:29.041 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.hasChild((com.google.javascript.rhino.Node) this)
18:29:29.043 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.hasChild((com.google.javascript.rhino.Node) node2)
18:29:29.044 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.hasChild((com.google.javascript.rhino.Node) this.first)
18:29:29.046 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.hasChild((com.google.javascript.rhino.Node) this.last)
18:29:29.049 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isEquivalentTo((com.google.javascript.rhino.Node) this)
18:29:29.050 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isEquivalentTo((com.google.javascript.rhino.Node) node2)
18:29:29.053 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isEquivalentTo((com.google.javascript.rhino.Node) this.first)
18:29:29.054 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isEquivalentTo((com.google.javascript.rhino.Node) this.last)
18:29:29.057 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isEquivalentToTyped((com.google.javascript.rhino.Node) this)
18:29:29.059 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isEquivalentToTyped((com.google.javascript.rhino.Node) node2)
18:29:29.061 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isEquivalentToTyped((com.google.javascript.rhino.Node) this.first)
18:29:29.063 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isEquivalentToTyped((com.google.javascript.rhino.Node) this.last)
18:29:29.064 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getType()
18:29:29.064 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.hasChildren()
18:29:29.065 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getFirstChild()
18:29:29.066 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getLastChild()
18:29:29.067 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getLastSibling()
18:29:29.068 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getLineno()
18:29:29.069 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getCharno()
18:29:29.070 [pool-1880-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getDouble() []
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:29:29.071 [pool-1881-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getString() []
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:29:29.072 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.children()
18:29:29.073 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getParent()
18:29:29.074 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getAncestors()
18:29:29.075 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.hasOneChild()
18:29:29.076 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.hasMoreThanOneChild()
18:29:29.076 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getChildCount()
18:29:29.077 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.hasSideEffects()
18:29:29.079 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isQualifiedName()
18:29:29.079 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isUnscopedQualifiedName()
18:29:29.080 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.detachFromParent()
18:29:29.081 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.cloneNode()
18:29:29.082 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.cloneTree()
18:29:29.083 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getJsDocBuilderForNode()
18:29:29.085 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isVarArgs()
18:29:29.086 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isOptionalArg()
18:29:29.086 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isSyntheticBlock()
18:29:29.088 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.wasEmptyNode()
18:29:29.088 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getSideEffectFlags()
18:29:29.089 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isOnlyModifiesThisCall()
18:29:29.090 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isNoSideEffectsCall()
18:29:29.091 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isQuotedString()
18:29:29.102 [pool-17-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
18:29:29.104 [pool-17-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] com.google.javascript.jscomp.DeadAssignmentsEliminationTest#testIssue384b iteration 0
18:29:29.104 [pool-17-thread-1] DEBUG f.i.l.r.s.c.SpoonElementsCollector - [data] "Node tree inequality:"="Node tree inequality:"
18:29:29.104 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
18:29:29.104 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of com.google.javascript.rhino.Node(id=1481)
18:29:29.104 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2
18:29:29.104 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] diff
18:29:29.108 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.ORIGINALNAME_PROP
18:29:29.108 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.propListHead
18:29:29.108 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.LABEL_PROP
18:29:29.108 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.CATCH_SCOPE_PROP
18:29:29.108 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.CONTINUE_PROP
18:29:29.108 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.IS_CONSTANT_NAME
18:29:29.108 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.IS_DISPATCHER
18:29:29.108 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.LAST_PROP
18:29:29.108 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.NON_SPECIALCALL
18:29:29.108 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.POST_FLAG
18:29:29.108 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.COLUMN_BITS
18:29:29.108 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.FLAG_THIS_UNMODIFIED
18:29:29.108 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.LOCAL_PROP
18:29:29.108 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.USES_PROP
18:29:29.108 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.CASEARRAY_PROP
18:29:29.108 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.VARIABLE_PROP
18:29:29.108 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.SPECIALCALL_PROP
18:29:29.108 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.SKIP_INDEXES_PROP
18:29:29.108 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.PARENTHESIZED_PROP
18:29:29.108 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.jsType
18:29:29.108 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.EMPTY_BLOCK
18:29:29.108 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.NO_SIDE_EFFECTS
18:29:29.108 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.parent
18:29:29.108 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.SPECIAL_PROP_PROP
18:29:29.108 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.OBJECT_IDS_PROP
18:29:29.108 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.BREAK_PROP
18:29:29.108 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.IS_NAMESPACE
18:29:29.108 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.FREE_CALL
18:29:29.108 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.RIGHT
18:29:29.108 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.DECR_FLAG
18:29:29.108 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.DESCENDANTS_FLAG
18:29:29.108 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.FLAG_GLOBAL_STATE_UNMODIFIED
18:29:29.108 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.FLAG_LOCAL_RESULTS
18:29:29.108 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.TEMP_PROP
18:29:29.108 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.VARS_PROP
18:29:29.108 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.DEFAULT_PROP
18:29:29.108 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.TARGETBLOCK_PROP
18:29:29.108 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.DIRECTCALL_PROP
18:29:29.108 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.VAR_ARGS_NAME
18:29:29.108 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.NAME_PROP
18:29:29.108 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.SYNTHETIC_BLOCK_PROP
18:29:29.108 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.type
18:29:29.108 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.SIDE_EFFECT_FLAGS
18:29:29.108 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.SIDE_EFFECTS_FLAGS_MASK
18:29:29.108 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.sourcePosition
18:29:29.108 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.TYPE_PROP
18:29:29.108 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.LOCAL_BLOCK_PROP
18:29:29.108 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.TARGET_PROP
18:29:29.108 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.IS_VAR_ARGS_PARAM
18:29:29.108 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.DIRECT_EVAL
18:29:29.108 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.LEFT
18:29:29.108 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.SPECIALCALL_WITH
18:29:29.108 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.ATTRIBUTE_FLAG
18:29:29.108 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.COLUMN_MASK
18:29:29.108 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.FLAG_NO_THROWS
18:29:29.108 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.FUNCTION_PROP
18:29:29.108 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.FIXUPS_PROP
18:29:29.108 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.CASES_PROP
18:29:29.108 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.LOCALCOUNT_PROP
18:29:29.108 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.ISNUMBER_PROP
18:29:29.108 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.JSDOC_INFO_PROP
18:29:29.108 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.MEMBER_TYPE_PROP
18:29:29.108 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.OPT_ARG_NAME
18:29:29.108 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.SIDE_EFFECTS_ALL
18:29:29.108 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.next
18:29:29.108 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.BRACELESS_TYPE
18:29:29.108 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.first
18:29:29.108 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.SOURCENAME_PROP
18:29:29.108 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.LABEL_ID_PROP
18:29:29.108 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.IS_OPTIONAL_PARAM
18:29:29.108 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.DIRECTIVES
18:29:29.108 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.BOTH
18:29:29.108 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.SPECIALCALL_EVAL
18:29:29.108 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.PROPERTY_FLAG
18:29:29.108 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.MAX_COLUMN_NUMBER
18:29:29.108 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.FLAG_ARGUMENTS_UNMODIFIED
18:29:29.109 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.ENUM_PROP
18:29:29.109 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.CODEOFFSET_PROP
18:29:29.109 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.REGEXP_PROP
18:29:29.109 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.FINALLY_PROP
18:29:29.109 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.LASTUSE_PROP
18:29:29.109 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.DEBUGSOURCE_PROP
18:29:29.109 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.INCRDECR_PROP
18:29:29.109 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.QUOTED_PROP
18:29:29.109 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.last
18:29:29.113 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.propToString((int) 0)
18:29:29.114 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.propToString((int) 1)
18:29:29.116 [pool-1909-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getChildBefore(com.google.javascript.rhino.Node) [instance of com.google.javascript.rhino.Node(id=1481)]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:29:29.117 [pool-1910-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getChildBefore(com.google.javascript.rhino.Node) [instance of com.google.javascript.rhino.Node(id=1483)]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:29:29.118 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getChildAtIndex((int) 0)
18:29:29.122 [pool-1915-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.clonePropsFrom(com.google.javascript.rhino.Node) [instance of com.google.javascript.rhino.Node(id=1481)]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:29:29.123 [pool-1916-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.clonePropsFrom(com.google.javascript.rhino.Node) [instance of com.google.javascript.rhino.Node(id=1483)]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:29:29.125 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getBooleanProp((int) 0)
18:29:29.125 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getBooleanProp((int) 1)
18:29:29.126 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getIntProp((int) 0)
18:29:29.127 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getIntProp((int) 1)
18:29:29.128 [pool-1923-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getExistingIntProp(int) [0]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:29:29.129 [pool-1924-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getExistingIntProp(int) [1]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:29:29.129 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.extractLineno((int) 0)
18:29:29.130 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.extractLineno((int) 1)
18:29:29.130 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.extractCharno((int) 0)
18:29:29.131 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.extractCharno((int) 1)
18:29:29.131 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getAncestor((int) 0)
18:29:29.134 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.hasChild((com.google.javascript.rhino.Node) this)
18:29:29.136 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.hasChild((com.google.javascript.rhino.Node) node2)
18:29:29.138 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getNodeClass((com.google.javascript.rhino.Node) this)
18:29:29.140 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getNodeClass((com.google.javascript.rhino.Node) node2)
18:29:29.144 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.checkTreeEqualsImpl((com.google.javascript.rhino.Node) node2)
18:29:29.147 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.checkTreeTypeAwareEqualsImpl((com.google.javascript.rhino.Node) node2)
18:29:29.149 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isEquivalentTo((com.google.javascript.rhino.Node) this)
18:29:29.151 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isEquivalentTo((com.google.javascript.rhino.Node) node2)
18:29:29.153 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isEquivalentToTyped((com.google.javascript.rhino.Node) this)
18:29:29.155 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isEquivalentToTyped((com.google.javascript.rhino.Node) node2)
18:29:29.156 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getType()
18:29:29.156 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.hasChildren()
18:29:29.157 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getFirstChild()
18:29:29.158 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getLastChild()
18:29:29.168 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getLastSibling()
18:29:29.169 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getSortedPropTypes()
18:29:29.169 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getLineno()
18:29:29.170 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getCharno()
18:29:29.171 [pool-1952-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getDouble() []
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:29:29.172 [pool-1953-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getString() []
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:29:29.173 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.children()
18:29:29.175 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getAncestors()
18:29:29.176 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.hasOneChild()
18:29:29.176 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.hasMoreThanOneChild()
18:29:29.177 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getChildCount()
18:29:29.178 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.hasSideEffects()
18:29:29.180 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isQualifiedName()
18:29:29.180 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isUnscopedQualifiedName()
18:29:29.181 [pool-1964-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.detachFromParent() []
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:29:29.182 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.cloneNode()
18:29:29.183 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.cloneTree()
18:29:29.185 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getJsDocBuilderForNode()
18:29:29.186 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isVarArgs()
18:29:29.186 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isOptionalArg()
18:29:29.187 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isSyntheticBlock()
18:29:29.189 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.wasEmptyNode()
18:29:29.189 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getSideEffectFlags()
18:29:29.190 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isOnlyModifiesThisCall()
18:29:29.191 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isNoSideEffectsCall()
18:29:29.191 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isQuotedString()
18:29:29.193 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.ORIGINALNAME_PROP
18:29:29.193 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.LABEL_PROP
18:29:29.193 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.CATCH_SCOPE_PROP
18:29:29.193 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.CONTINUE_PROP
18:29:29.193 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.IS_CONSTANT_NAME
18:29:29.193 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.IS_DISPATCHER
18:29:29.193 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.LAST_PROP
18:29:29.193 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.NON_SPECIALCALL
18:29:29.193 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.POST_FLAG
18:29:29.193 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.COLUMN_BITS
18:29:29.193 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.FLAG_THIS_UNMODIFIED
18:29:29.193 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.LOCAL_PROP
18:29:29.193 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.USES_PROP
18:29:29.193 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.CASEARRAY_PROP
18:29:29.193 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.VARIABLE_PROP
18:29:29.193 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.SPECIALCALL_PROP
18:29:29.193 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.SKIP_INDEXES_PROP
18:29:29.193 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.PARENTHESIZED_PROP
18:29:29.193 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.EMPTY_BLOCK
18:29:29.193 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.NO_SIDE_EFFECTS
18:29:29.193 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.SPECIAL_PROP_PROP
18:29:29.193 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.OBJECT_IDS_PROP
18:29:29.193 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.BREAK_PROP
18:29:29.193 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.IS_NAMESPACE
18:29:29.193 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.FREE_CALL
18:29:29.193 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.RIGHT
18:29:29.193 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.DECR_FLAG
18:29:29.194 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.DESCENDANTS_FLAG
18:29:29.194 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.FLAG_GLOBAL_STATE_UNMODIFIED
18:29:29.194 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.FLAG_LOCAL_RESULTS
18:29:29.194 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.TEMP_PROP
18:29:29.194 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.VARS_PROP
18:29:29.194 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.DEFAULT_PROP
18:29:29.194 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.TARGETBLOCK_PROP
18:29:29.194 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.DIRECTCALL_PROP
18:29:29.194 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.VAR_ARGS_NAME
18:29:29.194 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.NAME_PROP
18:29:29.194 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.SYNTHETIC_BLOCK_PROP
18:29:29.194 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.SIDE_EFFECT_FLAGS
18:29:29.194 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.SIDE_EFFECTS_FLAGS_MASK
18:29:29.194 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.TYPE_PROP
18:29:29.194 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.LOCAL_BLOCK_PROP
18:29:29.194 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.TARGET_PROP
18:29:29.194 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.IS_VAR_ARGS_PARAM
18:29:29.194 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.DIRECT_EVAL
18:29:29.194 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.LEFT
18:29:29.194 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.SPECIALCALL_WITH
18:29:29.194 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.ATTRIBUTE_FLAG
18:29:29.194 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.COLUMN_MASK
18:29:29.194 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.FLAG_NO_THROWS
18:29:29.194 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.FUNCTION_PROP
18:29:29.194 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.FIXUPS_PROP
18:29:29.194 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.CASES_PROP
18:29:29.194 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.LOCALCOUNT_PROP
18:29:29.194 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.ISNUMBER_PROP
18:29:29.194 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.JSDOC_INFO_PROP
18:29:29.194 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.MEMBER_TYPE_PROP
18:29:29.194 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.OPT_ARG_NAME
18:29:29.194 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.SIDE_EFFECTS_ALL
18:29:29.194 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.BRACELESS_TYPE
18:29:29.194 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.SOURCENAME_PROP
18:29:29.194 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.LABEL_ID_PROP
18:29:29.194 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.IS_OPTIONAL_PARAM
18:29:29.194 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.DIRECTIVES
18:29:29.194 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.BOTH
18:29:29.194 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.SPECIALCALL_EVAL
18:29:29.194 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.PROPERTY_FLAG
18:29:29.194 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.MAX_COLUMN_NUMBER
18:29:29.194 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.FLAG_ARGUMENTS_UNMODIFIED
18:29:29.194 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.ENUM_PROP
18:29:29.194 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.CODEOFFSET_PROP
18:29:29.194 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.REGEXP_PROP
18:29:29.194 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.FINALLY_PROP
18:29:29.194 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.LASTUSE_PROP
18:29:29.194 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.DEBUGSOURCE_PROP
18:29:29.194 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.INCRDECR_PROP
18:29:29.194 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.QUOTED_PROP
18:29:29.204 [pool-1979-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getChildBefore(com.google.javascript.rhino.Node) [instance of com.google.javascript.rhino.Node(id=1481)]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:29:29.205 [pool-1980-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getChildBefore(com.google.javascript.rhino.Node) [instance of com.google.javascript.rhino.Node(id=1483)]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:29:29.206 [pool-1981-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getChildBefore(com.google.javascript.rhino.Node) [instance of com.google.javascript.rhino.Node(id=1485)]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:29:29.208 [pool-1982-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getChildBefore(com.google.javascript.rhino.Node) [instance of com.google.javascript.rhino.Node(id=1485)]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:29:29.209 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getChildAtIndex((int) 0)
18:29:29.211 [pool-1985-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getChildAtIndex(int) [39]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:29:29.212 [pool-1986-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getChildAtIndex(int) [19]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:29:29.212 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getChildAtIndex((int) this.CATCH_SCOPE_PROP)
18:29:29.213 [pool-1988-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getChildAtIndex(int) [3]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:29:29.214 [pool-1989-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getChildAtIndex(int) [42]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:29:29.216 [pool-1990-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.clonePropsFrom(com.google.javascript.rhino.Node) [instance of com.google.javascript.rhino.Node(id=1481)]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:29:29.217 [pool-1991-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.clonePropsFrom(com.google.javascript.rhino.Node) [instance of com.google.javascript.rhino.Node(id=1483)]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:29:29.219 [pool-1992-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.clonePropsFrom(com.google.javascript.rhino.Node) [instance of com.google.javascript.rhino.Node(id=1485)]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:29:29.220 [pool-1993-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.clonePropsFrom(com.google.javascript.rhino.Node) [instance of com.google.javascript.rhino.Node(id=1485)]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:29:29.224 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) 0)
18:29:29.225 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) 1)
18:29:29.226 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.ORIGINALNAME_PROP)
18:29:29.227 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.LABEL_PROP)
18:29:29.227 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.CATCH_SCOPE_PROP)
18:29:29.228 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.CONTINUE_PROP)
18:29:29.229 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.IS_CONSTANT_NAME)
18:29:29.230 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.IS_DISPATCHER)
18:29:29.231 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.LAST_PROP)
18:29:29.231 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.NON_SPECIALCALL)
18:29:29.232 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.POST_FLAG)
18:29:29.233 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.COLUMN_BITS)
18:29:29.233 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.FLAG_THIS_UNMODIFIED)
18:29:29.234 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.LOCAL_PROP)
18:29:29.235 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.USES_PROP)
18:29:29.236 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.CASEARRAY_PROP)
18:29:29.237 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.VARIABLE_PROP)
18:29:29.237 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.SPECIALCALL_PROP)
18:29:29.238 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.SKIP_INDEXES_PROP)
18:29:29.239 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.PARENTHESIZED_PROP)
18:29:29.240 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.EMPTY_BLOCK)
18:29:29.241 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.NO_SIDE_EFFECTS)
18:29:29.242 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.SPECIAL_PROP_PROP)
18:29:29.243 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.OBJECT_IDS_PROP)
18:29:29.243 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.BREAK_PROP)
18:29:29.244 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.IS_NAMESPACE)
18:29:29.245 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.FREE_CALL)
18:29:29.246 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.RIGHT)
18:29:29.247 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.DECR_FLAG)
18:29:29.247 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.DESCENDANTS_FLAG)
18:29:29.248 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.FLAG_GLOBAL_STATE_UNMODIFIED)
18:29:29.249 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.FLAG_LOCAL_RESULTS)
18:29:29.250 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.TEMP_PROP)
18:29:29.251 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.VARS_PROP)
18:29:29.252 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.DEFAULT_PROP)
18:29:29.252 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.TARGETBLOCK_PROP)
18:29:29.253 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.DIRECTCALL_PROP)
18:29:29.254 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.VAR_ARGS_NAME)
18:29:29.255 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.NAME_PROP)
18:29:29.255 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.SYNTHETIC_BLOCK_PROP)
18:29:29.256 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.type)
18:29:29.257 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.SIDE_EFFECT_FLAGS)
18:29:29.258 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.SIDE_EFFECTS_FLAGS_MASK)
18:29:29.258 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.sourcePosition)
18:29:29.259 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.TYPE_PROP)
18:29:29.260 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.LOCAL_BLOCK_PROP)
18:29:29.261 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.TARGET_PROP)
18:29:29.261 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.IS_VAR_ARGS_PARAM)
18:29:29.262 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.DIRECT_EVAL)
18:29:29.263 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.LEFT)
18:29:29.263 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.SPECIALCALL_WITH)
18:29:29.264 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.ATTRIBUTE_FLAG)
18:29:29.265 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.COLUMN_MASK)
18:29:29.266 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.FLAG_NO_THROWS)
18:29:29.266 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.FUNCTION_PROP)
18:29:29.267 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.FIXUPS_PROP)
18:29:29.268 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.CASES_PROP)
18:29:29.268 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.LOCALCOUNT_PROP)
18:29:29.269 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.ISNUMBER_PROP)
18:29:29.270 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.JSDOC_INFO_PROP)
18:29:29.271 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.MEMBER_TYPE_PROP)
18:29:29.272 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.OPT_ARG_NAME)
18:29:29.273 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.SIDE_EFFECTS_ALL)
18:29:29.273 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.BRACELESS_TYPE)
18:29:29.274 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.SOURCENAME_PROP)
18:29:29.275 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.LABEL_ID_PROP)
18:29:29.276 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.IS_OPTIONAL_PARAM)
18:29:29.276 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.DIRECTIVES)
18:29:29.277 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.BOTH)
18:29:29.278 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.SPECIALCALL_EVAL)
18:29:29.278 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.PROPERTY_FLAG)
18:29:29.279 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.MAX_COLUMN_NUMBER)
18:29:29.280 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.FLAG_ARGUMENTS_UNMODIFIED)
18:29:29.281 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.ENUM_PROP)
18:29:29.282 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.CODEOFFSET_PROP)
18:29:29.283 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.REGEXP_PROP)
18:29:29.284 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.FINALLY_PROP)
18:29:29.284 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.LASTUSE_PROP)
18:29:29.285 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.DEBUGSOURCE_PROP)
18:29:29.286 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.INCRDECR_PROP)
18:29:29.287 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.QUOTED_PROP)
18:29:29.288 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) 0)
18:29:29.288 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) 1)
18:29:29.289 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.ORIGINALNAME_PROP)
18:29:29.290 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.LABEL_PROP)
18:29:29.291 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.CATCH_SCOPE_PROP)
18:29:29.292 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.CONTINUE_PROP)
18:29:29.292 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.IS_CONSTANT_NAME)
18:29:29.293 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.IS_DISPATCHER)
18:29:29.294 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.LAST_PROP)
18:29:29.294 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.NON_SPECIALCALL)
18:29:29.295 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.POST_FLAG)
18:29:29.296 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.COLUMN_BITS)
18:29:29.297 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.FLAG_THIS_UNMODIFIED)
18:29:29.297 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.LOCAL_PROP)
18:29:29.298 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.USES_PROP)
18:29:29.299 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.CASEARRAY_PROP)
18:29:29.300 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.VARIABLE_PROP)
18:29:29.301 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.SPECIALCALL_PROP)
18:29:29.301 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.SKIP_INDEXES_PROP)
18:29:29.302 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.PARENTHESIZED_PROP)
18:29:29.303 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.EMPTY_BLOCK)
18:29:29.303 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.NO_SIDE_EFFECTS)
18:29:29.304 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.SPECIAL_PROP_PROP)
18:29:29.305 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.OBJECT_IDS_PROP)
18:29:29.306 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.BREAK_PROP)
18:29:29.307 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.IS_NAMESPACE)
18:29:29.307 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.FREE_CALL)
18:29:29.308 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.RIGHT)
18:29:29.309 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.DECR_FLAG)
18:29:29.310 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.DESCENDANTS_FLAG)
18:29:29.310 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.FLAG_GLOBAL_STATE_UNMODIFIED)
18:29:29.311 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.FLAG_LOCAL_RESULTS)
18:29:29.312 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.TEMP_PROP)
18:29:29.313 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.VARS_PROP)
18:29:29.313 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.DEFAULT_PROP)
18:29:29.314 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.TARGETBLOCK_PROP)
18:29:29.315 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.DIRECTCALL_PROP)
18:29:29.316 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.VAR_ARGS_NAME)
18:29:29.316 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.NAME_PROP)
18:29:29.317 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.SYNTHETIC_BLOCK_PROP)
18:29:29.318 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.type)
18:29:29.319 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.SIDE_EFFECT_FLAGS)
18:29:29.319 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.SIDE_EFFECTS_FLAGS_MASK)
18:29:29.320 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.sourcePosition)
18:29:29.321 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.TYPE_PROP)
18:29:29.322 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.LOCAL_BLOCK_PROP)
18:29:29.322 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.TARGET_PROP)
18:29:29.323 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.IS_VAR_ARGS_PARAM)
18:29:29.324 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.DIRECT_EVAL)
18:29:29.324 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.LEFT)
18:29:29.325 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.SPECIALCALL_WITH)
18:29:29.326 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.ATTRIBUTE_FLAG)
18:29:29.327 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.COLUMN_MASK)
18:29:29.327 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.FLAG_NO_THROWS)
18:29:29.328 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.FUNCTION_PROP)
18:29:29.329 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.FIXUPS_PROP)
18:29:29.330 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.CASES_PROP)
18:29:29.331 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.LOCALCOUNT_PROP)
18:29:29.331 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.ISNUMBER_PROP)
18:29:29.332 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.JSDOC_INFO_PROP)
18:29:29.333 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.MEMBER_TYPE_PROP)
18:29:29.334 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.OPT_ARG_NAME)
18:29:29.335 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.SIDE_EFFECTS_ALL)
18:29:29.335 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.BRACELESS_TYPE)
18:29:29.336 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.SOURCENAME_PROP)
18:29:29.337 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.LABEL_ID_PROP)
18:29:29.338 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.IS_OPTIONAL_PARAM)
18:29:29.339 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.DIRECTIVES)
18:29:29.340 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.BOTH)
18:29:29.340 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.SPECIALCALL_EVAL)
18:29:29.341 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.PROPERTY_FLAG)
18:29:29.342 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.MAX_COLUMN_NUMBER)
18:29:29.342 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.FLAG_ARGUMENTS_UNMODIFIED)
18:29:29.343 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.ENUM_PROP)
18:29:29.344 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.CODEOFFSET_PROP)
18:29:29.345 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.REGEXP_PROP)
18:29:29.346 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.FINALLY_PROP)
18:29:29.347 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.LASTUSE_PROP)
18:29:29.348 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.DEBUGSOURCE_PROP)
18:29:29.348 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.INCRDECR_PROP)
18:29:29.349 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.QUOTED_PROP)
18:29:29.351 [pool-2161-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getExistingIntProp(int) [0]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:29:29.352 [pool-2162-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getExistingIntProp(int) [1]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:29:29.353 [pool-2163-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getExistingIntProp(int) [39]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:29:29.354 [pool-2164-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getExistingIntProp(int) [19]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:29:29.356 [pool-2165-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getExistingIntProp(int) [-1]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:29:29.357 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getAncestor((int) 0)
18:29:29.357 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getAncestor((int) 1)
18:29:29.359 [pool-2170-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getAncestor(int) [-1]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:29:29.364 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.hasChild((com.google.javascript.rhino.Node) this)
18:29:29.365 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.hasChild((com.google.javascript.rhino.Node) node2)
18:29:29.367 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.hasChild((com.google.javascript.rhino.Node) this.first)
18:29:29.369 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.hasChild((com.google.javascript.rhino.Node) this.last)
18:29:29.371 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isEquivalentTo((com.google.javascript.rhino.Node) this)
18:29:29.373 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isEquivalentTo((com.google.javascript.rhino.Node) node2)
18:29:29.375 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isEquivalentTo((com.google.javascript.rhino.Node) this.first)
18:29:29.377 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isEquivalentTo((com.google.javascript.rhino.Node) this.last)
18:29:29.379 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isEquivalentToTyped((com.google.javascript.rhino.Node) this)
18:29:29.381 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isEquivalentToTyped((com.google.javascript.rhino.Node) node2)
18:29:29.383 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isEquivalentToTyped((com.google.javascript.rhino.Node) this.first)
18:29:29.385 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isEquivalentToTyped((com.google.javascript.rhino.Node) this.last)
18:29:29.386 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getType()
18:29:29.387 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.hasChildren()
18:29:29.388 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getFirstChild()
18:29:29.389 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getLastChild()
18:29:29.390 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getLastSibling()
18:29:29.391 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getLineno()
18:29:29.391 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getCharno()
18:29:29.401 [pool-2193-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getDouble() []
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:29:29.402 [pool-2194-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getString() []
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:29:29.403 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.children()
18:29:29.404 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getParent()
18:29:29.404 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getAncestors()
18:29:29.405 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.hasOneChild()
18:29:29.406 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.hasMoreThanOneChild()
18:29:29.406 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getChildCount()
18:29:29.407 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.hasSideEffects()
18:29:29.408 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isQualifiedName()
18:29:29.409 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isUnscopedQualifiedName()
18:29:29.410 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.detachFromParent()
18:29:29.410 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.cloneNode()
18:29:29.411 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.cloneTree()
18:29:29.412 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getJsDocBuilderForNode()
18:29:29.413 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isVarArgs()
18:29:29.414 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isOptionalArg()
18:29:29.415 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isSyntheticBlock()
18:29:29.416 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.wasEmptyNode()
18:29:29.416 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getSideEffectFlags()
18:29:29.417 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isOnlyModifiesThisCall()
18:29:29.418 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isNoSideEffectsCall()
18:29:29.418 [pool-17-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isQuotedString()
18:29:29.424 [pool-17-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - Exit
18:29:29.474 [pool-17-thread-1] DEBUG f.i.l.r.s.collect.DataCombiner - [combine] start on 427 elements
18:29:29.739 [pool-17-thread-1] DEBUG f.i.l.r.s.collect.DataCombiner - [combine] end 15725 evaluated elements


========= Info ==========
Nb constants             369
Nb method invocations    51
Nb field access          4
Nb variables             3
Total                    427
Nb evaluated expressions 10946
Init Execution time      870 ms
Collect Execution time   2566 ms
Combine Execution time   315.0 ms
Nb Combination par sec   34749 combinations/sec
Total Execution time     3751 ms
Nb line execution        7
Nb results               1

Results:
1. this.getChildCount() == 0


========================
         Stat
========================
Operators: 
PLUS 8
NE 1
Methods: 
toStringTree() 4
checkTreeEqualsImpl(com.google.javascript.rhino.Node) 1
Variable: 
diff 3
nodeA 2
node2 2
nodeB 2

 & 369 & 51 & 4 & 3 & 427 & 10946 & 3752 ms & 7 &
18:29:29.741 [pool-17-thread-1] INFO  f.i.l.repair.nopol.patch.TestPatch - Applying patch: com.google.javascript.rhino.Node:1369: PRECONDITION this.getChildCount() == 0
18:29:30.348 [pool-17-thread-1] INFO  f.i.l.repair.nopol.patch.TestPatch - Running test suite to check the patch "this.getChildCount() == 0" is working
18:29:30.596 [pool-2-thread-1] INFO  fr.inria.lille.repair.nopol.NoPol - ----INFORMATION----
18:29:30.802 [pool-2-thread-1] INFO  fr.inria.lille.repair.nopol.NoPol - Nb classes : 366
18:29:30.802 [pool-2-thread-1] INFO  fr.inria.lille.repair.nopol.NoPol - Nb methods : 4148
18:29:30.802 [pool-2-thread-1] INFO  fr.inria.lille.repair.nopol.NoPol - Nb Statements Analyzed : 2
18:29:30.802 [pool-2-thread-1] INFO  fr.inria.lille.repair.nopol.NoPol - Nb Statements with Angelic Value Found : 1
18:29:30.802 [pool-2-thread-1] INFO  fr.inria.lille.repair.nopol.NoPol - NoPol Execution time : 68661ms
18:29:30.802 [pool-2-thread-1] INFO  fr.inria.lille.repair.nopol.NoPol - 
18:29:30.802 [pool-2-thread-1] INFO  fr.inria.lille.repair.nopol.NoPol - ----PATCH FOUND----
18:29:30.802 [pool-2-thread-1] INFO  fr.inria.lille.repair.nopol.NoPol - this.getChildCount() == 0
18:29:33.129 [pool-2-thread-1] INFO  fr.inria.lille.repair.nopol.NoPol - Nb test that executes the patch: 7
18:29:33.130 [pool-2-thread-1] INFO  fr.inria.lille.repair.nopol.NoPol - com.google.javascript.rhino.Node:1369: PRECONDITION
18:29:33.164 [pool-2-thread-1] INFO  fr.inria.lille.repair.nopol.NoPol - --- a/src/com/google/javascript/rhino/Node.java
+++ b/src/com/google/javascript/rhino/Node.java
@@ -1368,7 +1368,9 @@
       if (diff != null) {
-        return "Node tree inequality:" +
-            "\nTree1:\n" + toStringTree() +
-            "\n\nTree2:\n" + node2.toStringTree() +
-            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
-            "\n\nSubtree2: " + diff.nodeB.toStringTree();
+        if (this.getChildCount() == 0) {
+          return "Node tree inequality:" +
+          "\nTree1:\n" + toStringTree() +
+          "\n\nTree2:\n" + node2.toStringTree() +
+          "\n\nSubtree1: " + diff.nodeA.toStringTree() +
+          "\n\nSubtree2: " + diff.nodeB.toStringTree();
+        }
       }

PATCH
394.74user 8.53system 1:14.61elapsed 540%CPU (0avgtext+0avgdata 4015004maxresident)k
56944inputs+10112outputs (7major+1942648minor)pagefaults 0swaps


Node: grisou-21.nancy.grid5000.fr



Date: Sat Dec  1 18:29:35 EST 2018

