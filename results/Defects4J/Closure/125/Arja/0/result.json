{
  "repair_end": "2018-12-01 15:16:35.030613", 
  "repair_begin": "2018-12-01 14:47:41.129229", 
  "patches": [
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2156/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:08:53.673757899 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2180/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:09:04.409695307 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_347/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:55:45.210583680 -0500\n@@ -200,9 +200,7 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n-          return caseEquality(condition, blindScope, SHNE);\n         }\n \n       case Token.SHNE:\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2945/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:14:36.115973285 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1130/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:01:22.185524075 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_565/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:57:18.966400808 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_565/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:57:18.966400808 -0500\n@@ -674,12 +674,7 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n-          if (!leftTypeRestricted.canTestForShallowEqualityWith(\n-                  rightTypeRestricted)) {\n-            result = n.getType() == Token.SHEQ ?\n-                TernaryValue.FALSE : TernaryValue.TRUE;\n-          }\n+          this.inExterns = inExterns;\n         }\n \n         if (result != TernaryValue.UNKNOWN) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "Replace", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1762/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:05:59.417366050 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1762/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 09:05:59.417366050 -0500\n@@ -674,12 +674,6 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n-          if (!leftTypeRestricted.canTestForShallowEqualityWith(\n-                  rightTypeRestricted)) {\n-            result = n.getType() == Token.SHEQ ?\n-                TernaryValue.FALSE : TernaryValue.TRUE;\n-          }\n         }\n \n         if (result != TernaryValue.UNKNOWN) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "Delete", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2938/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:14:32.647982577 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2938/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 09:14:32.647982577 -0500\n@@ -674,7 +674,8 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n+          this.inExterns = inExterns;\n+\t\t// SHEQ or SHNE\n           if (!leftTypeRestricted.canTestForShallowEqualityWith(\n                   rightTypeRestricted)) {\n             result = n.getType() == Token.SHEQ ?\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "InsertBefore", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1266/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:02:21.633360839 -0500\n@@ -200,9 +200,7 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n-          return caseEquality(condition, blindScope, SHNE);\n         }\n \n       case Token.SHNE:\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1266/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 09:02:21.633360839 -0500\n@@ -674,7 +674,8 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n+          this.inExterns = inExterns;\n+\t\t// SHEQ or SHNE\n           if (!leftTypeRestricted.canTestForShallowEqualityWith(\n                   rightTypeRestricted)) {\n             result = n.getType() == Token.SHEQ ?\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "InsertBefore", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1919/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:07:08.741494662 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2247/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:09:33.229516014 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_588/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:57:28.766353238 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1656/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:05:13.545307206 -0500\n@@ -200,9 +200,7 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n-          return caseEquality(condition, blindScope, SHNE);\n         }\n \n       case Token.SHNE:\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2405/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:10:42.017195780 -0500\n@@ -200,9 +200,7 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n-          return caseEquality(condition, blindScope, SHNE);\n         }\n \n       case Token.SHNE:\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2405/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 09:10:42.017195780 -0500\n@@ -674,12 +674,7 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n-          if (!leftTypeRestricted.canTestForShallowEqualityWith(\n-                  rightTypeRestricted)) {\n-            result = n.getType() == Token.SHEQ ?\n-                TernaryValue.FALSE : TernaryValue.TRUE;\n-          }\n+          this.inExterns = inExterns;\n         }\n \n         if (result != TernaryValue.UNKNOWN) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "Replace", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1730/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:05:46.273346816 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1730/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 09:05:46.277346822 -0500\n@@ -674,7 +674,8 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n+          this.inExterns = inExterns;\n+\t\t// SHEQ or SHNE\n           if (!leftTypeRestricted.canTestForShallowEqualityWith(\n                   rightTypeRestricted)) {\n             result = n.getType() == Token.SHEQ ?\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "InsertBefore", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2940/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:14:33.499980272 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_406/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:56:10.002661814 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_406/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:56:10.002661814 -0500\n@@ -674,12 +674,6 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n-          if (!leftTypeRestricted.canTestForShallowEqualityWith(\n-                  rightTypeRestricted)) {\n-            result = n.getType() == Token.SHEQ ?\n-                TernaryValue.FALSE : TernaryValue.TRUE;\n-          }\n         }\n \n         if (result != TernaryValue.UNKNOWN) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "Delete", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2822/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:13:40.988152035 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1770/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:06:03.485372363 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1770/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 09:06:03.489372369 -0500\n@@ -674,12 +674,7 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n-          if (!leftTypeRestricted.canTestForShallowEqualityWith(\n-                  rightTypeRestricted)) {\n-            result = n.getType() == Token.SHEQ ?\n-                TernaryValue.FALSE : TernaryValue.TRUE;\n-          }\n+          this.inExterns = inExterns;\n         }\n \n         if (result != TernaryValue.UNKNOWN) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "Replace", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2713/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:12:51.984374550 -0500\n@@ -200,9 +200,7 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n-          return caseEquality(condition, blindScope, SHNE);\n         }\n \n       case Token.SHNE:\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1538/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:04:20.137271495 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2228/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:09:25.045563939 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1382/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:03:10.873290777 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_586/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:57:27.966356984 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_586/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:57:27.966356984 -0500\n@@ -674,7 +674,8 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n+          this.inExterns = inExterns;\n+\t\t// SHEQ or SHNE\n           if (!leftTypeRestricted.canTestForShallowEqualityWith(\n                   rightTypeRestricted)) {\n             result = n.getType() == Token.SHEQ ?\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "InsertBefore", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2212/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:09:18.613603240 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2212/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 09:09:18.613603240 -0500\n@@ -674,12 +674,7 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n-          if (!leftTypeRestricted.canTestForShallowEqualityWith(\n-                  rightTypeRestricted)) {\n-            result = n.getType() == Token.SHEQ ?\n-                TernaryValue.FALSE : TernaryValue.TRUE;\n-          }\n+          this.inExterns = inExterns;\n         }\n \n         if (result != TernaryValue.UNKNOWN) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "Replace", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1698/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:05:32.349328470 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1061/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:00:51.013650889 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1061/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 09:00:51.013650889 -0500\n@@ -674,12 +674,7 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n-          if (!leftTypeRestricted.canTestForShallowEqualityWith(\n-                  rightTypeRestricted)) {\n-            result = n.getType() == Token.SHEQ ?\n-                TernaryValue.FALSE : TernaryValue.TRUE;\n-          }\n+          this.inExterns = inExterns;\n         }\n \n         if (result != TernaryValue.UNKNOWN) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "Replace", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1313/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:02:41.105326786 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1313/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 09:02:41.109326780 -0500\n@@ -674,12 +674,7 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n-          if (!leftTypeRestricted.canTestForShallowEqualityWith(\n-                  rightTypeRestricted)) {\n-            result = n.getType() == Token.SHEQ ?\n-                TernaryValue.FALSE : TernaryValue.TRUE;\n-          }\n+          this.inExterns = inExterns;\n         }\n \n         if (result != TernaryValue.UNKNOWN) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "Replace", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_729/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:58:29.530131874 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1612/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:04:54.457290043 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_3009/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:15:06.331902263 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_687/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:58:11.370185633 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_242/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:54:59.414453883 -0500\n@@ -200,9 +200,7 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n-          return caseEquality(condition, blindScope, SHNE);\n         }\n \n       case Token.SHNE:\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_242/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:54:59.414453883 -0500\n@@ -674,12 +674,7 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n-          if (!leftTypeRestricted.canTestForShallowEqualityWith(\n-                  rightTypeRestricted)) {\n-            result = n.getType() == Token.SHEQ ?\n-                TernaryValue.FALSE : TernaryValue.TRUE;\n-          }\n+          this.inExterns = inExterns;\n         }\n \n         if (result != TernaryValue.UNKNOWN) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "Replace", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2985/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:14:55.055926743 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1523/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:04:13.617269907 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2993/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:14:58.287919489 -0500\n@@ -200,9 +200,7 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n-          return caseEquality(condition, blindScope, SHNE);\n         }\n \n       case Token.SHNE:\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2078/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:08:19.261664035 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2602/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:12:05.064655903 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2602/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 09:12:05.068655876 -0500\n@@ -674,12 +674,7 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n-          if (!leftTypeRestricted.canTestForShallowEqualityWith(\n-                  rightTypeRestricted)) {\n-            result = n.getType() == Token.SHEQ ?\n-                TernaryValue.FALSE : TernaryValue.TRUE;\n-          }\n+          this.inExterns = inExterns;\n         }\n \n         if (result != TernaryValue.UNKNOWN) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "Replace", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2749/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:13:07.868295087 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2627/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:12:15.564586470 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2627/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 09:12:15.564586470 -0500\n@@ -674,7 +674,8 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n+          this.inExterns = inExterns;\n+\t\t// SHEQ or SHNE\n           if (!leftTypeRestricted.canTestForShallowEqualityWith(\n                   rightTypeRestricted)) {\n             result = n.getType() == Token.SHEQ ?\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "InsertBefore", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1885/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:06:54.101464020 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2711/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:12:51.176378795 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1671/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:05:20.077314118 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1671/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 09:05:20.077314118 -0500\n@@ -674,7 +674,8 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n+          this.inExterns = inExterns;\n+\t\t// SHEQ or SHNE\n           if (!leftTypeRestricted.canTestForShallowEqualityWith(\n                   rightTypeRestricted)) {\n             result = n.getType() == Token.SHEQ ?\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "InsertBefore", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2331/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:10:10.213326553 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2818/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:13:39.352158429 -0500\n@@ -200,9 +200,7 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n-          return caseEquality(condition, blindScope, SHNE);\n         }\n \n       case Token.SHNE:\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_456/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:56:33.946668589 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_456/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:56:33.946668589 -0500\n@@ -674,12 +674,7 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n-          if (!leftTypeRestricted.canTestForShallowEqualityWith(\n-                  rightTypeRestricted)) {\n-            result = n.getType() == Token.SHEQ ?\n-                TernaryValue.FALSE : TernaryValue.TRUE;\n-          }\n+          this.inExterns = inExterns;\n         }\n \n         if (result != TernaryValue.UNKNOWN) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "Replace", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1674/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:05:21.733315952 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1083/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:01:00.829607565 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1083/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 09:01:00.833607548 -0500\n@@ -674,7 +674,8 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n+          this.inExterns = inExterns;\n+\t\t// SHEQ or SHNE\n           if (!leftTypeRestricted.canTestForShallowEqualityWith(\n                   rightTypeRestricted)) {\n             result = n.getType() == Token.SHEQ ?\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "InsertBefore", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_678/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:58:07.326198971 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1424/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:03:30.737276613 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1424/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 09:03:30.741276611 -0500\n@@ -674,12 +674,7 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n-          if (!leftTypeRestricted.canTestForShallowEqualityWith(\n-                  rightTypeRestricted)) {\n-            result = n.getType() == Token.SHEQ ?\n-                TernaryValue.FALSE : TernaryValue.TRUE;\n-          }\n+          this.inExterns = inExterns;\n         }\n \n         if (result != TernaryValue.UNKNOWN) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "Replace", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1841/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:06:35.157427006 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1841/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 09:06:35.157427006 -0500\n@@ -674,7 +674,8 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n+          this.inExterns = inExterns;\n+\t\t// SHEQ or SHNE\n           if (!leftTypeRestricted.canTestForShallowEqualityWith(\n                   rightTypeRestricted)) {\n             result = n.getType() == Token.SHEQ ?\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "InsertBefore", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1218/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:02:01.905404598 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_663/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:58:00.814221535 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2147/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:08:49.497746165 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1211/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:01:58.689412668 -0500\n@@ -200,9 +200,7 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n-          return caseEquality(condition, blindScope, SHNE);\n         }\n \n       case Token.SHNE:\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_498/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:56:51.002557148 -0500\n@@ -200,9 +200,7 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n-          return caseEquality(condition, blindScope, SHNE);\n         }\n \n       case Token.SHNE:\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_273/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:55:12.462488795 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2122/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:08:38.921716862 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2122/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 09:08:38.925716873 -0500\n@@ -674,12 +674,7 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n-          if (!leftTypeRestricted.canTestForShallowEqualityWith(\n-                  rightTypeRestricted)) {\n-            result = n.getType() == Token.SHEQ ?\n-                TernaryValue.FALSE : TernaryValue.TRUE;\n-          }\n+          this.inExterns = inExterns;\n         }\n \n         if (result != TernaryValue.UNKNOWN) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "Replace", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2920/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:14:25.024003870 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2920/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 09:14:25.024003870 -0500\n@@ -674,7 +674,8 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n+          this.inExterns = inExterns;\n+\t\t// SHEQ or SHNE\n           if (!leftTypeRestricted.canTestForShallowEqualityWith(\n                   rightTypeRestricted)) {\n             result = n.getType() == Token.SHEQ ?\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "InsertBefore", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2592/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:12:00.944684236 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2827/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:13:43.456142524 -0500\n@@ -200,9 +200,7 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n-          return caseEquality(condition, blindScope, SHNE);\n         }\n \n       case Token.SHNE:\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2124/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:08:39.729719079 -0500\n@@ -200,9 +200,7 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n-          return caseEquality(condition, blindScope, SHNE);\n         }\n \n       case Token.SHNE:\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2660/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:12:29.504500220 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_509/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:56:55.914527384 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_509/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:56:55.918527360 -0500\n@@ -674,7 +674,8 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n+          this.inExterns = inExterns;\n+\t\t// SHEQ or SHNE\n           if (!leftTypeRestricted.canTestForShallowEqualityWith(\n                   rightTypeRestricted)) {\n             result = n.getType() == Token.SHEQ ?\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "InsertBefore", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1849/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:06:38.445433210 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1849/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 09:06:38.449433217 -0500\n@@ -674,7 +674,8 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n+          this.inExterns = inExterns;\n+\t\t// SHEQ or SHNE\n           if (!leftTypeRestricted.canTestForShallowEqualityWith(\n                   rightTypeRestricted)) {\n             result = n.getType() == Token.SHEQ ?\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "InsertBefore", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1499/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:04:02.829268725 -0500\n@@ -200,9 +200,7 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n-          return caseEquality(condition, blindScope, SHNE);\n         }\n \n       case Token.SHNE:\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1216/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:02:01.109406570 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_816/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:59:06.250051599 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1758/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:05:57.765363533 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1758/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 09:05:57.765363533 -0500\n@@ -674,12 +674,7 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n-          if (!leftTypeRestricted.canTestForShallowEqualityWith(\n-                  rightTypeRestricted)) {\n-            result = n.getType() == Token.SHEQ ?\n-                TernaryValue.FALSE : TernaryValue.TRUE;\n-          }\n+          this.inExterns = inExterns;\n         }\n \n         if (result != TernaryValue.UNKNOWN) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "Replace", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_3198/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:16:28.999786438 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_998/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:00:24.105786904 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1429/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:03:33.189275375 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1429/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 09:03:33.189275375 -0500\n@@ -674,7 +674,8 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n+          this.inExterns = inExterns;\n+\t\t// SHEQ or SHNE\n           if (!leftTypeRestricted.canTestForShallowEqualityWith(\n                   rightTypeRestricted)) {\n             result = n.getType() == Token.SHEQ ?\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "InsertBefore", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1923/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:07:10.361498157 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:53:03.490233641 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_619/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:57:41.866295114 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_440/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:56:26.582716480 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2117/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:08:36.477710177 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2117/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 09:08:36.477710177 -0500\n@@ -674,12 +674,7 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n-          if (!leftTypeRestricted.canTestForShallowEqualityWith(\n-                  rightTypeRestricted)) {\n-            result = n.getType() == Token.SHEQ ?\n-                TernaryValue.FALSE : TernaryValue.TRUE;\n-          }\n+          this.inExterns = inExterns;\n         }\n \n         if (result != TernaryValue.UNKNOWN) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "Replace", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1988/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:07:38.141561139 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1988/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 09:07:38.145561149 -0500\n@@ -674,12 +674,7 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n-          if (!leftTypeRestricted.canTestForShallowEqualityWith(\n-                  rightTypeRestricted)) {\n-            result = n.getType() == Token.SHEQ ?\n-                TernaryValue.FALSE : TernaryValue.TRUE;\n-          }\n+          this.inExterns = inExterns;\n         }\n \n         if (result != TernaryValue.UNKNOWN) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "Replace", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2466/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:11:08.093107222 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2466/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 09:11:08.097107186 -0500\n@@ -674,12 +674,6 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n-          if (!leftTypeRestricted.canTestForShallowEqualityWith(\n-                  rightTypeRestricted)) {\n-            result = n.getType() == Token.SHEQ ?\n-                TernaryValue.FALSE : TernaryValue.TRUE;\n-          }\n         }\n \n         if (result != TernaryValue.UNKNOWN) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "Delete", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_865/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:59:27.418020981 -0500\n@@ -200,9 +200,7 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n-          return caseEquality(condition, blindScope, SHNE);\n         }\n \n       case Token.SHNE:\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2869/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:14:02.384074473 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2869/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 09:14:02.384074473 -0500\n@@ -674,12 +674,7 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n-          if (!leftTypeRestricted.canTestForShallowEqualityWith(\n-                  rightTypeRestricted)) {\n-            result = n.getType() == Token.SHEQ ?\n-                TernaryValue.FALSE : TernaryValue.TRUE;\n-          }\n+          this.inExterns = inExterns;\n         }\n \n         if (result != TernaryValue.UNKNOWN) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "Replace", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_513/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:56:57.514517909 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_3196/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:16:28.131787140 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2568/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:11:50.988755323 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2297/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:09:55.573396448 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1128/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:01:21.373526991 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2916/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:14:23.292008879 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1588/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:04:43.917282597 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1376/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:03:08.453293024 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1376/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 09:03:08.453293024 -0500\n@@ -674,7 +674,8 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n+          this.inExterns = inExterns;\n+\t\t// SHEQ or SHNE\n           if (!leftTypeRestricted.canTestForShallowEqualityWith(\n                   rightTypeRestricted)) {\n             result = n.getType() == Token.SHEQ ?\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "InsertBefore", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1307/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:02:38.661330585 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1101/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:01:08.977574008 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1101/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 09:01:08.977574008 -0500\n@@ -674,12 +674,7 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n-          if (!leftTypeRestricted.canTestForShallowEqualityWith(\n-                  rightTypeRestricted)) {\n-            result = n.getType() == Token.SHEQ ?\n-                TernaryValue.FALSE : TernaryValue.TRUE;\n-          }\n+          this.inExterns = inExterns;\n         }\n \n         if (result != TernaryValue.UNKNOWN) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "Replace", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_889/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:59:37.186010381 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2617/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:12:11.496612905 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1143/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:01:28.713501357 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_396/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:56:05.958648724 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_396/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:56:05.958648724 -0500\n@@ -674,12 +674,7 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n-          if (!leftTypeRestricted.canTestForShallowEqualityWith(\n-                  rightTypeRestricted)) {\n-            result = n.getType() == Token.SHEQ ?\n-                TernaryValue.FALSE : TernaryValue.TRUE;\n-          }\n+          this.inExterns = inExterns;\n         }\n \n         if (result != TernaryValue.UNKNOWN) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "Replace", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1018/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:00:32.281742804 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2321/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:10:06.061345723 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2037/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:08:00.473615682 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2037/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 09:08:00.473615682 -0500\n@@ -674,12 +674,6 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n-          if (!leftTypeRestricted.canTestForShallowEqualityWith(\n-                  rightTypeRestricted)) {\n-            result = n.getType() == Token.SHEQ ?\n-                TernaryValue.FALSE : TernaryValue.TRUE;\n-          }\n         }\n \n         if (result != TernaryValue.UNKNOWN) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "Delete", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_3173/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:16:18.435795644 -0500\n@@ -200,9 +200,7 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n-          return caseEquality(condition, blindScope, SHNE);\n         }\n \n       case Token.SHNE:\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1328/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:02:47.817317030 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1328/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 09:02:47.817317030 -0500\n@@ -674,12 +674,7 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n-          if (!leftTypeRestricted.canTestForShallowEqualityWith(\n-                  rightTypeRestricted)) {\n-            result = n.getType() == Token.SHEQ ?\n-                TernaryValue.FALSE : TernaryValue.TRUE;\n-          }\n+          this.inExterns = inExterns;\n         }\n \n         if (result != TernaryValue.UNKNOWN) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "Replace", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_336/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:55:40.278568760 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1700/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:05:33.245329585 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2809/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:13:35.056175530 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2809/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 09:13:35.056175530 -0500\n@@ -674,12 +674,6 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n-          if (!leftTypeRestricted.canTestForShallowEqualityWith(\n-                  rightTypeRestricted)) {\n-            result = n.getType() == Token.SHEQ ?\n-                TernaryValue.FALSE : TernaryValue.TRUE;\n-          }\n         }\n \n         if (result != TernaryValue.UNKNOWN) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "Delete", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_124/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:54:04.654327885 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_124/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:54:04.654327885 -0500\n@@ -674,12 +674,7 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n-          if (!leftTypeRestricted.canTestForShallowEqualityWith(\n-                  rightTypeRestricted)) {\n-            result = n.getType() == Token.SHEQ ?\n-                TernaryValue.FALSE : TernaryValue.TRUE;\n-          }\n+          this.inExterns = inExterns;\n         }\n \n         if (result != TernaryValue.UNKNOWN) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "Replace", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_900/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:59:42.102005852 -0500\n@@ -200,9 +200,7 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n-          return caseEquality(condition, blindScope, SHNE);\n         }\n \n       case Token.SHNE:\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_553/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:57:13.998426313 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2932/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:14:30.147989425 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1506/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:04:06.237268899 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2671/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:12:34.600470317 -0500\n@@ -200,9 +200,7 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n-          return caseEquality(condition, blindScope, SHNE);\n         }\n \n       case Token.SHNE:\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2295/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:09:54.781400414 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_3182/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:16:22.543791889 -0500\n@@ -200,9 +200,7 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n-          return caseEquality(condition, blindScope, SHNE);\n         }\n \n       case Token.SHNE:\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_266/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:55:09.178479845 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2647/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:12:23.704535303 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2159/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:08:55.365757866 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1997/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:07:42.225570865 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1074/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:00:56.701625394 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1415/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:03:26.629278933 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2978/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:14:51.695934496 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_539/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:57:08.070458001 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2458/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:11:04.821118247 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1637/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:05:04.921298880 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_747/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:58:36.878112865 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_747/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:58:36.878112865 -0500\n@@ -674,7 +674,8 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n+          this.inExterns = inExterns;\n+\t\t// SHEQ or SHNE\n           if (!leftTypeRestricted.canTestForShallowEqualityWith(\n                   rightTypeRestricted)) {\n             result = n.getType() == Token.SHEQ ?\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "InsertBefore", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2290/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:09:52.285413042 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1992/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:07:39.761564983 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1105/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:01:10.633567452 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1105/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 09:01:10.633567452 -0500\n@@ -674,7 +674,8 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n+          this.inExterns = inExterns;\n+\t\t// SHEQ or SHNE\n           if (!leftTypeRestricted.canTestForShallowEqualityWith(\n                   rightTypeRestricted)) {\n             result = n.getType() == Token.SHEQ ?\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "InsertBefore", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_784/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:58:53.302075795 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1180/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:01:45.485448666 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1180/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 09:01:45.485448666 -0500\n@@ -674,12 +674,7 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n-          if (!leftTypeRestricted.canTestForShallowEqualityWith(\n-                  rightTypeRestricted)) {\n-            result = n.getType() == Token.SHEQ ?\n-                TernaryValue.FALSE : TernaryValue.TRUE;\n-          }\n+          this.inExterns = inExterns;\n         }\n \n         if (result != TernaryValue.UNKNOWN) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "Replace", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_611/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:57:38.654308803 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_637/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:57:49.158265368 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1510/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:04:07.901269050 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1510/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 09:04:07.905269051 -0500\n@@ -674,12 +674,7 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n-          if (!leftTypeRestricted.canTestForShallowEqualityWith(\n-                  rightTypeRestricted)) {\n-            result = n.getType() == Token.SHEQ ?\n-                TernaryValue.FALSE : TernaryValue.TRUE;\n-          }\n+          this.inExterns = inExterns;\n         }\n \n         if (result != TernaryValue.UNKNOWN) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "Replace", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_46/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:53:27.542264123 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1335/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:02:51.165312529 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1406/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:03:21.553282232 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_782/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:58:52.422077600 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2481/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:11:14.789047130 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2481/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 09:11:14.789047130 -0500\n@@ -674,12 +674,7 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n-          if (!leftTypeRestricted.canTestForShallowEqualityWith(\n-                  rightTypeRestricted)) {\n-            result = n.getType() == Token.SHEQ ?\n-                TernaryValue.FALSE : TernaryValue.TRUE;\n-          }\n+          this.inExterns = inExterns;\n         }\n \n         if (result != TernaryValue.UNKNOWN) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "Replace", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1044/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:00:42.777689775 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1717/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:05:40.597339079 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1717/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 09:05:40.597339079 -0500\n@@ -674,7 +674,8 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n+          this.inExterns = inExterns;\n+\t\t// SHEQ or SHNE\n           if (!leftTypeRestricted.canTestForShallowEqualityWith(\n                   rightTypeRestricted)) {\n             result = n.getType() == Token.SHEQ ?\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "InsertBefore", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2588/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:11:59.288695804 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1034/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:00:38.721709798 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_859/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:59:24.978023964 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_3202/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:16:30.595785177 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1092/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:01:04.925590428 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_902/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:59:43.038005050 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_349/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:55:46.018586144 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_73/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:53:40.202283701 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_73/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:53:40.202283701 -0500\n@@ -674,12 +674,7 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n-          if (!leftTypeRestricted.canTestForShallowEqualityWith(\n-                  rightTypeRestricted)) {\n-            result = n.getType() == Token.SHEQ ?\n-                TernaryValue.FALSE : TernaryValue.TRUE;\n-          }\n+          this.inExterns = inExterns;\n         }\n \n         if (result != TernaryValue.UNKNOWN) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "Replace", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1660/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:05:15.205308915 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_219/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:54:49.366428205 -0500\n@@ -200,9 +200,7 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n-          return caseEquality(condition, blindScope, SHNE);\n         }\n \n       case Token.SHNE:\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_735/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:58:31.946125452 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1578/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:04:39.061279675 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1837/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:06:33.505423927 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1258/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:02:18.329367499 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1645/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:05:08.461302187 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2544/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:11:41.148829336 -0500\n@@ -200,9 +200,7 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n-          return caseEquality(condition, blindScope, SHNE);\n         }\n \n       case Token.SHNE:\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_857/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:59:24.146025015 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2234/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:09:27.509549270 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_978/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:00:15.725834738 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_978/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 09:00:15.729834714 -0500\n@@ -674,12 +674,7 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n-          if (!leftTypeRestricted.canTestForShallowEqualityWith(\n-                  rightTypeRestricted)) {\n-            result = n.getType() == Token.SHEQ ?\n-                TernaryValue.FALSE : TernaryValue.TRUE;\n-          }\n+          this.inExterns = inExterns;\n         }\n \n         if (result != TernaryValue.UNKNOWN) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "Replace", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1209/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:01:57.861414786 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1209/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 09:01:57.865414776 -0500\n@@ -674,7 +674,8 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n+          this.inExterns = inExterns;\n+\t\t// SHEQ or SHNE\n           if (!leftTypeRestricted.canTestForShallowEqualityWith(\n                   rightTypeRestricted)) {\n             result = n.getType() == Token.SHEQ ?\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "InsertBefore", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1921/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:07:09.565496437 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1921/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 09:07:09.569496446 -0500\n@@ -674,12 +674,6 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n-          if (!leftTypeRestricted.canTestForShallowEqualityWith(\n-                  rightTypeRestricted)) {\n-            result = n.getType() == Token.SHEQ ?\n-                TernaryValue.FALSE : TernaryValue.TRUE;\n-          }\n         }\n \n         if (result != TernaryValue.UNKNOWN) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "Delete", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1161/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:01:37.253473526 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1161/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 09:01:37.253473526 -0500\n@@ -674,7 +674,8 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n+          this.inExterns = inExterns;\n+\t\t// SHEQ or SHNE\n           if (!leftTypeRestricted.canTestForShallowEqualityWith(\n                   rightTypeRestricted)) {\n             result = n.getType() == Token.SHEQ ?\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "InsertBefore", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_3204/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:16:31.387784563 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2464/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:11:07.269110574 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1851/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:06:39.253434748 -0500\n@@ -200,9 +200,7 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n-          return caseEquality(condition, blindScope, SHNE);\n         }\n \n       case Token.SHNE:\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2409/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:10:43.653189788 -0500\n@@ -200,9 +200,7 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n-          return caseEquality(condition, blindScope, SHNE);\n         }\n \n       case Token.SHNE:\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_365/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:55:52.822607122 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_840/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:59:16.858034911 -0500\n@@ -200,9 +200,7 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n-          return caseEquality(condition, blindScope, SHNE);\n         }\n \n       case Token.SHNE:\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_25/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:53:17.170249866 -0500\n@@ -200,9 +200,7 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n-          return caseEquality(condition, blindScope, SHNE);\n         }\n \n       case Token.SHNE:\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_189/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:54:34.530392313 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1126/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:01:20.565529912 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1078/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:00:58.389618037 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1078/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 09:00:58.389618037 -0500\n@@ -674,12 +674,7 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n-          if (!leftTypeRestricted.canTestForShallowEqualityWith(\n-                  rightTypeRestricted)) {\n-            result = n.getType() == Token.SHEQ ?\n-                TernaryValue.FALSE : TernaryValue.TRUE;\n-          }\n+          this.inExterns = inExterns;\n         }\n \n         if (result != TernaryValue.UNKNOWN) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "Replace", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1801/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:06:17.341395100 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_3093/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:15:43.043837849 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1365/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:03:03.557297926 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1481/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:03:55.277269010 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1719/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:05:41.421340181 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1719/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 09:05:41.425340187 -0500\n@@ -674,12 +674,7 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n-          if (!leftTypeRestricted.canTestForShallowEqualityWith(\n-                  rightTypeRestricted)) {\n-            result = n.getType() == Token.SHEQ ?\n-                TernaryValue.FALSE : TernaryValue.TRUE;\n-          }\n+          this.inExterns = inExterns;\n         }\n \n         if (result != TernaryValue.UNKNOWN) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "Replace", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1391/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:03:14.965287241 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1391/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 09:03:14.969287237 -0500\n@@ -674,7 +674,8 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n+          this.inExterns = inExterns;\n+\t\t// SHEQ or SHNE\n           if (!leftTypeRestricted.canTestForShallowEqualityWith(\n                   rightTypeRestricted)) {\n             result = n.getType() == Token.SHEQ ?\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "InsertBefore", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1046/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:00:43.601685779 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1046/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 09:00:43.605685760 -0500\n@@ -674,12 +674,7 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n-          if (!leftTypeRestricted.canTestForShallowEqualityWith(\n-                  rightTypeRestricted)) {\n-            result = n.getType() == Token.SHEQ ?\n-                TernaryValue.FALSE : TernaryValue.TRUE;\n-          }\n+          this.inExterns = inExterns;\n         }\n \n         if (result != TernaryValue.UNKNOWN) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "Replace", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2857/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:13:56.376095150 -0500\n@@ -200,9 +200,7 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n-          return caseEquality(condition, blindScope, SHNE);\n         }\n \n       case Token.SHNE:\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2196/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:09:11.857646106 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1036/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:00:39.525705784 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_702/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:58:17.914165118 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_702/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:58:17.914165118 -0500\n@@ -674,7 +674,8 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n+          this.inExterns = inExterns;\n+\t\t// SHEQ or SHNE\n           if (!leftTypeRestricted.canTestForShallowEqualityWith(\n                   rightTypeRestricted)) {\n             result = n.getType() == Token.SHEQ ?\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "InsertBefore", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_517/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:56:59.126508464 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1944/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:07:19.301517805 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2787/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:13:24.700218725 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2168/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:08:59.549728534 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_462/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:56:36.362652024 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_230/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:54:54.462441094 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2470/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:11:09.725092407 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1431/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:03:34.013274983 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1431/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 09:03:34.013274983 -0500\n@@ -674,7 +674,8 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n+          this.inExterns = inExterns;\n+\t\t// SHEQ or SHNE\n           if (!leftTypeRestricted.canTestForShallowEqualityWith(\n                   rightTypeRestricted)) {\n             result = n.getType() == Token.SHEQ ?\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "InsertBefore", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1028/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:00:36.317721943 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_3056/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:15:27.063863128 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_3056/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 09:15:27.063863128 -0500\n@@ -674,7 +674,8 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n+          this.inExterns = inExterns;\n+\t\t// SHEQ or SHNE\n           if (!leftTypeRestricted.canTestForShallowEqualityWith(\n                   rightTypeRestricted)) {\n             result = n.getType() == Token.SHEQ ?\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "InsertBefore", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2085/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:08:22.533672673 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2085/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 09:08:22.533672673 -0500\n@@ -674,12 +674,6 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n-          if (!leftTypeRestricted.canTestForShallowEqualityWith(\n-                  rightTypeRestricted)) {\n-            result = n.getType() == Token.SHEQ ?\n-                TernaryValue.FALSE : TernaryValue.TRUE;\n-          }\n         }\n \n         if (result != TernaryValue.UNKNOWN) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "Delete", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1272/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:02:24.053356125 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_759/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:58:42.690098908 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_759/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:58:42.694098899 -0500\n@@ -674,12 +674,6 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n-          if (!leftTypeRestricted.canTestForShallowEqualityWith(\n-                  rightTypeRestricted)) {\n-            result = n.getType() == Token.SHEQ ?\n-                TernaryValue.FALSE : TernaryValue.TRUE;\n-          }\n         }\n \n         if (result != TernaryValue.UNKNOWN) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "Delete", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_504/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:56:53.442542240 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2532/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:11:36.184868135 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2532/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 09:11:36.184868135 -0500\n@@ -674,12 +674,7 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n-          if (!leftTypeRestricted.canTestForShallowEqualityWith(\n-                  rightTypeRestricted)) {\n-            result = n.getType() == Token.SHEQ ?\n-                TernaryValue.FALSE : TernaryValue.TRUE;\n-          }\n+          this.inExterns = inExterns;\n         }\n \n         if (result != TernaryValue.UNKNOWN) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "Replace", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2835/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:13:46.868129618 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2835/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 09:13:46.868129618 -0500\n@@ -674,12 +674,7 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n-          if (!leftTypeRestricted.canTestForShallowEqualityWith(\n-                  rightTypeRestricted)) {\n-            result = n.getType() == Token.SHEQ ?\n-                TernaryValue.FALSE : TernaryValue.TRUE;\n-          }\n+          this.inExterns = inExterns;\n         }\n \n         if (result != TernaryValue.UNKNOWN) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "Replace", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_3125/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:15:56.563819572 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_3125/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 09:15:56.563819572 -0500\n@@ -674,12 +674,7 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n-          if (!leftTypeRestricted.canTestForShallowEqualityWith(\n-                  rightTypeRestricted)) {\n-            result = n.getType() == Token.SHEQ ?\n-                TernaryValue.FALSE : TernaryValue.TRUE;\n-          }\n+          this.inExterns = inExterns;\n         }\n \n         if (result != TernaryValue.UNKNOWN) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "Replace", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1256/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:02:17.525369160 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1256/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 09:02:17.525369160 -0500\n@@ -674,12 +674,7 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n-          if (!leftTypeRestricted.canTestForShallowEqualityWith(\n-                  rightTypeRestricted)) {\n-            result = n.getType() == Token.SHEQ ?\n-                TernaryValue.FALSE : TernaryValue.TRUE;\n-          }\n+          this.inExterns = inExterns;\n         }\n \n         if (result != TernaryValue.UNKNOWN) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "Replace", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_574/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:57:23.030380643 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1489/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:03:58.673268766 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2596/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:12:02.612672694 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2969/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:14:47.423944662 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2969/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 09:14:47.423944662 -0500\n@@ -674,12 +674,7 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n-          if (!leftTypeRestricted.canTestForShallowEqualityWith(\n-                  rightTypeRestricted)) {\n-            result = n.getType() == Token.SHEQ ?\n-                TernaryValue.FALSE : TernaryValue.TRUE;\n-          }\n+          this.inExterns = inExterns;\n         }\n \n         if (result != TernaryValue.UNKNOWN) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "Replace", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_921/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:59:51.249990537 -0500\n@@ -200,9 +200,7 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n-          return caseEquality(condition, blindScope, SHNE);\n         }\n \n       case Token.SHNE:\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_921/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:59:51.249990537 -0500\n@@ -674,7 +674,8 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n+          this.inExterns = inExterns;\n+\t\t// SHEQ or SHNE\n           if (!leftTypeRestricted.canTestForShallowEqualityWith(\n                   rightTypeRestricted)) {\n             result = n.getType() == Token.SHEQ ?\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "InsertBefore", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1299/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:02:35.437335803 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2087/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:08:23.341674816 -0500\n@@ -200,9 +200,7 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n-          return caseEquality(condition, blindScope, SHNE);\n         }\n \n       case Token.SHNE:\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1171/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:01:41.357460896 -0500\n@@ -200,9 +200,7 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n-          return caseEquality(condition, blindScope, SHNE);\n         }\n \n       case Token.SHNE:\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1171/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 09:01:41.357460896 -0500\n@@ -674,12 +674,7 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n-          if (!leftTypeRestricted.canTestForShallowEqualityWith(\n-                  rightTypeRestricted)) {\n-            result = n.getType() == Token.SHEQ ?\n-                TernaryValue.FALSE : TernaryValue.TRUE;\n-          }\n+          this.inExterns = inExterns;\n         }\n \n         if (result != TernaryValue.UNKNOWN) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "Replace", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_244/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:55:00.258456088 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_244/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:55:00.258456088 -0500\n@@ -674,7 +674,8 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n+          this.inExterns = inExterns;\n+\t\t// SHEQ or SHNE\n           if (!leftTypeRestricted.canTestForShallowEqualityWith(\n                   rightTypeRestricted)) {\n             result = n.getType() == Token.SHEQ ?\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "InsertBefore", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2094/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:08:26.541683340 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_426/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:56:19.166691956 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2018/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:07:52.049594719 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2631/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:12:17.196576026 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2631/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 09:12:17.200576001 -0500\n@@ -674,7 +674,8 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n+          this.inExterns = inExterns;\n+\t\t// SHEQ or SHNE\n           if (!leftTypeRestricted.canTestForShallowEqualityWith(\n                   rightTypeRestricted)) {\n             result = n.getType() == Token.SHEQ ?\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "InsertBefore", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2899/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:14:15.844031138 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1297/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:02:34.633337139 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_627/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:57:45.114281639 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_812/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:59:04.642054373 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2372/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:10:28.105249582 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1750/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:05:54.481358615 -0500\n@@ -200,9 +200,7 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n-          return caseEquality(condition, blindScope, SHNE);\n         }\n \n       case Token.SHNE:\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_883/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:59:34.770012804 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_883/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:59:34.774012799 -0500\n@@ -674,12 +674,7 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n-          if (!leftTypeRestricted.canTestForShallowEqualityWith(\n-                  rightTypeRestricted)) {\n-            result = n.getType() == Token.SHEQ ?\n-                TernaryValue.FALSE : TernaryValue.TRUE;\n-          }\n+          this.inExterns = inExterns;\n         }\n \n         if (result != TernaryValue.UNKNOWN) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "Replace", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1289/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:02:31.393342679 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_706/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:58:19.546160208 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2092/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:08:25.749681224 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2904/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:14:18.340023547 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2849/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:13:52.984107195 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2204/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:09:15.261624302 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2204/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 09:09:15.261624302 -0500\n@@ -674,12 +674,7 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n-          if (!leftTypeRestricted.canTestForShallowEqualityWith(\n-                  rightTypeRestricted)) {\n-            result = n.getType() == Token.SHEQ ?\n-                TernaryValue.FALSE : TernaryValue.TRUE;\n-          }\n+          this.inExterns = inExterns;\n         }\n \n         if (result != TernaryValue.UNKNOWN) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "Replace", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_466/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:56:38.038640680 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_466/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:56:38.038640680 -0500\n@@ -674,12 +674,6 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n-          if (!leftTypeRestricted.canTestForShallowEqualityWith(\n-                  rightTypeRestricted)) {\n-            result = n.getType() == Token.SHEQ ?\n-                TernaryValue.FALSE : TernaryValue.TRUE;\n-          }\n         }\n \n         if (result != TernaryValue.UNKNOWN) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "Delete", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_3099/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:15:45.563834234 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_3099/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 09:15:45.567834227 -0500\n@@ -674,12 +674,7 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n-          if (!leftTypeRestricted.canTestForShallowEqualityWith(\n-                  rightTypeRestricted)) {\n-            result = n.getType() == Token.SHEQ ?\n-                TernaryValue.FALSE : TernaryValue.TRUE;\n-          }\n+          this.inExterns = inExterns;\n         }\n \n         if (result != TernaryValue.UNKNOWN) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "Replace", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1076/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:00:57.533621757 -0500\n@@ -200,9 +200,7 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n-          return caseEquality(condition, blindScope, SHNE);\n         }\n \n       case Token.SHNE:\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1076/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 09:00:57.533621757 -0500\n@@ -674,12 +674,7 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n-          if (!leftTypeRestricted.canTestForShallowEqualityWith(\n-                  rightTypeRestricted)) {\n-            result = n.getType() == Token.SHEQ ?\n-                TernaryValue.FALSE : TernaryValue.TRUE;\n-          }\n+          this.inExterns = inExterns;\n         }\n \n         if (result != TernaryValue.UNKNOWN) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "Replace", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1891/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:06:56.545469016 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_379/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:55:58.526625013 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1063/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:00:51.809647257 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_972/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:00:13.217849583 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_18/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:53:12.838244405 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1030/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:00:37.125717836 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_472/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:56:40.450624587 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2574/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:11:53.468737268 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2293/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:09:53.965404519 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2413/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:10:45.285183876 -0500\n@@ -200,9 +200,7 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n-          return caseEquality(condition, blindScope, SHNE);\n         }\n \n       case Token.SHNE:\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2413/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 09:10:45.285183876 -0500\n@@ -674,12 +674,7 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n-          if (!leftTypeRestricted.canTestForShallowEqualityWith(\n-                  rightTypeRestricted)) {\n-            result = n.getType() == Token.SHEQ ?\n-                TernaryValue.FALSE : TernaryValue.TRUE;\n-          }\n+          this.inExterns = inExterns;\n         }\n \n         if (result != TernaryValue.UNKNOWN) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "Replace", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_990/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:00:20.793805486 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2364/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:10:24.873262824 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2339/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:10:13.429312049 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2339/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 09:10:13.433312032 -0500\n@@ -674,7 +674,8 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n+          this.inExterns = inExterns;\n+\t\t// SHEQ or SHNE\n           if (!leftTypeRestricted.canTestForShallowEqualityWith(\n                   rightTypeRestricted)) {\n             result = n.getType() == Token.SHEQ ?\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "InsertBefore", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1246/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:02:13.377377977 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1622/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:04:58.469293264 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1833/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:06:31.893420945 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_275/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:55:13.262490992 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_297/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:55:23.062518405 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_260/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:55:06.746473287 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1353/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:02:58.617303366 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_942/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:00:00.177930841 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2971/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:14:48.231942712 -0500\n@@ -200,9 +200,7 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n-          return caseEquality(condition, blindScope, SHNE);\n         }\n \n       case Token.SHNE:\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1516/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:04:10.333269353 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1202/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:01:54.545423463 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1202/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 09:01:54.549423453 -0500\n@@ -674,7 +674,8 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n+          this.inExterns = inExterns;\n+\t\t// SHEQ or SHNE\n           if (!leftTypeRestricted.canTestForShallowEqualityWith(\n                   rightTypeRestricted)) {\n             result = n.getType() == Token.SHEQ ?\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "InsertBefore", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2141/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:08:47.001739195 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2133/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:08:43.765730209 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_68/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:53:37.630279535 -0500\n@@ -200,9 +200,7 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n-          return caseEquality(condition, blindScope, SHNE);\n         }\n \n       case Token.SHNE:\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_68/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:53:37.630279535 -0500\n@@ -674,12 +674,7 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n-          if (!leftTypeRestricted.canTestForShallowEqualityWith(\n-                  rightTypeRestricted)) {\n-            result = n.getType() == Token.SHEQ ?\n-                TernaryValue.FALSE : TernaryValue.TRUE;\n-          }\n+          this.inExterns = inExterns;\n         }\n \n         if (result != TernaryValue.UNKNOWN) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "Replace", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_651/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:57:54.982242903 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_808/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:59:03.046057187 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_871/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:59:29.834018157 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2564/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:11:49.400767015 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2801/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:13:30.808192910 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1305/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:02:37.853331871 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2615/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:12:10.692618198 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1395/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:03:16.653285879 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1395/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 09:03:16.653285879 -0500\n@@ -674,12 +674,7 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n-          if (!leftTypeRestricted.canTestForShallowEqualityWith(\n-                  rightTypeRestricted)) {\n-            result = n.getType() == Token.SHEQ ?\n-                TernaryValue.FALSE : TernaryValue.TRUE;\n-          }\n+          this.inExterns = inExterns;\n         }\n \n         if (result != TernaryValue.UNKNOWN) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "Replace", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1293/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:02:33.001339897 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2007/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:07:47.073582556 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_3033/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:15:16.379882372 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2250/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:09:34.869506683 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2250/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 09:09:34.873506660 -0500\n@@ -674,7 +674,8 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n+          this.inExterns = inExterns;\n+\t\t// SHEQ or SHNE\n           if (!leftTypeRestricted.canTestForShallowEqualityWith(\n                   rightTypeRestricted)) {\n             result = n.getType() == Token.SHEQ ?\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "InsertBefore", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_667/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:58:02.422215838 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1876/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:06:49.961455671 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1876/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 09:06:49.961455671 -0500\n@@ -674,7 +674,8 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n+          this.inExterns = inExterns;\n+\t\t// SHEQ or SHNE\n           if (!leftTypeRestricted.canTestForShallowEqualityWith(\n                   rightTypeRestricted)) {\n             result = n.getType() == Token.SHEQ ?\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "InsertBefore", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1315/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:02:41.961325486 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1315/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 09:02:41.965325480 -0500\n@@ -674,12 +674,7 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n-          if (!leftTypeRestricted.canTestForShallowEqualityWith(\n-                  rightTypeRestricted)) {\n-            result = n.getType() == Token.SHEQ ?\n-                TernaryValue.FALSE : TernaryValue.TRUE;\n-          }\n+          this.inExterns = inExterns;\n         }\n \n         if (result != TernaryValue.UNKNOWN) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "Replace", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_388/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:56:02.618638013 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_388/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:56:02.622638025 -0500\n@@ -674,7 +674,8 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n+          this.inExterns = inExterns;\n+\t\t// SHEQ or SHNE\n           if (!leftTypeRestricted.canTestForShallowEqualityWith(\n                   rightTypeRestricted)) {\n             result = n.getType() == Token.SHEQ ?\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "InsertBefore", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_3190/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:16:25.751789114 -0500\n@@ -200,9 +200,7 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n-          return caseEquality(condition, blindScope, SHNE);\n         }\n \n       case Token.SHNE:\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2163/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:08:57.077745778 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_3082/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:15:38.047845315 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1521/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:04:12.825269757 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1521/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 09:04:12.825269757 -0500\n@@ -674,12 +674,7 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n-          if (!leftTypeRestricted.canTestForShallowEqualityWith(\n-                  rightTypeRestricted)) {\n-            result = n.getType() == Token.SHEQ ?\n-                TernaryValue.FALSE : TernaryValue.TRUE;\n-          }\n+          this.inExterns = inExterns;\n         }\n \n         if (result != TernaryValue.UNKNOWN) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "Replace", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2272/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:09:44.933451374 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2739/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:13:02.844319421 -0500\n@@ -200,9 +200,7 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n-          return caseEquality(condition, blindScope, SHNE);\n         }\n \n       case Token.SHNE:\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_3148/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:16:07.579806677 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1240/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:02:10.949383334 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_721/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:58:26.290140747 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_35/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:53:21.458255562 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2252/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:09:35.681502098 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1883/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:06:53.293462380 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1883/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 09:06:53.297462388 -0500\n@@ -674,7 +674,8 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n+          this.inExterns = inExterns;\n+\t\t// SHEQ or SHNE\n           if (!leftTypeRestricted.canTestForShallowEqualityWith(\n                   rightTypeRestricted)) {\n             result = n.getType() == Token.SHEQ ?\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "InsertBefore", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2485/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:11:16.413032853 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2926/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:14:27.591996562 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2662/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:12:30.308495446 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_91/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:53:49.546299623 -0500\n@@ -200,9 +200,7 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n-          return caseEquality(condition, blindScope, SHNE);\n         }\n \n       case Token.SHNE:\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_91/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:53:49.546299623 -0500\n@@ -674,12 +674,6 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n-          if (!leftTypeRestricted.canTestForShallowEqualityWith(\n-                  rightTypeRestricted)) {\n-            result = n.getType() == Token.SHEQ ?\n-                TernaryValue.FALSE : TernaryValue.TRUE;\n-          }\n         }\n \n         if (result != TernaryValue.UNKNOWN) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "Delete", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_3194/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:16:27.339787789 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_334/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:55:39.482566372 -0500\n@@ -200,9 +200,7 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n-          return caseEquality(condition, blindScope, SHNE);\n         }\n \n       case Token.SHNE:\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1614/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:04:55.261290671 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2689/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:12:41.992428431 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2715/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:12:52.808370246 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_716/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:58:23.846147643 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_716/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:58:23.846147643 -0500\n@@ -674,7 +674,8 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n+          this.inExterns = inExterns;\n+\t\t// SHEQ or SHNE\n           if (!leftTypeRestricted.canTestForShallowEqualityWith(\n                   rightTypeRestricted)) {\n             result = n.getType() == Token.SHEQ ?\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "InsertBefore", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1453/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:03:42.957271515 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1397/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:03:17.477285234 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1397/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 09:03:17.481285231 -0500\n@@ -674,12 +674,7 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n-          if (!leftTypeRestricted.canTestForShallowEqualityWith(\n-                  rightTypeRestricted)) {\n-            result = n.getType() == Token.SHEQ ?\n-                TernaryValue.FALSE : TernaryValue.TRUE;\n-          }\n+          this.inExterns = inExterns;\n         }\n \n         if (result != TernaryValue.UNKNOWN) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "Replace", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_633/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:57:47.542271806 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_955/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:00:05.905894296 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_955/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 09:00:05.909894270 -0500\n@@ -674,12 +674,6 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n-          if (!leftTypeRestricted.canTestForShallowEqualityWith(\n-                  rightTypeRestricted)) {\n-            result = n.getType() == Token.SHEQ ?\n-                TernaryValue.FALSE : TernaryValue.TRUE;\n-          }\n         }\n \n         if (result != TernaryValue.UNKNOWN) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "Delete", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2873/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:14:04.084068773 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1317/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:02:42.761324288 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2976/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:14:50.891936382 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1756/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:05:56.937362282 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1777/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:06:06.725377510 -0500\n@@ -200,9 +200,7 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n-          return caseEquality(condition, blindScope, SHNE);\n         }\n \n       case Token.SHNE:\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2357/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:10:21.525276846 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1917/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:07:07.933492926 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1917/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 09:07:07.937492935 -0500\n@@ -674,12 +674,6 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n-          if (!leftTypeRestricted.canTestForShallowEqualityWith(\n-                  rightTypeRestricted)) {\n-            result = n.getType() == Token.SHEQ ?\n-                TernaryValue.FALSE : TernaryValue.TRUE;\n-          }\n         }\n \n         if (result != TernaryValue.UNKNOWN) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "Delete", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_580/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:57:25.506368667 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1635/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:05:04.113298148 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2214/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:09:19.409598297 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1115/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:01:14.781551401 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1115/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 09:01:14.781551401 -0500\n@@ -674,12 +674,6 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n-          if (!leftTypeRestricted.canTestForShallowEqualityWith(\n-                  rightTypeRestricted)) {\n-            result = n.getType() == Token.SHEQ ?\n-                TernaryValue.FALSE : TernaryValue.TRUE;\n-          }\n         }\n \n         if (result != TernaryValue.UNKNOWN) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "Delete", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2344/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:10:15.889301154 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2619/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:12:12.296607659 -0500\n@@ -200,9 +200,7 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n-          return caseEquality(condition, blindScope, SHNE);\n         }\n \n       case Token.SHNE:\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_324/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:55:35.410554246 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_324/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:55:35.414554258 -0500\n@@ -674,12 +674,7 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n-          if (!leftTypeRestricted.canTestForShallowEqualityWith(\n-                  rightTypeRestricted)) {\n-            result = n.getType() == Token.SHEQ ?\n-                TernaryValue.FALSE : TernaryValue.TRUE;\n-          }\n+          this.inExterns = inExterns;\n         }\n \n         if (result != TernaryValue.UNKNOWN) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "Replace", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2667/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:12:32.944479939 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_909/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:59:46.398002326 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1573/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:04:36.589278315 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1573/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 09:04:36.589278315 -0500\n@@ -674,7 +674,8 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n+          this.inExterns = inExterns;\n+\t\t// SHEQ or SHNE\n           if (!leftTypeRestricted.canTestForShallowEqualityWith(\n                   rightTypeRestricted)) {\n             result = n.getType() == Token.SHEQ ?\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "InsertBefore", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_3186/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:16:24.127790501 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2829/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:13:44.368139046 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2829/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 09:13:44.368139046 -0500\n@@ -674,7 +674,8 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n+          this.inExterns = inExterns;\n+\t\t// SHEQ or SHNE\n           if (!leftTypeRestricted.canTestForShallowEqualityWith(\n                   rightTypeRestricted)) {\n             result = n.getType() == Token.SHEQ ?\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "InsertBefore", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1295/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:02:33.825338497 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_281/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:55:15.750497862 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_281/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:55:15.754497874 -0500\n@@ -674,12 +674,7 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n-          if (!leftTypeRestricted.canTestForShallowEqualityWith(\n-                  rightTypeRestricted)) {\n-            result = n.getType() == Token.SHEQ ?\n-                TernaryValue.FALSE : TernaryValue.TRUE;\n-          }\n+          this.inExterns = inExterns;\n         }\n \n         if (result != TernaryValue.UNKNOWN) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "Replace", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1805/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:06:19.781399296 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_174/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:54:27.958377214 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1618/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:04:56.877291960 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_163/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:54:23.034366235 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_163/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:54:23.038366244 -0500\n@@ -674,12 +674,7 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n-          if (!leftTypeRestricted.canTestForShallowEqualityWith(\n-                  rightTypeRestricted)) {\n-            result = n.getType() == Token.SHEQ ?\n-                TernaryValue.FALSE : TernaryValue.TRUE;\n-          }\n+          this.inExterns = inExterns;\n         }\n \n         if (result != TernaryValue.UNKNOWN) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "Replace", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_563/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:57:18.122405076 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_582/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:57:26.334364710 -0500\n@@ -200,9 +200,7 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n-          return caseEquality(condition, blindScope, SHNE);\n         }\n \n       case Token.SHNE:\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_582/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:57:26.338364691 -0500\n@@ -674,7 +674,8 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n+          this.inExterns = inExterns;\n+\t\t// SHEQ or SHNE\n           if (!leftTypeRestricted.canTestForShallowEqualityWith(\n                   rightTypeRestricted)) {\n             result = n.getType() == Token.SHEQ ?\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "InsertBefore", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1937/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:07:16.061510613 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1371/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:03:06.009295409 -0500\n@@ -200,9 +200,7 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n-          return caseEquality(condition, blindScope, SHNE);\n         }\n \n       case Token.SHNE:\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1371/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 09:03:06.013295404 -0500\n@@ -674,7 +674,8 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n+          this.inExterns = inExterns;\n+\t\t// SHEQ or SHNE\n           if (!leftTypeRestricted.canTestForShallowEqualityWith(\n                   rightTypeRestricted)) {\n             result = n.getType() == Token.SHEQ ?\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "InsertBefore", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2777/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:13:20.432237352 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1464/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:03:47.841270213 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_398/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:56:06.754651291 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2885/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:14:10.000049452 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_543/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:57:09.746448905 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_543/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:57:09.750448884 -0500\n@@ -674,7 +674,8 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n+          this.inExterns = inExterns;\n+\t\t// SHEQ or SHNE\n           if (!leftTypeRestricted.canTestForShallowEqualityWith(\n                   rightTypeRestricted)) {\n             result = n.getType() == Token.SHEQ ?\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "InsertBefore", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_150/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:54:17.134353467 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1373/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:03:06.809294616 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2546/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:11:42.052822377 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_547/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:57:11.366440215 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1553/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:04:26.673273732 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1870/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:06:47.501450779 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_710/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:58:21.282155068 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1059/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:00:50.177654731 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2912/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:14:21.620013772 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1186/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:01:47.969441532 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_851/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:59:21.742028142 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2335/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:10:11.813319299 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1566/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:04:33.309276644 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1566/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 09:04:33.313276645 -0500\n@@ -674,12 +674,7 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n-          if (!leftTypeRestricted.canTestForShallowEqualityWith(\n-                  rightTypeRestricted)) {\n-            result = n.getType() == Token.SHEQ ?\n-                TernaryValue.FALSE : TernaryValue.TRUE;\n-          }\n+          this.inExterns = inExterns;\n         }\n \n         if (result != TernaryValue.UNKNOWN) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "Replace", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2995/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:14:59.199917473 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2995/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 09:14:59.203917464 -0500\n@@ -674,12 +674,6 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n-          if (!leftTypeRestricted.canTestForShallowEqualityWith(\n-                  rightTypeRestricted)) {\n-            result = n.getType() == Token.SHEQ ?\n-                TernaryValue.FALSE : TernaryValue.TRUE;\n-          }\n         }\n \n         if (result != TernaryValue.UNKNOWN) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "Delete", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1512/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:04:08.701269140 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1213/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:01:59.513410575 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1213/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 09:01:59.517410566 -0500\n@@ -674,7 +674,8 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n+          this.inExterns = inExterns;\n+\t\t// SHEQ or SHNE\n           if (!leftTypeRestricted.canTestForShallowEqualityWith(\n                   rightTypeRestricted)) {\n             result = n.getType() == Token.SHEQ ?\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "InsertBefore", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1590/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:04:44.721283112 -0500\n@@ -200,9 +200,7 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n-          return caseEquality(condition, blindScope, SHNE);\n         }\n \n       case Token.SHNE:\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1153/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:01:33.717484793 -0500\n@@ -200,9 +200,7 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n-          return caseEquality(condition, blindScope, SHNE);\n         }\n \n       case Token.SHNE:\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1793/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:06:14.105389623 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1793/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 09:06:14.105389623 -0500\n@@ -674,7 +674,8 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n+          this.inExterns = inExterns;\n+\t\t// SHEQ or SHNE\n           if (!leftTypeRestricted.canTestForShallowEqualityWith(\n                   rightTypeRestricted)) {\n             result = n.getType() == Token.SHEQ ?\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "InsertBefore", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2987/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:14:55.863924912 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_106/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:53:56.198311691 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_3115/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:15:52.379824935 -0500\n@@ -200,9 +200,7 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n-          return caseEquality(condition, blindScope, SHNE);\n         }\n \n       case Token.SHNE:\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_3052/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:15:25.155866425 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_615/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:57:40.250301955 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_984/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:00:18.293819791 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_984/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 09:00:18.293819791 -0500\n@@ -674,12 +674,7 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n-          if (!leftTypeRestricted.canTestForShallowEqualityWith(\n-                  rightTypeRestricted)) {\n-            result = n.getType() == Token.SHEQ ?\n-                TernaryValue.FALSE : TernaryValue.TRUE;\n-          }\n+          this.inExterns = inExterns;\n         }\n \n         if (result != TernaryValue.UNKNOWN) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "Replace", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2309/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:10:00.369372840 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1178/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:01:44.657451081 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_53/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:53:30.930269131 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1133/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:01:23.809518303 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_3062/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:15:29.587858864 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_322/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:55:34.578551787 -0500\n@@ -200,9 +200,7 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n-          return caseEquality(condition, blindScope, SHNE);\n         }\n \n       case Token.SHNE:\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2424/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:10:50.253166296 -0500\n@@ -200,9 +200,7 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n-          return caseEquality(condition, blindScope, SHNE);\n         }\n \n       case Token.SHNE:\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2424/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 09:10:50.253166296 -0500\n@@ -674,12 +674,7 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n-          if (!leftTypeRestricted.canTestForShallowEqualityWith(\n-                  rightTypeRestricted)) {\n-            result = n.getType() == Token.SHEQ ?\n-                TernaryValue.FALSE : TernaryValue.TRUE;\n-          }\n+          this.inExterns = inExterns;\n         }\n \n         if (result != TernaryValue.UNKNOWN) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "Replace", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1437/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:03:36.485273884 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2314/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:10:02.809361098 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_929/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:59:54.505968376 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1032/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:00:37.921713815 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1706/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:05:35.717332709 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_982/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:00:17.405824931 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2154/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:08:52.837755542 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2656/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:12:27.852510097 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_402/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:56:08.362656491 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_3044/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:15:21.815872341 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_3060/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:15:28.763860244 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_3060/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 09:15:28.763860244 -0500\n@@ -674,7 +674,8 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n+          this.inExterns = inExterns;\n+\t\t// SHEQ or SHNE\n           if (!leftTypeRestricted.canTestForShallowEqualityWith(\n                   rightTypeRestricted)) {\n             result = n.getType() == Token.SHEQ ?\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "InsertBefore", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_853/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:59:22.538027093 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1287/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:02:30.585344098 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_776/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:58:50.002082657 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1120/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:01:17.341541763 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1120/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 09:01:17.341541763 -0500\n@@ -674,12 +674,7 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n-          if (!leftTypeRestricted.canTestForShallowEqualityWith(\n-                  rightTypeRestricted)) {\n-            result = n.getType() == Token.SHEQ ?\n-                TernaryValue.FALSE : TernaryValue.TRUE;\n-          }\n+          this.inExterns = inExterns;\n         }\n \n         if (result != TernaryValue.UNKNOWN) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "Replace", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2337/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:10:12.605315738 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1107/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:01:11.521563972 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_917/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:59:49.613999613 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_917/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:59:49.613999613 -0500\n@@ -674,7 +674,8 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n+          this.inExterns = inExterns;\n+\t\t// SHEQ or SHNE\n           if (!leftTypeRestricted.canTestForShallowEqualityWith(\n                   rightTypeRestricted)) {\n             result = n.getType() == Token.SHEQ ?\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "InsertBefore", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2833/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:13:46.008132841 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2833/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 09:13:46.008132841 -0500\n@@ -674,12 +674,7 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n-          if (!leftTypeRestricted.canTestForShallowEqualityWith(\n-                  rightTypeRestricted)) {\n-            result = n.getType() == Token.SHEQ ?\n-                TernaryValue.FALSE : TernaryValue.TRUE;\n-          }\n+          this.inExterns = inExterns;\n         }\n \n         if (result != TernaryValue.UNKNOWN) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "Replace", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_3058/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:15:27.887861724 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1789/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:06:12.465386886 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_3007/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:15:05.515903958 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2280/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:09:48.205434104 -0500\n@@ -200,9 +200,7 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n-          return caseEquality(condition, blindScope, SHNE);\n         }\n \n       case Token.SHNE:\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1451/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:03:42.145271772 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_201/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:54:40.306405993 -0500\n@@ -200,9 +200,7 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n-          return caseEquality(condition, blindScope, SHNE);\n         }\n \n       case Token.SHNE:\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_3021/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:15:11.395892016 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_3021/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 09:15:11.399892008 -0500\n@@ -674,12 +674,6 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n-          if (!leftTypeRestricted.canTestForShallowEqualityWith(\n-                  rightTypeRestricted)) {\n-            result = n.getType() == Token.SHEQ ?\n-                TernaryValue.FALSE : TernaryValue.TRUE;\n-          }\n         }\n \n         if (result != TernaryValue.UNKNOWN) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "Delete", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_3113/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:15:51.519826069 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_289/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:55:19.826509250 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_289/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:55:19.830509261 -0500\n@@ -674,7 +674,8 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n+          this.inExterns = inExterns;\n+\t\t// SHEQ or SHNE\n           if (!leftTypeRestricted.canTestForShallowEqualityWith(\n                   rightTypeRestricted)) {\n             result = n.getType() == Token.SHEQ ?\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "InsertBefore", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2176/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:09:02.781706335 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2176/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 09:09:02.785706308 -0500\n@@ -674,12 +674,7 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n-          if (!leftTypeRestricted.canTestForShallowEqualityWith(\n-                  rightTypeRestricted)) {\n-            result = n.getType() == Token.SHEQ ?\n-                TernaryValue.FALSE : TernaryValue.TRUE;\n-          }\n+          this.inExterns = inExterns;\n         }\n \n         if (result != TernaryValue.UNKNOWN) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "Replace", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_3208/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:16:32.983783348 -0500\n@@ -200,9 +200,7 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n-          return caseEquality(condition, blindScope, SHNE);\n         }\n \n       case Token.SHNE:\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_116/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:54:00.334319494 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1421/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:03:29.049277528 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_129/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:54:07.178332899 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_129/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:54:07.178332899 -0500\n@@ -674,12 +674,6 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n-          if (!leftTypeRestricted.canTestForShallowEqualityWith(\n-                  rightTypeRestricted)) {\n-            result = n.getType() == Token.SHEQ ?\n-                TernaryValue.FALSE : TernaryValue.TRUE;\n-          }\n         }\n \n         if (result != TernaryValue.UNKNOWN) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "Delete", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_875/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:59:31.510016278 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_875/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:59:31.510016278 -0500\n@@ -674,12 +674,7 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n-          if (!leftTypeRestricted.canTestForShallowEqualityWith(\n-                  rightTypeRestricted)) {\n-            result = n.getType() == Token.SHEQ ?\n-                TernaryValue.FALSE : TernaryValue.TRUE;\n-          }\n+          this.inExterns = inExterns;\n         }\n \n         if (result != TernaryValue.UNKNOWN) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "Replace", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2359/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:10:22.321273485 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2503/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:11:23.932968242 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1369/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:03:05.177296249 -0500\n@@ -200,9 +200,7 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n-          return caseEquality(condition, blindScope, SHNE);\n         }\n \n       case Token.SHNE:\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1369/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 09:03:05.181296246 -0500\n@@ -674,7 +674,8 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n+          this.inExterns = inExterns;\n+\t\t// SHEQ or SHNE\n           if (!leftTypeRestricted.canTestForShallowEqualityWith(\n                   rightTypeRestricted)) {\n             result = n.getType() == Token.SHEQ ?\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "InsertBefore", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2889/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:14:11.668044152 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2428/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:10:51.869160710 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2548/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:11:42.860816184 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2399/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:10:39.465205271 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2399/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 09:10:39.465205271 -0500\n@@ -674,12 +674,7 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n-          if (!leftTypeRestricted.canTestForShallowEqualityWith(\n-                  rightTypeRestricted)) {\n-            result = n.getType() == Token.SHEQ ?\n-                TernaryValue.FALSE : TernaryValue.TRUE;\n-          }\n+          this.inExterns = inExterns;\n         }\n \n         if (result != TernaryValue.UNKNOWN) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "Replace", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2814/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:13:37.616165284 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2814/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 09:13:37.616165284 -0500\n@@ -674,7 +674,8 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n+          this.inExterns = inExterns;\n+\t\t// SHEQ or SHNE\n           if (!leftTypeRestricted.canTestForShallowEqualityWith(\n                   rightTypeRestricted)) {\n             result = n.getType() == Token.SHEQ ?\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "InsertBefore", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1548/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:04:24.213272816 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_3169/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:16:16.819797183 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2355/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:10:20.701280344 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2064/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:08:12.733646990 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_769/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:58:46.766089673 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1151/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:01:32.873487535 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_141/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:54:12.166343047 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_141/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:54:12.170343056 -0500\n@@ -674,7 +674,8 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n+          this.inExterns = inExterns;\n+\t\t// SHEQ or SHNE\n           if (!leftTypeRestricted.canTestForShallowEqualityWith(\n                   rightTypeRestricted)) {\n             result = n.getType() == Token.SHEQ ?\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "InsertBefore", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2540/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:11:39.516841985 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_907/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:59:45.602002950 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2552/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:11:44.460804001 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2687/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:12:41.184432926 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2699/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:12:46.084405993 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1982/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:07:35.689555356 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_3160/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:16:12.667801304 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1070/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:00:55.065632614 -0500\n@@ -200,9 +200,7 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n-          return caseEquality(condition, blindScope, SHNE);\n         }\n \n       case Token.SHNE:\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_527/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:57:03.198485090 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2419/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:10:47.769175009 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_148/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:54:16.318351736 -0500\n@@ -200,9 +200,7 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n-          return caseEquality(condition, blindScope, SHNE);\n         }\n \n       case Token.SHNE:\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1252/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:02:15.869372627 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_948/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:00:02.649914905 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_315/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:55:31.306542177 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2893/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:14:13.324038946 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_867/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:59:28.214020035 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1978/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:07:34.101551633 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1978/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 09:07:34.101551633 -0500\n@@ -674,7 +674,8 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n+          this.inExterns = inExterns;\n+\t\t// SHEQ or SHNE\n           if (!leftTypeRestricted.canTestForShallowEqualityWith(\n                   rightTypeRestricted)) {\n             result = n.getType() == Token.SHEQ ?\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "InsertBefore", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_963/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:00:09.145874218 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2438/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:10:55.905147042 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1599/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:04:48.789285853 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2220/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:09:21.825583431 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2783/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:13:22.932226380 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2783/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 09:13:22.936226362 -0500\n@@ -674,12 +674,6 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n-          if (!leftTypeRestricted.canTestForShallowEqualityWith(\n-                  rightTypeRestricted)) {\n-            result = n.getType() == Token.SHEQ ?\n-                TernaryValue.FALSE : TernaryValue.TRUE;\n-          }\n         }\n \n         if (result != TernaryValue.UNKNOWN) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "Delete", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2474/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:11:11.385077439 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2474/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 09:11:11.389077403 -0500\n@@ -674,7 +674,8 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n+          this.inExterns = inExterns;\n+\t\t// SHEQ or SHNE\n           if (!leftTypeRestricted.canTestForShallowEqualityWith(\n                   rightTypeRestricted)) {\n             result = n.getType() == Token.SHEQ ?\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "InsertBefore", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_919/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:59:50.421996247 -0500\n@@ -200,9 +200,7 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n-          return caseEquality(condition, blindScope, SHNE);\n         }\n \n       case Token.SHNE:\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2989/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:14:56.675923084 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_27/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:53:17.990250931 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_511/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:56:56.714522634 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1824/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:06:27.861413589 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2922/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:14:25.820001591 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1176/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:01:43.845453467 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_61/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:53:34.286274262 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_893/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:59:38.854008785 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_893/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:59:38.854008785 -0500\n@@ -674,7 +674,8 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n+          this.inExterns = inExterns;\n+\t\t// SHEQ or SHNE\n           if (!leftTypeRestricted.canTestForShallowEqualityWith(\n                   rightTypeRestricted)) {\n             result = n.getType() == Token.SHEQ ?\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "InsertBefore", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_102/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:53:54.570308683 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2468/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:11:08.917099735 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2468/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 09:11:08.921099698 -0500\n@@ -674,12 +674,7 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n-          if (!leftTypeRestricted.canTestForShallowEqualityWith(\n-                  rightTypeRestricted)) {\n-            result = n.getType() == Token.SHEQ ?\n-                TernaryValue.FALSE : TernaryValue.TRUE;\n-          }\n+          this.inExterns = inExterns;\n         }\n \n         if (result != TernaryValue.UNKNOWN) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "Replace", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_822/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:59:08.674047543 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1188/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:01:48.797439194 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1188/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 09:01:48.797439194 -0500\n@@ -674,12 +674,6 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n-          if (!leftTypeRestricted.canTestForShallowEqualityWith(\n-                  rightTypeRestricted)) {\n-            result = n.getType() == Token.SHEQ ?\n-                TernaryValue.FALSE : TernaryValue.TRUE;\n-          }\n         }\n \n         if (result != TernaryValue.UNKNOWN) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "Delete", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_3171/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:16:17.623796414 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1643/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:05:07.625301393 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1643/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 09:05:07.629301397 -0500\n@@ -674,12 +674,7 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n-          if (!leftTypeRestricted.canTestForShallowEqualityWith(\n-                  rightTypeRestricted)) {\n-            result = n.getType() == Token.SHEQ ?\n-                TernaryValue.FALSE : TernaryValue.TRUE;\n-          }\n+          this.inExterns = inExterns;\n         }\n \n         if (result != TernaryValue.UNKNOWN) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "Replace", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2460/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:11:05.645115683 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2460/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 09:11:05.649115670 -0500\n@@ -674,12 +674,6 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n-          if (!leftTypeRestricted.canTestForShallowEqualityWith(\n-                  rightTypeRestricted)) {\n-            result = n.getType() == Token.SHEQ ?\n-                TernaryValue.FALSE : TernaryValue.TRUE;\n-          }\n         }\n \n         if (result != TernaryValue.UNKNOWN) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "Delete", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1628/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:05:00.909295324 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_704/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:58:18.730162653 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_57/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:53:32.590271649 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_29/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:53:18.826252031 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_3130/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:15:59.199816326 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_689/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:58:12.170183053 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_3048/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:15:23.515869308 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_3048/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 09:15:23.515869308 -0500\n@@ -674,12 +674,7 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n-          if (!leftTypeRestricted.canTestForShallowEqualityWith(\n-                  rightTypeRestricted)) {\n-            result = n.getType() == Token.SHEQ ?\n-                TernaryValue.FALSE : TernaryValue.TRUE;\n-          }\n+          this.inExterns = inExterns;\n         }\n \n         if (result != TernaryValue.UNKNOWN) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "Replace", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1012/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:00:29.877755510 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2841/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:13:49.508119829 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2841/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 09:13:49.512119815 -0500\n@@ -674,12 +674,7 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n-          if (!leftTypeRestricted.canTestForShallowEqualityWith(\n-                  rightTypeRestricted)) {\n-            result = n.getType() == Token.SHEQ ?\n-                TernaryValue.FALSE : TernaryValue.TRUE;\n-          }\n+          this.inExterns = inExterns;\n         }\n \n         if (result != TernaryValue.UNKNOWN) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "Replace", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_904/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:59:43.862004358 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1283/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:02:28.945347023 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1283/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 09:02:28.945347023 -0500\n@@ -674,12 +674,7 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n-          if (!leftTypeRestricted.canTestForShallowEqualityWith(\n-                  rightTypeRestricted)) {\n-            result = n.getType() == Token.SHEQ ?\n-                TernaryValue.FALSE : TernaryValue.TRUE;\n-          }\n+          this.inExterns = inExterns;\n         }\n \n         if (result != TernaryValue.UNKNOWN) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "Replace", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2816/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:13:38.492161814 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2731/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:12:59.488336086 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2731/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 09:12:59.488336086 -0500\n@@ -674,12 +674,7 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n-          if (!leftTypeRestricted.canTestForShallowEqualityWith(\n-                  rightTypeRestricted)) {\n-            result = n.getType() == Token.SHEQ ?\n-                TernaryValue.FALSE : TernaryValue.TRUE;\n-          }\n+          this.inExterns = inExterns;\n         }\n \n         if (result != TernaryValue.UNKNOWN) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "Replace", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2956/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:14:41.227960032 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2956/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 09:14:41.231960023 -0500\n@@ -674,12 +674,6 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n-          if (!leftTypeRestricted.canTestForShallowEqualityWith(\n-                  rightTypeRestricted)) {\n-            result = n.getType() == Token.SHEQ ?\n-                TernaryValue.FALSE : TernaryValue.TRUE;\n-          }\n         }\n \n         if (result != TernaryValue.UNKNOWN) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "Delete", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1709/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:05:37.357334821 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1709/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 09:05:37.357334821 -0500\n@@ -674,12 +674,6 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n-          if (!leftTypeRestricted.canTestForShallowEqualityWith(\n-                  rightTypeRestricted)) {\n-            result = n.getType() == Token.SHEQ ?\n-                TernaryValue.FALSE : TernaryValue.TRUE;\n-          }\n         }\n \n         if (result != TernaryValue.UNKNOWN) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "Delete", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_96/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:53:52.098304181 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_96/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:53:52.102304189 -0500\n@@ -674,12 +674,6 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n-          if (!leftTypeRestricted.canTestForShallowEqualityWith(\n-                  rightTypeRestricted)) {\n-            result = n.getType() == Token.SHEQ ?\n-                TernaryValue.FALSE : TernaryValue.TRUE;\n-          }\n         }\n \n         if (result != TernaryValue.UNKNOWN) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "Delete", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_8/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:53:07.490238074 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1736/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:05:48.721350260 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1508/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:04:07.081268970 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_694/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:58:14.602175338 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_447/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:56:29.810697571 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2781/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:13:22.092230047 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_3046/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:15:22.643870858 -0500\n@@ -200,9 +200,7 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n-          return caseEquality(condition, blindScope, SHNE);\n         }\n \n       case Token.SHNE:\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1066/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:00:53.461639785 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1847/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:06:37.597431601 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1847/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 09:06:37.601431608 -0500\n@@ -674,12 +674,6 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n-          if (!leftTypeRestricted.canTestForShallowEqualityWith(\n-                  rightTypeRestricted)) {\n-            result = n.getType() == Token.SHEQ ?\n-                TernaryValue.FALSE : TernaryValue.TRUE;\n-          }\n         }\n \n         if (result != TernaryValue.UNKNOWN) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "Delete", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_22/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:53:15.462247678 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_480/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:56:43.722603158 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_383/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:56:00.158630180 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_818/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:59:07.058050229 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_3038/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:15:18.879877695 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_576/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:57:23.866376574 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2107/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:08:32.353698971 -0500\n@@ -200,9 +200,7 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n-          return caseEquality(condition, blindScope, SHNE);\n         }\n \n       case Token.SHNE:\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1072/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:00:55.861629089 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2871/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:14:03.252071555 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2232/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:09:26.701554057 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2232/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 09:09:26.701554057 -0500\n@@ -674,12 +674,7 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n-          if (!leftTypeRestricted.canTestForShallowEqualityWith(\n-                  rightTypeRestricted)) {\n-            result = n.getType() == Token.SHEQ ?\n-                TernaryValue.FALSE : TernaryValue.TRUE;\n-          }\n+          this.inExterns = inExterns;\n         }\n \n         if (result != TernaryValue.UNKNOWN) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "Replace", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2542/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:11:40.340835585 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2542/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 09:11:40.340835585 -0500\n@@ -674,7 +674,8 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n+          this.inExterns = inExterns;\n+\t\t// SHEQ or SHNE\n           if (!leftTypeRestricted.canTestForShallowEqualityWith(\n                   rightTypeRestricted)) {\n             result = n.getType() == Token.SHEQ ?\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "InsertBefore", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2401/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:10:40.273202248 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_250/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:55:02.702462516 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_42/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:53:25.018260502 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_42/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:53:25.022260507 -0500\n@@ -674,12 +674,6 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n-          if (!leftTypeRestricted.canTestForShallowEqualityWith(\n-                  rightTypeRestricted)) {\n-            result = n.getType() == Token.SHEQ ?\n-                TernaryValue.FALSE : TernaryValue.TRUE;\n-          }\n         }\n \n         if (result != TernaryValue.UNKNOWN) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "Delete", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_394/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:56:05.098645958 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_381/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:55:59.346627606 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_203/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:54:41.166408062 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_203/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:54:41.166408062 -0500\n@@ -674,7 +674,8 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n+          this.inExterns = inExterns;\n+\t\t// SHEQ or SHNE\n           if (!leftTypeRestricted.canTestForShallowEqualityWith(\n                   rightTypeRestricted)) {\n             result = n.getType() == Token.SHEQ ?\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "InsertBefore", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_665/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:58:01.610218705 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1694/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:05:30.737326485 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1694/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 09:05:30.737326485 -0500\n@@ -674,7 +674,8 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n+          this.inExterns = inExterns;\n+\t\t// SHEQ or SHNE\n           if (!leftTypeRestricted.canTestForShallowEqualityWith(\n                   rightTypeRestricted)) {\n             result = n.getType() == Token.SHEQ ?\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "InsertBefore", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_236/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:54:56.946447476 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1087/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:01:02.477600607 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1641/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:05:06.533300367 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2245/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:09:32.405520737 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_6/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:53:06.622237089 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_847/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:59:20.126030318 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1647/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:05:09.353303042 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1647/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 09:05:09.353303042 -0500\n@@ -674,12 +674,7 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n-          if (!leftTypeRestricted.canTestForShallowEqualityWith(\n-                  rightTypeRestricted)) {\n-            result = n.getType() == Token.SHEQ ?\n-                TernaryValue.FALSE : TernaryValue.TRUE;\n-          }\n+          this.inExterns = inExterns;\n         }\n \n         if (result != TernaryValue.UNKNOWN) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "Replace", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2799/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:13:29.996196283 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2799/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 09:13:30.000196266 -0500\n@@ -674,7 +674,8 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n+          this.inExterns = inExterns;\n+\t\t// SHEQ or SHNE\n           if (!leftTypeRestricted.canTestForShallowEqualityWith(\n                   rightTypeRestricted)) {\n             result = n.getType() == Token.SHEQ ?\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "InsertBefore", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2062/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:08:11.925644898 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2098/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:08:28.201687784 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2098/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 09:08:28.201687784 -0500\n@@ -674,12 +674,7 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n-          if (!leftTypeRestricted.canTestForShallowEqualityWith(\n-                  rightTypeRestricted)) {\n-            result = n.getType() == Token.SHEQ ?\n-                TernaryValue.FALSE : TernaryValue.TRUE;\n-          }\n+          this.inExterns = inExterns;\n         }\n \n         if (result != TernaryValue.UNKNOWN) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "Replace", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1514/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:04:09.529269243 -0500\n@@ -200,9 +200,7 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n-          return caseEquality(condition, blindScope, SHNE);\n         }\n \n       case Token.SHNE:\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1791/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:06:13.273388231 -0500\n@@ -200,9 +200,7 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n-          return caseEquality(condition, blindScope, SHNE);\n         }\n \n       case Token.SHNE:\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1096/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:01:06.533583852 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2206/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:09:16.065619211 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_363/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:55:52.002604572 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_363/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:55:52.022604634 -0500\n@@ -674,12 +674,6 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n-          if (!leftTypeRestricted.canTestForShallowEqualityWith(\n-                  rightTypeRestricted)) {\n-            result = n.getType() == Token.SHEQ ?\n-                TernaryValue.FALSE : TernaryValue.TRUE;\n-          }\n         }\n \n         if (result != TernaryValue.UNKNOWN) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "Delete", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_931/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:59:55.301963026 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1309/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:02:39.453329340 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1950/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:07:21.721523228 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1690/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:05:29.033324419 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_828/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:59:11.174043509 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2572/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:11:52.604743532 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2090/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:08:24.925679028 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2226/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:09:24.221568894 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_873/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:59:30.658017225 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_873/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:59:30.662017221 -0500\n@@ -674,12 +674,7 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n-          if (!leftTypeRestricted.canTestForShallowEqualityWith(\n-                  rightTypeRestricted)) {\n-            result = n.getType() == Token.SHEQ ?\n-                TernaryValue.FALSE : TernaryValue.TRUE;\n-          }\n+          this.inExterns = inExterns;\n         }\n \n         if (result != TernaryValue.UNKNOWN) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "Replace", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_118/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:54:01.178321113 -0500\n@@ -200,9 +200,7 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n-          return caseEquality(condition, blindScope, SHNE);\n         }\n \n       case Token.SHNE:\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2105/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:08:31.525696732 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_345/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:55:44.370581124 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_345/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:55:44.374581136 -0500\n@@ -674,12 +674,7 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n-          if (!leftTypeRestricted.canTestForShallowEqualityWith(\n-                  rightTypeRestricted)) {\n-            result = n.getType() == Token.SHEQ ?\n-                TernaryValue.FALSE : TernaryValue.TRUE;\n-          }\n+          this.inExterns = inExterns;\n         }\n \n         if (result != TernaryValue.UNKNOWN) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "Replace", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_523/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:57:01.550494471 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_139/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:54:11.318341300 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_139/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:54:11.322341308 -0500\n@@ -674,12 +674,6 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n-          if (!leftTypeRestricted.canTestForShallowEqualityWith(\n-                  rightTypeRestricted)) {\n-            result = n.getType() == Token.SHEQ ?\n-                TernaryValue.FALSE : TernaryValue.TRUE;\n-          }\n         }\n \n         if (result != TernaryValue.UNKNOWN) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "Delete", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_549/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:57:12.282435347 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_549/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:57:12.282435347 -0500\n@@ -674,12 +674,7 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n-          if (!leftTypeRestricted.canTestForShallowEqualityWith(\n-                  rightTypeRestricted)) {\n-            result = n.getType() == Token.SHEQ ?\n-                TernaryValue.FALSE : TernaryValue.TRUE;\n-          }\n+          this.inExterns = inExterns;\n         }\n \n         if (result != TernaryValue.UNKNOWN) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "Replace", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_824/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:59:09.486046217 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_3103/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:15:47.239831880 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_761/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:58:43.498097042 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_881/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:59:33.946013657 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_641/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:57:50.830258804 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_959/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:00:07.533884156 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1898/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:06:59.801475745 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_386/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:56:01.786635358 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_436/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:56:24.950711312 -0500\n@@ -200,9 +200,7 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n-          return caseEquality(condition, blindScope, SHNE);\n         }\n \n       case Token.SHNE:\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_436/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:56:24.950711312 -0500\n@@ -674,12 +674,7 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n-          if (!leftTypeRestricted.canTestForShallowEqualityWith(\n-                  rightTypeRestricted)) {\n-            result = n.getType() == Token.SHEQ ?\n-                TernaryValue.FALSE : TernaryValue.TRUE;\n-          }\n+          this.inExterns = inExterns;\n         }\n \n         if (result != TernaryValue.UNKNOWN) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "Replace", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_788/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:58:54.906072563 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1958/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:07:24.937530499 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1445/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:03:39.701272615 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2495/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:11:20.636996260 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2495/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 09:11:20.636996260 -0500\n@@ -674,7 +674,8 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n+          this.inExterns = inExterns;\n+\t\t// SHEQ or SHNE\n           if (!leftTypeRestricted.canTestForShallowEqualityWith(\n                   rightTypeRestricted)) {\n             result = n.getType() == Token.SHEQ ?\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "InsertBefore", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2586/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:11:58.480701486 -0500\n@@ -200,9 +200,7 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n-          return caseEquality(condition, blindScope, SHNE);\n         }\n \n       case Token.SHNE:\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2586/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 09:11:58.484701458 -0500\n@@ -674,12 +674,7 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n-          if (!leftTypeRestricted.canTestForShallowEqualityWith(\n-                  rightTypeRestricted)) {\n-            result = n.getType() == Token.SHEQ ?\n-                TernaryValue.FALSE : TernaryValue.TRUE;\n-          }\n+          this.inExterns = inExterns;\n         }\n \n         if (result != TernaryValue.UNKNOWN) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "Replace", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_400/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:56:07.566653914 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1651/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:05:11.037304689 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_877/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:59:32.338015372 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_877/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:59:32.338015372 -0500\n@@ -674,7 +674,8 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n+          this.inExterns = inExterns;\n+\t\t// SHEQ or SHNE\n           if (!leftTypeRestricted.canTestForShallowEqualityWith(\n                   rightTypeRestricted)) {\n             result = n.getType() == Token.SHEQ ?\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "InsertBefore", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_340/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:55:41.946573781 -0500\n@@ -200,9 +200,7 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n-          return caseEquality(condition, blindScope, SHNE);\n         }\n \n       case Token.SHNE:\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_340/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:55:41.946573781 -0500\n@@ -674,12 +674,7 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n-          if (!leftTypeRestricted.canTestForShallowEqualityWith(\n-                  rightTypeRestricted)) {\n-            result = n.getType() == Token.SHEQ ?\n-                TernaryValue.FALSE : TernaryValue.TRUE;\n-          }\n+          this.inExterns = inExterns;\n         }\n \n         if (result != TernaryValue.UNKNOWN) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "Replace", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_359/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:55:50.118598737 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1347/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:02:56.165306252 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_38/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:53:23.198257952 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1491/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:03:59.541268734 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1491/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 09:03:59.541268734 -0500\n@@ -674,12 +674,7 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n-          if (!leftTypeRestricted.canTestForShallowEqualityWith(\n-                  rightTypeRestricted)) {\n-            result = n.getType() == Token.SHEQ ?\n-                TernaryValue.FALSE : TernaryValue.TRUE;\n-          }\n+          this.inExterns = inExterns;\n         }\n \n         if (result != TernaryValue.UNKNOWN) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "Replace", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1196/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:01:52.077430107 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1196/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 09:01:52.081430096 -0500\n@@ -674,7 +674,8 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n+          this.inExterns = inExterns;\n+\t\t// SHEQ or SHNE\n           if (!leftTypeRestricted.canTestForShallowEqualityWith(\n                   rightTypeRestricted)) {\n             result = n.getType() == Token.SHEQ ?\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "InsertBefore", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1224/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:02:04.313398735 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_555/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:57:14.798422144 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1680/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:05:24.177318717 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1723/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:05:43.057342389 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_3144/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:16:05.903808526 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_59/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:53:33.466272994 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_59/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:53:33.466272994 -0500\n@@ -674,12 +674,7 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n-          if (!leftTypeRestricted.canTestForShallowEqualityWith(\n-                  rightTypeRestricted)) {\n-            result = n.getType() == Token.SHEQ ?\n-                TernaryValue.FALSE : TernaryValue.TRUE;\n-          }\n+          this.inExterns = inExterns;\n         }\n \n         if (result != TernaryValue.UNKNOWN) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "Replace", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_330/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:55:37.866561541 -0500\n@@ -200,9 +200,7 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n-          return caseEquality(condition, blindScope, SHNE);\n         }\n \n       case Token.SHNE:\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2450/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:11:01.553128582 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_353/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:55:47.658591165 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_353/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:55:47.662591177 -0500\n@@ -674,12 +674,7 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n-          if (!leftTypeRestricted.canTestForShallowEqualityWith(\n-                  rightTypeRestricted)) {\n-            result = n.getType() == Token.SHEQ ?\n-                TernaryValue.FALSE : TernaryValue.TRUE;\n-          }\n+          this.inExterns = inExterns;\n         }\n \n         if (result != TernaryValue.UNKNOWN) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "Replace", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_672/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:58:04.858207363 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_488/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:56:46.942582524 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2998/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:15:01.387912711 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2998/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 09:15:01.391912701 -0500\n@@ -674,12 +674,6 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n-          if (!leftTypeRestricted.canTestForShallowEqualityWith(\n-                  rightTypeRestricted)) {\n-            result = n.getType() == Token.SHEQ ?\n-                TernaryValue.FALSE : TernaryValue.TRUE;\n-          }\n         }\n \n         if (result != TernaryValue.UNKNOWN) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "Delete", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_453/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:56:32.238680464 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2980/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:14:52.547932511 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2980/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 09:14:52.547932511 -0500\n@@ -674,12 +674,7 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n-          if (!leftTypeRestricted.canTestForShallowEqualityWith(\n-                  rightTypeRestricted)) {\n-            result = n.getType() == Token.SHEQ ?\n-                TernaryValue.FALSE : TernaryValue.TRUE;\n-          }\n+          this.inExterns = inExterns;\n         }\n \n         if (result != TernaryValue.UNKNOWN) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "Replace", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_460/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:56:35.566657454 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2442/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:10:58.337139000 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_798/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:58:58.994064628 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2407/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:10:42.821192827 -0500\n@@ -200,9 +200,7 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n-          return caseEquality(condition, blindScope, SHNE);\n         }\n \n       case Token.SHNE:\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2041/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:08:02.941621908 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2041/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 09:08:02.941621908 -0500\n@@ -674,7 +674,8 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n+          this.inExterns = inExterns;\n+\t\t// SHEQ or SHNE\n           if (!leftTypeRestricted.canTestForShallowEqualityWith(\n                   rightTypeRestricted)) {\n             result = n.getType() == Token.SHEQ ?\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "InsertBefore", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_3184/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:16:23.335791192 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_377/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:55:57.726622487 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2789/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:13:25.508215253 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2066/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:08:13.553649117 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2066/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 09:08:13.557649127 -0500\n@@ -674,12 +674,7 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n-          if (!leftTypeRestricted.canTestForShallowEqualityWith(\n-                  rightTypeRestricted)) {\n-            result = n.getType() == Token.SHEQ ?\n-                TernaryValue.FALSE : TernaryValue.TRUE;\n-          }\n+          this.inExterns = inExterns;\n         }\n \n         if (result != TernaryValue.UNKNOWN) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "Replace", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2811/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:13:35.928172020 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2811/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 09:13:35.928172020 -0500\n@@ -674,7 +674,8 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n+          this.inExterns = inExterns;\n+\t\t// SHEQ or SHNE\n           if (!leftTypeRestricted.canTestForShallowEqualityWith(\n                   rightTypeRestricted)) {\n             result = n.getType() == Token.SHEQ ?\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "InsertBefore", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2050/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:08:06.993632215 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2050/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 09:08:06.997632226 -0500\n@@ -674,12 +674,7 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n-          if (!leftTypeRestricted.canTestForShallowEqualityWith(\n-                  rightTypeRestricted)) {\n-            result = n.getType() == Token.SHEQ ?\n-                TernaryValue.FALSE : TernaryValue.TRUE;\n-          }\n+          this.inExterns = inExterns;\n         }\n \n         if (result != TernaryValue.UNKNOWN) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "Replace", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_3105/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:15:48.067830734 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1527/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:04:15.245270242 -0500\n@@ -200,9 +200,7 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n-          return caseEquality(condition, blindScope, SHNE);\n         }\n \n       case Token.SHNE:\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1527/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 09:04:15.249270243 -0500\n@@ -674,12 +674,7 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n-          if (!leftTypeRestricted.canTestForShallowEqualityWith(\n-                  rightTypeRestricted)) {\n-            result = n.getType() == Token.SHEQ ?\n-                TernaryValue.FALSE : TernaryValue.TRUE;\n-          }\n+          this.inExterns = inExterns;\n         }\n \n         if (result != TernaryValue.UNKNOWN) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "Replace", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1357/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:03:00.269301490 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1357/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 09:03:00.273301485 -0500\n@@ -674,12 +674,6 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n-          if (!leftTypeRestricted.canTestForShallowEqualityWith(\n-                  rightTypeRestricted)) {\n-            result = n.getType() == Token.SHEQ ?\n-                TernaryValue.FALSE : TernaryValue.TRUE;\n-          }\n         }\n \n         if (result != TernaryValue.UNKNOWN) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "Delete", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_596/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:57:32.070337995 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_3017/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:15:09.687895422 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2208/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:09:16.873614121 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1908/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:07:03.793484115 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1662/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:05:16.005309749 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_676/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:58:06.518201698 -0500\n@@ -200,9 +200,7 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n-          return caseEquality(condition, blindScope, SHNE);\n         }\n \n       case Token.SHNE:\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2735/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:13:01.116327960 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_831/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:59:12.814040948 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_831/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:59:12.818040942 -0500\n@@ -674,7 +674,8 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n+          this.inExterns = inExterns;\n+\t\t// SHEQ or SHNE\n           if (!leftTypeRestricted.canTestForShallowEqualityWith(\n                   rightTypeRestricted)) {\n             result = n.getType() == Token.SHEQ ?\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "InsertBefore", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1493/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:04:00.397268716 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1493/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 09:04:00.397268716 -0500\n@@ -674,12 +674,7 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n-          if (!leftTypeRestricted.canTestForShallowEqualityWith(\n-                  rightTypeRestricted)) {\n-            result = n.getType() == Token.SHEQ ?\n-                TernaryValue.FALSE : TernaryValue.TRUE;\n-          }\n+          this.inExterns = inExterns;\n         }\n \n         if (result != TernaryValue.UNKNOWN) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "Replace", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2349/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:10:18.309290608 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2083/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:08:21.697670460 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_3132/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:16:00.019815336 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_621/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:57:42.666291764 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1696/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:05:31.541327471 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1155/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:01:34.549482111 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2983/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:14:54.199928699 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2902/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:14:17.516026039 -0500\n@@ -200,9 +200,7 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n-          return caseEquality(condition, blindScope, SHNE);\n         }\n \n       case Token.SHNE:\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1754/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:05:56.109361038 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2554/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:11:45.256797976 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_980/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:00:16.597829635 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1163/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:01:38.077470950 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1163/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 09:01:38.081470937 -0500\n@@ -674,12 +674,6 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n-          if (!leftTypeRestricted.canTestForShallowEqualityWith(\n-                  rightTypeRestricted)) {\n-            result = n.getType() == Token.SHEQ ?\n-                TernaryValue.FALSE : TernaryValue.TRUE;\n-          }\n         }\n \n         if (result != TernaryValue.UNKNOWN) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "Delete", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_861/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:59:25.786022962 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1081/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:01:00.005611076 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2111/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:08:34.001703437 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2301/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:09:57.169388513 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_156/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:54:19.602358758 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2240/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:09:29.949534945 -0500\n@@ -200,9 +200,7 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n-          return caseEquality(condition, blindScope, SHNE);\n         }\n \n       case Token.SHNE:\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1880/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:06:51.653459067 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_313/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:55:30.450539680 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_313/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:55:30.454539692 -0500\n@@ -674,7 +674,8 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n+          this.inExterns = inExterns;\n+\t\t// SHEQ or SHNE\n           if (!leftTypeRestricted.canTestForShallowEqualityWith(\n                   rightTypeRestricted)) {\n             result = n.getType() == Token.SHEQ ?\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "InsertBefore", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2742/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:13:04.500311321 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2145/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:08:48.665743838 -0500\n@@ -200,9 +200,7 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n-          return caseEquality(condition, blindScope, SHNE);\n         }\n \n       case Token.SHNE:\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2825/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:13:42.648145622 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2825/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 09:13:42.652145606 -0500\n@@ -674,7 +674,8 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n+          this.inExterns = inExterns;\n+\t\t// SHEQ or SHNE\n           if (!leftTypeRestricted.canTestForShallowEqualityWith(\n                   rightTypeRestricted)) {\n             result = n.getType() == Token.SHEQ ?\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "InsertBefore", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_302/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:55:25.530525456 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2200/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:09:13.609634831 -0500\n@@ -200,9 +200,7 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n-          return caseEquality(condition, blindScope, SHNE);\n         }\n \n       case Token.SHNE:\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_3015/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:15:08.863897079 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1435/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:03:35.637274249 -0500\n@@ -200,9 +200,7 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n-          return caseEquality(condition, blindScope, SHNE);\n         }\n \n       case Token.SHNE:\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1952/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:07:22.529525048 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2256/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:09:37.301493014 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2256/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 09:09:37.305492991 -0500\n@@ -674,12 +674,7 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n-          if (!leftTypeRestricted.canTestForShallowEqualityWith(\n-                  rightTypeRestricted)) {\n-            result = n.getType() == Token.SHEQ ?\n-                TernaryValue.FALSE : TernaryValue.TRUE;\n-          }\n+          this.inExterns = inExterns;\n         }\n \n         if (result != TernaryValue.UNKNOWN) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "Replace", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1715/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:05:39.773337985 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_603/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:57:35.362323207 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_603/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:57:35.362323207 -0500\n@@ -674,7 +674,8 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n+          this.inExterns = inExterns;\n+\t\t// SHEQ or SHNE\n           if (!leftTypeRestricted.canTestForShallowEqualityWith(\n                   rightTypeRestricted)) {\n             result = n.getType() == Token.SHEQ ?\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "InsertBefore", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1874/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:06:49.129454011 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1874/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 09:06:49.129454011 -0500\n@@ -674,7 +674,8 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n+          this.inExterns = inExterns;\n+\t\t// SHEQ or SHNE\n           if (!leftTypeRestricted.canTestForShallowEqualityWith(\n                   rightTypeRestricted)) {\n             result = n.getType() == Token.SHEQ ?\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "InsertBefore", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_887/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:59:36.378011177 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2519/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:11:30.384914745 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1863/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:06:44.193444279 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1497/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:04:02.013268710 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2515/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:11:28.768927979 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2192/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:09:10.201656867 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2192/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 09:09:10.201656867 -0500\n@@ -674,12 +674,7 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n-          if (!leftTypeRestricted.canTestForShallowEqualityWith(\n-                  rightTypeRestricted)) {\n-            result = n.getType() == Token.SHEQ ?\n-                TernaryValue.FALSE : TernaryValue.TRUE;\n-          }\n+          this.inExterns = inExterns;\n         }\n \n         if (result != TernaryValue.UNKNOWN) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "Replace", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_418/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:56:15.834680921 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_176/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:54:28.798379117 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_176/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:54:28.798379117 -0500\n@@ -674,12 +674,6 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n-          if (!leftTypeRestricted.canTestForShallowEqualityWith(\n-                  rightTypeRestricted)) {\n-            result = n.getType() == Token.SHEQ ?\n-                TernaryValue.FALSE : TernaryValue.TRUE;\n-          }\n         }\n \n         if (result != TernaryValue.UNKNOWN) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "Delete", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_78/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:53:42.770287955 -0500\n@@ -200,9 +200,7 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n-          return caseEquality(condition, blindScope, SHNE);\n         }\n \n       case Token.SHNE:\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_895/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:59:39.662008035 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2757/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:13:11.176279458 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2683/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:12:39.524442224 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2683/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 09:12:39.524442224 -0500\n@@ -674,12 +674,7 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n-          if (!leftTypeRestricted.canTestForShallowEqualityWith(\n-                  rightTypeRestricted)) {\n-            result = n.getType() == Token.SHEQ ?\n-                TernaryValue.FALSE : TernaryValue.TRUE;\n-          }\n+          this.inExterns = inExterns;\n         }\n \n         if (result != TernaryValue.UNKNOWN) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "Replace", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_3101/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:15:46.419833026 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_3101/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 09:15:46.423833021 -0500\n@@ -674,7 +674,8 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n+          this.inExterns = inExterns;\n+\t\t// SHEQ or SHNE\n           if (!leftTypeRestricted.canTestForShallowEqualityWith(\n                   rightTypeRestricted)) {\n             result = n.getType() == Token.SHEQ ?\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "InsertBefore", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2224/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:09:23.413573775 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_351/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:55:46.826588615 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2276/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:09:46.573442678 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_3121/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:15:54.847821739 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_127/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:54:06.330331205 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2570/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:11:51.800749387 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_121/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:54:02.870324389 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1022/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:00:33.901734357 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_529/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:57:04.006480529 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1402/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:03:19.905283406 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2020/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:07:52.857596711 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2887/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:14:10.804046890 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1198/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:01:52.925427805 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1198/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 09:01:52.929427794 -0500\n@@ -674,7 +674,8 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n+          this.inExterns = inExterns;\n+\t\t// SHEQ or SHNE\n           if (!leftTypeRestricted.canTestForShallowEqualityWith(\n                   rightTypeRestricted)) {\n             result = n.getType() == Token.SHEQ ?\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "InsertBefore", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1872/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:06:48.297452357 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1807/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:06:20.593400705 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_55/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:53:31.766270394 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2368/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:10:26.505256104 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2368/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 09:10:26.505256104 -0500\n@@ -674,12 +674,7 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n-          if (!leftTypeRestricted.canTestForShallowEqualityWith(\n-                  rightTypeRestricted)) {\n-            result = n.getType() == Token.SHEQ ?\n-                TernaryValue.FALSE : TernaryValue.TRUE;\n-          }\n+          this.inExterns = inExterns;\n         }\n \n         if (result != TernaryValue.UNKNOWN) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "Replace", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_240/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:54:58.578451706 -0500\n@@ -200,9 +200,7 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n-          return caseEquality(condition, blindScope, SHNE);\n         }\n \n       case Token.SHNE:\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_994/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:00:22.461796077 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_933/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:59:56.125957514 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_933/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:59:56.125957514 -0500\n@@ -674,12 +674,7 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n-          if (!leftTypeRestricted.canTestForShallowEqualityWith(\n-                  rightTypeRestricted)) {\n-            result = n.getType() == Token.SHEQ ?\n-                TernaryValue.FALSE : TernaryValue.TRUE;\n-          }\n+          this.inExterns = inExterns;\n         }\n \n         if (result != TernaryValue.UNKNOWN) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "Replace", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2707/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:12:49.508387618 -0500\n@@ -200,9 +200,7 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n-          return caseEquality(condition, blindScope, SHNE);\n         }\n \n       case Token.SHNE:\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_3078/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:15:36.387847884 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_3078/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 09:15:36.387847884 -0500\n@@ -674,7 +674,8 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n+          this.inExterns = inExterns;\n+\t\t// SHEQ or SHNE\n           if (!leftTypeRestricted.canTestForShallowEqualityWith(\n                   rightTypeRestricted)) {\n             result = n.getType() == Token.SHEQ ?\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "InsertBefore", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1631/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:05:02.513296722 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1893/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:06:57.353470677 -0500\n@@ -200,9 +200,7 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n-          return caseEquality(condition, blindScope, SHNE);\n         }\n \n       case Token.SHNE:\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2733/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:13:00.296332044 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1616/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:04:56.069291311 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2607/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:12:07.476639605 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2278/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:09:47.397438338 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2278/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 09:09:47.401438318 -0500\n@@ -674,12 +674,7 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n-          if (!leftTypeRestricted.canTestForShallowEqualityWith(\n-                  rightTypeRestricted)) {\n-            result = n.getType() == Token.SHEQ ?\n-                TernaryValue.FALSE : TernaryValue.TRUE;\n-          }\n+          this.inExterns = inExterns;\n         }\n \n         if (result != TernaryValue.UNKNOWN) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "Replace", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1475/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:03:52.833269302 -0500\n@@ -200,9 +200,7 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n-          return caseEquality(condition, blindScope, SHNE);\n         }\n \n       case Token.SHNE:\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1525/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:04:14.421270068 -0500\n@@ -200,9 +200,7 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n-          return caseEquality(condition, blindScope, SHNE);\n         }\n \n       case Token.SHNE:\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_950/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:00:03.453909777 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2637/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:12:19.668560388 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_3087/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:15:40.511841586 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_3089/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:15:41.355840329 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1734/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:05:47.913349116 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1734/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 09:05:47.913349116 -0500\n@@ -674,7 +674,8 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n+          this.inExterns = inExterns;\n+\t\t// SHEQ or SHNE\n           if (!leftTypeRestricted.canTestForShallowEqualityWith(\n                   rightTypeRestricted)) {\n             result = n.getType() == Token.SHEQ ?\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "InsertBefore", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2003/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:07:45.441578603 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1279/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:02:27.297350027 -0500\n@@ -200,9 +200,7 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n-          return caseEquality(condition, blindScope, SHNE);\n         }\n \n       case Token.SHNE:\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1536/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:04:19.329271264 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1232/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:02:07.613390937 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_623/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:57:43.462288449 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2863/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:13:59.008085986 -0500\n@@ -200,9 +200,7 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n-          return caseEquality(condition, blindScope, SHNE);\n         }\n \n       case Token.SHNE:\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2863/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 09:13:59.008085986 -0500\n@@ -674,7 +674,8 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n+          this.inExterns = inExterns;\n+\t\t// SHEQ or SHNE\n           if (!leftTypeRestricted.canTestForShallowEqualityWith(\n                   rightTypeRestricted)) {\n             result = n.getType() == Token.SHEQ ?\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "InsertBefore", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_112/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:53:58.678316342 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1688/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:05:28.217323442 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_357/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:55:49.302596220 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_925/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:59:52.877979397 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_262/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:55:07.562475481 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_31/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:53:19.726253226 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_31/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:53:19.734253237 -0500\n@@ -674,12 +674,6 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n-          if (!leftTypeRestricted.canTestForShallowEqualityWith(\n-                  rightTypeRestricted)) {\n-            result = n.getType() == Token.SHEQ ?\n-                TernaryValue.FALSE : TernaryValue.TRUE;\n-          }\n         }\n \n         if (result != TernaryValue.UNKNOWN) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "Delete", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_635/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:57:48.342268608 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2487/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:11:17.281025270 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_751/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:58:38.594108648 -0500\n@@ -200,9 +200,7 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n-          return caseEquality(condition, blindScope, SHNE);\n         }\n \n       case Token.SHNE:\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_751/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:58:38.598108639 -0500\n@@ -674,12 +674,7 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n-          if (!leftTypeRestricted.canTestForShallowEqualityWith(\n-                  rightTypeRestricted)) {\n-            result = n.getType() == Token.SHEQ ?\n-                TernaryValue.FALSE : TernaryValue.TRUE;\n-          }\n+          this.inExterns = inExterns;\n         }\n \n         if (result != TernaryValue.UNKNOWN) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "Replace", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1713/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:05:38.969336924 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_108/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:53:57.014313211 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_3123/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:15:55.711820642 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_277/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:55:14.102493304 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_277/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:55:14.102493304 -0500\n@@ -674,12 +674,7 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n-          if (!leftTypeRestricted.canTestForShallowEqualityWith(\n-                  rightTypeRestricted)) {\n-            result = n.getType() == Token.SHEQ ?\n-                TernaryValue.FALSE : TernaryValue.TRUE;\n-          }\n+          this.inExterns = inExterns;\n         }\n \n         if (result != TernaryValue.UNKNOWN) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "Replace", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2456/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:11:04.013120777 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2456/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 09:11:04.017120765 -0500\n@@ -674,12 +674,6 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n-          if (!leftTypeRestricted.canTestForShallowEqualityWith(\n-                  rightTypeRestricted)) {\n-            result = n.getType() == Token.SHEQ ?\n-                TernaryValue.FALSE : TernaryValue.TRUE;\n-          }\n         }\n \n         if (result != TernaryValue.UNKNOWN) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "Delete", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_639/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:57:50.022261962 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2723/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:12:56.100353243 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2100/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:08:29.057690082 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2100/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 09:08:29.061690093 -0500\n@@ -674,7 +674,8 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n+          this.inExterns = inExterns;\n+\t\t// SHEQ or SHNE\n           if (!leftTypeRestricted.canTestForShallowEqualityWith(\n                   rightTypeRestricted)) {\n             result = n.getType() == Token.SHEQ ?\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "InsertBefore", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1367/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:03:04.353297096 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_567/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:57:19.786396692 -0500\n@@ -200,9 +200,7 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n-          return caseEquality(condition, blindScope, SHNE);\n         }\n \n       case Token.SHNE:\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_392/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:56:04.290643364 -0500\n@@ -200,9 +200,7 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n-          return caseEquality(condition, blindScope, SHNE);\n         }\n \n       case Token.SHNE:\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_392/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:56:04.290643364 -0500\n@@ -674,12 +674,7 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n-          if (!leftTypeRestricted.canTestForShallowEqualityWith(\n-                  rightTypeRestricted)) {\n-            result = n.getType() == Token.SHEQ ?\n-                TernaryValue.FALSE : TernaryValue.TRUE;\n-          }\n+          this.inExterns = inExterns;\n         }\n \n         if (result != TernaryValue.UNKNOWN) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "Replace", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1380/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:03:10.077291503 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_940/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:59:59.349936237 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_940/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:59:59.349936237 -0500\n@@ -674,12 +674,7 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n-          if (!leftTypeRestricted.canTestForShallowEqualityWith(\n-                  rightTypeRestricted)) {\n-            result = n.getType() == Token.SHEQ ?\n-                TernaryValue.FALSE : TernaryValue.TRUE;\n-          }\n+          this.inExterns = inExterns;\n         }\n \n         if (result != TernaryValue.UNKNOWN) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "Replace", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1738/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:05:49.561351457 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_3076/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:15:35.471849319 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2950/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:14:38.715966481 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2517/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:11:29.576921348 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1925/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:07:11.169499907 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_3200/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:16:29.791785809 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_936/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:59:57.729946875 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2820/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:13:40.160155263 -0500\n@@ -200,9 +200,7 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n-          return caseEquality(condition, blindScope, SHNE);\n         }\n \n       case Token.SHNE:\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1787/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:06:11.673385573 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1363/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:03:02.761298768 -0500\n@@ -200,9 +200,7 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n-          return caseEquality(condition, blindScope, SHNE);\n         }\n \n       case Token.SHNE:\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1363/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 09:03:02.761298768 -0500\n@@ -674,7 +674,8 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n+          this.inExterns = inExterns;\n+\t\t// SHEQ or SHNE\n           if (!leftTypeRestricted.canTestForShallowEqualityWith(\n                   rightTypeRestricted)) {\n             result = n.getType() == Token.SHEQ ?\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "InsertBefore", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2511/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:11:27.168941190 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_317/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:55:32.114544541 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1260/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:02:19.157365804 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1260/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 09:02:19.157365804 -0500\n@@ -674,7 +674,8 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n+          this.inExterns = inExterns;\n+\t\t// SHEQ or SHNE\n           if (!leftTypeRestricted.canTestForShallowEqualityWith(\n                   rightTypeRestricted)) {\n             result = n.getType() == Token.SHEQ ?\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "InsertBefore", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2392/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:10:36.201217652 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2910/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:14:20.828016111 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1867/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:06:45.893447607 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1207/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:01:57.033416924 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1207/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 09:01:57.033416924 -0500\n@@ -674,12 +674,6 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n-          if (!leftTypeRestricted.canTestForShallowEqualityWith(\n-                  rightTypeRestricted)) {\n-            result = n.getType() == Token.SHEQ ?\n-                TernaryValue.FALSE : TernaryValue.TRUE;\n-          }\n         }\n \n         if (result != TernaryValue.UNKNOWN) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "Delete", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_131/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:54:07.990334529 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1889/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:06:55.741467366 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_332/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:55:38.674563954 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_3072/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:15:33.803851968 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_592/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:57:30.454345403 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2452/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:11:02.361126004 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2198/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:09:12.661640920 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2963/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:14:44.731951248 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_264/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:55:08.374477671 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2109/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:08:33.205701278 -0500\n@@ -200,9 +200,7 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n-          return caseEquality(condition, blindScope, SHNE);\n         }\n \n       case Token.SHNE:\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_719/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:58:25.478143020 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_719/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:58:25.482143009 -0500\n@@ -674,7 +674,8 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n+          this.inExterns = inExterns;\n+\t\t// SHEQ or SHNE\n           if (!leftTypeRestricted.canTestForShallowEqualityWith(\n                   rightTypeRestricted)) {\n             result = n.getType() == Token.SHEQ ?\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "InsertBefore", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2491/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:11:18.945010820 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_3156/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:16:10.987803037 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_820/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:59:07.870048871 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_3074/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:15:34.639850635 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2005/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:07:46.265580597 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2005/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 09:07:46.269580606 -0500\n@@ -674,12 +674,7 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n-          if (!leftTypeRestricted.canTestForShallowEqualityWith(\n-                  rightTypeRestricted)) {\n-            result = n.getType() == Token.SHEQ ?\n-                TernaryValue.FALSE : TernaryValue.TRUE;\n-          }\n+          this.inExterns = inExterns;\n         }\n \n         if (result != TernaryValue.UNKNOWN) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "Replace", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_232/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:54:55.266443153 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1974/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:07:32.441547760 -0500\n@@ -200,9 +200,7 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n-          return caseEquality(condition, blindScope, SHNE);\n         }\n \n       case Token.SHNE:\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_600/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:57:33.714330563 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_600/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:57:33.714330563 -0500\n@@ -674,12 +674,7 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n-          if (!leftTypeRestricted.canTestForShallowEqualityWith(\n-                  rightTypeRestricted)) {\n-            result = n.getType() == Token.SHEQ ?\n-                TernaryValue.FALSE : TernaryValue.TRUE;\n-          }\n+          this.inExterns = inExterns;\n         }\n \n         if (result != TernaryValue.UNKNOWN) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "Replace", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2580/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:11:55.984719182 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2580/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 09:11:55.988719154 -0500\n@@ -674,7 +674,8 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n+          this.inExterns = inExterns;\n+\t\t// SHEQ or SHNE\n           if (!leftTypeRestricted.canTestForShallowEqualityWith(\n                   rightTypeRestricted)) {\n             result = n.getType() == Token.SHEQ ?\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "InsertBefore", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1608/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:04:52.821288790 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1626/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:05:00.077294613 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2026/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:07:55.349602876 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2165/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:08:57.941739723 -0500\n@@ -200,9 +200,7 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n-          return caseEquality(condition, blindScope, SHNE);\n         }\n \n       case Token.SHNE:\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2165/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 09:08:57.941739723 -0500\n@@ -674,12 +674,7 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n-          if (!leftTypeRestricted.canTestForShallowEqualityWith(\n-                  rightTypeRestricted)) {\n-            result = n.getType() == Token.SHEQ ?\n-                TernaryValue.FALSE : TernaryValue.TRUE;\n-          }\n+          this.inExterns = inExterns;\n         }\n \n         if (result != TernaryValue.UNKNOWN) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "Replace", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_482/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:56:44.530597940 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_496/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:56:50.198562121 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2035/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:07:59.629613561 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2035/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 09:07:59.629613561 -0500\n@@ -674,12 +674,7 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n-          if (!leftTypeRestricted.canTestForShallowEqualityWith(\n-                  rightTypeRestricted)) {\n-            result = n.getType() == Token.SHEQ ?\n-                TernaryValue.FALSE : TernaryValue.TRUE;\n-          }\n+          this.inExterns = inExterns;\n         }\n \n         if (result != TernaryValue.UNKNOWN) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "Replace", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1809/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:06:21.389402092 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1711/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:05:38.165335871 -0500\n@@ -200,9 +200,7 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n-          return caseEquality(condition, blindScope, SHNE);\n         }\n \n       case Token.SHNE:\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1931/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:07:13.621505251 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2697/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:12:45.280410362 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2837/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:13:47.748126337 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_855/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:59:23.334026057 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_373/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:55:56.110617401 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_373/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:55:56.110617401 -0500\n@@ -674,12 +674,6 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n-          if (!leftTypeRestricted.canTestForShallowEqualityWith(\n-                  rightTypeRestricted)) {\n-            result = n.getType() == Token.SHEQ ?\n-                TernaryValue.FALSE : TernaryValue.TRUE;\n-          }\n         }\n \n         if (result != TernaryValue.UNKNOWN) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "Delete", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2426/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:10:51.065163480 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1220/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:02:02.701402644 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2882/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:14:08.248055092 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_3002/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:15:03.031909186 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_996/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:00:23.293791423 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_996/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 09:00:23.293791423 -0500\n@@ -674,12 +674,7 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n-          if (!leftTypeRestricted.canTestForShallowEqualityWith(\n-                  rightTypeRestricted)) {\n-            result = n.getType() == Token.SHEQ ?\n-                TernaryValue.FALSE : TernaryValue.TRUE;\n-          }\n+          this.inExterns = inExterns;\n         }\n \n         if (result != TernaryValue.UNKNOWN) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "Replace", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2691/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:12:42.816423872 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2691/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 09:12:42.820423851 -0500\n@@ -674,7 +674,8 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n+          this.inExterns = inExterns;\n+\t\t// SHEQ or SHNE\n           if (!leftTypeRestricted.canTestForShallowEqualityWith(\n                   rightTypeRestricted)) {\n             result = n.getType() == Token.SHEQ ?\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "InsertBefore", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_486/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:56:46.134587660 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2550/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:11:43.652810142 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_533/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:57:05.650471341 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2744/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:13:05.332307280 -0500\n@@ -200,9 +200,7 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n-          return caseEquality(condition, blindScope, SHNE);\n         }\n \n       case Token.SHNE:\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2744/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 09:13:05.336307261 -0500\n@@ -674,7 +674,8 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n+          this.inExterns = inExterns;\n+\t\t// SHEQ or SHNE\n           if (!leftTypeRestricted.canTestForShallowEqualityWith(\n                   rightTypeRestricted)) {\n             result = n.getType() == Token.SHEQ ?\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "InsertBefore", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_834/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:59:14.434038483 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2843/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:13:50.440116414 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2843/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 09:13:50.440116414 -0500\n@@ -674,7 +674,8 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n+          this.inExterns = inExterns;\n+\t\t// SHEQ or SHNE\n           if (!leftTypeRestricted.canTestForShallowEqualityWith(\n                   rightTypeRestricted)) {\n             result = n.getType() == Token.SHEQ ?\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "InsertBefore", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2609/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:12:08.280634218 -0500\n@@ -200,9 +200,7 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n-          return caseEquality(condition, blindScope, SHNE);\n         }\n \n       case Token.SHNE:\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1990/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:07:38.949563054 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1669/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:05:19.253313219 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1946/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:07:20.109519610 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1995/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:07:41.417568931 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1601/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:04:49.585286416 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1504/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:04:05.425268841 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1795/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:06:14.917390988 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_643/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:57:51.630255697 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_371/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:55:55.274614779 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_371/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:55:55.278614791 -0500\n@@ -674,7 +674,8 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n+          this.inExterns = inExterns;\n+\t\t// SHEQ or SHNE\n           if (!leftTypeRestricted.canTestForShallowEqualityWith(\n                   rightTypeRestricted)) {\n             result = n.getType() == Token.SHEQ ?\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "InsertBefore", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2562/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:11:48.552773296 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2914/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:14:22.424011411 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1264/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:02:20.809362474 -0500\n@@ -200,9 +200,7 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n-          return caseEquality(condition, blindScope, SHNE);\n         }\n \n       case Token.SHNE:\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1264/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 09:02:20.809362474 -0500\n@@ -674,7 +674,8 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n+          this.inExterns = inExterns;\n+\t\t// SHEQ or SHNE\n           if (!leftTypeRestricted.canTestForShallowEqualityWith(\n                   rightTypeRestricted)) {\n             result = n.getType() == Token.SHEQ ?\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "InsertBefore", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_295/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:55:22.258516121 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_76/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:53:41.934286558 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1649/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:05:10.237303905 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2635/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:12:18.860565475 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1826/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:06:28.653415022 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1595/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:04:47.193284751 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1595/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 09:04:47.197284754 -0500\n@@ -674,12 +674,7 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n-          if (!leftTypeRestricted.canTestForShallowEqualityWith(\n-                  rightTypeRestricted)) {\n-            result = n.getType() == Token.SHEQ ?\n-                TernaryValue.FALSE : TernaryValue.TRUE;\n-          }\n+          this.inExterns = inExterns;\n         }\n \n         if (result != TernaryValue.UNKNOWN) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "Replace", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_800/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:58:59.790063134 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_146/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:54:15.510350028 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1972/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:07:31.637545892 -0500\n@@ -200,9 +200,7 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n-          return caseEquality(condition, blindScope, SHNE);\n         }\n \n       case Token.SHNE:\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1455/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:03:43.805271261 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2194/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:09:11.045651368 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2194/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 09:09:11.049651343 -0500\n@@ -674,7 +674,8 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n+          this.inExterns = inExterns;\n+\t\t// SHEQ or SHNE\n           if (!leftTypeRestricted.canTestForShallowEqualityWith(\n                   rightTypeRestricted)) {\n             result = n.getType() == Token.SHEQ ?\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "InsertBefore", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_913/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:59:47.982001123 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1349/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:02:56.993305262 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1349/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 09:02:56.993305262 -0500\n@@ -674,7 +674,8 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n+          this.inExterns = inExterns;\n+\t\t// SHEQ or SHNE\n           if (!leftTypeRestricted.canTestForShallowEqualityWith(\n                   rightTypeRestricted)) {\n             result = n.getType() == Token.SHEQ ?\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "InsertBefore", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_3158/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:16:11.819802173 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2311/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:10:01.213368758 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2311/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 09:10:01.213368758 -0500\n@@ -674,7 +674,8 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n+          this.inExterns = inExterns;\n+\t\t// SHEQ or SHNE\n           if (!leftTypeRestricted.canTestForShallowEqualityWith(\n                   rightTypeRestricted)) {\n             result = n.getType() == Token.SHEQ ?\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "InsertBefore", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1732/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:05:47.081347946 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2472/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:11:10.557084890 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1361/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:03:01.909299683 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_531/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:57:04.842475843 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_531/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:57:04.842475843 -0500\n@@ -674,7 +674,8 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n+          this.inExterns = inExterns;\n+\t\t// SHEQ or SHNE\n           if (!leftTypeRestricted.canTestForShallowEqualityWith(\n                   rightTypeRestricted)) {\n             result = n.getType() == Token.SHEQ ?\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "InsertBefore", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_226/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:54:52.822436915 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2891/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:14:12.492041554 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2891/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 09:14:12.492041554 -0500\n@@ -674,7 +674,8 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n+          this.inExterns = inExterns;\n+\t\t// SHEQ or SHNE\n           if (!leftTypeRestricted.canTestForShallowEqualityWith(\n                   rightTypeRestricted)) {\n             result = n.getType() == Token.SHEQ ?\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "InsertBefore", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2633/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:12:18.004570889 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1676/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:05:22.565316886 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1676/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 09:05:22.565316886 -0500\n@@ -674,12 +674,7 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n-          if (!leftTypeRestricted.canTestForShallowEqualityWith(\n-                  rightTypeRestricted)) {\n-            result = n.getType() == Token.SHEQ ?\n-                TernaryValue.FALSE : TernaryValue.TRUE;\n-          }\n+          this.inExterns = inExterns;\n         }\n \n         if (result != TernaryValue.UNKNOWN) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "Replace", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2318/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:10:04.437353363 -0500\n@@ -200,9 +200,7 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n-          return caseEquality(condition, blindScope, SHNE);\n         }\n \n       case Token.SHNE:\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2727/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:12:57.760344795 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2727/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 09:12:57.760344795 -0500\n@@ -674,7 +674,8 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n+          this.inExterns = inExterns;\n+\t\t// SHEQ or SHNE\n           if (!leftTypeRestricted.canTestForShallowEqualityWith(\n                   rightTypeRestricted)) {\n             result = n.getType() == Token.SHEQ ?\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "InsertBefore", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2613/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:12:09.896623460 -0500\n@@ -200,9 +200,7 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n-          return caseEquality(condition, blindScope, SHNE);\n         }\n \n       case Token.SHNE:\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2501/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:11:23.120975101 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_158/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:54:20.478360653 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_879/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:59:33.146014504 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1933/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:07:14.425507013 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_50/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:53:29.246266620 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2649/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:12:24.532530226 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2649/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 09:12:24.552530103 -0500\n@@ -674,7 +674,8 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n+          this.inExterns = inExterns;\n+\t\t// SHEQ or SHNE\n           if (!leftTypeRestricted.canTestForShallowEqualityWith(\n                   rightTypeRestricted)) {\n             result = n.getType() == Token.SHEQ ?\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "InsertBefore", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2351/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:10:19.105287173 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_3111/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:15:50.707827150 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2366/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:10:25.681259488 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_246/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:55:01.058458184 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_938/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:59:58.525941635 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1678/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:05:23.361317787 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1702/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:05:34.069330619 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_605/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:57:36.190319546 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_605/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:57:36.194319528 -0500\n@@ -674,12 +674,7 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n-          if (!leftTypeRestricted.canTestForShallowEqualityWith(\n-                  rightTypeRestricted)) {\n-            result = n.getType() == Token.SHEQ ?\n-                TernaryValue.FALSE : TernaryValue.TRUE;\n-          }\n+          this.inExterns = inExterns;\n         }\n \n         if (result != TernaryValue.UNKNOWN) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "Replace", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2785/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:13:23.860222350 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2785/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 09:13:23.860222350 -0500\n@@ -674,12 +674,7 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n-          if (!leftTypeRestricted.canTestForShallowEqualityWith(\n-                  rightTypeRestricted)) {\n-            result = n.getType() == Token.SHEQ ?\n-                TernaryValue.FALSE : TernaryValue.TRUE;\n-          }\n+          this.inExterns = inExterns;\n         }\n \n         if (result != TernaryValue.UNKNOWN) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "Replace", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_944/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:00:01.017925394 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_944/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 09:00:01.017925394 -0500\n@@ -674,7 +674,8 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n+          this.inExterns = inExterns;\n+\t\t// SHEQ or SHNE\n           if (!leftTypeRestricted.canTestForShallowEqualityWith(\n                   rightTypeRestricted)) {\n             result = n.getType() == Token.SHEQ ?\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "InsertBefore", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_94/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:53:51.230302621 -0500\n@@ -200,9 +200,7 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n-          return caseEquality(condition, blindScope, SHNE);\n         }\n \n       case Token.SHNE:\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_94/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:53:51.230302621 -0500\n@@ -674,7 +674,8 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n+          this.inExterns = inExterns;\n+\t\t// SHEQ or SHNE\n           if (!leftTypeRestricted.canTestForShallowEqualityWith(\n                   rightTypeRestricted)) {\n             result = n.getType() == Token.SHEQ ?\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "InsertBefore", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_557/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:57:15.642417771 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_375/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:55:56.918619941 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1254/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:02:16.697370886 -0500\n@@ -200,9 +200,7 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n-          return caseEquality(condition, blindScope, SHNE);\n         }\n \n       case Token.SHNE:\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1254/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 09:02:16.701370877 -0500\n@@ -674,12 +674,6 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n-          if (!leftTypeRestricted.canTestForShallowEqualityWith(\n-                  rightTypeRestricted)) {\n-            result = n.getType() == Token.SHEQ ?\n-                TernaryValue.FALSE : TernaryValue.TRUE;\n-          }\n         }\n \n         if (result != TernaryValue.UNKNOWN) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "Delete", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_733/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:58:31.138127581 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1683/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:05:25.805320599 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2415/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:10:46.121180873 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2415/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 09:10:46.121180873 -0500\n@@ -674,12 +674,7 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n-          if (!leftTypeRestricted.canTestForShallowEqualityWith(\n-                  rightTypeRestricted)) {\n-            result = n.getType() == Token.SHEQ ?\n-                TernaryValue.FALSE : TernaryValue.TRUE;\n-          }\n+          this.inExterns = inExterns;\n         }\n \n         if (result != TernaryValue.UNKNOWN) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "Replace", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2507/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:11:25.580954412 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1111/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:01:13.145557666 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1169/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:01:40.533463393 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_3023/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:15:12.235890360 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2853/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:13:54.764100840 -0500\n@@ -200,9 +200,7 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n-          return caseEquality(condition, blindScope, SHNE);\n         }\n \n       case Token.SHNE:\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2853/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 09:13:54.768100827 -0500\n@@ -674,12 +674,6 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n-          if (!leftTypeRestricted.canTestForShallowEqualityWith(\n-                  rightTypeRestricted)) {\n-            result = n.getType() == Token.SHEQ ?\n-                TernaryValue.FALSE : TernaryValue.TRUE;\n-          }\n         }\n \n         if (result != TernaryValue.UNKNOWN) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "Delete", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2525/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:11:32.840894837 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_152/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:54:17.970355250 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1843/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:06:35.965428522 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2316/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:10:03.633357173 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2316/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 09:10:03.633357173 -0500\n@@ -674,12 +674,7 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n-          if (!leftTypeRestricted.canTestForShallowEqualityWith(\n-                  rightTypeRestricted)) {\n-            result = n.getType() == Token.SHEQ ?\n-                TernaryValue.FALSE : TernaryValue.TRUE;\n-          }\n+          this.inExterns = inExterns;\n         }\n \n         if (result != TernaryValue.UNKNOWN) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "Replace", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2230/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:09:25.869559010 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2230/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 09:09:25.873558986 -0500\n@@ -674,7 +674,8 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n+          this.inExterns = inExterns;\n+\t\t// SHEQ or SHNE\n           if (!leftTypeRestricted.canTestForShallowEqualityWith(\n                   rightTypeRestricted)) {\n             result = n.getType() == Token.SHEQ ?\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "InsertBefore", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1779/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:06:07.533378810 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2930/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:14:29.331991690 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_598/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:57:32.870334366 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_898/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:59:41.294006562 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2362/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:10:24.057266212 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_559/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:57:16.478413467 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_559/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:57:16.478413467 -0500\n@@ -674,7 +674,8 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n+          this.inExterns = inExterns;\n+\t\t// SHEQ or SHNE\n           if (!leftTypeRestricted.canTestForShallowEqualityWith(\n                   rightTypeRestricted)) {\n             result = n.getType() == Token.SHEQ ?\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "InsertBefore", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1244/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:02:12.581379717 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1477/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:03:53.637269195 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2380/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:10:31.381236451 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2380/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 09:10:31.381236451 -0500\n@@ -674,12 +674,7 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n-          if (!leftTypeRestricted.canTestForShallowEqualityWith(\n-                  rightTypeRestricted)) {\n-            result = n.getType() == Token.SHEQ ?\n-                TernaryValue.FALSE : TernaryValue.TRUE;\n-          }\n+          this.inExterns = inExterns;\n         }\n \n         if (result != TernaryValue.UNKNOWN) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "Replace", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2376/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:10:29.733243022 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1222/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:02:03.505400686 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_3031/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:15:15.563883921 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_3031/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 09:15:15.563883921 -0500\n@@ -674,7 +674,8 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n+          this.inExterns = inExterns;\n+\t\t// SHEQ or SHNE\n           if (!leftTypeRestricted.canTestForShallowEqualityWith(\n                   rightTypeRestricted)) {\n             result = n.getType() == Token.SHEQ ?\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "InsertBefore", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_3013/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:15:07.979898876 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2623/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:12:13.916597105 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2623/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 09:12:13.916597105 -0500\n@@ -674,7 +674,8 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n+          this.inExterns = inExterns;\n+\t\t// SHEQ or SHNE\n           if (!leftTypeRestricted.canTestForShallowEqualityWith(\n                   rightTypeRestricted)) {\n             result = n.getType() == Token.SHEQ ?\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "InsertBefore", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1603/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:04:50.413287010 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1603/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 09:04:50.417287013 -0500\n@@ -674,12 +674,7 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n-          if (!leftTypeRestricted.canTestForShallowEqualityWith(\n-                  rightTypeRestricted)) {\n-            result = n.getType() == Token.SHEQ ?\n-                TernaryValue.FALSE : TernaryValue.TRUE;\n-          }\n+          this.inExterns = inExterns;\n         }\n \n         if (result != TernaryValue.UNKNOWN) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "Replace", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2775/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:13:19.628240916 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2131/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:08:42.953727962 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_252/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:55:03.506464644 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2384/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:10:32.977230155 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_771/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:58:47.578087887 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_3154/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:16:10.135803932 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_645/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:57:52.490252379 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1904/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:07:02.209480779 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_223/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:54:51.166432725 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_572/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:57:22.222384606 -0500\n@@ -200,9 +200,7 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n-          return caseEquality(condition, blindScope, SHNE);\n         }\n \n       case Token.SHNE:\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_723/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:58:27.110138471 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2762/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:13:13.716267666 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_804/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:59:01.418060128 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_804/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:59:01.418060128 -0500\n@@ -674,12 +674,7 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n-          if (!leftTypeRestricted.canTestForShallowEqualityWith(\n-                  rightTypeRestricted)) {\n-            result = n.getType() == Token.SHEQ ?\n-                TernaryValue.FALSE : TernaryValue.TRUE;\n-          }\n+          this.inExterns = inExterns;\n         }\n \n         if (result != TernaryValue.UNKNOWN) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "Replace", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2806/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:13:33.396182267 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_194/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:54:37.006398129 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_194/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:54:37.006398129 -0500\n@@ -674,12 +674,6 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n-          if (!leftTypeRestricted.canTestForShallowEqualityWith(\n-                  rightTypeRestricted)) {\n-            result = n.getType() == Token.SHEQ ?\n-                TernaryValue.FALSE : TernaryValue.TRUE;\n-          }\n         }\n \n         if (result != TernaryValue.UNKNOWN) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "Delete", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_494/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:56:49.390567143 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_845/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:59:19.330031414 -0500\n@@ -200,9 +200,7 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n-          return caseEquality(condition, blindScope, SHNE);\n         }\n \n       case Token.SHNE:\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_617/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:57:41.062298505 -0500\n@@ -200,9 +200,7 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n-          return caseEquality(condition, blindScope, SHNE);\n         }\n \n       case Token.SHNE:\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2918/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:14:24.172006325 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_836/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:59:15.238037282 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1016/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:00:31.477747032 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_794/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:58:57.374067723 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1319/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:02:43.565323097 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1242/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:02:11.757381536 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1341/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:02:53.757309209 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1341/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 09:02:53.757309209 -0500\n@@ -674,7 +674,8 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n+          this.inExterns = inExterns;\n+\t\t// SHEQ or SHNE\n           if (!leftTypeRestricted.canTestForShallowEqualityWith(\n                   rightTypeRestricted)) {\n             result = n.getType() == Token.SHEQ ?\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "InsertBefore", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2654/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:12:27.032515032 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_3004/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:15:03.839907473 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1654/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:05:12.741306391 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1654/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 09:05:12.741306391 -0500\n@@ -674,12 +674,7 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n-          if (!leftTypeRestricted.canTestForShallowEqualityWith(\n-                  rightTypeRestricted)) {\n-            result = n.getType() == Token.SHEQ ?\n-                TernaryValue.FALSE : TernaryValue.TRUE;\n-          }\n+          this.inExterns = inExterns;\n         }\n \n         if (result != TernaryValue.UNKNOWN) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "Replace", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2952/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:14:39.547964331 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2755/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:13:10.316283491 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2755/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 09:13:10.320283473 -0500\n@@ -674,7 +674,8 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n+          this.inExterns = inExterns;\n+\t\t// SHEQ or SHNE\n           if (!leftTypeRestricted.canTestForShallowEqualityWith(\n                   rightTypeRestricted)) {\n             result = n.getType() == Token.SHEQ ?\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "InsertBefore", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_165/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:54:23.894368132 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_306/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:55:27.158530137 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_306/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:55:27.162530148 -0500\n@@ -674,12 +674,6 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n-          if (!leftTypeRestricted.canTestForShallowEqualityWith(\n-                  rightTypeRestricted)) {\n-            result = n.getType() == Token.SHEQ ?\n-                TernaryValue.FALSE : TernaryValue.TRUE;\n-          }\n         }\n \n         if (result != TernaryValue.UNKNOWN) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "Delete", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_3027/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:15:13.847887217 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1159/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:01:36.249476690 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1624/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:04:59.273293935 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_3119/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:15:54.027822790 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2795/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:13:28.124204131 -0500\n@@ -200,9 +200,7 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n-          return caseEquality(condition, blindScope, SHNE);\n         }\n \n       case Token.SHNE:\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_424/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:56:18.366689300 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_424/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:56:18.366689300 -0500\n@@ -674,12 +674,7 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n-          if (!leftTypeRestricted.canTestForShallowEqualityWith(\n-                  rightTypeRestricted)) {\n-            result = n.getType() == Token.SHEQ ?\n-                TernaryValue.FALSE : TernaryValue.TRUE;\n-          }\n+          this.inExterns = inExterns;\n         }\n \n         if (result != TernaryValue.UNKNOWN) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "Replace", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_476/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:56:42.098613732 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_476/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:56:42.098613732 -0500\n@@ -674,12 +674,6 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n-          if (!leftTypeRestricted.canTestForShallowEqualityWith(\n-                  rightTypeRestricted)) {\n-            result = n.getType() == Token.SHEQ ?\n-                TernaryValue.FALSE : TernaryValue.TRUE;\n-          }\n         }\n \n         if (result != TernaryValue.UNKNOWN) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "Delete", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_3084/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:15:38.855844081 -0500\n@@ -200,9 +200,7 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n-          return caseEquality(condition, blindScope, SHNE);\n         }\n \n       case Token.SHNE:\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2673/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:12:35.424465561 -0500\n@@ -200,9 +200,7 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n-          return caseEquality(condition, blindScope, SHNE);\n         }\n \n       case Token.SHNE:\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_3070/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:15:32.999853259 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2594/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:12:01.780678439 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_110/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:53:57.834314750 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2397/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:10:38.637208386 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2967/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:14:46.403947140 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2974/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:14:50.047938376 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2621/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:12:13.092602461 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2151/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:08:51.125750728 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2161/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:08:56.181752090 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2454/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:11:03.169123440 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1099/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:01:08.149577322 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1099/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 09:01:08.153577306 -0500\n@@ -674,12 +674,7 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n-          if (!leftTypeRestricted.canTestForShallowEqualityWith(\n-                  rightTypeRestricted)) {\n-            result = n.getType() == Token.SHEQ ?\n-                TernaryValue.FALSE : TernaryValue.TRUE;\n-          }\n+          this.inExterns = inExterns;\n         }\n \n         if (result != TernaryValue.UNKNOWN) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "Replace", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_3142/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:16:05.063809467 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_500/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:56:51.810552185 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2333/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:10:11.005322951 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1483/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:03:56.205268923 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1483/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 09:03:56.205268923 -0500\n@@ -674,7 +674,8 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n+          this.inExterns = inExterns;\n+\t\t// SHEQ or SHNE\n           if (!leftTypeRestricted.canTestForShallowEqualityWith(\n                   rightTypeRestricted)) {\n             result = n.getType() == Token.SHEQ ?\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "InsertBefore", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1000/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:00:25.033781770 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1529/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:04:16.069270426 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1529/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 09:04:16.069270426 -0500\n@@ -674,12 +674,6 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n-          if (!leftTypeRestricted.canTestForShallowEqualityWith(\n-                  rightTypeRestricted)) {\n-            result = n.getType() == Token.SHEQ ?\n-                TernaryValue.FALSE : TernaryValue.TRUE;\n-          }\n         }\n \n         if (result != TernaryValue.UNKNOWN) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "Delete", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_739/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:58:33.610121131 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_739/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:58:33.610121131 -0500\n@@ -674,7 +674,8 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n+          this.inExterns = inExterns;\n+\t\t// SHEQ or SHNE\n           if (!leftTypeRestricted.canTestForShallowEqualityWith(\n                   rightTypeRestricted)) {\n             result = n.getType() == Token.SHEQ ?\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "InsertBefore", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2126/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:08:40.537721301 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_561/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:57:17.326409126 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_561/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:57:17.326409126 -0500\n@@ -674,12 +674,6 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n-          if (!leftTypeRestricted.canTestForShallowEqualityWith(\n-                  rightTypeRestricted)) {\n-            result = n.getType() == Token.SHEQ ?\n-                TernaryValue.FALSE : TernaryValue.TRUE;\n-          }\n         }\n \n         if (result != TernaryValue.UNKNOWN) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "Delete", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1704/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:05:34.901331670 -0500\n@@ -200,9 +200,7 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n-          return caseEquality(condition, blindScope, SHNE);\n         }\n \n       case Token.SHNE:\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1704/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 09:05:34.901331670 -0500\n@@ -674,12 +674,7 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n-          if (!leftTypeRestricted.canTestForShallowEqualityWith(\n-                  rightTypeRestricted)) {\n-            result = n.getType() == Token.SHEQ ?\n-                TernaryValue.FALSE : TernaryValue.TRUE;\n-          }\n+          this.inExterns = inExterns;\n         }\n \n         if (result != TernaryValue.UNKNOWN) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "Replace", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1686/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:05:27.425322502 -0500\n@@ -200,9 +200,7 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n-          return caseEquality(condition, blindScope, SHNE);\n         }\n \n       case Token.SHNE:\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2060/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:08:11.117642810 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1048/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:00:44.413681865 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_753/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:58:39.426106633 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_753/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:58:39.430106623 -0500\n@@ -674,7 +674,8 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n+          this.inExterns = inExterns;\n+\t\t// SHEQ or SHNE\n           if (!leftTypeRestricted.canTestForShallowEqualityWith(\n                   rightTypeRestricted)) {\n             result = n.getType() == Token.SHEQ ?\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "InsertBefore", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2210/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:09:17.725608780 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2210/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 09:09:17.729608754 -0500\n@@ -674,7 +674,8 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n+          this.inExterns = inExterns;\n+\t\t// SHEQ or SHNE\n           if (!leftTypeRestricted.canTestForShallowEqualityWith(\n                   rightTypeRestricted)) {\n             result = n.getType() == Token.SHEQ ?\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "InsertBefore", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_810/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:59:03.846055768 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1835/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:06:32.709422452 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2011/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:07:48.749586635 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2011/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 09:07:48.753586645 -0500\n@@ -674,7 +674,8 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n+          this.inExterns = inExterns;\n+\t\t// SHEQ or SHNE\n           if (!leftTypeRestricted.canTestForShallowEqualityWith(\n                   rightTypeRestricted)) {\n             result = n.getType() == Token.SHEQ ?\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "InsertBefore", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2936/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:14:31.819984830 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1855/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:06:40.885437873 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1855/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 09:06:40.885437873 -0500\n@@ -674,12 +674,7 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n-          if (!leftTypeRestricted.canTestForShallowEqualityWith(\n-                  rightTypeRestricted)) {\n-            result = n.getType() == Token.SHEQ ?\n-                TernaryValue.FALSE : TernaryValue.TRUE;\n-          }\n+          this.inExterns = inExterns;\n         }\n \n         if (result != TernaryValue.UNKNOWN) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "Replace", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_308/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:55:27.958532446 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1968/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:07:29.993542084 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1968/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 09:07:29.997542094 -0500\n@@ -674,12 +674,7 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n-          if (!leftTypeRestricted.canTestForShallowEqualityWith(\n-                  rightTypeRestricted)) {\n-            result = n.getType() == Token.SHEQ ?\n-                TernaryValue.FALSE : TernaryValue.TRUE;\n-          }\n+          this.inExterns = inExterns;\n         }\n \n         if (result != TernaryValue.UNKNOWN) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "Replace", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_631/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:57:46.738275040 -0500\n@@ -200,9 +200,7 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n-          return caseEquality(condition, blindScope, SHNE);\n         }\n \n       case Token.SHNE:\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_970/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:00:12.389854541 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_970/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 09:00:12.393854517 -0500\n@@ -674,12 +674,7 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n-          if (!leftTypeRestricted.canTestForShallowEqualityWith(\n-                  rightTypeRestricted)) {\n-            result = n.getType() == Token.SHEQ ?\n-                TernaryValue.FALSE : TernaryValue.TRUE;\n-          }\n+          this.inExterns = inExterns;\n         }\n \n         if (result != TernaryValue.UNKNOWN) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "Replace", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2582/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:11:56.780713514 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_708/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:58:20.454157509 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_708/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:58:20.454157509 -0500\n@@ -674,12 +674,6 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n-          if (!leftTypeRestricted.canTestForShallowEqualityWith(\n-                  rightTypeRestricted)) {\n-            result = n.getType() == Token.SHEQ ?\n-                TernaryValue.FALSE : TernaryValue.TRUE;\n-          }\n         }\n \n         if (result != TernaryValue.UNKNOWN) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "Delete", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1773/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:06:05.125374955 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1773/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 09:06:05.125374955 -0500\n@@ -674,12 +674,7 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n-          if (!leftTypeRestricted.canTestForShallowEqualityWith(\n-                  rightTypeRestricted)) {\n-            result = n.getType() == Token.SHEQ ?\n-                TernaryValue.FALSE : TernaryValue.TRUE;\n-          }\n+          this.inExterns = inExterns;\n         }\n \n         if (result != TernaryValue.UNKNOWN) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "Replace", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2600/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:12:04.244661494 -0500\n@@ -200,9 +200,7 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n-          return caseEquality(condition, blindScope, SHNE);\n         }\n \n       case Token.SHNE:\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1960/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:07:25.769532393 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_83/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:53:45.334292295 -0500\n@@ -200,9 +200,7 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n-          return caseEquality(condition, blindScope, SHNE);\n         }\n \n       case Token.SHNE:\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1449/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:03:41.305272050 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_258/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:55:05.930471099 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2773/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:13:18.808244568 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1767/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:06:01.817369754 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_3107/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:15:48.875829626 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2584/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:11:57.624707530 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2847/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:13:52.140110237 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2052/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:08:07.849634406 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2052/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 09:08:07.849634406 -0500\n@@ -674,12 +674,7 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n-          if (!leftTypeRestricted.canTestForShallowEqualityWith(\n-                  rightTypeRestricted)) {\n-            result = n.getType() == Token.SHEQ ?\n-                TernaryValue.FALSE : TernaryValue.TRUE;\n-          }\n+          this.inExterns = inExterns;\n         }\n \n         if (result != TernaryValue.UNKNOWN) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "Replace", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_3127/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:15:57.403818527 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1459/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:03:45.437270804 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_647/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:57:53.298249285 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_416/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:56:15.018678231 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_416/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:56:15.018678231 -0500\n@@ -674,12 +674,7 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n-          if (!leftTypeRestricted.canTestForShallowEqualityWith(\n-                  rightTypeRestricted)) {\n-            result = n.getType() == Token.SHEQ ?\n-                TernaryValue.FALSE : TernaryValue.TRUE;\n-          }\n+          this.inExterns = inExterns;\n         }\n \n         if (result != TernaryValue.UNKNOWN) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "Replace", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1447/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:03:40.497272330 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1399/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:03:18.289284610 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2804/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:13:32.552185719 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1746/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:05:52.797356136 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1692/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:05:29.913325482 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1692/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 09:05:29.913325482 -0500\n@@ -674,12 +674,6 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n-          if (!leftTypeRestricted.canTestForShallowEqualityWith(\n-                  rightTypeRestricted)) {\n-            result = n.getType() == Token.SHEQ ?\n-                TernaryValue.FALSE : TernaryValue.TRUE;\n-          }\n         }\n \n         if (result != TernaryValue.UNKNOWN) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "Delete", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_3095/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:15:43.859836668 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_104/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:53:55.382310179 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1238/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:02:10.141385150 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2216/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:09:20.213593326 -0500\n@@ -200,9 +200,7 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n-          return caseEquality(condition, blindScope, SHNE);\n         }\n \n       case Token.SHNE:\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2284/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:09:49.865425470 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2509/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:11:26.372947805 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1182/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:01:46.309446282 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2430/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:10:52.673157956 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_286/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:55:18.190504659 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2701/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:12:46.976401169 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2701/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 09:12:46.976401169 -0500\n@@ -674,12 +674,7 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n-          if (!leftTypeRestricted.canTestForShallowEqualityWith(\n-                  rightTypeRestricted)) {\n-            result = n.getType() == Token.SHEQ ?\n-                TernaryValue.FALSE : TernaryValue.TRUE;\n-          }\n+          this.inExterns = inExterns;\n         }\n \n         if (result != TernaryValue.UNKNOWN) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "Replace", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1323/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:02:45.169320761 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_228/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:54:53.662439052 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_228/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:54:53.662439052 -0500\n@@ -674,12 +674,7 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n-          if (!leftTypeRestricted.canTestForShallowEqualityWith(\n-                  rightTypeRestricted)) {\n-            result = n.getType() == Token.SHEQ ?\n-                TernaryValue.FALSE : TernaryValue.TRUE;\n-          }\n+          this.inExterns = inExterns;\n         }\n \n         if (result != TernaryValue.UNKNOWN) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "Replace", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2605/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:12:06.660645097 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_70/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:53:38.482280904 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2677/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:12:37.092455999 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_786/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:58:54.098074182 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2861/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:13:58.116089074 -0500\n@@ -200,9 +200,7 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n-          return caseEquality(condition, blindScope, SHNE);\n         }\n \n       case Token.SHNE:\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2861/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 09:13:58.116089074 -0500\n@@ -674,12 +674,6 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n-          if (!leftTypeRestricted.canTestForShallowEqualityWith(\n-                  rightTypeRestricted)) {\n-            result = n.getType() == Token.SHEQ ?\n-                TernaryValue.FALSE : TernaryValue.TRUE;\n-          }\n         }\n \n         if (result != TernaryValue.UNKNOWN) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "Delete", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2170/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:09:00.345723030 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_414/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:56:14.146675364 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_414/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:56:14.146675364 -0500\n@@ -674,7 +674,8 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n+          this.inExterns = inExterns;\n+\t\t// SHEQ or SHNE\n           if (!leftTypeRestricted.canTestForShallowEqualityWith(\n                   rightTypeRestricted)) {\n             result = n.getType() == Token.SHEQ ?\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "InsertBefore", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2236/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:09:28.333544411 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2236/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 09:09:28.333544411 -0500\n@@ -674,12 +674,6 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n-          if (!leftTypeRestricted.canTestForShallowEqualityWith(\n-                  rightTypeRestricted)) {\n-            result = n.getType() == Token.SHEQ ?\n-                TernaryValue.FALSE : TernaryValue.TRUE;\n-          }\n         }\n \n         if (result != TernaryValue.UNKNOWN) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "Delete", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2268/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:09:43.221460551 -0500\n@@ -200,9 +200,7 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n-          return caseEquality(condition, blindScope, SHNE);\n         }\n \n       case Token.SHNE:\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_3042/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:15:21.011873791 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1940/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:07:17.681514199 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1817/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:06:24.637407813 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1248/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:02:14.233376122 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1248/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 09:02:14.233376122 -0500\n@@ -674,7 +674,8 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n+          this.inExterns = inExterns;\n+\t\t// SHEQ or SHNE\n           if (!leftTypeRestricted.canTestForShallowEqualityWith(\n                   rightTypeRestricted)) {\n             result = n.getType() == Token.SHEQ ?\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "InsertBefore", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_741/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:58:34.438119009 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_458/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:56:34.754663022 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_661/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:58:00.006224427 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_14/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:53:11.126242328 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1190/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:01:49.601436941 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_3164/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:16:14.283799672 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_3011/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:15:07.151900572 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_594/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:57:31.262341688 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1764/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:06:00.213367271 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2895/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:14:14.148036378 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_16/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:53:11.994243374 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1518/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:04:11.157269476 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1518/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 09:04:11.157269476 -0500\n@@ -674,12 +674,7 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n-          if (!leftTypeRestricted.canTestForShallowEqualityWith(\n-                  rightTypeRestricted)) {\n-            result = n.getType() == Token.SHEQ ?\n-                TernaryValue.FALSE : TernaryValue.TRUE;\n-          }\n+          this.inExterns = inExterns;\n         }\n \n         if (result != TernaryValue.UNKNOWN) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "Replace", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1085/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:01:01.681603957 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1006/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:00:27.449768567 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1865/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:06:45.097446046 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2070/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:08:15.213653436 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1664/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:05:16.821310609 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2299/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:09:56.365392502 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2924/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:14:26.655999212 -0500\n@@ -200,9 +200,7 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n-          return caseEquality(condition, blindScope, SHNE);\n         }\n \n       case Token.SHNE:\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2924/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 09:14:26.659999200 -0500\n@@ -674,12 +674,7 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n-          if (!leftTypeRestricted.canTestForShallowEqualityWith(\n-                  rightTypeRestricted)) {\n-            result = n.getType() == Token.SHEQ ?\n-                TernaryValue.FALSE : TernaryValue.TRUE;\n-          }\n+          this.inExterns = inExterns;\n         }\n \n         if (result != TernaryValue.UNKNOWN) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "Replace", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1914/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:07:06.317489471 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_700/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:58:17.066167702 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_700/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:58:17.070167689 -0500\n@@ -674,12 +674,7 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n-          if (!leftTypeRestricted.canTestForShallowEqualityWith(\n-                  rightTypeRestricted)) {\n-            result = n.getType() == Token.SHEQ ?\n-                TernaryValue.FALSE : TernaryValue.TRUE;\n-          }\n+          this.inExterns = inExterns;\n         }\n \n         if (result != TernaryValue.UNKNOWN) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "Replace", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_927/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:59:53.673973996 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_326/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:55:36.222556652 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1966/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:07:29.169540184 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2942/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:14:34.375977917 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2942/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 09:14:34.375977917 -0500\n@@ -674,12 +674,7 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n-          if (!leftTypeRestricted.canTestForShallowEqualityWith(\n-                  rightTypeRestricted)) {\n-            result = n.getType() == Token.SHEQ ?\n-                TernaryValue.FALSE : TernaryValue.TRUE;\n-          }\n+          this.inExterns = inExterns;\n         }\n \n         if (result != TernaryValue.UNKNOWN) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "Replace", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2527/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:11:33.720887766 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1408/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:03:22.445281618 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2370/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:10:27.309252819 -0500\n@@ -200,9 +200,7 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n-          return caseEquality(condition, blindScope, SHNE);\n         }\n \n       case Token.SHNE:\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_649/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:57:54.170245969 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_649/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:57:54.174245954 -0500\n@@ -674,7 +674,8 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n+          this.inExterns = inExterns;\n+\t\t// SHEQ or SHNE\n           if (!leftTypeRestricted.canTestForShallowEqualityWith(\n                   rightTypeRestricted)) {\n             result = n.getType() == Token.SHEQ ?\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "InsertBefore", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1546/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:04:23.409272537 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2261/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:09:39.937478415 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2444/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:10:59.145136357 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_3109/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:15:49.795828383 -0500\n@@ -200,9 +200,7 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n-          return caseEquality(condition, blindScope, SHNE);\n         }\n \n       case Token.SHNE:\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2753/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:13:09.496287358 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_320/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:55:33.770549405 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_320/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:55:33.770549405 -0500\n@@ -674,12 +674,7 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n-          if (!leftTypeRestricted.canTestForShallowEqualityWith(\n-                  rightTypeRestricted)) {\n-            result = n.getType() == Token.SHEQ ?\n-                TernaryValue.FALSE : TernaryValue.TRUE;\n-          }\n+          this.inExterns = inExterns;\n         }\n \n         if (result != TernaryValue.UNKNOWN) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "Replace", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_33/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:53:20.638254450 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_33/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:53:20.638254450 -0500\n@@ -674,7 +674,8 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n+          this.inExterns = inExterns;\n+\t\t// SHEQ or SHNE\n           if (!leftTypeRestricted.canTestForShallowEqualityWith(\n                   rightTypeRestricted)) {\n             result = n.getType() == Token.SHEQ ?\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "InsertBefore", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_629/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:57:45.930278311 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2388/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:10:34.589223872 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1303/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:02:37.057333150 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1303/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 09:02:37.061333144 -0500\n@@ -674,7 +674,8 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n+          this.inExterns = inExterns;\n+\t\t// SHEQ or SHNE\n           if (!leftTypeRestricted.canTestForShallowEqualityWith(\n                   rightTypeRestricted)) {\n             result = n.getType() == Token.SHEQ ?\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "InsertBefore", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_422/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:56:17.506686449 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1487/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:03:57.845268807 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_685/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:58:10.574188219 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2991/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:14:57.479921285 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_551/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:57:13.182430596 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_551/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:57:13.182430596 -0500\n@@ -674,7 +674,8 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n+          this.inExterns = inExterns;\n+\t\t// SHEQ or SHNE\n           if (!leftTypeRestricted.canTestForShallowEqualityWith(\n                   rightTypeRestricted)) {\n             result = n.getType() == Token.SHEQ ?\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "InsertBefore", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1721/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:05:42.249341295 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_293/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:55:21.450513832 -0500\n@@ -200,9 +200,7 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n-          return caseEquality(condition, blindScope, SHNE);\n         }\n \n       case Token.SHNE:\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_692/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:58:13.798177869 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2022/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:07:53.693598774 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2022/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 09:07:53.693598774 -0500\n@@ -674,12 +674,7 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n-          if (!leftTypeRestricted.canTestForShallowEqualityWith(\n-                  rightTypeRestricted)) {\n-            result = n.getType() == Token.SHEQ ?\n-                TernaryValue.FALSE : TernaryValue.TRUE;\n-          }\n+          this.inExterns = inExterns;\n         }\n \n         if (result != TernaryValue.UNKNOWN) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "Replace", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2538/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:11:38.712848254 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2737/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:13:01.960323777 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2737/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 09:13:01.960323777 -0500\n@@ -674,12 +674,7 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n-          if (!leftTypeRestricted.canTestForShallowEqualityWith(\n-                  rightTypeRestricted)) {\n-            result = n.getType() == Token.SHEQ ?\n-                TernaryValue.FALSE : TernaryValue.TRUE;\n-          }\n+          this.inExterns = inExterns;\n         }\n \n         if (result != TernaryValue.UNKNOWN) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "Replace", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_545/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:57:10.562444516 -0500\n@@ -200,9 +200,7 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n-          return caseEquality(condition, blindScope, SHNE);\n         }\n \n       case Token.SHNE:\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_502/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:56:52.638547125 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_502/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:56:52.642547101 -0500\n@@ -674,12 +674,7 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n-          if (!leftTypeRestricted.canTestForShallowEqualityWith(\n-                  rightTypeRestricted)) {\n-            result = n.getType() == Token.SHEQ ?\n-                TernaryValue.FALSE : TernaryValue.TRUE;\n-          }\n+          this.inExterns = inExterns;\n         }\n \n         if (result != TernaryValue.UNKNOWN) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "Replace", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_214/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:54:46.894422055 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2556/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:11:46.120791464 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1321/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:02:44.377321908 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1469/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:03:50.377269696 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1935/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:07:15.253508833 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1935/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 09:07:15.253508833 -0500\n@@ -674,7 +674,8 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n+          this.inExterns = inExterns;\n+\t\t// SHEQ or SHNE\n           if (!leftTypeRestricted.canTestForShallowEqualityWith(\n                   rightTypeRestricted)) {\n             result = n.getType() == Token.SHEQ ?\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "InsertBefore", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2080/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:08:20.073666172 -0500\n@@ -200,9 +200,7 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n-          return caseEquality(condition, blindScope, SHNE);\n         }\n \n       case Token.SHNE:\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2329/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:10:09.333330575 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1980/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:07:34.897553496 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2521/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:11:31.216907973 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2374/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:10:28.925246268 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1728/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:05:45.449345672 -0500\n@@ -200,9 +200,7 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n-          return caseEquality(condition, blindScope, SHNE);\n         }\n \n       case Token.SHNE:\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1485/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:03:57.037268858 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1485/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 09:03:57.041268858 -0500\n@@ -674,7 +674,8 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n+          this.inExterns = inExterns;\n+\t\t// SHEQ or SHNE\n           if (!leftTypeRestricted.canTestForShallowEqualityWith(\n                   rightTypeRestricted)) {\n             result = n.getType() == Token.SHEQ ?\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "InsertBefore", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_578/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:57:24.694372571 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_578/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:57:24.698372551 -0500\n@@ -674,7 +674,8 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n+          this.inExterns = inExterns;\n+\t\t// SHEQ or SHNE\n           if (!leftTypeRestricted.canTestForShallowEqualityWith(\n                   rightTypeRestricted)) {\n             result = n.getType() == Token.SHEQ ?\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "InsertBefore", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_974/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:00:14.029844746 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2288/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:09:51.477417173 -0500\n@@ -200,9 +200,7 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n-          return caseEquality(condition, blindScope, SHNE);\n         }\n \n       case Token.SHNE:\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1531/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:04:16.897270624 -0500\n@@ -200,9 +200,7 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n-          return caseEquality(condition, blindScope, SHNE);\n         }\n \n       case Token.SHNE:\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1531/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 09:04:16.897270624 -0500\n@@ -674,7 +674,8 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n+          this.inExterns = inExterns;\n+\t\t// SHEQ or SHNE\n           if (!leftTypeRestricted.canTestForShallowEqualityWith(\n                   rightTypeRestricted)) {\n             result = n.getType() == Token.SHEQ ?\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "InsertBefore", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_98/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:53:52.902305636 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_842/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:59:17.686033724 -0500\n@@ -200,9 +200,7 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n-          return caseEquality(condition, blindScope, SHNE);\n         }\n \n       case Token.SHNE:\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2851/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:13:53.816104217 -0500\n@@ -200,9 +200,7 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n-          return caseEquality(condition, blindScope, SHNE);\n         }\n \n       case Token.SHNE:\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1976/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:07:33.249549643 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_3117/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:15:53.231823821 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2611/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:12:09.088628827 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_304/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:55:26.326527741 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1954/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:07:23.321526835 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1351/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:02:57.801304311 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1200/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:01:53.721425664 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1962/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:07:26.625534347 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2908/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:14:20.024018498 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_342/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:55:42.746576199 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_669/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:58:03.218213047 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_3206/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:16:32.179783956 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2669/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:12:33.772475117 -0500\n@@ -200,9 +200,7 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n-          return caseEquality(condition, blindScope, SHNE);\n         }\n \n       case Token.SHNE:\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1742/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:05:51.197353808 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1742/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 09:05:51.201353814 -0500\n@@ -674,12 +674,7 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n-          if (!leftTypeRestricted.canTestForShallowEqualityWith(\n-                  rightTypeRestricted)) {\n-            result = n.getType() == Token.SHEQ ?\n-                TernaryValue.FALSE : TernaryValue.TRUE;\n-          }\n+          this.inExterns = inExterns;\n         }\n \n         if (result != TernaryValue.UNKNOWN) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "Replace", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_773/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:58:48.398086102 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_185/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:54:32.882388479 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_187/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:54:33.694390364 -0500\n@@ -200,9 +200,7 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n-          return caseEquality(condition, blindScope, SHNE);\n         }\n \n       case Token.SHNE:\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2721/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:12:55.292357388 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1054/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:00:47.701666246 -0500\n@@ -200,9 +200,7 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n-          return caseEquality(condition, blindScope, SHNE);\n         }\n \n       case Token.SHNE:\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_657/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:57:58.346230444 -0500\n@@ -200,9 +200,7 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n-          return caseEquality(condition, blindScope, SHNE);\n         }\n \n       case Token.SHNE:\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_254/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:55:04.310466779 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2560/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:11:47.736779366 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_492/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:56:48.590572143 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1024/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:00:34.697730245 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1822/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:06:27.053412132 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_355/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:55:48.490593720 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2489/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:11:18.129017891 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2489/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 09:11:18.129017891 -0500\n@@ -674,7 +674,8 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n+          this.inExterns = inExterns;\n+\t\t// SHEQ or SHNE\n           if (!leftTypeRestricted.canTestForShallowEqualityWith(\n                   rightTypeRestricted)) {\n             result = n.getType() == Token.SHEQ ?\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "InsertBefore", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1912/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:07:05.505487743 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1912/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 09:07:05.509487751 -0500\n@@ -674,12 +674,7 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n-          if (!leftTypeRestricted.canTestForShallowEqualityWith(\n-                  rightTypeRestricted)) {\n-            result = n.getType() == Token.SHEQ ?\n-                TernaryValue.FALSE : TernaryValue.TRUE;\n-          }\n+          this.inExterns = inExterns;\n         }\n \n         if (result != TernaryValue.UNKNOWN) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "Replace", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2096/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:08:27.373685565 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2263/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:09:40.765473879 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_967/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:00:10.745864460 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_167/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:54:24.710369940 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2395/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:10:37.829211441 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1462/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:03:47.037270398 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_197/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:54:38.634401994 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_484/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:56:45.338592748 -0500\n@@ -200,9 +200,7 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n-          return caseEquality(condition, blindScope, SHNE);\n         }\n \n       case Token.SHNE:\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1337/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:02:51.997311446 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1605/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:04:51.221287599 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2303/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:09:57.973384544 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2934/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:14:30.995987086 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_613/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:57:39.450305377 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2403/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:10:41.189198842 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2403/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 09:10:41.189198842 -0500\n@@ -674,12 +674,7 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n-          if (!leftTypeRestricted.canTestForShallowEqualityWith(\n-                  rightTypeRestricted)) {\n-            result = n.getType() == Token.SHEQ ?\n-                TernaryValue.FALSE : TernaryValue.TRUE;\n-          }\n+          this.inExterns = inExterns;\n         }\n \n         if (result != TernaryValue.UNKNOWN) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "Replace", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_965/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:00:09.937869374 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2746/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:13:06.216303009 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2282/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:09:49.061429639 -0500\n@@ -200,9 +200,7 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n-          return caseEquality(condition, blindScope, SHNE);\n         }\n \n       case Token.SHNE:\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2639/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:12:20.464555397 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1878/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:06:50.829457410 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1345/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:02:55.345307246 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_946/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:00:01.849920034 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_946/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 09:00:01.849920034 -0500\n@@ -674,12 +674,7 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n-          if (!leftTypeRestricted.canTestForShallowEqualityWith(\n-                  rightTypeRestricted)) {\n-            result = n.getType() == Token.SHEQ ?\n-                TernaryValue.FALSE : TernaryValue.TRUE;\n-          }\n+          this.inExterns = inExterns;\n         }\n \n         if (result != TernaryValue.UNKNOWN) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "Replace", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2685/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:12:40.352437576 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_3176/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:16:20.071794121 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_3176/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 09:16:20.071794121 -0500\n@@ -674,12 +674,7 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n-          if (!leftTypeRestricted.canTestForShallowEqualityWith(\n-                  rightTypeRestricted)) {\n-            result = n.getType() == Token.SHEQ ?\n-                TernaryValue.FALSE : TernaryValue.TRUE;\n-          }\n+          this.inExterns = inExterns;\n         }\n \n         if (result != TernaryValue.UNKNOWN) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "Replace", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_410/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:56:12.458669829 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1667/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:05:18.445312344 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1270/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:02:23.249357676 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_590/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:57:29.594349382 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_590/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:57:29.594349382 -0500\n@@ -674,12 +674,7 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n-          if (!leftTypeRestricted.canTestForShallowEqualityWith(\n-                  rightTypeRestricted)) {\n-            result = n.getType() == Token.SHEQ ?\n-                TernaryValue.FALSE : TernaryValue.TRUE;\n-          }\n+          this.inExterns = inExterns;\n         }\n \n         if (result != TernaryValue.UNKNOWN) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "Replace", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1090/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:01:04.121593749 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_3068/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:15:32.139854655 -0500\n@@ -200,9 +200,7 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n-          return caseEquality(condition, blindScope, SHNE);\n         }\n \n       case Token.SHNE:\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2265/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:09:41.613469256 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2029/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:07:57.101607235 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_988/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:00:19.913810493 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_3000/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:15:02.215910929 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_3178/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:16:20.891793372 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_3178/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 09:16:20.895793368 -0500\n@@ -674,12 +674,6 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n-          if (!leftTypeRestricted.canTestForShallowEqualityWith(\n-                  rightTypeRestricted)) {\n-            result = n.getType() == Token.SHEQ ?\n-                TernaryValue.FALSE : TernaryValue.TRUE;\n-          }\n         }\n \n         if (result != TernaryValue.UNKNOWN) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "Delete", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1051/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:00:46.041674081 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1184/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:01:47.165443823 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1184/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 09:01:47.165443823 -0500\n@@ -674,7 +674,8 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n+          this.inExterns = inExterns;\n+\t\t// SHEQ or SHNE\n           if (!leftTypeRestricted.canTestForShallowEqualityWith(\n                   rightTypeRestricted)) {\n             result = n.getType() == Token.SHEQ ?\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "InsertBefore", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2629/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:12:16.372581288 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2325/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:10:07.701338093 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_205/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:54:41.966409994 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_161/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:54:22.186364375 -0500\n@@ -200,9 +200,7 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n-          return caseEquality(condition, blindScope, SHNE);\n         }\n \n       case Token.SHNE:\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_915/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:59:48.790000533 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2831/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:13:45.180135966 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2436/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:10:55.101149732 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1457/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:03:44.625271025 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_154/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:54:18.794357017 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_727/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:58:28.718134069 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2779/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:13:21.268233664 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1281/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:02:28.121348517 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1281/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 09:02:28.121348517 -0500\n@@ -674,12 +674,7 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n-          if (!leftTypeRestricted.canTestForShallowEqualityWith(\n-                  rightTypeRestricted)) {\n-            result = n.getType() == Token.SHEQ ?\n-                TernaryValue.FALSE : TernaryValue.TRUE;\n-          }\n+          this.inExterns = inExterns;\n         }\n \n         if (result != TernaryValue.UNKNOWN) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "Replace", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1575/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:04:37.413278759 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1575/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 09:04:37.417278762 -0500\n@@ -674,12 +674,7 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n-          if (!leftTypeRestricted.canTestForShallowEqualityWith(\n-                  rightTypeRestricted)) {\n-            result = n.getType() == Token.SHEQ ?\n-                TernaryValue.FALSE : TernaryValue.TRUE;\n-          }\n+          this.inExterns = inExterns;\n         }\n \n         if (result != TernaryValue.UNKNOWN) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "Replace", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2679/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:12:37.904451378 -0500\n@@ -200,9 +200,7 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n-          return caseEquality(condition, blindScope, SHNE);\n         }\n \n       case Token.SHNE:\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_3150/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:16:08.495805682 -0500\n@@ -200,9 +200,7 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n-          return caseEquality(condition, blindScope, SHNE);\n         }\n \n       case Token.SHNE:\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2172/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:09:01.149717493 -0500\n@@ -200,9 +200,7 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n-          return caseEquality(condition, blindScope, SHNE);\n         }\n \n       case Token.SHNE:\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_114/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:53:59.518317936 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1331/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:02:49.541314684 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_961/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:00:08.341879163 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_48/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:53:28.426265414 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2119/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:08:37.305712438 -0500\n@@ -200,9 +200,7 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n-          return caseEquality(condition, blindScope, SHNE);\n         }\n \n       case Token.SHNE:\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2119/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 09:08:37.305712438 -0500\n@@ -674,7 +674,8 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n+          this.inExterns = inExterns;\n+\t\t// SHEQ or SHNE\n           if (!leftTypeRestricted.canTestForShallowEqualityWith(\n                   rightTypeRestricted)) {\n             result = n.getType() == Token.SHEQ ?\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "InsertBefore", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2113/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:08:34.805705622 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2641/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:12:21.280550301 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_468/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:56:38.846635261 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2390/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:10:35.385220792 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1620/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:04:57.673292608 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1799/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:06:16.525393710 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2135/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:08:44.561732414 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1173/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:01:42.257458189 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1929/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:07:12.825503511 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2878/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:14:06.540060659 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1597/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:04:47.993285298 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_420/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:56:16.658683643 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_3097/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:15:44.727835423 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_451/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:56:31.442686044 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_3091/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:15:42.187839102 -0500\n@@ -200,9 +200,7 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n-          return caseEquality(condition, blindScope, SHNE);\n         }\n \n       case Token.SHNE:\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2625/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:12:14.740591777 -0500\n@@ -200,9 +200,7 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n-          return caseEquality(condition, blindScope, SHNE);\n         }\n \n       case Token.SHNE:\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1744/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:05:51.993354962 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_3162/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:16:13.475800484 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2048/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:08:06.169630112 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_66/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:53:36.738278112 -0500\n@@ -200,9 +200,7 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n-          return caseEquality(condition, blindScope, SHNE);\n         }\n \n       case Token.SHNE:\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2855/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:13:55.576097967 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_885/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:59:35.574011984 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1056/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:00:48.525662392 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_570/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:57:21.414388592 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_428/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:56:19.998694724 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1068/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:00:54.253636234 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1109/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:01:12.337560793 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1562/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:04:31.653275858 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1562/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 09:04:31.653275858 -0500\n@@ -674,12 +674,7 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n-          if (!leftTypeRestricted.canTestForShallowEqualityWith(\n-                  rightTypeRestricted)) {\n-            result = n.getType() == Token.SHEQ ?\n-                TernaryValue.FALSE : TernaryValue.TRUE;\n-          }\n+          this.inExterns = inExterns;\n         }\n \n         if (result != TernaryValue.UNKNOWN) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "Replace", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_986/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:00:19.109815094 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1828/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:06:29.461416491 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2675/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:12:36.276460667 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1020/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:00:33.093738557 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1118/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:01:16.485544963 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1118/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 09:01:16.489544949 -0500\n@@ -674,7 +674,8 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n+          this.inExterns = inExterns;\n+\t\t// SHEQ or SHNE\n           if (!leftTypeRestricted.canTestForShallowEqualityWith(\n                   rightTypeRestricted)) {\n             result = n.getType() == Token.SHEQ ?\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "InsertBefore", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_976/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:00:14.837839964 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1226/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:02:05.121396798 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2149/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:08:50.309748439 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2513/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:11:27.976934502 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2058/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:08:10.309640726 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2434/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:10:54.293152454 -0500\n@@ -200,9 +200,7 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n-          return caseEquality(condition, blindScope, SHNE);\n         }\n \n       case Token.SHNE:\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2434/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 09:10:54.293152454 -0500\n@@ -674,7 +674,8 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n+          this.inExterns = inExterns;\n+\t\t// SHEQ or SHNE\n           if (!leftTypeRestricted.canTestForShallowEqualityWith(\n                   rightTypeRestricted)) {\n             result = n.getType() == Token.SHEQ ?\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "InsertBefore", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2139/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:08:46.201736969 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_390/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:56:03.450640672 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_390/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:56:03.450640672 -0500\n@@ -674,7 +674,8 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n+          this.inExterns = inExterns;\n+\t\t// SHEQ or SHNE\n           if (!leftTypeRestricted.canTestForShallowEqualityWith(\n                   rightTypeRestricted)) {\n             result = n.getType() == Token.SHEQ ?\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "InsertBefore", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_763/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:58:44.326095147 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_763/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:58:44.326095147 -0500\n@@ -674,12 +674,7 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n-          if (!leftTypeRestricted.canTestForShallowEqualityWith(\n-                  rightTypeRestricted)) {\n-            result = n.getType() == Token.SHEQ ?\n-                TernaryValue.FALSE : TernaryValue.TRUE;\n-          }\n+          this.inExterns = inExterns;\n         }\n \n         if (result != TernaryValue.UNKNOWN) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "Replace", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1902/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:07:01.401479085 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_3025/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:15:13.039888786 -0500\n@@ -200,9 +200,7 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n-          return caseEquality(condition, blindScope, SHNE);\n         }\n \n       case Token.SHNE:\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1291/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:02:32.205341267 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1008/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:00:28.265764155 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1501/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:04:03.721268753 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1501/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 09:04:03.721268753 -0500\n@@ -674,12 +674,7 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n-          if (!leftTypeRestricted.canTestForShallowEqualityWith(\n-                  rightTypeRestricted)) {\n-            result = n.getType() == Token.SHEQ ?\n-                TernaryValue.FALSE : TernaryValue.TRUE;\n-          }\n+          this.inExterns = inExterns;\n         }\n \n         if (result != TernaryValue.UNKNOWN) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "Replace", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_3188/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:16:24.947789795 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_3188/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 09:16:24.947789795 -0500\n@@ -674,12 +674,7 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n-          if (!leftTypeRestricted.canTestForShallowEqualityWith(\n-                  rightTypeRestricted)) {\n-            result = n.getType() == Token.SHEQ ?\n-                TernaryValue.FALSE : TernaryValue.TRUE;\n-          }\n+          this.inExterns = inExterns;\n         }\n \n         if (result != TernaryValue.UNKNOWN) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "Replace", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1412/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:03:25.009279931 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_3054/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:15:26.015864932 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1534/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:04:18.537271046 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2643/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:12:22.088545278 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2764/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:13:14.544263862 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2705/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:12:48.608392413 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1820/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:06:26.245410682 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2499/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:11:22.324981853 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_212/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:54:46.050419970 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_212/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:54:46.050419970 -0500\n@@ -674,7 +674,8 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n+          this.inExterns = inExterns;\n+\t\t// SHEQ or SHNE\n           if (!leftTypeRestricted.canTestForShallowEqualityWith(\n                   rightTypeRestricted)) {\n             result = n.getType() == Token.SHEQ ?\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "InsertBefore", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_361/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:55:50.934601261 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2056/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:08:09.501638647 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2056/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 09:08:09.501638647 -0500\n@@ -674,12 +674,7 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n-          if (!leftTypeRestricted.canTestForShallowEqualityWith(\n-                  rightTypeRestricted)) {\n-            result = n.getType() == Token.SHEQ ?\n-                TernaryValue.FALSE : TernaryValue.TRUE;\n-          }\n+          this.inExterns = inExterns;\n         }\n \n         if (result != TernaryValue.UNKNOWN) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "Replace", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1473/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:03:52.025269420 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1473/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 09:03:52.029269420 -0500\n@@ -674,7 +674,8 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n+          this.inExterns = inExterns;\n+\t\t// SHEQ or SHNE\n           if (!leftTypeRestricted.canTestForShallowEqualityWith(\n                   rightTypeRestricted)) {\n             result = n.getType() == Token.SHEQ ?\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "InsertBefore", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2948/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:14:37.815968821 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2446/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:10:59.937133784 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2866/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:14:00.660080321 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2845/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:13:51.268113397 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2845/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 09:13:51.268113397 -0500\n@@ -674,12 +674,7 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n-          if (!leftTypeRestricted.canTestForShallowEqualityWith(\n-                  rightTypeRestricted)) {\n-            result = n.getType() == Token.SHEQ ?\n-                TernaryValue.FALSE : TernaryValue.TRUE;\n-          }\n+          this.inExterns = inExterns;\n         }\n \n         if (result != TernaryValue.UNKNOWN) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "Replace", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1137/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:01:25.469512488 -0500\n@@ -200,9 +200,7 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n-          return caseEquality(condition, blindScope, SHNE);\n         }\n \n       case Token.SHNE:\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1569/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:04:34.937277453 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2530/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:11:35.360874674 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2530/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 09:11:35.360874674 -0500\n@@ -674,12 +674,6 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n-          if (!leftTypeRestricted.canTestForShallowEqualityWith(\n-                  rightTypeRestricted)) {\n-            result = n.getType() == Token.SHEQ ?\n-                TernaryValue.FALSE : TernaryValue.TRUE;\n-          }\n         }\n \n         if (result != TernaryValue.UNKNOWN) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "Delete", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1895/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:06:58.149472320 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2590/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:12:00.128689924 -0500\n@@ -200,9 +200,7 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n-          return caseEquality(condition, blindScope, SHNE);\n         }\n \n       case Token.SHNE:\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2590/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 09:12:00.128689924 -0500\n@@ -674,7 +674,8 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n+          this.inExterns = inExterns;\n+\t\t// SHEQ or SHNE\n           if (!leftTypeRestricted.canTestForShallowEqualityWith(\n                   rightTypeRestricted)) {\n             result = n.getType() == Token.SHEQ ?\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "InsertBefore", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2681/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:12:38.700446870 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_790/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:58:55.754070882 -0500\n@@ -200,9 +200,7 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n-          return caseEquality(condition, blindScope, SHNE);\n         }\n \n       case Token.SHNE:\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_790/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:58:55.758070874 -0500\n@@ -674,7 +674,8 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n+          this.inExterns = inExterns;\n+\t\t// SHEQ or SHNE\n           if (!leftTypeRestricted.canTestForShallowEqualityWith(\n                   rightTypeRestricted)) {\n             result = n.getType() == Token.SHEQ ?\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "InsertBefore", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_64/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:53:35.914276807 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2243/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:09:31.585525458 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1540/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:04:20.965271743 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2462/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:11:06.477113109 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2462/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 09:11:06.477113109 -0500\n@@ -674,7 +674,8 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n+          this.inExterns = inExterns;\n+\t\t// SHEQ or SHNE\n           if (!leftTypeRestricted.canTestForShallowEqualityWith(\n                   rightTypeRestricted)) {\n             result = n.getType() == Token.SHEQ ?\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "InsertBefore", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2797/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:13:29.144199846 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2797/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 09:13:29.144199846 -0500\n@@ -674,7 +674,8 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n+          this.inExterns = inExterns;\n+\t\t// SHEQ or SHNE\n           if (!leftTypeRestricted.canTestForShallowEqualityWith(\n                   rightTypeRestricted)) {\n             result = n.getType() == Token.SHEQ ?\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "InsertBefore", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_796/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:58:58.194066148 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1228/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:02:05.981394756 -0500\n@@ -200,9 +200,7 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n-          return caseEquality(condition, blindScope, SHNE);\n         }\n \n       case Token.SHNE:\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1797/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:06:15.733392366 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1726/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:05:44.641344556 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2102/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:08:29.881692298 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2102/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 09:08:29.885692309 -0500\n@@ -674,7 +674,8 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n+          this.inExterns = inExterns;\n+\t\t// SHEQ or SHNE\n           if (!leftTypeRestricted.canTestForShallowEqualityWith(\n                   rightTypeRestricted)) {\n             result = n.getType() == Token.SHEQ ?\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "InsertBefore", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_449/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:56:30.642691680 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_449/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:56:30.642691680 -0500\n@@ -674,12 +674,6 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n-          if (!leftTypeRestricted.canTestForShallowEqualityWith(\n-                  rightTypeRestricted)) {\n-            result = n.getType() == Token.SHEQ ?\n-                TernaryValue.FALSE : TernaryValue.TRUE;\n-          }\n         }\n \n         if (result != TernaryValue.UNKNOWN) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "Delete", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2386/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:10:33.781227013 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_234/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:54:56.142445403 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_234/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:54:56.146445414 -0500\n@@ -674,7 +674,8 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n+          this.inExterns = inExterns;\n+\t\t// SHEQ or SHNE\n           if (!leftTypeRestricted.canTestForShallowEqualityWith(\n                   rightTypeRestricted)) {\n             result = n.getType() == Token.SHEQ ?\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "InsertBefore", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1326/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:02:46.989318179 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1887/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:06:54.933465714 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1887/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 09:06:54.933465714 -0500\n@@ -674,12 +674,7 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n-          if (!leftTypeRestricted.canTestForShallowEqualityWith(\n-                  rightTypeRestricted)) {\n-            result = n.getType() == Token.SHEQ ?\n-                TernaryValue.FALSE : TernaryValue.TRUE;\n-          }\n+          this.inExterns = inExterns;\n         }\n \n         if (result != TernaryValue.UNKNOWN) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "Replace", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2342/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:10:15.077304730 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2693/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:12:43.652419267 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_696/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:58:15.430172753 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_696/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:58:15.430172753 -0500\n@@ -674,12 +674,6 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n-          if (!leftTypeRestricted.canTestForShallowEqualityWith(\n-                  rightTypeRestricted)) {\n-            result = n.getType() == Token.SHEQ ?\n-                TernaryValue.FALSE : TernaryValue.TRUE;\n-          }\n         }\n \n         if (result != TernaryValue.UNKNOWN) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "Delete", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2254/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:09:36.473497646 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_490/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:56:47.738577497 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2497/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:11:21.460989213 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2497/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 09:11:21.460989213 -0500\n@@ -674,12 +674,6 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n-          if (!leftTypeRestricted.canTestForShallowEqualityWith(\n-                  rightTypeRestricted)) {\n-            result = n.getType() == Token.SHEQ ?\n-                TernaryValue.FALSE : TernaryValue.TRUE;\n-          }\n         }\n \n         if (result != TernaryValue.UNKNOWN) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "Delete", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_464/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:56:37.170646540 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2072/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:08:16.017655532 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_412/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:56:13.314672633 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_412/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:56:13.314672633 -0500\n@@ -674,12 +674,7 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n-          if (!leftTypeRestricted.canTestForShallowEqualityWith(\n-                  rightTypeRestricted)) {\n-            result = n.getType() == Token.SHEQ ?\n-                TernaryValue.FALSE : TernaryValue.TRUE;\n-          }\n+          this.inExterns = inExterns;\n         }\n \n         if (result != TernaryValue.UNKNOWN) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "Replace", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1466/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:03:48.649270037 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_328/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:55:37.034559063 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_442/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:56:27.394714866 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1740/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:05:50.369352615 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_3029/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:15:14.655885659 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1194/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:01:51.249432374 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1194/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 09:01:51.249432374 -0500\n@@ -674,7 +674,8 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n+          this.inExterns = inExterns;\n+\t\t// SHEQ or SHNE\n           if (!leftTypeRestricted.canTestForShallowEqualityWith(\n                   rightTypeRestricted)) {\n             result = n.getType() == Token.SHEQ ?\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "InsertBefore", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2448/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:11:00.729131227 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_86/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:53:47.030295214 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_86/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:53:47.030295214 -0500\n@@ -674,12 +674,6 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n-          if (!leftTypeRestricted.canTestForShallowEqualityWith(\n-                  rightTypeRestricted)) {\n-            result = n.getType() == Token.SHEQ ?\n-                TernaryValue.FALSE : TernaryValue.TRUE;\n-          }\n         }\n \n         if (result != TernaryValue.UNKNOWN) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "Delete", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_714/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:58:23.014150029 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_714/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:58:23.014150029 -0500\n@@ -674,12 +674,7 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n-          if (!leftTypeRestricted.canTestForShallowEqualityWith(\n-                  rightTypeRestricted)) {\n-            result = n.getType() == Token.SHEQ ?\n-                TernaryValue.FALSE : TernaryValue.TRUE;\n-          }\n+          this.inExterns = inExterns;\n         }\n \n         if (result != TernaryValue.UNKNOWN) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "Replace", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_802/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:59:00.590061649 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2479/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:11:13.929054736 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2479/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 09:11:13.933054701 -0500\n@@ -674,12 +674,7 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n-          if (!leftTypeRestricted.canTestForShallowEqualityWith(\n-                  rightTypeRestricted)) {\n-            result = n.getType() == Token.SHEQ ?\n-                TernaryValue.FALSE : TernaryValue.TRUE;\n-          }\n+          this.inExterns = inExterns;\n         }\n \n         if (result != TernaryValue.UNKNOWN) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "Replace", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1956/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:07:24.129528665 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_953/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:00:05.077899494 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_953/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 09:00:05.077899494 -0500\n@@ -674,12 +674,7 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n-          if (!leftTypeRestricted.canTestForShallowEqualityWith(\n-                  rightTypeRestricted)) {\n-            result = n.getType() == Token.SHEQ ?\n-                TernaryValue.FALSE : TernaryValue.TRUE;\n-          }\n+          this.inExterns = inExterns;\n         }\n \n         if (result != TernaryValue.UNKNOWN) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "Replace", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1276/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:02:25.653353088 -0500\n@@ -200,9 +200,7 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n-          return caseEquality(condition, blindScope, SHNE);\n         }\n \n       case Token.SHNE:\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1813/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:06:23.009404932 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1002/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:00:25.845777308 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2578/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:11:55.156725109 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1333/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:02:50.357313594 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2422/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:10:49.401169267 -0500\n@@ -200,9 +200,7 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n-          return caseEquality(condition, blindScope, SHNE);\n         }\n \n       case Token.SHNE:\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_3192/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:16:26.547788445 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_300/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:55:24.718523130 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2024/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:07:54.517600814 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2483/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:11:15.597040013 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_100/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:53:53.754307187 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_100/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:53:53.754307187 -0500\n@@ -674,12 +674,7 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n-          if (!leftTypeRestricted.canTestForShallowEqualityWith(\n-                  rightTypeRestricted)) {\n-            result = n.getType() == Token.SHEQ ?\n-                TernaryValue.FALSE : TernaryValue.TRUE;\n-          }\n+          this.inExterns = inExterns;\n         }\n \n         if (result != TernaryValue.UNKNOWN) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "Replace", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2189/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:09:08.541667758 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_433/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:56:23.290705732 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_584/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:57:27.134360910 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1542/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:04:21.789272001 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2378/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:10:30.557239728 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_3140/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:16:04.231810410 -0500\n@@ -200,9 +200,7 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n-          return caseEquality(condition, blindScope, SHNE);\n         }\n \n       case Token.SHNE:\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_3040/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:15:19.763876068 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2576/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:11:54.280731406 -0500\n@@ -200,9 +200,7 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n-          return caseEquality(condition, blindScope, SHNE);\n         }\n \n       case Token.SHNE:\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_683/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:58:09.774190836 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_683/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:58:09.778190822 -0500\n@@ -674,12 +674,7 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n-          if (!leftTypeRestricted.canTestForShallowEqualityWith(\n-                  rightTypeRestricted)) {\n-            result = n.getType() == Token.SHEQ ?\n-                TernaryValue.FALSE : TernaryValue.TRUE;\n-          }\n+          this.inExterns = inExterns;\n         }\n \n         if (result != TernaryValue.UNKNOWN) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "Replace", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1301/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:02:36.233334493 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2046/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:08:05.365628062 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1582/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:04:40.693280622 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1582/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 09:04:40.693280622 -0500\n@@ -674,7 +674,8 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n+          this.inExterns = inExterns;\n+\t\t// SHEQ or SHNE\n           if (!leftTypeRestricted.canTestForShallowEqualityWith(\n                   rightTypeRestricted)) {\n             result = n.getType() == Token.SHEQ ?\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "InsertBefore", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2965/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:14:45.595949118 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2965/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 09:14:45.599949109 -0500\n@@ -674,7 +674,8 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n+          this.inExterns = inExterns;\n+\t\t// SHEQ or SHNE\n           if (!leftTypeRestricted.canTestForShallowEqualityWith(\n                   rightTypeRestricted)) {\n             result = n.getType() == Token.SHEQ ?\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "InsertBefore", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_863/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:59:26.610021954 -0500\n@@ -200,9 +200,7 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n-          return caseEquality(condition, blindScope, SHNE);\n         }\n \n       case Token.SHNE:\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_863/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:59:26.614021950 -0500\n@@ -674,12 +674,7 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n-          if (!leftTypeRestricted.canTestForShallowEqualityWith(\n-                  rightTypeRestricted)) {\n-            result = n.getType() == Token.SHEQ ?\n-                TernaryValue.FALSE : TernaryValue.TRUE;\n-          }\n+          this.inExterns = inExterns;\n         }\n \n         if (result != TernaryValue.UNKNOWN) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "Replace", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2493/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:11:19.777003646 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2178/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:09:03.589700850 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2709/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:12:50.360383101 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2709/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 09:12:50.360383101 -0500\n@@ -674,12 +674,7 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n-          if (!leftTypeRestricted.canTestForShallowEqualityWith(\n-                  rightTypeRestricted)) {\n-            result = n.getType() == Token.SHEQ ?\n-                TernaryValue.FALSE : TernaryValue.TRUE;\n-          }\n+          this.inExterns = inExterns;\n         }\n \n         if (result != TernaryValue.UNKNOWN) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "Replace", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_169/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:54:25.510371720 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1274/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:02:24.845354614 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2238/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:09:29.137539690 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2000/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:07:43.849574763 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2876/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:14:05.748063261 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2323/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:10:06.873341935 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_957/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:00:06.725889176 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1384/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:03:11.697290039 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1384/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 09:03:11.701290037 -0500\n@@ -674,12 +674,7 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n-          if (!leftTypeRestricted.canTestForShallowEqualityWith(\n-                  rightTypeRestricted)) {\n-            result = n.getType() == Token.SHEQ ?\n-                TernaryValue.FALSE : TernaryValue.TRUE;\n-          }\n+          this.inExterns = inExterns;\n         }\n \n         if (result != TernaryValue.UNKNOWN) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "Replace", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_3146/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:16:06.735807603 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1830/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:06:30.261417950 -0500\n@@ -200,9 +200,7 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n-          return caseEquality(condition, blindScope, SHNE);\n         }\n \n       case Token.SHNE:\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1389/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:03:14.141287927 -0500\n@@ -200,9 +200,7 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n-          return caseEquality(condition, blindScope, SHNE);\n         }\n \n       case Token.SHNE:\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2523/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:11:32.028901389 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_849/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:59:20.934029221 -0500\n@@ -200,9 +200,7 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n-          return caseEquality(condition, blindScope, SHNE);\n         }\n \n       case Token.SHNE:\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1781/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:06:08.333380104 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_659/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:57:59.198227346 -0500\n@@ -200,9 +200,7 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n-          return caseEquality(condition, blindScope, SHNE);\n         }\n \n       case Token.SHNE:\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_659/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:57:59.198227346 -0500\n@@ -674,12 +674,7 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n-          if (!leftTypeRestricted.canTestForShallowEqualityWith(\n-                  rightTypeRestricted)) {\n-            result = n.getType() == Token.SHEQ ?\n-                TernaryValue.FALSE : TernaryValue.TRUE;\n-          }\n+          this.inExterns = inExterns;\n         }\n \n         if (result != TernaryValue.UNKNOWN) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "Replace", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2793/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:13:27.292207650 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_183/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:54:32.066386593 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_3167/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:16:15.975798001 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_607/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:57:37.026315875 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2651/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:12:25.372525098 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2558/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:11:46.924785430 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1285/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:02:29.777345532 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1285/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 09:02:29.777345532 -0500\n@@ -674,12 +674,7 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n-          if (!leftTypeRestricted.canTestForShallowEqualityWith(\n-                  rightTypeRestricted)) {\n-            result = n.getType() == Token.SHEQ ?\n-                TernaryValue.FALSE : TernaryValue.TRUE;\n-          }\n+          this.inExterns = inExterns;\n         }\n \n         if (result != TernaryValue.UNKNOWN) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "Replace", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2665/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:12:31.936485841 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_291/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:55:20.638511538 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1859/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:06:42.561441107 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1859/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 09:06:42.561441107 -0500\n@@ -674,12 +674,7 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n-          if (!leftTypeRestricted.canTestForShallowEqualityWith(\n-                  rightTypeRestricted)) {\n-            result = n.getType() == Token.SHEQ ?\n-                TernaryValue.FALSE : TernaryValue.TRUE;\n-          }\n+          this.inExterns = inExterns;\n         }\n \n         if (result != TernaryValue.UNKNOWN) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "Replace", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2185/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:09:06.817679172 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2270/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:09:44.137455629 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2270/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 09:09:44.141455608 -0500\n@@ -674,12 +674,7 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n-          if (!leftTypeRestricted.canTestForShallowEqualityWith(\n-                  rightTypeRestricted)) {\n-            result = n.getType() == Token.SHEQ ?\n-                TernaryValue.FALSE : TernaryValue.TRUE;\n-          }\n+          this.inExterns = inExterns;\n         }\n \n         if (result != TernaryValue.UNKNOWN) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "Replace", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2031/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:07:57.925609292 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2031/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 09:07:57.929609302 -0500\n@@ -674,12 +674,7 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n-          if (!leftTypeRestricted.canTestForShallowEqualityWith(\n-                  rightTypeRestricted)) {\n-            result = n.getType() == Token.SHEQ ?\n-                TernaryValue.FALSE : TernaryValue.TRUE;\n-          }\n+          this.inExterns = inExterns;\n         }\n \n         if (result != TernaryValue.UNKNOWN) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "Replace", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1042/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:00:41.957693773 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_284/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:55:17.386502414 -0500\n@@ -200,9 +200,7 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n-          return caseEquality(condition, blindScope, SHNE);\n         }\n \n       case Token.SHNE:\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2009/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:07:47.897584558 -0500\n@@ -200,9 +200,7 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n-          return caseEquality(condition, blindScope, SHNE);\n         }\n \n       case Token.SHNE:\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_135/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:54:09.634337856 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_474/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:56:41.266619198 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2928/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:14:28.491994033 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1004/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:00:26.649772915 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2307/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:09:59.569376730 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_826/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:59:10.362044804 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_826/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:59:10.362044804 -0500\n@@ -674,12 +674,7 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n-          if (!leftTypeRestricted.canTestForShallowEqualityWith(\n-                  rightTypeRestricted)) {\n-            result = n.getType() == Token.SHEQ ?\n-                TernaryValue.FALSE : TernaryValue.TRUE;\n-          }\n+          this.inExterns = inExterns;\n         }\n \n         if (result != TernaryValue.UNKNOWN) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "Replace", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2751/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:13:08.684291204 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2729/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:12:58.584340631 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_535/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:57:06.462466841 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2766/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:13:15.352260168 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1580/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:04:39.865280137 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1910/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:07:04.597485816 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1038/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:00:40.333701771 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2598/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:12:03.436667027 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2598/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 09:12:03.436667027 -0500\n@@ -674,12 +674,7 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n-          if (!leftTypeRestricted.canTestForShallowEqualityWith(\n-                  rightTypeRestricted)) {\n-            result = n.getType() == Token.SHEQ ?\n-                TernaryValue.FALSE : TernaryValue.TRUE;\n-          }\n+          this.inExterns = inExterns;\n         }\n \n         if (result != TernaryValue.UNKNOWN) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "Replace", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1857/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:06:41.737439514 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2645/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:12:22.880540377 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_367/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:55:53.630609640 -0500\n@@ -200,9 +200,7 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n-          return caseEquality(condition, blindScope, SHNE);\n         }\n \n       case Token.SHNE:\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1165/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:01:38.921468333 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1378/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:03:09.269292253 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_3019/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:15:10.547893701 -0500\n@@ -200,9 +200,7 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n-          return caseEquality(condition, blindScope, SHNE);\n         }\n \n       case Token.SHNE:\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2954/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:14:40.383962186 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1234/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:02:08.421389070 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2695/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:12:44.472414772 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2695/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 09:12:44.476414750 -0500\n@@ -674,7 +674,8 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n+          this.inExterns = inExterns;\n+\t\t// SHEQ or SHNE\n           if (!leftTypeRestricted.canTestForShallowEqualityWith(\n                   rightTypeRestricted)) {\n             result = n.getType() == Token.SHEQ ?\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "InsertBefore", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1658/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:05:14.373308054 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1658/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 09:05:14.377308058 -0500\n@@ -674,12 +674,7 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n-          if (!leftTypeRestricted.canTestForShallowEqualityWith(\n-                  rightTypeRestricted)) {\n-            result = n.getType() == Token.SHEQ ?\n-                TernaryValue.FALSE : TernaryValue.TRUE;\n-          }\n+          this.inExterns = inExterns;\n         }\n \n         if (result != TernaryValue.UNKNOWN) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "Replace", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2382/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:10:32.185233272 -0500\n@@ -200,9 +200,7 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n-          return caseEquality(condition, blindScope, SHNE);\n         }\n \n       case Token.SHNE:\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1639/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:05:05.725299617 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2346/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:10:16.713297546 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2346/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 09:10:16.713297546 -0500\n@@ -674,12 +674,6 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n-          if (!leftTypeRestricted.canTestForShallowEqualityWith(\n-                  rightTypeRestricted)) {\n-            result = n.getType() == Token.SHEQ ?\n-                TernaryValue.FALSE : TernaryValue.TRUE;\n-          }\n         }\n \n         if (result != TernaryValue.UNKNOWN) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "Delete", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_268/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:55:09.994482058 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_478/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:56:42.898608507 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1014/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:00:30.685751217 -0500\n@@ -200,9 +200,7 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n-          return caseEquality(condition, blindScope, SHNE);\n         }\n \n       case Token.SHNE:\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1564/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:04:32.461276236 -0500\n@@ -200,9 +200,7 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n-          return caseEquality(condition, blindScope, SHNE);\n         }\n \n       case Token.SHNE:\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2505/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:11:24.740961447 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1942/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:07:18.477515969 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1948/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:07:20.913521411 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_438/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:56:25.762714051 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1441/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:03:38.101273222 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2353/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:10:19.897283775 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1748/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:05:53.677357427 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_3064/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:15:30.463857407 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2432/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:10:53.469155245 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1811/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:06:22.213403534 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1811/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 09:06:22.217403541 -0500\n@@ -674,12 +674,7 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n-          if (!leftTypeRestricted.canTestForShallowEqualityWith(\n-                  rightTypeRestricted)) {\n-            result = n.getType() == Token.SHEQ ?\n-                TernaryValue.FALSE : TernaryValue.TRUE;\n-          }\n+          this.inExterns = inExterns;\n         }\n \n         if (result != TernaryValue.UNKNOWN) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "Replace", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_923/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:59:52.061984965 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1040/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:00:41.161697682 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1040/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 09:00:41.165697662 -0500\n@@ -674,7 +674,8 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n+          this.inExterns = inExterns;\n+\t\t// SHEQ or SHNE\n           if (!leftTypeRestricted.canTestForShallowEqualityWith(\n                   rightTypeRestricted)) {\n             result = n.getType() == Token.SHEQ ?\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "InsertBefore", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2137/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:08:45.393734723 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2137/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 09:08:45.393734723 -0500\n@@ -674,12 +674,6 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n-          if (!leftTypeRestricted.canTestForShallowEqualityWith(\n-                  rightTypeRestricted)) {\n-            result = n.getType() == Token.SHEQ ?\n-                TernaryValue.FALSE : TernaryValue.TRUE;\n-          }\n         }\n \n         if (result != TernaryValue.UNKNOWN) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "Delete", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_838/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:59:16.050036084 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2536/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:11:37.884854735 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_731/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:58:30.330129730 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_891/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:59:37.994009599 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1560/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:04:30.729275436 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1560/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 09:04:30.729275436 -0500\n@@ -674,12 +674,6 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n-          if (!leftTypeRestricted.canTestForShallowEqualityWith(\n-                  rightTypeRestricted)) {\n-            result = n.getType() == Token.SHEQ ?\n-                TernaryValue.FALSE : TernaryValue.TRUE;\n-          }\n         }\n \n         if (result != TernaryValue.UNKNOWN) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "Delete", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1439/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:03:37.293273548 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_525/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:57:02.362489836 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2477/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:11:13.105062057 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2477/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 09:11:13.105062057 -0500\n@@ -674,12 +674,6 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n-          if (!leftTypeRestricted.canTestForShallowEqualityWith(\n-                  rightTypeRestricted)) {\n-            result = n.getType() == Token.SHEQ ?\n-                TernaryValue.FALSE : TernaryValue.TRUE;\n-          }\n         }\n \n         if (result != TernaryValue.UNKNOWN) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "Delete", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_992/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:00:21.661800577 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_992/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 09:00:21.661800577 -0500\n@@ -674,12 +674,7 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n-          if (!leftTypeRestricted.canTestForShallowEqualityWith(\n-                  rightTypeRestricted)) {\n-            result = n.getType() == Token.SHEQ ?\n-                TernaryValue.FALSE : TernaryValue.TRUE;\n-          }\n+          this.inExterns = inExterns;\n         }\n \n         if (result != TernaryValue.UNKNOWN) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "Replace", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2074/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:08:16.813657614 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1404/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:03:20.745282802 -0500\n@@ -200,9 +200,7 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n-          return caseEquality(condition, blindScope, SHNE);\n         }\n \n       case Token.SHNE:\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_238/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:54:57.766449598 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_10/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:53:08.362239074 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2183/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:09:06.009684558 -0500\n@@ -200,9 +200,7 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n-          return caseEquality(condition, blindScope, SHNE);\n         }\n \n       case Token.SHNE:\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1571/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:04:35.761277878 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1571/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 09:04:35.765277881 -0500\n@@ -674,12 +674,7 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n-          if (!leftTypeRestricted.canTestForShallowEqualityWith(\n-                  rightTypeRestricted)) {\n-            result = n.getType() == Token.SHEQ ?\n-                TernaryValue.FALSE : TernaryValue.TRUE;\n-          }\n+          this.inExterns = inExterns;\n         }\n \n         if (result != TernaryValue.UNKNOWN) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "Replace", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2327/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:10:08.521334305 -0500\n@@ -200,9 +200,7 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n-          return caseEquality(condition, blindScope, SHNE);\n         }\n \n       case Token.SHNE:\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2327/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 09:10:08.525334287 -0500\n@@ -674,12 +674,7 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n-          if (!leftTypeRestricted.canTestForShallowEqualityWith(\n-                  rightTypeRestricted)) {\n-            result = n.getType() == Token.SHEQ ?\n-                TernaryValue.FALSE : TernaryValue.TRUE;\n-          }\n+          this.inExterns = inExterns;\n         }\n \n         if (result != TernaryValue.UNKNOWN) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "Replace", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2286/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:09:50.669421322 -0500\n@@ -200,9 +200,7 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n-          return caseEquality(condition, blindScope, SHNE);\n         }\n \n       case Token.SHNE:\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_674/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:58:05.682204541 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_541/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:57:08.890453536 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_655/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:57:57.538233403 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_725/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:58:27.910136271 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2658/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:12:28.688505088 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2129/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:08:42.125725676 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_88/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:53:47.846296635 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1311/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:02:40.257328089 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1845/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:06:36.773430043 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_445/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:56:29.006703292 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_279/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:55:14.914495547 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_369/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:55:54.438612163 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_137/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:54:10.474339570 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_137/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:54:10.474339570 -0500\n@@ -674,12 +674,6 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n-          if (!leftTypeRestricted.canTestForShallowEqualityWith(\n-                  rightTypeRestricted)) {\n-            result = n.getType() == Token.SHEQ ?\n-                TernaryValue.FALSE : TernaryValue.TRUE;\n-          }\n         }\n \n         if (result != TernaryValue.UNKNOWN) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "Delete", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_3036/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:15:18.063879209 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_767/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:58:45.962091457 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_767/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:58:45.962091457 -0500\n@@ -674,7 +674,8 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n+          this.inExterns = inExterns;\n+\t\t// SHEQ or SHNE\n           if (!leftTypeRestricted.canTestForShallowEqualityWith(\n                   rightTypeRestricted)) {\n             result = n.getType() == Token.SHEQ ?\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "InsertBefore", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1900/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:07:00.609477429 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2768/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:13:16.216256237 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1167/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:01:39.725465861 -0500\n@@ -200,9 +200,7 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n-          return caseEquality(condition, blindScope, SHNE);\n         }\n \n       case Token.SHNE:\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1146/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:01:30.313495981 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2760/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:13:12.868271583 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2760/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 09:13:12.868271583 -0500\n@@ -674,12 +674,6 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n-          if (!leftTypeRestricted.canTestForShallowEqualityWith(\n-                  rightTypeRestricted)) {\n-            result = n.getType() == Token.SHEQ ?\n-                TernaryValue.FALSE : TernaryValue.TRUE;\n-          }\n         }\n \n         if (result != TernaryValue.UNKNOWN) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "Delete", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1544/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:04:22.605272266 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1433/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:03:34.821274613 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1139/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:01:26.285509658 -0500\n@@ -200,9 +200,7 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n-          return caseEquality(condition, blindScope, SHNE);\n         }\n \n       case Token.SHNE:\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_256/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:55:05.130468962 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1760/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:05:58.593364791 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1760/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 09:05:58.593364791 -0500\n@@ -674,12 +674,7 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n-          if (!leftTypeRestricted.canTestForShallowEqualityWith(\n-                  rightTypeRestricted)) {\n-            result = n.getType() == Token.SHEQ ?\n-                TernaryValue.FALSE : TernaryValue.TRUE;\n-          }\n+          this.inExterns = inExterns;\n         }\n \n         if (result != TernaryValue.UNKNOWN) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "Replace", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2218/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:09:21.017588377 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1610/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:04:53.649289420 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1853/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:06:40.057436284 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2187/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:09:07.645673677 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2187/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 09:09:07.649673651 -0500\n@@ -674,12 +674,6 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n-          if (!leftTypeRestricted.canTestForShallowEqualityWith(\n-                  rightTypeRestricted)) {\n-            result = n.getType() == Token.SHEQ ?\n-                TernaryValue.FALSE : TernaryValue.TRUE;\n-          }\n         }\n \n         if (result != TernaryValue.UNKNOWN) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "Delete", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_519/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:56:59.954503655 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_519/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:56:59.958503632 -0500\n@@ -674,12 +674,7 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n-          if (!leftTypeRestricted.canTestForShallowEqualityWith(\n-                  rightTypeRestricted)) {\n-            result = n.getType() == Token.SHEQ ?\n-                TernaryValue.FALSE : TernaryValue.TRUE;\n-          }\n+          this.inExterns = inExterns;\n         }\n \n         if (result != TernaryValue.UNKNOWN) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "Replace", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1479/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:03:54.461269096 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1479/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 09:03:54.465269096 -0500\n@@ -674,12 +674,6 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n-          if (!leftTypeRestricted.canTestForShallowEqualityWith(\n-                  rightTypeRestricted)) {\n-            result = n.getType() == Token.SHEQ ?\n-                TernaryValue.FALSE : TernaryValue.TRUE;\n-          }\n         }\n \n         if (result != TernaryValue.UNKNOWN) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "Delete", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1094/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:01:05.733587114 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2033/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:07:58.741611334 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2961/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:14:43.931953230 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2961/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 09:14:43.935953220 -0500\n@@ -674,12 +674,7 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n-          if (!leftTypeRestricted.canTestForShallowEqualityWith(\n-                  rightTypeRestricted)) {\n-            result = n.getType() == Token.SHEQ ?\n-                TernaryValue.FALSE : TernaryValue.TRUE;\n-          }\n+          this.inExterns = inExterns;\n         }\n \n         if (result != TernaryValue.UNKNOWN) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "Replace", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2725/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:12:56.908349120 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_3066/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:15:31.295856035 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2839/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:13:48.584123236 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_625/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:57:44.270285106 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_537/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:57:07.270462387 -0500\n@@ -200,9 +200,7 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n-          return caseEquality(condition, blindScope, SHNE);\n         }\n \n       case Token.SHNE:\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1135/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:01:24.661515308 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1135/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 09:01:24.665515294 -0500\n@@ -674,12 +674,6 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n-          if (!leftTypeRestricted.canTestForShallowEqualityWith(\n-                  rightTypeRestricted)) {\n-            result = n.getType() == Token.SHEQ ?\n-                TernaryValue.FALSE : TernaryValue.TRUE;\n-          }\n         }\n \n         if (result != TernaryValue.UNKNOWN) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "Delete", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2258/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:09:38.109488513 -0500\n@@ -200,9 +200,7 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n-          return caseEquality(condition, blindScope, SHNE);\n         }\n \n       case Token.SHNE:\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1393/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:03:15.817286547 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1393/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 09:03:15.821286544 -0500\n@@ -674,12 +674,6 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n-          if (!leftTypeRestricted.canTestForShallowEqualityWith(\n-                  rightTypeRestricted)) {\n-            result = n.getType() == Token.SHEQ ?\n-                TernaryValue.FALSE : TernaryValue.TRUE;\n-          }\n         }\n \n         if (result != TernaryValue.UNKNOWN) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "Delete", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_208/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:54:43.594413950 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_221/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:54:50.286430509 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2016/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:07:51.209592655 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_521/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:57:00.754499039 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2202/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:09:14.433629568 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2202/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 09:09:14.437629543 -0500\n@@ -674,12 +674,7 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n-          if (!leftTypeRestricted.canTestForShallowEqualityWith(\n-                  rightTypeRestricted)) {\n-            result = n.getType() == Token.SHEQ ?\n-                TernaryValue.FALSE : TernaryValue.TRUE;\n-          }\n+          this.inExterns = inExterns;\n         }\n \n         if (result != TernaryValue.UNKNOWN) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "Replace", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1236/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:02:09.233387210 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1906/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:07:03.001482444 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_310/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:55:28.794534866 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_310/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:55:28.798534878 -0500\n@@ -674,7 +674,8 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n+          this.inExterns = inExterns;\n+\t\t// SHEQ or SHNE\n           if (!leftTypeRestricted.canTestForShallowEqualityWith(\n                   rightTypeRestricted)) {\n             result = n.getType() == Token.SHEQ ?\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "InsertBefore", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1230/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:02:06.805392820 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1250/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:02:15.049374369 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1010/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:00:29.073759808 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_192/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:54:36.170396158 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2717/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:12:53.632365960 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2174/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:09:01.957711954 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1471/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:03:51.177269558 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2305/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:09:58.777380598 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1861/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:06:43.385442706 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1861/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 09:06:43.389442714 -0500\n@@ -674,7 +674,8 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n+          this.inExterns = inExterns;\n+\t\t// SHEQ or SHNE\n           if (!leftTypeRestricted.canTestForShallowEqualityWith(\n                   rightTypeRestricted)) {\n             result = n.getType() == Token.SHEQ ?\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "InsertBefore", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_506/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:56:54.246537380 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_171/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:54:26.326373544 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2417/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:10:46.957177888 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2417/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 09:10:46.957177888 -0500\n@@ -674,12 +674,7 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n-          if (!leftTypeRestricted.canTestForShallowEqualityWith(\n-                  rightTypeRestricted)) {\n-            result = n.getType() == Token.SHEQ ?\n-                TernaryValue.FALSE : TernaryValue.TRUE;\n-          }\n+          this.inExterns = inExterns;\n         }\n \n         if (result != TernaryValue.UNKNOWN) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "Replace", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2906/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:14:19.192020985 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2906/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 09:14:19.192020985 -0500\n@@ -674,12 +674,7 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n-          if (!leftTypeRestricted.canTestForShallowEqualityWith(\n-                  rightTypeRestricted)) {\n-            result = n.getType() == Token.SHEQ ?\n-                TernaryValue.FALSE : TernaryValue.TRUE;\n-          }\n+          this.inExterns = inExterns;\n         }\n \n         if (result != TernaryValue.UNKNOWN) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "Replace", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_248/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:55:01.874460331 -0500\n@@ -200,9 +200,7 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n-          return caseEquality(condition, blindScope, SHNE);\n         }\n \n       case Token.SHNE:\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2043/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:08:03.749623956 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1551/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:04:25.857273417 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2703/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:12:47.780396846 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_404/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:56:09.170659111 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_792/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:58:56.566069291 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_470/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:56:39.654629870 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_3180/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:16:21.735792610 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_3180/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 09:16:21.739792606 -0500\n@@ -674,12 +674,7 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n-          if (!leftTypeRestricted.canTestForShallowEqualityWith(\n-                  rightTypeRestricted)) {\n-            result = n.getType() == Token.SHEQ ?\n-                TernaryValue.FALSE : TernaryValue.TRUE;\n-          }\n+          this.inExterns = inExterns;\n         }\n \n         if (result != TernaryValue.UNKNOWN) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "Replace", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_869/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:59:29.022019089 -0500\n@@ -200,9 +200,7 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n-          return caseEquality(condition, blindScope, SHNE);\n         }\n \n       case Token.SHNE:\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2897/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:14:14.972033823 -0500\n@@ -200,9 +200,7 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n-          return caseEquality(condition, blindScope, SHNE);\n         }\n \n       case Token.SHNE:\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1343/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:02:54.553308219 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_680/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:58:08.134196264 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_737/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:58:32.782123272 -0500\n@@ -200,9 +200,7 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n-          return caseEquality(condition, blindScope, SHNE);\n         }\n \n       case Token.SHNE:\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1192/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:01:50.425434648 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1192/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 09:01:50.425434648 -0500\n@@ -674,12 +674,7 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n-          if (!leftTypeRestricted.canTestForShallowEqualityWith(\n-                  rightTypeRestricted)) {\n-            result = n.getType() == Token.SHEQ ?\n-                TernaryValue.FALSE : TernaryValue.TRUE;\n-          }\n+          this.inExterns = inExterns;\n         }\n \n         if (result != TernaryValue.UNKNOWN) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "Replace", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_778/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:58:50.798080978 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2222/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:09:22.617578605 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_199/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:54:39.494404047 -0500\n@@ -200,9 +200,7 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n-          return caseEquality(condition, blindScope, SHNE);\n         }\n \n       case Token.SHNE:\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_199/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:54:39.494404047 -0500\n@@ -674,7 +674,8 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n+          this.inExterns = inExterns;\n+\t\t// SHEQ or SHNE\n           if (!leftTypeRestricted.canTestForShallowEqualityWith(\n                   rightTypeRestricted)) {\n             result = n.getType() == Token.SHEQ ?\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "InsertBefore", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1557/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:04:29.085274715 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_3134/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:16:00.855814339 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_3134/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 09:16:00.855814339 -0500\n@@ -674,7 +674,8 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n+          this.inExterns = inExterns;\n+\t\t// SHEQ or SHNE\n           if (!leftTypeRestricted.canTestForShallowEqualityWith(\n                   rightTypeRestricted)) {\n             result = n.getType() == Token.SHEQ ?\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "InsertBefore", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_217/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:54:48.542426148 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1122/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:01:18.137538805 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_743/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:58:35.238116976 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_40/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:53:24.110259221 -0500\n@@ -200,9 +200,7 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n-          return caseEquality(condition, blindScope, SHNE);\n         }\n \n       case Token.SHNE:\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1204/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:01:55.377421259 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1204/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 09:01:55.377421259 -0500\n@@ -674,12 +674,6 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n-          if (!leftTypeRestricted.canTestForShallowEqualityWith(\n-                  rightTypeRestricted)) {\n-            result = n.getType() == Token.SHEQ ?\n-                TernaryValue.FALSE : TernaryValue.TRUE;\n-          }\n         }\n \n         if (result != TernaryValue.UNKNOWN) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "Delete", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1815/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:06:23.841406401 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1752/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:05:55.309359845 -0500\n@@ -200,9 +200,7 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n-          return caseEquality(condition, blindScope, SHNE);\n         }\n \n       case Token.SHNE:\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1752/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 09:05:55.309359845 -0500\n@@ -674,12 +674,7 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n-          if (!leftTypeRestricted.canTestForShallowEqualityWith(\n-                  rightTypeRestricted)) {\n-            result = n.getType() == Token.SHEQ ?\n-                TernaryValue.FALSE : TernaryValue.TRUE;\n-          }\n+          this.inExterns = inExterns;\n         }\n \n         if (result != TernaryValue.UNKNOWN) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "Replace", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_338/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:55:41.110571262 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_338/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:55:41.114571274 -0500\n@@ -674,12 +674,7 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n-          if (!leftTypeRestricted.canTestForShallowEqualityWith(\n-                  rightTypeRestricted)) {\n-            result = n.getType() == Token.SHEQ ?\n-                TernaryValue.FALSE : TernaryValue.TRUE;\n-          }\n+          this.inExterns = inExterns;\n         }\n \n         if (result != TernaryValue.UNKNOWN) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "Replace", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_3080/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:15:37.207846610 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_271/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:55:11.662486605 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_271/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:55:11.662486605 -0500\n@@ -674,12 +674,6 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n-          if (!leftTypeRestricted.canTestForShallowEqualityWith(\n-                  rightTypeRestricted)) {\n-            result = n.getType() == Token.SHEQ ?\n-                TernaryValue.FALSE : TernaryValue.TRUE;\n-          }\n         }\n \n         if (result != TernaryValue.UNKNOWN) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "Delete", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1839/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:06:34.329425461 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1839/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 09:06:34.329425461 -0500\n@@ -674,12 +674,7 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n-          if (!leftTypeRestricted.canTestForShallowEqualityWith(\n-                  rightTypeRestricted)) {\n-            result = n.getType() == Token.SHEQ ?\n-                TernaryValue.FALSE : TernaryValue.TRUE;\n-          }\n+          this.inExterns = inExterns;\n         }\n \n         if (result != TernaryValue.UNKNOWN) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "Replace", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_755/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:58:40.226104712 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2068/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:08:14.409651342 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2068/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 09:08:14.409651342 -0500\n@@ -674,12 +674,7 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n-          if (!leftTypeRestricted.canTestForShallowEqualityWith(\n-                  rightTypeRestricted)) {\n-            result = n.getType() == Token.SHEQ ?\n-                TernaryValue.FALSE : TernaryValue.TRUE;\n-          }\n+          this.inExterns = inExterns;\n         }\n \n         if (result != TernaryValue.UNKNOWN) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "Replace", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1970/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:07:30.829544019 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2013/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:07:49.581588667 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2013/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 09:07:49.581588667 -0500\n@@ -674,12 +674,7 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n-          if (!leftTypeRestricted.canTestForShallowEqualityWith(\n-                  rightTypeRestricted)) {\n-            result = n.getType() == Token.SHEQ ?\n-                TernaryValue.FALSE : TernaryValue.TRUE;\n-          }\n+          this.inExterns = inExterns;\n         }\n \n         if (result != TernaryValue.UNKNOWN) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "Replace", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1262/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:02:19.961364173 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1113/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:01:13.949554575 -0500\n@@ -200,9 +200,7 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n-          return caseEquality(condition, blindScope, SHNE);\n         }\n \n       case Token.SHNE:\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1495/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:04:01.213268708 -0500\n@@ -200,9 +200,7 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n-          return caseEquality(condition, blindScope, SHNE);\n         }\n \n       case Token.SHNE:\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1339/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:02:52.849310356 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_780/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:58:51.610079281 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_765/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:58:45.134093315 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_911/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:59:47.190001718 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_806/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:59:02.214058682 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1419/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:03:28.245277983 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_181/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:54:31.254384724 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1417/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:03:27.437278453 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1984/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:07:36.501557267 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1586/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:04:43.121282096 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1157/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:01:35.365479498 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1103/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:01:09.773570847 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_80/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:53:43.650289435 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_80/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:53:43.650289435 -0500\n@@ -674,7 +674,8 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n+          this.inExterns = inExterns;\n+\t\t// SHEQ or SHNE\n           if (!leftTypeRestricted.canTestForShallowEqualityWith(\n                   rightTypeRestricted)) {\n             result = n.getType() == Token.SHEQ ?\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "InsertBefore", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_749/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:58:37.766110673 -0500\n@@ -200,9 +200,7 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n-          return caseEquality(condition, blindScope, SHNE);\n         }\n \n       case Token.SHNE:\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1387/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:03:13.325288620 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1387/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 09:03:13.329288617 -0500\n@@ -674,12 +674,7 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n-          if (!leftTypeRestricted.canTestForShallowEqualityWith(\n-                  rightTypeRestricted)) {\n-            result = n.getType() == Token.SHEQ ?\n-                TernaryValue.FALSE : TernaryValue.TRUE;\n-          }\n+          this.inExterns = inExterns;\n         }\n \n         if (result != TernaryValue.UNKNOWN) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "Replace", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1427/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:03:32.361275781 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1268/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:02:22.437359258 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2274/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:09:45.733447122 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2143/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:08:47.849741559 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_515/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:56:58.326513140 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_698/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:58:16.238170248 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1355/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:02:59.445302418 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1355/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 09:02:59.449302414 -0500\n@@ -674,12 +674,7 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n-          if (!leftTypeRestricted.canTestForShallowEqualityWith(\n-                  rightTypeRestricted)) {\n-            result = n.getType() == Token.SHEQ ?\n-                TernaryValue.FALSE : TernaryValue.TRUE;\n-          }\n+          this.inExterns = inExterns;\n         }\n \n         if (result != TernaryValue.UNKNOWN) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "Replace", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2880/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:14:07.364057966 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2880/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 09:14:07.368057954 -0500\n@@ -674,12 +674,7 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n-          if (!leftTypeRestricted.canTestForShallowEqualityWith(\n-                  rightTypeRestricted)) {\n-            result = n.getType() == Token.SHEQ ?\n-                TernaryValue.FALSE : TernaryValue.TRUE;\n-          }\n+          this.inExterns = inExterns;\n         }\n \n         if (result != TernaryValue.UNKNOWN) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "Replace", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2566/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:11:50.196761143 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1783/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:06:09.189381495 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_814/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:59:05.450052971 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1443/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:03:38.905272911 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2411/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:10:44.461186854 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2719/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:12:54.484361550 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2719/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 09:12:54.484361550 -0500\n@@ -674,7 +674,8 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n+          this.inExterns = inExterns;\n+\t\t// SHEQ or SHNE\n           if (!leftTypeRestricted.canTestForShallowEqualityWith(\n                   rightTypeRestricted)) {\n             result = n.getType() == Token.SHEQ ?\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "InsertBefore", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_712/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:58:22.174152462 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_3152/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:16:09.311804806 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2859/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:13:57.280091982 -0500\n@@ -200,9 +200,7 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n-          return caseEquality(condition, blindScope, SHNE);\n         }\n \n       case Token.SHNE:\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1026/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:00:35.525725991 -0500\n@@ -200,9 +200,7 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n-          return caseEquality(condition, blindScope, SHNE);\n         }\n \n       case Token.SHNE:\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1359/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:03:01.101300566 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1359/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 09:03:01.101300566 -0500\n@@ -674,12 +674,7 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n-          if (!leftTypeRestricted.canTestForShallowEqualityWith(\n-                  rightTypeRestricted)) {\n-            result = n.getType() == Token.SHEQ ?\n-                TernaryValue.FALSE : TernaryValue.TRUE;\n-          }\n+          this.inExterns = inExterns;\n         }\n \n         if (result != TernaryValue.UNKNOWN) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "Replace", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_179/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:54:30.454382890 -0500\n@@ -200,9 +200,7 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n-          return caseEquality(condition, blindScope, SHNE);\n         }\n \n       case Token.SHNE:\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2791/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:13:26.432211304 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_3050/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:15:24.339867854 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1927/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:07:11.997501706 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1927/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 09:07:11.997501706 -0500\n@@ -674,7 +674,8 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n+          this.inExterns = inExterns;\n+\t\t// SHEQ or SHNE\n           if (!leftTypeRestricted.canTestForShallowEqualityWith(\n                   rightTypeRestricted)) {\n             result = n.getType() == Token.SHEQ ?\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "InsertBefore", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_609/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:57:37.834312353 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2115/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:08:35.653707930 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2115/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 09:08:35.653707930 -0500\n@@ -674,12 +674,7 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n-          if (!leftTypeRestricted.canTestForShallowEqualityWith(\n-                  rightTypeRestricted)) {\n-            result = n.getType() == Token.SHEQ ?\n-                TernaryValue.FALSE : TernaryValue.TRUE;\n-          }\n+          this.inExterns = inExterns;\n         }\n \n         if (result != TernaryValue.UNKNOWN) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "Replace", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_133/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:54:08.818336200 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1986/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:07:37.309559172 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1633/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:05:03.321297438 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1148/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:01:31.149493202 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2534/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:11:36.996861718 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2770/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:13:17.108252200 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2054/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:08:08.673636519 -0500\n@@ -200,9 +200,7 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n-          return caseEquality(condition, blindScope, SHNE);\n         }\n \n       case Token.SHNE:\n\n\n--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 08:47:22.367896844 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2054/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2018-12-01 09:08:08.677636530 -0500\n@@ -674,7 +674,8 @@\n             result = result.not();\n           }\n         } else {\n-          // SHEQ or SHNE\n+          this.inExterns = inExterns;\n+\t\t// SHEQ or SHNE\n           if (!leftTypeRestricted.canTestForShallowEqualityWith(\n                   rightTypeRestricted)) {\n             result = n.getType() == Token.SHEQ ?\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 678, 
          "faulty": "if (!leftTypeRestricted.canTestForShallowEqualityWith(rightTypeRestricted)) {\n  result=n.getType() == Token.SHEQ ? TernaryValue.FALSE : TernaryValue.TRUE;\n}", 
          "type": "InsertBefore", 
          "seed": "this.inExterns=inExterns;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_745/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:58:36.046114940 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_3138/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:16:03.307811470 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_2959/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:14:43.039955458 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1775/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:06:05.921376223 -0500\n@@ -200,7 +200,6 @@\n \n       case Token.SHEQ:\n         if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n         } else {\n           return caseEquality(condition, blindScope, SHNE);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 203, 
          "faulty": "return caseEquality(condition,blindScope,SHEQ);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 08:47:19.455896889 -0500\n+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_1592/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java\t2018-12-01 09:04:45.529283640 -0500\n@@ -199,11 +199,7 @@\n         }\n \n       case Token.SHEQ:\n-        if (outcome) {\n-          return caseEquality(condition, blindScope, SHEQ);\n-        } else {\n-          return caseEquality(condition, blindScope, SHNE);\n-        }\n+        ;\n \n       case Token.SHNE:\n         if (outcome) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 202, 
          "faulty": "if (outcome) {\n  return caseEquality(condition,blindScope,SHEQ);\n}\n else {\n  return caseEquality(condition,blindScope,SHNE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java", 
          "line": 205, 
          "faulty": "return caseEquality(condition,blindScope,SHNE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }
  ]
}