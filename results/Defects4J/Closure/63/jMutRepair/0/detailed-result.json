{"general":{"NR_RIGHT_COMPILATIONS":14,"NR_ERRONEOUS_VARIANCES":null,"EXECUTION_IDENTIFIER":"Closure-63","OUTPUT_STATUS":"STOP_BY_PATCH_FOUND","NR_FAILLING_COMPILATIONS":null,"NR_GENERATIONS":null,"TOTAL_TIME":55.048,"NR_FAILING_VALIDATION_PROCESS":null},"patches":[{"VARIANT_ID":"15","VALIDATION":"|true|0|7114|[]|","patchhunks":[{"LOCATION":"com.google.javascript.jscomp.LightweightMessageFormatter","PATH":"\\\/tmp\\\/jMutRepair_Defects4J_Closure_63\\\/output_astor\\\/AstorMain-Closure-63\\\/src\\\/default\\\/com\\\/google\\\/javascript\\\/jscomp\\\/LightweightMessageFormatter.java","ORIGINAL_CODE":"((excerpt.equals(com.google.javascript.jscomp.SourceExcerptProvider.SourceExcerpt.LINE)) && \\n(0 <= charno)) && (charno < (sourceExcerpt.length()))","BUGGY_CODE_TYPE":"CtBinaryOperatorImpl|CtIfImpl","OPERATOR":"IfExpresionMutOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jMutRepair_Defects4J_Closure_63\\\/.\\\/output_astor\\\/AstorMain-Closure-63\\\/\\\/src\\\/\\\/variant-15_f\\\/com\\\/google\\\/javascript\\\/jscomp\\\/LightweightMessageFormatter.java","LINE":"97","SUSPICIOUNESS":"0.447","MP_RANKING":"0","PATCH_HUNK_CODE":"((this.excerpt.equals(com.google.javascript.jscomp.SourceExcerptProvider.SourceExcerpt.LINE)) && \\n(0 <= charno)) && (charno <= (sourceExcerpt.length()))","PATCH_HUNK_TYPE":"CtBinaryOperatorImpl|CtIfImpl"}],"TIME":"27","GENERATION":"1","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jMutRepair_Defects4J_Closure_63\\\/.\\\/output_astor\\\/AstorMain-Closure-63\\\/\\\/bin\\\/\\\/variant-15","PATCH_DIFF_ORIG":"\\\/var\\\/lib\\\/oar\\\/.batch_job_bashrc: line 5: \\\/home\\\/tdurieux\\\/.bashrc: No such file or directory\\n--- com\\\/google\\\/javascript\\\/jscomp\\\/LightweightMessageFormatter.java\\n+++ com\\\/google\\\/javascript\\\/jscomp\\\/LightweightMessageFormatter.java\\n@@ -94,8 +94,8 @@\\n \\n \\n \\n-\\t\\t\\tif (((excerpt.equals(com.google.javascript.jscomp.SourceExcerptProvider.SourceExcerpt.LINE)) && \\n-\\t\\t\\t(0 <= charno)) && (charno < (sourceExcerpt.length()))) {\\n+\\t\\t\\tif (((this.excerpt.equals(com.google.javascript.jscomp.SourceExcerptProvider.SourceExcerpt.LINE)) && \\n+\\t\\t\\t(0 <= charno)) && (charno <= (sourceExcerpt.length()))) {\\n \\t\\t\\t\\tfor (int i = 0; i < charno; i++) {\\n \\t\\t\\t\\t\\tchar c = sourceExcerpt.charAt(i);\\n \\t\\t\\t\\t\\tif (java.lang.Character.isWhitespace(c)) {\\n\\n"}]}