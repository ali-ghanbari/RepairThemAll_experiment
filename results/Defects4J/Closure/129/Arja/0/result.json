{
  "repair_end": "2018-12-01 15:05:21.535259", 
  "repair_begin": "2018-12-01 14:46:16.851658", 
  "patches": [
    {
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1546, 
          "faulty": "return false;", 
          "type": "Delete", 
          "seed": "this.sourcePosition=sourcePosition;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/ConvertToDottedProperties.java", 
          "line": 64, 
          "faulty": "compiler.reportCodeChange();", 
          "type": "Replace", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 1323, 
          "faulty": "Preconditions.checkArgument(n.isGetElem());", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 08:46:01.972601364 -0500\n+++ /tmp/Arja_Defects4J_Closure_129/patches_ulrg/Patch_685/patched/tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 08:58:07.504737232 -0500\n@@ -1320,8 +1320,6 @@\n    * Try to fold array-element. e.g [1, 2, 3][10];\n    */\n   private Node tryFoldGetElem(Node n, Node left, Node right) {\n-    Preconditions.checkArgument(n.isGetElem());\n-\n     if (left.isObjectLit()) {\n       return tryFoldObjectPropAccess(n, left, right);\n     }\n\n\n--- /tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:46:01.984601380 -0500\n+++ /tmp/Arja_Defects4J_Closure_129/patches_ulrg/Patch_685/patched/tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:58:07.508737231 -0500\n@@ -1543,7 +1543,6 @@\n       }\n     } else if (type == Token.CALL) {\n       if (this.getBooleanProp(FREE_CALL) != node.getBooleanProp(FREE_CALL)) {\n-        return false;\n       }\n     }\n \n\n\n--- /tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/jscomp/ConvertToDottedProperties.java\t2018-12-01 08:46:01.752601087 -0500\n+++ /tmp/Arja_Defects4J_Closure_129/patches_ulrg/Patch_685/patched/tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/jscomp/ConvertToDottedProperties.java\t2018-12-01 08:58:07.508737231 -0500\n@@ -61,7 +61,7 @@\n           n.removeChild(left);\n           n.removeChild(right);\n           parent.replaceChild(n, IR.getprop(left, right));\n-          compiler.reportCodeChange();\n+          break;\n         }\n         break;\n     }\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1546, 
          "faulty": "return false;", 
          "type": "Delete", 
          "seed": "if (type == Token.CALL) {\n  if (this.getBooleanProp(FREE_CALL) != node.getBooleanProp(FREE_CALL)) {\n    return false;\n  }\n}"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 1329, 
          "faulty": "if (left.isArrayLit()) {\n  return tryFoldArrayAccess(n,left,right);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 08:46:01.972601364 -0500\n+++ /tmp/Arja_Defects4J_Closure_129/patches_ulrg/Patch_1035/patched/tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 09:01:36.956555846 -0500\n@@ -1326,9 +1326,6 @@\n       return tryFoldObjectPropAccess(n, left, right);\n     }\n \n-    if (left.isArrayLit()) {\n-      return tryFoldArrayAccess(n, left, right);\n-    }\n     return n;\n   }\n \n\n\n--- /tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:46:01.984601380 -0500\n+++ /tmp/Arja_Defects4J_Closure_129/patches_ulrg/Patch_1035/patched/tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-01 09:01:36.956555846 -0500\n@@ -1543,7 +1543,6 @@\n       }\n     } else if (type == Token.CALL) {\n       if (this.getBooleanProp(FREE_CALL) != node.getBooleanProp(FREE_CALL)) {\n-        return false;\n       }\n     }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1428, 
          "faulty": "return \"Node tree inequality:\" + \"\\nTree1:\\n\" + toStringTree() + \"\\n\\nTree2:\\n\"+ node2.toStringTree()+ \"\\n\\nSubtree1: \"+ diff.nodeA.toStringTree()+ \"\\n\\nSubtree2: \"+ diff.nodeB.toStringTree();", 
          "type": "Replace", 
          "seed": "return \"ADD\";"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1546, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/ConvertToDottedProperties.java", 
          "line": 64, 
          "faulty": "compiler.reportCodeChange();", 
          "type": "Replace", 
          "seed": "break;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:46:01.984601380 -0500\n+++ /tmp/Arja_Defects4J_Closure_129/patches_ulrg/Patch_1134/patched/tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-01 09:02:34.044442737 -0500\n@@ -1425,11 +1425,7 @@\n   public String checkTreeEquals(Node node2) {\n       NodeMismatch diff = checkTreeEqualsImpl(node2);\n       if (diff != null) {\n-        return \"Node tree inequality:\" +\n-            \"\\nTree1:\\n\" + toStringTree() +\n-            \"\\n\\nTree2:\\n\" + node2.toStringTree() +\n-            \"\\n\\nSubtree1: \" + diff.nodeA.toStringTree() +\n-            \"\\n\\nSubtree2: \" + diff.nodeB.toStringTree();\n+        return \"ADD\";\n       }\n       return null;\n   }\n@@ -1543,7 +1539,7 @@\n       }\n     } else if (type == Token.CALL) {\n       if (this.getBooleanProp(FREE_CALL) != node.getBooleanProp(FREE_CALL)) {\n-        return false;\n+        return true;\n       }\n     }\n \n\n\n--- /tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/jscomp/ConvertToDottedProperties.java\t2018-12-01 08:46:01.752601087 -0500\n+++ /tmp/Arja_Defects4J_Closure_129/patches_ulrg/Patch_1134/patched/tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/jscomp/ConvertToDottedProperties.java\t2018-12-01 09:02:34.044442737 -0500\n@@ -61,7 +61,7 @@\n           n.removeChild(left);\n           n.removeChild(right);\n           parent.replaceChild(n, IR.getprop(left, right));\n-          compiler.reportCodeChange();\n+          break;\n         }\n         break;\n     }\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1428, 
          "faulty": "return \"Node tree inequality:\" + \"\\nTree1:\\n\" + toStringTree() + \"\\n\\nTree2:\\n\"+ node2.toStringTree()+ \"\\n\\nSubtree1: \"+ diff.nodeA.toStringTree()+ \"\\n\\nSubtree2: \"+ diff.nodeB.toStringTree();", 
          "type": "Replace", 
          "seed": "return \"PARAM_LIST\";"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1546, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:46:01.984601380 -0500\n+++ /tmp/Arja_Defects4J_Closure_129/patches_ulrg/Patch_723/patched/tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:58:30.612728530 -0500\n@@ -1425,11 +1425,7 @@\n   public String checkTreeEquals(Node node2) {\n       NodeMismatch diff = checkTreeEqualsImpl(node2);\n       if (diff != null) {\n-        return \"Node tree inequality:\" +\n-            \"\\nTree1:\\n\" + toStringTree() +\n-            \"\\n\\nTree2:\\n\" + node2.toStringTree() +\n-            \"\\n\\nSubtree1: \" + diff.nodeA.toStringTree() +\n-            \"\\n\\nSubtree2: \" + diff.nodeB.toStringTree();\n+        return \"PARAM_LIST\";\n       }\n       return null;\n   }\n@@ -1543,7 +1539,7 @@\n       }\n     } else if (type == Token.CALL) {\n       if (this.getBooleanProp(FREE_CALL) != node.getBooleanProp(FREE_CALL)) {\n-        return false;\n+        return true;\n       }\n     }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1546, 
          "faulty": "return false;", 
          "type": "Delete", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 1323, 
          "faulty": "Preconditions.checkArgument(n.isGetElem());", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 1325, 
          "faulty": "if (left.isObjectLit()) {\n  return tryFoldObjectPropAccess(n,left,right);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 08:46:01.972601364 -0500\n+++ /tmp/Arja_Defects4J_Closure_129/patches_ulrg/Patch_799/patched/tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 08:59:16.832719995 -0500\n@@ -1320,12 +1320,6 @@\n    * Try to fold array-element. e.g [1, 2, 3][10];\n    */\n   private Node tryFoldGetElem(Node n, Node left, Node right) {\n-    Preconditions.checkArgument(n.isGetElem());\n-\n-    if (left.isObjectLit()) {\n-      return tryFoldObjectPropAccess(n, left, right);\n-    }\n-\n     if (left.isArrayLit()) {\n       return tryFoldArrayAccess(n, left, right);\n     }\n\n\n--- /tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:46:01.984601380 -0500\n+++ /tmp/Arja_Defects4J_Closure_129/patches_ulrg/Patch_799/patched/tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:59:16.836719995 -0500\n@@ -1543,7 +1543,6 @@\n       }\n     } else if (type == Token.CALL) {\n       if (this.getBooleanProp(FREE_CALL) != node.getBooleanProp(FREE_CALL)) {\n-        return false;\n       }\n     }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1546, 
          "faulty": "return false;", 
          "type": "Delete", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 1323, 
          "faulty": "Preconditions.checkArgument(n.isGetElem());", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 08:46:01.972601364 -0500\n+++ /tmp/Arja_Defects4J_Closure_129/patches_ulrg/Patch_910/patched/tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 09:00:20.032724471 -0500\n@@ -1320,8 +1320,6 @@\n    * Try to fold array-element. e.g [1, 2, 3][10];\n    */\n   private Node tryFoldGetElem(Node n, Node left, Node right) {\n-    Preconditions.checkArgument(n.isGetElem());\n-\n     if (left.isObjectLit()) {\n       return tryFoldObjectPropAccess(n, left, right);\n     }\n\n\n--- /tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:46:01.984601380 -0500\n+++ /tmp/Arja_Defects4J_Closure_129/patches_ulrg/Patch_910/patched/tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-01 09:00:20.032724471 -0500\n@@ -1543,7 +1543,6 @@\n       }\n     } else if (type == Token.CALL) {\n       if (this.getBooleanProp(FREE_CALL) != node.getBooleanProp(FREE_CALL)) {\n-        return false;\n       }\n     }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1546, 
          "faulty": "return false;", 
          "type": "Delete", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 1323, 
          "faulty": "Preconditions.checkArgument(n.isGetElem());", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 08:46:01.972601364 -0500\n+++ /tmp/Arja_Defects4J_Closure_129/patches_ulrg/Patch_1088/patched/tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 09:02:07.952490022 -0500\n@@ -1320,8 +1320,6 @@\n    * Try to fold array-element. e.g [1, 2, 3][10];\n    */\n   private Node tryFoldGetElem(Node n, Node left, Node right) {\n-    Preconditions.checkArgument(n.isGetElem());\n-\n     if (left.isObjectLit()) {\n       return tryFoldObjectPropAccess(n, left, right);\n     }\n\n\n--- /tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:46:01.984601380 -0500\n+++ /tmp/Arja_Defects4J_Closure_129/patches_ulrg/Patch_1088/patched/tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-01 09:02:07.952490022 -0500\n@@ -1543,7 +1543,6 @@\n       }\n     } else if (type == Token.CALL) {\n       if (this.getBooleanProp(FREE_CALL) != node.getBooleanProp(FREE_CALL)) {\n-        return false;\n       }\n     }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1546, 
          "faulty": "return false;", 
          "type": "Delete", 
          "seed": "if (type == Token.STRING_KEY) {\n  int quoted1=this.getIntProp(QUOTED_PROP);\n  int quoted2=node.getIntProp(QUOTED_PROP);\n  if (quoted1 != quoted2) {\n    return false;\n  }\n}"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 1329, 
          "faulty": "if (left.isArrayLit()) {\n  return tryFoldArrayAccess(n,left,right);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 08:46:01.972601364 -0500\n+++ /tmp/Arja_Defects4J_Closure_129/patches_ulrg/Patch_98/patched/tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 08:52:32.417011623 -0500\n@@ -1326,9 +1326,6 @@\n       return tryFoldObjectPropAccess(n, left, right);\n     }\n \n-    if (left.isArrayLit()) {\n-      return tryFoldArrayAccess(n, left, right);\n-    }\n     return n;\n   }\n \n\n\n--- /tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:46:01.984601380 -0500\n+++ /tmp/Arja_Defects4J_Closure_129/patches_ulrg/Patch_98/patched/tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:52:32.417011623 -0500\n@@ -1543,7 +1543,6 @@\n       }\n     } else if (type == Token.CALL) {\n       if (this.getBooleanProp(FREE_CALL) != node.getBooleanProp(FREE_CALL)) {\n-        return false;\n       }\n     }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 132, 
          "faulty": "return \"free_call\";", 
          "type": "Replace", 
          "seed": "return \"ADD\";"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1546, 
          "faulty": "return false;", 
          "type": "Delete", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 1329, 
          "faulty": "if (left.isArrayLit()) {\n  return tryFoldArrayAccess(n,left,right);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 08:46:01.972601364 -0500\n+++ /tmp/Arja_Defects4J_Closure_129/patches_ulrg/Patch_1291/patched/tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 09:04:05.684325324 -0500\n@@ -1326,9 +1326,6 @@\n       return tryFoldObjectPropAccess(n, left, right);\n     }\n \n-    if (left.isArrayLit()) {\n-      return tryFoldArrayAccess(n, left, right);\n-    }\n     return n;\n   }\n \n\n\n--- /tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:46:01.984601380 -0500\n+++ /tmp/Arja_Defects4J_Closure_129/patches_ulrg/Patch_1291/patched/tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-01 09:04:05.684325324 -0500\n@@ -129,7 +129,7 @@\n         case IS_DISPATCHER:      return \"is_dispatcher\";\n         case DIRECTIVES:         return \"directives\";\n         case DIRECT_EVAL:        return \"direct_eval\";\n-        case FREE_CALL:          return \"free_call\";\n+        case FREE_CALL:          return \"ADD\";\n         case STATIC_SOURCE_FILE:    return \"source_file\";\n         case INPUT_ID:  return \"input_id\";\n         case LENGTH:    return \"length\";\n@@ -1543,7 +1543,6 @@\n       }\n     } else if (type == Token.CALL) {\n       if (this.getBooleanProp(FREE_CALL) != node.getBooleanProp(FREE_CALL)) {\n-        return false;\n       }\n     }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1546, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 1329, 
          "faulty": "if (left.isArrayLit()) {\n  return tryFoldArrayAccess(n,left,right);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 08:46:01.972601364 -0500\n+++ /tmp/Arja_Defects4J_Closure_129/patches_ulrg/Patch_403/patched/tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 08:55:22.748917020 -0500\n@@ -1326,9 +1326,6 @@\n       return tryFoldObjectPropAccess(n, left, right);\n     }\n \n-    if (left.isArrayLit()) {\n-      return tryFoldArrayAccess(n, left, right);\n-    }\n     return n;\n   }\n \n\n\n--- /tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:46:01.984601380 -0500\n+++ /tmp/Arja_Defects4J_Closure_129/patches_ulrg/Patch_403/patched/tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:55:22.752917012 -0500\n@@ -1543,7 +1543,7 @@\n       }\n     } else if (type == Token.CALL) {\n       if (this.getBooleanProp(FREE_CALL) != node.getBooleanProp(FREE_CALL)) {\n-        return false;\n+        return true;\n       }\n     }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1546, 
          "faulty": "return false;", 
          "type": "Delete", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 1325, 
          "faulty": "if (left.isObjectLit()) {\n  return tryFoldObjectPropAccess(n,left,right);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 08:46:01.972601364 -0500\n+++ /tmp/Arja_Defects4J_Closure_129/patches_ulrg/Patch_507/patched/tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 08:56:23.880822022 -0500\n@@ -1322,10 +1322,6 @@\n   private Node tryFoldGetElem(Node n, Node left, Node right) {\n     Preconditions.checkArgument(n.isGetElem());\n \n-    if (left.isObjectLit()) {\n-      return tryFoldObjectPropAccess(n, left, right);\n-    }\n-\n     if (left.isArrayLit()) {\n       return tryFoldArrayAccess(n, left, right);\n     }\n\n\n--- /tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:46:01.984601380 -0500\n+++ /tmp/Arja_Defects4J_Closure_129/patches_ulrg/Patch_507/patched/tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:56:23.884822017 -0500\n@@ -1543,7 +1543,6 @@\n       }\n     } else if (type == Token.CALL) {\n       if (this.getBooleanProp(FREE_CALL) != node.getBooleanProp(FREE_CALL)) {\n-        return false;\n       }\n     }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1546, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "parent=null;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:46:01.984601380 -0500\n+++ /tmp/Arja_Defects4J_Closure_129/patches_ulrg/Patch_175/patched/tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:53:13.121053072 -0500\n@@ -1543,7 +1543,7 @@\n       }\n     } else if (type == Token.CALL) {\n       if (this.getBooleanProp(FREE_CALL) != node.getBooleanProp(FREE_CALL)) {\n-        return false;\n+        parent = null;\n       }\n     }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1546, 
          "faulty": "return false;", 
          "type": "Delete", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 1332, 
          "faulty": "return n;", 
          "type": "Replace", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/CodeGenerator.java", 
          "line": 530, 
          "faulty": "add(\"(0,\");", 
          "type": "Delete", 
          "seed": "break;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 08:46:01.972601364 -0500\n+++ /tmp/Arja_Defects4J_Closure_129/patches_ulrg/Patch_449/patched/tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 08:55:49.332870835 -0500\n@@ -1329,7 +1329,7 @@\n     if (left.isArrayLit()) {\n       return tryFoldArrayAccess(n, left, right);\n     }\n-    return n;\n+    return null;\n   }\n \n   /**\n\n\n--- /tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:46:01.984601380 -0500\n+++ /tmp/Arja_Defects4J_Closure_129/patches_ulrg/Patch_449/patched/tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:55:49.332870835 -0500\n@@ -1543,7 +1543,6 @@\n       }\n     } else if (type == Token.CALL) {\n       if (this.getBooleanProp(FREE_CALL) != node.getBooleanProp(FREE_CALL)) {\n-        return false;\n       }\n     }\n \n\n\n--- /tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/jscomp/CodeGenerator.java\t2018-12-01 08:46:01.956601345 -0500\n+++ /tmp/Arja_Defects4J_Closure_129/patches_ulrg/Patch_449/patched/tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/jscomp/CodeGenerator.java\t2018-12-01 08:55:49.336870829 -0500\n@@ -527,7 +527,6 @@\n         // that must be preserved.\n         if (isIndirectEval(first)\n             || n.getBooleanProp(Node.FREE_CALL) && NodeUtil.isGet(first)) {\n-          add(\"(0,\");\n           addExpr(first, NodeUtil.precedence(Token.COMMA), Context.OTHER);\n           add(\")\");\n         } else {\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1546, 
          "faulty": "return false;", 
          "type": "Delete", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 1323, 
          "faulty": "Preconditions.checkArgument(n.isGetElem());", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/CodeGenerator.java", 
          "line": 531, 
          "faulty": "addExpr(first,NodeUtil.precedence(Token.COMMA),Context.OTHER);", 
          "type": "Delete", 
          "seed": "break;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 08:46:01.972601364 -0500\n+++ /tmp/Arja_Defects4J_Closure_129/patches_ulrg/Patch_863/patched/tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 08:59:52.496720467 -0500\n@@ -1320,8 +1320,6 @@\n    * Try to fold array-element. e.g [1, 2, 3][10];\n    */\n   private Node tryFoldGetElem(Node n, Node left, Node right) {\n-    Preconditions.checkArgument(n.isGetElem());\n-\n     if (left.isObjectLit()) {\n       return tryFoldObjectPropAccess(n, left, right);\n     }\n\n\n--- /tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:46:01.984601380 -0500\n+++ /tmp/Arja_Defects4J_Closure_129/patches_ulrg/Patch_863/patched/tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:59:52.496720467 -0500\n@@ -1543,7 +1543,6 @@\n       }\n     } else if (type == Token.CALL) {\n       if (this.getBooleanProp(FREE_CALL) != node.getBooleanProp(FREE_CALL)) {\n-        return false;\n       }\n     }\n \n\n\n--- /tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/jscomp/CodeGenerator.java\t2018-12-01 08:46:01.956601345 -0500\n+++ /tmp/Arja_Defects4J_Closure_129/patches_ulrg/Patch_863/patched/tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/jscomp/CodeGenerator.java\t2018-12-01 08:59:52.500720467 -0500\n@@ -528,7 +528,6 @@\n         if (isIndirectEval(first)\n             || n.getBooleanProp(Node.FREE_CALL) && NodeUtil.isGet(first)) {\n           add(\"(0,\");\n-          addExpr(first, NodeUtil.precedence(Token.COMMA), Context.OTHER);\n           add(\")\");\n         } else {\n           addExpr(first, NodeUtil.precedence(type), context);\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1428, 
          "faulty": "return \"Node tree inequality:\" + \"\\nTree1:\\n\" + toStringTree() + \"\\n\\nTree2:\\n\"+ node2.toStringTree()+ \"\\n\\nSubtree1: \"+ diff.nodeA.toStringTree()+ \"\\n\\nSubtree2: \"+ diff.nodeB.toStringTree();", 
          "type": "Replace", 
          "seed": "return \"SCRIPT\";"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1546, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:46:01.984601380 -0500\n+++ /tmp/Arja_Defects4J_Closure_129/patches_ulrg/Patch_163/patched/tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:53:07.269046951 -0500\n@@ -1425,11 +1425,7 @@\n   public String checkTreeEquals(Node node2) {\n       NodeMismatch diff = checkTreeEqualsImpl(node2);\n       if (diff != null) {\n-        return \"Node tree inequality:\" +\n-            \"\\nTree1:\\n\" + toStringTree() +\n-            \"\\n\\nTree2:\\n\" + node2.toStringTree() +\n-            \"\\n\\nSubtree1: \" + diff.nodeA.toStringTree() +\n-            \"\\n\\nSubtree2: \" + diff.nodeB.toStringTree();\n+        return \"SCRIPT\";\n       }\n       return null;\n   }\n@@ -1543,7 +1539,7 @@\n       }\n     } else if (type == Token.CALL) {\n       if (this.getBooleanProp(FREE_CALL) != node.getBooleanProp(FREE_CALL)) {\n-        return false;\n+        return true;\n       }\n     }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1546, 
          "faulty": "return false;", 
          "type": "Delete", 
          "seed": "this.sourcePosition=sourcePosition;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 1329, 
          "faulty": "if (left.isArrayLit()) {\n  return tryFoldArrayAccess(n,left,right);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 08:46:01.972601364 -0500\n+++ /tmp/Arja_Defects4J_Closure_129/patches_ulrg/Patch_350/patched/tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 08:54:54.208974639 -0500\n@@ -1326,9 +1326,6 @@\n       return tryFoldObjectPropAccess(n, left, right);\n     }\n \n-    if (left.isArrayLit()) {\n-      return tryFoldArrayAccess(n, left, right);\n-    }\n     return n;\n   }\n \n\n\n--- /tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:46:01.984601380 -0500\n+++ /tmp/Arja_Defects4J_Closure_129/patches_ulrg/Patch_350/patched/tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:54:54.212974633 -0500\n@@ -1543,7 +1543,6 @@\n       }\n     } else if (type == Token.CALL) {\n       if (this.getBooleanProp(FREE_CALL) != node.getBooleanProp(FREE_CALL)) {\n-        return false;\n       }\n     }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1546, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 1325, 
          "faulty": "if (left.isObjectLit()) {\n  return tryFoldObjectPropAccess(n,left,right);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 08:46:01.972601364 -0500\n+++ /tmp/Arja_Defects4J_Closure_129/patches_ulrg/Patch_727/patched/tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 08:58:32.664727908 -0500\n@@ -1322,10 +1322,6 @@\n   private Node tryFoldGetElem(Node n, Node left, Node right) {\n     Preconditions.checkArgument(n.isGetElem());\n \n-    if (left.isObjectLit()) {\n-      return tryFoldObjectPropAccess(n, left, right);\n-    }\n-\n     if (left.isArrayLit()) {\n       return tryFoldArrayAccess(n, left, right);\n     }\n\n\n--- /tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:46:01.984601380 -0500\n+++ /tmp/Arja_Defects4J_Closure_129/patches_ulrg/Patch_727/patched/tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:58:32.668727907 -0500\n@@ -1543,7 +1543,7 @@\n       }\n     } else if (type == Token.CALL) {\n       if (this.getBooleanProp(FREE_CALL) != node.getBooleanProp(FREE_CALL)) {\n-        return false;\n+        return true;\n       }\n     }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1546, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 1325, 
          "faulty": "if (left.isObjectLit()) {\n  return tryFoldObjectPropAccess(n,left,right);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 08:46:01.972601364 -0500\n+++ /tmp/Arja_Defects4J_Closure_129/patches_ulrg/Patch_131/patched/tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 08:52:50.389029594 -0500\n@@ -1322,10 +1322,6 @@\n   private Node tryFoldGetElem(Node n, Node left, Node right) {\n     Preconditions.checkArgument(n.isGetElem());\n \n-    if (left.isObjectLit()) {\n-      return tryFoldObjectPropAccess(n, left, right);\n-    }\n-\n     if (left.isArrayLit()) {\n       return tryFoldArrayAccess(n, left, right);\n     }\n\n\n--- /tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:46:01.984601380 -0500\n+++ /tmp/Arja_Defects4J_Closure_129/patches_ulrg/Patch_131/patched/tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:52:50.389029594 -0500\n@@ -1543,7 +1543,7 @@\n       }\n     } else if (type == Token.CALL) {\n       if (this.getBooleanProp(FREE_CALL) != node.getBooleanProp(FREE_CALL)) {\n-        return false;\n+        return true;\n       }\n     }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1546, 
          "faulty": "return false;", 
          "type": "Delete", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 1325, 
          "faulty": "if (left.isObjectLit()) {\n  return tryFoldObjectPropAccess(n,left,right);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 08:46:01.972601364 -0500\n+++ /tmp/Arja_Defects4J_Closure_129/patches_ulrg/Patch_500/patched/tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 08:56:20.040826867 -0500\n@@ -1322,10 +1322,6 @@\n   private Node tryFoldGetElem(Node n, Node left, Node right) {\n     Preconditions.checkArgument(n.isGetElem());\n \n-    if (left.isObjectLit()) {\n-      return tryFoldObjectPropAccess(n, left, right);\n-    }\n-\n     if (left.isArrayLit()) {\n       return tryFoldArrayAccess(n, left, right);\n     }\n\n\n--- /tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:46:01.984601380 -0500\n+++ /tmp/Arja_Defects4J_Closure_129/patches_ulrg/Patch_500/patched/tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:56:20.044826862 -0500\n@@ -1543,7 +1543,6 @@\n       }\n     } else if (type == Token.CALL) {\n       if (this.getBooleanProp(FREE_CALL) != node.getBooleanProp(FREE_CALL)) {\n-        return false;\n       }\n     }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1546, 
          "faulty": "return false;", 
          "type": "Delete", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 1325, 
          "faulty": "if (left.isObjectLit()) {\n  return tryFoldObjectPropAccess(n,left,right);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 08:46:01.972601364 -0500\n+++ /tmp/Arja_Defects4J_Closure_129/patches_ulrg/Patch_1380/patched/tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 09:04:57.880285629 -0500\n@@ -1322,10 +1322,6 @@\n   private Node tryFoldGetElem(Node n, Node left, Node right) {\n     Preconditions.checkArgument(n.isGetElem());\n \n-    if (left.isObjectLit()) {\n-      return tryFoldObjectPropAccess(n, left, right);\n-    }\n-\n     if (left.isArrayLit()) {\n       return tryFoldArrayAccess(n, left, right);\n     }\n\n\n--- /tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:46:01.984601380 -0500\n+++ /tmp/Arja_Defects4J_Closure_129/patches_ulrg/Patch_1380/patched/tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-01 09:04:57.880285629 -0500\n@@ -1543,7 +1543,6 @@\n       }\n     } else if (type == Token.CALL) {\n       if (this.getBooleanProp(FREE_CALL) != node.getBooleanProp(FREE_CALL)) {\n-        return false;\n       }\n     }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1546, 
          "faulty": "return false;", 
          "type": "Delete", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 1329, 
          "faulty": "if (left.isArrayLit()) {\n  return tryFoldArrayAccess(n,left,right);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 08:46:01.972601364 -0500\n+++ /tmp/Arja_Defects4J_Closure_129/patches_ulrg/Patch_979/patched/tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 09:01:02.788642093 -0500\n@@ -1326,9 +1326,6 @@\n       return tryFoldObjectPropAccess(n, left, right);\n     }\n \n-    if (left.isArrayLit()) {\n-      return tryFoldArrayAccess(n, left, right);\n-    }\n     return n;\n   }\n \n\n\n--- /tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:46:01.984601380 -0500\n+++ /tmp/Arja_Defects4J_Closure_129/patches_ulrg/Patch_979/patched/tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-01 09:01:02.788642093 -0500\n@@ -1543,7 +1543,6 @@\n       }\n     } else if (type == Token.CALL) {\n       if (this.getBooleanProp(FREE_CALL) != node.getBooleanProp(FREE_CALL)) {\n-        return false;\n       }\n     }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1428, 
          "faulty": "return \"Node tree inequality:\" + \"\\nTree1:\\n\" + toStringTree() + \"\\n\\nTree2:\\n\"+ node2.toStringTree()+ \"\\n\\nSubtree1: \"+ diff.nodeA.toStringTree()+ \"\\n\\nSubtree2: \"+ diff.nodeB.toStringTree();", 
          "type": "InsertBefore", 
          "seed": "sourcePosition=-1;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1457, 
          "faulty": "return res;", 
          "type": "InsertBefore", 
          "seed": "this.sourcePosition=sourcePosition;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1546, 
          "faulty": "return false;", 
          "type": "Delete", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/CodeGenerator.java", 
          "line": 531, 
          "faulty": "addExpr(first,NodeUtil.precedence(Token.COMMA),Context.OTHER);", 
          "type": "Delete", 
          "seed": "break;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:46:01.984601380 -0500\n+++ /tmp/Arja_Defects4J_Closure_129/patches_ulrg/Patch_316/patched/tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:54:33.841006837 -0500\n@@ -1425,7 +1425,8 @@\n   public String checkTreeEquals(Node node2) {\n       NodeMismatch diff = checkTreeEqualsImpl(node2);\n       if (diff != null) {\n-        return \"Node tree inequality:\" +\n+        sourcePosition = -1;\n+\t\treturn \"Node tree inequality:\" +\n             \"\\nTree1:\\n\" + toStringTree() +\n             \"\\n\\nTree2:\\n\" + node2.toStringTree() +\n             \"\\n\\nSubtree1: \" + diff.nodeA.toStringTree() +\n@@ -1454,7 +1455,8 @@\n       }\n       res = n.checkTreeEqualsImpl(n2);\n       if (res != null) {\n-        return res;\n+        this.sourcePosition = sourcePosition;\n+\t\treturn res;\n       }\n     }\n     return res;\n@@ -1543,7 +1545,6 @@\n       }\n     } else if (type == Token.CALL) {\n       if (this.getBooleanProp(FREE_CALL) != node.getBooleanProp(FREE_CALL)) {\n-        return false;\n       }\n     }\n \n\n\n--- /tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/jscomp/CodeGenerator.java\t2018-12-01 08:46:01.956601345 -0500\n+++ /tmp/Arja_Defects4J_Closure_129/patches_ulrg/Patch_316/patched/tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/jscomp/CodeGenerator.java\t2018-12-01 08:54:33.841006837 -0500\n@@ -528,7 +528,6 @@\n         if (isIndirectEval(first)\n             || n.getBooleanProp(Node.FREE_CALL) && NodeUtil.isGet(first)) {\n           add(\"(0,\");\n-          addExpr(first, NodeUtil.precedence(Token.COMMA), Context.OTHER);\n           add(\")\");\n         } else {\n           addExpr(first, NodeUtil.precedence(type), context);\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1428, 
          "faulty": "return \"Node tree inequality:\" + \"\\nTree1:\\n\" + toStringTree() + \"\\n\\nTree2:\\n\"+ node2.toStringTree()+ \"\\n\\nSubtree1: \"+ diff.nodeA.toStringTree()+ \"\\n\\nSubtree2: \"+ diff.nodeB.toStringTree();", 
          "type": "Replace", 
          "seed": "return \"ADD\";"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1546, 
          "faulty": "return false;", 
          "type": "Delete", 
          "seed": "return true;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:46:01.984601380 -0500\n+++ /tmp/Arja_Defects4J_Closure_129/patches_ulrg/Patch_764/patched/tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:58:55.688722523 -0500\n@@ -1425,11 +1425,7 @@\n   public String checkTreeEquals(Node node2) {\n       NodeMismatch diff = checkTreeEqualsImpl(node2);\n       if (diff != null) {\n-        return \"Node tree inequality:\" +\n-            \"\\nTree1:\\n\" + toStringTree() +\n-            \"\\n\\nTree2:\\n\" + node2.toStringTree() +\n-            \"\\n\\nSubtree1: \" + diff.nodeA.toStringTree() +\n-            \"\\n\\nSubtree2: \" + diff.nodeB.toStringTree();\n+        return \"ADD\";\n       }\n       return null;\n   }\n@@ -1543,7 +1539,6 @@\n       }\n     } else if (type == Token.CALL) {\n       if (this.getBooleanProp(FREE_CALL) != node.getBooleanProp(FREE_CALL)) {\n-        return false;\n       }\n     }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1546, 
          "faulty": "return false;", 
          "type": "Delete", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 1329, 
          "faulty": "if (left.isArrayLit()) {\n  return tryFoldArrayAccess(n,left,right);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 08:46:01.972601364 -0500\n+++ /tmp/Arja_Defects4J_Closure_129/patches_ulrg/Patch_146/patched/tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 08:52:58.065037431 -0500\n@@ -1326,9 +1326,6 @@\n       return tryFoldObjectPropAccess(n, left, right);\n     }\n \n-    if (left.isArrayLit()) {\n-      return tryFoldArrayAccess(n, left, right);\n-    }\n     return n;\n   }\n \n\n\n--- /tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:46:01.984601380 -0500\n+++ /tmp/Arja_Defects4J_Closure_129/patches_ulrg/Patch_146/patched/tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:52:58.069037435 -0500\n@@ -1543,7 +1543,6 @@\n       }\n     } else if (type == Token.CALL) {\n       if (this.getBooleanProp(FREE_CALL) != node.getBooleanProp(FREE_CALL)) {\n-        return false;\n       }\n     }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1457, 
          "faulty": "return res;", 
          "type": "InsertBefore", 
          "seed": "this.sourcePosition=sourcePosition;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1546, 
          "faulty": "return false;", 
          "type": "Delete", 
          "seed": "return true;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:46:01.984601380 -0500\n+++ /tmp/Arja_Defects4J_Closure_129/patches_ulrg/Patch_169/patched/tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:53:10.537050363 -0500\n@@ -1454,7 +1454,8 @@\n       }\n       res = n.checkTreeEqualsImpl(n2);\n       if (res != null) {\n-        return res;\n+        this.sourcePosition = sourcePosition;\n+\t\treturn res;\n       }\n     }\n     return res;\n@@ -1543,7 +1544,6 @@\n       }\n     } else if (type == Token.CALL) {\n       if (this.getBooleanProp(FREE_CALL) != node.getBooleanProp(FREE_CALL)) {\n-        return false;\n       }\n     }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1546, 
          "faulty": "return false;", 
          "type": "Delete", 
          "seed": "return this.getType() == Token.BLOCK;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/ConvertToDottedProperties.java", 
          "line": 64, 
          "faulty": "compiler.reportCodeChange();", 
          "type": "Delete", 
          "seed": "break;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:46:01.984601380 -0500\n+++ /tmp/Arja_Defects4J_Closure_129/patches_ulrg/Patch_85/patched/tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:52:25.533004887 -0500\n@@ -1543,7 +1543,6 @@\n       }\n     } else if (type == Token.CALL) {\n       if (this.getBooleanProp(FREE_CALL) != node.getBooleanProp(FREE_CALL)) {\n-        return false;\n       }\n     }\n \n\n\n--- /tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/jscomp/ConvertToDottedProperties.java\t2018-12-01 08:46:01.752601087 -0500\n+++ /tmp/Arja_Defects4J_Closure_129/patches_ulrg/Patch_85/patched/tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/jscomp/ConvertToDottedProperties.java\t2018-12-01 08:52:25.533004887 -0500\n@@ -61,7 +61,6 @@\n           n.removeChild(left);\n           n.removeChild(right);\n           parent.replaceChild(n, IR.getprop(left, right));\n-          compiler.reportCodeChange();\n         }\n         break;\n     }\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1546, 
          "faulty": "return false;", 
          "type": "Delete", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 1329, 
          "faulty": "if (left.isArrayLit()) {\n  return tryFoldArrayAccess(n,left,right);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 08:46:01.972601364 -0500\n+++ /tmp/Arja_Defects4J_Closure_129/patches_ulrg/Patch_445/patched/tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 08:55:47.352874004 -0500\n@@ -1326,9 +1326,6 @@\n       return tryFoldObjectPropAccess(n, left, right);\n     }\n \n-    if (left.isArrayLit()) {\n-      return tryFoldArrayAccess(n, left, right);\n-    }\n     return n;\n   }\n \n\n\n--- /tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:46:01.984601380 -0500\n+++ /tmp/Arja_Defects4J_Closure_129/patches_ulrg/Patch_445/patched/tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:55:47.352874004 -0500\n@@ -1543,7 +1543,6 @@\n       }\n     } else if (type == Token.CALL) {\n       if (this.getBooleanProp(FREE_CALL) != node.getBooleanProp(FREE_CALL)) {\n-        return false;\n       }\n     }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1546, 
          "faulty": "return false;", 
          "type": "Delete", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 1329, 
          "faulty": "if (left.isArrayLit()) {\n  return tryFoldArrayAccess(n,left,right);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 08:46:01.972601364 -0500\n+++ /tmp/Arja_Defects4J_Closure_129/patches_ulrg/Patch_543/patched/tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 08:56:43.636799231 -0500\n@@ -1326,9 +1326,6 @@\n       return tryFoldObjectPropAccess(n, left, right);\n     }\n \n-    if (left.isArrayLit()) {\n-      return tryFoldArrayAccess(n, left, right);\n-    }\n     return n;\n   }\n \n\n\n--- /tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:46:01.984601380 -0500\n+++ /tmp/Arja_Defects4J_Closure_129/patches_ulrg/Patch_543/patched/tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:56:43.640799227 -0500\n@@ -1543,7 +1543,6 @@\n       }\n     } else if (type == Token.CALL) {\n       if (this.getBooleanProp(FREE_CALL) != node.getBooleanProp(FREE_CALL)) {\n-        return false;\n       }\n     }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1546, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "this.sourcePosition=sourcePosition;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 1325, 
          "faulty": "if (left.isObjectLit()) {\n  return tryFoldObjectPropAccess(n,left,right);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 08:46:01.972601364 -0500\n+++ /tmp/Arja_Defects4J_Closure_129/patches_ulrg/Patch_328/patched/tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 08:54:41.260994583 -0500\n@@ -1322,10 +1322,6 @@\n   private Node tryFoldGetElem(Node n, Node left, Node right) {\n     Preconditions.checkArgument(n.isGetElem());\n \n-    if (left.isObjectLit()) {\n-      return tryFoldObjectPropAccess(n, left, right);\n-    }\n-\n     if (left.isArrayLit()) {\n       return tryFoldArrayAccess(n, left, right);\n     }\n\n\n--- /tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:46:01.984601380 -0500\n+++ /tmp/Arja_Defects4J_Closure_129/patches_ulrg/Patch_328/patched/tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:54:41.260994583 -0500\n@@ -1543,7 +1543,7 @@\n       }\n     } else if (type == Token.CALL) {\n       if (this.getBooleanProp(FREE_CALL) != node.getBooleanProp(FREE_CALL)) {\n-        return false;\n+        this.sourcePosition = sourcePosition;\n       }\n     }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1546, 
          "faulty": "return false;", 
          "type": "Delete", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 1325, 
          "faulty": "if (left.isObjectLit()) {\n  return tryFoldObjectPropAccess(n,left,right);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/NodeUtil.java", 
          "line": 3165, 
          "faulty": "return isExpressionResultUsed(parent);", 
          "type": "Replace", 
          "seed": "break;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 08:46:01.972601364 -0500\n+++ /tmp/Arja_Defects4J_Closure_129/patches_ulrg/Patch_251/patched/tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 08:53:56.545078265 -0500\n@@ -1322,10 +1322,6 @@\n   private Node tryFoldGetElem(Node n, Node left, Node right) {\n     Preconditions.checkArgument(n.isGetElem());\n \n-    if (left.isObjectLit()) {\n-      return tryFoldObjectPropAccess(n, left, right);\n-    }\n-\n     if (left.isArrayLit()) {\n       return tryFoldArrayAccess(n, left, right);\n     }\n\n\n--- /tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/jscomp/NodeUtil.java\t2018-12-01 08:46:01.968601359 -0500\n+++ /tmp/Arja_Defects4J_Closure_129/patches_ulrg/Patch_251/patched/tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/jscomp/NodeUtil.java\t2018-12-01 08:53:56.549078256 -0500\n@@ -3162,7 +3162,7 @@\n       case Token.EXPR_RESULT:\n         return false;\n       case Token.CAST:\n-        return isExpressionResultUsed(parent);\n+        break;\n       case Token.HOOK:\n       case Token.AND:\n       case Token.OR:\n\n\n--- /tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:46:01.984601380 -0500\n+++ /tmp/Arja_Defects4J_Closure_129/patches_ulrg/Patch_251/patched/tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:53:56.549078256 -0500\n@@ -1543,7 +1543,6 @@\n       }\n     } else if (type == Token.CALL) {\n       if (this.getBooleanProp(FREE_CALL) != node.getBooleanProp(FREE_CALL)) {\n-        return false;\n       }\n     }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 132, 
          "faulty": "return \"free_call\";", 
          "type": "Replace", 
          "seed": "return \"RETURN\";"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1546, 
          "faulty": "return false;", 
          "type": "Delete", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 122, 
          "faulty": "return tryFoldGetElem(subtree,left,right);", 
          "type": "Replace", 
          "seed": "return null;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 08:46:01.972601364 -0500\n+++ /tmp/Arja_Defects4J_Closure_129/patches_ulrg/Patch_128/patched/tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 08:52:48.985028170 -0500\n@@ -119,7 +119,7 @@\n         return tryFoldGetProp(subtree, left, right);\n \n       case Token.GETELEM:\n-        return tryFoldGetElem(subtree, left, right);\n+        return null;\n \n       case Token.INSTANCEOF:\n         return tryFoldInstanceof(subtree, left, right);\n\n\n--- /tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:46:01.984601380 -0500\n+++ /tmp/Arja_Defects4J_Closure_129/patches_ulrg/Patch_128/patched/tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:52:48.989028174 -0500\n@@ -129,7 +129,7 @@\n         case IS_DISPATCHER:      return \"is_dispatcher\";\n         case DIRECTIVES:         return \"directives\";\n         case DIRECT_EVAL:        return \"direct_eval\";\n-        case FREE_CALL:          return \"free_call\";\n+        case FREE_CALL:          return \"RETURN\";\n         case STATIC_SOURCE_FILE:    return \"source_file\";\n         case INPUT_ID:  return \"input_id\";\n         case LENGTH:    return \"length\";\n@@ -1543,7 +1543,6 @@\n       }\n     } else if (type == Token.CALL) {\n       if (this.getBooleanProp(FREE_CALL) != node.getBooleanProp(FREE_CALL)) {\n-        return false;\n       }\n     }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1546, 
          "faulty": "return false;", 
          "type": "Delete", 
          "seed": "return getBooleanProp(VAR_ARGS_NAME);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeReplaceKnownMethods.java", 
          "line": 403, 
          "faulty": "return n;", 
          "type": "Delete", 
          "seed": "return this;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/jscomp/PeepholeReplaceKnownMethods.java\t2018-12-01 08:46:01.972601364 -0500\n+++ /tmp/Arja_Defects4J_Closure_129/patches_ulrg/Patch_384/patched/tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/jscomp/PeepholeReplaceKnownMethods.java\t2018-12-01 08:55:12.860936297 -0500\n@@ -400,7 +400,6 @@\n     Node right = callTarget.getNext();\n     if (right != null) {\n       if (right.getNext() != null || !NodeUtil.isImmutableValue(right)) {\n-        return n;\n       }\n     }\n \n\n\n--- /tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:46:01.984601380 -0500\n+++ /tmp/Arja_Defects4J_Closure_129/patches_ulrg/Patch_384/patched/tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:55:12.864936288 -0500\n@@ -1543,7 +1543,6 @@\n       }\n     } else if (type == Token.CALL) {\n       if (this.getBooleanProp(FREE_CALL) != node.getBooleanProp(FREE_CALL)) {\n-        return false;\n       }\n     }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1546, 
          "faulty": "return false;", 
          "type": "Delete", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 1323, 
          "faulty": "Preconditions.checkArgument(n.isGetElem());", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/CodeGenerator.java", 
          "line": 532, 
          "faulty": "add(\")\");", 
          "type": "Delete", 
          "seed": "break;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 08:46:01.972601364 -0500\n+++ /tmp/Arja_Defects4J_Closure_129/patches_ulrg/Patch_93/patched/tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 08:52:30.341009583 -0500\n@@ -1320,8 +1320,6 @@\n    * Try to fold array-element. e.g [1, 2, 3][10];\n    */\n   private Node tryFoldGetElem(Node n, Node left, Node right) {\n-    Preconditions.checkArgument(n.isGetElem());\n-\n     if (left.isObjectLit()) {\n       return tryFoldObjectPropAccess(n, left, right);\n     }\n\n\n--- /tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:46:01.984601380 -0500\n+++ /tmp/Arja_Defects4J_Closure_129/patches_ulrg/Patch_93/patched/tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:52:30.341009583 -0500\n@@ -1543,7 +1543,6 @@\n       }\n     } else if (type == Token.CALL) {\n       if (this.getBooleanProp(FREE_CALL) != node.getBooleanProp(FREE_CALL)) {\n-        return false;\n       }\n     }\n \n\n\n--- /tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/jscomp/CodeGenerator.java\t2018-12-01 08:46:01.956601345 -0500\n+++ /tmp/Arja_Defects4J_Closure_129/patches_ulrg/Patch_93/patched/tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/jscomp/CodeGenerator.java\t2018-12-01 08:52:30.341009583 -0500\n@@ -529,7 +529,6 @@\n             || n.getBooleanProp(Node.FREE_CALL) && NodeUtil.isGet(first)) {\n           add(\"(0,\");\n           addExpr(first, NodeUtil.precedence(Token.COMMA), Context.OTHER);\n-          add(\")\");\n         } else {\n           addExpr(first, NodeUtil.precedence(type), context);\n         }\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1546, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 1332, 
          "faulty": "return n;", 
          "type": "Replace", 
          "seed": "return null;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 08:46:01.972601364 -0500\n+++ /tmp/Arja_Defects4J_Closure_129/patches_ulrg/Patch_835/patched/tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 08:59:36.872719568 -0500\n@@ -1329,7 +1329,7 @@\n     if (left.isArrayLit()) {\n       return tryFoldArrayAccess(n, left, right);\n     }\n-    return n;\n+    return null;\n   }\n \n   /**\n\n\n--- /tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:46:01.984601380 -0500\n+++ /tmp/Arja_Defects4J_Closure_129/patches_ulrg/Patch_835/patched/tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:59:36.872719568 -0500\n@@ -1543,7 +1543,7 @@\n       }\n     } else if (type == Token.CALL) {\n       if (this.getBooleanProp(FREE_CALL) != node.getBooleanProp(FREE_CALL)) {\n-        return false;\n+        return true;\n       }\n     }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1546, 
          "faulty": "return false;", 
          "type": "Delete", 
          "seed": "return this.getType() == Token.BLOCK;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 1325, 
          "faulty": "if (left.isObjectLit()) {\n  return tryFoldObjectPropAccess(n,left,right);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 08:46:01.972601364 -0500\n+++ /tmp/Arja_Defects4J_Closure_129/patches_ulrg/Patch_1345/patched/tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 09:04:37.648299034 -0500\n@@ -1322,10 +1322,6 @@\n   private Node tryFoldGetElem(Node n, Node left, Node right) {\n     Preconditions.checkArgument(n.isGetElem());\n \n-    if (left.isObjectLit()) {\n-      return tryFoldObjectPropAccess(n, left, right);\n-    }\n-\n     if (left.isArrayLit()) {\n       return tryFoldArrayAccess(n, left, right);\n     }\n\n\n--- /tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:46:01.984601380 -0500\n+++ /tmp/Arja_Defects4J_Closure_129/patches_ulrg/Patch_1345/patched/tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-01 09:04:37.648299034 -0500\n@@ -1543,7 +1543,6 @@\n       }\n     } else if (type == Token.CALL) {\n       if (this.getBooleanProp(FREE_CALL) != node.getBooleanProp(FREE_CALL)) {\n-        return false;\n       }\n     }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1546, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/CodeGenerator.java", 
          "line": 530, 
          "faulty": "add(\"(0,\");", 
          "type": "Delete", 
          "seed": "break;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:46:01.984601380 -0500\n+++ /tmp/Arja_Defects4J_Closure_129/patches_ulrg/Patch_581/patched/tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:57:05.896777592 -0500\n@@ -1543,7 +1543,7 @@\n       }\n     } else if (type == Token.CALL) {\n       if (this.getBooleanProp(FREE_CALL) != node.getBooleanProp(FREE_CALL)) {\n-        return false;\n+        return true;\n       }\n     }\n \n\n\n--- /tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/jscomp/CodeGenerator.java\t2018-12-01 08:46:01.956601345 -0500\n+++ /tmp/Arja_Defects4J_Closure_129/patches_ulrg/Patch_581/patched/tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/jscomp/CodeGenerator.java\t2018-12-01 08:57:05.900777588 -0500\n@@ -527,7 +527,6 @@\n         // that must be preserved.\n         if (isIndirectEval(first)\n             || n.getBooleanProp(Node.FREE_CALL) && NodeUtil.isGet(first)) {\n-          add(\"(0,\");\n           addExpr(first, NodeUtil.precedence(Token.COMMA), Context.OTHER);\n           add(\")\");\n         } else {\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1546, 
          "faulty": "return false;", 
          "type": "Delete", 
          "seed": "return this.getType() == Token.BLOCK;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/CodeGenerator.java", 
          "line": 530, 
          "faulty": "add(\"(0,\");", 
          "type": "Delete", 
          "seed": "break;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:46:01.984601380 -0500\n+++ /tmp/Arja_Defects4J_Closure_129/patches_ulrg/Patch_345/patched/tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:54:51.536978608 -0500\n@@ -1543,7 +1543,6 @@\n       }\n     } else if (type == Token.CALL) {\n       if (this.getBooleanProp(FREE_CALL) != node.getBooleanProp(FREE_CALL)) {\n-        return false;\n       }\n     }\n \n\n\n--- /tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/jscomp/CodeGenerator.java\t2018-12-01 08:46:01.956601345 -0500\n+++ /tmp/Arja_Defects4J_Closure_129/patches_ulrg/Patch_345/patched/tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/jscomp/CodeGenerator.java\t2018-12-01 08:54:51.540978602 -0500\n@@ -527,7 +527,6 @@\n         // that must be preserved.\n         if (isIndirectEval(first)\n             || n.getBooleanProp(Node.FREE_CALL) && NodeUtil.isGet(first)) {\n-          add(\"(0,\");\n           addExpr(first, NodeUtil.precedence(Token.COMMA), Context.OTHER);\n           add(\")\");\n         } else {\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1444, 
          "faulty": "return new NodeMismatch(this,node2);", 
          "type": "InsertBefore", 
          "seed": "this.sourcePosition=sourcePosition;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1546, 
          "faulty": "return false;", 
          "type": "Delete", 
          "seed": "return this.getType() == Token.BLOCK;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:46:01.984601380 -0500\n+++ /tmp/Arja_Defects4J_Closure_129/patches_ulrg/Patch_720/patched/tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:58:29.236728960 -0500\n@@ -1441,7 +1441,8 @@\n    */\n   NodeMismatch checkTreeEqualsImpl(Node node2) {\n     if (!isEquivalentTo(node2, false, false, false)) {\n-      return new NodeMismatch(this, node2);\n+      this.sourcePosition = sourcePosition;\n+\treturn new NodeMismatch(this, node2);\n     }\n \n     NodeMismatch res = null;\n@@ -1543,7 +1544,6 @@\n       }\n     } else if (type == Token.CALL) {\n       if (this.getBooleanProp(FREE_CALL) != node.getBooleanProp(FREE_CALL)) {\n-        return false;\n       }\n     }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1546, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 1323, 
          "faulty": "Preconditions.checkArgument(n.isGetElem());", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 08:46:01.972601364 -0500\n+++ /tmp/Arja_Defects4J_Closure_129/patches_ulrg/Patch_1255/patched/tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 09:03:46.020344911 -0500\n@@ -1320,8 +1320,6 @@\n    * Try to fold array-element. e.g [1, 2, 3][10];\n    */\n   private Node tryFoldGetElem(Node n, Node left, Node right) {\n-    Preconditions.checkArgument(n.isGetElem());\n-\n     if (left.isObjectLit()) {\n       return tryFoldObjectPropAccess(n, left, right);\n     }\n\n\n--- /tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:46:01.984601380 -0500\n+++ /tmp/Arja_Defects4J_Closure_129/patches_ulrg/Patch_1255/patched/tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-01 09:03:46.024344907 -0500\n@@ -1543,7 +1543,7 @@\n       }\n     } else if (type == Token.CALL) {\n       if (this.getBooleanProp(FREE_CALL) != node.getBooleanProp(FREE_CALL)) {\n-        return false;\n+        return true;\n       }\n     }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1546, 
          "faulty": "return false;", 
          "type": "Delete", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 1323, 
          "faulty": "Preconditions.checkArgument(n.isGetElem());", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 08:46:01.972601364 -0500\n+++ /tmp/Arja_Defects4J_Closure_129/patches_ulrg/Patch_789/patched/tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 08:59:10.764720496 -0500\n@@ -1320,8 +1320,6 @@\n    * Try to fold array-element. e.g [1, 2, 3][10];\n    */\n   private Node tryFoldGetElem(Node n, Node left, Node right) {\n-    Preconditions.checkArgument(n.isGetElem());\n-\n     if (left.isObjectLit()) {\n       return tryFoldObjectPropAccess(n, left, right);\n     }\n\n\n--- /tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:46:01.984601380 -0500\n+++ /tmp/Arja_Defects4J_Closure_129/patches_ulrg/Patch_789/patched/tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:59:10.768720495 -0500\n@@ -1543,7 +1543,6 @@\n       }\n     } else if (type == Token.CALL) {\n       if (this.getBooleanProp(FREE_CALL) != node.getBooleanProp(FREE_CALL)) {\n-        return false;\n       }\n     }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1428, 
          "faulty": "return \"Node tree inequality:\" + \"\\nTree1:\\n\" + toStringTree() + \"\\n\\nTree2:\\n\"+ node2.toStringTree()+ \"\\n\\nSubtree1: \"+ diff.nodeA.toStringTree()+ \"\\n\\nSubtree2: \"+ diff.nodeB.toStringTree();", 
          "type": "InsertBefore", 
          "seed": "sourcePosition=-1;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1546, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "this.sourcePosition=sourcePosition;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:46:01.984601380 -0500\n+++ /tmp/Arja_Defects4J_Closure_129/patches_ulrg/Patch_903/patched/tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-01 09:00:16.180723735 -0500\n@@ -1425,7 +1425,8 @@\n   public String checkTreeEquals(Node node2) {\n       NodeMismatch diff = checkTreeEqualsImpl(node2);\n       if (diff != null) {\n-        return \"Node tree inequality:\" +\n+        sourcePosition = -1;\n+\t\treturn \"Node tree inequality:\" +\n             \"\\nTree1:\\n\" + toStringTree() +\n             \"\\n\\nTree2:\\n\" + node2.toStringTree() +\n             \"\\n\\nSubtree1: \" + diff.nodeA.toStringTree() +\n@@ -1543,7 +1544,7 @@\n       }\n     } else if (type == Token.CALL) {\n       if (this.getBooleanProp(FREE_CALL) != node.getBooleanProp(FREE_CALL)) {\n-        return false;\n+        this.sourcePosition = sourcePosition;\n       }\n     }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 132, 
          "faulty": "return \"free_call\";", 
          "type": "Replace", 
          "seed": "return \"ADD\";"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1546, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:46:01.984601380 -0500\n+++ /tmp/Arja_Defects4J_Closure_129/patches_ulrg/Patch_648/patched/tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:57:46.904747791 -0500\n@@ -129,7 +129,7 @@\n         case IS_DISPATCHER:      return \"is_dispatcher\";\n         case DIRECTIVES:         return \"directives\";\n         case DIRECT_EVAL:        return \"direct_eval\";\n-        case FREE_CALL:          return \"free_call\";\n+        case FREE_CALL:          return \"ADD\";\n         case STATIC_SOURCE_FILE:    return \"source_file\";\n         case INPUT_ID:  return \"input_id\";\n         case LENGTH:    return \"length\";\n@@ -1543,7 +1543,7 @@\n       }\n     } else if (type == Token.CALL) {\n       if (this.getBooleanProp(FREE_CALL) != node.getBooleanProp(FREE_CALL)) {\n-        return false;\n+        return true;\n       }\n     }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1546, 
          "faulty": "return false;", 
          "type": "Delete", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 1329, 
          "faulty": "if (left.isArrayLit()) {\n  return tryFoldArrayAccess(n,left,right);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 08:46:01.972601364 -0500\n+++ /tmp/Arja_Defects4J_Closure_129/patches_ulrg/Patch_526/patched/tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 08:56:34.832808954 -0500\n@@ -1326,9 +1326,6 @@\n       return tryFoldObjectPropAccess(n, left, right);\n     }\n \n-    if (left.isArrayLit()) {\n-      return tryFoldArrayAccess(n, left, right);\n-    }\n     return n;\n   }\n \n\n\n--- /tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:46:01.984601380 -0500\n+++ /tmp/Arja_Defects4J_Closure_129/patches_ulrg/Patch_526/patched/tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:56:34.836808950 -0500\n@@ -1543,7 +1543,6 @@\n       }\n     } else if (type == Token.CALL) {\n       if (this.getBooleanProp(FREE_CALL) != node.getBooleanProp(FREE_CALL)) {\n-        return false;\n       }\n     }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1546, 
          "faulty": "return false;", 
          "type": "Delete", 
          "seed": "this.sourcePosition=sourcePosition;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 1325, 
          "faulty": "if (left.isObjectLit()) {\n  return tryFoldObjectPropAccess(n,left,right);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 08:46:01.972601364 -0500\n+++ /tmp/Arja_Defects4J_Closure_129/patches_ulrg/Patch_116/patched/tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 08:52:42.813021951 -0500\n@@ -1322,10 +1322,6 @@\n   private Node tryFoldGetElem(Node n, Node left, Node right) {\n     Preconditions.checkArgument(n.isGetElem());\n \n-    if (left.isObjectLit()) {\n-      return tryFoldObjectPropAccess(n, left, right);\n-    }\n-\n     if (left.isArrayLit()) {\n       return tryFoldArrayAccess(n, left, right);\n     }\n\n\n--- /tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:46:01.984601380 -0500\n+++ /tmp/Arja_Defects4J_Closure_129/patches_ulrg/Patch_116/patched/tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:52:42.813021951 -0500\n@@ -1543,7 +1543,6 @@\n       }\n     } else if (type == Token.CALL) {\n       if (this.getBooleanProp(FREE_CALL) != node.getBooleanProp(FREE_CALL)) {\n-        return false;\n       }\n     }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1546, 
          "faulty": "return false;", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 1323, 
          "faulty": "Preconditions.checkArgument(n.isGetElem());", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 08:46:01.972601364 -0500\n+++ /tmp/Arja_Defects4J_Closure_129/patches_ulrg/Patch_456/patched/tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 08:55:53.160864826 -0500\n@@ -1320,8 +1320,6 @@\n    * Try to fold array-element. e.g [1, 2, 3][10];\n    */\n   private Node tryFoldGetElem(Node n, Node left, Node right) {\n-    Preconditions.checkArgument(n.isGetElem());\n-\n     if (left.isObjectLit()) {\n       return tryFoldObjectPropAccess(n, left, right);\n     }\n\n\n--- /tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:46:01.984601380 -0500\n+++ /tmp/Arja_Defects4J_Closure_129/patches_ulrg/Patch_456/patched/tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:55:53.160864826 -0500\n@@ -1543,7 +1543,6 @@\n       }\n     } else if (type == Token.CALL) {\n       if (this.getBooleanProp(FREE_CALL) != node.getBooleanProp(FREE_CALL)) {\n-        return false;\n       }\n     }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1546, 
          "faulty": "return false;", 
          "type": "Delete", 
          "seed": "this.sourcePosition=sourcePosition;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 1323, 
          "faulty": "Preconditions.checkArgument(n.isGetElem());", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 08:46:01.972601364 -0500\n+++ /tmp/Arja_Defects4J_Closure_129/patches_ulrg/Patch_1164/patched/tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 09:02:52.620413173 -0500\n@@ -1320,8 +1320,6 @@\n    * Try to fold array-element. e.g [1, 2, 3][10];\n    */\n   private Node tryFoldGetElem(Node n, Node left, Node right) {\n-    Preconditions.checkArgument(n.isGetElem());\n-\n     if (left.isObjectLit()) {\n       return tryFoldObjectPropAccess(n, left, right);\n     }\n\n\n--- /tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:46:01.984601380 -0500\n+++ /tmp/Arja_Defects4J_Closure_129/patches_ulrg/Patch_1164/patched/tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-01 09:02:52.624413167 -0500\n@@ -1543,7 +1543,6 @@\n       }\n     } else if (type == Token.CALL) {\n       if (this.getBooleanProp(FREE_CALL) != node.getBooleanProp(FREE_CALL)) {\n-        return false;\n       }\n     }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1546, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "this.sourcePosition=sourcePosition;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 122, 
          "faulty": "return tryFoldGetElem(subtree,left,right);", 
          "type": "Replace", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 1323, 
          "faulty": "Preconditions.checkArgument(n.isGetElem());", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 08:46:01.972601364 -0500\n+++ /tmp/Arja_Defects4J_Closure_129/patches_ulrg/Patch_416/patched/tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 08:55:30.040903550 -0500\n@@ -119,7 +119,7 @@\n         return tryFoldGetProp(subtree, left, right);\n \n       case Token.GETELEM:\n-        return tryFoldGetElem(subtree, left, right);\n+        return null;\n \n       case Token.INSTANCEOF:\n         return tryFoldInstanceof(subtree, left, right);\n@@ -1320,8 +1320,6 @@\n    * Try to fold array-element. e.g [1, 2, 3][10];\n    */\n   private Node tryFoldGetElem(Node n, Node left, Node right) {\n-    Preconditions.checkArgument(n.isGetElem());\n-\n     if (left.isObjectLit()) {\n       return tryFoldObjectPropAccess(n, left, right);\n     }\n\n\n--- /tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:46:01.984601380 -0500\n+++ /tmp/Arja_Defects4J_Closure_129/patches_ulrg/Patch_416/patched/tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:55:30.044903543 -0500\n@@ -1543,7 +1543,7 @@\n       }\n     } else if (type == Token.CALL) {\n       if (this.getBooleanProp(FREE_CALL) != node.getBooleanProp(FREE_CALL)) {\n-        return false;\n+        this.sourcePosition = sourcePosition;\n       }\n     }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1457, 
          "faulty": "return res;", 
          "type": "InsertBefore", 
          "seed": "this.sourcePosition=sourcePosition;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1546, 
          "faulty": "return false;", 
          "type": "Delete", 
          "seed": "this.sourcePosition=sourcePosition;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 1323, 
          "faulty": "Preconditions.checkArgument(n.isGetElem());", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 08:46:01.972601364 -0500\n+++ /tmp/Arja_Defects4J_Closure_129/patches_ulrg/Patch_272/patched/tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 08:54:07.285055939 -0500\n@@ -1320,8 +1320,6 @@\n    * Try to fold array-element. e.g [1, 2, 3][10];\n    */\n   private Node tryFoldGetElem(Node n, Node left, Node right) {\n-    Preconditions.checkArgument(n.isGetElem());\n-\n     if (left.isObjectLit()) {\n       return tryFoldObjectPropAccess(n, left, right);\n     }\n\n\n--- /tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:46:01.984601380 -0500\n+++ /tmp/Arja_Defects4J_Closure_129/patches_ulrg/Patch_272/patched/tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:54:07.285055939 -0500\n@@ -1454,7 +1454,8 @@\n       }\n       res = n.checkTreeEqualsImpl(n2);\n       if (res != null) {\n-        return res;\n+        this.sourcePosition = sourcePosition;\n+\t\treturn res;\n       }\n     }\n     return res;\n@@ -1543,7 +1544,6 @@\n       }\n     } else if (type == Token.CALL) {\n       if (this.getBooleanProp(FREE_CALL) != node.getBooleanProp(FREE_CALL)) {\n-        return false;\n       }\n     }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1546, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 1329, 
          "faulty": "if (left.isArrayLit()) {\n  return tryFoldArrayAccess(n,left,right);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 1332, 
          "faulty": "return n;", 
          "type": "Replace", 
          "seed": "return null;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 08:46:01.972601364 -0500\n+++ /tmp/Arja_Defects4J_Closure_129/patches_ulrg/Patch_225/patched/tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 08:53:40.621082499 -0500\n@@ -1326,10 +1326,7 @@\n       return tryFoldObjectPropAccess(n, left, right);\n     }\n \n-    if (left.isArrayLit()) {\n-      return tryFoldArrayAccess(n, left, right);\n-    }\n-    return n;\n+    return null;\n   }\n \n   /**\n\n\n--- /tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:46:01.984601380 -0500\n+++ /tmp/Arja_Defects4J_Closure_129/patches_ulrg/Patch_225/patched/tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:53:40.621082499 -0500\n@@ -1543,7 +1543,7 @@\n       }\n     } else if (type == Token.CALL) {\n       if (this.getBooleanProp(FREE_CALL) != node.getBooleanProp(FREE_CALL)) {\n-        return false;\n+        return true;\n       }\n     }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1546, 
          "faulty": "return false;", 
          "type": "Delete", 
          "seed": "this.sourcePosition=sourcePosition;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 1332, 
          "faulty": "return n;", 
          "type": "Replace", 
          "seed": "return null;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 08:46:01.972601364 -0500\n+++ /tmp/Arja_Defects4J_Closure_129/patches_ulrg/Patch_473/patched/tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 08:56:03.796848939 -0500\n@@ -1329,7 +1329,7 @@\n     if (left.isArrayLit()) {\n       return tryFoldArrayAccess(n, left, right);\n     }\n-    return n;\n+    return null;\n   }\n \n   /**\n\n\n--- /tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:46:01.984601380 -0500\n+++ /tmp/Arja_Defects4J_Closure_129/patches_ulrg/Patch_473/patched/tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:56:03.796848939 -0500\n@@ -1543,7 +1543,6 @@\n       }\n     } else if (type == Token.CALL) {\n       if (this.getBooleanProp(FREE_CALL) != node.getBooleanProp(FREE_CALL)) {\n-        return false;\n       }\n     }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1546, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 1325, 
          "faulty": "if (left.isObjectLit()) {\n  return tryFoldObjectPropAccess(n,left,right);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 08:46:01.972601364 -0500\n+++ /tmp/Arja_Defects4J_Closure_129/patches_ulrg/Patch_529/patched/tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 08:56:36.080807534 -0500\n@@ -1322,10 +1322,6 @@\n   private Node tryFoldGetElem(Node n, Node left, Node right) {\n     Preconditions.checkArgument(n.isGetElem());\n \n-    if (left.isObjectLit()) {\n-      return tryFoldObjectPropAccess(n, left, right);\n-    }\n-\n     if (left.isArrayLit()) {\n       return tryFoldArrayAccess(n, left, right);\n     }\n\n\n--- /tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:46:01.984601380 -0500\n+++ /tmp/Arja_Defects4J_Closure_129/patches_ulrg/Patch_529/patched/tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:56:36.080807534 -0500\n@@ -1543,7 +1543,7 @@\n       }\n     } else if (type == Token.CALL) {\n       if (this.getBooleanProp(FREE_CALL) != node.getBooleanProp(FREE_CALL)) {\n-        return false;\n+        return true;\n       }\n     }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1546, 
          "faulty": "return false;", 
          "type": "Delete", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 1323, 
          "faulty": "Preconditions.checkArgument(n.isGetElem());", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 08:46:01.972601364 -0500\n+++ /tmp/Arja_Defects4J_Closure_129/patches_ulrg/Patch_1272/patched/tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 09:03:55.904334723 -0500\n@@ -1320,8 +1320,6 @@\n    * Try to fold array-element. e.g [1, 2, 3][10];\n    */\n   private Node tryFoldGetElem(Node n, Node left, Node right) {\n-    Preconditions.checkArgument(n.isGetElem());\n-\n     if (left.isObjectLit()) {\n       return tryFoldObjectPropAccess(n, left, right);\n     }\n\n\n--- /tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:46:01.984601380 -0500\n+++ /tmp/Arja_Defects4J_Closure_129/patches_ulrg/Patch_1272/patched/tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-01 09:03:55.908334719 -0500\n@@ -1543,7 +1543,6 @@\n       }\n     } else if (type == Token.CALL) {\n       if (this.getBooleanProp(FREE_CALL) != node.getBooleanProp(FREE_CALL)) {\n-        return false;\n       }\n     }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1546, 
          "faulty": "return false;", 
          "type": "Delete", 
          "seed": "return this.getType() == Token.BLOCK;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 1323, 
          "faulty": "Preconditions.checkArgument(n.isGetElem());", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 08:46:01.972601364 -0500\n+++ /tmp/Arja_Defects4J_Closure_129/patches_ulrg/Patch_1201/patched/tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 09:03:14.436382445 -0500\n@@ -1320,8 +1320,6 @@\n    * Try to fold array-element. e.g [1, 2, 3][10];\n    */\n   private Node tryFoldGetElem(Node n, Node left, Node right) {\n-    Preconditions.checkArgument(n.isGetElem());\n-\n     if (left.isObjectLit()) {\n       return tryFoldObjectPropAccess(n, left, right);\n     }\n\n\n--- /tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:46:01.984601380 -0500\n+++ /tmp/Arja_Defects4J_Closure_129/patches_ulrg/Patch_1201/patched/tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-01 09:03:14.440382439 -0500\n@@ -1543,7 +1543,6 @@\n       }\n     } else if (type == Token.CALL) {\n       if (this.getBooleanProp(FREE_CALL) != node.getBooleanProp(FREE_CALL)) {\n-        return false;\n       }\n     }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1546, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 1323, 
          "faulty": "Preconditions.checkArgument(n.isGetElem());", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 08:46:01.972601364 -0500\n+++ /tmp/Arja_Defects4J_Closure_129/patches_ulrg/Patch_1287/patched/tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 09:04:03.800327082 -0500\n@@ -1320,8 +1320,6 @@\n    * Try to fold array-element. e.g [1, 2, 3][10];\n    */\n   private Node tryFoldGetElem(Node n, Node left, Node right) {\n-    Preconditions.checkArgument(n.isGetElem());\n-\n     if (left.isObjectLit()) {\n       return tryFoldObjectPropAccess(n, left, right);\n     }\n\n\n--- /tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:46:01.984601380 -0500\n+++ /tmp/Arja_Defects4J_Closure_129/patches_ulrg/Patch_1287/patched/tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-01 09:04:03.804327079 -0500\n@@ -1543,7 +1543,7 @@\n       }\n     } else if (type == Token.CALL) {\n       if (this.getBooleanProp(FREE_CALL) != node.getBooleanProp(FREE_CALL)) {\n-        return false;\n+        return true;\n       }\n     }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1546, 
          "faulty": "return false;", 
          "type": "Delete", 
          "seed": "this.sourcePosition=sourcePosition;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 1329, 
          "faulty": "if (left.isArrayLit()) {\n  return tryFoldArrayAccess(n,left,right);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 08:46:01.972601364 -0500\n+++ /tmp/Arja_Defects4J_Closure_129/patches_ulrg/Patch_1413/patched/tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 09:05:19.652273746 -0500\n@@ -1326,9 +1326,6 @@\n       return tryFoldObjectPropAccess(n, left, right);\n     }\n \n-    if (left.isArrayLit()) {\n-      return tryFoldArrayAccess(n, left, right);\n-    }\n     return n;\n   }\n \n\n\n--- /tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:46:01.984601380 -0500\n+++ /tmp/Arja_Defects4J_Closure_129/patches_ulrg/Patch_1413/patched/tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-01 09:05:19.656273744 -0500\n@@ -1543,7 +1543,6 @@\n       }\n     } else if (type == Token.CALL) {\n       if (this.getBooleanProp(FREE_CALL) != node.getBooleanProp(FREE_CALL)) {\n-        return false;\n       }\n     }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1546, 
          "faulty": "return false;", 
          "type": "Delete", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/ConvertToDottedProperties.java", 
          "line": 64, 
          "faulty": "compiler.reportCodeChange();", 
          "type": "Delete", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 1329, 
          "faulty": "if (left.isArrayLit()) {\n  return tryFoldArrayAccess(n,left,right);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 08:46:01.972601364 -0500\n+++ /tmp/Arja_Defects4J_Closure_129/patches_ulrg/Patch_56/patched/tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 08:52:10.488990465 -0500\n@@ -1326,9 +1326,6 @@\n       return tryFoldObjectPropAccess(n, left, right);\n     }\n \n-    if (left.isArrayLit()) {\n-      return tryFoldArrayAccess(n, left, right);\n-    }\n     return n;\n   }\n \n\n\n--- /tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:46:01.984601380 -0500\n+++ /tmp/Arja_Defects4J_Closure_129/patches_ulrg/Patch_56/patched/tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:52:10.492990469 -0500\n@@ -1543,7 +1543,6 @@\n       }\n     } else if (type == Token.CALL) {\n       if (this.getBooleanProp(FREE_CALL) != node.getBooleanProp(FREE_CALL)) {\n-        return false;\n       }\n     }\n \n\n\n--- /tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/jscomp/ConvertToDottedProperties.java\t2018-12-01 08:46:01.752601087 -0500\n+++ /tmp/Arja_Defects4J_Closure_129/patches_ulrg/Patch_56/patched/tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/jscomp/ConvertToDottedProperties.java\t2018-12-01 08:52:10.492990469 -0500\n@@ -61,7 +61,6 @@\n           n.removeChild(left);\n           n.removeChild(right);\n           parent.replaceChild(n, IR.getprop(left, right));\n-          compiler.reportCodeChange();\n         }\n         break;\n     }\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1428, 
          "faulty": "return \"Node tree inequality:\" + \"\\nTree1:\\n\" + toStringTree() + \"\\n\\nTree2:\\n\"+ node2.toStringTree()+ \"\\n\\nSubtree1: \"+ diff.nodeA.toStringTree()+ \"\\n\\nSubtree2: \"+ diff.nodeB.toStringTree();", 
          "type": "Replace", 
          "seed": "return \"SCRIPT\";"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1546, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/CodeGenerator.java", 
          "line": 530, 
          "faulty": "add(\"(0,\");", 
          "type": "Delete", 
          "seed": "break;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:46:01.984601380 -0500\n+++ /tmp/Arja_Defects4J_Closure_129/patches_ulrg/Patch_946/patched/tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-01 09:00:41.740703213 -0500\n@@ -1425,11 +1425,7 @@\n   public String checkTreeEquals(Node node2) {\n       NodeMismatch diff = checkTreeEqualsImpl(node2);\n       if (diff != null) {\n-        return \"Node tree inequality:\" +\n-            \"\\nTree1:\\n\" + toStringTree() +\n-            \"\\n\\nTree2:\\n\" + node2.toStringTree() +\n-            \"\\n\\nSubtree1: \" + diff.nodeA.toStringTree() +\n-            \"\\n\\nSubtree2: \" + diff.nodeB.toStringTree();\n+        return \"SCRIPT\";\n       }\n       return null;\n   }\n@@ -1543,7 +1539,7 @@\n       }\n     } else if (type == Token.CALL) {\n       if (this.getBooleanProp(FREE_CALL) != node.getBooleanProp(FREE_CALL)) {\n-        return false;\n+        return true;\n       }\n     }\n \n\n\n--- /tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/jscomp/CodeGenerator.java\t2018-12-01 08:46:01.956601345 -0500\n+++ /tmp/Arja_Defects4J_Closure_129/patches_ulrg/Patch_946/patched/tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/jscomp/CodeGenerator.java\t2018-12-01 09:00:41.740703213 -0500\n@@ -527,7 +527,6 @@\n         // that must be preserved.\n         if (isIndirectEval(first)\n             || n.getBooleanProp(Node.FREE_CALL) && NodeUtil.isGet(first)) {\n-          add(\"(0,\");\n           addExpr(first, NodeUtil.precedence(Token.COMMA), Context.OTHER);\n           add(\")\");\n         } else {\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1546, 
          "faulty": "return false;", 
          "type": "Delete", 
          "seed": "if (type == Token.STRING_KEY) {\n  int quoted1=this.getIntProp(QUOTED_PROP);\n  int quoted2=node.getIntProp(QUOTED_PROP);\n  if (quoted1 != quoted2) {\n    return false;\n  }\n}"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 1329, 
          "faulty": "if (left.isArrayLit()) {\n  return tryFoldArrayAccess(n,left,right);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 08:46:01.972601364 -0500\n+++ /tmp/Arja_Defects4J_Closure_129/patches_ulrg/Patch_120/patched/tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 08:52:44.969024117 -0500\n@@ -1326,9 +1326,6 @@\n       return tryFoldObjectPropAccess(n, left, right);\n     }\n \n-    if (left.isArrayLit()) {\n-      return tryFoldArrayAccess(n, left, right);\n-    }\n     return n;\n   }\n \n\n\n--- /tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:46:01.984601380 -0500\n+++ /tmp/Arja_Defects4J_Closure_129/patches_ulrg/Patch_120/patched/tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:52:44.969024117 -0500\n@@ -1543,7 +1543,6 @@\n       }\n     } else if (type == Token.CALL) {\n       if (this.getBooleanProp(FREE_CALL) != node.getBooleanProp(FREE_CALL)) {\n-        return false;\n       }\n     }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1546, 
          "faulty": "return false;", 
          "type": "Delete", 
          "seed": "if (type == Token.STRING_KEY) {\n  int quoted1=this.getIntProp(QUOTED_PROP);\n  int quoted2=node.getIntProp(QUOTED_PROP);\n  if (quoted1 != quoted2) {\n    return false;\n  }\n}"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/CodeGenerator.java", 
          "line": 532, 
          "faulty": "add(\")\");", 
          "type": "Delete", 
          "seed": "break;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:46:01.984601380 -0500\n+++ /tmp/Arja_Defects4J_Closure_129/patches_ulrg/Patch_48/patched/tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:52:05.532985807 -0500\n@@ -1543,7 +1543,6 @@\n       }\n     } else if (type == Token.CALL) {\n       if (this.getBooleanProp(FREE_CALL) != node.getBooleanProp(FREE_CALL)) {\n-        return false;\n       }\n     }\n \n\n\n--- /tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/jscomp/CodeGenerator.java\t2018-12-01 08:46:01.956601345 -0500\n+++ /tmp/Arja_Defects4J_Closure_129/patches_ulrg/Patch_48/patched/tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/jscomp/CodeGenerator.java\t2018-12-01 08:52:05.532985807 -0500\n@@ -529,7 +529,6 @@\n             || n.getBooleanProp(Node.FREE_CALL) && NodeUtil.isGet(first)) {\n           add(\"(0,\");\n           addExpr(first, NodeUtil.precedence(Token.COMMA), Context.OTHER);\n-          add(\")\");\n         } else {\n           addExpr(first, NodeUtil.precedence(type), context);\n         }\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1546, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "this.sourcePosition=sourcePosition;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/CodeGenerator.java", 
          "line": 532, 
          "faulty": "add(\")\");", 
          "type": "Replace", 
          "seed": "break;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:46:01.984601380 -0500\n+++ /tmp/Arja_Defects4J_Closure_129/patches_ulrg/Patch_281/patched/tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:54:12.625045382 -0500\n@@ -1543,7 +1543,7 @@\n       }\n     } else if (type == Token.CALL) {\n       if (this.getBooleanProp(FREE_CALL) != node.getBooleanProp(FREE_CALL)) {\n-        return false;\n+        this.sourcePosition = sourcePosition;\n       }\n     }\n \n\n\n--- /tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/jscomp/CodeGenerator.java\t2018-12-01 08:46:01.956601345 -0500\n+++ /tmp/Arja_Defects4J_Closure_129/patches_ulrg/Patch_281/patched/tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/jscomp/CodeGenerator.java\t2018-12-01 08:54:12.625045382 -0500\n@@ -529,7 +529,7 @@\n             || n.getBooleanProp(Node.FREE_CALL) && NodeUtil.isGet(first)) {\n           add(\"(0,\");\n           addExpr(first, NodeUtil.precedence(Token.COMMA), Context.OTHER);\n-          add(\")\");\n+          break;\n         } else {\n           addExpr(first, NodeUtil.precedence(type), context);\n         }\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1546, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 1329, 
          "faulty": "if (left.isArrayLit()) {\n  return tryFoldArrayAccess(n,left,right);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 08:46:01.972601364 -0500\n+++ /tmp/Arja_Defects4J_Closure_129/patches_ulrg/Patch_1299/patched/tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 09:04:10.224321185 -0500\n@@ -1326,9 +1326,6 @@\n       return tryFoldObjectPropAccess(n, left, right);\n     }\n \n-    if (left.isArrayLit()) {\n-      return tryFoldArrayAccess(n, left, right);\n-    }\n     return n;\n   }\n \n\n\n--- /tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:46:01.984601380 -0500\n+++ /tmp/Arja_Defects4J_Closure_129/patches_ulrg/Patch_1299/patched/tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-01 09:04:10.228321181 -0500\n@@ -1543,7 +1543,7 @@\n       }\n     } else if (type == Token.CALL) {\n       if (this.getBooleanProp(FREE_CALL) != node.getBooleanProp(FREE_CALL)) {\n-        return false;\n+        return true;\n       }\n     }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 132, 
          "faulty": "return \"free_call\";", 
          "type": "Replace", 
          "seed": "return \"RETURN\";"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1546, 
          "faulty": "return false;", 
          "type": "Delete", 
          "seed": "return true;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:46:01.984601380 -0500\n+++ /tmp/Arja_Defects4J_Closure_129/patches_ulrg/Patch_40/patched/tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:52:01.328981894 -0500\n@@ -129,7 +129,7 @@\n         case IS_DISPATCHER:      return \"is_dispatcher\";\n         case DIRECTIVES:         return \"directives\";\n         case DIRECT_EVAL:        return \"direct_eval\";\n-        case FREE_CALL:          return \"free_call\";\n+        case FREE_CALL:          return \"RETURN\";\n         case STATIC_SOURCE_FILE:    return \"source_file\";\n         case INPUT_ID:  return \"input_id\";\n         case LENGTH:    return \"length\";\n@@ -1543,7 +1543,6 @@\n       }\n     } else if (type == Token.CALL) {\n       if (this.getBooleanProp(FREE_CALL) != node.getBooleanProp(FREE_CALL)) {\n-        return false;\n       }\n     }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 132, 
          "faulty": "return \"free_call\";", 
          "type": "Replace", 
          "seed": "return \"RETURN\";"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1546, 
          "faulty": "return false;", 
          "type": "Delete", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 1329, 
          "faulty": "if (left.isArrayLit()) {\n  return tryFoldArrayAccess(n,left,right);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 08:46:01.972601364 -0500\n+++ /tmp/Arja_Defects4J_Closure_129/patches_ulrg/Patch_114/patched/tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 08:52:42.161021299 -0500\n@@ -1326,9 +1326,6 @@\n       return tryFoldObjectPropAccess(n, left, right);\n     }\n \n-    if (left.isArrayLit()) {\n-      return tryFoldArrayAccess(n, left, right);\n-    }\n     return n;\n   }\n \n\n\n--- /tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:46:01.984601380 -0500\n+++ /tmp/Arja_Defects4J_Closure_129/patches_ulrg/Patch_114/patched/tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:52:42.161021299 -0500\n@@ -129,7 +129,7 @@\n         case IS_DISPATCHER:      return \"is_dispatcher\";\n         case DIRECTIVES:         return \"directives\";\n         case DIRECT_EVAL:        return \"direct_eval\";\n-        case FREE_CALL:          return \"free_call\";\n+        case FREE_CALL:          return \"RETURN\";\n         case STATIC_SOURCE_FILE:    return \"source_file\";\n         case INPUT_ID:  return \"input_id\";\n         case LENGTH:    return \"length\";\n@@ -1543,7 +1543,6 @@\n       }\n     } else if (type == Token.CALL) {\n       if (this.getBooleanProp(FREE_CALL) != node.getBooleanProp(FREE_CALL)) {\n-        return false;\n       }\n     }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1546, 
          "faulty": "return false;", 
          "type": "Delete", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 1329, 
          "faulty": "if (left.isArrayLit()) {\n  return tryFoldArrayAccess(n,left,right);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 08:46:01.972601364 -0500\n+++ /tmp/Arja_Defects4J_Closure_129/patches_ulrg/Patch_81/patched/tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 08:52:23.569002981 -0500\n@@ -1326,9 +1326,6 @@\n       return tryFoldObjectPropAccess(n, left, right);\n     }\n \n-    if (left.isArrayLit()) {\n-      return tryFoldArrayAccess(n, left, right);\n-    }\n     return n;\n   }\n \n\n\n--- /tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:46:01.984601380 -0500\n+++ /tmp/Arja_Defects4J_Closure_129/patches_ulrg/Patch_81/patched/tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:52:23.573002984 -0500\n@@ -1543,7 +1543,6 @@\n       }\n     } else if (type == Token.CALL) {\n       if (this.getBooleanProp(FREE_CALL) != node.getBooleanProp(FREE_CALL)) {\n-        return false;\n       }\n     }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1546, 
          "faulty": "return false;", 
          "type": "Delete", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 1329, 
          "faulty": "if (left.isArrayLit()) {\n  return tryFoldArrayAccess(n,left,right);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 08:46:01.972601364 -0500\n+++ /tmp/Arja_Defects4J_Closure_129/patches_ulrg/Patch_44/patched/tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 08:52:03.500983911 -0500\n@@ -1326,9 +1326,6 @@\n       return tryFoldObjectPropAccess(n, left, right);\n     }\n \n-    if (left.isArrayLit()) {\n-      return tryFoldArrayAccess(n, left, right);\n-    }\n     return n;\n   }\n \n\n\n--- /tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:46:01.984601380 -0500\n+++ /tmp/Arja_Defects4J_Closure_129/patches_ulrg/Patch_44/patched/tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:52:03.500983911 -0500\n@@ -1543,7 +1543,6 @@\n       }\n     } else if (type == Token.CALL) {\n       if (this.getBooleanProp(FREE_CALL) != node.getBooleanProp(FREE_CALL)) {\n-        return false;\n       }\n     }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1546, 
          "faulty": "return false;", 
          "type": "Delete", 
          "seed": "return this.getType() == Token.BLOCK;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 1323, 
          "faulty": "Preconditions.checkArgument(n.isGetElem());", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 08:46:01.972601364 -0500\n+++ /tmp/Arja_Defects4J_Closure_129/patches_ulrg/Patch_1242/patched/tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 09:03:38.716352903 -0500\n@@ -1320,8 +1320,6 @@\n    * Try to fold array-element. e.g [1, 2, 3][10];\n    */\n   private Node tryFoldGetElem(Node n, Node left, Node right) {\n-    Preconditions.checkArgument(n.isGetElem());\n-\n     if (left.isObjectLit()) {\n       return tryFoldObjectPropAccess(n, left, right);\n     }\n\n\n--- /tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:46:01.984601380 -0500\n+++ /tmp/Arja_Defects4J_Closure_129/patches_ulrg/Patch_1242/patched/tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-01 09:03:38.720352899 -0500\n@@ -1543,7 +1543,6 @@\n       }\n     } else if (type == Token.CALL) {\n       if (this.getBooleanProp(FREE_CALL) != node.getBooleanProp(FREE_CALL)) {\n-        return false;\n       }\n     }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1546, 
          "faulty": "return false;", 
          "type": "Delete", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/CodeGenerator.java", 
          "line": 532, 
          "faulty": "add(\")\");", 
          "type": "Replace", 
          "seed": "break;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:46:01.984601380 -0500\n+++ /tmp/Arja_Defects4J_Closure_129/patches_ulrg/Patch_140/patched/tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:52:54.773034059 -0500\n@@ -1543,7 +1543,6 @@\n       }\n     } else if (type == Token.CALL) {\n       if (this.getBooleanProp(FREE_CALL) != node.getBooleanProp(FREE_CALL)) {\n-        return false;\n       }\n     }\n \n\n\n--- /tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/jscomp/CodeGenerator.java\t2018-12-01 08:46:01.956601345 -0500\n+++ /tmp/Arja_Defects4J_Closure_129/patches_ulrg/Patch_140/patched/tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/jscomp/CodeGenerator.java\t2018-12-01 08:52:54.773034059 -0500\n@@ -529,7 +529,7 @@\n             || n.getBooleanProp(Node.FREE_CALL) && NodeUtil.isGet(first)) {\n           add(\"(0,\");\n           addExpr(first, NodeUtil.precedence(Token.COMMA), Context.OTHER);\n-          add(\")\");\n+          break;\n         } else {\n           addExpr(first, NodeUtil.precedence(type), context);\n         }\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1546, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "this.sourcePosition=sourcePosition;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:46:01.984601380 -0500\n+++ /tmp/Arja_Defects4J_Closure_129/patches_ulrg/Patch_134/patched/tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:52:51.625030849 -0500\n@@ -1543,7 +1543,7 @@\n       }\n     } else if (type == Token.CALL) {\n       if (this.getBooleanProp(FREE_CALL) != node.getBooleanProp(FREE_CALL)) {\n-        return false;\n+        this.sourcePosition = sourcePosition;\n       }\n     }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1546, 
          "faulty": "return false;", 
          "type": "Delete", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 1325, 
          "faulty": "if (left.isObjectLit()) {\n  return tryFoldObjectPropAccess(n,left,right);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 08:46:01.972601364 -0500\n+++ /tmp/Arja_Defects4J_Closure_129/patches_ulrg/Patch_1090/patched/tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 09:02:08.636488693 -0500\n@@ -1322,10 +1322,6 @@\n   private Node tryFoldGetElem(Node n, Node left, Node right) {\n     Preconditions.checkArgument(n.isGetElem());\n \n-    if (left.isObjectLit()) {\n-      return tryFoldObjectPropAccess(n, left, right);\n-    }\n-\n     if (left.isArrayLit()) {\n       return tryFoldArrayAccess(n, left, right);\n     }\n\n\n--- /tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:46:01.984601380 -0500\n+++ /tmp/Arja_Defects4J_Closure_129/patches_ulrg/Patch_1090/patched/tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-01 09:02:08.636488693 -0500\n@@ -1543,7 +1543,6 @@\n       }\n     } else if (type == Token.CALL) {\n       if (this.getBooleanProp(FREE_CALL) != node.getBooleanProp(FREE_CALL)) {\n-        return false;\n       }\n     }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1546, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "sourcePosition=-1;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 1323, 
          "faulty": "Preconditions.checkArgument(n.isGetElem());", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 1329, 
          "faulty": "if (left.isArrayLit()) {\n  return tryFoldArrayAccess(n,left,right);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeReplaceKnownMethods.java", 
          "line": 403, 
          "faulty": "return n;", 
          "type": "Delete", 
          "seed": "return this;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 08:46:01.972601364 -0500\n+++ /tmp/Arja_Defects4J_Closure_129/patches_ulrg/Patch_570/patched/tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 08:56:59.288783590 -0500\n@@ -1320,15 +1320,10 @@\n    * Try to fold array-element. e.g [1, 2, 3][10];\n    */\n   private Node tryFoldGetElem(Node n, Node left, Node right) {\n-    Preconditions.checkArgument(n.isGetElem());\n-\n     if (left.isObjectLit()) {\n       return tryFoldObjectPropAccess(n, left, right);\n     }\n \n-    if (left.isArrayLit()) {\n-      return tryFoldArrayAccess(n, left, right);\n-    }\n     return n;\n   }\n \n\n\n--- /tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/jscomp/PeepholeReplaceKnownMethods.java\t2018-12-01 08:46:01.972601364 -0500\n+++ /tmp/Arja_Defects4J_Closure_129/patches_ulrg/Patch_570/patched/tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/jscomp/PeepholeReplaceKnownMethods.java\t2018-12-01 08:56:59.288783590 -0500\n@@ -400,7 +400,6 @@\n     Node right = callTarget.getNext();\n     if (right != null) {\n       if (right.getNext() != null || !NodeUtil.isImmutableValue(right)) {\n-        return n;\n       }\n     }\n \n\n\n--- /tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:46:01.984601380 -0500\n+++ /tmp/Arja_Defects4J_Closure_129/patches_ulrg/Patch_570/patched/tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:56:59.292783585 -0500\n@@ -1543,7 +1543,7 @@\n       }\n     } else if (type == Token.CALL) {\n       if (this.getBooleanProp(FREE_CALL) != node.getBooleanProp(FREE_CALL)) {\n-        return false;\n+        sourcePosition = -1;\n       }\n     }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1546, 
          "faulty": "return false;", 
          "type": "Delete", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/NodeUtil.java", 
          "line": 3165, 
          "faulty": "return isExpressionResultUsed(parent);", 
          "type": "Delete", 
          "seed": "return false;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/jscomp/NodeUtil.java\t2018-12-01 08:46:01.968601359 -0500\n+++ /tmp/Arja_Defects4J_Closure_129/patches_ulrg/Patch_1357/patched/tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/jscomp/NodeUtil.java\t2018-12-01 09:04:44.672294110 -0500\n@@ -3162,7 +3162,7 @@\n       case Token.EXPR_RESULT:\n         return false;\n       case Token.CAST:\n-        return isExpressionResultUsed(parent);\n+        ;\n       case Token.HOOK:\n       case Token.AND:\n       case Token.OR:\n\n\n--- /tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:46:01.984601380 -0500\n+++ /tmp/Arja_Defects4J_Closure_129/patches_ulrg/Patch_1357/patched/tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-01 09:04:44.676294108 -0500\n@@ -1543,7 +1543,6 @@\n       }\n     } else if (type == Token.CALL) {\n       if (this.getBooleanProp(FREE_CALL) != node.getBooleanProp(FREE_CALL)) {\n-        return false;\n       }\n     }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1428, 
          "faulty": "return \"Node tree inequality:\" + \"\\nTree1:\\n\" + toStringTree() + \"\\n\\nTree2:\\n\"+ node2.toStringTree()+ \"\\n\\nSubtree1: \"+ diff.nodeA.toStringTree()+ \"\\n\\nSubtree2: \"+ diff.nodeB.toStringTree();", 
          "type": "InsertBefore", 
          "seed": "sourcePosition=-1;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1546, 
          "faulty": "return false;", 
          "type": "Delete", 
          "seed": "this.sourcePosition=sourcePosition;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:46:01.984601380 -0500\n+++ /tmp/Arja_Defects4J_Closure_129/patches_ulrg/Patch_629/patched/tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:57:35.740754697 -0500\n@@ -1425,7 +1425,8 @@\n   public String checkTreeEquals(Node node2) {\n       NodeMismatch diff = checkTreeEqualsImpl(node2);\n       if (diff != null) {\n-        return \"Node tree inequality:\" +\n+        sourcePosition = -1;\n+\t\treturn \"Node tree inequality:\" +\n             \"\\nTree1:\\n\" + toStringTree() +\n             \"\\n\\nTree2:\\n\" + node2.toStringTree() +\n             \"\\n\\nSubtree1: \" + diff.nodeA.toStringTree() +\n@@ -1543,7 +1544,6 @@\n       }\n     } else if (type == Token.CALL) {\n       if (this.getBooleanProp(FREE_CALL) != node.getBooleanProp(FREE_CALL)) {\n-        return false;\n       }\n     }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 132, 
          "faulty": "return \"free_call\";", 
          "type": "Replace", 
          "seed": "return \"BLOCK\";"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1546, 
          "faulty": "return false;", 
          "type": "Delete", 
          "seed": "this.sourcePosition=sourcePosition;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 1323, 
          "faulty": "Preconditions.checkArgument(n.isGetElem());", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 08:46:01.972601364 -0500\n+++ /tmp/Arja_Defects4J_Closure_129/patches_ulrg/Patch_1278/patched/tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 09:03:59.280331403 -0500\n@@ -1320,8 +1320,6 @@\n    * Try to fold array-element. e.g [1, 2, 3][10];\n    */\n   private Node tryFoldGetElem(Node n, Node left, Node right) {\n-    Preconditions.checkArgument(n.isGetElem());\n-\n     if (left.isObjectLit()) {\n       return tryFoldObjectPropAccess(n, left, right);\n     }\n\n\n--- /tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:46:01.984601380 -0500\n+++ /tmp/Arja_Defects4J_Closure_129/patches_ulrg/Patch_1278/patched/tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-01 09:03:59.280331403 -0500\n@@ -129,7 +129,7 @@\n         case IS_DISPATCHER:      return \"is_dispatcher\";\n         case DIRECTIVES:         return \"directives\";\n         case DIRECT_EVAL:        return \"direct_eval\";\n-        case FREE_CALL:          return \"free_call\";\n+        case FREE_CALL:          return \"BLOCK\";\n         case STATIC_SOURCE_FILE:    return \"source_file\";\n         case INPUT_ID:  return \"input_id\";\n         case LENGTH:    return \"length\";\n@@ -1543,7 +1543,6 @@\n       }\n     } else if (type == Token.CALL) {\n       if (this.getBooleanProp(FREE_CALL) != node.getBooleanProp(FREE_CALL)) {\n-        return false;\n       }\n     }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1428, 
          "faulty": "return \"Node tree inequality:\" + \"\\nTree1:\\n\" + toStringTree() + \"\\n\\nTree2:\\n\"+ node2.toStringTree()+ \"\\n\\nSubtree1: \"+ diff.nodeA.toStringTree()+ \"\\n\\nSubtree2: \"+ diff.nodeB.toStringTree();", 
          "type": "Replace", 
          "seed": "return \"SCRIPT\";"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1546, 
          "faulty": "return false;", 
          "type": "Delete", 
          "seed": "return true;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:46:01.984601380 -0500\n+++ /tmp/Arja_Defects4J_Closure_129/patches_ulrg/Patch_389/patched/tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:55:15.360931311 -0500\n@@ -1425,11 +1425,7 @@\n   public String checkTreeEquals(Node node2) {\n       NodeMismatch diff = checkTreeEqualsImpl(node2);\n       if (diff != null) {\n-        return \"Node tree inequality:\" +\n-            \"\\nTree1:\\n\" + toStringTree() +\n-            \"\\n\\nTree2:\\n\" + node2.toStringTree() +\n-            \"\\n\\nSubtree1: \" + diff.nodeA.toStringTree() +\n-            \"\\n\\nSubtree2: \" + diff.nodeB.toStringTree();\n+        return \"SCRIPT\";\n       }\n       return null;\n   }\n@@ -1543,7 +1539,6 @@\n       }\n     } else if (type == Token.CALL) {\n       if (this.getBooleanProp(FREE_CALL) != node.getBooleanProp(FREE_CALL)) {\n-        return false;\n       }\n     }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1546, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 1325, 
          "faulty": "if (left.isObjectLit()) {\n  return tryFoldObjectPropAccess(n,left,right);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 08:46:01.972601364 -0500\n+++ /tmp/Arja_Defects4J_Closure_129/patches_ulrg/Patch_257/patched/tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 08:53:59.393072199 -0500\n@@ -1322,10 +1322,6 @@\n   private Node tryFoldGetElem(Node n, Node left, Node right) {\n     Preconditions.checkArgument(n.isGetElem());\n \n-    if (left.isObjectLit()) {\n-      return tryFoldObjectPropAccess(n, left, right);\n-    }\n-\n     if (left.isArrayLit()) {\n       return tryFoldArrayAccess(n, left, right);\n     }\n\n\n--- /tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:46:01.984601380 -0500\n+++ /tmp/Arja_Defects4J_Closure_129/patches_ulrg/Patch_257/patched/tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:53:59.393072199 -0500\n@@ -1543,7 +1543,7 @@\n       }\n     } else if (type == Token.CALL) {\n       if (this.getBooleanProp(FREE_CALL) != node.getBooleanProp(FREE_CALL)) {\n-        return false;\n+        return true;\n       }\n     }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1546, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 1323, 
          "faulty": "Preconditions.checkArgument(n.isGetElem());", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 08:46:01.972601364 -0500\n+++ /tmp/Arja_Defects4J_Closure_129/patches_ulrg/Patch_666/patched/tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 08:57:57.012742265 -0500\n@@ -1320,8 +1320,6 @@\n    * Try to fold array-element. e.g [1, 2, 3][10];\n    */\n   private Node tryFoldGetElem(Node n, Node left, Node right) {\n-    Preconditions.checkArgument(n.isGetElem());\n-\n     if (left.isObjectLit()) {\n       return tryFoldObjectPropAccess(n, left, right);\n     }\n\n\n--- /tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:46:01.984601380 -0500\n+++ /tmp/Arja_Defects4J_Closure_129/patches_ulrg/Patch_666/patched/tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:57:57.012742265 -0500\n@@ -1543,7 +1543,7 @@\n       }\n     } else if (type == Token.CALL) {\n       if (this.getBooleanProp(FREE_CALL) != node.getBooleanProp(FREE_CALL)) {\n-        return false;\n+        return true;\n       }\n     }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1546, 
          "faulty": "return false;", 
          "type": "Delete", 
          "seed": "this.sourcePosition=sourcePosition;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 1323, 
          "faulty": "Preconditions.checkArgument(n.isGetElem());", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 08:46:01.972601364 -0500\n+++ /tmp/Arja_Defects4J_Closure_129/patches_ulrg/Patch_555/patched/tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 08:56:50.288792332 -0500\n@@ -1320,8 +1320,6 @@\n    * Try to fold array-element. e.g [1, 2, 3][10];\n    */\n   private Node tryFoldGetElem(Node n, Node left, Node right) {\n-    Preconditions.checkArgument(n.isGetElem());\n-\n     if (left.isObjectLit()) {\n       return tryFoldObjectPropAccess(n, left, right);\n     }\n\n\n--- /tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:46:01.984601380 -0500\n+++ /tmp/Arja_Defects4J_Closure_129/patches_ulrg/Patch_555/patched/tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:56:50.288792332 -0500\n@@ -1543,7 +1543,6 @@\n       }\n     } else if (type == Token.CALL) {\n       if (this.getBooleanProp(FREE_CALL) != node.getBooleanProp(FREE_CALL)) {\n-        return false;\n       }\n     }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1457, 
          "faulty": "return res;", 
          "type": "InsertBefore", 
          "seed": "this.sourcePosition=sourcePosition;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1546, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:46:01.984601380 -0500\n+++ /tmp/Arja_Defects4J_Closure_129/patches_ulrg/Patch_1335/patched/tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-01 09:04:31.708303431 -0500\n@@ -1454,7 +1454,8 @@\n       }\n       res = n.checkTreeEqualsImpl(n2);\n       if (res != null) {\n-        return res;\n+        this.sourcePosition = sourcePosition;\n+\t\treturn res;\n       }\n     }\n     return res;\n@@ -1543,7 +1544,7 @@\n       }\n     } else if (type == Token.CALL) {\n       if (this.getBooleanProp(FREE_CALL) != node.getBooleanProp(FREE_CALL)) {\n-        return false;\n+        return true;\n       }\n     }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1546, 
          "faulty": "return false;", 
          "type": "Delete", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 1329, 
          "faulty": "if (left.isArrayLit()) {\n  return tryFoldArrayAccess(n,left,right);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 08:46:01.972601364 -0500\n+++ /tmp/Arja_Defects4J_Closure_129/patches_ulrg/Patch_847/patched/tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 08:59:42.844719788 -0500\n@@ -1326,9 +1326,6 @@\n       return tryFoldObjectPropAccess(n, left, right);\n     }\n \n-    if (left.isArrayLit()) {\n-      return tryFoldArrayAccess(n, left, right);\n-    }\n     return n;\n   }\n \n\n\n--- /tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:46:01.984601380 -0500\n+++ /tmp/Arja_Defects4J_Closure_129/patches_ulrg/Patch_847/patched/tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:59:42.844719788 -0500\n@@ -1543,7 +1543,6 @@\n       }\n     } else if (type == Token.CALL) {\n       if (this.getBooleanProp(FREE_CALL) != node.getBooleanProp(FREE_CALL)) {\n-        return false;\n       }\n     }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1546, 
          "faulty": "return false;", 
          "type": "Delete", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 1329, 
          "faulty": "if (left.isArrayLit()) {\n  return tryFoldArrayAccess(n,left,right);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 08:46:01.972601364 -0500\n+++ /tmp/Arja_Defects4J_Closure_129/patches_ulrg/Patch_1028/patched/tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 09:01:33.068564903 -0500\n@@ -1326,9 +1326,6 @@\n       return tryFoldObjectPropAccess(n, left, right);\n     }\n \n-    if (left.isArrayLit()) {\n-      return tryFoldArrayAccess(n, left, right);\n-    }\n     return n;\n   }\n \n\n\n--- /tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:46:01.984601380 -0500\n+++ /tmp/Arja_Defects4J_Closure_129/patches_ulrg/Patch_1028/patched/tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-01 09:01:33.072564894 -0500\n@@ -1543,7 +1543,6 @@\n       }\n     } else if (type == Token.CALL) {\n       if (this.getBooleanProp(FREE_CALL) != node.getBooleanProp(FREE_CALL)) {\n-        return false;\n       }\n     }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1546, 
          "faulty": "return false;", 
          "type": "Delete", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 122, 
          "faulty": "return tryFoldGetElem(subtree,left,right);", 
          "type": "Replace", 
          "seed": "return null;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 08:46:01.972601364 -0500\n+++ /tmp/Arja_Defects4J_Closure_129/patches_ulrg/Patch_594/patched/tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 08:57:13.768770899 -0500\n@@ -119,7 +119,7 @@\n         return tryFoldGetProp(subtree, left, right);\n \n       case Token.GETELEM:\n-        return tryFoldGetElem(subtree, left, right);\n+        return null;\n \n       case Token.INSTANCEOF:\n         return tryFoldInstanceof(subtree, left, right);\n\n\n--- /tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:46:01.984601380 -0500\n+++ /tmp/Arja_Defects4J_Closure_129/patches_ulrg/Patch_594/patched/tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:57:13.768770899 -0500\n@@ -1543,7 +1543,6 @@\n       }\n     } else if (type == Token.CALL) {\n       if (this.getBooleanProp(FREE_CALL) != node.getBooleanProp(FREE_CALL)) {\n-        return false;\n       }\n     }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1546, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/CodeGenerator.java", 
          "line": 532, 
          "faulty": "add(\")\");", 
          "type": "Replace", 
          "seed": "break;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:46:01.984601380 -0500\n+++ /tmp/Arja_Defects4J_Closure_129/patches_ulrg/Patch_488/patched/tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:56:12.668836563 -0500\n@@ -1543,7 +1543,7 @@\n       }\n     } else if (type == Token.CALL) {\n       if (this.getBooleanProp(FREE_CALL) != node.getBooleanProp(FREE_CALL)) {\n-        return false;\n+        return true;\n       }\n     }\n \n\n\n--- /tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/jscomp/CodeGenerator.java\t2018-12-01 08:46:01.956601345 -0500\n+++ /tmp/Arja_Defects4J_Closure_129/patches_ulrg/Patch_488/patched/tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/jscomp/CodeGenerator.java\t2018-12-01 08:56:12.668836563 -0500\n@@ -529,7 +529,7 @@\n             || n.getBooleanProp(Node.FREE_CALL) && NodeUtil.isGet(first)) {\n           add(\"(0,\");\n           addExpr(first, NodeUtil.precedence(Token.COMMA), Context.OTHER);\n-          add(\")\");\n+          break;\n         } else {\n           addExpr(first, NodeUtil.precedence(type), context);\n         }\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1546, 
          "faulty": "return false;", 
          "type": "Delete", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/CodeGenerator.java", 
          "line": 531, 
          "faulty": "addExpr(first,NodeUtil.precedence(Token.COMMA),Context.OTHER);", 
          "type": "Delete", 
          "seed": "break;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:46:01.984601380 -0500\n+++ /tmp/Arja_Defects4J_Closure_129/patches_ulrg/Patch_106/patched/tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:52:37.481016631 -0500\n@@ -1543,7 +1543,6 @@\n       }\n     } else if (type == Token.CALL) {\n       if (this.getBooleanProp(FREE_CALL) != node.getBooleanProp(FREE_CALL)) {\n-        return false;\n       }\n     }\n \n\n\n--- /tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/jscomp/CodeGenerator.java\t2018-12-01 08:46:01.956601345 -0500\n+++ /tmp/Arja_Defects4J_Closure_129/patches_ulrg/Patch_106/patched/tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/jscomp/CodeGenerator.java\t2018-12-01 08:52:37.481016631 -0500\n@@ -528,7 +528,6 @@\n         if (isIndirectEval(first)\n             || n.getBooleanProp(Node.FREE_CALL) && NodeUtil.isGet(first)) {\n           add(\"(0,\");\n-          addExpr(first, NodeUtil.precedence(Token.COMMA), Context.OTHER);\n           add(\")\");\n         } else {\n           addExpr(first, NodeUtil.precedence(type), context);\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1546, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 122, 
          "faulty": "return tryFoldGetElem(subtree,left,right);", 
          "type": "Replace", 
          "seed": "return null;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 08:46:01.972601364 -0500\n+++ /tmp/Arja_Defects4J_Closure_129/patches_ulrg/Patch_823/patched/tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 08:59:30.500719506 -0500\n@@ -119,7 +119,7 @@\n         return tryFoldGetProp(subtree, left, right);\n \n       case Token.GETELEM:\n-        return tryFoldGetElem(subtree, left, right);\n+        return null;\n \n       case Token.INSTANCEOF:\n         return tryFoldInstanceof(subtree, left, right);\n\n\n--- /tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:46:01.984601380 -0500\n+++ /tmp/Arja_Defects4J_Closure_129/patches_ulrg/Patch_823/patched/tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:59:30.504719506 -0500\n@@ -1543,7 +1543,7 @@\n       }\n     } else if (type == Token.CALL) {\n       if (this.getBooleanProp(FREE_CALL) != node.getBooleanProp(FREE_CALL)) {\n-        return false;\n+        return true;\n       }\n     }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1546, 
          "faulty": "return false;", 
          "type": "Delete", 
          "seed": "this.sourcePosition=sourcePosition;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:46:01.984601380 -0500\n+++ /tmp/Arja_Defects4J_Closure_129/patches_ulrg/Patch_1/patched/tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:51:35.852958944 -0500\n@@ -1543,7 +1543,6 @@\n       }\n     } else if (type == Token.CALL) {\n       if (this.getBooleanProp(FREE_CALL) != node.getBooleanProp(FREE_CALL)) {\n-        return false;\n       }\n     }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1546, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 1323, 
          "faulty": "Preconditions.checkArgument(n.isGetElem());", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 08:46:01.972601364 -0500\n+++ /tmp/Arja_Defects4J_Closure_129/patches_ulrg/Patch_1166/patched/tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 09:02:53.272412194 -0500\n@@ -1320,8 +1320,6 @@\n    * Try to fold array-element. e.g [1, 2, 3][10];\n    */\n   private Node tryFoldGetElem(Node n, Node left, Node right) {\n-    Preconditions.checkArgument(n.isGetElem());\n-\n     if (left.isObjectLit()) {\n       return tryFoldObjectPropAccess(n, left, right);\n     }\n\n\n--- /tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:46:01.984601380 -0500\n+++ /tmp/Arja_Defects4J_Closure_129/patches_ulrg/Patch_1166/patched/tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-01 09:02:53.276412188 -0500\n@@ -1543,7 +1543,7 @@\n       }\n     } else if (type == Token.CALL) {\n       if (this.getBooleanProp(FREE_CALL) != node.getBooleanProp(FREE_CALL)) {\n-        return false;\n+        return true;\n       }\n     }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1546, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 1329, 
          "faulty": "if (left.isArrayLit()) {\n  return tryFoldArrayAccess(n,left,right);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 08:46:01.972601364 -0500\n+++ /tmp/Arja_Defects4J_Closure_129/patches_ulrg/Patch_64/patched/tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 08:52:14.516994285 -0500\n@@ -1326,9 +1326,6 @@\n       return tryFoldObjectPropAccess(n, left, right);\n     }\n \n-    if (left.isArrayLit()) {\n-      return tryFoldArrayAccess(n, left, right);\n-    }\n     return n;\n   }\n \n\n\n--- /tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:46:01.984601380 -0500\n+++ /tmp/Arja_Defects4J_Closure_129/patches_ulrg/Patch_64/patched/tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:52:14.520994289 -0500\n@@ -1543,7 +1543,7 @@\n       }\n     } else if (type == Token.CALL) {\n       if (this.getBooleanProp(FREE_CALL) != node.getBooleanProp(FREE_CALL)) {\n-        return false;\n+        return true;\n       }\n     }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1428, 
          "faulty": "return \"Node tree inequality:\" + \"\\nTree1:\\n\" + toStringTree() + \"\\n\\nTree2:\\n\"+ node2.toStringTree()+ \"\\n\\nSubtree1: \"+ diff.nodeA.toStringTree()+ \"\\n\\nSubtree2: \"+ diff.nodeB.toStringTree();", 
          "type": "Replace", 
          "seed": "return \"SCRIPT\";"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1457, 
          "faulty": "return res;", 
          "type": "Delete", 
          "seed": "this.sourcePosition=sourcePosition;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1546, 
          "faulty": "return false;", 
          "type": "Delete", 
          "seed": "return true;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:46:01.984601380 -0500\n+++ /tmp/Arja_Defects4J_Closure_129/patches_ulrg/Patch_1282/patched/tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-01 09:04:01.144329604 -0500\n@@ -1425,11 +1425,7 @@\n   public String checkTreeEquals(Node node2) {\n       NodeMismatch diff = checkTreeEqualsImpl(node2);\n       if (diff != null) {\n-        return \"Node tree inequality:\" +\n-            \"\\nTree1:\\n\" + toStringTree() +\n-            \"\\n\\nTree2:\\n\" + node2.toStringTree() +\n-            \"\\n\\nSubtree1: \" + diff.nodeA.toStringTree() +\n-            \"\\n\\nSubtree2: \" + diff.nodeB.toStringTree();\n+        return \"SCRIPT\";\n       }\n       return null;\n   }\n@@ -1454,7 +1450,6 @@\n       }\n       res = n.checkTreeEqualsImpl(n2);\n       if (res != null) {\n-        return res;\n       }\n     }\n     return res;\n@@ -1543,7 +1538,6 @@\n       }\n     } else if (type == Token.CALL) {\n       if (this.getBooleanProp(FREE_CALL) != node.getBooleanProp(FREE_CALL)) {\n-        return false;\n       }\n     }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1546, 
          "faulty": "return false;", 
          "type": "Delete", 
          "seed": "return this.getType() == Token.BLOCK;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 1323, 
          "faulty": "Preconditions.checkArgument(n.isGetElem());", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 08:46:01.972601364 -0500\n+++ /tmp/Arja_Defects4J_Closure_129/patches_ulrg/Patch_511/patched/tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 08:56:25.828819617 -0500\n@@ -1320,8 +1320,6 @@\n    * Try to fold array-element. e.g [1, 2, 3][10];\n    */\n   private Node tryFoldGetElem(Node n, Node left, Node right) {\n-    Preconditions.checkArgument(n.isGetElem());\n-\n     if (left.isObjectLit()) {\n       return tryFoldObjectPropAccess(n, left, right);\n     }\n\n\n--- /tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:46:01.984601380 -0500\n+++ /tmp/Arja_Defects4J_Closure_129/patches_ulrg/Patch_511/patched/tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:56:25.832819612 -0500\n@@ -1543,7 +1543,6 @@\n       }\n     } else if (type == Token.CALL) {\n       if (this.getBooleanProp(FREE_CALL) != node.getBooleanProp(FREE_CALL)) {\n-        return false;\n       }\n     }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 132, 
          "faulty": "return \"free_call\";", 
          "type": "Replace", 
          "seed": "return \"RETURN\";"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1546, 
          "faulty": "return false;", 
          "type": "Delete", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 1323, 
          "faulty": "Preconditions.checkArgument(n.isGetElem());", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 08:46:01.972601364 -0500\n+++ /tmp/Arja_Defects4J_Closure_129/patches_ulrg/Patch_927/patched/tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 09:00:30.196726678 -0500\n@@ -1320,8 +1320,6 @@\n    * Try to fold array-element. e.g [1, 2, 3][10];\n    */\n   private Node tryFoldGetElem(Node n, Node left, Node right) {\n-    Preconditions.checkArgument(n.isGetElem());\n-\n     if (left.isObjectLit()) {\n       return tryFoldObjectPropAccess(n, left, right);\n     }\n\n\n--- /tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:46:01.984601380 -0500\n+++ /tmp/Arja_Defects4J_Closure_129/patches_ulrg/Patch_927/patched/tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-01 09:00:30.200726679 -0500\n@@ -129,7 +129,7 @@\n         case IS_DISPATCHER:      return \"is_dispatcher\";\n         case DIRECTIVES:         return \"directives\";\n         case DIRECT_EVAL:        return \"direct_eval\";\n-        case FREE_CALL:          return \"free_call\";\n+        case FREE_CALL:          return \"RETURN\";\n         case STATIC_SOURCE_FILE:    return \"source_file\";\n         case INPUT_ID:  return \"input_id\";\n         case LENGTH:    return \"length\";\n@@ -1543,7 +1543,6 @@\n       }\n     } else if (type == Token.CALL) {\n       if (this.getBooleanProp(FREE_CALL) != node.getBooleanProp(FREE_CALL)) {\n-        return false;\n       }\n     }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1546, 
          "faulty": "return false;", 
          "type": "Delete", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 1325, 
          "faulty": "if (left.isObjectLit()) {\n  return tryFoldObjectPropAccess(n,left,right);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 1329, 
          "faulty": "if (left.isArrayLit()) {\n  return tryFoldArrayAccess(n,left,right);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 08:46:01.972601364 -0500\n+++ /tmp/Arja_Defects4J_Closure_129/patches_ulrg/Patch_356/patched/tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 08:54:57.496968664 -0500\n@@ -1322,13 +1322,6 @@\n   private Node tryFoldGetElem(Node n, Node left, Node right) {\n     Preconditions.checkArgument(n.isGetElem());\n \n-    if (left.isObjectLit()) {\n-      return tryFoldObjectPropAccess(n, left, right);\n-    }\n-\n-    if (left.isArrayLit()) {\n-      return tryFoldArrayAccess(n, left, right);\n-    }\n     return n;\n   }\n \n\n\n--- /tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:46:01.984601380 -0500\n+++ /tmp/Arja_Defects4J_Closure_129/patches_ulrg/Patch_356/patched/tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:54:57.496968664 -0500\n@@ -1543,7 +1543,6 @@\n       }\n     } else if (type == Token.CALL) {\n       if (this.getBooleanProp(FREE_CALL) != node.getBooleanProp(FREE_CALL)) {\n-        return false;\n       }\n     }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1546, 
          "faulty": "return false;", 
          "type": "Delete", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 1325, 
          "faulty": "if (left.isObjectLit()) {\n  return tryFoldObjectPropAccess(n,left,right);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 08:46:01.972601364 -0500\n+++ /tmp/Arja_Defects4J_Closure_129/patches_ulrg/Patch_207/patched/tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 08:53:30.773071839 -0500\n@@ -1322,10 +1322,6 @@\n   private Node tryFoldGetElem(Node n, Node left, Node right) {\n     Preconditions.checkArgument(n.isGetElem());\n \n-    if (left.isObjectLit()) {\n-      return tryFoldObjectPropAccess(n, left, right);\n-    }\n-\n     if (left.isArrayLit()) {\n       return tryFoldArrayAccess(n, left, right);\n     }\n\n\n--- /tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:46:01.984601380 -0500\n+++ /tmp/Arja_Defects4J_Closure_129/patches_ulrg/Patch_207/patched/tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:53:30.773071839 -0500\n@@ -1543,7 +1543,6 @@\n       }\n     } else if (type == Token.CALL) {\n       if (this.getBooleanProp(FREE_CALL) != node.getBooleanProp(FREE_CALL)) {\n-        return false;\n       }\n     }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1546, 
          "faulty": "return false;", 
          "type": "Delete", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 1329, 
          "faulty": "if (left.isArrayLit()) {\n  return tryFoldArrayAccess(n,left,right);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 08:46:01.972601364 -0500\n+++ /tmp/Arja_Defects4J_Closure_129/patches_ulrg/Patch_1397/patched/tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 09:05:07.512280059 -0500\n@@ -1326,9 +1326,6 @@\n       return tryFoldObjectPropAccess(n, left, right);\n     }\n \n-    if (left.isArrayLit()) {\n-      return tryFoldArrayAccess(n, left, right);\n-    }\n     return n;\n   }\n \n\n\n--- /tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:46:01.984601380 -0500\n+++ /tmp/Arja_Defects4J_Closure_129/patches_ulrg/Patch_1397/patched/tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-01 09:05:07.516280058 -0500\n@@ -1543,7 +1543,6 @@\n       }\n     } else if (type == Token.CALL) {\n       if (this.getBooleanProp(FREE_CALL) != node.getBooleanProp(FREE_CALL)) {\n-        return false;\n       }\n     }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1546, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 1323, 
          "faulty": "Preconditions.checkArgument(n.isGetElem());", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 08:46:01.972601364 -0500\n+++ /tmp/Arja_Defects4J_Closure_129/patches_ulrg/Patch_1040/patched/tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 09:01:39.460550112 -0500\n@@ -1320,8 +1320,6 @@\n    * Try to fold array-element. e.g [1, 2, 3][10];\n    */\n   private Node tryFoldGetElem(Node n, Node left, Node right) {\n-    Preconditions.checkArgument(n.isGetElem());\n-\n     if (left.isObjectLit()) {\n       return tryFoldObjectPropAccess(n, left, right);\n     }\n\n\n--- /tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:46:01.984601380 -0500\n+++ /tmp/Arja_Defects4J_Closure_129/patches_ulrg/Patch_1040/patched/tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-01 09:01:39.460550112 -0500\n@@ -1543,7 +1543,7 @@\n       }\n     } else if (type == Token.CALL) {\n       if (this.getBooleanProp(FREE_CALL) != node.getBooleanProp(FREE_CALL)) {\n-        return false;\n+        return true;\n       }\n     }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 132, 
          "faulty": "return \"free_call\";", 
          "type": "Replace", 
          "seed": "return \"ADD\";"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1546, 
          "faulty": "return false;", 
          "type": "Delete", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 1332, 
          "faulty": "return n;", 
          "type": "Replace", 
          "seed": "return null;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 08:46:01.972601364 -0500\n+++ /tmp/Arja_Defects4J_Closure_129/patches_ulrg/Patch_218/patched/tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 08:53:36.721078262 -0500\n@@ -1329,7 +1329,7 @@\n     if (left.isArrayLit()) {\n       return tryFoldArrayAccess(n, left, right);\n     }\n-    return n;\n+    return null;\n   }\n \n   /**\n\n\n--- /tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:46:01.984601380 -0500\n+++ /tmp/Arja_Defects4J_Closure_129/patches_ulrg/Patch_218/patched/tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:53:36.721078262 -0500\n@@ -129,7 +129,7 @@\n         case IS_DISPATCHER:      return \"is_dispatcher\";\n         case DIRECTIVES:         return \"directives\";\n         case DIRECT_EVAL:        return \"direct_eval\";\n-        case FREE_CALL:          return \"free_call\";\n+        case FREE_CALL:          return \"ADD\";\n         case STATIC_SOURCE_FILE:    return \"source_file\";\n         case INPUT_ID:  return \"input_id\";\n         case LENGTH:    return \"length\";\n@@ -1543,7 +1543,6 @@\n       }\n     } else if (type == Token.CALL) {\n       if (this.getBooleanProp(FREE_CALL) != node.getBooleanProp(FREE_CALL)) {\n-        return false;\n       }\n     }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1546, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 1323, 
          "faulty": "Preconditions.checkArgument(n.isGetElem());", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 08:46:01.972601364 -0500\n+++ /tmp/Arja_Defects4J_Closure_129/patches_ulrg/Patch_360/patched/tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 08:54:59.620964010 -0500\n@@ -1320,8 +1320,6 @@\n    * Try to fold array-element. e.g [1, 2, 3][10];\n    */\n   private Node tryFoldGetElem(Node n, Node left, Node right) {\n-    Preconditions.checkArgument(n.isGetElem());\n-\n     if (left.isObjectLit()) {\n       return tryFoldObjectPropAccess(n, left, right);\n     }\n\n\n--- /tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:46:01.984601380 -0500\n+++ /tmp/Arja_Defects4J_Closure_129/patches_ulrg/Patch_360/patched/tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:54:59.620964010 -0500\n@@ -1543,7 +1543,7 @@\n       }\n     } else if (type == Token.CALL) {\n       if (this.getBooleanProp(FREE_CALL) != node.getBooleanProp(FREE_CALL)) {\n-        return false;\n+        return true;\n       }\n     }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1457, 
          "faulty": "return res;", 
          "type": "Delete", 
          "seed": "this.sourcePosition=sourcePosition;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1546, 
          "faulty": "return false;", 
          "type": "Delete", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 1323, 
          "faulty": "Preconditions.checkArgument(n.isGetElem());", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 08:46:01.972601364 -0500\n+++ /tmp/Arja_Defects4J_Closure_129/patches_ulrg/Patch_171/patched/tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 08:53:11.193051050 -0500\n@@ -1320,8 +1320,6 @@\n    * Try to fold array-element. e.g [1, 2, 3][10];\n    */\n   private Node tryFoldGetElem(Node n, Node left, Node right) {\n-    Preconditions.checkArgument(n.isGetElem());\n-\n     if (left.isObjectLit()) {\n       return tryFoldObjectPropAccess(n, left, right);\n     }\n\n\n--- /tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:46:01.984601380 -0500\n+++ /tmp/Arja_Defects4J_Closure_129/patches_ulrg/Patch_171/patched/tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:53:11.193051050 -0500\n@@ -1454,7 +1454,6 @@\n       }\n       res = n.checkTreeEqualsImpl(n2);\n       if (res != null) {\n-        return res;\n       }\n     }\n     return res;\n@@ -1543,7 +1542,6 @@\n       }\n     } else if (type == Token.CALL) {\n       if (this.getBooleanProp(FREE_CALL) != node.getBooleanProp(FREE_CALL)) {\n-        return false;\n       }\n     }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1546, 
          "faulty": "return false;", 
          "type": "Delete", 
          "seed": "this.sourcePosition=sourcePosition;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 1325, 
          "faulty": "if (left.isObjectLit()) {\n  return tryFoldObjectPropAccess(n,left,right);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 08:46:01.972601364 -0500\n+++ /tmp/Arja_Defects4J_Closure_129/patches_ulrg/Patch_1394/patched/tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 09:05:06.192280793 -0500\n@@ -1322,10 +1322,6 @@\n   private Node tryFoldGetElem(Node n, Node left, Node right) {\n     Preconditions.checkArgument(n.isGetElem());\n \n-    if (left.isObjectLit()) {\n-      return tryFoldObjectPropAccess(n, left, right);\n-    }\n-\n     if (left.isArrayLit()) {\n       return tryFoldArrayAccess(n, left, right);\n     }\n\n\n--- /tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:46:01.984601380 -0500\n+++ /tmp/Arja_Defects4J_Closure_129/patches_ulrg/Patch_1394/patched/tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-01 09:05:06.196280790 -0500\n@@ -1543,7 +1543,6 @@\n       }\n     } else if (type == Token.CALL) {\n       if (this.getBooleanProp(FREE_CALL) != node.getBooleanProp(FREE_CALL)) {\n-        return false;\n       }\n     }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1546, 
          "faulty": "return false;", 
          "type": "Delete", 
          "seed": "this.sourcePosition=sourcePosition;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 1323, 
          "faulty": "Preconditions.checkArgument(n.isGetElem());", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 08:46:01.972601364 -0500\n+++ /tmp/Arja_Defects4J_Closure_129/patches_ulrg/Patch_1207/patched/tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 09:03:17.700378196 -0500\n@@ -1320,8 +1320,6 @@\n    * Try to fold array-element. e.g [1, 2, 3][10];\n    */\n   private Node tryFoldGetElem(Node n, Node left, Node right) {\n-    Preconditions.checkArgument(n.isGetElem());\n-\n     if (left.isObjectLit()) {\n       return tryFoldObjectPropAccess(n, left, right);\n     }\n\n\n--- /tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:46:01.984601380 -0500\n+++ /tmp/Arja_Defects4J_Closure_129/patches_ulrg/Patch_1207/patched/tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-01 09:03:17.700378196 -0500\n@@ -1543,7 +1543,6 @@\n       }\n     } else if (type == Token.CALL) {\n       if (this.getBooleanProp(FREE_CALL) != node.getBooleanProp(FREE_CALL)) {\n-        return false;\n       }\n     }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1546, 
          "faulty": "return false;", 
          "type": "Delete", 
          "seed": "return isEquivalentTo(node,false,true,false);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 1323, 
          "faulty": "Preconditions.checkArgument(n.isGetElem());", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 08:46:01.972601364 -0500\n+++ /tmp/Arja_Defects4J_Closure_129/patches_ulrg/Patch_1132/patched/tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 09:02:33.388443843 -0500\n@@ -1320,8 +1320,6 @@\n    * Try to fold array-element. e.g [1, 2, 3][10];\n    */\n   private Node tryFoldGetElem(Node n, Node left, Node right) {\n-    Preconditions.checkArgument(n.isGetElem());\n-\n     if (left.isObjectLit()) {\n       return tryFoldObjectPropAccess(n, left, right);\n     }\n\n\n--- /tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:46:01.984601380 -0500\n+++ /tmp/Arja_Defects4J_Closure_129/patches_ulrg/Patch_1132/patched/tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-01 09:02:33.392443835 -0500\n@@ -1543,7 +1543,6 @@\n       }\n     } else if (type == Token.CALL) {\n       if (this.getBooleanProp(FREE_CALL) != node.getBooleanProp(FREE_CALL)) {\n-        return false;\n       }\n     }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 132, 
          "faulty": "return \"free_call\";", 
          "type": "Replace", 
          "seed": "return \"ADD\";"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1546, 
          "faulty": "return false;", 
          "type": "Delete", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 122, 
          "faulty": "return tryFoldGetElem(subtree,left,right);", 
          "type": "Replace", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 1325, 
          "faulty": "if (left.isObjectLit()) {\n  return tryFoldObjectPropAccess(n,left,right);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 08:46:01.972601364 -0500\n+++ /tmp/Arja_Defects4J_Closure_129/patches_ulrg/Patch_397/patched/tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 08:55:19.364923484 -0500\n@@ -119,7 +119,7 @@\n         return tryFoldGetProp(subtree, left, right);\n \n       case Token.GETELEM:\n-        return tryFoldGetElem(subtree, left, right);\n+        return null;\n \n       case Token.INSTANCEOF:\n         return tryFoldInstanceof(subtree, left, right);\n@@ -1322,10 +1322,6 @@\n   private Node tryFoldGetElem(Node n, Node left, Node right) {\n     Preconditions.checkArgument(n.isGetElem());\n \n-    if (left.isObjectLit()) {\n-      return tryFoldObjectPropAccess(n, left, right);\n-    }\n-\n     if (left.isArrayLit()) {\n       return tryFoldArrayAccess(n, left, right);\n     }\n\n\n--- /tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:46:01.984601380 -0500\n+++ /tmp/Arja_Defects4J_Closure_129/patches_ulrg/Patch_397/patched/tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:55:19.364923484 -0500\n@@ -129,7 +129,7 @@\n         case IS_DISPATCHER:      return \"is_dispatcher\";\n         case DIRECTIVES:         return \"directives\";\n         case DIRECT_EVAL:        return \"direct_eval\";\n-        case FREE_CALL:          return \"free_call\";\n+        case FREE_CALL:          return \"ADD\";\n         case STATIC_SOURCE_FILE:    return \"source_file\";\n         case INPUT_ID:  return \"input_id\";\n         case LENGTH:    return \"length\";\n@@ -1543,7 +1543,6 @@\n       }\n     } else if (type == Token.CALL) {\n       if (this.getBooleanProp(FREE_CALL) != node.getBooleanProp(FREE_CALL)) {\n-        return false;\n       }\n     }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1546, 
          "faulty": "return false;", 
          "type": "Delete", 
          "seed": "this.sourcePosition=sourcePosition;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 1329, 
          "faulty": "if (left.isArrayLit()) {\n  return tryFoldArrayAccess(n,left,right);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 08:46:01.972601364 -0500\n+++ /tmp/Arja_Defects4J_Closure_129/patches_ulrg/Patch_182/patched/tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 08:53:16.141056251 -0500\n@@ -1326,9 +1326,6 @@\n       return tryFoldObjectPropAccess(n, left, right);\n     }\n \n-    if (left.isArrayLit()) {\n-      return tryFoldArrayAccess(n, left, right);\n-    }\n     return n;\n   }\n \n\n\n--- /tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:46:01.984601380 -0500\n+++ /tmp/Arja_Defects4J_Closure_129/patches_ulrg/Patch_182/patched/tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:53:16.141056251 -0500\n@@ -1543,7 +1543,6 @@\n       }\n     } else if (type == Token.CALL) {\n       if (this.getBooleanProp(FREE_CALL) != node.getBooleanProp(FREE_CALL)) {\n-        return false;\n       }\n     }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1457, 
          "faulty": "return res;", 
          "type": "Delete", 
          "seed": "return new NodeMismatch(this,node2);"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1546, 
          "faulty": "return false;", 
          "type": "Delete", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/CodeGenerator.java", 
          "line": 532, 
          "faulty": "add(\")\");", 
          "type": "Replace", 
          "seed": "break;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:46:01.984601380 -0500\n+++ /tmp/Arja_Defects4J_Closure_129/patches_ulrg/Patch_1106/patched/tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-01 09:02:18.364470311 -0500\n@@ -1454,7 +1454,6 @@\n       }\n       res = n.checkTreeEqualsImpl(n2);\n       if (res != null) {\n-        return res;\n       }\n     }\n     return res;\n@@ -1543,7 +1542,6 @@\n       }\n     } else if (type == Token.CALL) {\n       if (this.getBooleanProp(FREE_CALL) != node.getBooleanProp(FREE_CALL)) {\n-        return false;\n       }\n     }\n \n\n\n--- /tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/jscomp/CodeGenerator.java\t2018-12-01 08:46:01.956601345 -0500\n+++ /tmp/Arja_Defects4J_Closure_129/patches_ulrg/Patch_1106/patched/tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/jscomp/CodeGenerator.java\t2018-12-01 09:02:18.364470311 -0500\n@@ -529,7 +529,7 @@\n             || n.getBooleanProp(Node.FREE_CALL) && NodeUtil.isGet(first)) {\n           add(\"(0,\");\n           addExpr(first, NodeUtil.precedence(Token.COMMA), Context.OTHER);\n-          add(\")\");\n+          break;\n         } else {\n           addExpr(first, NodeUtil.precedence(type), context);\n         }\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1546, 
          "faulty": "return false;", 
          "type": "Delete", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 1323, 
          "faulty": "Preconditions.checkArgument(n.isGetElem());", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/NodeUtil.java", 
          "line": 3165, 
          "faulty": "return isExpressionResultUsed(parent);", 
          "type": "Replace", 
          "seed": "break;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 08:46:01.972601364 -0500\n+++ /tmp/Arja_Defects4J_Closure_129/patches_ulrg/Patch_549/patched/tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 08:56:46.948795749 -0500\n@@ -1320,8 +1320,6 @@\n    * Try to fold array-element. e.g [1, 2, 3][10];\n    */\n   private Node tryFoldGetElem(Node n, Node left, Node right) {\n-    Preconditions.checkArgument(n.isGetElem());\n-\n     if (left.isObjectLit()) {\n       return tryFoldObjectPropAccess(n, left, right);\n     }\n\n\n--- /tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/jscomp/NodeUtil.java\t2018-12-01 08:46:01.968601359 -0500\n+++ /tmp/Arja_Defects4J_Closure_129/patches_ulrg/Patch_549/patched/tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/jscomp/NodeUtil.java\t2018-12-01 08:56:46.948795749 -0500\n@@ -3162,7 +3162,7 @@\n       case Token.EXPR_RESULT:\n         return false;\n       case Token.CAST:\n-        return isExpressionResultUsed(parent);\n+        break;\n       case Token.HOOK:\n       case Token.AND:\n       case Token.OR:\n\n\n--- /tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:46:01.984601380 -0500\n+++ /tmp/Arja_Defects4J_Closure_129/patches_ulrg/Patch_549/patched/tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:56:46.952795745 -0500\n@@ -1543,7 +1543,6 @@\n       }\n     } else if (type == Token.CALL) {\n       if (this.getBooleanProp(FREE_CALL) != node.getBooleanProp(FREE_CALL)) {\n-        return false;\n       }\n     }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 132, 
          "faulty": "return \"free_call\";", 
          "type": "Replace", 
          "seed": "return \"BLOCK\";"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1546, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:46:01.984601380 -0500\n+++ /tmp/Arja_Defects4J_Closure_129/patches_ulrg/Patch_366/patched/tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:55:02.712957337 -0500\n@@ -129,7 +129,7 @@\n         case IS_DISPATCHER:      return \"is_dispatcher\";\n         case DIRECTIVES:         return \"directives\";\n         case DIRECT_EVAL:        return \"direct_eval\";\n-        case FREE_CALL:          return \"free_call\";\n+        case FREE_CALL:          return \"BLOCK\";\n         case STATIC_SOURCE_FILE:    return \"source_file\";\n         case INPUT_ID:  return \"input_id\";\n         case LENGTH:    return \"length\";\n@@ -1543,7 +1543,7 @@\n       }\n     } else if (type == Token.CALL) {\n       if (this.getBooleanProp(FREE_CALL) != node.getBooleanProp(FREE_CALL)) {\n-        return false;\n+        return true;\n       }\n     }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 132, 
          "faulty": "return \"free_call\";", 
          "type": "Replace", 
          "seed": "return \"ADD\";"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1546, 
          "faulty": "return false;", 
          "type": "Delete", 
          "seed": "return true;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:46:01.984601380 -0500\n+++ /tmp/Arja_Defects4J_Closure_129/patches_ulrg/Patch_288/patched/tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:54:16.405038122 -0500\n@@ -129,7 +129,7 @@\n         case IS_DISPATCHER:      return \"is_dispatcher\";\n         case DIRECTIVES:         return \"directives\";\n         case DIRECT_EVAL:        return \"direct_eval\";\n-        case FREE_CALL:          return \"free_call\";\n+        case FREE_CALL:          return \"ADD\";\n         case STATIC_SOURCE_FILE:    return \"source_file\";\n         case INPUT_ID:  return \"input_id\";\n         case LENGTH:    return \"length\";\n@@ -1543,7 +1543,6 @@\n       }\n     } else if (type == Token.CALL) {\n       if (this.getBooleanProp(FREE_CALL) != node.getBooleanProp(FREE_CALL)) {\n-        return false;\n       }\n     }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1546, 
          "faulty": "return false;", 
          "type": "Delete", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 1323, 
          "faulty": "Preconditions.checkArgument(n.isGetElem());", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 08:46:01.972601364 -0500\n+++ /tmp/Arja_Defects4J_Closure_129/patches_ulrg/Patch_590/patched/tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 08:57:11.428772838 -0500\n@@ -1320,8 +1320,6 @@\n    * Try to fold array-element. e.g [1, 2, 3][10];\n    */\n   private Node tryFoldGetElem(Node n, Node left, Node right) {\n-    Preconditions.checkArgument(n.isGetElem());\n-\n     if (left.isObjectLit()) {\n       return tryFoldObjectPropAccess(n, left, right);\n     }\n\n\n--- /tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:46:01.984601380 -0500\n+++ /tmp/Arja_Defects4J_Closure_129/patches_ulrg/Patch_590/patched/tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:57:11.432772836 -0500\n@@ -1543,7 +1543,6 @@\n       }\n     } else if (type == Token.CALL) {\n       if (this.getBooleanProp(FREE_CALL) != node.getBooleanProp(FREE_CALL)) {\n-        return false;\n       }\n     }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1428, 
          "faulty": "return \"Node tree inequality:\" + \"\\nTree1:\\n\" + toStringTree() + \"\\n\\nTree2:\\n\"+ node2.toStringTree()+ \"\\n\\nSubtree1: \"+ diff.nodeA.toStringTree()+ \"\\n\\nSubtree2: \"+ diff.nodeB.toStringTree();", 
          "type": "Replace", 
          "seed": "return \"RETURN\";"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1546, 
          "faulty": "return false;", 
          "type": "Delete", 
          "seed": "return true;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:46:01.984601380 -0500\n+++ /tmp/Arja_Defects4J_Closure_129/patches_ulrg/Patch_830/patched/tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:59:34.272719521 -0500\n@@ -1425,11 +1425,7 @@\n   public String checkTreeEquals(Node node2) {\n       NodeMismatch diff = checkTreeEqualsImpl(node2);\n       if (diff != null) {\n-        return \"Node tree inequality:\" +\n-            \"\\nTree1:\\n\" + toStringTree() +\n-            \"\\n\\nTree2:\\n\" + node2.toStringTree() +\n-            \"\\n\\nSubtree1: \" + diff.nodeA.toStringTree() +\n-            \"\\n\\nSubtree2: \" + diff.nodeB.toStringTree();\n+        return \"RETURN\";\n       }\n       return null;\n   }\n@@ -1543,7 +1539,6 @@\n       }\n     } else if (type == Token.CALL) {\n       if (this.getBooleanProp(FREE_CALL) != node.getBooleanProp(FREE_CALL)) {\n-        return false;\n       }\n     }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1546, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 1323, 
          "faulty": "Preconditions.checkArgument(n.isGetElem());", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/CodeGenerator.java", 
          "line": 531, 
          "faulty": "addExpr(first,NodeUtil.precedence(Token.COMMA),Context.OTHER);", 
          "type": "Delete", 
          "seed": "break;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 08:46:01.972601364 -0500\n+++ /tmp/Arja_Defects4J_Closure_129/patches_ulrg/Patch_1263/patched/tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 09:03:50.564340140 -0500\n@@ -1320,8 +1320,6 @@\n    * Try to fold array-element. e.g [1, 2, 3][10];\n    */\n   private Node tryFoldGetElem(Node n, Node left, Node right) {\n-    Preconditions.checkArgument(n.isGetElem());\n-\n     if (left.isObjectLit()) {\n       return tryFoldObjectPropAccess(n, left, right);\n     }\n\n\n--- /tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:46:01.984601380 -0500\n+++ /tmp/Arja_Defects4J_Closure_129/patches_ulrg/Patch_1263/patched/tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-01 09:03:50.564340140 -0500\n@@ -1543,7 +1543,7 @@\n       }\n     } else if (type == Token.CALL) {\n       if (this.getBooleanProp(FREE_CALL) != node.getBooleanProp(FREE_CALL)) {\n-        return false;\n+        return true;\n       }\n     }\n \n\n\n--- /tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/jscomp/CodeGenerator.java\t2018-12-01 08:46:01.956601345 -0500\n+++ /tmp/Arja_Defects4J_Closure_129/patches_ulrg/Patch_1263/patched/tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/jscomp/CodeGenerator.java\t2018-12-01 09:03:50.564340140 -0500\n@@ -528,7 +528,6 @@\n         if (isIndirectEval(first)\n             || n.getBooleanProp(Node.FREE_CALL) && NodeUtil.isGet(first)) {\n           add(\"(0,\");\n-          addExpr(first, NodeUtil.precedence(Token.COMMA), Context.OTHER);\n           add(\")\");\n         } else {\n           addExpr(first, NodeUtil.precedence(type), context);\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1546, 
          "faulty": "return false;", 
          "type": "Delete", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/ConvertToDottedProperties.java", 
          "line": 64, 
          "faulty": "compiler.reportCodeChange();", 
          "type": "Delete", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 1329, 
          "faulty": "if (left.isArrayLit()) {\n  return tryFoldArrayAccess(n,left,right);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 08:46:01.972601364 -0500\n+++ /tmp/Arja_Defects4J_Closure_129/patches_ulrg/Patch_22/patched/tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 08:51:50.884972322 -0500\n@@ -1326,9 +1326,6 @@\n       return tryFoldObjectPropAccess(n, left, right);\n     }\n \n-    if (left.isArrayLit()) {\n-      return tryFoldArrayAccess(n, left, right);\n-    }\n     return n;\n   }\n \n\n\n--- /tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:46:01.984601380 -0500\n+++ /tmp/Arja_Defects4J_Closure_129/patches_ulrg/Patch_22/patched/tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:51:50.884972322 -0500\n@@ -1543,7 +1543,6 @@\n       }\n     } else if (type == Token.CALL) {\n       if (this.getBooleanProp(FREE_CALL) != node.getBooleanProp(FREE_CALL)) {\n-        return false;\n       }\n     }\n \n\n\n--- /tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/jscomp/ConvertToDottedProperties.java\t2018-12-01 08:46:01.752601087 -0500\n+++ /tmp/Arja_Defects4J_Closure_129/patches_ulrg/Patch_22/patched/tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/jscomp/ConvertToDottedProperties.java\t2018-12-01 08:51:50.888972326 -0500\n@@ -61,7 +61,6 @@\n           n.removeChild(left);\n           n.removeChild(right);\n           parent.replaceChild(n, IR.getprop(left, right));\n-          compiler.reportCodeChange();\n         }\n         break;\n     }\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1546, 
          "faulty": "return false;", 
          "type": "Delete", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 1329, 
          "faulty": "if (left.isArrayLit()) {\n  return tryFoldArrayAccess(n,left,right);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 08:46:01.972601364 -0500\n+++ /tmp/Arja_Defects4J_Closure_129/patches_ulrg/Patch_1408/patched/tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 09:05:17.064275027 -0500\n@@ -1326,9 +1326,6 @@\n       return tryFoldObjectPropAccess(n, left, right);\n     }\n \n-    if (left.isArrayLit()) {\n-      return tryFoldArrayAccess(n, left, right);\n-    }\n     return n;\n   }\n \n\n\n--- /tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:46:01.984601380 -0500\n+++ /tmp/Arja_Defects4J_Closure_129/patches_ulrg/Patch_1408/patched/tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-01 09:05:17.064275027 -0500\n@@ -1543,7 +1543,6 @@\n       }\n     } else if (type == Token.CALL) {\n       if (this.getBooleanProp(FREE_CALL) != node.getBooleanProp(FREE_CALL)) {\n-        return false;\n       }\n     }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1546, 
          "faulty": "return false;", 
          "type": "Delete", 
          "seed": "return getBooleanProp(VAR_ARGS_NAME);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 1323, 
          "faulty": "Preconditions.checkArgument(n.isGetElem());", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/CodeGenerator.java", 
          "line": 532, 
          "faulty": "add(\")\");", 
          "type": "Replace", 
          "seed": "break;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 08:46:01.972601364 -0500\n+++ /tmp/Arja_Defects4J_Closure_129/patches_ulrg/Patch_180/patched/tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 08:53:15.489055563 -0500\n@@ -1320,8 +1320,6 @@\n    * Try to fold array-element. e.g [1, 2, 3][10];\n    */\n   private Node tryFoldGetElem(Node n, Node left, Node right) {\n-    Preconditions.checkArgument(n.isGetElem());\n-\n     if (left.isObjectLit()) {\n       return tryFoldObjectPropAccess(n, left, right);\n     }\n\n\n--- /tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:46:01.984601380 -0500\n+++ /tmp/Arja_Defects4J_Closure_129/patches_ulrg/Patch_180/patched/tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:53:15.489055563 -0500\n@@ -1543,7 +1543,6 @@\n       }\n     } else if (type == Token.CALL) {\n       if (this.getBooleanProp(FREE_CALL) != node.getBooleanProp(FREE_CALL)) {\n-        return false;\n       }\n     }\n \n\n\n--- /tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/jscomp/CodeGenerator.java\t2018-12-01 08:46:01.956601345 -0500\n+++ /tmp/Arja_Defects4J_Closure_129/patches_ulrg/Patch_180/patched/tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/jscomp/CodeGenerator.java\t2018-12-01 08:53:15.489055563 -0500\n@@ -529,7 +529,7 @@\n             || n.getBooleanProp(Node.FREE_CALL) && NodeUtil.isGet(first)) {\n           add(\"(0,\");\n           addExpr(first, NodeUtil.precedence(Token.COMMA), Context.OTHER);\n-          add(\")\");\n+          break;\n         } else {\n           addExpr(first, NodeUtil.precedence(type), context);\n         }\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1546, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeReplaceKnownMethods.java", 
          "line": 403, 
          "faulty": "return n;", 
          "type": "Delete", 
          "seed": "return this;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/jscomp/PeepholeReplaceKnownMethods.java\t2018-12-01 08:46:01.972601364 -0500\n+++ /tmp/Arja_Defects4J_Closure_129/patches_ulrg/Patch_1331/patched/tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/jscomp/PeepholeReplaceKnownMethods.java\t2018-12-01 09:04:29.672304987 -0500\n@@ -400,7 +400,6 @@\n     Node right = callTarget.getNext();\n     if (right != null) {\n       if (right.getNext() != null || !NodeUtil.isImmutableValue(right)) {\n-        return n;\n       }\n     }\n \n\n\n--- /tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:46:01.984601380 -0500\n+++ /tmp/Arja_Defects4J_Closure_129/patches_ulrg/Patch_1331/patched/tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-01 09:04:29.676304984 -0500\n@@ -1543,7 +1543,7 @@\n       }\n     } else if (type == Token.CALL) {\n       if (this.getBooleanProp(FREE_CALL) != node.getBooleanProp(FREE_CALL)) {\n-        return false;\n+        return true;\n       }\n     }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1457, 
          "faulty": "return res;", 
          "type": "Delete", 
          "seed": "sourcePosition=-1;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1546, 
          "faulty": "return false;", 
          "type": "Delete", 
          "seed": "this.sourcePosition=sourcePosition;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:46:01.984601380 -0500\n+++ /tmp/Arja_Defects4J_Closure_129/patches_ulrg/Patch_157/patched/tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:53:03.929043481 -0500\n@@ -1454,7 +1454,6 @@\n       }\n       res = n.checkTreeEqualsImpl(n2);\n       if (res != null) {\n-        return res;\n       }\n     }\n     return res;\n@@ -1543,7 +1542,6 @@\n       }\n     } else if (type == Token.CALL) {\n       if (this.getBooleanProp(FREE_CALL) != node.getBooleanProp(FREE_CALL)) {\n-        return false;\n       }\n     }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1546, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "this.sourcePosition=sourcePosition;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 1329, 
          "faulty": "if (left.isArrayLit()) {\n  return tryFoldArrayAccess(n,left,right);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 08:46:01.972601364 -0500\n+++ /tmp/Arja_Defects4J_Closure_129/patches_ulrg/Patch_845/patched/tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 08:59:42.112719753 -0500\n@@ -1326,9 +1326,6 @@\n       return tryFoldObjectPropAccess(n, left, right);\n     }\n \n-    if (left.isArrayLit()) {\n-      return tryFoldArrayAccess(n, left, right);\n-    }\n     return n;\n   }\n \n\n\n--- /tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:46:01.984601380 -0500\n+++ /tmp/Arja_Defects4J_Closure_129/patches_ulrg/Patch_845/patched/tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:59:42.112719753 -0500\n@@ -1543,7 +1543,7 @@\n       }\n     } else if (type == Token.CALL) {\n       if (this.getBooleanProp(FREE_CALL) != node.getBooleanProp(FREE_CALL)) {\n-        return false;\n+        this.sourcePosition = sourcePosition;\n       }\n     }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1546, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 1329, 
          "faulty": "if (left.isArrayLit()) {\n  return tryFoldArrayAccess(n,left,right);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 1332, 
          "faulty": "return n;", 
          "type": "Replace", 
          "seed": "return null;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 08:46:01.972601364 -0500\n+++ /tmp/Arja_Defects4J_Closure_129/patches_ulrg/Patch_177/patched/tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 08:53:13.777053761 -0500\n@@ -1326,10 +1326,7 @@\n       return tryFoldObjectPropAccess(n, left, right);\n     }\n \n-    if (left.isArrayLit()) {\n-      return tryFoldArrayAccess(n, left, right);\n-    }\n-    return n;\n+    return null;\n   }\n \n   /**\n\n\n--- /tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:46:01.984601380 -0500\n+++ /tmp/Arja_Defects4J_Closure_129/patches_ulrg/Patch_177/patched/tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:53:13.777053761 -0500\n@@ -1543,7 +1543,7 @@\n       }\n     } else if (type == Token.CALL) {\n       if (this.getBooleanProp(FREE_CALL) != node.getBooleanProp(FREE_CALL)) {\n-        return false;\n+        return true;\n       }\n     }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1546, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/ConvertToDottedProperties.java", 
          "line": 64, 
          "faulty": "compiler.reportCodeChange();", 
          "type": "Delete", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 1329, 
          "faulty": "if (left.isArrayLit()) {\n  return tryFoldArrayAccess(n,left,right);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 08:46:01.972601364 -0500\n+++ /tmp/Arja_Defects4J_Closure_129/patches_ulrg/Patch_74/patched/tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 08:52:19.452999008 -0500\n@@ -1326,9 +1326,6 @@\n       return tryFoldObjectPropAccess(n, left, right);\n     }\n \n-    if (left.isArrayLit()) {\n-      return tryFoldArrayAccess(n, left, right);\n-    }\n     return n;\n   }\n \n\n\n--- /tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:46:01.984601380 -0500\n+++ /tmp/Arja_Defects4J_Closure_129/patches_ulrg/Patch_74/patched/tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:52:19.456999012 -0500\n@@ -1543,7 +1543,7 @@\n       }\n     } else if (type == Token.CALL) {\n       if (this.getBooleanProp(FREE_CALL) != node.getBooleanProp(FREE_CALL)) {\n-        return false;\n+        return true;\n       }\n     }\n \n\n\n--- /tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/jscomp/ConvertToDottedProperties.java\t2018-12-01 08:46:01.752601087 -0500\n+++ /tmp/Arja_Defects4J_Closure_129/patches_ulrg/Patch_74/patched/tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/jscomp/ConvertToDottedProperties.java\t2018-12-01 08:52:19.456999012 -0500\n@@ -61,7 +61,6 @@\n           n.removeChild(left);\n           n.removeChild(right);\n           parent.replaceChild(n, IR.getprop(left, right));\n-          compiler.reportCodeChange();\n         }\n         break;\n     }\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1546, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "this.sourcePosition=sourcePosition;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 1325, 
          "faulty": "if (left.isObjectLit()) {\n  return tryFoldObjectPropAccess(n,left,right);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 08:46:01.972601364 -0500\n+++ /tmp/Arja_Defects4J_Closure_129/patches_ulrg/Patch_645/patched/tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 08:57:45.580748565 -0500\n@@ -1322,10 +1322,6 @@\n   private Node tryFoldGetElem(Node n, Node left, Node right) {\n     Preconditions.checkArgument(n.isGetElem());\n \n-    if (left.isObjectLit()) {\n-      return tryFoldObjectPropAccess(n, left, right);\n-    }\n-\n     if (left.isArrayLit()) {\n       return tryFoldArrayAccess(n, left, right);\n     }\n\n\n--- /tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:46:01.984601380 -0500\n+++ /tmp/Arja_Defects4J_Closure_129/patches_ulrg/Patch_645/patched/tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:57:45.580748565 -0500\n@@ -1543,7 +1543,7 @@\n       }\n     } else if (type == Token.CALL) {\n       if (this.getBooleanProp(FREE_CALL) != node.getBooleanProp(FREE_CALL)) {\n-        return false;\n+        this.sourcePosition = sourcePosition;\n       }\n     }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1546, 
          "faulty": "return false;", 
          "type": "Delete", 
          "seed": "this.sourcePosition=sourcePosition;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 1323, 
          "faulty": "Preconditions.checkArgument(n.isGetElem());", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 1329, 
          "faulty": "if (left.isArrayLit()) {\n  return tryFoldArrayAccess(n,left,right);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 08:46:01.972601364 -0500\n+++ /tmp/Arja_Defects4J_Closure_129/patches_ulrg/Patch_205/patched/tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 08:53:30.049071060 -0500\n@@ -1320,15 +1320,10 @@\n    * Try to fold array-element. e.g [1, 2, 3][10];\n    */\n   private Node tryFoldGetElem(Node n, Node left, Node right) {\n-    Preconditions.checkArgument(n.isGetElem());\n-\n     if (left.isObjectLit()) {\n       return tryFoldObjectPropAccess(n, left, right);\n     }\n \n-    if (left.isArrayLit()) {\n-      return tryFoldArrayAccess(n, left, right);\n-    }\n     return n;\n   }\n \n\n\n--- /tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:46:01.984601380 -0500\n+++ /tmp/Arja_Defects4J_Closure_129/patches_ulrg/Patch_205/patched/tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:53:30.053071065 -0500\n@@ -1543,7 +1543,6 @@\n       }\n     } else if (type == Token.CALL) {\n       if (this.getBooleanProp(FREE_CALL) != node.getBooleanProp(FREE_CALL)) {\n-        return false;\n       }\n     }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1546, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 1323, 
          "faulty": "Preconditions.checkArgument(n.isGetElem());", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 1329, 
          "faulty": "if (left.isArrayLit()) {\n  return tryFoldArrayAccess(n,left,right);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 08:46:01.972601364 -0500\n+++ /tmp/Arja_Defects4J_Closure_129/patches_ulrg/Patch_1009/patched/tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 09:01:21.392593244 -0500\n@@ -1320,15 +1320,10 @@\n    * Try to fold array-element. e.g [1, 2, 3][10];\n    */\n   private Node tryFoldGetElem(Node n, Node left, Node right) {\n-    Preconditions.checkArgument(n.isGetElem());\n-\n     if (left.isObjectLit()) {\n       return tryFoldObjectPropAccess(n, left, right);\n     }\n \n-    if (left.isArrayLit()) {\n-      return tryFoldArrayAccess(n, left, right);\n-    }\n     return n;\n   }\n \n\n\n--- /tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:46:01.984601380 -0500\n+++ /tmp/Arja_Defects4J_Closure_129/patches_ulrg/Patch_1009/patched/tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-01 09:01:21.392593244 -0500\n@@ -1543,7 +1543,7 @@\n       }\n     } else if (type == Token.CALL) {\n       if (this.getBooleanProp(FREE_CALL) != node.getBooleanProp(FREE_CALL)) {\n-        return false;\n+        return true;\n       }\n     }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1546, 
          "faulty": "return false;", 
          "type": "Delete", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 1329, 
          "faulty": "if (left.isArrayLit()) {\n  return tryFoldArrayAccess(n,left,right);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 08:46:01.972601364 -0500\n+++ /tmp/Arja_Defects4J_Closure_129/patches_ulrg/Patch_69/patched/tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 08:52:17.336996978 -0500\n@@ -1326,9 +1326,6 @@\n       return tryFoldObjectPropAccess(n, left, right);\n     }\n \n-    if (left.isArrayLit()) {\n-      return tryFoldArrayAccess(n, left, right);\n-    }\n     return n;\n   }\n \n\n\n--- /tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:46:01.984601380 -0500\n+++ /tmp/Arja_Defects4J_Closure_129/patches_ulrg/Patch_69/patched/tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:52:17.340996982 -0500\n@@ -1543,7 +1543,6 @@\n       }\n     } else if (type == Token.CALL) {\n       if (this.getBooleanProp(FREE_CALL) != node.getBooleanProp(FREE_CALL)) {\n-        return false;\n       }\n     }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1546, 
          "faulty": "return false;", 
          "type": "Delete", 
          "seed": "return this.getType() == Token.BLOCK;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 1323, 
          "faulty": "Preconditions.checkArgument(n.isGetElem());", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 08:46:01.972601364 -0500\n+++ /tmp/Arja_Defects4J_Closure_129/patches_ulrg/Patch_1360/patched/tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 09:04:46.012293204 -0500\n@@ -1320,8 +1320,6 @@\n    * Try to fold array-element. e.g [1, 2, 3][10];\n    */\n   private Node tryFoldGetElem(Node n, Node left, Node right) {\n-    Preconditions.checkArgument(n.isGetElem());\n-\n     if (left.isObjectLit()) {\n       return tryFoldObjectPropAccess(n, left, right);\n     }\n\n\n--- /tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:46:01.984601380 -0500\n+++ /tmp/Arja_Defects4J_Closure_129/patches_ulrg/Patch_1360/patched/tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-01 09:04:46.012293204 -0500\n@@ -1543,7 +1543,6 @@\n       }\n     } else if (type == Token.CALL) {\n       if (this.getBooleanProp(FREE_CALL) != node.getBooleanProp(FREE_CALL)) {\n-        return false;\n       }\n     }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1546, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 1323, 
          "faulty": "Preconditions.checkArgument(n.isGetElem());", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 08:46:01.972601364 -0500\n+++ /tmp/Arja_Defects4J_Closure_129/patches_ulrg/Patch_679/patched/tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 08:58:04.272738708 -0500\n@@ -1320,8 +1320,6 @@\n    * Try to fold array-element. e.g [1, 2, 3][10];\n    */\n   private Node tryFoldGetElem(Node n, Node left, Node right) {\n-    Preconditions.checkArgument(n.isGetElem());\n-\n     if (left.isObjectLit()) {\n       return tryFoldObjectPropAccess(n, left, right);\n     }\n\n\n--- /tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:46:01.984601380 -0500\n+++ /tmp/Arja_Defects4J_Closure_129/patches_ulrg/Patch_679/patched/tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:58:04.276738706 -0500\n@@ -1543,7 +1543,7 @@\n       }\n     } else if (type == Token.CALL) {\n       if (this.getBooleanProp(FREE_CALL) != node.getBooleanProp(FREE_CALL)) {\n-        return false;\n+        return true;\n       }\n     }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1546, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 1323, 
          "faulty": "Preconditions.checkArgument(n.isGetElem());", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 08:46:01.972601364 -0500\n+++ /tmp/Arja_Defects4J_Closure_129/patches_ulrg/Patch_407/patched/tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 08:55:24.740913279 -0500\n@@ -1320,8 +1320,6 @@\n    * Try to fold array-element. e.g [1, 2, 3][10];\n    */\n   private Node tryFoldGetElem(Node n, Node left, Node right) {\n-    Preconditions.checkArgument(n.isGetElem());\n-\n     if (left.isObjectLit()) {\n       return tryFoldObjectPropAccess(n, left, right);\n     }\n\n\n--- /tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:46:01.984601380 -0500\n+++ /tmp/Arja_Defects4J_Closure_129/patches_ulrg/Patch_407/patched/tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:55:24.744913271 -0500\n@@ -1543,7 +1543,7 @@\n       }\n     } else if (type == Token.CALL) {\n       if (this.getBooleanProp(FREE_CALL) != node.getBooleanProp(FREE_CALL)) {\n-        return false;\n+        return true;\n       }\n     }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 132, 
          "faulty": "return \"free_call\";", 
          "type": "Replace", 
          "seed": "return \"BLOCK\";"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1546, 
          "faulty": "return false;", 
          "type": "Delete", 
          "seed": "return true;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:46:01.984601380 -0500\n+++ /tmp/Arja_Defects4J_Closure_129/patches_ulrg/Patch_151/patched/tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:53:00.681040123 -0500\n@@ -129,7 +129,7 @@\n         case IS_DISPATCHER:      return \"is_dispatcher\";\n         case DIRECTIVES:         return \"directives\";\n         case DIRECT_EVAL:        return \"direct_eval\";\n-        case FREE_CALL:          return \"free_call\";\n+        case FREE_CALL:          return \"BLOCK\";\n         case STATIC_SOURCE_FILE:    return \"source_file\";\n         case INPUT_ID:  return \"input_id\";\n         case LENGTH:    return \"length\";\n@@ -1543,7 +1543,6 @@\n       }\n     } else if (type == Token.CALL) {\n       if (this.getBooleanProp(FREE_CALL) != node.getBooleanProp(FREE_CALL)) {\n-        return false;\n       }\n     }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1546, 
          "faulty": "return false;", 
          "type": "Delete", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 1323, 
          "faulty": "Preconditions.checkArgument(n.isGetElem());", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 08:46:01.972601364 -0500\n+++ /tmp/Arja_Defects4J_Closure_129/patches_ulrg/Patch_126/patched/tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 08:52:48.321027498 -0500\n@@ -1320,8 +1320,6 @@\n    * Try to fold array-element. e.g [1, 2, 3][10];\n    */\n   private Node tryFoldGetElem(Node n, Node left, Node right) {\n-    Preconditions.checkArgument(n.isGetElem());\n-\n     if (left.isObjectLit()) {\n       return tryFoldObjectPropAccess(n, left, right);\n     }\n\n\n--- /tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:46:01.984601380 -0500\n+++ /tmp/Arja_Defects4J_Closure_129/patches_ulrg/Patch_126/patched/tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:52:48.325027502 -0500\n@@ -1543,7 +1543,6 @@\n       }\n     } else if (type == Token.CALL) {\n       if (this.getBooleanProp(FREE_CALL) != node.getBooleanProp(FREE_CALL)) {\n-        return false;\n       }\n     }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1546, 
          "faulty": "return false;", 
          "type": "Delete", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 1323, 
          "faulty": "Preconditions.checkArgument(n.isGetElem());", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 08:46:01.972601364 -0500\n+++ /tmp/Arja_Defects4J_Closure_129/patches_ulrg/Patch_871/patched/tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 08:59:57.096720927 -0500\n@@ -1320,8 +1320,6 @@\n    * Try to fold array-element. e.g [1, 2, 3][10];\n    */\n   private Node tryFoldGetElem(Node n, Node left, Node right) {\n-    Preconditions.checkArgument(n.isGetElem());\n-\n     if (left.isObjectLit()) {\n       return tryFoldObjectPropAccess(n, left, right);\n     }\n\n\n--- /tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:46:01.984601380 -0500\n+++ /tmp/Arja_Defects4J_Closure_129/patches_ulrg/Patch_871/patched/tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:59:57.096720927 -0500\n@@ -1543,7 +1543,6 @@\n       }\n     } else if (type == Token.CALL) {\n       if (this.getBooleanProp(FREE_CALL) != node.getBooleanProp(FREE_CALL)) {\n-        return false;\n       }\n     }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 132, 
          "faulty": "return \"free_call\";", 
          "type": "Replace", 
          "seed": "return \"ADD\";"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1546, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "this.sourcePosition=sourcePosition;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 1329, 
          "faulty": "if (left.isArrayLit()) {\n  return tryFoldArrayAccess(n,left,right);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 08:46:01.972601364 -0500\n+++ /tmp/Arja_Defects4J_Closure_129/patches_ulrg/Patch_531/patched/tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 08:56:36.876806636 -0500\n@@ -1326,9 +1326,6 @@\n       return tryFoldObjectPropAccess(n, left, right);\n     }\n \n-    if (left.isArrayLit()) {\n-      return tryFoldArrayAccess(n, left, right);\n-    }\n     return n;\n   }\n \n\n\n--- /tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:46:01.984601380 -0500\n+++ /tmp/Arja_Defects4J_Closure_129/patches_ulrg/Patch_531/patched/tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:56:36.876806636 -0500\n@@ -129,7 +129,7 @@\n         case IS_DISPATCHER:      return \"is_dispatcher\";\n         case DIRECTIVES:         return \"directives\";\n         case DIRECT_EVAL:        return \"direct_eval\";\n-        case FREE_CALL:          return \"free_call\";\n+        case FREE_CALL:          return \"ADD\";\n         case STATIC_SOURCE_FILE:    return \"source_file\";\n         case INPUT_ID:  return \"input_id\";\n         case LENGTH:    return \"length\";\n@@ -1543,7 +1543,7 @@\n       }\n     } else if (type == Token.CALL) {\n       if (this.getBooleanProp(FREE_CALL) != node.getBooleanProp(FREE_CALL)) {\n-        return false;\n+        this.sourcePosition = sourcePosition;\n       }\n     }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1546, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "this.sourcePosition=sourcePosition;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 1323, 
          "faulty": "Preconditions.checkArgument(n.isGetElem());", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 08:46:01.972601364 -0500\n+++ /tmp/Arja_Defects4J_Closure_129/patches_ulrg/Patch_369/patched/tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 08:55:03.976954644 -0500\n@@ -1320,8 +1320,6 @@\n    * Try to fold array-element. e.g [1, 2, 3][10];\n    */\n   private Node tryFoldGetElem(Node n, Node left, Node right) {\n-    Preconditions.checkArgument(n.isGetElem());\n-\n     if (left.isObjectLit()) {\n       return tryFoldObjectPropAccess(n, left, right);\n     }\n\n\n--- /tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:46:01.984601380 -0500\n+++ /tmp/Arja_Defects4J_Closure_129/patches_ulrg/Patch_369/patched/tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:55:03.976954644 -0500\n@@ -1543,7 +1543,7 @@\n       }\n     } else if (type == Token.CALL) {\n       if (this.getBooleanProp(FREE_CALL) != node.getBooleanProp(FREE_CALL)) {\n-        return false;\n+        this.sourcePosition = sourcePosition;\n       }\n     }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1546, 
          "faulty": "return false;", 
          "type": "Delete", 
          "seed": "this.sourcePosition=sourcePosition;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 1329, 
          "faulty": "if (left.isArrayLit()) {\n  return tryFoldArrayAccess(n,left,right);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 08:46:01.972601364 -0500\n+++ /tmp/Arja_Defects4J_Closure_129/patches_ulrg/Patch_1001/patched/tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 09:01:16.712605097 -0500\n@@ -1326,9 +1326,6 @@\n       return tryFoldObjectPropAccess(n, left, right);\n     }\n \n-    if (left.isArrayLit()) {\n-      return tryFoldArrayAccess(n, left, right);\n-    }\n     return n;\n   }\n \n\n\n--- /tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:46:01.984601380 -0500\n+++ /tmp/Arja_Defects4J_Closure_129/patches_ulrg/Patch_1001/patched/tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-01 09:01:16.712605097 -0500\n@@ -1543,7 +1543,6 @@\n       }\n     } else if (type == Token.CALL) {\n       if (this.getBooleanProp(FREE_CALL) != node.getBooleanProp(FREE_CALL)) {\n-        return false;\n       }\n     }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1428, 
          "faulty": "return \"Node tree inequality:\" + \"\\nTree1:\\n\" + toStringTree() + \"\\n\\nTree2:\\n\"+ node2.toStringTree()+ \"\\n\\nSubtree1: \"+ diff.nodeA.toStringTree()+ \"\\n\\nSubtree2: \"+ diff.nodeB.toStringTree();", 
          "type": "InsertBefore", 
          "seed": "this.sourcePosition=sourcePosition;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1546, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 1323, 
          "faulty": "Preconditions.checkArgument(n.isGetElem());", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 08:46:01.972601364 -0500\n+++ /tmp/Arja_Defects4J_Closure_129/patches_ulrg/Patch_673/patched/tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 08:58:00.932740302 -0500\n@@ -1320,8 +1320,6 @@\n    * Try to fold array-element. e.g [1, 2, 3][10];\n    */\n   private Node tryFoldGetElem(Node n, Node left, Node right) {\n-    Preconditions.checkArgument(n.isGetElem());\n-\n     if (left.isObjectLit()) {\n       return tryFoldObjectPropAccess(n, left, right);\n     }\n\n\n--- /tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:46:01.984601380 -0500\n+++ /tmp/Arja_Defects4J_Closure_129/patches_ulrg/Patch_673/patched/tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:58:00.932740302 -0500\n@@ -1425,7 +1425,8 @@\n   public String checkTreeEquals(Node node2) {\n       NodeMismatch diff = checkTreeEqualsImpl(node2);\n       if (diff != null) {\n-        return \"Node tree inequality:\" +\n+        this.sourcePosition = sourcePosition;\n+\t\treturn \"Node tree inequality:\" +\n             \"\\nTree1:\\n\" + toStringTree() +\n             \"\\n\\nTree2:\\n\" + node2.toStringTree() +\n             \"\\n\\nSubtree1: \" + diff.nodeA.toStringTree() +\n@@ -1543,7 +1544,7 @@\n       }\n     } else if (type == Token.CALL) {\n       if (this.getBooleanProp(FREE_CALL) != node.getBooleanProp(FREE_CALL)) {\n-        return false;\n+        return true;\n       }\n     }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1546, 
          "faulty": "return false;", 
          "type": "Delete", 
          "seed": "if (type == Token.INC || type == Token.DEC) {\n  int post1=this.getIntProp(INCRDECR_PROP);\n  int post2=node.getIntProp(INCRDECR_PROP);\n  if (post1 != post2) {\n    return false;\n  }\n}\n else if (type == Token.STRING || type == Token.STRING_KEY) {\n  if (type == Token.STRING_KEY) {\n    int quoted1=this.getIntProp(QUOTED_PROP);\n    int quoted2=node.getIntProp(QUOTED_PROP);\n    if (quoted1 != quoted2) {\n      return false;\n    }\n  }\n  int slashV1=this.getIntProp(SLASH_V);\n  int slashV2=node.getIntProp(SLASH_V);\n  if (slashV1 != slashV2) {\n    return false;\n  }\n}\n else if (type == Token.CALL) {\n  if (this.getBooleanProp(FREE_CALL) != node.getBooleanProp(FREE_CALL)) {\n    return false;\n  }\n}"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 1325, 
          "faulty": "if (left.isObjectLit()) {\n  return tryFoldObjectPropAccess(n,left,right);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 08:46:01.972601364 -0500\n+++ /tmp/Arja_Defects4J_Closure_129/patches_ulrg/Patch_1188/patched/tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 09:03:06.988392470 -0500\n@@ -1322,10 +1322,6 @@\n   private Node tryFoldGetElem(Node n, Node left, Node right) {\n     Preconditions.checkArgument(n.isGetElem());\n \n-    if (left.isObjectLit()) {\n-      return tryFoldObjectPropAccess(n, left, right);\n-    }\n-\n     if (left.isArrayLit()) {\n       return tryFoldArrayAccess(n, left, right);\n     }\n\n\n--- /tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:46:01.984601380 -0500\n+++ /tmp/Arja_Defects4J_Closure_129/patches_ulrg/Patch_1188/patched/tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-01 09:03:06.988392470 -0500\n@@ -1543,7 +1543,6 @@\n       }\n     } else if (type == Token.CALL) {\n       if (this.getBooleanProp(FREE_CALL) != node.getBooleanProp(FREE_CALL)) {\n-        return false;\n       }\n     }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1546, 
          "faulty": "return false;", 
          "type": "Delete", 
          "seed": "if (type == Token.STRING_KEY) {\n  int quoted1=this.getIntProp(QUOTED_PROP);\n  int quoted2=node.getIntProp(QUOTED_PROP);\n  if (quoted1 != quoted2) {\n    return false;\n  }\n}"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 1329, 
          "faulty": "if (left.isArrayLit()) {\n  return tryFoldArrayAccess(n,left,right);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 08:46:01.972601364 -0500\n+++ /tmp/Arja_Defects4J_Closure_129/patches_ulrg/Patch_95/patched/tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 08:52:31.001010230 -0500\n@@ -1326,9 +1326,6 @@\n       return tryFoldObjectPropAccess(n, left, right);\n     }\n \n-    if (left.isArrayLit()) {\n-      return tryFoldArrayAccess(n, left, right);\n-    }\n     return n;\n   }\n \n\n\n--- /tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:46:01.984601380 -0500\n+++ /tmp/Arja_Defects4J_Closure_129/patches_ulrg/Patch_95/patched/tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:52:31.001010230 -0500\n@@ -1543,7 +1543,6 @@\n       }\n     } else if (type == Token.CALL) {\n       if (this.getBooleanProp(FREE_CALL) != node.getBooleanProp(FREE_CALL)) {\n-        return false;\n       }\n     }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1546, 
          "faulty": "return false;", 
          "type": "Delete", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 1323, 
          "faulty": "Preconditions.checkArgument(n.isGetElem());", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 08:46:01.972601364 -0500\n+++ /tmp/Arja_Defects4J_Closure_129/patches_ulrg/Patch_1251/patched/tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 09:03:44.088346986 -0500\n@@ -1320,8 +1320,6 @@\n    * Try to fold array-element. e.g [1, 2, 3][10];\n    */\n   private Node tryFoldGetElem(Node n, Node left, Node right) {\n-    Preconditions.checkArgument(n.isGetElem());\n-\n     if (left.isObjectLit()) {\n       return tryFoldObjectPropAccess(n, left, right);\n     }\n\n\n--- /tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:46:01.984601380 -0500\n+++ /tmp/Arja_Defects4J_Closure_129/patches_ulrg/Patch_1251/patched/tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-01 09:03:44.092346982 -0500\n@@ -1543,7 +1543,6 @@\n       }\n     } else if (type == Token.CALL) {\n       if (this.getBooleanProp(FREE_CALL) != node.getBooleanProp(FREE_CALL)) {\n-        return false;\n       }\n     }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1546, 
          "faulty": "return false;", 
          "type": "Delete", 
          "seed": "this.sourcePosition=sourcePosition;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 1325, 
          "faulty": "if (left.isObjectLit()) {\n  return tryFoldObjectPropAccess(n,left,right);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 08:46:01.972601364 -0500\n+++ /tmp/Arja_Defects4J_Closure_129/patches_ulrg/Patch_267/patched/tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 08:54:04.609061364 -0500\n@@ -1322,10 +1322,6 @@\n   private Node tryFoldGetElem(Node n, Node left, Node right) {\n     Preconditions.checkArgument(n.isGetElem());\n \n-    if (left.isObjectLit()) {\n-      return tryFoldObjectPropAccess(n, left, right);\n-    }\n-\n     if (left.isArrayLit()) {\n       return tryFoldArrayAccess(n, left, right);\n     }\n\n\n--- /tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:46:01.984601380 -0500\n+++ /tmp/Arja_Defects4J_Closure_129/patches_ulrg/Patch_267/patched/tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:54:04.613061356 -0500\n@@ -1543,7 +1543,6 @@\n       }\n     } else if (type == Token.CALL) {\n       if (this.getBooleanProp(FREE_CALL) != node.getBooleanProp(FREE_CALL)) {\n-        return false;\n       }\n     }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1546, 
          "faulty": "return false;", 
          "type": "Delete", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 1323, 
          "faulty": "Preconditions.checkArgument(n.isGetElem());", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/CodeGenerator.java", 
          "line": 530, 
          "faulty": "add(\"(0,\");", 
          "type": "Delete", 
          "seed": "break;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 08:46:01.972601364 -0500\n+++ /tmp/Arja_Defects4J_Closure_129/patches_ulrg/Patch_1069/patched/tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 09:01:56.372513327 -0500\n@@ -1320,8 +1320,6 @@\n    * Try to fold array-element. e.g [1, 2, 3][10];\n    */\n   private Node tryFoldGetElem(Node n, Node left, Node right) {\n-    Preconditions.checkArgument(n.isGetElem());\n-\n     if (left.isObjectLit()) {\n       return tryFoldObjectPropAccess(n, left, right);\n     }\n\n\n--- /tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:46:01.984601380 -0500\n+++ /tmp/Arja_Defects4J_Closure_129/patches_ulrg/Patch_1069/patched/tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-01 09:01:56.372513327 -0500\n@@ -1543,7 +1543,6 @@\n       }\n     } else if (type == Token.CALL) {\n       if (this.getBooleanProp(FREE_CALL) != node.getBooleanProp(FREE_CALL)) {\n-        return false;\n       }\n     }\n \n\n\n--- /tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/jscomp/CodeGenerator.java\t2018-12-01 08:46:01.956601345 -0500\n+++ /tmp/Arja_Defects4J_Closure_129/patches_ulrg/Patch_1069/patched/tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/jscomp/CodeGenerator.java\t2018-12-01 09:01:56.376513319 -0500\n@@ -527,7 +527,6 @@\n         // that must be preserved.\n         if (isIndirectEval(first)\n             || n.getBooleanProp(Node.FREE_CALL) && NodeUtil.isGet(first)) {\n-          add(\"(0,\");\n           addExpr(first, NodeUtil.precedence(Token.COMMA), Context.OTHER);\n           add(\")\");\n         } else {\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1546, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "this.sourcePosition=sourcePosition;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/NodeUtil.java", 
          "line": 3165, 
          "faulty": "return isExpressionResultUsed(parent);", 
          "type": "Replace", 
          "seed": "break;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/jscomp/NodeUtil.java\t2018-12-01 08:46:01.968601359 -0500\n+++ /tmp/Arja_Defects4J_Closure_129/patches_ulrg/Patch_1047/patched/tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/jscomp/NodeUtil.java\t2018-12-01 09:01:43.328541401 -0500\n@@ -3162,7 +3162,7 @@\n       case Token.EXPR_RESULT:\n         return false;\n       case Token.CAST:\n-        return isExpressionResultUsed(parent);\n+        break;\n       case Token.HOOK:\n       case Token.AND:\n       case Token.OR:\n\n\n--- /tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:46:01.984601380 -0500\n+++ /tmp/Arja_Defects4J_Closure_129/patches_ulrg/Patch_1047/patched/tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-01 09:01:43.332541392 -0500\n@@ -1543,7 +1543,7 @@\n       }\n     } else if (type == Token.CALL) {\n       if (this.getBooleanProp(FREE_CALL) != node.getBooleanProp(FREE_CALL)) {\n-        return false;\n+        this.sourcePosition = sourcePosition;\n       }\n     }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1546, 
          "faulty": "return false;", 
          "type": "Delete", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 1323, 
          "faulty": "Preconditions.checkArgument(n.isGetElem());", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 08:46:01.972601364 -0500\n+++ /tmp/Arja_Defects4J_Closure_129/patches_ulrg/Patch_253/patched/tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 08:53:57.201076858 -0500\n@@ -1320,8 +1320,6 @@\n    * Try to fold array-element. e.g [1, 2, 3][10];\n    */\n   private Node tryFoldGetElem(Node n, Node left, Node right) {\n-    Preconditions.checkArgument(n.isGetElem());\n-\n     if (left.isObjectLit()) {\n       return tryFoldObjectPropAccess(n, left, right);\n     }\n\n\n--- /tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:46:01.984601380 -0500\n+++ /tmp/Arja_Defects4J_Closure_129/patches_ulrg/Patch_253/patched/tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:53:57.201076858 -0500\n@@ -1543,7 +1543,6 @@\n       }\n     } else if (type == Token.CALL) {\n       if (this.getBooleanProp(FREE_CALL) != node.getBooleanProp(FREE_CALL)) {\n-        return false;\n       }\n     }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1546, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 1329, 
          "faulty": "if (left.isArrayLit()) {\n  return tryFoldArrayAccess(n,left,right);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 08:46:01.972601364 -0500\n+++ /tmp/Arja_Defects4J_Closure_129/patches_ulrg/Patch_434/patched/tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 08:55:41.120884255 -0500\n@@ -1326,9 +1326,6 @@\n       return tryFoldObjectPropAccess(n, left, right);\n     }\n \n-    if (left.isArrayLit()) {\n-      return tryFoldArrayAccess(n, left, right);\n-    }\n     return n;\n   }\n \n\n\n--- /tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:46:01.984601380 -0500\n+++ /tmp/Arja_Defects4J_Closure_129/patches_ulrg/Patch_434/patched/tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:55:41.124884249 -0500\n@@ -1543,7 +1543,7 @@\n       }\n     } else if (type == Token.CALL) {\n       if (this.getBooleanProp(FREE_CALL) != node.getBooleanProp(FREE_CALL)) {\n-        return false;\n+        return true;\n       }\n     }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1457, 
          "faulty": "return res;", 
          "type": "InsertBefore", 
          "seed": "this.sourcePosition=sourcePosition;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1546, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 1329, 
          "faulty": "if (left.isArrayLit()) {\n  return tryFoldArrayAccess(n,left,right);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 08:46:01.972601364 -0500\n+++ /tmp/Arja_Defects4J_Closure_129/patches_ulrg/Patch_1368/patched/tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 09:04:50.612290173 -0500\n@@ -1326,9 +1326,6 @@\n       return tryFoldObjectPropAccess(n, left, right);\n     }\n \n-    if (left.isArrayLit()) {\n-      return tryFoldArrayAccess(n, left, right);\n-    }\n     return n;\n   }\n \n\n\n--- /tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:46:01.984601380 -0500\n+++ /tmp/Arja_Defects4J_Closure_129/patches_ulrg/Patch_1368/patched/tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-01 09:04:50.612290173 -0500\n@@ -1454,7 +1454,8 @@\n       }\n       res = n.checkTreeEqualsImpl(n2);\n       if (res != null) {\n-        return res;\n+        this.sourcePosition = sourcePosition;\n+\t\treturn res;\n       }\n     }\n     return res;\n@@ -1543,7 +1544,7 @@\n       }\n     } else if (type == Token.CALL) {\n       if (this.getBooleanProp(FREE_CALL) != node.getBooleanProp(FREE_CALL)) {\n-        return false;\n+        return true;\n       }\n     }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1546, 
          "faulty": "return false;", 
          "type": "Delete", 
          "seed": "return getBooleanProp(VAR_ARGS_NAME);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 1325, 
          "faulty": "if (left.isObjectLit()) {\n  return tryFoldObjectPropAccess(n,left,right);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/CodeGenerator.java", 
          "line": 531, 
          "faulty": "addExpr(first,NodeUtil.precedence(Token.COMMA),Context.OTHER);", 
          "type": "Delete", 
          "seed": "break;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 08:46:01.972601364 -0500\n+++ /tmp/Arja_Defects4J_Closure_129/patches_ulrg/Patch_28/patched/tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 08:51:54.328975454 -0500\n@@ -1322,10 +1322,6 @@\n   private Node tryFoldGetElem(Node n, Node left, Node right) {\n     Preconditions.checkArgument(n.isGetElem());\n \n-    if (left.isObjectLit()) {\n-      return tryFoldObjectPropAccess(n, left, right);\n-    }\n-\n     if (left.isArrayLit()) {\n       return tryFoldArrayAccess(n, left, right);\n     }\n\n\n--- /tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:46:01.984601380 -0500\n+++ /tmp/Arja_Defects4J_Closure_129/patches_ulrg/Patch_28/patched/tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:51:54.328975454 -0500\n@@ -1543,7 +1543,6 @@\n       }\n     } else if (type == Token.CALL) {\n       if (this.getBooleanProp(FREE_CALL) != node.getBooleanProp(FREE_CALL)) {\n-        return false;\n       }\n     }\n \n\n\n--- /tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/jscomp/CodeGenerator.java\t2018-12-01 08:46:01.956601345 -0500\n+++ /tmp/Arja_Defects4J_Closure_129/patches_ulrg/Patch_28/patched/tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/jscomp/CodeGenerator.java\t2018-12-01 08:51:54.332975458 -0500\n@@ -528,7 +528,6 @@\n         if (isIndirectEval(first)\n             || n.getBooleanProp(Node.FREE_CALL) && NodeUtil.isGet(first)) {\n           add(\"(0,\");\n-          addExpr(first, NodeUtil.precedence(Token.COMMA), Context.OTHER);\n           add(\")\");\n         } else {\n           addExpr(first, NodeUtil.precedence(type), context);\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1546, 
          "faulty": "return false;", 
          "type": "Delete", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 1325, 
          "faulty": "if (left.isObjectLit()) {\n  return tryFoldObjectPropAccess(n,left,right);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 08:46:01.972601364 -0500\n+++ /tmp/Arja_Defects4J_Closure_129/patches_ulrg/Patch_1054/patched/tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 09:01:47.192532878 -0500\n@@ -1322,10 +1322,6 @@\n   private Node tryFoldGetElem(Node n, Node left, Node right) {\n     Preconditions.checkArgument(n.isGetElem());\n \n-    if (left.isObjectLit()) {\n-      return tryFoldObjectPropAccess(n, left, right);\n-    }\n-\n     if (left.isArrayLit()) {\n       return tryFoldArrayAccess(n, left, right);\n     }\n\n\n--- /tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:46:01.984601380 -0500\n+++ /tmp/Arja_Defects4J_Closure_129/patches_ulrg/Patch_1054/patched/tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-01 09:01:47.192532878 -0500\n@@ -1543,7 +1543,6 @@\n       }\n     } else if (type == Token.CALL) {\n       if (this.getBooleanProp(FREE_CALL) != node.getBooleanProp(FREE_CALL)) {\n-        return false;\n       }\n     }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1546, 
          "faulty": "return false;", 
          "type": "Delete", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 1329, 
          "faulty": "if (left.isArrayLit()) {\n  return tryFoldArrayAccess(n,left,right);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 08:46:01.972601364 -0500\n+++ /tmp/Arja_Defects4J_Closure_129/patches_ulrg/Patch_1231/patched/tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 09:03:32.100360490 -0500\n@@ -1326,9 +1326,6 @@\n       return tryFoldObjectPropAccess(n, left, right);\n     }\n \n-    if (left.isArrayLit()) {\n-      return tryFoldArrayAccess(n, left, right);\n-    }\n     return n;\n   }\n \n\n\n--- /tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:46:01.984601380 -0500\n+++ /tmp/Arja_Defects4J_Closure_129/patches_ulrg/Patch_1231/patched/tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-01 09:03:32.104360485 -0500\n@@ -1543,7 +1543,6 @@\n       }\n     } else if (type == Token.CALL) {\n       if (this.getBooleanProp(FREE_CALL) != node.getBooleanProp(FREE_CALL)) {\n-        return false;\n       }\n     }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1546, 
          "faulty": "return false;", 
          "type": "Delete", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 1329, 
          "faulty": "if (left.isArrayLit()) {\n  return tryFoldArrayAccess(n,left,right);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 08:46:01.972601364 -0500\n+++ /tmp/Arja_Defects4J_Closure_129/patches_ulrg/Patch_806/patched/tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 08:59:20.644719772 -0500\n@@ -1326,9 +1326,6 @@\n       return tryFoldObjectPropAccess(n, left, right);\n     }\n \n-    if (left.isArrayLit()) {\n-      return tryFoldArrayAccess(n, left, right);\n-    }\n     return n;\n   }\n \n\n\n--- /tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:46:01.984601380 -0500\n+++ /tmp/Arja_Defects4J_Closure_129/patches_ulrg/Patch_806/patched/tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:59:20.648719772 -0500\n@@ -1543,7 +1543,6 @@\n       }\n     } else if (type == Token.CALL) {\n       if (this.getBooleanProp(FREE_CALL) != node.getBooleanProp(FREE_CALL)) {\n-        return false;\n       }\n     }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1546, 
          "faulty": "return false;", 
          "type": "Delete", 
          "seed": "this.sourcePosition=sourcePosition;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 1323, 
          "faulty": "Preconditions.checkArgument(n.isGetElem());", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/NodeUtil.java", 
          "line": 3165, 
          "faulty": "return isExpressionResultUsed(parent);", 
          "type": "Replace", 
          "seed": "break;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 08:46:01.972601364 -0500\n+++ /tmp/Arja_Defects4J_Closure_129/patches_ulrg/Patch_783/patched/tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 08:59:07.380720852 -0500\n@@ -1320,8 +1320,6 @@\n    * Try to fold array-element. e.g [1, 2, 3][10];\n    */\n   private Node tryFoldGetElem(Node n, Node left, Node right) {\n-    Preconditions.checkArgument(n.isGetElem());\n-\n     if (left.isObjectLit()) {\n       return tryFoldObjectPropAccess(n, left, right);\n     }\n\n\n--- /tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/jscomp/NodeUtil.java\t2018-12-01 08:46:01.968601359 -0500\n+++ /tmp/Arja_Defects4J_Closure_129/patches_ulrg/Patch_783/patched/tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/jscomp/NodeUtil.java\t2018-12-01 08:59:07.380720852 -0500\n@@ -3162,7 +3162,7 @@\n       case Token.EXPR_RESULT:\n         return false;\n       case Token.CAST:\n-        return isExpressionResultUsed(parent);\n+        break;\n       case Token.HOOK:\n       case Token.AND:\n       case Token.OR:\n\n\n--- /tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:46:01.984601380 -0500\n+++ /tmp/Arja_Defects4J_Closure_129/patches_ulrg/Patch_783/patched/tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:59:07.380720852 -0500\n@@ -1543,7 +1543,6 @@\n       }\n     } else if (type == Token.CALL) {\n       if (this.getBooleanProp(FREE_CALL) != node.getBooleanProp(FREE_CALL)) {\n-        return false;\n       }\n     }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1546, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 1323, 
          "faulty": "Preconditions.checkArgument(n.isGetElem());", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 08:46:01.972601364 -0500\n+++ /tmp/Arja_Defects4J_Closure_129/patches_ulrg/Patch_1213/patched/tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 09:03:20.980374016 -0500\n@@ -1320,8 +1320,6 @@\n    * Try to fold array-element. e.g [1, 2, 3][10];\n    */\n   private Node tryFoldGetElem(Node n, Node left, Node right) {\n-    Preconditions.checkArgument(n.isGetElem());\n-\n     if (left.isObjectLit()) {\n       return tryFoldObjectPropAccess(n, left, right);\n     }\n\n\n--- /tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:46:01.984601380 -0500\n+++ /tmp/Arja_Defects4J_Closure_129/patches_ulrg/Patch_1213/patched/tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-01 09:03:20.980374016 -0500\n@@ -1543,7 +1543,7 @@\n       }\n     } else if (type == Token.CALL) {\n       if (this.getBooleanProp(FREE_CALL) != node.getBooleanProp(FREE_CALL)) {\n-        return false;\n+        return true;\n       }\n     }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1546, 
          "faulty": "return false;", 
          "type": "Delete", 
          "seed": "this.sourcePosition=sourcePosition;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 1325, 
          "faulty": "if (left.isObjectLit()) {\n  return tryFoldObjectPropAccess(n,left,right);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 08:46:01.972601364 -0500\n+++ /tmp/Arja_Defects4J_Closure_129/patches_ulrg/Patch_391/patched/tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 08:55:16.016930014 -0500\n@@ -1322,10 +1322,6 @@\n   private Node tryFoldGetElem(Node n, Node left, Node right) {\n     Preconditions.checkArgument(n.isGetElem());\n \n-    if (left.isObjectLit()) {\n-      return tryFoldObjectPropAccess(n, left, right);\n-    }\n-\n     if (left.isArrayLit()) {\n       return tryFoldArrayAccess(n, left, right);\n     }\n\n\n--- /tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:46:01.984601380 -0500\n+++ /tmp/Arja_Defects4J_Closure_129/patches_ulrg/Patch_391/patched/tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:55:16.016930014 -0500\n@@ -1543,7 +1543,6 @@\n       }\n     } else if (type == Token.CALL) {\n       if (this.getBooleanProp(FREE_CALL) != node.getBooleanProp(FREE_CALL)) {\n-        return false;\n       }\n     }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1444, 
          "faulty": "return new NodeMismatch(this,node2);", 
          "type": "Replace", 
          "seed": "if (!isEquivalentTo(node2,false,false,false)) {\n  return new NodeMismatch(this,node2);\n}"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1546, 
          "faulty": "return false;", 
          "type": "Delete", 
          "seed": "return true;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:46:01.984601380 -0500\n+++ /tmp/Arja_Defects4J_Closure_129/patches_ulrg/Patch_653/patched/tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:57:48.968746607 -0500\n@@ -1441,7 +1441,9 @@\n    */\n   NodeMismatch checkTreeEqualsImpl(Node node2) {\n     if (!isEquivalentTo(node2, false, false, false)) {\n-      return new NodeMismatch(this, node2);\n+      if (!isEquivalentTo(node2, false, false, false)) {\n+\t\treturn new NodeMismatch(this, node2);\n+\t}\n     }\n \n     NodeMismatch res = null;\n@@ -1543,7 +1545,6 @@\n       }\n     } else if (type == Token.CALL) {\n       if (this.getBooleanProp(FREE_CALL) != node.getBooleanProp(FREE_CALL)) {\n-        return false;\n       }\n     }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1546, 
          "faulty": "return false;", 
          "type": "Delete", 
          "seed": "if (type == Token.STRING_KEY) {\n  int quoted1=this.getIntProp(QUOTED_PROP);\n  int quoted2=node.getIntProp(QUOTED_PROP);\n  if (quoted1 != quoted2) {\n    return false;\n  }\n}"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/ConvertToDottedProperties.java", 
          "line": 64, 
          "faulty": "compiler.reportCodeChange();", 
          "type": "Replace", 
          "seed": "break;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:46:01.984601380 -0500\n+++ /tmp/Arja_Defects4J_Closure_129/patches_ulrg/Patch_60/patched/tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:52:12.508992377 -0500\n@@ -1543,7 +1543,6 @@\n       }\n     } else if (type == Token.CALL) {\n       if (this.getBooleanProp(FREE_CALL) != node.getBooleanProp(FREE_CALL)) {\n-        return false;\n       }\n     }\n \n\n\n--- /tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/jscomp/ConvertToDottedProperties.java\t2018-12-01 08:46:01.752601087 -0500\n+++ /tmp/Arja_Defects4J_Closure_129/patches_ulrg/Patch_60/patched/tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/jscomp/ConvertToDottedProperties.java\t2018-12-01 08:52:12.508992377 -0500\n@@ -61,7 +61,7 @@\n           n.removeChild(left);\n           n.removeChild(right);\n           parent.replaceChild(n, IR.getprop(left, right));\n-          compiler.reportCodeChange();\n+          break;\n         }\n         break;\n     }\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1546, 
          "faulty": "return false;", 
          "type": "Delete", 
          "seed": "this.sourcePosition=sourcePosition;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 1323, 
          "faulty": "Preconditions.checkArgument(n.isGetElem());", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 08:46:01.972601364 -0500\n+++ /tmp/Arja_Defects4J_Closure_129/patches_ulrg/Patch_1115/patched/tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 09:02:23.436461119 -0500\n@@ -1320,8 +1320,6 @@\n    * Try to fold array-element. e.g [1, 2, 3][10];\n    */\n   private Node tryFoldGetElem(Node n, Node left, Node right) {\n-    Preconditions.checkArgument(n.isGetElem());\n-\n     if (left.isObjectLit()) {\n       return tryFoldObjectPropAccess(n, left, right);\n     }\n\n\n--- /tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:46:01.984601380 -0500\n+++ /tmp/Arja_Defects4J_Closure_129/patches_ulrg/Patch_1115/patched/tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-01 09:02:23.436461119 -0500\n@@ -1543,7 +1543,6 @@\n       }\n     } else if (type == Token.CALL) {\n       if (this.getBooleanProp(FREE_CALL) != node.getBooleanProp(FREE_CALL)) {\n-        return false;\n       }\n     }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1546, 
          "faulty": "return false;", 
          "type": "Delete", 
          "seed": "this.sourcePosition=sourcePosition;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/CodeGenerator.java", 
          "line": 531, 
          "faulty": "addExpr(first,NodeUtil.precedence(Token.COMMA),Context.OTHER);", 
          "type": "Delete", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/NodeUtil.java", 
          "line": 3165, 
          "faulty": "return isExpressionResultUsed(parent);", 
          "type": "Replace", 
          "seed": "break;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/jscomp/NodeUtil.java\t2018-12-01 08:46:01.968601359 -0500\n+++ /tmp/Arja_Defects4J_Closure_129/patches_ulrg/Patch_838/patched/tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/jscomp/NodeUtil.java\t2018-12-01 08:59:38.180719602 -0500\n@@ -3162,7 +3162,7 @@\n       case Token.EXPR_RESULT:\n         return false;\n       case Token.CAST:\n-        return isExpressionResultUsed(parent);\n+        break;\n       case Token.HOOK:\n       case Token.AND:\n       case Token.OR:\n\n\n--- /tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:46:01.984601380 -0500\n+++ /tmp/Arja_Defects4J_Closure_129/patches_ulrg/Patch_838/patched/tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:59:38.180719602 -0500\n@@ -1543,7 +1543,6 @@\n       }\n     } else if (type == Token.CALL) {\n       if (this.getBooleanProp(FREE_CALL) != node.getBooleanProp(FREE_CALL)) {\n-        return false;\n       }\n     }\n \n\n\n--- /tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/jscomp/CodeGenerator.java\t2018-12-01 08:46:01.956601345 -0500\n+++ /tmp/Arja_Defects4J_Closure_129/patches_ulrg/Patch_838/patched/tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/jscomp/CodeGenerator.java\t2018-12-01 08:59:38.184719603 -0500\n@@ -528,7 +528,6 @@\n         if (isIndirectEval(first)\n             || n.getBooleanProp(Node.FREE_CALL) && NodeUtil.isGet(first)) {\n           add(\"(0,\");\n-          addExpr(first, NodeUtil.precedence(Token.COMMA), Context.OTHER);\n           add(\")\");\n         } else {\n           addExpr(first, NodeUtil.precedence(type), context);\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1546, 
          "faulty": "return false;", 
          "type": "Delete", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 1325, 
          "faulty": "if (left.isObjectLit()) {\n  return tryFoldObjectPropAccess(n,left,right);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/CodeGenerator.java", 
          "line": 532, 
          "faulty": "add(\")\");", 
          "type": "Replace", 
          "seed": "break;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 08:46:01.972601364 -0500\n+++ /tmp/Arja_Defects4J_Closure_129/patches_ulrg/Patch_72/patched/tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 08:52:18.792998374 -0500\n@@ -1322,10 +1322,6 @@\n   private Node tryFoldGetElem(Node n, Node left, Node right) {\n     Preconditions.checkArgument(n.isGetElem());\n \n-    if (left.isObjectLit()) {\n-      return tryFoldObjectPropAccess(n, left, right);\n-    }\n-\n     if (left.isArrayLit()) {\n       return tryFoldArrayAccess(n, left, right);\n     }\n\n\n--- /tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:46:01.984601380 -0500\n+++ /tmp/Arja_Defects4J_Closure_129/patches_ulrg/Patch_72/patched/tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:52:18.792998374 -0500\n@@ -1543,7 +1543,6 @@\n       }\n     } else if (type == Token.CALL) {\n       if (this.getBooleanProp(FREE_CALL) != node.getBooleanProp(FREE_CALL)) {\n-        return false;\n       }\n     }\n \n\n\n--- /tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/jscomp/CodeGenerator.java\t2018-12-01 08:46:01.956601345 -0500\n+++ /tmp/Arja_Defects4J_Closure_129/patches_ulrg/Patch_72/patched/tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/jscomp/CodeGenerator.java\t2018-12-01 08:52:18.792998374 -0500\n@@ -529,7 +529,7 @@\n             || n.getBooleanProp(Node.FREE_CALL) && NodeUtil.isGet(first)) {\n           add(\"(0,\");\n           addExpr(first, NodeUtil.precedence(Token.COMMA), Context.OTHER);\n-          add(\")\");\n+          break;\n         } else {\n           addExpr(first, NodeUtil.precedence(type), context);\n         }\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1546, 
          "faulty": "return false;", 
          "type": "Delete", 
          "seed": "return this.getType() == Token.BLOCK;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 1325, 
          "faulty": "if (left.isObjectLit()) {\n  return tryFoldObjectPropAccess(n,left,right);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 08:46:01.972601364 -0500\n+++ /tmp/Arja_Defects4J_Closure_129/patches_ulrg/Patch_897/patched/tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 09:00:12.920723155 -0500\n@@ -1322,10 +1322,6 @@\n   private Node tryFoldGetElem(Node n, Node left, Node right) {\n     Preconditions.checkArgument(n.isGetElem());\n \n-    if (left.isObjectLit()) {\n-      return tryFoldObjectPropAccess(n, left, right);\n-    }\n-\n     if (left.isArrayLit()) {\n       return tryFoldArrayAccess(n, left, right);\n     }\n\n\n--- /tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:46:01.984601380 -0500\n+++ /tmp/Arja_Defects4J_Closure_129/patches_ulrg/Patch_897/patched/tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-01 09:00:12.920723155 -0500\n@@ -1543,7 +1543,6 @@\n       }\n     } else if (type == Token.CALL) {\n       if (this.getBooleanProp(FREE_CALL) != node.getBooleanProp(FREE_CALL)) {\n-        return false;\n       }\n     }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1546, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/CodeGenerator.java", 
          "line": 531, 
          "faulty": "addExpr(first,NodeUtil.precedence(Token.COMMA),Context.OTHER);", 
          "type": "Delete", 
          "seed": "break;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:46:01.984601380 -0500\n+++ /tmp/Arja_Defects4J_Closure_129/patches_ulrg/Patch_942/patched/tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-01 09:00:39.724709412 -0500\n@@ -1543,7 +1543,7 @@\n       }\n     } else if (type == Token.CALL) {\n       if (this.getBooleanProp(FREE_CALL) != node.getBooleanProp(FREE_CALL)) {\n-        return false;\n+        return true;\n       }\n     }\n \n\n\n--- /tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/jscomp/CodeGenerator.java\t2018-12-01 08:46:01.956601345 -0500\n+++ /tmp/Arja_Defects4J_Closure_129/patches_ulrg/Patch_942/patched/tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/jscomp/CodeGenerator.java\t2018-12-01 09:00:39.724709412 -0500\n@@ -528,7 +528,6 @@\n         if (isIndirectEval(first)\n             || n.getBooleanProp(Node.FREE_CALL) && NodeUtil.isGet(first)) {\n           add(\"(0,\");\n-          addExpr(first, NodeUtil.precedence(Token.COMMA), Context.OTHER);\n           add(\")\");\n         } else {\n           addExpr(first, NodeUtil.precedence(type), context);\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1546, 
          "faulty": "return false;", 
          "type": "Delete", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 1329, 
          "faulty": "if (left.isArrayLit()) {\n  return tryFoldArrayAccess(n,left,right);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 08:46:01.972601364 -0500\n+++ /tmp/Arja_Defects4J_Closure_129/patches_ulrg/Patch_31/patched/tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 08:51:55.840976837 -0500\n@@ -1326,9 +1326,6 @@\n       return tryFoldObjectPropAccess(n, left, right);\n     }\n \n-    if (left.isArrayLit()) {\n-      return tryFoldArrayAccess(n, left, right);\n-    }\n     return n;\n   }\n \n\n\n--- /tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:46:01.984601380 -0500\n+++ /tmp/Arja_Defects4J_Closure_129/patches_ulrg/Patch_31/patched/tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:51:55.844976841 -0500\n@@ -1543,7 +1543,6 @@\n       }\n     } else if (type == Token.CALL) {\n       if (this.getBooleanProp(FREE_CALL) != node.getBooleanProp(FREE_CALL)) {\n-        return false;\n       }\n     }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1546, 
          "faulty": "return false;", 
          "type": "Delete", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 1323, 
          "faulty": "Preconditions.checkArgument(n.isGetElem());", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 08:46:01.972601364 -0500\n+++ /tmp/Arja_Defects4J_Closure_129/patches_ulrg/Patch_541/patched/tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 08:56:42.988799924 -0500\n@@ -1320,8 +1320,6 @@\n    * Try to fold array-element. e.g [1, 2, 3][10];\n    */\n   private Node tryFoldGetElem(Node n, Node left, Node right) {\n-    Preconditions.checkArgument(n.isGetElem());\n-\n     if (left.isObjectLit()) {\n       return tryFoldObjectPropAccess(n, left, right);\n     }\n\n\n--- /tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:46:01.984601380 -0500\n+++ /tmp/Arja_Defects4J_Closure_129/patches_ulrg/Patch_541/patched/tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:56:42.988799924 -0500\n@@ -1543,7 +1543,6 @@\n       }\n     } else if (type == Token.CALL) {\n       if (this.getBooleanProp(FREE_CALL) != node.getBooleanProp(FREE_CALL)) {\n-        return false;\n       }\n     }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 132, 
          "faulty": "return \"free_call\";", 
          "type": "Replace", 
          "seed": "return \"RETURN\";"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1546, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:46:01.984601380 -0500\n+++ /tmp/Arja_Defects4J_Closure_129/patches_ulrg/Patch_259/patched/tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:54:00.021070875 -0500\n@@ -129,7 +129,7 @@\n         case IS_DISPATCHER:      return \"is_dispatcher\";\n         case DIRECTIVES:         return \"directives\";\n         case DIRECT_EVAL:        return \"direct_eval\";\n-        case FREE_CALL:          return \"free_call\";\n+        case FREE_CALL:          return \"RETURN\";\n         case STATIC_SOURCE_FILE:    return \"source_file\";\n         case INPUT_ID:  return \"input_id\";\n         case LENGTH:    return \"length\";\n@@ -1543,7 +1543,7 @@\n       }\n     } else if (type == Token.CALL) {\n       if (this.getBooleanProp(FREE_CALL) != node.getBooleanProp(FREE_CALL)) {\n-        return false;\n+        return true;\n       }\n     }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1546, 
          "faulty": "return false;", 
          "type": "Delete", 
          "seed": "return this.getType() == Token.BLOCK;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 1325, 
          "faulty": "if (left.isObjectLit()) {\n  return tryFoldObjectPropAccess(n,left,right);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 08:46:01.972601364 -0500\n+++ /tmp/Arja_Defects4J_Closure_129/patches_ulrg/Patch_1192/patched/tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 09:03:08.928389813 -0500\n@@ -1322,10 +1322,6 @@\n   private Node tryFoldGetElem(Node n, Node left, Node right) {\n     Preconditions.checkArgument(n.isGetElem());\n \n-    if (left.isObjectLit()) {\n-      return tryFoldObjectPropAccess(n, left, right);\n-    }\n-\n     if (left.isArrayLit()) {\n       return tryFoldArrayAccess(n, left, right);\n     }\n\n\n--- /tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:46:01.984601380 -0500\n+++ /tmp/Arja_Defects4J_Closure_129/patches_ulrg/Patch_1192/patched/tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-01 09:03:08.928389813 -0500\n@@ -1543,7 +1543,6 @@\n       }\n     } else if (type == Token.CALL) {\n       if (this.getBooleanProp(FREE_CALL) != node.getBooleanProp(FREE_CALL)) {\n-        return false;\n       }\n     }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1546, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 1323, 
          "faulty": "Preconditions.checkArgument(n.isGetElem());", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 08:46:01.972601364 -0500\n+++ /tmp/Arja_Defects4J_Closure_129/patches_ulrg/Patch_1125/patched/tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 09:02:29.212450972 -0500\n@@ -1320,8 +1320,6 @@\n    * Try to fold array-element. e.g [1, 2, 3][10];\n    */\n   private Node tryFoldGetElem(Node n, Node left, Node right) {\n-    Preconditions.checkArgument(n.isGetElem());\n-\n     if (left.isObjectLit()) {\n       return tryFoldObjectPropAccess(n, left, right);\n     }\n\n\n--- /tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:46:01.984601380 -0500\n+++ /tmp/Arja_Defects4J_Closure_129/patches_ulrg/Patch_1125/patched/tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-01 09:02:29.216450965 -0500\n@@ -1543,7 +1543,7 @@\n       }\n     } else if (type == Token.CALL) {\n       if (this.getBooleanProp(FREE_CALL) != node.getBooleanProp(FREE_CALL)) {\n-        return false;\n+        return true;\n       }\n     }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1546, 
          "faulty": "return false;", 
          "type": "Delete", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 1329, 
          "faulty": "if (left.isArrayLit()) {\n  return tryFoldArrayAccess(n,left,right);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 08:46:01.972601364 -0500\n+++ /tmp/Arja_Defects4J_Closure_129/patches_ulrg/Patch_1326/patched/tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 09:04:27.112306980 -0500\n@@ -1326,9 +1326,6 @@\n       return tryFoldObjectPropAccess(n, left, right);\n     }\n \n-    if (left.isArrayLit()) {\n-      return tryFoldArrayAccess(n, left, right);\n-    }\n     return n;\n   }\n \n\n\n--- /tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:46:01.984601380 -0500\n+++ /tmp/Arja_Defects4J_Closure_129/patches_ulrg/Patch_1326/patched/tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-01 09:04:27.112306980 -0500\n@@ -1543,7 +1543,6 @@\n       }\n     } else if (type == Token.CALL) {\n       if (this.getBooleanProp(FREE_CALL) != node.getBooleanProp(FREE_CALL)) {\n-        return false;\n       }\n     }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1546, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:46:01.984601380 -0500\n+++ /tmp/Arja_Defects4J_Closure_129/patches_ulrg/Patch_12/patched/tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:51:44.068966196 -0500\n@@ -1543,7 +1543,7 @@\n       }\n     } else if (type == Token.CALL) {\n       if (this.getBooleanProp(FREE_CALL) != node.getBooleanProp(FREE_CALL)) {\n-        return false;\n+        return true;\n       }\n     }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1546, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 1323, 
          "faulty": "Preconditions.checkArgument(n.isGetElem());", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 08:46:01.972601364 -0500\n+++ /tmp/Arja_Defects4J_Closure_129/patches_ulrg/Patch_748/patched/tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 08:58:45.652724518 -0500\n@@ -1320,8 +1320,6 @@\n    * Try to fold array-element. e.g [1, 2, 3][10];\n    */\n   private Node tryFoldGetElem(Node n, Node left, Node right) {\n-    Preconditions.checkArgument(n.isGetElem());\n-\n     if (left.isObjectLit()) {\n       return tryFoldObjectPropAccess(n, left, right);\n     }\n\n\n--- /tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:46:01.984601380 -0500\n+++ /tmp/Arja_Defects4J_Closure_129/patches_ulrg/Patch_748/patched/tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:58:45.656724517 -0500\n@@ -1543,7 +1543,7 @@\n       }\n     } else if (type == Token.CALL) {\n       if (this.getBooleanProp(FREE_CALL) != node.getBooleanProp(FREE_CALL)) {\n-        return false;\n+        return true;\n       }\n     }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1457, 
          "faulty": "return res;", 
          "type": "Delete", 
          "seed": "return new NodeMismatch(this,node2);"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1546, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:46:01.984601380 -0500\n+++ /tmp/Arja_Defects4J_Closure_129/patches_ulrg/Patch_186/patched/tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:53:18.301058533 -0500\n@@ -1454,7 +1454,6 @@\n       }\n       res = n.checkTreeEqualsImpl(n2);\n       if (res != null) {\n-        return res;\n       }\n     }\n     return res;\n@@ -1543,7 +1542,7 @@\n       }\n     } else if (type == Token.CALL) {\n       if (this.getBooleanProp(FREE_CALL) != node.getBooleanProp(FREE_CALL)) {\n-        return false;\n+        return true;\n       }\n     }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1546, 
          "faulty": "return false;", 
          "type": "Delete", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 1323, 
          "faulty": "Preconditions.checkArgument(n.isGetElem());", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 08:46:01.972601364 -0500\n+++ /tmp/Arja_Defects4J_Closure_129/patches_ulrg/Patch_650/patched/tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 08:57:47.668747350 -0500\n@@ -1320,8 +1320,6 @@\n    * Try to fold array-element. e.g [1, 2, 3][10];\n    */\n   private Node tryFoldGetElem(Node n, Node left, Node right) {\n-    Preconditions.checkArgument(n.isGetElem());\n-\n     if (left.isObjectLit()) {\n       return tryFoldObjectPropAccess(n, left, right);\n     }\n\n\n--- /tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:46:01.984601380 -0500\n+++ /tmp/Arja_Defects4J_Closure_129/patches_ulrg/Patch_650/patched/tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:57:47.672747347 -0500\n@@ -1543,7 +1543,6 @@\n       }\n     } else if (type == Token.CALL) {\n       if (this.getBooleanProp(FREE_CALL) != node.getBooleanProp(FREE_CALL)) {\n-        return false;\n       }\n     }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1428, 
          "faulty": "return \"Node tree inequality:\" + \"\\nTree1:\\n\" + toStringTree() + \"\\n\\nTree2:\\n\"+ node2.toStringTree()+ \"\\n\\nSubtree1: \"+ diff.nodeA.toStringTree()+ \"\\n\\nSubtree2: \"+ diff.nodeB.toStringTree();", 
          "type": "InsertBefore", 
          "seed": "sourcePosition=-1;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1546, 
          "faulty": "return false;", 
          "type": "Delete", 
          "seed": "this.sourcePosition=sourcePosition;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 1332, 
          "faulty": "return n;", 
          "type": "Replace", 
          "seed": "return null;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 08:46:01.972601364 -0500\n+++ /tmp/Arja_Defects4J_Closure_129/patches_ulrg/Patch_236/patched/tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 08:53:47.297089800 -0500\n@@ -1329,7 +1329,7 @@\n     if (left.isArrayLit()) {\n       return tryFoldArrayAccess(n, left, right);\n     }\n-    return n;\n+    return null;\n   }\n \n   /**\n\n\n--- /tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:46:01.984601380 -0500\n+++ /tmp/Arja_Defects4J_Closure_129/patches_ulrg/Patch_236/patched/tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:53:47.297089800 -0500\n@@ -1425,7 +1425,8 @@\n   public String checkTreeEquals(Node node2) {\n       NodeMismatch diff = checkTreeEqualsImpl(node2);\n       if (diff != null) {\n-        return \"Node tree inequality:\" +\n+        sourcePosition = -1;\n+\t\treturn \"Node tree inequality:\" +\n             \"\\nTree1:\\n\" + toStringTree() +\n             \"\\n\\nTree2:\\n\" + node2.toStringTree() +\n             \"\\n\\nSubtree1: \" + diff.nodeA.toStringTree() +\n@@ -1543,7 +1544,6 @@\n       }\n     } else if (type == Token.CALL) {\n       if (this.getBooleanProp(FREE_CALL) != node.getBooleanProp(FREE_CALL)) {\n-        return false;\n       }\n     }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1546, 
          "faulty": "return false;", 
          "type": "Delete", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/NodeUtil.java", 
          "line": 3165, 
          "faulty": "return isExpressionResultUsed(parent);", 
          "type": "Replace", 
          "seed": "break;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/jscomp/NodeUtil.java\t2018-12-01 08:46:01.968601359 -0500\n+++ /tmp/Arja_Defects4J_Closure_129/patches_ulrg/Patch_215/patched/tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/jscomp/NodeUtil.java\t2018-12-01 08:53:35.429076862 -0500\n@@ -3162,7 +3162,7 @@\n       case Token.EXPR_RESULT:\n         return false;\n       case Token.CAST:\n-        return isExpressionResultUsed(parent);\n+        break;\n       case Token.HOOK:\n       case Token.AND:\n       case Token.OR:\n\n\n--- /tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:46:01.984601380 -0500\n+++ /tmp/Arja_Defects4J_Closure_129/patches_ulrg/Patch_215/patched/tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:53:35.433076867 -0500\n@@ -1543,7 +1543,6 @@\n       }\n     } else if (type == Token.CALL) {\n       if (this.getBooleanProp(FREE_CALL) != node.getBooleanProp(FREE_CALL)) {\n-        return false;\n       }\n     }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 132, 
          "faulty": "return \"free_call\";", 
          "type": "Replace", 
          "seed": "return \"BLOCK\";"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1546, 
          "faulty": "return false;", 
          "type": "Delete", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 122, 
          "faulty": "return tryFoldGetElem(subtree,left,right);", 
          "type": "Replace", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 1329, 
          "faulty": "if (left.isArrayLit()) {\n  return tryFoldArrayAccess(n,left,right);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 08:46:01.972601364 -0500\n+++ /tmp/Arja_Defects4J_Closure_129/patches_ulrg/Patch_818/patched/tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 08:59:27.776719535 -0500\n@@ -119,7 +119,7 @@\n         return tryFoldGetProp(subtree, left, right);\n \n       case Token.GETELEM:\n-        return tryFoldGetElem(subtree, left, right);\n+        return null;\n \n       case Token.INSTANCEOF:\n         return tryFoldInstanceof(subtree, left, right);\n@@ -1326,9 +1326,6 @@\n       return tryFoldObjectPropAccess(n, left, right);\n     }\n \n-    if (left.isArrayLit()) {\n-      return tryFoldArrayAccess(n, left, right);\n-    }\n     return n;\n   }\n \n\n\n--- /tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:46:01.984601380 -0500\n+++ /tmp/Arja_Defects4J_Closure_129/patches_ulrg/Patch_818/patched/tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:59:27.776719535 -0500\n@@ -129,7 +129,7 @@\n         case IS_DISPATCHER:      return \"is_dispatcher\";\n         case DIRECTIVES:         return \"directives\";\n         case DIRECT_EVAL:        return \"direct_eval\";\n-        case FREE_CALL:          return \"free_call\";\n+        case FREE_CALL:          return \"BLOCK\";\n         case STATIC_SOURCE_FILE:    return \"source_file\";\n         case INPUT_ID:  return \"input_id\";\n         case LENGTH:    return \"length\";\n@@ -1543,7 +1543,6 @@\n       }\n     } else if (type == Token.CALL) {\n       if (this.getBooleanProp(FREE_CALL) != node.getBooleanProp(FREE_CALL)) {\n-        return false;\n       }\n     }\n \n\n\n"
    }
  ]
}