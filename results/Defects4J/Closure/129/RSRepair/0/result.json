{
  "repair_end": "2018-12-02 11:38:44.349856", 
  "repair_begin": "2018-12-02 11:18:27.972440", 
  "patches": [
    {
      "diff": "--- /tmp/RSRepair_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:18:05.745242773 -0500\n+++ /tmp/RSRepair_Defects4J_Closure_129/patches_3llp/Patch_576/patched/tmp/RSRepair_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:34:09.229882279 -0500\n@@ -1543,7 +1543,7 @@\n       }\n     } else if (type == Token.CALL) {\n       if (this.getBooleanProp(FREE_CALL) != node.getBooleanProp(FREE_CALL)) {\n-        return false;\n+        NodeMismatch res = null;\n       }\n     }\n \n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1546, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "NodeMismatch res=null;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/RSRepair_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:18:05.745242773 -0500\n+++ /tmp/RSRepair_Defects4J_Closure_129/patches_3llp/Patch_433/patched/tmp/RSRepair_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:32:06.085284965 -0500\n@@ -1543,7 +1543,7 @@\n       }\n     } else if (type == Token.CALL) {\n       if (this.getBooleanProp(FREE_CALL) != node.getBooleanProp(FREE_CALL)) {\n-        return false;\n+        Node block = new Node(Token.SCRIPT);\n       }\n     }\n \n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1546, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "Node block=new Node(Token.SCRIPT);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/RSRepair_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:18:05.745242773 -0500\n+++ /tmp/RSRepair_Defects4J_Closure_129/patches_3llp/Patch_681/patched/tmp/RSRepair_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:35:43.918346851 -0500\n@@ -1543,7 +1543,7 @@\n       }\n     } else if (type == Token.CALL) {\n       if (this.getBooleanProp(FREE_CALL) != node.getBooleanProp(FREE_CALL)) {\n-        return false;\n+        PropListItem x = propListHead;\n       }\n     }\n \n\n\n--- /tmp/RSRepair_Defects4J_Closure_129/src/com/google/javascript/jscomp/NodeUtil.java\t2018-12-02 05:18:05.725242672 -0500\n+++ /tmp/RSRepair_Defects4J_Closure_129/patches_3llp/Patch_681/patched/tmp/RSRepair_Defects4J_Closure_129/src/com/google/javascript/jscomp/NodeUtil.java\t2018-12-02 05:35:43.918346851 -0500\n@@ -3162,7 +3162,7 @@\n       case Token.EXPR_RESULT:\n         return false;\n       case Token.CAST:\n-        return isExpressionResultUsed(parent);\n+        final String PARAM_NAME = \"jscomp_throw_param\";\n       case Token.HOOK:\n       case Token.AND:\n       case Token.OR:\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/NodeUtil.java", 
          "line": 3165, 
          "faulty": "return isExpressionResultUsed(parent);", 
          "type": "Replace", 
          "seed": "final String PARAM_NAME=\"jscomp_throw_param\";"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1546, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "PropListItem x=propListHead;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/RSRepair_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:18:05.745242773 -0500\n+++ /tmp/RSRepair_Defects4J_Closure_129/patches_3llp/Patch_4/patched/tmp/RSRepair_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:25:37.815380673 -0500\n@@ -1543,7 +1543,7 @@\n       }\n     } else if (type == Token.CALL) {\n       if (this.getBooleanProp(FREE_CALL) != node.getBooleanProp(FREE_CALL)) {\n-        return false;\n+        int slashV1 = this.getIntProp(SLASH_V);\n       }\n     }\n \n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1546, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "int slashV1=this.getIntProp(SLASH_V);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/RSRepair_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:18:05.745242773 -0500\n+++ /tmp/RSRepair_Defects4J_Closure_129/patches_3llp/Patch_810/patched/tmp/RSRepair_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:37:35.330898222 -0500\n@@ -1543,7 +1543,7 @@\n       }\n     } else if (type == Token.CALL) {\n       if (this.getBooleanProp(FREE_CALL) != node.getBooleanProp(FREE_CALL)) {\n-        return false;\n+        int post1 = this.getIntProp(INCRDECR_PROP);\n       }\n     }\n \n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1546, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "int post1=this.getIntProp(INCRDECR_PROP);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/RSRepair_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:18:05.745242773 -0500\n+++ /tmp/RSRepair_Defects4J_Closure_129/patches_3llp/Patch_698/patched/tmp/RSRepair_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:35:58.182417177 -0500\n@@ -1425,7 +1425,8 @@\n   public String checkTreeEquals(Node node2) {\n       NodeMismatch diff = checkTreeEqualsImpl(node2);\n       if (diff != null) {\n-        return \"Node tree inequality:\" +\n+        StringBuilder sb = new StringBuilder();\n+\t\treturn \"Node tree inequality:\" +\n             \"\\nTree1:\\n\" + toStringTree() +\n             \"\\n\\nTree2:\\n\" + node2.toStringTree() +\n             \"\\n\\nSubtree1: \" + diff.nodeA.toStringTree() +\n@@ -1543,7 +1544,6 @@\n       }\n     } else if (type == Token.CALL) {\n       if (this.getBooleanProp(FREE_CALL) != node.getBooleanProp(FREE_CALL)) {\n-        return false;\n       }\n     }\n \n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1428, 
          "faulty": "return \"Node tree inequality:\" + \"\\nTree1:\\n\" + toStringTree() + \"\\n\\nTree2:\\n\"+ node2.toStringTree()+ \"\\n\\nSubtree1: \"+ diff.nodeA.toStringTree()+ \"\\n\\nSubtree2: \"+ diff.nodeB.toStringTree();", 
          "type": "InsertBefore", 
          "seed": "StringBuilder sb=new StringBuilder();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1546, 
          "faulty": "return false;", 
          "type": "Delete", 
          "seed": "return this;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/RSRepair_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:18:05.745242773 -0500\n+++ /tmp/RSRepair_Defects4J_Closure_129/patches_3llp/Patch_11/patched/tmp/RSRepair_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:25:43.439407688 -0500\n@@ -1543,7 +1543,6 @@\n       }\n     } else if (type == Token.CALL) {\n       if (this.getBooleanProp(FREE_CALL) != node.getBooleanProp(FREE_CALL)) {\n-        return false;\n       }\n     }\n \n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1546, 
          "faulty": "return false;", 
          "type": "Delete", 
          "seed": "return \"PARAM_LIST\";"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/RSRepair_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:18:05.745242773 -0500\n+++ /tmp/RSRepair_Defects4J_Closure_129/patches_3llp/Patch_439/patched/tmp/RSRepair_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:32:10.797307658 -0500\n@@ -1543,7 +1543,7 @@\n       }\n     } else if (type == Token.CALL) {\n       if (this.getBooleanProp(FREE_CALL) != node.getBooleanProp(FREE_CALL)) {\n-        return false;\n+        int[] keys = getSortedPropTypes();\n       }\n     }\n \n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1546, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "int[] keys=getSortedPropTypes();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/RSRepair_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:18:05.745242773 -0500\n+++ /tmp/RSRepair_Defects4J_Closure_129/patches_3llp/Patch_282/patched/tmp/RSRepair_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:29:52.548622462 -0500\n@@ -1543,7 +1543,7 @@\n       }\n     } else if (type == Token.CALL) {\n       if (this.getBooleanProp(FREE_CALL) != node.getBooleanProp(FREE_CALL)) {\n-        return false;\n+        StaticSourceFile file = getStaticSourceFile();\n       }\n     }\n \n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1546, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "StaticSourceFile file=getStaticSourceFile();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/RSRepair_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:18:05.745242773 -0500\n+++ /tmp/RSRepair_Defects4J_Closure_129/patches_3llp/Patch_78/patched/tmp/RSRepair_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:26:48.519721795 -0500\n@@ -1543,7 +1543,9 @@\n       }\n     } else if (type == Token.CALL) {\n       if (this.getBooleanProp(FREE_CALL) != node.getBooleanProp(FREE_CALL)) {\n-        return false;\n+        if (compareJsType && !JSType.isEquivalent(jsType, node.getJSType())) {\n+\t\t\treturn false;\n+\t\t}\n       }\n     }\n \n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1546, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "if (compareJsType && !JSType.isEquivalent(jsType,node.getJSType())) {\n  return false;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/RSRepair_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:18:05.745242773 -0500\n+++ /tmp/RSRepair_Defects4J_Closure_129/patches_3llp/Patch_545/patched/tmp/RSRepair_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:33:41.945749214 -0500\n@@ -1543,7 +1543,7 @@\n       }\n     } else if (type == Token.CALL) {\n       if (this.getBooleanProp(FREE_CALL) != node.getBooleanProp(FREE_CALL)) {\n-        return false;\n+        return true;\n       }\n     }\n \n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1546, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/RSRepair_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:18:05.745242773 -0500\n+++ /tmp/RSRepair_Defects4J_Closure_129/patches_3llp/Patch_405/patched/tmp/RSRepair_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:31:43.077170522 -0500\n@@ -1543,7 +1543,7 @@\n       }\n     } else if (type == Token.CALL) {\n       if (this.getBooleanProp(FREE_CALL) != node.getBooleanProp(FREE_CALL)) {\n-        return false;\n+        StringBuilder s = new StringBuilder();\n       }\n     }\n \n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1546, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "StringBuilder s=new StringBuilder();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/RSRepair_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:18:05.745242773 -0500\n+++ /tmp/RSRepair_Defects4J_Closure_129/patches_3llp/Patch_419/patched/tmp/RSRepair_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:31:54.157225705 -0500\n@@ -1543,7 +1543,13 @@\n       }\n     } else if (type == Token.CALL) {\n       if (this.getBooleanProp(FREE_CALL) != node.getBooleanProp(FREE_CALL)) {\n-        return false;\n+        if (type == Token.STRING_KEY) {\n+\t\t\tint quoted1 = this.getIntProp(QUOTED_PROP);\n+\t\t\tint quoted2 = node.getIntProp(QUOTED_PROP);\n+\t\t\tif (quoted1 != quoted2) {\n+\t\t\t\treturn false;\n+\t\t\t}\n+\t\t}\n       }\n     }\n \n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1546, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "if (type == Token.STRING_KEY) {\n  int quoted1=this.getIntProp(QUOTED_PROP);\n  int quoted2=node.getIntProp(QUOTED_PROP);\n  if (quoted1 != quoted2) {\n    return false;\n  }\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/RSRepair_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:18:05.745242773 -0500\n+++ /tmp/RSRepair_Defects4J_Closure_129/patches_3llp/Patch_493/patched/tmp/RSRepair_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:32:57.729534414 -0500\n@@ -1543,7 +1543,7 @@\n       }\n     } else if (type == Token.CALL) {\n       if (this.getBooleanProp(FREE_CALL) != node.getBooleanProp(FREE_CALL)) {\n-        return false;\n+        parent = null;\n       }\n     }\n \n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1546, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "parent=null;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/RSRepair_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:18:05.745242773 -0500\n+++ /tmp/RSRepair_Defects4J_Closure_129/patches_3llp/Patch_537/patched/tmp/RSRepair_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:33:35.789719245 -0500\n@@ -1454,7 +1454,7 @@\n       }\n       res = n.checkTreeEqualsImpl(n2);\n       if (res != null) {\n-        return res;\n+        return null;\n       }\n     }\n     return res;\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1457, 
          "faulty": "return res;", 
          "type": "Replace", 
          "seed": "return null;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/RSRepair_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:18:05.745242773 -0500\n+++ /tmp/RSRepair_Defects4J_Closure_129/patches_3llp/Patch_475/patched/tmp/RSRepair_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:32:42.289459668 -0500\n@@ -1543,7 +1543,7 @@\n       }\n     } else if (type == Token.CALL) {\n       if (this.getBooleanProp(FREE_CALL) != node.getBooleanProp(FREE_CALL)) {\n-        return false;\n+        this.sourcePosition = sourcePosition;\n       }\n     }\n \n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1546, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "this.sourcePosition=sourcePosition;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/RSRepair_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:18:05.745242773 -0500\n+++ /tmp/RSRepair_Defects4J_Closure_129/patches_3llp/Patch_630/patched/tmp/RSRepair_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:34:58.334122690 -0500\n@@ -1543,7 +1543,7 @@\n       }\n     } else if (type == Token.CALL) {\n       if (this.getBooleanProp(FREE_CALL) != node.getBooleanProp(FREE_CALL)) {\n-        return false;\n+        Node block = new Node(Token.BLOCK);\n       }\n     }\n \n\n\n--- /tmp/RSRepair_Defects4J_Closure_129/src/com/google/javascript/jscomp/CodeGenerator.java\t2018-12-02 05:18:05.713242611 -0500\n+++ /tmp/RSRepair_Defects4J_Closure_129/patches_3llp/Patch_630/patched/tmp/RSRepair_Defects4J_Closure_129/src/com/google/javascript/jscomp/CodeGenerator.java\t2018-12-02 05:34:58.338122709 -0500\n@@ -529,7 +529,7 @@\n             || n.getBooleanProp(Node.FREE_CALL) && NodeUtil.isGet(first)) {\n           add(\"(0,\");\n           addExpr(first, NodeUtil.precedence(Token.COMMA), Context.OTHER);\n-          add(\")\");\n+          break;\n         } else {\n           addExpr(first, NodeUtil.precedence(type), context);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/CodeGenerator.java", 
          "line": 532, 
          "faulty": "add(\")\");", 
          "type": "Replace", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1546, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "Node block=new Node(Token.BLOCK);"
        }
      ]
    }
  ]
}